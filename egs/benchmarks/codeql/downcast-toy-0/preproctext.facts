#ifndef _STDC_PREDEF_H	_STDC_PREDEF_H	
#ifdef __GCC_IEC_559	__GCC_IEC_559	
#if __GCC_IEC_559 > 0	__GCC_IEC_559 > 0	
#ifdef __GCC_IEC_559_COMPLEX	__GCC_IEC_559_COMPLEX	
#if __GCC_IEC_559_COMPLEX > 0	__GCC_IEC_559_COMPLEX > 0	
#define _STDC_PREDEF_H 1	_STDC_PREDEF_H	1
#define __SYSCALL_WORDSIZE 64	__SYSCALL_WORDSIZE	64
#define __WORDSIZE_TIME64_COMPAT32 1	__WORDSIZE_TIME64_COMPAT32	1
#define __WORDSIZE 64	__WORDSIZE	64
#if defined __x86_64__ && !defined __ILP32__	defined __x86_64__ && !defined __ILP32__	
#ifdef __x86_64__	__x86_64__	
#define __x86_64__ 1	__x86_64__	1
#include <bits/long-double.h>	<bits/long-double.h>	
#include <bits/wordsize.h>	<bits/wordsize.h>	
#define __HAVE_GENERIC_SELECTION 1	__HAVE_GENERIC_SELECTION	1
#define __glibc_macro_warning(message) __glibc_macro_warning1 (GCC warning message)	__glibc_macro_warning(message)	__glibc_macro_warning1 (GCC warning message)
#define __glibc_macro_warning1(message) _Pragma (#message)	__glibc_macro_warning1(message)	_Pragma (#message)
#define __REDIRECT_NTH_LDBL(name,proto,alias) __REDIRECT_NTH (name, proto, alias)	__REDIRECT_NTH_LDBL(name,proto,alias)	__REDIRECT_NTH (name, proto, alias)
#define __REDIRECT_LDBL(name,proto,alias) __REDIRECT (name, proto, alias)	__REDIRECT_LDBL(name,proto,alias)	__REDIRECT (name, proto, alias)
#define __LDBL_REDIR_DECL(name)	__LDBL_REDIR_DECL(name)	
#define __LDBL_REDIR_NTH(name,proto) name proto __THROW	__LDBL_REDIR_NTH(name,proto)	name proto __THROW
#define __LDBL_REDIR1_NTH(name,proto,alias) name proto __THROW	__LDBL_REDIR1_NTH(name,proto,alias)	name proto __THROW
#define __LDBL_REDIR(name,proto) name proto	__LDBL_REDIR(name,proto)	name proto
#define __LDBL_REDIR1(name,proto,alias) name proto	__LDBL_REDIR1(name,proto,alias)	name proto
#define __attribute_nonstring__	__attribute_nonstring__	
#define __glibc_likely(cond) __builtin_expect ((cond), 1)	__glibc_likely(cond)	__builtin_expect ((cond), 1)
#define __glibc_unlikely(cond) __builtin_expect ((cond), 0)	__glibc_unlikely(cond)	__builtin_expect ((cond), 0)
#define __restrict_arr __restrict	__restrict_arr	__restrict
#define __va_arg_pack_len() __builtin_va_arg_pack_len ()	__va_arg_pack_len()	__builtin_va_arg_pack_len ()
#define __va_arg_pack() __builtin_va_arg_pack ()	__va_arg_pack()	__builtin_va_arg_pack ()
#define __fortify_function __extern_always_inline __attribute_artificial__	__fortify_function	__extern_always_inline __attribute_artificial__
#define __extern_always_inline extern __always_inline __attribute__ ((__gnu_inline__))	__extern_always_inline	extern __always_inline __attribute__ ((__gnu_inline__))
#define __extern_inline extern __inline __attribute__ ((__gnu_inline__))	__extern_inline	extern __inline __attribute__ ((__gnu_inline__))
#define __attribute_artificial__ __attribute__ ((__artificial__))	__attribute_artificial__	__attribute__ ((__artificial__))
#define __always_inline __inline __attribute__ ((__always_inline__))	__always_inline	__inline __attribute__ ((__always_inline__))
#undef __always_inline	__always_inline	
#define __wur	__wur	
#define __attribute_warn_unused_result__ __attribute__ ((__warn_unused_result__))	__attribute_warn_unused_result__	__attribute__ ((__warn_unused_result__))
#define __nonnull(params) __attribute__ ((__nonnull__ params))	__nonnull(params)	__attribute__ ((__nonnull__ params))
#define __attribute_format_strfmon__(a,b) __attribute__ ((__format__ (__strfmon__, a, b)))	__attribute_format_strfmon__(a,b)	__attribute__ ((__format__ (__strfmon__, a, b)))
#define __attribute_format_arg__(x) __attribute__ ((__format_arg__ (x)))	__attribute_format_arg__(x)	__attribute__ ((__format_arg__ (x)))
#define __attribute_deprecated_msg__(msg) __attribute__ ((__deprecated__ (msg)))	__attribute_deprecated_msg__(msg)	__attribute__ ((__deprecated__ (msg)))
#define __attribute_deprecated__ __attribute__ ((__deprecated__))	__attribute_deprecated__	__attribute__ ((__deprecated__))
#define __attribute_noinline__ __attribute__ ((__noinline__))	__attribute_noinline__	__attribute__ ((__noinline__))
#define __attribute_used__ __attribute__ ((__used__))	__attribute_used__	__attribute__ ((__used__))
#define __attribute_const__ __attribute__ ((__const__))	__attribute_const__	__attribute__ ((__const__))
#define __attribute_pure__ __attribute__ ((__pure__))	__attribute_pure__	__attribute__ ((__pure__))
#define __attribute_alloc_size__(params) __attribute__ ((__alloc_size__ params))	__attribute_alloc_size__(params)	__attribute__ ((__alloc_size__ params))
#define __attribute_malloc__ __attribute__ ((__malloc__))	__attribute_malloc__	__attribute__ ((__malloc__))
#define __ASMNAME2(prefix,cname) __STRING (prefix) cname	__ASMNAME2(prefix,cname)	__STRING (prefix) cname
#define __ASMNAME(cname) __ASMNAME2 (__USER_LABEL_PREFIX__, cname)	__ASMNAME(cname)	__ASMNAME2 (__USER_LABEL_PREFIX__, cname)
#define __REDIRECT_NTHNL(name,proto,alias) name proto __asm__ (__ASMNAME (#alias)) __THROWNL	__REDIRECT_NTHNL(name,proto,alias)	name proto __asm__ (__ASMNAME (#alias)) __THROWNL
#define __REDIRECT_NTH(name,proto,alias) name proto __asm__ (__ASMNAME (#alias)) __THROW	__REDIRECT_NTH(name,proto,alias)	name proto __asm__ (__ASMNAME (#alias)) __THROW
#define __REDIRECT(name,proto,alias) name proto __asm__ (__ASMNAME (#alias))	__REDIRECT(name,proto,alias)	name proto __asm__ (__ASMNAME (#alias))
#define __glibc_c99_flexarr_available 1	__glibc_c99_flexarr_available	1
#define __flexarr []	__flexarr	[]
#define __errordecl(name,msg) extern void name (void) __attribute__((__error__ (msg)))	__errordecl(name,msg)	extern void name (void) __attribute__((__error__ (msg)))
#define __warnattr(msg) __attribute__((__warning__ (msg)))	__warnattr(msg)	__attribute__((__warning__ (msg)))
#define __warndecl(name,msg) extern void name (void) __attribute__((__warning__ (msg)))	__warndecl(name,msg)	extern void name (void) __attribute__((__warning__ (msg)))
#define __bos0(ptr) __builtin_object_size (ptr, 0)	__bos0(ptr)	__builtin_object_size (ptr, 0)
#define __bos(ptr) __builtin_object_size (ptr, __USE_FORTIFY_LEVEL > 1)	__bos(ptr)	__builtin_object_size (ptr, __USE_FORTIFY_LEVEL > 1)
#define __END_DECLS	__END_DECLS	
#define __BEGIN_DECLS	__BEGIN_DECLS	
#define __ptr_t void *	__ptr_t	void *
#define __STRING(x) #x	__STRING(x)	#x
#define __CONCAT(x,y) x ## y	__CONCAT(x,y)	x ## y
#define __PMT(args) args	__PMT(args)	args
#define __P(args) args	__P(args)	args
#define __glibc_clang_has_extension(ext) 0	__glibc_clang_has_extension(ext)	0
#define __NTHNL(fct) __attribute__ ((__nothrow__)) fct	__NTHNL(fct)	__attribute__ ((__nothrow__)) fct
#define __NTH(fct) __attribute__ ((__nothrow__ __LEAF)) fct	__NTH(fct)	__attribute__ ((__nothrow__ __LEAF)) fct
#define __THROWNL __attribute__ ((__nothrow__))	__THROWNL	__attribute__ ((__nothrow__))
#define __THROW __attribute__ ((__nothrow__ __LEAF))	__THROW	__attribute__ ((__nothrow__ __LEAF))
#define __LEAF_ATTR __attribute__ ((__leaf__))	__LEAF_ATTR	__attribute__ ((__leaf__))
#define __LEAF , __leaf__	__LEAF	, __leaf__
#undef __PMT	__PMT	
#undef __P	__P	
#define _SYS_CDEFS_H 1	_SYS_CDEFS_H	1
#ifndef _SYS_CDEFS_H	_SYS_CDEFS_H	
#ifndef _FEATURES_H	_FEATURES_H	
#if defined __GNUC__ && !defined __STDC__	defined __GNUC__ && !defined __STDC__	
#ifdef __GNUC__	__GNUC__	
#if __GNUC_PREREQ (4, 6) && !defined _LIBC	__GNUC_PREREQ (4, 6) && !defined _LIBC	
#if !defined __cplusplus && __GNUC_PREREQ (3, 3)	!defined __cplusplus && __GNUC_PREREQ (3, 3)	
#if defined __cplusplus && __GNUC_PREREQ (2,8)	defined __cplusplus && __GNUC_PREREQ (2,8)	
#if defined __clang__ && defined __has_extension	defined __clang__ && defined __has_extension	
#ifdef __cplusplus	__cplusplus	
#if __GNUC_PREREQ (4,3)	__GNUC_PREREQ (4,3)	
#if defined __STDC_VERSION__ && __STDC_VERSION__ >= 199901L	defined __STDC_VERSION__ && __STDC_VERSION__ >= 199901L	
#elif __GNUC_PREREQ (2,97)	__GNUC_PREREQ (2,97)	
#elif defined __GNUC__	defined __GNUC__	
#if defined __GNUC__ && __GNUC__ >= 2	defined __GNUC__ && __GNUC__ >= 2	
#ifdef __cplusplus	__cplusplus	
#if !defined __GNUC__ || __GNUC__ < 2	!defined __GNUC__ || __GNUC__ < 2	
#if __GNUC_PREREQ (2,96)	__GNUC_PREREQ (2,96)	
#if __GNUC_PREREQ (4, 3)	__GNUC_PREREQ (4, 3)	
#if __GNUC_PREREQ (2,96)	__GNUC_PREREQ (2,96)	
#if __GNUC_PREREQ (2,5)	__GNUC_PREREQ (2,5)	
#if __GNUC_PREREQ (3,1)	__GNUC_PREREQ (3,1)	
#if __GNUC_PREREQ (3,2)	__GNUC_PREREQ (3,2)	
#if __GNUC_PREREQ (4,5) || \	__GNUC_PREREQ (4,5) || \	
#if __GNUC_PREREQ (2,8)	__GNUC_PREREQ (2,8)	
#if __GNUC_PREREQ (2,97)	__GNUC_PREREQ (2,97)	
#if __GNUC_PREREQ (3,3)	__GNUC_PREREQ (3,3)	
#if __GNUC_PREREQ (3,4)	__GNUC_PREREQ (3,4)	
#if __USE_FORTIFY_LEVEL > 0	__USE_FORTIFY_LEVEL > 0	
#ifndef __wur	__wur	
#if __GNUC_PREREQ (3,2)	__GNUC_PREREQ (3,2)	
#if __GNUC_PREREQ (4,3)	__GNUC_PREREQ (4,3)	
#if (!defined __cplusplus || __GNUC_PREREQ (4,3) \	(!defined __cplusplus || __GNUC_PREREQ (4,3) \	
#if defined __GNUC_STDC_INLINE__ || defined __cplusplus	defined __GNUC_STDC_INLINE__ || defined __cplusplus	
#ifdef __extern_always_inline	__extern_always_inline	
#if __GNUC_PREREQ (4,3)	__GNUC_PREREQ (4,3)	
#if !__GNUC_PREREQ (2,8)	!__GNUC_PREREQ (2,8)	
#if !__GNUC_PREREQ (2,92)	!__GNUC_PREREQ (2,92)	
#if __GNUC_PREREQ (3,1) && !defined __GNUG__	__GNUC_PREREQ (3,1) && !defined __GNUG__	
#ifdef __GNUC__	__GNUC__	
#if defined __STDC_VERSION__ && __STDC_VERSION__ >= 199901L	defined __STDC_VERSION__ && __STDC_VERSION__ >= 199901L	
#if __GNUC__ >= 3	__GNUC__ >= 3	
#if (!defined _Noreturn \	(!defined _Noreturn \	
#if __GNUC_PREREQ (2,8)	__GNUC_PREREQ (2,8)	
#if __GNUC_PREREQ (8, 0)	__GNUC_PREREQ (8, 0)	
#if (!defined _Static_assert && !defined __cplusplus \	(!defined _Static_assert && !defined __cplusplus \	
#if defined __LONG_DOUBLE_MATH_OPTIONAL && defined __NO_LONG_DOUBLE_MATH	defined __LONG_DOUBLE_MATH_OPTIONAL && defined __NO_LONG_DOUBLE_MATH	
#ifdef __REDIRECT	__REDIRECT	
#if !defined __LDBL_COMPAT || !defined __REDIRECT	!defined __LDBL_COMPAT || !defined __REDIRECT	
#ifdef __REDIRECT	__REDIRECT	
#if __GNUC_PREREQ (4,8) || __glibc_clang_prereq (3,5)	__GNUC_PREREQ (4,8) || __glibc_clang_prereq (3,5)	
#if !defined __cplusplus \	!defined __cplusplus \	
#define __STDC_VERSION__ 201112L	__STDC_VERSION__	201112L
#define __GNUC__ 7	__GNUC__	7
#define __GNUC_MINOR__ 5	__GNUC_MINOR__	5
#define __GNUC_PREREQ(maj,min) ((__GNUC__ << 16) + __GNUC_MINOR__ >= ((maj) << 16) + (min))	__GNUC_PREREQ(maj,min)	((__GNUC__ << 16) + __GNUC_MINOR__ >= ((maj) << 16) + (min))
#define __glibc_clang_prereq(maj,min) 0	__glibc_clang_prereq(maj,min)	0
#define __GNUC_STDC_INLINE__ 1	__GNUC_STDC_INLINE__	1
#define __USE_FORTIFY_LEVEL 0	__USE_FORTIFY_LEVEL	0
#define __STDC__ 1	__STDC__	1
#define _FEATURES_H 1	_FEATURES_H	1
#define __stub_stty	__stub_stty	
#define __stub_sstk	__stub_sstk	
#define __stub_sigreturn	__stub_sigreturn	
#define __stub_setlogin	__stub_setlogin	
#define __stub_revoke	__stub_revoke	
#define __stub_putmsg	__stub_putmsg	
#define __stub_lchmod	__stub_lchmod	
#define __stub_gtty	__stub_gtty	
#define __stub_getmsg	__stub_getmsg	
#define __stub_fdetach	__stub_fdetach	
#define __stub_fchflags	__stub_fchflags	
#define __stub_fattach	__stub_fattach	
#define __stub_chflags	__stub_chflags	
#define __stub___compat_bdflush	__stub___compat_bdflush	
#ifdef _LIBC	_LIBC	
#include <gnu/stubs-64.h>	<gnu/stubs-64.h>	
#if !defined __x86_64__	!defined __x86_64__	
#if defined __x86_64__ && defined __LP64__	defined __x86_64__ && defined __LP64__	
#if defined __x86_64__ && defined __ILP32__	defined __x86_64__ && defined __ILP32__	
#define __LP64__ 1	__LP64__	1
#include <gnu/stubs.h>	<gnu/stubs.h>	
#include <sys/cdefs.h>	<sys/cdefs.h>	
#include <stdc-predef.h>	<stdc-predef.h>	
#define __GLIBC_PREREQ(maj,min) ((__GLIBC__ << 16) + __GLIBC_MINOR__ >= ((maj) << 16) + (min))	__GLIBC_PREREQ(maj,min)	((__GLIBC__ << 16) + __GLIBC_MINOR__ >= ((maj) << 16) + (min))
#define __GLIBC_MINOR__ 27	__GLIBC_MINOR__	27
#define __GLIBC__ 2	__GLIBC__	2
#define __GNU_LIBRARY__ 6	__GNU_LIBRARY__	6
#undef __GNU_LIBRARY__	__GNU_LIBRARY__	
#define __GLIBC_USE_DEPRECATED_GETS 0	__GLIBC_USE_DEPRECATED_GETS	0
#define __USE_ATFILE 1	__USE_ATFILE	1
#define __USE_MISC 1	__USE_MISC	1
#define _ATFILE_SOURCE 1	_ATFILE_SOURCE	1
#undef _ATFILE_SOURCE	_ATFILE_SOURCE	
#define __USE_XOPEN2K8 1	__USE_XOPEN2K8	1
#define __USE_ISOC99 1	__USE_ISOC99	1
#undef __USE_ISOC99	__USE_ISOC99	
#define __USE_ISOC95 1	__USE_ISOC95	1
#undef __USE_ISOC95	__USE_ISOC95	
#define __USE_XOPEN2K 1	__USE_XOPEN2K	1
#define __USE_POSIX199506 1	__USE_POSIX199506	1
#define __USE_POSIX199309 1	__USE_POSIX199309	1
#define __USE_POSIX2 1	__USE_POSIX2	1
#define __USE_POSIX 1	__USE_POSIX	1
#define _POSIX_C_SOURCE 200809L	_POSIX_C_SOURCE	200809L
#undef _POSIX_C_SOURCE	_POSIX_C_SOURCE	
#define _POSIX_SOURCE 1	_POSIX_SOURCE	1
#undef _POSIX_SOURCE	_POSIX_SOURCE	
#define __USE_POSIX_IMPLICITLY 1	__USE_POSIX_IMPLICITLY	1
#define __USE_ISOC95 1	__USE_ISOC95	1
#define __USE_ISOC99 1	__USE_ISOC99	1
#define __USE_ISOC11 1	__USE_ISOC11	1
#define _DEFAULT_SOURCE 1	_DEFAULT_SOURCE	1
#undef _DEFAULT_SOURCE	_DEFAULT_SOURCE	
#define __GLIBC_USE(F) __GLIBC_USE_ ## F	__GLIBC_USE(F)	__GLIBC_USE_ ## F
#define __KERNEL_STRICT_NAMES	__KERNEL_STRICT_NAMES	
#undef __GLIBC_USE_DEPRECATED_GETS	__GLIBC_USE_DEPRECATED_GETS	
#undef __KERNEL_STRICT_NAMES	__KERNEL_STRICT_NAMES	
#undef __USE_FORTIFY_LEVEL	__USE_FORTIFY_LEVEL	
#undef __USE_GNU	__USE_GNU	
#undef __USE_ATFILE	__USE_ATFILE	
#undef __USE_MISC	__USE_MISC	
#undef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#undef __USE_LARGEFILE64	__USE_LARGEFILE64	
#undef __USE_LARGEFILE	__USE_LARGEFILE	
#undef __USE_XOPEN2K8XSI	__USE_XOPEN2K8XSI	
#undef __USE_XOPEN2K8	__USE_XOPEN2K8	
#undef __USE_XOPEN2KXSI	__USE_XOPEN2KXSI	
#undef __USE_XOPEN2K	__USE_XOPEN2K	
#undef __USE_UNIX98	__USE_UNIX98	
#undef __USE_XOPEN_EXTENDED	__USE_XOPEN_EXTENDED	
#undef __USE_XOPEN	__USE_XOPEN	
#undef __USE_POSIX199506	__USE_POSIX199506	
#undef __USE_POSIX199309	__USE_POSIX199309	
#undef __USE_POSIX2	__USE_POSIX2	
#undef __USE_POSIX	__USE_POSIX	
#undef __USE_ISOCXX11	__USE_ISOCXX11	
#undef __USE_ISOC95	__USE_ISOC95	
#undef __USE_ISOC99	__USE_ISOC99	
#undef __USE_ISOC11	__USE_ISOC11	
#ifndef _FEATURES_H	_FEATURES_H	
#ifndef _LOOSE_KERNEL_NAMES	_LOOSE_KERNEL_NAMES	
#if defined __GNUC__ && defined __GNUC_MINOR__	defined __GNUC__ && defined __GNUC_MINOR__	
#if defined __clang_major__ && defined __clang_minor__	defined __clang_major__ && defined __clang_minor__	
#if (defined _BSD_SOURCE || defined _SVID_SOURCE) \	(defined _BSD_SOURCE || defined _SVID_SOURCE) \	
#ifdef _GNU_SOURCE	_GNU_SOURCE	
"#if (defined _DEFAULT_SOURCE					\"	"(defined _DEFAULT_SOURCE					\"	
#if (defined _ISOC11_SOURCE \	(defined _ISOC11_SOURCE \	
#if (defined _ISOC99_SOURCE || defined _ISOC11_SOURCE \	(defined _ISOC99_SOURCE || defined _ISOC11_SOURCE \	
#if (defined _ISOC99_SOURCE || defined _ISOC11_SOURCE \	(defined _ISOC99_SOURCE || defined _ISOC11_SOURCE \	
#ifdef __cplusplus	__cplusplus	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201103L || defined __GXX_EXPERIMENTAL_CXX0X__	__cplusplus >= 201103L || defined __GXX_EXPERIMENTAL_CXX0X__	
#ifdef _DEFAULT_SOURCE	_DEFAULT_SOURCE	
#if !defined _POSIX_SOURCE && !defined _POSIX_C_SOURCE	!defined _POSIX_SOURCE && !defined _POSIX_C_SOURCE	
"#if ((!defined __STRICT_ANSI__					\"	"((!defined __STRICT_ANSI__					\"	
#if defined _XOPEN_SOURCE && (_XOPEN_SOURCE - 0) < 500	defined _XOPEN_SOURCE && (_XOPEN_SOURCE - 0) < 500	
#elif defined _XOPEN_SOURCE && (_XOPEN_SOURCE - 0) < 600	defined _XOPEN_SOURCE && (_XOPEN_SOURCE - 0) < 600	
#elif defined _XOPEN_SOURCE && (_XOPEN_SOURCE - 0) < 700	defined _XOPEN_SOURCE && (_XOPEN_SOURCE - 0) < 700	
#if ((!defined _POSIX_C_SOURCE || (_POSIX_C_SOURCE - 0) < 199506L) \	((!defined _POSIX_C_SOURCE || (_POSIX_C_SOURCE - 0) < 199506L) \	
"#if (defined _POSIX_SOURCE					\"	"(defined _POSIX_SOURCE					\"	
#if defined _POSIX_C_SOURCE && _POSIX_C_SOURCE >= 2 || defined _XOPEN_SOURCE	defined _POSIX_C_SOURCE && _POSIX_C_SOURCE >= 2 || defined _XOPEN_SOURCE	
#if defined _POSIX_C_SOURCE && (_POSIX_C_SOURCE - 0) >= 199309L	defined _POSIX_C_SOURCE && (_POSIX_C_SOURCE - 0) >= 199309L	
#if defined _POSIX_C_SOURCE && (_POSIX_C_SOURCE - 0) >= 199506L	defined _POSIX_C_SOURCE && (_POSIX_C_SOURCE - 0) >= 199506L	
#if defined _POSIX_C_SOURCE && (_POSIX_C_SOURCE - 0) >= 200112L	defined _POSIX_C_SOURCE && (_POSIX_C_SOURCE - 0) >= 200112L	
#if defined _POSIX_C_SOURCE && (_POSIX_C_SOURCE - 0) >= 200809L	defined _POSIX_C_SOURCE && (_POSIX_C_SOURCE - 0) >= 200809L	
#ifdef _XOPEN_SOURCE	_XOPEN_SOURCE	
#if (_XOPEN_SOURCE - 0) >= 500	(_XOPEN_SOURCE - 0) >= 500	
#if (_XOPEN_SOURCE - 0) >= 600	(_XOPEN_SOURCE - 0) >= 600	
#if (_XOPEN_SOURCE - 0) >= 700	(_XOPEN_SOURCE - 0) >= 700	
#ifdef _XOPEN_SOURCE_EXTENDED	_XOPEN_SOURCE_EXTENDED	
#ifdef _LARGEFILE_SOURCE	_LARGEFILE_SOURCE	
#ifdef _LARGEFILE64_SOURCE	_LARGEFILE64_SOURCE	
#if defined _FILE_OFFSET_BITS && _FILE_OFFSET_BITS == 64	defined _FILE_OFFSET_BITS && _FILE_OFFSET_BITS == 64	
#if defined _DEFAULT_SOURCE	defined _DEFAULT_SOURCE	
#ifdef _ATFILE_SOURCE	_ATFILE_SOURCE	
#ifdef _GNU_SOURCE	_GNU_SOURCE	
#if defined _FORTIFY_SOURCE && _FORTIFY_SOURCE > 0 \	defined _FORTIFY_SOURCE && _FORTIFY_SOURCE > 0 \	
#if _FORTIFY_SOURCE > 1	_FORTIFY_SOURCE > 1	
#if defined __cplusplus ? __cplusplus >= 201402L : defined __USE_ISOC11	defined __cplusplus ? __cplusplus >= 201402L : defined __USE_ISOC11	
#ifndef __ASSEMBLER__	__ASSEMBLER__	
#ifndef _SYS_CDEFS_H	_SYS_CDEFS_H	
#if defined __USE_FILE_OFFSET64 && !defined __REDIRECT	defined __USE_FILE_OFFSET64 && !defined __REDIRECT	
#if __GNUC_PREREQ (2, 7) && defined __OPTIMIZE__ \	__GNUC_PREREQ (2, 7) && defined __OPTIMIZE__ \	
#define __NO_INLINE__ 1	__NO_INLINE__	1
#include <features.h>	<features.h>	
#define __GLIBC_USE_IEC_60559_TYPES_EXT 0	__GLIBC_USE_IEC_60559_TYPES_EXT	0
#undef __GLIBC_USE_IEC_60559_TYPES_EXT	__GLIBC_USE_IEC_60559_TYPES_EXT	
#define __GLIBC_USE_IEC_60559_FUNCS_EXT 0	__GLIBC_USE_IEC_60559_FUNCS_EXT	0
#undef __GLIBC_USE_IEC_60559_FUNCS_EXT	__GLIBC_USE_IEC_60559_FUNCS_EXT	
#define __GLIBC_USE_IEC_60559_BFP_EXT 0	__GLIBC_USE_IEC_60559_BFP_EXT	0
#undef __GLIBC_USE_IEC_60559_BFP_EXT	__GLIBC_USE_IEC_60559_BFP_EXT	
#define __GLIBC_USE_LIB_EXT2 0	__GLIBC_USE_LIB_EXT2	0
#undef __GLIBC_USE_LIB_EXT2	__GLIBC_USE_LIB_EXT2	
#undef __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION	__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION	
#ifndef __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION	__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION	
"#if (defined __USE_GNU							\"	"(defined __USE_GNU							\"	
#if defined __USE_GNU || defined __STDC_WANT_IEC_60559_BFP_EXT__	defined __USE_GNU || defined __STDC_WANT_IEC_60559_BFP_EXT__	
#if defined __USE_GNU || defined __STDC_WANT_IEC_60559_FUNCS_EXT__	defined __USE_GNU || defined __STDC_WANT_IEC_60559_FUNCS_EXT__	
#if defined __USE_GNU || defined __STDC_WANT_IEC_60559_TYPES_EXT__	defined __USE_GNU || defined __STDC_WANT_IEC_60559_TYPES_EXT__	
#define __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION	__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION	
#undef __need_NULL	__need_NULL	
#define NULL ((void *)0)	NULL	((void *)0)
#undef NULL	NULL	
#undef __need_size_t	__need_size_t	
#define __size_t	__size_t	
#define _SIZET_	_SIZET_	
#define _GCC_SIZE_T	_GCC_SIZE_T	
#define ___int_size_t_h	___int_size_t_h	
#define _SIZE_T_DECLARED	_SIZE_T_DECLARED	
#define _BSD_SIZE_T_DEFINED_	_BSD_SIZE_T_DEFINED_	
#define _SIZE_T_DEFINED	_SIZE_T_DEFINED	
#define _SIZE_T_DEFINED_	_SIZE_T_DEFINED_	
#define _BSD_SIZE_T_	_BSD_SIZE_T_	
#define _SIZE_T_	_SIZE_T_	
#define __SIZE_T	__SIZE_T	
#define _T_SIZE	_T_SIZE	
#define _T_SIZE_	_T_SIZE_	
#define _SYS_SIZE_T_H	_SYS_SIZE_T_H	
#define _SIZE_T	_SIZE_T	
#define __SIZE_T__	__SIZE_T__	
#define __size_t__	__size_t__	
#if (!defined(_STDDEF_H) && !defined(_STDDEF_H_) && !defined(_ANSI_STDDEF_H) \	(!defined(_STDDEF_H) && !defined(_STDDEF_H_) && !defined(_ANSI_STDDEF_H) \	
"#if (!defined(__need_wchar_t) && !defined(__need_size_t)	\"	"(!defined(__need_wchar_t) && !defined(__need_size_t)	\"	
#ifndef __sys_stdtypes_h	__sys_stdtypes_h	
#if defined (__BSD_NET2__) || defined (____386BSD____) || (defined (__FreeBSD__) && (__FreeBSD__ < 5)) || defined(__NetBSD__)	defined (__BSD_NET2__) || defined (____386BSD____) || (defined (__FreeBSD__) && (__FreeBSD__ < 5)) || defined(__NetBSD__)	
#if defined (__FreeBSD__) && (__FreeBSD__ >= 5)	defined (__FreeBSD__) && (__FreeBSD__ >= 5)	
#if defined(_ANSI_H_) || defined(_MACHINE_ANSI_H_) || defined(_X86_64_ANSI_H_)  || defined(_I386_ANSI_H_)	defined(_ANSI_H_) || defined(_MACHINE_ANSI_H_) || defined(_X86_64_ANSI_H_)  || defined(_I386_ANSI_H_)	
#if !defined(_SIZE_T_) && !defined(_BSD_SIZE_T_)	!defined(_SIZE_T_) && !defined(_BSD_SIZE_T_)	
#if !defined(_PTRDIFF_T_) && !defined(_BSD_PTRDIFF_T_)	!defined(_PTRDIFF_T_) && !defined(_BSD_PTRDIFF_T_)	
#if !defined(_WCHAR_T_) && !defined(_BSD_WCHAR_T_)	!defined(_WCHAR_T_) && !defined(_BSD_WCHAR_T_)	
#ifndef _BSD_WCHAR_T_	_BSD_WCHAR_T_	
#if defined (__need_ptrdiff_t) || defined (_STDDEF_H_)	defined (__need_ptrdiff_t) || defined (_STDDEF_H_)	
#if defined (__need_size_t) || defined (_STDDEF_H_)	defined (__need_size_t) || defined (_STDDEF_H_)	
#if defined (__need_wchar_t) || defined (_STDDEF_H_)	defined (__need_wchar_t) || defined (_STDDEF_H_)	
#if defined (__sequent__) && defined (_PTRDIFF_T_)	defined (__sequent__) && defined (_PTRDIFF_T_)	
#if defined (_TYPE_ptrdiff_t) && (defined (__need_ptrdiff_t) || defined (_STDDEF_H_))	defined (_TYPE_ptrdiff_t) && (defined (__need_ptrdiff_t) || defined (_STDDEF_H_))	
#if defined (_TYPE_size_t) && (defined (__need_size_t) || defined (_STDDEF_H_))	defined (_TYPE_size_t) && (defined (__need_size_t) || defined (_STDDEF_H_))	
#if defined (_TYPE_wchar_t) && (defined (__need_wchar_t) || defined (_STDDEF_H_))	defined (_TYPE_wchar_t) && (defined (__need_wchar_t) || defined (_STDDEF_H_))	
#if defined (_STDDEF_H) || defined (__need_ptrdiff_t)	defined (_STDDEF_H) || defined (__need_ptrdiff_t)	
#ifndef _PTRDIFF_T	_PTRDIFF_T	
#ifndef _T_PTRDIFF_	_T_PTRDIFF_	
#ifndef _T_PTRDIFF	_T_PTRDIFF	
#ifndef __PTRDIFF_T	__PTRDIFF_T	
#ifndef _PTRDIFF_T_	_PTRDIFF_T_	
#ifndef _BSD_PTRDIFF_T_	_BSD_PTRDIFF_T_	
#ifndef ___int_ptrdiff_t_h	___int_ptrdiff_t_h	
#ifndef _GCC_PTRDIFF_T	_GCC_PTRDIFF_T	
#ifndef _PTRDIFF_T_DECLARED	_PTRDIFF_T_DECLARED	
#ifndef __PTRDIFF_TYPE__	__PTRDIFF_TYPE__	
#if defined (_STDDEF_H) || defined (__need_size_t)	defined (_STDDEF_H) || defined (__need_size_t)	
#ifndef __size_t__	__size_t__	
#ifndef __SIZE_T__	__SIZE_T__	
#ifndef _SIZE_T	_SIZE_T	
#ifndef _SYS_SIZE_T_H	_SYS_SIZE_T_H	
#ifndef _T_SIZE_	_T_SIZE_	
#ifndef _T_SIZE	_T_SIZE	
#ifndef __SIZE_T	__SIZE_T	
#ifndef _SIZE_T_	_SIZE_T_	
#ifndef _BSD_SIZE_T_	_BSD_SIZE_T_	
#ifndef _SIZE_T_DEFINED_	_SIZE_T_DEFINED_	
#ifndef _SIZE_T_DEFINED	_SIZE_T_DEFINED	
#ifndef _BSD_SIZE_T_DEFINED_	_BSD_SIZE_T_DEFINED_	
#ifndef _SIZE_T_DECLARED	_SIZE_T_DECLARED	
#ifndef ___int_size_t_h	___int_size_t_h	
#ifndef _GCC_SIZE_T	_GCC_SIZE_T	
#ifndef _SIZET_	_SIZET_	
#ifndef __size_t	__size_t	
#if (defined (__FreeBSD__) && (__FreeBSD__ >= 5)) \	(defined (__FreeBSD__) && (__FreeBSD__ >= 5)) \	
#elif defined (__VMS__)	defined (__VMS__)	
#ifndef __SIZE_TYPE__	__SIZE_TYPE__	
#if !(defined (__GNUG__) && defined (size_t))	!(defined (__GNUG__) && defined (size_t))	
#ifdef __BEOS__	__BEOS__	
#if defined (_STDDEF_H) || defined (__need_wchar_t)	defined (_STDDEF_H) || defined (__need_wchar_t)	
#ifndef __wchar_t__	__wchar_t__	
#ifndef __WCHAR_T__	__WCHAR_T__	
#ifndef _WCHAR_T	_WCHAR_T	
#ifndef _T_WCHAR_	_T_WCHAR_	
#ifndef _T_WCHAR	_T_WCHAR	
#ifndef __WCHAR_T	__WCHAR_T	
#ifndef _WCHAR_T_	_WCHAR_T_	
#ifndef _BSD_WCHAR_T_	_BSD_WCHAR_T_	
#ifndef _BSD_WCHAR_T_DEFINED_	_BSD_WCHAR_T_DEFINED_	
#ifndef _BSD_RUNE_T_DEFINED_	_BSD_RUNE_T_DEFINED_	
#ifndef _WCHAR_T_DECLARED	_WCHAR_T_DECLARED	
#ifndef _WCHAR_T_DEFINED_	_WCHAR_T_DEFINED_	
#ifndef _WCHAR_T_DEFINED	_WCHAR_T_DEFINED	
#ifndef _WCHAR_T_H	_WCHAR_T_H	
#ifndef ___int_wchar_t_h	___int_wchar_t_h	
#ifndef __INT_WCHAR_T_H	__INT_WCHAR_T_H	
#ifndef _GCC_WCHAR_T	_GCC_WCHAR_T	
#ifdef _BSD_WCHAR_T_	_BSD_WCHAR_T_	
#ifdef _BSD_RUNE_T_	_BSD_RUNE_T_	
#if !defined (_ANSI_SOURCE) && !defined (_POSIX_SOURCE)	!defined (_ANSI_SOURCE) && !defined (_POSIX_SOURCE)	
#if defined (__FreeBSD__) && (__FreeBSD__ < 5)	defined (__FreeBSD__) && (__FreeBSD__ < 5)	
#if defined (__FreeBSD__) && (__FreeBSD__ >= 5)	defined (__FreeBSD__) && (__FreeBSD__ >= 5)	
#if !defined (_ANSI_SOURCE) && !defined (_POSIX_SOURCE)	!defined (_ANSI_SOURCE) && !defined (_POSIX_SOURCE)	
#if __BSD_VISIBLE	__BSD_VISIBLE	
#ifndef _RUNE_T_DECLARED	_RUNE_T_DECLARED	
#ifndef __WCHAR_TYPE__	__WCHAR_TYPE__	
#ifndef __cplusplus	__cplusplus	
#if defined (__need_wint_t)	defined (__need_wint_t)	
#ifndef _WINT_T	_WINT_T	
#ifndef __WINT_TYPE__	__WINT_TYPE__	
#if defined(_ANSI_H_) || defined(_MACHINE_ANSI_H_) || defined(_X86_64_ANSI_H_) || defined(_I386_ANSI_H_)	defined(_ANSI_H_) || defined(_MACHINE_ANSI_H_) || defined(_X86_64_ANSI_H_) || defined(_I386_ANSI_H_)	
#ifdef _GCC_PTRDIFF_T_	_GCC_PTRDIFF_T_	
#ifdef _GCC_SIZE_T_	_GCC_SIZE_T_	
#ifdef _GCC_WCHAR_T_	_GCC_WCHAR_T_	
#ifdef _GCC_PTRDIFF_T	_GCC_PTRDIFF_T	
#ifdef _GCC_SIZE_T	_GCC_SIZE_T	
#ifdef _GCC_WCHAR_T	_GCC_WCHAR_T	
#if defined (_STDDEF_H) || defined (__need_NULL)	defined (_STDDEF_H) || defined (__need_NULL)	
#ifdef __GNUG__	__GNUG__	
#ifndef __cplusplus	__cplusplus	
#ifdef _STDDEF_H	_STDDEF_H	
#if (defined (__STDC_VERSION__) && __STDC_VERSION__ >= 201112L) \	(defined (__STDC_VERSION__) && __STDC_VERSION__ >= 201112L) \	
#ifndef _GCC_MAX_ALIGN_T	_GCC_MAX_ALIGN_T	
#ifdef __i386__	__i386__	
#if defined(__cplusplus) && __cplusplus >= 201103L	defined(__cplusplus) && __cplusplus >= 201103L	
#ifndef _GXX_NULLPTR_T	_GXX_NULLPTR_T	
#define __need_NULL	__need_NULL	
#define __SIZE_TYPE__ long unsigned int	__SIZE_TYPE__	long unsigned int
#define __need_size_t	__need_size_t	
#define __FD_SETSIZE 1024	__FD_SETSIZE	1024
#define __RLIM_T_MATCHES_RLIM64_T 1	__RLIM_T_MATCHES_RLIM64_T	1
#define __INO_T_MATCHES_INO64_T 1	__INO_T_MATCHES_INO64_T	1
#define __OFF_T_MATCHES_OFF64_T 1	__OFF_T_MATCHES_OFF64_T	1
#define __CPU_MASK_TYPE __SYSCALL_ULONG_TYPE	__CPU_MASK_TYPE	__SYSCALL_ULONG_TYPE
#define __SSIZE_T_TYPE __SWORD_TYPE	__SSIZE_T_TYPE	__SWORD_TYPE
#define __FSID_T_TYPE struct { int __val[2]; }	__FSID_T_TYPE	struct { int __val[2]; }
#define __BLKSIZE_T_TYPE __SYSCALL_SLONG_TYPE	__BLKSIZE_T_TYPE	__SYSCALL_SLONG_TYPE
#define __TIMER_T_TYPE void *	__TIMER_T_TYPE	void *
#define __CLOCKID_T_TYPE __S32_TYPE	__CLOCKID_T_TYPE	__S32_TYPE
#define __KEY_T_TYPE __S32_TYPE	__KEY_T_TYPE	__S32_TYPE
#define __DADDR_T_TYPE __S32_TYPE	__DADDR_T_TYPE	__S32_TYPE
#define __SUSECONDS_T_TYPE __SYSCALL_SLONG_TYPE	__SUSECONDS_T_TYPE	__SYSCALL_SLONG_TYPE
#define __USECONDS_T_TYPE __U32_TYPE	__USECONDS_T_TYPE	__U32_TYPE
#define __TIME_T_TYPE __SYSCALL_SLONG_TYPE	__TIME_T_TYPE	__SYSCALL_SLONG_TYPE
#define __CLOCK_T_TYPE __SYSCALL_SLONG_TYPE	__CLOCK_T_TYPE	__SYSCALL_SLONG_TYPE
#define __ID_T_TYPE __U32_TYPE	__ID_T_TYPE	__U32_TYPE
#define __FSFILCNT64_T_TYPE __UQUAD_TYPE	__FSFILCNT64_T_TYPE	__UQUAD_TYPE
#define __FSFILCNT_T_TYPE __SYSCALL_ULONG_TYPE	__FSFILCNT_T_TYPE	__SYSCALL_ULONG_TYPE
#define __FSBLKCNT64_T_TYPE __UQUAD_TYPE	__FSBLKCNT64_T_TYPE	__UQUAD_TYPE
#define __FSBLKCNT_T_TYPE __SYSCALL_ULONG_TYPE	__FSBLKCNT_T_TYPE	__SYSCALL_ULONG_TYPE
#define __BLKCNT64_T_TYPE __SQUAD_TYPE	__BLKCNT64_T_TYPE	__SQUAD_TYPE
#define __BLKCNT_T_TYPE __SYSCALL_SLONG_TYPE	__BLKCNT_T_TYPE	__SYSCALL_SLONG_TYPE
#define __RLIM64_T_TYPE __UQUAD_TYPE	__RLIM64_T_TYPE	__UQUAD_TYPE
#define __RLIM_T_TYPE __SYSCALL_ULONG_TYPE	__RLIM_T_TYPE	__SYSCALL_ULONG_TYPE
#define __PID_T_TYPE __S32_TYPE	__PID_T_TYPE	__S32_TYPE
#define __OFF64_T_TYPE __SQUAD_TYPE	__OFF64_T_TYPE	__SQUAD_TYPE
#define __OFF_T_TYPE __SYSCALL_SLONG_TYPE	__OFF_T_TYPE	__SYSCALL_SLONG_TYPE
#define __FSWORD_T_TYPE __SYSCALL_SLONG_TYPE	__FSWORD_T_TYPE	__SYSCALL_SLONG_TYPE
#define __NLINK_T_TYPE __SYSCALL_ULONG_TYPE	__NLINK_T_TYPE	__SYSCALL_ULONG_TYPE
#define __MODE_T_TYPE __U32_TYPE	__MODE_T_TYPE	__U32_TYPE
#define __INO64_T_TYPE __UQUAD_TYPE	__INO64_T_TYPE	__UQUAD_TYPE
#define __INO_T_TYPE __SYSCALL_ULONG_TYPE	__INO_T_TYPE	__SYSCALL_ULONG_TYPE
#define __GID_T_TYPE __U32_TYPE	__GID_T_TYPE	__U32_TYPE
#define __UID_T_TYPE __U32_TYPE	__UID_T_TYPE	__U32_TYPE
#define __DEV_T_TYPE __UQUAD_TYPE	__DEV_T_TYPE	__UQUAD_TYPE
#define __SYSCALL_ULONG_TYPE __ULONGWORD_TYPE	__SYSCALL_ULONG_TYPE	__ULONGWORD_TYPE
#define __SYSCALL_SLONG_TYPE __SLONGWORD_TYPE	__SYSCALL_SLONG_TYPE	__SLONGWORD_TYPE
#define _BITS_TYPESIZES_H 1	_BITS_TYPESIZES_H	1
#ifndef _BITS_TYPES_H	_BITS_TYPES_H	
#ifndef _BITS_TYPESIZES_H	_BITS_TYPESIZES_H	
#if defined __x86_64__ && defined __ILP32__	defined __x86_64__ && defined __ILP32__	
#ifdef __x86_64__	__x86_64__	
#ifdef __x86_64__	__x86_64__	
#define _BITS_TYPES_H 1	_BITS_TYPES_H	1
#include <bits/typesizes.h>	<bits/typesizes.h>	
#include <bits/wordsize.h>	<bits/wordsize.h>	
#include <features.h>	<features.h>	
#undef __STD_TYPE	__STD_TYPE	
#define __STD_TYPE typedef	__STD_TYPE	typedef
#define __U64_TYPE unsigned long int	__U64_TYPE	unsigned long int
#define __S64_TYPE long int	__S64_TYPE	long int
#define __ULONG32_TYPE unsigned int	__ULONG32_TYPE	unsigned int
#define __SLONG32_TYPE int	__SLONG32_TYPE	int
#define __UWORD_TYPE unsigned long int	__UWORD_TYPE	unsigned long int
#define __SWORD_TYPE long int	__SWORD_TYPE	long int
#define __UQUAD_TYPE unsigned long int	__UQUAD_TYPE	unsigned long int
#define __SQUAD_TYPE long int	__SQUAD_TYPE	long int
#define __ULONGWORD_TYPE unsigned long int	__ULONGWORD_TYPE	unsigned long int
#define __SLONGWORD_TYPE long int	__SLONGWORD_TYPE	long int
#define __U32_TYPE unsigned int	__U32_TYPE	unsigned int
#define __S32_TYPE int	__S32_TYPE	int
#define __U16_TYPE unsigned short int	__U16_TYPE	unsigned short int
#define __S16_TYPE short int	__S16_TYPE	short int
#ifndef _BITS_TYPES_H	_BITS_TYPES_H	
#if __WORDSIZE == 64	__WORDSIZE == 64	
#if __WORDSIZE == 64	__WORDSIZE == 64	
#if __WORDSIZE == 64	__WORDSIZE == 64	
#if __WORDSIZE == 32	__WORDSIZE == 32	
#elif __WORDSIZE == 64	__WORDSIZE == 64	
#define ____FILE_defined 1	____FILE_defined	1
#ifndef ____FILE_defined	____FILE_defined	
#define __FILE_defined 1	__FILE_defined	1
#ifndef __FILE_defined	__FILE_defined	
#define __need_NULL	__need_NULL	
#define __need_size_t	__need_size_t	
#define ____mbstate_t_defined 1	____mbstate_t_defined	1
#ifndef ____mbstate_t_defined	____mbstate_t_defined	
#ifndef __WINT_TYPE__	__WINT_TYPE__	
#define __WINT_TYPE__ unsigned int	__WINT_TYPE__	unsigned int
#include <bits/types/__mbstate_t.h>	<bits/types/__mbstate_t.h>	
#include <stddef.h>	<stddef.h>	
#include <bits/types.h>	<bits/types.h>	
#define _G_BUFSIZ 8192	_G_BUFSIZ	8192
#define _G_HAVE_ST_BLKSIZE defined (_STATBUF_ST_BLKSIZE)	_G_HAVE_ST_BLKSIZE	defined (_STATBUF_ST_BLKSIZE)
#define _G_IO_IO_FILE_VERSION 0x20001	_G_IO_IO_FILE_VERSION	0x20001
#define _G_HAVE_MREMAP 1	_G_HAVE_MREMAP	1
#define _G_HAVE_MMAP 1	_G_HAVE_MMAP	1
#define _G_va_list __gnuc_va_list	_G_va_list	__gnuc_va_list
#define _BITS_G_CONFIG_H 1	_BITS_G_CONFIG_H	1
#ifndef _BITS_G_CONFIG_H	_BITS_G_CONFIG_H	
#if !defined _BITS_LIBIO_H && !defined _G_CONFIG_H	!defined _BITS_LIBIO_H && !defined _G_CONFIG_H	
#if defined _LIBC || defined _GLIBCPP_USE_WCHAR_T	defined _LIBC || defined _GLIBCPP_USE_WCHAR_T	
#if defined _LIBC || defined _GLIBCPP_USE_WCHAR_T	defined _LIBC || defined _GLIBCPP_USE_WCHAR_T	
#if defined _LIBC || defined _GLIBCPP_USE_WCHAR_T	defined _LIBC || defined _GLIBCPP_USE_WCHAR_T	
#define _BITS_LIBIO_H 1	_BITS_LIBIO_H	1
#define __GNUC_VA_LIST	__GNUC_VA_LIST	
#undef __need___va_list	__need___va_list	
#ifndef _STDARG_H	_STDARG_H	
#ifndef _ANSI_STDARG_H_	_ANSI_STDARG_H_	
#ifndef __need___va_list	__need___va_list	
#ifndef __GNUC_VA_LIST	__GNUC_VA_LIST	
#ifdef _STDARG_H	_STDARG_H	
#if !defined(__STRICT_ANSI__) || __STDC_VERSION__ + 0 >= 199900L \	!defined(__STRICT_ANSI__) || __STDC_VERSION__ + 0 >= 199900L \	
#ifdef _BSD_VA_LIST	_BSD_VA_LIST	
#if defined(__svr4__) || (defined(_SCO_DS) && !defined(__VA_LIST))	defined(__svr4__) || (defined(_SCO_DS) && !defined(__VA_LIST))	
#ifndef _VA_LIST_	_VA_LIST_	
#ifdef __i860__	__i860__	
#ifndef _VA_LIST	_VA_LIST	
#ifdef _SCO_DS	_SCO_DS	
#if !defined (_VA_LIST_) || defined (__BSD_NET2__) || defined (____386BSD____) || defined (__bsdi__) || defined (__sequent__) || defined (__FreeBSD__) || defined(WINNT)	!defined (_VA_LIST_) || defined (__BSD_NET2__) || defined (____386BSD____) || defined (__bsdi__) || defined (__sequent__) || defined (__FreeBSD__) || defined(WINNT)	
#ifndef _VA_LIST_DEFINED	_VA_LIST_DEFINED	
#ifndef _VA_LIST	_VA_LIST	
#ifndef _VA_LIST_T_H	_VA_LIST_T_H	
#ifndef __va_list__	__va_list__	
#if !(defined (__BSD_NET2__) || defined (____386BSD____) || defined (__bsdi__) || defined (__sequent__) || defined (__FreeBSD__))	!(defined (__BSD_NET2__) || defined (____386BSD____) || defined (__bsdi__) || defined (__sequent__) || defined (__FreeBSD__))	
#ifndef _VA_LIST	_VA_LIST	
#ifndef _VA_LIST_DEFINED	_VA_LIST_DEFINED	
#ifndef _VA_LIST_T_H	_VA_LIST_T_H	
#ifndef __va_list__	__va_list__	
#define __need___va_list	__need___va_list	
#include <stdarg.h>	<stdarg.h>	
#include <bits/_G_config.h>	<bits/_G_config.h>	
#define _IO_off64_t __off64_t	_IO_off64_t	__off64_t
#define _IO_off_t __off_t	_IO_off_t	__off_t
#define _IO_need_lock(_fp) (((_fp)->_flags2 & _IO_FLAGS2_NEED_LOCK) != 0)	_IO_need_lock(_fp)	(((_fp)->_flags2 & _IO_FLAGS2_NEED_LOCK) != 0)
#define _IO_cleanup_region_end(_Doit)	_IO_cleanup_region_end(_Doit)	
#define _IO_cleanup_region_start(_fct,_fp)	_IO_cleanup_region_start(_fct,_fp)	
#define _IO_ftrylockfile(_fp)	_IO_ftrylockfile(_fp)	
#define _IO_funlockfile(_fp)	_IO_funlockfile(_fp)	
#define _IO_flockfile(_fp)	_IO_flockfile(_fp)	
#define _IO_peekc(_fp) _IO_peekc_unlocked (_fp)	_IO_peekc(_fp)	_IO_peekc_unlocked (_fp)
#define _IO_PENDING_OUTPUT_COUNT(_fp) ((_fp)->_IO_write_ptr - (_fp)->_IO_write_base)	_IO_PENDING_OUTPUT_COUNT(_fp)	((_fp)->_IO_write_ptr - (_fp)->_IO_write_base)
#define _IO_ferror_unlocked(__fp) (((__fp)->_flags & _IO_ERR_SEEN) != 0)	_IO_ferror_unlocked(__fp)	(((__fp)->_flags & _IO_ERR_SEEN) != 0)
#define _IO_feof_unlocked(__fp) (((__fp)->_flags & _IO_EOF_SEEN) != 0)	_IO_feof_unlocked(__fp)	(((__fp)->_flags & _IO_EOF_SEEN) != 0)
#define _IO_putc_unlocked(_ch,_fp) (_IO_BE ((_fp)->_IO_write_ptr >= (_fp)->_IO_write_end, 0) ? __overflow (_fp, (unsigned char) (_ch)) : (unsigned char) (*(_fp)->_IO_write_ptr++ = (_ch)))	_IO_putc_unlocked(_ch,_fp)	(_IO_BE ((_fp)->_IO_write_ptr >= (_fp)->_IO_write_end, 0) ? __overflow (_fp, (unsigned char) (_ch)) : (unsigned char) (*(_fp)->_IO_write_ptr++ = (_ch)))
#define _IO_peekc_unlocked(_fp) (_IO_BE ((_fp)->_IO_read_ptr >= (_fp)->_IO_read_end, 0) && __underflow (_fp) == EOF ? EOF : *(unsigned char *) (_fp)->_IO_read_ptr)	_IO_peekc_unlocked(_fp)	(_IO_BE ((_fp)->_IO_read_ptr >= (_fp)->_IO_read_end, 0) && __underflow (_fp) == EOF ? EOF : *(unsigned char *) (_fp)->_IO_read_ptr)
#define _IO_getc_unlocked(_fp) (_IO_BE ((_fp)->_IO_read_ptr >= (_fp)->_IO_read_end, 0) ? __uflow (_fp) : *(unsigned char *) (_fp)->_IO_read_ptr++)	_IO_getc_unlocked(_fp)	(_IO_BE ((_fp)->_IO_read_ptr >= (_fp)->_IO_read_end, 0) ? __uflow (_fp) : *(unsigned char *) (_fp)->_IO_read_ptr++)
#define _IO_BE(expr,res) __builtin_expect ((expr), res)	_IO_BE(expr,res)	__builtin_expect ((expr), res)
#define _IO_stderr ((_IO_FILE*)(&_IO_2_1_stderr_))	_IO_stderr	((_IO_FILE*)(&_IO_2_1_stderr_))
#define _IO_stdout ((_IO_FILE*)(&_IO_2_1_stdout_))	_IO_stdout	((_IO_FILE*)(&_IO_2_1_stdout_))
#define _IO_stdin ((_IO_FILE*)(&_IO_2_1_stdin_))	_IO_stdin	((_IO_FILE*)(&_IO_2_1_stdin_))
#define __HAVE_COLUMN	__HAVE_COLUMN	
#define _IO_file_flags _flags	_IO_file_flags	_flags
#define _IO_BOOLALPHA 0200000	_IO_BOOLALPHA	0200000
#define _IO_DONT_CLOSE 0100000	_IO_DONT_CLOSE	0100000
#define _IO_STDIO 040000	_IO_STDIO	040000
#define _IO_UNITBUF 020000	_IO_UNITBUF	020000
#define _IO_FIXED 010000	_IO_FIXED	010000
#define _IO_SCIENTIFIC 04000	_IO_SCIENTIFIC	04000
#define _IO_SHOWPOS 02000	_IO_SHOWPOS	02000
#define _IO_UPPERCASE 01000	_IO_UPPERCASE	01000
#define _IO_SHOWPOINT 0400	_IO_SHOWPOINT	0400
#define _IO_SHOWBASE 0200	_IO_SHOWBASE	0200
#define _IO_HEX 0100	_IO_HEX	0100
#define _IO_OCT 040	_IO_OCT	040
#define _IO_DEC 020	_IO_DEC	020
#define _IO_INTERNAL 010	_IO_INTERNAL	010
#define _IO_RIGHT 04	_IO_RIGHT	04
#define _IO_LEFT 02	_IO_LEFT	02
#define _IO_SKIPWS 01	_IO_SKIPWS	01
#define _IO_FLAGS2_USER_WBUF 8	_IO_FLAGS2_USER_WBUF	8
#define _IO_FLAGS2_NOTCANCEL 2	_IO_FLAGS2_NOTCANCEL	2
#define _IO_FLAGS2_MMAP 1	_IO_FLAGS2_MMAP	1
#define _IO_USER_LOCK 0x8000	_IO_USER_LOCK	0x8000
#define _IO_BAD_SEEN 0x4000	_IO_BAD_SEEN	0x4000
#define _IO_IS_FILEBUF 0x2000	_IO_IS_FILEBUF	0x2000
#define _IO_IS_APPENDING 0x1000	_IO_IS_APPENDING	0x1000
#define _IO_CURRENTLY_PUTTING 0x800	_IO_CURRENTLY_PUTTING	0x800
#define _IO_TIED_PUT_GET 0x400	_IO_TIED_PUT_GET	0x400
#define _IO_LINE_BUF 0x200	_IO_LINE_BUF	0x200
#define _IO_IN_BACKUP 0x100	_IO_IN_BACKUP	0x100
#define _IO_LINKED 0x80	_IO_LINKED	0x80
#define _IO_DELETE_DONT_CLOSE 0x40	_IO_DELETE_DONT_CLOSE	0x40
#define _IO_ERR_SEEN 0x20	_IO_ERR_SEEN	0x20
#define _IO_EOF_SEEN 0x10	_IO_EOF_SEEN	0x10
#define _IO_NO_WRITES 8	_IO_NO_WRITES	8
#define _IO_NO_READS 4	_IO_NO_READS	4
#define _IO_UNBUFFERED 2	_IO_UNBUFFERED	2
#define _IO_USER_BUF 1	_IO_USER_BUF	1
#define _IO_MAGIC_MASK 0xFFFF0000	_IO_MAGIC_MASK	0xFFFF0000
#define _OLD_STDIO_MAGIC 0xFABC0000	_OLD_STDIO_MAGIC	0xFABC0000
#define _IO_MAGIC 0xFBAD0000	_IO_MAGIC	0xFBAD0000
#define _IOS_BIN 128	_IOS_BIN	128
#define _IOS_NOREPLACE 64	_IOS_NOREPLACE	64
#define _IOS_NOCREATE 32	_IOS_NOCREATE	32
#define _IOS_TRUNC 16	_IOS_TRUNC	16
#define _IOS_APPEND 8	_IOS_APPEND	8
#define _IOS_ATEND 4	_IOS_ATEND	4
#define _IOS_OUTPUT 2	_IOS_OUTPUT	2
#define _IOS_INPUT 1	_IOS_INPUT	1
#define EOF (-1)	EOF	(-1)
#define _IO_UNIFIED_JUMPTABLES 1	_IO_UNIFIED_JUMPTABLES	1
#define _IO_va_list __gnuc_va_list	_IO_va_list	__gnuc_va_list
#undef _IO_va_list	_IO_va_list	
#define _IO_wint_t wint_t	_IO_wint_t	wint_t
#define _IO_va_list _G_va_list	_IO_va_list	_G_va_list
#define _IO_BUFSIZ _G_BUFSIZ	_IO_BUFSIZ	_G_BUFSIZ
#define _IO_HAVE_ST_BLKSIZE _G_HAVE_ST_BLKSIZE	_IO_HAVE_ST_BLKSIZE	_G_HAVE_ST_BLKSIZE
#define _IO_iconv_t _G_iconv_t	_IO_iconv_t	_G_iconv_t
#define _IO_uid_t __uid_t	_IO_uid_t	__uid_t
#define _IO_pid_t __pid_t	_IO_pid_t	__pid_t
#define _IO_ssize_t __ssize_t	_IO_ssize_t	__ssize_t
#define _IO_size_t size_t	_IO_size_t	size_t
#define _IO_fpos64_t _G_fpos64_t	_IO_fpos64_t	_G_fpos64_t
#define _IO_fpos_t _G_fpos_t	_IO_fpos_t	_G_fpos_t
#ifndef _BITS_LIBIO_H	_BITS_LIBIO_H	
#if !defined _STDIO_H && !defined _LIBIO_H	!defined _STDIO_H && !defined _LIBIO_H	
#ifdef __GNUC_VA_LIST	__GNUC_VA_LIST	
#ifndef __P	__P	
#ifndef EOF	EOF	
#ifndef NULL	NULL	
#if defined __GNUG__ && \	defined __GNUG__ && \	
#if !defined(__cplusplus)	!defined(__cplusplus)	
#ifdef _LIBC	_LIBC	
#ifdef _LIBC	_LIBC	
#ifndef _IO_lock_t_defined	_IO_lock_t_defined	
#if 0	0	
#if defined _LIBC || defined _GLIBCPP_USE_WCHAR_T	defined _LIBC || defined _GLIBCPP_USE_WCHAR_T	
#if 0	0	
#ifdef _IO_USE_OLD_IO_FILE	_IO_USE_OLD_IO_FILE	
#if defined _G_IO_IO_FILE_VERSION && _G_IO_IO_FILE_VERSION == 0x20001	defined _G_IO_IO_FILE_VERSION && _G_IO_IO_FILE_VERSION == 0x20001	
#if defined _LIBC || defined _GLIBCPP_USE_WCHAR_T	defined _LIBC || defined _GLIBCPP_USE_WCHAR_T	
#ifndef __cplusplus	__cplusplus	
#ifndef _LIBC	_LIBC	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __cplusplus	__cplusplus	
#if defined _LIBC || defined _GLIBCPP_USE_WCHAR_T	defined _LIBC || defined _GLIBCPP_USE_WCHAR_T	
#if __GNUC__ >= 3	__GNUC__ >= 3	
#if defined _LIBC || defined _GLIBCPP_USE_WCHAR_T	defined _LIBC || defined _GLIBCPP_USE_WCHAR_T	
#ifndef _IO_cleanup_region_start	_IO_cleanup_region_start	
#ifndef _IO_cleanup_region_end	_IO_cleanup_region_end	
#if defined _LIBC || defined _GLIBCPP_USE_WCHAR_T	defined _LIBC || defined _GLIBCPP_USE_WCHAR_T	
#if __GNUC__ >= 2	__GNUC__ >= 2	
#if defined _LIBC && defined SHARED	defined _LIBC && defined SHARED	
#if SHLIB_COMPAT (libc, GLIBC_2_0, GLIBC_2_1)	SHLIB_COMPAT (libc, GLIBC_2_0, GLIBC_2_1)	
#ifndef _IO_fwide_maybe_incompatible	_IO_fwide_maybe_incompatible	
#ifdef __LDBL_COMPAT	__LDBL_COMPAT	
#ifdef __cplusplus	__cplusplus	
#define _STDIO_H 1	_STDIO_H	1
#define FOPEN_MAX 16	FOPEN_MAX	16
#undef FOPEN_MAX	FOPEN_MAX	
#define L_ctermid 9	L_ctermid	9
#define FILENAME_MAX 4096	FILENAME_MAX	4096
#define TMP_MAX 238328	TMP_MAX	238328
#define L_tmpnam 20	L_tmpnam	20
#define _BITS_STDIO_LIM_H 1	_BITS_STDIO_LIM_H	1
#ifndef _BITS_STDIO_LIM_H	_BITS_STDIO_LIM_H	
#ifndef _STDIO_H	_STDIO_H	
#ifdef __USE_POSIX	__USE_POSIX	
#if !defined __USE_XOPEN2K || defined __USE_GNU	!defined __USE_XOPEN2K || defined __USE_GNU	
#ifndef _STDIO_H	_STDIO_H	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_GNU	__USE_GNU	
#include <bits/sys_errlist.h>	<bits/sys_errlist.h>	
#include <bits/stdio_lim.h>	<bits/stdio_lim.h>	
#include <bits/libio.h>	<bits/libio.h>	
#include <bits/types/FILE.h>	<bits/types/FILE.h>	
#include <bits/types/__FILE.h>	<bits/types/__FILE.h>	
#include <bits/types.h>	<bits/types.h>	
#include <stddef.h>	<stddef.h>	
#include <bits/libc-header-start.h>	<bits/libc-header-start.h>	
#define putc(_ch,_fp) _IO_putc (_ch, _fp)	putc(_ch,_fp)	_IO_putc (_ch, _fp)
#define getc(_fp) _IO_getc (_fp)	getc(_fp)	_IO_getc (_fp)
#define stderr stderr	stderr	stderr
#define stdout stdout	stdout	stdout
#define stdin stdin	stdin	stdin
"#define P_tmpdir ""/tmp"""	P_tmpdir	"""/tmp"""
#define SEEK_END 2	SEEK_END	2
#define SEEK_CUR 1	SEEK_CUR	1
#define SEEK_SET 0	SEEK_SET	0
#define BUFSIZ _IO_BUFSIZ	BUFSIZ	_IO_BUFSIZ
#define _IONBF 2	_IONBF	2
#define _IOLBF 1	_IOLBF	1
#define _IOFBF 0	_IOFBF	0
#define __ssize_t_defined	__ssize_t_defined	
#define __off_t_defined	__off_t_defined	
#define _VA_LIST_DEFINED	_VA_LIST_DEFINED	
#define _STDIO_USES_IOSTREAM	_STDIO_USES_IOSTREAM	
#ifndef _STDIO_H	_STDIO_H	
#if defined __USE_XOPEN || defined __USE_XOPEN2K8	defined __USE_XOPEN || defined __USE_XOPEN2K8	
#ifdef __GNUC__	__GNUC__	
#ifndef _VA_LIST_DEFINED	_VA_LIST_DEFINED	
#if defined __USE_UNIX98 || defined __USE_XOPEN2K	defined __USE_UNIX98 || defined __USE_XOPEN2K	
#ifndef __off_t_defined	__off_t_defined	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#if defined __USE_LARGEFILE64 && !defined __off64_t_defined	defined __USE_LARGEFILE64 && !defined __off64_t_defined	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
#ifndef __ssize_t_defined	__ssize_t_defined	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifndef BUFSIZ	BUFSIZ	
#ifndef EOF	EOF	
#ifdef __USE_GNU	__USE_GNU	
#if defined __USE_MISC || defined __USE_XOPEN	defined __USE_MISC || defined __USE_XOPEN	
#ifdef __USE_ATFILE	__USE_ATFILE	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT	__REDIRECT	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifdef __USE_MISC	__USE_MISC	
#if defined __USE_MISC || defined __USE_XOPEN	defined __USE_MISC || defined __USE_XOPEN	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_GNU	__USE_GNU	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT	__REDIRECT	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifdef __USE_POSIX	__USE_POSIX	
#ifdef __USE_GNU	__USE_GNU	
#if defined __USE_XOPEN2K8 || __GLIBC_USE (LIB_EXT2)	defined __USE_XOPEN2K8 || __GLIBC_USE (LIB_EXT2)	
#ifdef __USE_MISC	__USE_MISC	
#if defined __USE_ISOC99 || defined __USE_UNIX98	defined __USE_ISOC99 || defined __USE_UNIX98	
#if __GLIBC_USE (LIB_EXT2)	__GLIBC_USE (LIB_EXT2)	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
#if defined __USE_ISOC99 && !defined __USE_GNU \	defined __USE_ISOC99 && !defined __USE_GNU \	
#ifdef __REDIRECT	__REDIRECT	
#ifdef __USE_ISOC99	__USE_ISOC99	
#if !defined __USE_GNU \	!defined __USE_GNU \	
#ifdef __REDIRECT	__REDIRECT	
#ifdef __USE_POSIX199506	__USE_POSIX199506	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_POSIX199506	__USE_POSIX199506	
#if defined __USE_MISC \	defined __USE_MISC \	
#if __GLIBC_USE (DEPRECATED_GETS)	__GLIBC_USE (DEPRECATED_GETS)	
#ifdef __USE_GNU	__USE_GNU	
#if defined __USE_XOPEN2K8 || __GLIBC_USE (LIB_EXT2)	defined __USE_XOPEN2K8 || __GLIBC_USE (LIB_EXT2)	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_MISC	__USE_MISC	
#if defined __USE_LARGEFILE || defined __USE_XOPEN2K	defined __USE_LARGEFILE || defined __USE_XOPEN2K	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT	__REDIRECT	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT	__REDIRECT	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_POSIX	__USE_POSIX	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_POSIX2	__USE_POSIX2	
#ifdef __USE_POSIX	__USE_POSIX	
#if (defined __USE_XOPEN && !defined __USE_XOPEN2K) || defined __USE_GNU	(defined __USE_XOPEN && !defined __USE_XOPEN2K) || defined __USE_GNU	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_POSIX199506	__USE_POSIX199506	
#if defined __USE_XOPEN && !defined __USE_XOPEN2K && !defined __USE_GNU	defined __USE_XOPEN && !defined __USE_XOPEN2K && !defined __USE_GNU	
#ifdef __USE_EXTERN_INLINES	__USE_EXTERN_INLINES	
#if __USE_FORTIFY_LEVEL > 0 && defined __fortify_function	__USE_FORTIFY_LEVEL > 0 && defined __fortify_function	
#ifdef __LDBL_COMPAT	__LDBL_COMPAT	
#define __USER_LABEL_PREFIX__	__USER_LABEL_PREFIX__	
#define __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION	__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION	
#undef __need_wchar_t	__need_wchar_t	
#undef _BSD_WCHAR_T_	_BSD_WCHAR_T_	
#define _WCHAR_T_DECLARED	_WCHAR_T_DECLARED	
#define _GCC_WCHAR_T	_GCC_WCHAR_T	
#define __INT_WCHAR_T_H	__INT_WCHAR_T_H	
#define ___int_wchar_t_h	___int_wchar_t_h	
#define _WCHAR_T_H	_WCHAR_T_H	
#define _WCHAR_T_DEFINED	_WCHAR_T_DEFINED	
#define _WCHAR_T_DEFINED_	_WCHAR_T_DEFINED_	
#define _BSD_WCHAR_T_	_BSD_WCHAR_T_	
#define _WCHAR_T_	_WCHAR_T_	
#define __WCHAR_T	__WCHAR_T	
#define _T_WCHAR	_T_WCHAR	
#define _T_WCHAR_	_T_WCHAR_	
#define _WCHAR_T	_WCHAR_T	
#define __WCHAR_T__	__WCHAR_T__	
#define __wchar_t__	__wchar_t__	
#define __need_NULL	__need_NULL	
#define __WCHAR_TYPE__ int	__WCHAR_TYPE__	int
#define __need_wchar_t	__need_wchar_t	
#define __need_size_t	__need_size_t	
#undef P_PGID	P_PGID	
#undef P_PID	P_PID	
#undef P_ALL	P_ALL	
#define __ENUM_IDTYPE_T 1	__ENUM_IDTYPE_T	1
#define __WCLONE 0x80000000	__WCLONE	0x80000000
#define __WALL 0x40000000	__WALL	0x40000000
#define __WNOTHREAD 0x20000000	__WNOTHREAD	0x20000000
#define WNOWAIT 0x01000000	WNOWAIT	0x01000000
#define WCONTINUED 8	WCONTINUED	8
#define WEXITED 4	WEXITED	4
#define WSTOPPED 2	WSTOPPED	2
#define WUNTRACED 2	WUNTRACED	2
#define WNOHANG 1	WNOHANG	1
#if !defined _SYS_WAIT_H && !defined _STDLIB_H	!defined _SYS_WAIT_H && !defined _STDLIB_H	
#if defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	
#if defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	
#ifndef __ENUM_IDTYPE_T	__ENUM_IDTYPE_T	
#define _STDLIB_H 1	_STDLIB_H	1
#define __WCOREFLAG 0x80	__WCOREFLAG	0x80
#define __W_CONTINUED 0xffff	__W_CONTINUED	0xffff
#define __W_STOPCODE(sig) ((sig) << 8 | 0x7f)	__W_STOPCODE(sig)	((sig) << 8 | 0x7f)
#define __W_EXITCODE(ret,sig) ((ret) << 8 | (sig))	__W_EXITCODE(ret,sig)	((ret) << 8 | (sig))
#define __WCOREDUMP(status) ((status) & __WCOREFLAG)	__WCOREDUMP(status)	((status) & __WCOREFLAG)
#define __WIFCONTINUED(status) ((status) == __W_CONTINUED)	__WIFCONTINUED(status)	((status) == __W_CONTINUED)
#define __WIFSTOPPED(status) (((status) & 0xff) == 0x7f)	__WIFSTOPPED(status)	(((status) & 0xff) == 0x7f)
#define __WIFSIGNALED(status) (((signed char) (((status) & 0x7f) + 1) >> 1) > 0)	__WIFSIGNALED(status)	(((signed char) (((status) & 0x7f) + 1) >> 1) > 0)
#define __WIFEXITED(status) (__WTERMSIG(status) == 0)	__WIFEXITED(status)	(__WTERMSIG(status) == 0)
#define __WSTOPSIG(status) __WEXITSTATUS(status)	__WSTOPSIG(status)	__WEXITSTATUS(status)
#define __WTERMSIG(status) ((status) & 0x7f)	__WTERMSIG(status)	((status) & 0x7f)
#define __WEXITSTATUS(status) (((status) & 0xff00) >> 8)	__WEXITSTATUS(status)	(((status) & 0xff00) >> 8)
#if !defined _SYS_WAIT_H && !defined _STDLIB_H	!defined _SYS_WAIT_H && !defined _STDLIB_H	
#ifdef WCONTINUED	WCONTINUED	
#include <bits/long-double.h>	<bits/long-double.h>	
#include <features.h>	<features.h>	
#define __CFLOAT64X _Complex _Float64x	__CFLOAT64X	_Complex _Float64x
#define __CFLOAT32X _Complex _Float32x	__CFLOAT32X	_Complex _Float32x
#define __CFLOAT64 _Complex _Float64	__CFLOAT64	_Complex _Float64
#define __CFLOAT32 _Complex _Float32	__CFLOAT32	_Complex _Float32
#define __f64x(x) x ## f64x	__f64x(x)	x ## f64x
#define __f32x(x) x ## f32x	__f32x(x)	x ## f32x
#define __f64(x) x ## f64	__f64(x)	x ## f64
#define __f32(x) x ## f32	__f32(x)	x ## f32
#define __HAVE_FLOATN_NOT_TYPEDEF 1	__HAVE_FLOATN_NOT_TYPEDEF	1
#define __HAVE_DISTINCT_FLOAT128X __HAVE_FLOAT128X	__HAVE_DISTINCT_FLOAT128X	__HAVE_FLOAT128X
#define __HAVE_DISTINCT_FLOAT64X 0	__HAVE_DISTINCT_FLOAT64X	0
#define __HAVE_DISTINCT_FLOAT32X 0	__HAVE_DISTINCT_FLOAT32X	0
#define __HAVE_DISTINCT_FLOAT64 0	__HAVE_DISTINCT_FLOAT64	0
#define __HAVE_DISTINCT_FLOAT32 0	__HAVE_DISTINCT_FLOAT32	0
#define __HAVE_DISTINCT_FLOAT16 __HAVE_FLOAT16	__HAVE_DISTINCT_FLOAT16	__HAVE_FLOAT16
#define __HAVE_FLOAT128X 0	__HAVE_FLOAT128X	0
#define __HAVE_FLOAT32X 1	__HAVE_FLOAT32X	1
#define __HAVE_FLOAT64 1	__HAVE_FLOAT64	1
#define __HAVE_FLOAT32 1	__HAVE_FLOAT32	1
#define __HAVE_FLOAT16 0	__HAVE_FLOAT16	0
#define _BITS_FLOATN_COMMON_H	_BITS_FLOATN_COMMON_H	
#ifndef _BITS_FLOATN_COMMON_H	_BITS_FLOATN_COMMON_H	
#if __GNUC_PREREQ (7, 0) && !defined __cplusplus	__GNUC_PREREQ (7, 0) && !defined __cplusplus	
#ifndef __ASSEMBLER__	__ASSEMBLER__	
#if __HAVE_FLOAT16	__HAVE_FLOAT16	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if __HAVE_FLOAT32	__HAVE_FLOAT32	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if __HAVE_FLOAT64	__HAVE_FLOAT64	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#ifdef __NO_LONG_DOUBLE_MATH	__NO_LONG_DOUBLE_MATH	
#if __HAVE_FLOAT32X	__HAVE_FLOAT32X	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if __HAVE_FLOAT64X	__HAVE_FLOAT64X	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if __HAVE_FLOAT64X_LONG_DOUBLE	__HAVE_FLOAT64X_LONG_DOUBLE	
#if __HAVE_FLOAT128X	__HAVE_FLOAT128X	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if __HAVE_FLOAT16	__HAVE_FLOAT16	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if __HAVE_FLOAT32	__HAVE_FLOAT32	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if __HAVE_FLOAT64	__HAVE_FLOAT64	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#ifdef __NO_LONG_DOUBLE_MATH	__NO_LONG_DOUBLE_MATH	
#if __HAVE_FLOAT32X	__HAVE_FLOAT32X	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if __HAVE_FLOAT64X	__HAVE_FLOAT64X	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if __HAVE_FLOAT64X_LONG_DOUBLE	__HAVE_FLOAT64X_LONG_DOUBLE	
#if __HAVE_FLOAT128X	__HAVE_FLOAT128X	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if __HAVE_FLOAT16	__HAVE_FLOAT16	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if !__GNUC_PREREQ (7, 0)	!__GNUC_PREREQ (7, 0)	
#if __HAVE_FLOAT32	__HAVE_FLOAT32	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if !__GNUC_PREREQ (7, 0)	!__GNUC_PREREQ (7, 0)	
#if __HAVE_FLOAT64	__HAVE_FLOAT64	
#ifdef __NO_LONG_DOUBLE_MATH	__NO_LONG_DOUBLE_MATH	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if !__GNUC_PREREQ (7, 0)	!__GNUC_PREREQ (7, 0)	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if !__GNUC_PREREQ (7, 0)	!__GNUC_PREREQ (7, 0)	
#if __HAVE_FLOAT32X	__HAVE_FLOAT32X	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if !__GNUC_PREREQ (7, 0)	!__GNUC_PREREQ (7, 0)	
#if __HAVE_FLOAT64X	__HAVE_FLOAT64X	
#if __HAVE_FLOAT64X_LONG_DOUBLE	__HAVE_FLOAT64X_LONG_DOUBLE	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if !__GNUC_PREREQ (7, 0)	!__GNUC_PREREQ (7, 0)	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if !__GNUC_PREREQ (7, 0)	!__GNUC_PREREQ (7, 0)	
#if __HAVE_FLOAT128X	__HAVE_FLOAT128X	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if !__GNUC_PREREQ (7, 0)	!__GNUC_PREREQ (7, 0)	
#define __HAVE_FLOAT64X_LONG_DOUBLE 1	__HAVE_FLOAT64X_LONG_DOUBLE	1
#define __HAVE_FLOAT64X 1	__HAVE_FLOAT64X	1
#include <bits/floatn-common.h>	<bits/floatn-common.h>	
#include <features.h>	<features.h>	
#define __CFLOAT128 _Complex _Float128	__CFLOAT128	_Complex _Float128
#define __f128(x) x ## f128	__f128(x)	x ## f128
#define __HAVE_DISTINCT_FLOAT128 1	__HAVE_DISTINCT_FLOAT128	1
#define __HAVE_FLOAT128 1	__HAVE_FLOAT128	1
#define _BITS_FLOATN_H	_BITS_FLOATN_H	
#ifndef _BITS_FLOATN_H	_BITS_FLOATN_H	
"#if (defined __x86_64__							\"	"(defined __x86_64__							\"	
#if __HAVE_FLOAT128	__HAVE_FLOAT128	
#ifndef __ASSEMBLER__	__ASSEMBLER__	
#if __HAVE_FLOAT128	__HAVE_FLOAT128	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if __HAVE_FLOAT128	__HAVE_FLOAT128	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if __HAVE_FLOAT128	__HAVE_FLOAT128	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if !__GNUC_PREREQ (7, 0)	!__GNUC_PREREQ (7, 0)	
#if !__GNUC_PREREQ (7, 0)	!__GNUC_PREREQ (7, 0)	
#if !__GNUC_PREREQ (6, 0)	!__GNUC_PREREQ (6, 0)	
#include <bits/types.h>	<bits/types.h>	
#define __clock_t_defined 1	__clock_t_defined	1
#ifndef __clock_t_defined	__clock_t_defined	
#include <bits/types.h>	<bits/types.h>	
#define __clockid_t_defined 1	__clockid_t_defined	1
#ifndef __clockid_t_defined	__clockid_t_defined	
#include <bits/types.h>	<bits/types.h>	
#define __time_t_defined 1	__time_t_defined	1
#ifndef __time_t_defined	__time_t_defined	
#include <bits/types.h>	<bits/types.h>	
#define __timer_t_defined 1	__timer_t_defined	1
#ifndef __timer_t_defined	__timer_t_defined	
#define __need_size_t	__need_size_t	
#include <bits/types.h>	<bits/types.h>	
#define _BITS_STDINT_INTN_H 1	_BITS_STDINT_INTN_H	1
#ifndef _BITS_STDINT_INTN_H	_BITS_STDINT_INTN_H	
#define __BYTE_ORDER __LITTLE_ENDIAN	__BYTE_ORDER	__LITTLE_ENDIAN
#ifndef _ENDIAN_H	_ENDIAN_H	
#define _ENDIAN_H 1	_ENDIAN_H	1
"#define __bswap_16(x) (__extension__ ({ unsigned short int __v, __x = (unsigned short int) (x); if (__builtin_constant_p (__x)) __v = __bswap_constant_16 (__x); else __asm__ (""rorw $8, %w0"" : ""=r"" (__v) : ""0"" (__x) : ""cc""); __v; }))"	__bswap_16(x)	"(__extension__ ({ unsigned short int __v, __x = (unsigned short int) (x); if (__builtin_constant_p (__x)) __v = __bswap_constant_16 (__x); else __asm__ (""rorw $8, %w0"" : ""=r"" (__v) : ""0"" (__x) : ""cc""); __v; }))"
#ifndef _BITS_BYTESWAP_H	_BITS_BYTESWAP_H	
#ifdef __GNUC__	__GNUC__	
#if __GNUC__ >= 2	__GNUC__ >= 2	
#define _BITS_BYTESWAP_H 1	_BITS_BYTESWAP_H	1
#include <bits/byteswap-16.h>	<bits/byteswap-16.h>	
#include <bits/wordsize.h>	<bits/wordsize.h>	
#include <bits/types.h>	<bits/types.h>	
#include <features.h>	<features.h>	
#define __bswap_constant_64(x) (__extension__ ((((x) & 0xff00000000000000ull) >> 56) | (((x) & 0x00ff000000000000ull) >> 40) | (((x) & 0x0000ff0000000000ull) >> 24) | (((x) & 0x000000ff00000000ull) >> 8) | (((x) & 0x00000000ff000000ull) << 8) | (((x) & 0x0000000000ff0000ull) << 24) | (((x) & 0x000000000000ff00ull) << 40) | (((x) & 0x00000000000000ffull) << 56)))	__bswap_constant_64(x)	(__extension__ ((((x) & 0xff00000000000000ull) >> 56) | (((x) & 0x00ff000000000000ull) >> 40) | (((x) & 0x0000ff0000000000ull) >> 24) | (((x) & 0x000000ff00000000ull) >> 8) | (((x) & 0x00000000ff000000ull) << 8) | (((x) & 0x0000000000ff0000ull) << 24) | (((x) & 0x000000000000ff00ull) << 40) | (((x) & 0x00000000000000ffull) << 56)))
#define __bswap_constant_32(x) ((((x) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | (((x) & 0x0000ff00) << 8) | (((x) & 0x000000ff) << 24))	__bswap_constant_32(x)	((((x) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | (((x) & 0x0000ff00) << 8) | (((x) & 0x000000ff) << 24))
#define __bswap_constant_16(x) ((unsigned short int) ((((x) >> 8) & 0xff) | (((x) & 0xff) << 8)))	__bswap_constant_16(x)	((unsigned short int) ((((x) >> 8) & 0xff) | (((x) & 0xff) << 8)))
#if !defined _BYTESWAP_H && !defined _NETINET_IN_H && !defined _ENDIAN_H	!defined _BYTESWAP_H && !defined _NETINET_IN_H && !defined _ENDIAN_H	
#ifndef _BITS_BYTESWAP_H	_BITS_BYTESWAP_H	
#ifdef __GNUC__	__GNUC__	
#if __GNUC_PREREQ (4, 3)	__GNUC_PREREQ (4, 3)	
#elif __GNUC__ >= 2	__GNUC__ >= 2	
"#if __WORDSIZE == 64 || (defined __i486__ || defined __pentium__	      \"	"__WORDSIZE == 64 || (defined __i486__ || defined __pentium__	      \"	
#if __GNUC_PREREQ (2, 0)	__GNUC_PREREQ (2, 0)	
#if __GNUC_PREREQ (4, 3)	__GNUC_PREREQ (4, 3)	
#elif __WORDSIZE == 64	__WORDSIZE == 64	
#include <bits/types.h>	<bits/types.h>	
#define _BITS_UINTN_IDENTITY_H 1	_BITS_UINTN_IDENTITY_H	1
#if !defined _NETINET_IN_H && !defined _ENDIAN_H	!defined _NETINET_IN_H && !defined _ENDIAN_H	
#ifndef _BITS_UINTN_IDENTITY_H	_BITS_UINTN_IDENTITY_H	
#include <bits/uintn-identity.h>	<bits/uintn-identity.h>	
#include <bits/byteswap.h>	<bits/byteswap.h>	
#include <bits/endian.h>	<bits/endian.h>	
#include <features.h>	<features.h>	
#define le64toh(x) __uint64_identity (x)	le64toh(x)	__uint64_identity (x)
#define be64toh(x) __bswap_64 (x)	be64toh(x)	__bswap_64 (x)
#define htole64(x) __uint64_identity (x)	htole64(x)	__uint64_identity (x)
#define htobe64(x) __bswap_64 (x)	htobe64(x)	__bswap_64 (x)
#define le32toh(x) __uint32_identity (x)	le32toh(x)	__uint32_identity (x)
#define be32toh(x) __bswap_32 (x)	be32toh(x)	__bswap_32 (x)
#define htole32(x) __uint32_identity (x)	htole32(x)	__uint32_identity (x)
#define htobe32(x) __bswap_32 (x)	htobe32(x)	__bswap_32 (x)
#define le16toh(x) __uint16_identity (x)	le16toh(x)	__uint16_identity (x)
#define be16toh(x) __bswap_16 (x)	be16toh(x)	__bswap_16 (x)
#define htole16(x) __uint16_identity (x)	htole16(x)	__uint16_identity (x)
#define htobe16(x) __bswap_16 (x)	htobe16(x)	__bswap_16 (x)
#define __LONG_LONG_PAIR(HI,LO) LO, HI	__LONG_LONG_PAIR(HI,LO)	LO, HI
#define BYTE_ORDER __BYTE_ORDER	BYTE_ORDER	__BYTE_ORDER
#define PDP_ENDIAN __PDP_ENDIAN	PDP_ENDIAN	__PDP_ENDIAN
#define BIG_ENDIAN __BIG_ENDIAN	BIG_ENDIAN	__BIG_ENDIAN
#define LITTLE_ENDIAN __LITTLE_ENDIAN	LITTLE_ENDIAN	__LITTLE_ENDIAN
#define __FLOAT_WORD_ORDER __BYTE_ORDER	__FLOAT_WORD_ORDER	__BYTE_ORDER
#define __PDP_ENDIAN 3412	__PDP_ENDIAN	3412
#define __BIG_ENDIAN 4321	__BIG_ENDIAN	4321
#define __LITTLE_ENDIAN 1234	__LITTLE_ENDIAN	1234
#ifndef _ENDIAN_H	_ENDIAN_H	
#ifndef __FLOAT_WORD_ORDER	__FLOAT_WORD_ORDER	
#ifdef __USE_MISC	__USE_MISC	
#if __BYTE_ORDER == __LITTLE_ENDIAN	__BYTE_ORDER == __LITTLE_ENDIAN	
#elif __BYTE_ORDER == __BIG_ENDIAN	__BYTE_ORDER == __BIG_ENDIAN	
#if defined __USE_MISC && !defined __ASSEMBLER__	defined __USE_MISC && !defined __ASSEMBLER__	
#if __BYTE_ORDER == __LITTLE_ENDIAN	__BYTE_ORDER == __LITTLE_ENDIAN	
#include <bits/wordsize.h>	<bits/wordsize.h>	
#define __FD_ISSET(d,set) ((__FDS_BITS (set)[__FD_ELT (d)] & __FD_MASK (d)) != 0)	__FD_ISSET(d,set)	((__FDS_BITS (set)[__FD_ELT (d)] & __FD_MASK (d)) != 0)
#define __FD_CLR(d,set) ((void) (__FDS_BITS (set)[__FD_ELT (d)] &= ~__FD_MASK (d)))	__FD_CLR(d,set)	((void) (__FDS_BITS (set)[__FD_ELT (d)] &= ~__FD_MASK (d)))
#define __FD_SET(d,set) ((void) (__FDS_BITS (set)[__FD_ELT (d)] |= __FD_MASK (d)))	__FD_SET(d,set)	((void) (__FDS_BITS (set)[__FD_ELT (d)] |= __FD_MASK (d)))
"#define __FD_ZERO(fdsp) do { int __d0, __d1; __asm__ __volatile__ (""cld; rep; "" __FD_ZERO_STOS : ""=c"" (__d0), ""=D"" (__d1) : ""a"" (0), ""0"" (sizeof (fd_set) / sizeof (__fd_mask)), ""1"" (&__FDS_BITS (fdsp)[0]) : ""memory""); } while (0)"	__FD_ZERO(fdsp)	"do { int __d0, __d1; __asm__ __volatile__ (""cld; rep; "" __FD_ZERO_STOS : ""=c"" (__d0), ""=D"" (__d1) : ""a"" (0), ""0"" (sizeof (fd_set) / sizeof (__fd_mask)), ""1"" (&__FDS_BITS (fdsp)[0]) : ""memory""); } while (0)"
"#define __FD_ZERO_STOS ""stosq"""	__FD_ZERO_STOS	"""stosq"""
#ifndef _SYS_SELECT_H	_SYS_SELECT_H	
#if defined __GNUC__ && __GNUC__ >= 2	defined __GNUC__ && __GNUC__ >= 2	
#if __WORDSIZE == 64	__WORDSIZE == 64	
#define _SYS_SELECT_H 1	_SYS_SELECT_H	1
#define _SIGSET_NWORDS (1024 / (8 * sizeof (unsigned long int)))	_SIGSET_NWORDS	(1024 / (8 * sizeof (unsigned long int)))
#define ____sigset_t_defined	____sigset_t_defined	
#ifndef ____sigset_t_defined	____sigset_t_defined	
#include <bits/types/__sigset_t.h>	<bits/types/__sigset_t.h>	
#define __sigset_t_defined 1	__sigset_t_defined	1
#ifndef __sigset_t_defined	__sigset_t_defined	
#include <bits/types.h>	<bits/types.h>	
#define __timeval_defined 1	__timeval_defined	1
#ifndef __timeval_defined	__timeval_defined	
#include <bits/types.h>	<bits/types.h>	
#define __timespec_defined 1	__timespec_defined	1
#ifndef __timespec_defined	__timespec_defined	
#include <bits/types/struct_timespec.h>	<bits/types/struct_timespec.h>	
#include <bits/types/struct_timeval.h>	<bits/types/struct_timeval.h>	
#include <bits/types/time_t.h>	<bits/types/time_t.h>	
#include <bits/types/sigset_t.h>	<bits/types/sigset_t.h>	
#include <bits/select.h>	<bits/select.h>	
#include <bits/types.h>	<bits/types.h>	
#include <features.h>	<features.h>	
#define __NFDBITS (8 * (int) sizeof (__fd_mask))	__NFDBITS	(8 * (int) sizeof (__fd_mask))
#define FD_ZERO(fdsetp) __FD_ZERO (fdsetp)	FD_ZERO(fdsetp)	__FD_ZERO (fdsetp)
#define FD_ISSET(fd,fdsetp) __FD_ISSET (fd, fdsetp)	FD_ISSET(fd,fdsetp)	__FD_ISSET (fd, fdsetp)
#define FD_CLR(fd,fdsetp) __FD_CLR (fd, fdsetp)	FD_CLR(fd,fdsetp)	__FD_CLR (fd, fdsetp)
#define FD_SET(fd,fdsetp) __FD_SET (fd, fdsetp)	FD_SET(fd,fdsetp)	__FD_SET (fd, fdsetp)
#define NFDBITS __NFDBITS	NFDBITS	__NFDBITS
#define FD_SETSIZE __FD_SETSIZE	FD_SETSIZE	__FD_SETSIZE
#define __FDS_BITS(set) ((set)->__fds_bits)	__FDS_BITS(set)	((set)->__fds_bits)
#define __FD_MASK(d) ((__fd_mask) (1UL << ((d) % __NFDBITS)))	__FD_MASK(d)	((__fd_mask) (1UL << ((d) % __NFDBITS)))
#define __FD_ELT(d) ((d) / __NFDBITS)	__FD_ELT(d)	((d) / __NFDBITS)
#undef __NFDBITS	__NFDBITS	
#define __suseconds_t_defined	__suseconds_t_defined	
#ifndef _SYS_SELECT_H	_SYS_SELECT_H	
#ifdef __USE_XOPEN2K	__USE_XOPEN2K	
#ifndef __suseconds_t_defined	__suseconds_t_defined	
#ifdef __USE_XOPEN	__USE_XOPEN	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_XOPEN2K	__USE_XOPEN2K	
#if __USE_FORTIFY_LEVEL > 0 && defined __GNUC__	__USE_FORTIFY_LEVEL > 0 && defined __GNUC__	
#define __SYSMACROS_DEFINE_MAKEDEV(DECL_TEMPL) __SYSMACROS_DECLARE_MAKEDEV (DECL_TEMPL) { __dev_t __dev; __dev = (((__dev_t) (__major & 0x00000fffu)) << 8); __dev |= (((__dev_t) (__major & 0xfffff000u)) << 32); __dev |= (((__dev_t) (__minor & 0x000000ffu)) << 0); __dev |= (((__dev_t) (__minor & 0xffffff00u)) << 12); return __dev; }	__SYSMACROS_DEFINE_MAKEDEV(DECL_TEMPL)	__SYSMACROS_DECLARE_MAKEDEV (DECL_TEMPL) { __dev_t __dev; __dev = (((__dev_t) (__major & 0x00000fffu)) << 8); __dev |= (((__dev_t) (__major & 0xfffff000u)) << 32); __dev |= (((__dev_t) (__minor & 0x000000ffu)) << 0); __dev |= (((__dev_t) (__minor & 0xffffff00u)) << 12); return __dev; }
#define __SYSMACROS_DECLARE_MAKEDEV(DECL_TEMPL) DECL_TEMPL(__dev_t, makedev, (unsigned int __major, unsigned int __minor))	__SYSMACROS_DECLARE_MAKEDEV(DECL_TEMPL)	DECL_TEMPL(__dev_t, makedev, (unsigned int __major, unsigned int __minor))
#define __SYSMACROS_DEFINE_MINOR(DECL_TEMPL) __SYSMACROS_DECLARE_MINOR (DECL_TEMPL) { unsigned int __minor; __minor = ((__dev & (__dev_t) 0x00000000000000ffu) >> 0); __minor |= ((__dev & (__dev_t) 0x00000ffffff00000u) >> 12); return __minor; }	__SYSMACROS_DEFINE_MINOR(DECL_TEMPL)	__SYSMACROS_DECLARE_MINOR (DECL_TEMPL) { unsigned int __minor; __minor = ((__dev & (__dev_t) 0x00000000000000ffu) >> 0); __minor |= ((__dev & (__dev_t) 0x00000ffffff00000u) >> 12); return __minor; }
#define __SYSMACROS_DECLARE_MINOR(DECL_TEMPL) DECL_TEMPL(unsigned int, minor, (__dev_t __dev))	__SYSMACROS_DECLARE_MINOR(DECL_TEMPL)	DECL_TEMPL(unsigned int, minor, (__dev_t __dev))
#define __SYSMACROS_DEFINE_MAJOR(DECL_TEMPL) __SYSMACROS_DECLARE_MAJOR (DECL_TEMPL) { unsigned int __major; __major = ((__dev & (__dev_t) 0x00000000000fff00u) >> 8); __major |= ((__dev & (__dev_t) 0xfffff00000000000u) >> 32); return __major; }	__SYSMACROS_DEFINE_MAJOR(DECL_TEMPL)	__SYSMACROS_DECLARE_MAJOR (DECL_TEMPL) { unsigned int __major; __major = ((__dev & (__dev_t) 0x00000000000fff00u) >> 8); __major |= ((__dev & (__dev_t) 0xfffff00000000000u) >> 32); return __major; }
#define __SYSMACROS_DECLARE_MAJOR(DECL_TEMPL) DECL_TEMPL(unsigned int, major, (__dev_t __dev))	__SYSMACROS_DECLARE_MAJOR(DECL_TEMPL)	DECL_TEMPL(unsigned int, major, (__dev_t __dev))
#define _BITS_SYSMACROS_H 1	_BITS_SYSMACROS_H	1
#ifndef _BITS_SYSMACROS_H	_BITS_SYSMACROS_H	
#ifndef _SYS_SYSMACROS_H	_SYS_SYSMACROS_H	
#define _SYS_SYSMACROS_H 1	_SYS_SYSMACROS_H	1
#include <bits/sysmacros.h>	<bits/sysmacros.h>	
#include <bits/types.h>	<bits/types.h>	
#include <features.h>	<features.h>	
#define makedev(maj,min) __SYSMACROS_DM (makedev) gnu_dev_makedev (maj, min)	makedev(maj,min)	__SYSMACROS_DM (makedev) gnu_dev_makedev (maj, min)
#define minor(dev) __SYSMACROS_DM (minor) gnu_dev_minor (dev)	minor(dev)	__SYSMACROS_DM (minor) gnu_dev_minor (dev)
#define major(dev) __SYSMACROS_DM (major) gnu_dev_major (dev)	major(dev)	__SYSMACROS_DM (major) gnu_dev_major (dev)
#undef __SYSMACROS_DEFINE_MAKEDEV	__SYSMACROS_DEFINE_MAKEDEV	
#undef __SYSMACROS_DEFINE_MINOR	__SYSMACROS_DEFINE_MINOR	
#undef __SYSMACROS_DEFINE_MAJOR	__SYSMACROS_DEFINE_MAJOR	
#undef __SYSMACROS_DECLARE_MAKEDEV	__SYSMACROS_DECLARE_MAKEDEV	
#undef __SYSMACROS_DECLARE_MINOR	__SYSMACROS_DECLARE_MINOR	
#undef __SYSMACROS_DECLARE_MAJOR	__SYSMACROS_DECLARE_MAJOR	
#undef __SYSMACROS_IMPL_TEMPL	__SYSMACROS_IMPL_TEMPL	
#undef __SYSMACROS_DECL_TEMPL	__SYSMACROS_DECL_TEMPL	
#define __SYSMACROS_IMPL_TEMPL(rtype,name,proto) __extension__ __extern_inline __attribute_const__ rtype __NTH (gnu_dev_ ## name proto)	__SYSMACROS_IMPL_TEMPL(rtype,name,proto)	__extension__ __extern_inline __attribute_const__ rtype __NTH (gnu_dev_ ## name proto)
#define __SYSMACROS_DECL_TEMPL(rtype,name,proto) extern rtype gnu_dev_ ## name proto __THROW __attribute_const__;	__SYSMACROS_DECL_TEMPL(rtype,name,proto)	extern rtype gnu_dev_ ## name proto __THROW __attribute_const__;
#define __SYSMACROS_DM1(__VA_ARGS__...) __glibc_macro_warning (#__VA_ARGS__)	__SYSMACROS_DM1(__VA_ARGS__...)	__glibc_macro_warning (#__VA_ARGS__)
#define __SYSMACROS_DM(symbol) __SYSMACROS_DM1 (In the GNU C Library, #symbol is defined\n by <sys/sysmacros.h>. For historical compatibility, it is\n currently defined by <sys/types.h> as well, but we plan to\n remove this soon. To use #symbol, include <sys/sysmacros.h>\n directly. If you did not intend to use a system-defined macro\n #symbol, you should undefine it after including <sys/types.h>.)	__SYSMACROS_DM(symbol)	__SYSMACROS_DM1 (In the GNU C Library, #symbol is defined\n by <sys/sysmacros.h>. For historical compatibility, it is\n currently defined by <sys/types.h> as well, but we plan to\n remove this soon. To use #symbol, include <sys/sysmacros.h>\n directly. If you did not intend to use a system-defined macro\n #symbol, you should undefine it after including <sys/types.h>.)
#undef makedev	makedev	
#undef minor	minor	
#undef major	major	
#ifndef _SYS_SYSMACROS_H_OUTER	_SYS_SYSMACROS_H_OUTER	
#ifndef __SYSMACROS_DEPRECATED_INCLUSION	__SYSMACROS_DEPRECATED_INCLUSION	
#ifndef _SYS_SYSMACROS_H	_SYS_SYSMACROS_H	
#ifdef __USE_EXTERN_INLINES	__USE_EXTERN_INLINES	
#ifndef __SYSMACROS_NEED_IMPLEMENTATION	__SYSMACROS_NEED_IMPLEMENTATION	
#ifdef __SYSMACROS_DEPRECATED_INCLUSION	__SYSMACROS_DEPRECATED_INCLUSION	
#define __SYSMACROS_DEPRECATED_INCLUSION	__SYSMACROS_DEPRECATED_INCLUSION	
#include <bits/wordsize.h>	<bits/wordsize.h>	
#define __PTHREAD_RWLOCK_INT_FLAGS_SHARED 1	__PTHREAD_RWLOCK_INT_FLAGS_SHARED	1
#define __PTHREAD_RWLOCK_ELISION_EXTRA 0, { 0, 0, 0, 0, 0, 0, 0 }	__PTHREAD_RWLOCK_ELISION_EXTRA	0, { 0, 0, 0, 0, 0, 0, 0 }
#define __ONCE_ALIGNMENT	__ONCE_ALIGNMENT	
#define __LOCK_ALIGNMENT	__LOCK_ALIGNMENT	
#define __PTHREAD_MUTEX_USE_UNION 0	__PTHREAD_MUTEX_USE_UNION	0
#define __PTHREAD_MUTEX_NUSERS_AFTER_KIND 0	__PTHREAD_MUTEX_NUSERS_AFTER_KIND	0
#define __PTHREAD_MUTEX_LOCK_ELISION 1	__PTHREAD_MUTEX_LOCK_ELISION	1
#define __PTHREAD_COMPAT_PADDING_END	__PTHREAD_COMPAT_PADDING_END	
#define __PTHREAD_COMPAT_PADDING_MID	__PTHREAD_COMPAT_PADDING_MID	
#define __SIZEOF_PTHREAD_BARRIERATTR_T 4	__SIZEOF_PTHREAD_BARRIERATTR_T	4
#define __SIZEOF_PTHREAD_RWLOCKATTR_T 8	__SIZEOF_PTHREAD_RWLOCKATTR_T	8
#define __SIZEOF_PTHREAD_CONDATTR_T 4	__SIZEOF_PTHREAD_CONDATTR_T	4
#define __SIZEOF_PTHREAD_COND_T 48	__SIZEOF_PTHREAD_COND_T	48
#define __SIZEOF_PTHREAD_MUTEXATTR_T 4	__SIZEOF_PTHREAD_MUTEXATTR_T	4
#define __SIZEOF_PTHREAD_BARRIER_T 32	__SIZEOF_PTHREAD_BARRIER_T	32
#define __SIZEOF_PTHREAD_RWLOCK_T 56	__SIZEOF_PTHREAD_RWLOCK_T	56
#define __SIZEOF_PTHREAD_MUTEX_T 40	__SIZEOF_PTHREAD_MUTEX_T	40
#define __SIZEOF_PTHREAD_ATTR_T 56	__SIZEOF_PTHREAD_ATTR_T	56
#define __SIZEOF_PTHREAD_MUTEX_T 40	__SIZEOF_PTHREAD_MUTEX_T	40
#define _BITS_PTHREADTYPES_ARCH_H 1	_BITS_PTHREADTYPES_ARCH_H	1
#ifndef _BITS_PTHREADTYPES_ARCH_H	_BITS_PTHREADTYPES_ARCH_H	
#ifdef __x86_64__	__x86_64__	
#if __WORDSIZE == 64	__WORDSIZE == 64	
#ifdef __x86_64__	__x86_64__	
#ifdef __x86_64__	__x86_64__	
#ifdef __ILP32__	__ILP32__	
#ifndef __x86_64__	__x86_64__	
#include <bits/pthreadtypes-arch.h>	<bits/pthreadtypes-arch.h>	
#define __PTHREAD_SPINS_DATA short __spins; short __elision	__PTHREAD_SPINS_DATA	short __spins; short __elision
#define __PTHREAD_MUTEX_HAVE_PREV 1	__PTHREAD_MUTEX_HAVE_PREV	1
#define __PTHREAD_SPINS 0, 0	__PTHREAD_SPINS	0, 0
#define _THREAD_SHARED_TYPES_H 1	_THREAD_SHARED_TYPES_H	1
#ifndef _THREAD_SHARED_TYPES_H	_THREAD_SHARED_TYPES_H	
#if !__PTHREAD_MUTEX_USE_UNION	!__PTHREAD_MUTEX_USE_UNION	
#if __PTHREAD_MUTEX_LOCK_ELISION	__PTHREAD_MUTEX_LOCK_ELISION	
#if !__PTHREAD_MUTEX_USE_UNION	!__PTHREAD_MUTEX_USE_UNION	
#if !__PTHREAD_MUTEX_NUSERS_AFTER_KIND	!__PTHREAD_MUTEX_NUSERS_AFTER_KIND	
#if __PTHREAD_MUTEX_NUSERS_AFTER_KIND	__PTHREAD_MUTEX_NUSERS_AFTER_KIND	
#if !__PTHREAD_MUTEX_USE_UNION	!__PTHREAD_MUTEX_USE_UNION	
#include <bits/thread-shared-types.h>	<bits/thread-shared-types.h>	
#define __have_pthread_attr_t 1	__have_pthread_attr_t	1
#define _BITS_PTHREADTYPES_COMMON_H 1	_BITS_PTHREADTYPES_COMMON_H	1
#ifndef _BITS_PTHREADTYPES_COMMON_H	_BITS_PTHREADTYPES_COMMON_H	
#ifndef __have_pthread_attr_t	__have_pthread_attr_t	
#if defined __USE_UNIX98 || defined __USE_XOPEN2K	defined __USE_UNIX98 || defined __USE_XOPEN2K	
#ifdef __USE_XOPEN2K	__USE_XOPEN2K	
#include <bits/pthreadtypes.h>	<bits/pthreadtypes.h>	
#include <sys/sysmacros.h>	<sys/sysmacros.h>	
#include <sys/select.h>	<sys/select.h>	
#include <endian.h>	<endian.h>	
#include <bits/stdint-intn.h>	<bits/stdint-intn.h>	
#include <stddef.h>	<stddef.h>	
#include <bits/types/timer_t.h>	<bits/types/timer_t.h>	
#include <bits/types/time_t.h>	<bits/types/time_t.h>	
#include <bits/types/clockid_t.h>	<bits/types/clockid_t.h>	
#include <bits/types/clock_t.h>	<bits/types/clock_t.h>	
#include <bits/types.h>	<bits/types.h>	
#include <features.h>	<features.h>	
#define __u_intN_t(N,MODE) typedef unsigned int u_int ## N ## _t __attribute__ ((__mode__ (MODE)))	__u_intN_t(N,MODE)	typedef unsigned int u_int ## N ## _t __attribute__ ((__mode__ (MODE)))
#define __fsfilcnt_t_defined	__fsfilcnt_t_defined	
#define __fsblkcnt_t_defined	__fsblkcnt_t_defined	
#define __blkcnt_t_defined	__blkcnt_t_defined	
#define __blksize_t_defined	__blksize_t_defined	
#undef __SYSMACROS_DEPRECATED_INCLUSION	__SYSMACROS_DEPRECATED_INCLUSION	
#define __BIT_TYPES_DEFINED__ 1	__BIT_TYPES_DEFINED__	1
#define __key_t_defined	__key_t_defined	
#define __daddr_t_defined	__daddr_t_defined	
#define __id_t_defined	__id_t_defined	
#define __pid_t_defined	__pid_t_defined	
#define __uid_t_defined	__uid_t_defined	
#define __nlink_t_defined	__nlink_t_defined	
#define __mode_t_defined	__mode_t_defined	
#define __gid_t_defined	__gid_t_defined	
#define __dev_t_defined	__dev_t_defined	
#define __ino_t_defined	__ino_t_defined	
#define __u_char_defined	__u_char_defined	
#define _SYS_TYPES_H 1	_SYS_TYPES_H	1
#ifndef _SYS_TYPES_H	_SYS_TYPES_H	
#ifdef __USE_MISC	__USE_MISC	
#ifndef __u_char_defined	__u_char_defined	
#ifndef __ino_t_defined	__ino_t_defined	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#if defined __USE_LARGEFILE64 && !defined __ino64_t_defined	defined __USE_LARGEFILE64 && !defined __ino64_t_defined	
#ifndef __dev_t_defined	__dev_t_defined	
#ifndef __gid_t_defined	__gid_t_defined	
#ifndef __mode_t_defined	__mode_t_defined	
#ifndef __nlink_t_defined	__nlink_t_defined	
#ifndef __uid_t_defined	__uid_t_defined	
#ifndef __off_t_defined	__off_t_defined	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#if defined __USE_LARGEFILE64 && !defined __off64_t_defined	defined __USE_LARGEFILE64 && !defined __off64_t_defined	
#ifndef __pid_t_defined	__pid_t_defined	
#if (defined __USE_XOPEN || defined __USE_XOPEN2K8) \	(defined __USE_XOPEN || defined __USE_XOPEN2K8) \	
#ifndef __ssize_t_defined	__ssize_t_defined	
#ifdef __USE_MISC	__USE_MISC	
#ifndef __daddr_t_defined	__daddr_t_defined	
#if (defined __USE_MISC || defined __USE_XOPEN) && !defined __key_t_defined	(defined __USE_MISC || defined __USE_XOPEN) && !defined __key_t_defined	
#if defined __USE_XOPEN || defined __USE_XOPEN2K8	defined __USE_XOPEN || defined __USE_XOPEN2K8	
#ifdef __USE_XOPEN	__USE_XOPEN	
#ifndef __useconds_t_defined	__useconds_t_defined	
#ifndef __suseconds_t_defined	__suseconds_t_defined	
#ifdef __USE_MISC	__USE_MISC	
#if !__GNUC_PREREQ (2, 7)	!__GNUC_PREREQ (2, 7)	
#if __WORDSIZE == 64	__WORDSIZE == 64	
#ifdef __USE_MISC	__USE_MISC	
#if (defined __USE_UNIX98 || defined __USE_XOPEN2K8) \	(defined __USE_UNIX98 || defined __USE_XOPEN2K8) \	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifndef __blkcnt_t_defined	__blkcnt_t_defined	
#ifndef __fsblkcnt_t_defined	__fsblkcnt_t_defined	
#ifndef __fsfilcnt_t_defined	__fsfilcnt_t_defined	
#ifndef __blkcnt_t_defined	__blkcnt_t_defined	
#ifndef __fsblkcnt_t_defined	__fsblkcnt_t_defined	
#ifndef __fsfilcnt_t_defined	__fsfilcnt_t_defined	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#if defined __USE_POSIX199506 || defined __USE_UNIX98	defined __USE_POSIX199506 || defined __USE_UNIX98	
#define __need_size_t	__need_size_t	
#include <stddef.h>	<stddef.h>	
#include <features.h>	<features.h>	
#define alloca(size) __builtin_alloca (size)	alloca(size)	__builtin_alloca (size)
#undef alloca	alloca	
#define _ALLOCA_H 1	_ALLOCA_H	1
#ifndef _ALLOCA_H	_ALLOCA_H	
#ifdef __GNUC__	__GNUC__	
#ifndef _STDLIB_H	_STDLIB_H	
#ifdef __USE_EXTERN_INLINES	__USE_EXTERN_INLINES	
#include <bits/stdlib-float.h>	<bits/stdlib-float.h>	
#include <alloca.h>	<alloca.h>	
#include <sys/types.h>	<sys/types.h>	
#include <bits/floatn.h>	<bits/floatn.h>	
#include <bits/waitstatus.h>	<bits/waitstatus.h>	
#include <bits/waitflags.h>	<bits/waitflags.h>	
#include <stddef.h>	<stddef.h>	
#include <bits/libc-header-start.h>	<bits/libc-header-start.h>	
#define __COMPAR_FN_T	__COMPAR_FN_T	
#define MB_CUR_MAX (__ctype_get_mb_cur_max ())	MB_CUR_MAX	(__ctype_get_mb_cur_max ())
#define EXIT_SUCCESS 0	EXIT_SUCCESS	0
#define EXIT_FAILURE 1	EXIT_FAILURE	1
#define RAND_MAX 2147483647	RAND_MAX	2147483647
#define __lldiv_t_defined 1	__lldiv_t_defined	1
#define __ldiv_t_defined 1	__ldiv_t_defined	1
#define WIFCONTINUED(status) __WIFCONTINUED (status)	WIFCONTINUED(status)	__WIFCONTINUED (status)
#define WIFSTOPPED(status) __WIFSTOPPED (status)	WIFSTOPPED(status)	__WIFSTOPPED (status)
#define WIFSIGNALED(status) __WIFSIGNALED (status)	WIFSIGNALED(status)	__WIFSIGNALED (status)
#define WIFEXITED(status) __WIFEXITED (status)	WIFEXITED(status)	__WIFEXITED (status)
#define WSTOPSIG(status) __WSTOPSIG (status)	WSTOPSIG(status)	__WSTOPSIG (status)
#define WTERMSIG(status) __WTERMSIG (status)	WTERMSIG(status)	__WTERMSIG (status)
#define WEXITSTATUS(status) __WEXITSTATUS (status)	WEXITSTATUS(status)	__WEXITSTATUS (status)
#ifndef _STDLIB_H	_STDLIB_H	
#if (defined __USE_XOPEN || defined __USE_XOPEN2K8) && !defined _SYS_WAIT_H	(defined __USE_XOPEN || defined __USE_XOPEN2K8) && !defined _SYS_WAIT_H	
#ifdef __WIFCONTINUED	__WIFCONTINUED	
#ifndef __ldiv_t_defined	__ldiv_t_defined	
#if defined __USE_ISOC99 && !defined __lldiv_t_defined	defined __USE_ISOC99 && !defined __lldiv_t_defined	
#ifdef __USE_ISOC99	__USE_ISOC99	
#ifdef __USE_ISOC99	__USE_ISOC99	
#if __HAVE_FLOAT16 && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT16 && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_FLOAT32 && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT32 && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_FLOAT64 && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT64 && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_FLOAT128 && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT128 && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_FLOAT32X && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT32X && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_FLOAT64X && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT64X && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_FLOAT128X && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT128X && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_ISOC99	__USE_ISOC99	
#if __GLIBC_USE (IEC_60559_BFP_EXT)	__GLIBC_USE (IEC_60559_BFP_EXT)	
#if __HAVE_FLOAT16 && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT16 && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_FLOAT32 && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT32 && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_FLOAT64 && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT64 && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_FLOAT128 && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT128 && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_FLOAT32X && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT32X && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_FLOAT64X && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT64X && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_FLOAT128X && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT128X && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#ifdef __USE_GNU	__USE_GNU	
#if __HAVE_FLOAT16	__HAVE_FLOAT16	
#if __HAVE_FLOAT32	__HAVE_FLOAT32	
#if __HAVE_FLOAT64	__HAVE_FLOAT64	
#if __HAVE_FLOAT128	__HAVE_FLOAT128	
#if __HAVE_FLOAT32X	__HAVE_FLOAT32X	
#if __HAVE_FLOAT64X	__HAVE_FLOAT64X	
#if __HAVE_FLOAT128X	__HAVE_FLOAT128X	
#ifdef __USE_EXTERN_INLINES	__USE_EXTERN_INLINES	
#ifdef __USE_ISOC99	__USE_ISOC99	
#if defined __USE_MISC || defined __USE_XOPEN_EXTENDED	defined __USE_MISC || defined __USE_XOPEN_EXTENDED	
#if defined __USE_MISC || defined __USE_XOPEN_EXTENDED	defined __USE_MISC || defined __USE_XOPEN_EXTENDED	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_POSIX199506	__USE_POSIX199506	
#if defined __USE_MISC || defined __USE_XOPEN	defined __USE_MISC || defined __USE_XOPEN	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_MISC	__USE_MISC	
#if (defined __USE_XOPEN_EXTENDED && !defined __USE_XOPEN2K) \	(defined __USE_XOPEN_EXTENDED && !defined __USE_XOPEN2K) \	
#ifdef __USE_XOPEN2K	__USE_XOPEN2K	
#ifdef __USE_ISOC11	__USE_ISOC11	
#if defined __USE_ISOC11 || defined __USE_ISOCXX11	defined __USE_ISOC11 || defined __USE_ISOCXX11	
#ifdef __cplusplus	__cplusplus	
#ifdef __USE_MISC	__USE_MISC	
#if defined __USE_ISOC11 || defined __USE_ISOCXX11	defined __USE_ISOC11 || defined __USE_ISOCXX11	
#ifdef __USE_ISOC99	__USE_ISOC99	
#ifdef __USE_GNU	__USE_GNU	
#if defined __USE_MISC || defined __USE_XOPEN	defined __USE_MISC || defined __USE_XOPEN	
#ifdef __USE_XOPEN2K	__USE_XOPEN2K	
#ifdef __USE_MISC	__USE_MISC	
#if defined __USE_MISC \	defined __USE_MISC \	
#if defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT	__REDIRECT	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifdef __USE_MISC	__USE_MISC	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT	__REDIRECT	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
#ifdef __USE_GNU	__USE_GNU	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT	__REDIRECT	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT	__REDIRECT	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifdef __USE_GNU	__USE_GNU	
#if defined __USE_MISC || defined __USE_XOPEN_EXTENDED	defined __USE_MISC || defined __USE_XOPEN_EXTENDED	
#ifndef __COMPAR_FN_T	__COMPAR_FN_T	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_EXTERN_INLINES	__USE_EXTERN_INLINES	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_ISOC99	__USE_ISOC99	
#ifdef __USE_ISOC99	__USE_ISOC99	
#if (defined __USE_XOPEN_EXTENDED && !defined __USE_XOPEN2K8) \	(defined __USE_XOPEN_EXTENDED && !defined __USE_XOPEN2K8) \	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_MISC	__USE_MISC	
#if defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	
#ifdef __USE_XOPEN	__USE_XOPEN	
#ifdef __USE_XOPEN2KXSI	__USE_XOPEN2KXSI	
#ifdef __USE_XOPEN_EXTENDED	__USE_XOPEN_EXTENDED	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_MISC	__USE_MISC	
#if defined __USE_XOPEN_EXTENDED && !defined __USE_XOPEN2K	defined __USE_XOPEN_EXTENDED && !defined __USE_XOPEN2K	
#if __USE_FORTIFY_LEVEL > 0 && defined __fortify_function	__USE_FORTIFY_LEVEL > 0 && defined __fortify_function	
#ifdef __LDBL_COMPAT	__LDBL_COMPAT	
#define GOOD_CASTS	GOOD_CASTS	
#ifndef GOOD_CASTS	GOOD_CASTS	
#define BAD_CASTS	BAD_CASTS	
#ifndef BAD_CASTS	BAD_CASTS	
"#include ""bad_casts.h"""	"""bad_casts.h"""	
"#include ""good_casts.h"""	"""good_casts.h"""	
#include <stdlib.h>	<stdlib.h>	
#include <stdio.h>	<stdio.h>	
