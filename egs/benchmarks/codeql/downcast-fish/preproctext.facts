#include <type_traits>	<type_traits>	
#include <bits/move.h>	<bits/move.h>	
#define _GLIBCXX_CONSTEXPR constexpr	_GLIBCXX_CONSTEXPR	constexpr
#define _STL_PAIR_H 1	_STL_PAIR_H	1
#ifndef _STL_PAIR_H	_STL_PAIR_H	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cpp_deduction_guides >= 201606	__cpp_deduction_guides >= 201606	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201402L || !defined(__STRICT_ANSI__)	__cplusplus > 201402L || !defined(__STRICT_ANSI__)	
#if __cplusplus > 201402L || !defined(__STRICT_ANSI__)	__cplusplus > 201402L || !defined(__STRICT_ANSI__)	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#define _GLIBCXX_END_NAMESPACE_VERSION	_GLIBCXX_END_NAMESPACE_VERSION	
#define __cplusplus 201103L	__cplusplus	201103L
#define _GLIBCXX17_INLINE	_GLIBCXX17_INLINE	
#define _GLIBCXX_BEGIN_NAMESPACE_VERSION	_GLIBCXX_BEGIN_NAMESPACE_VERSION	
#define _GLIBCXX_VISIBILITY(V) __attribute__ ((__visibility__ (#V)))	_GLIBCXX_VISIBILITY(V)	__attribute__ ((__visibility__ (#V)))
#include <type_traits>	<type_traits>	
#include <bits/ptr_traits.h>	<bits/ptr_traits.h>	
#include <bits/move.h>	<bits/move.h>	
#include <ext/type_traits.h>	<ext/type_traits.h>	
#include <bits/cpp_type_traits.h>	<bits/cpp_type_traits.h>	
#define _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(_Iter) std::__make_move_if_noexcept_iterator(_Iter)	_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(_Iter)	std::__make_move_if_noexcept_iterator(_Iter)
#define _GLIBCXX_MAKE_MOVE_ITERATOR(_Iter) std::make_move_iterator(_Iter)	_GLIBCXX_MAKE_MOVE_ITERATOR(_Iter)	std::make_move_iterator(_Iter)
#define _STL_ITERATOR_H 1	_STL_ITERATOR_H	1
#ifndef _STL_ITERATOR_H	_STL_ITERATOR_H	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cpp_deduction_guides >= 201606	__cpp_deduction_guides >= 201606	
#ifdef _GLIBCXX_DEBUG	_GLIBCXX_DEBUG	
#define _GLIBCXX17_CONSTEXPR	_GLIBCXX17_CONSTEXPR	
#define _GLIBCXX_NOEXCEPT_IF(_COND) noexcept(_COND)	_GLIBCXX_NOEXCEPT_IF(_COND)	noexcept(_COND)
#define _GLIBCXX_NOEXCEPT noexcept	_GLIBCXX_NOEXCEPT	noexcept
#include <type_traits>	<type_traits>	
#include <bits/predefined_ops.h>	<bits/predefined_ops.h>	
#include <bits/move.h>	<bits/move.h>	
#include <debug/debug.h>	<debug/debug.h>	
#include <bits/concept_check.h>	<bits/concept_check.h>	
#include <bits/stl_iterator.h>	<bits/stl_iterator.h>	
#include <bits/stl_iterator_base_funcs.h>	<bits/stl_iterator_base_funcs.h>	
#include <bits/stl_iterator_base_types.h>	<bits/stl_iterator_base_types.h>	
#include <bits/stl_pair.h>	<bits/stl_pair.h>	
#include <ext/numeric_traits.h>	<ext/numeric_traits.h>	
#include <ext/type_traits.h>	<ext/type_traits.h>	
#include <bits/cpp_type_traits.h>	<bits/cpp_type_traits.h>	
#include <bits/functexcept.h>	<bits/functexcept.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#define __glibcxx_function_requires(__VA_ARGS__...)	__glibcxx_function_requires(__VA_ARGS__...)	
#define __glibcxx_requires_can_increment_range(_First1,_Last1,_First2)	__glibcxx_requires_can_increment_range(_First1,_Last1,_First2)	
#define _GLIBCXX_MOVE_BACKWARD3(_Tp,_Up,_Vp) std::move_backward(_Tp, _Up, _Vp)	_GLIBCXX_MOVE_BACKWARD3(_Tp,_Up,_Vp)	std::move_backward(_Tp, _Up, _Vp)
#define _GLIBCXX_MOVE3(_Tp,_Up,_Vp) std::move(_Tp, _Up, _Vp)	_GLIBCXX_MOVE3(_Tp,_Up,_Vp)	std::move(_Tp, _Up, _Vp)
#define _STL_ALGOBASE_H 1	_STL_ALGOBASE_H	1
#ifndef _STL_ALGOBASE_H	_STL_ALGOBASE_H	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#ifdef _GLIBCXX_CONCEPT_CHECKS	_GLIBCXX_CONCEPT_CHECKS	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#ifdef _GLIBCXX_PARALLEL	_GLIBCXX_PARALLEL	
#define _GLIBCXX_END_NAMESPACE_ALGO	_GLIBCXX_END_NAMESPACE_ALGO	
#define _GLIBCXX_STD_A std	_GLIBCXX_STD_A	std
#define __glibcxx_requires_valid_range(_First,_Last)	__glibcxx_requires_valid_range(_First,_Last)	
#define _GLIBCXX_BEGIN_NAMESPACE_ALGO	_GLIBCXX_BEGIN_NAMESPACE_ALGO	
#define __CHAR_BIT__ 8	__CHAR_BIT__	8
#define __glibcxx_requires_partitioned_lower(_First,_Last,_Value)	__glibcxx_requires_partitioned_lower(_First,_Last,_Value)	
#define __glibcxx_requires_can_increment(_First,_Size)	__glibcxx_requires_can_increment(_First,_Size)	
#define __glibcxx_requires_can_decrement_range(_First1,_Last1,_First2)	__glibcxx_requires_can_decrement_range(_First1,_Last1,_First2)	
#define _GLIBCXX14_CONSTEXPR	_GLIBCXX14_CONSTEXPR	
#include <bits/functional_hash.h>	<bits/functional_hash.h>	
#include <ext/string_conversions.h>	<ext/string_conversions.h>	
#include <initializer_list>	<initializer_list>	
#include <debug/debug.h>	<debug/debug.h>	
#include <ext/alloc_traits.h>	<ext/alloc_traits.h>	
#include <ext/atomicity.h>	<ext/atomicity.h>	
#define __glibcxx_requires_string_len(_String,_Len)	__glibcxx_requires_string_len(_String,_Len)	
#define __glibcxx_requires_string(_String)	__glibcxx_requires_string(_String)	
#define __glibcxx_assert(_Condition)	__glibcxx_assert(_Condition)	
#define __N(msgid) (msgid)	__N(msgid)	(msgid)
#define _BASIC_STRING_H 1	_BASIC_STRING_H	1
#ifndef _BASIC_STRING_H	_BASIC_STRING_H	
#pragma GCC system_header	GCC system_header	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if _GLIBCXX_USE_CXX11_ABI	_GLIBCXX_USE_CXX11_ABI	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST	_GLIBCXX_DISAMBIGUATE_REPLACE_INST	
#if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS	__cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS	
#if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS	__cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cpp_exceptions	__cpp_exceptions	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_DEFINING_STRING_INSTANTIATIONS	_GLIBCXX_DEFINING_STRING_INSTANTIATIONS	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST	_GLIBCXX_DISAMBIGUATE_REPLACE_INST	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus > 201703L	__cplusplus > 201703L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if defined(__GTHREADS)	defined(__GTHREADS)	
#if defined(__GTHREADS)	defined(__GTHREADS)	
#if _GLIBCXX_FULLY_DYNAMIC_STRING == 0	_GLIBCXX_FULLY_DYNAMIC_STRING == 0	
#if _GLIBCXX_FULLY_DYNAMIC_STRING == 0	_GLIBCXX_FULLY_DYNAMIC_STRING == 0	
#if _GLIBCXX_FULLY_DYNAMIC_STRING == 0	_GLIBCXX_FULLY_DYNAMIC_STRING == 0	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if _GLIBCXX_FULLY_DYNAMIC_STRING == 0	_GLIBCXX_FULLY_DYNAMIC_STRING == 0	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if _GLIBCXX_FULLY_DYNAMIC_STRING == 0	_GLIBCXX_FULLY_DYNAMIC_STRING == 0	
#if _GLIBCXX_FULLY_DYNAMIC_STRING == 0	_GLIBCXX_FULLY_DYNAMIC_STRING == 0	
#if _GLIBCXX_FULLY_DYNAMIC_STRING == 0	_GLIBCXX_FULLY_DYNAMIC_STRING == 0	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cpp_exceptions	__cpp_exceptions	
#if _GLIBCXX_FULLY_DYNAMIC_STRING == 0	_GLIBCXX_FULLY_DYNAMIC_STRING == 0	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus > 201703L	__cplusplus > 201703L	
#ifdef _GLIBCXX_TM_TS_INTERNAL	_GLIBCXX_TM_TS_INTERNAL	
#if __cpp_deduction_guides >= 201606	__cpp_deduction_guides >= 201606	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if _GLIBCXX_USE_C99_STDLIB	_GLIBCXX_USE_C99_STDLIB	
#if _GLIBCXX_USE_C99_STDIO	_GLIBCXX_USE_C99_STDIO	
#if defined(_GLIBCXX_USE_WCHAR_T) && _GLIBCXX_USE_C99_WCHAR	defined(_GLIBCXX_USE_WCHAR_T) && _GLIBCXX_USE_C99_WCHAR	
#ifndef _GLIBCXX_HAVE_BROKEN_VSWPRINTF	_GLIBCXX_HAVE_BROKEN_VSWPRINTF	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifndef _GLIBCXX_COMPATIBILITY_CXX0X	_GLIBCXX_COMPATIBILITY_CXX0X	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#ifdef _GLIBCXX_USE_CHAR8_T	_GLIBCXX_USE_CHAR8_T	
#if __cplusplus >= 201402L	__cplusplus >= 201402L	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#ifdef _GLIBCXX_USE_CHAR8_T	_GLIBCXX_USE_CHAR8_T	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#define _GLIBCXX_USE_WCHAR_T 1	_GLIBCXX_USE_WCHAR_T	1
#define _GLIBCXX_END_NAMESPACE_CXX11 }	_GLIBCXX_END_NAMESPACE_CXX11	}
#define _GLIBCXX11_USE_C99_WCHAR 1	_GLIBCXX11_USE_C99_WCHAR	1
#define _GLIBCXX_USE_C99_WCHAR _GLIBCXX11_USE_C99_WCHAR	_GLIBCXX_USE_C99_WCHAR	_GLIBCXX11_USE_C99_WCHAR
#define _GLIBCXX11_USE_C99_STDIO 1	_GLIBCXX11_USE_C99_STDIO	1
#define _GLIBCXX_USE_C99_STDIO _GLIBCXX11_USE_C99_STDIO	_GLIBCXX_USE_C99_STDIO	_GLIBCXX11_USE_C99_STDIO
#define _GLIBCXX11_USE_C99_STDLIB 1	_GLIBCXX11_USE_C99_STDLIB	1
#define _GLIBCXX_USE_C99_STDLIB _GLIBCXX11_USE_C99_STDLIB	_GLIBCXX_USE_C99_STDLIB	_GLIBCXX11_USE_C99_STDLIB
#define _GLIBCXX_BEGIN_NAMESPACE_CXX11 namespace __cxx11 {	_GLIBCXX_BEGIN_NAMESPACE_CXX11	namespace __cxx11 {
#define _GLIBCXX_DEBUG_PEDASSERT(_Condition)	_GLIBCXX_DEBUG_PEDASSERT(_Condition)	
#define _GLIBCXX_NODISCARD	_GLIBCXX_NODISCARD	
#define _GLIBCXX_USE_CXX11_ABI 1	_GLIBCXX_USE_CXX11_ABI	1
#include <bits/range_access.h>	<bits/range_access.h>	
#include <bits/stl_algobase.h>	<bits/stl_algobase.h>	
#include <stdexcept>	<stdexcept>	
#include <utility>	<utility>	
#define _GLIBCXX_STD_C std	_GLIBCXX_STD_C	std
#define _GLIBCXX_ARRAY 1	_GLIBCXX_ARRAY	1
#ifndef _GLIBCXX_ARRAY	_GLIBCXX_ARRAY	
#pragma GCC system_header	GCC system_header	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cpp_deduction_guides >= 201606	__cpp_deduction_guides >= 201606	
#if __cplusplus > 201402L || !defined(__STRICT_ANSI__)	__cplusplus > 201402L || !defined(__STRICT_ANSI__)	
#if __cplusplus > 201402L || !defined(__STRICT_ANSI__)	__cplusplus > 201402L || !defined(__STRICT_ANSI__)	
#ifdef _GLIBCXX_DEBUG	_GLIBCXX_DEBUG	
#ifdef _GLIBCXX_PROFILE	_GLIBCXX_PROFILE	
#define _GLIBCXX_END_NAMESPACE_CONTAINER	_GLIBCXX_END_NAMESPACE_CONTAINER	
#define _GLIBCXX_BEGIN_NAMESPACE_CONTAINER	_GLIBCXX_BEGIN_NAMESPACE_CONTAINER	
#include <bits/functional_hash.h>	<bits/functional_hash.h>	
#include <bits/stl_function.h>	<bits/stl_function.h>	
#include <tuple>	<tuple>	
#include <utility>	<utility>	
#include <type_traits>	<type_traits>	
#include <debug/assertions.h>	<debug/assertions.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#define _UNIQUE_PTR_H 1	_UNIQUE_PTR_H	1
#ifndef _UNIQUE_PTR_H	_UNIQUE_PTR_H	
#if _GLIBCXX_USE_DEPRECATED	_GLIBCXX_USE_DEPRECATED	
#pragma GCC diagnostic push	GCC diagnostic push	
"#pragma GCC diagnostic ignored ""-Wdeprecated-declarations"""	"GCC diagnostic ignored ""-Wdeprecated-declarations"""	
#pragma GCC diagnostic pop	GCC diagnostic pop	
#if _GLIBCXX_USE_DEPRECATED	_GLIBCXX_USE_DEPRECATED	
#pragma GCC diagnostic push	GCC diagnostic push	
"#pragma GCC diagnostic ignored ""-Wdeprecated-declarations"""	"GCC diagnostic ignored ""-Wdeprecated-declarations"""	
#pragma GCC diagnostic pop	GCC diagnostic pop	
#if __cplusplus > 201402L || !defined(__STRICT_ANSI__)	__cplusplus > 201402L || !defined(__STRICT_ANSI__)	
#if __cplusplus > 201402L || !defined(__STRICT_ANSI__)	__cplusplus > 201402L || !defined(__STRICT_ANSI__)	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#define _GLIBCXX_USE_DEPRECATED 1	_GLIBCXX_USE_DEPRECATED	1
#include <debug/assertions.h>	<debug/assertions.h>	
#include <initializer_list>	<initializer_list>	
#include <bits/concept_check.h>	<bits/concept_check.h>	
#include <bits/functexcept.h>	<bits/functexcept.h>	
#include <bits/stl_iterator_base_funcs.h>	<bits/stl_iterator_base_funcs.h>	
#define __glibcxx_requires_nonempty()	__glibcxx_requires_nonempty()	
#define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n)	_GLIBCXX_ASAN_ANNOTATE_SHRINK(n)	
#define _GLIBCXX_ASAN_ANNOTATE_GROW(n)	_GLIBCXX_ASAN_ANNOTATE_GROW(n)	
#define _GLIBCXX_ASAN_ANNOTATE_GREW(n)	_GLIBCXX_ASAN_ANNOTATE_GREW(n)	
#define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC	
#define _GLIBCXX_ASAN_ANNOTATE_REINIT	_GLIBCXX_ASAN_ANNOTATE_REINIT	
#define _STL_VECTOR_H 1	_STL_VECTOR_H	1
#ifndef _STL_VECTOR_H	_STL_VECTOR_H	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR	_GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR	_GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if !_GLIBCXX_INLINE_VERSION	!_GLIBCXX_INLINE_VERSION	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if !_GLIBCXX_INLINE_VERSION	!_GLIBCXX_INLINE_VERSION	
#ifdef _GLIBCXX_CONCEPT_CHECKS	_GLIBCXX_CONCEPT_CHECKS	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef __STRICT_ANSI__	__STRICT_ANSI__	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cpp_deduction_guides >= 201606	__cpp_deduction_guides >= 201606	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#define __throw_exception_again	__throw_exception_again	
#define __catch(X) if (false)	__catch(X)	if (false)
#define __try if (true)	__try	if (true)
#define __glibcxx_requires_subscript(_N)	__glibcxx_requires_subscript(_N)	
#define _GLIBCXX_INLINE_VERSION 0	_GLIBCXX_INLINE_VERSION	0
#include <type_traits>	<type_traits>	
#include <cassert>	<cassert>	
#define __ASSERT_FUNCTION __extension__ __PRETTY_FUNCTION__	__ASSERT_FUNCTION	__extension__ __PRETTY_FUNCTION__
#define assert(expr) (static_cast <bool> (expr) ? void (0) : __assert_fail (#expr, __FILE__, __LINE__, __ASSERT_FUNCTION))	assert(expr)	(static_cast <bool> (expr) ? void (0) : __assert_fail (#expr, __FILE__, __LINE__, __ASSERT_FUNCTION))
#define FISH_MAYBE_H	FISH_MAYBE_H	
#ifndef FISH_MAYBE_H	FISH_MAYBE_H	
#define 		
#define 		
"#include ""maybe.h"""	"""maybe.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
#include <vector>	<vector>	
#include <string>	<string>	
#include <mutex>	<mutex>	
#include <memory>	<memory>	
#include <functional>	<functional>	
#include <atomic>	<atomic>	
#include <algorithm>	<algorithm>	
#include <sys/ioctl.h>	<sys/ioctl.h>	
#include <stdarg.h>	<stdarg.h>	
#include <limits.h>	<limits.h>	
#include <errno.h>	<errno.h>	
"#include ""config.h"""	"""config.h"""	
#define DIE(msg) __fish_assert(msg, __FILE__, __LINE__, 0)	DIE(msg)	__fish_assert(msg, __FILE__, __LINE__, 0)
#define CONST_WCSTRING_HASH 1	CONST_WCSTRING_HASH	1
#define ignore_result(x) (__extension__({ __typeof__(x) __x = (x); (void)__x; }))	ignore_result(x)	(__extension__({ __typeof__(x) __x = (x); (void)__x; }))
#define UNUSED(expr) do { (void)(expr); } while (0)	UNUSED(expr)	do { (void)(expr); } while (0)
#define ASSERT_IS_NOT_FORKED_CHILD() ASSERT_IS_NOT_FORKED_CHILD_TRAMPOLINE(__FUNCTION__)	ASSERT_IS_NOT_FORKED_CHILD()	ASSERT_IS_NOT_FORKED_CHILD_TRAMPOLINE(__FUNCTION__)
#define ASSERT_IS_NOT_FORKED_CHILD_TRAMPOLINE(x) assert_is_not_forked_child(x)	ASSERT_IS_NOT_FORKED_CHILD_TRAMPOLINE(x)	assert_is_not_forked_child(x)
#define ASSERT_IS_LOCKED(x) assert_is_locked(reinterpret_cast<void *>(&x), #x, __FUNCTION__)	ASSERT_IS_LOCKED(x)	assert_is_locked(reinterpret_cast<void *>(&x), #x, __FUNCTION__)
#define ASSERT_IS_BACKGROUND_THREAD() ASSERT_IS_BACKGROUND_THREAD_TRAMPOLINE(__FUNCTION__)	ASSERT_IS_BACKGROUND_THREAD()	ASSERT_IS_BACKGROUND_THREAD_TRAMPOLINE(__FUNCTION__)
#define ASSERT_IS_BACKGROUND_THREAD_TRAMPOLINE(x) assert_is_background_thread(x)	ASSERT_IS_BACKGROUND_THREAD_TRAMPOLINE(x)	assert_is_background_thread(x)
#define ASSERT_IS_MAIN_THREAD() ASSERT_IS_MAIN_THREAD_TRAMPOLINE(__FUNCTION__)	ASSERT_IS_MAIN_THREAD()	ASSERT_IS_MAIN_THREAD_TRAMPOLINE(__FUNCTION__)
#define ASSERT_IS_MAIN_THREAD_TRAMPOLINE(x) assert_is_main_thread(x)	ASSERT_IS_MAIN_THREAD_TRAMPOLINE(x)	assert_is_main_thread(x)
"#define TESTS_PROGRAM_NAME L""(ignore)"""	TESTS_PROGRAM_NAME	"L""(ignore)"""
#define N_(wstr) wstr	N_(wstr)	wstr
#define _(wstr) wgettext(wstr).c_str()	_(wstr)	wgettext(wstr).c_str()
#define DIE_ON_FAILURE(e) do { int status = e; if (status != 0) { __fish_assert(#e, __FILE__, __LINE__, status); } } while (0)	DIE_ON_FAILURE(e)	do { int status = e; if (status != 0) { __fish_assert(#e, __FILE__, __LINE__, status); } } while (0)
#define DIE_WITH_ERRNO(msg) __fish_assert(msg, __FILE__, __LINE__, errno)	DIE_WITH_ERRNO(msg)	__fish_assert(msg, __FILE__, __LINE__, errno)
#define assert_with_errno(e) (e) ? ((void)0) : __fish_assert(#e, __FILE__, __LINE__, errno)	assert_with_errno(e)	(e) ? ((void)0) : __fish_assert(#e, __FILE__, __LINE__, errno)
#define assert(e) (e) ? ((void)0) : __fish_assert(#e, __FILE__, __LINE__, 0)	assert(e)	(e) ? ((void)0) : __fish_assert(#e, __FILE__, __LINE__, 0)
#undef assert	assert	
#define FATAL_EXIT() do { char exit_read_buff; show_stackframe(L'E'); ignore_result(read(0, &exit_read_buff, 1)); exit_without_destructors(1); } while (0)	FATAL_EXIT()	do { char exit_read_buff; show_stackframe(L'E'); ignore_result(read(0, &exit_read_buff, 1)); exit_without_destructors(1); } while (0)
#define debug(level,__VA_ARGS__...) do { if (should_debug((level))) debug_impl((level), __VA_ARGS__); } while (0)	debug(level,__VA_ARGS__...)	do { if (should_debug((level))) debug_impl((level), __VA_ARGS__); } while (0)
#define ENCODE_DIRECT_END (ENCODE_DIRECT_BASE + 256)	ENCODE_DIRECT_END	(ENCODE_DIRECT_BASE + 256)
#define ENCODE_DIRECT_BASE static_cast<wchar_t>(0xF600)	ENCODE_DIRECT_BASE	static_cast<wchar_t>(0xF600)
#define WILDCARD_RESERVED_END (WILDCARD_RESERVED_BASE + 16)	WILDCARD_RESERVED_END	(WILDCARD_RESERVED_BASE + 16)
#define WILDCARD_RESERVED_BASE EXPAND_RESERVED_END	WILDCARD_RESERVED_BASE	EXPAND_RESERVED_END
#define EXPAND_RESERVED_END (EXPAND_RESERVED_BASE + 16)	EXPAND_RESERVED_END	(EXPAND_RESERVED_BASE + 16)
#define EXPAND_RESERVED_BASE RESERVED_CHAR_BASE	EXPAND_RESERVED_BASE	RESERVED_CHAR_BASE
#define RESERVED_CHAR_END static_cast<wchar_t>(0xFDF0)	RESERVED_CHAR_END	static_cast<wchar_t>(0xFDF0)
#define RESERVED_CHAR_BASE static_cast<wchar_t>(0xFDD0)	RESERVED_CHAR_BASE	static_cast<wchar_t>(0xFDD0)
#define REPLACEMENT_WCHAR 0xFFFDu	REPLACEMENT_WCHAR	0xFFFDu
#define UTF8_BOM_WCHAR 0xFEFFu	UTF8_BOM_WCHAR	0xFEFFu
#define BYTE_MAX 0xFFu	BYTE_MAX	0xFFu
#define UCS2_MAX 0xFFFFu	UCS2_MAX	0xFFFFu
#define ASCII_MAX 127u	ASCII_MAX	127u
#define MAX_UTF8_BYTES 6	MAX_UTF8_BYTES	6
#define FISH_COMMON_H	FISH_COMMON_H	
#ifndef FISH_COMMON_H	FISH_COMMON_H	
#ifdef HAVE_SYS_IOCTL_H	HAVE_SYS_IOCTL_H	
#ifndef PATH_MAX	PATH_MAX	
#if defined(_WIN32) || defined(_WIN64) || defined(WIN32) || defined(__CYGWIN__) || \	defined(_WIN32) || defined(_WIN64) || defined(WIN32) || defined(__CYGWIN__) || \	
#if !defined(NAME_MAX)	!defined(NAME_MAX)	
#if defined(MAXNAMELEN)	defined(MAXNAMELEN)	
#ifndef PATH_MAX	PATH_MAX	
#ifdef MAXPATHLEN	MAXPATHLEN	
#ifdef HAVE_STD__MAKE_UNIQUE	HAVE_STD__MAKE_UNIQUE	
#ifdef __CYGWIN__	__CYGWIN__	
#if 3 < __GNUC__ + (4 <= __GNUC_MINOR__)	3 < __GNUC__ + (4 <= __GNUC_MINOR__)	
#ifndef CONST_WCSTRING_HASH	CONST_WCSTRING_HASH	
#define __GNUC_MINOR__ 2	__GNUC_MINOR__	2
#define __GNUC__ 9	__GNUC__	9
#define PATH_MAX 4096	PATH_MAX	4096
#define NAME_MAX 255	NAME_MAX	255
#define HAVE_SYS_IOCTL_H 1	HAVE_SYS_IOCTL_H	1
"#include ""common.h"""	"""common.h"""	
#include <cassert>	<cassert>	
#include <atomic>	<atomic>	
"#include ""config.h"""	"""config.h"""	
#define FISH_GLOBAL_SAFETY_H	FISH_GLOBAL_SAFETY_H	
#ifndef FISH_GLOBAL_SAFETY_H	FISH_GLOBAL_SAFETY_H	
"#include ""ast_node_types.inc"""	"""ast_node_types.inc"""	
"#include ""ast_node_types.inc"""	"""ast_node_types.inc"""	
"#include ""ast_node_types.inc"""	"""ast_node_types.inc"""	
"#include ""ast_node_types.inc"""	"""ast_node_types.inc"""	
"#include ""ast_node_types.inc"""	"""ast_node_types.inc"""	
"#include ""tokenizer.h"""	"""tokenizer.h"""	
"#include ""parse_constants.h"""	"""parse_constants.h"""	
"#include ""flog.h"""	"""flog.h"""	
#include <type_traits>	<type_traits>	
#include <tuple>	<tuple>	
#include <array>	<array>	
#define ELEM(T) case type_t::T: v_.visit(*(n->as<T ## _t>())); break;	ELEM(T)	case type_t::T: v_.visit(*(n->as<T ## _t>())); break;
#define ELEMLIST(x,y) ELEM(x)	ELEMLIST(x,y)	ELEM(x)
#define ELEMLIST(ListT,ContentsT) struct ListT ## _t final : public list_t<type_t::ListT, ContentsT ## _t> {};	ELEMLIST(ListT,ContentsT)	struct ListT ## _t final : public list_t<type_t::ListT, ContentsT ## _t> {};
#define FIELDS(__VA_ARGS__...) template <typename FieldVisitor> void accept(FieldVisitor &visitor, bool reversed = false) { visitor.will_visit_fields_of(*this); template_goo::accept_field_visitor(visitor, reversed, __VA_ARGS__); visitor.did_visit_fields_of(*this); }	FIELDS(__VA_ARGS__...)	template <typename FieldVisitor> void accept(FieldVisitor &visitor, bool reversed = false) { visitor.will_visit_fields_of(*this); template_goo::accept_field_visitor(visitor, reversed, __VA_ARGS__); visitor.did_visit_fields_of(*this); }
#define ELEM(T) case type_t::T: this->as<T ## _t>()->accept(v, reverse); break;	ELEM(T)	case type_t::T: this->as<T ## _t>()->accept(v, reverse); break;
#define ELEM(T)	ELEM(T)	
#define ELEM(T) struct T ## _t;	ELEM(T)	struct T ## _t;
#define ELEM(T) T,	ELEM(T)	T,
#define FISH_AST_H	FISH_AST_H	
#ifndef FISH_AST_H	FISH_AST_H	
"#include ""ast_node_types.inc"""	"""ast_node_types.inc"""	
"#include ""ast_node_types.inc"""	"""ast_node_types.inc"""	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""parse_tree.h"""	"""parse_tree.h"""	
"#include ""parse_constants.h"""	"""parse_constants.h"""	
"#include ""flog.h"""	"""flog.h"""	
"#include ""common.h"""	"""common.h"""	
#include <array>	<array>	
"#include ""ast.h"""	"""ast.h"""	
"#include ""config.h"""	"""config.h"""	
#define errno (*__errno_location ())	errno	(*__errno_location ())
#define FLOGF(wht,__VA_ARGS__...) do { if (flog_details::category_list_t::g_instance->wht.enabled) { auto old_errno = errno; flog_details::g_logger.acquire()->log_fmt( flog_details::category_list_t::g_instance->wht, __VA_ARGS__); errno = old_errno; } } while (0)	FLOGF(wht,__VA_ARGS__...)	do { if (flog_details::category_list_t::g_instance->wht.enabled) { auto old_errno = errno; flog_details::g_logger.acquire()->log_fmt( flog_details::category_list_t::g_instance->wht, __VA_ARGS__); errno = old_errno; } } while (0)
#define keyword_enum_map_len (sizeof keyword_enum_map / sizeof *keyword_enum_map)	keyword_enum_map_len	(sizeof keyword_enum_map / sizeof *keyword_enum_map)
#define TOK_SHOW_COMMENTS 2	TOK_SHOW_COMMENTS	2
#define TOK_ACCEPT_UNFINISHED 1	TOK_ACCEPT_UNFINISHED	1
#define TOK_CONTINUE_AFTER_ERROR 8	TOK_CONTINUE_AFTER_ERROR	8
"#define ELEM(T) case type_t::T: return L"""" #T;"	ELEM(T)	"case type_t::T: return L"""" #T;"
#define ELEM(T) case type_t::T: delete n->as<T ## _t>(); break;	ELEM(T)	case type_t::T: delete n->as<T ## _t>(); break;
"#define EXEC_ERR_MSG _(L""The '%ls' command can not be used in a pipeline"")"	EXEC_ERR_MSG	"_(L""The '%ls' command can not be used in a pipeline"")"
#define UINT32_MAX (4294967295U)	UINT32_MAX	(4294967295U)
#define va_start(v,l) __builtin_va_start(v,l)	va_start(v,l)	__builtin_va_start(v,l)
#define va_end(v) __builtin_va_end(v)	va_end(v)	__builtin_va_end(v)
#define FLOG(wht,__VA_ARGS__...) do { if (flog_details::category_list_t::g_instance->wht.enabled) { auto old_errno = errno; flog_details::g_logger.acquire()->log_args( flog_details::category_list_t::g_instance->wht, __VA_ARGS__); errno = old_errno; } } while (0)	FLOG(wht,__VA_ARGS__...)	do { if (flog_details::category_list_t::g_instance->wht.enabled) { auto old_errno = errno; flog_details::g_logger.acquire()->log_args( flog_details::category_list_t::g_instance->wht, __VA_ARGS__); errno = old_errno; } } while (0)
#undef ELEMLIST	ELEMLIST	
#undef ELEM	ELEM	
#ifndef ELEMLIST	ELEMLIST	
#ifndef ELEMLIST	ELEMLIST	
#define _GLIBCXX_MOVE(__val) std::move(__val)	_GLIBCXX_MOVE(__val)	std::move(__val)
#define __warn_unused __attribute__ ((warn_unused_result))	__warn_unused	__attribute__ ((warn_unused_result))
#define _DARWIN_USE_64_BIT_INODE 1	_DARWIN_USE_64_BIT_INODE	1
#define WCHAR_T_BITS 32	WCHAR_T_BITS	32
#define TPARM_VARARGS 1	TPARM_VARARGS	1
"#define PACKAGE_NAME ""fish"""	PACKAGE_NAME	"""fish"""
"#define PACKAGE_BUGREPORT ""https://github.com/fish-shell/fish-shell/issues"""	PACKAGE_BUGREPORT	"""https://github.com/fish-shell/fish-shell/issues"""
#define NOMACROS 1	NOMACROS	1
#define NCURSES_NOMACROS 1	NCURSES_NOMACROS	1
#define HAVE__NL_MSG_CAT_CNTR 1	HAVE__NL_MSG_CAT_CNTR	1
#define HAVE_WINSIZE 1	HAVE_WINSIZE	1
#define HAVE_WCSTOD_L 1	HAVE_WCSTOD_L	1
#define HAVE_WCSNCASECMP 1	HAVE_WCSNCASECMP	1
#define HAVE_WCSDUP 1	HAVE_WCSDUP	1
#define HAVE_WCSCASECMP 1	HAVE_WCSCASECMP	1
#define HAVE_TERM_H 1	HAVE_TERM_H	1
#define HAVE_TERMIOS_H 1	HAVE_TERMIOS_H	1
#define HAVE_SYS_SYSCTL_H 1	HAVE_SYS_SYSCTL_H	1
#define HAVE_SYS_SELECT_H 1	HAVE_SYS_SELECT_H	1
#define HAVE_SYS_ERRLIST 1	HAVE_SYS_ERRLIST	1
#define HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC 1	HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC	1
#define HAVE_STRUCT_DIRENT_D_TYPE 1	HAVE_STRUCT_DIRENT_D_TYPE	1
#define HAVE_SPAWN_H 1	HAVE_SPAWN_H	1
#define HAVE_NCURSES_H 1	HAVE_NCURSES_H	1
#define HAVE_CURSES_H 1	HAVE_CURSES_H	1
#define HAVE_MKOSTEMP 1	HAVE_MKOSTEMP	1
#define HAVE_KILLPG 1	HAVE_KILLPG	1
#define HAVE_GETTEXT 1	HAVE_GETTEXT	1
#define HAVE_GETRUSAGE 1	HAVE_GETRUSAGE	1
#define HAVE_GETPWENT 1	HAVE_GETPWENT	1
#define HAVE_GETIFADDRS 1	HAVE_GETIFADDRS	1
#define HAVE_FUTIMES 1	HAVE_FUTIMES	1
#define HAVE_FUTIMENS 1	HAVE_FUTIMENS	1
#define HAVE_FLOCK 1	HAVE_FLOCK	1
#define HAVE_EXECINFO_H 1	HAVE_EXECINFO_H	1
#define HAVE_DIRFD 1	HAVE_DIRFD	1
#define HAVE_CX11_THREAD_LOCAL 1	HAVE_CX11_THREAD_LOCAL	1
#define HAVE_CLOCK_GETTIME 1	HAVE_CLOCK_GETTIME	1
#define HAVE_BACKTRACE_SYMBOLS 1	HAVE_BACKTRACE_SYMBOLS	1
#ifndef _GNU_SOURCE	_GNU_SOURCE	
#ifndef _DARWIN_USE_64_BIT_INODE	_DARWIN_USE_64_BIT_INODE	
#if __GNUC__ >= 3	__GNUC__ >= 3	
#ifndef __warn_unused	__warn_unused	
#define _GNU_SOURCE 1	_GNU_SOURCE	1
#ifndef _STDC_PREDEF_H	_STDC_PREDEF_H	
#ifdef __GCC_IEC_559	__GCC_IEC_559	
#if __GCC_IEC_559 > 0	__GCC_IEC_559 > 0	
#ifdef __GCC_IEC_559_COMPLEX	__GCC_IEC_559_COMPLEX	
#if __GCC_IEC_559_COMPLEX > 0	__GCC_IEC_559_COMPLEX > 0	
#define _STDC_PREDEF_H 1	_STDC_PREDEF_H	1
#define __SYSCALL_WORDSIZE 64	__SYSCALL_WORDSIZE	64
#define __WORDSIZE_TIME64_COMPAT32 1	__WORDSIZE_TIME64_COMPAT32	1
#define __WORDSIZE 64	__WORDSIZE	64
#if defined __x86_64__ && !defined __ILP32__	defined __x86_64__ && !defined __ILP32__	
#ifdef __x86_64__	__x86_64__	
#define __x86_64__ 1	__x86_64__	1
#include <bits/long-double.h>	<bits/long-double.h>	
#include <bits/wordsize.h>	<bits/wordsize.h>	
#define __HAVE_GENERIC_SELECTION 0	__HAVE_GENERIC_SELECTION	0
#define __glibc_macro_warning(message) __glibc_macro_warning1 (GCC warning message)	__glibc_macro_warning(message)	__glibc_macro_warning1 (GCC warning message)
#define __glibc_macro_warning1(message) _Pragma (#message)	__glibc_macro_warning1(message)	_Pragma (#message)
#define __REDIRECT_NTH_LDBL(name,proto,alias) __REDIRECT_NTH (name, proto, alias)	__REDIRECT_NTH_LDBL(name,proto,alias)	__REDIRECT_NTH (name, proto, alias)
#define __REDIRECT_LDBL(name,proto,alias) __REDIRECT (name, proto, alias)	__REDIRECT_LDBL(name,proto,alias)	__REDIRECT (name, proto, alias)
#define __LDBL_REDIR_DECL(name)	__LDBL_REDIR_DECL(name)	
#define __LDBL_REDIR_NTH(name,proto) name proto __THROW	__LDBL_REDIR_NTH(name,proto)	name proto __THROW
#define __LDBL_REDIR1_NTH(name,proto,alias) name proto __THROW	__LDBL_REDIR1_NTH(name,proto,alias)	name proto __THROW
#define __LDBL_REDIR(name,proto) name proto	__LDBL_REDIR(name,proto)	name proto
#define __LDBL_REDIR1(name,proto,alias) name proto	__LDBL_REDIR1(name,proto,alias)	name proto
#define __attribute_copy__(arg) __attribute__ ((__copy__ (arg)))	__attribute_copy__(arg)	__attribute__ ((__copy__ (arg)))
#undef __attribute_copy__	__attribute_copy__	
#define __attribute_nonstring__ __attribute__ ((__nonstring__))	__attribute_nonstring__	__attribute__ ((__nonstring__))
#define __glibc_has_include __has_include	__glibc_has_include	__has_include
#define __glibc_has_attribute(attr) 0	__glibc_has_attribute(attr)	0
#define __glibc_likely(cond) __builtin_expect ((cond), 1)	__glibc_likely(cond)	__builtin_expect ((cond), 1)
#define __glibc_unlikely(cond) __builtin_expect ((cond), 0)	__glibc_unlikely(cond)	__builtin_expect ((cond), 0)
#define __restrict_arr	__restrict_arr	
#define __va_arg_pack_len() __builtin_va_arg_pack_len ()	__va_arg_pack_len()	__builtin_va_arg_pack_len ()
#define __va_arg_pack() __builtin_va_arg_pack ()	__va_arg_pack()	__builtin_va_arg_pack ()
#define __fortify_function __extern_always_inline __attribute_artificial__	__fortify_function	__extern_always_inline __attribute_artificial__
#define __extern_always_inline extern __always_inline __attribute__ ((__gnu_inline__))	__extern_always_inline	extern __always_inline __attribute__ ((__gnu_inline__))
#define __extern_inline extern __inline __attribute__ ((__gnu_inline__))	__extern_inline	extern __inline __attribute__ ((__gnu_inline__))
#define __attribute_artificial__ __attribute__ ((__artificial__))	__attribute_artificial__	__attribute__ ((__artificial__))
#define __always_inline __inline __attribute__ ((__always_inline__))	__always_inline	__inline __attribute__ ((__always_inline__))
#undef __always_inline	__always_inline	
#define __wur __attribute_warn_unused_result__	__wur	__attribute_warn_unused_result__
#define __attribute_warn_unused_result__ __attribute__ ((__warn_unused_result__))	__attribute_warn_unused_result__	__attribute__ ((__warn_unused_result__))
#define __nonnull(params) __attribute__ ((__nonnull__ params))	__nonnull(params)	__attribute__ ((__nonnull__ params))
#define __attribute_format_strfmon__(a,b) __attribute__ ((__format__ (__strfmon__, a, b)))	__attribute_format_strfmon__(a,b)	__attribute__ ((__format__ (__strfmon__, a, b)))
#define __attribute_format_arg__(x) __attribute__ ((__format_arg__ (x)))	__attribute_format_arg__(x)	__attribute__ ((__format_arg__ (x)))
#define __attribute_deprecated_msg__(msg) __attribute__ ((__deprecated__ (msg)))	__attribute_deprecated_msg__(msg)	__attribute__ ((__deprecated__ (msg)))
#define __attribute_deprecated__ __attribute__ ((__deprecated__))	__attribute_deprecated__	__attribute__ ((__deprecated__))
#define __attribute_noinline__ __attribute__ ((__noinline__))	__attribute_noinline__	__attribute__ ((__noinline__))
#define __attribute_used__ __attribute__ ((__used__))	__attribute_used__	__attribute__ ((__used__))
#define __attribute_const__ __attribute__ ((__const__))	__attribute_const__	__attribute__ ((__const__))
#define __attribute_pure__ __attribute__ ((__pure__))	__attribute_pure__	__attribute__ ((__pure__))
#define __attribute_alloc_size__(params) __attribute__ ((__alloc_size__ params))	__attribute_alloc_size__(params)	__attribute__ ((__alloc_size__ params))
#define __attribute_malloc__ __attribute__ ((__malloc__))	__attribute_malloc__	__attribute__ ((__malloc__))
#define __ASMNAME2(prefix,cname) __STRING (prefix) cname	__ASMNAME2(prefix,cname)	__STRING (prefix) cname
#define __ASMNAME(cname) __ASMNAME2 (__USER_LABEL_PREFIX__, cname)	__ASMNAME(cname)	__ASMNAME2 (__USER_LABEL_PREFIX__, cname)
#define __REDIRECT_NTHNL(name,proto,alias) name proto __THROWNL __asm__ (__ASMNAME (#alias))	__REDIRECT_NTHNL(name,proto,alias)	name proto __THROWNL __asm__ (__ASMNAME (#alias))
#define __REDIRECT_NTH(name,proto,alias) name proto __THROW __asm__ (__ASMNAME (#alias))	__REDIRECT_NTH(name,proto,alias)	name proto __THROW __asm__ (__ASMNAME (#alias))
#define __REDIRECT(name,proto,alias) name proto __asm__ (__ASMNAME (#alias))	__REDIRECT(name,proto,alias)	name proto __asm__ (__ASMNAME (#alias))
#define __glibc_c99_flexarr_available 1	__glibc_c99_flexarr_available	1
#define __flexarr []	__flexarr	[]
#define __errordecl(name,msg) extern void name (void) __attribute__((__error__ (msg)))	__errordecl(name,msg)	extern void name (void) __attribute__((__error__ (msg)))
#define __warnattr(msg) __attribute__((__warning__ (msg)))	__warnattr(msg)	__attribute__((__warning__ (msg)))
#define __warndecl(name,msg) extern void name (void) __attribute__((__warning__ (msg)))	__warndecl(name,msg)	extern void name (void) __attribute__((__warning__ (msg)))
#define __bos0(ptr) __builtin_object_size (ptr, 0)	__bos0(ptr)	__builtin_object_size (ptr, 0)
#define __bos(ptr) __builtin_object_size (ptr, __USE_FORTIFY_LEVEL > 1)	__bos(ptr)	__builtin_object_size (ptr, __USE_FORTIFY_LEVEL > 1)
#define __END_DECLS }	__END_DECLS	}
"#define __BEGIN_DECLS extern ""C"" {"	__BEGIN_DECLS	"extern ""C"" {"
#define __ptr_t void *	__ptr_t	void *
#define __STRING(x) #x	__STRING(x)	#x
#define __CONCAT(x,y) x ## y	__CONCAT(x,y)	x ## y
#define __PMT(args) args	__PMT(args)	args
#define __P(args) args	__P(args)	args
#define __glibc_clang_has_extension(ext) 0	__glibc_clang_has_extension(ext)	0
#define __NTHNL(fct) fct throw ()	__NTHNL(fct)	fct throw ()
#define __NTH(fct) __LEAF_ATTR fct throw ()	__NTH(fct)	__LEAF_ATTR fct throw ()
#define __THROWNL throw ()	__THROWNL	throw ()
#define __THROW throw ()	__THROW	throw ()
#define __LEAF_ATTR __attribute__ ((__leaf__))	__LEAF_ATTR	__attribute__ ((__leaf__))
#define __LEAF , __leaf__	__LEAF	, __leaf__
#undef __PMT	__PMT	
#undef __P	__P	
#define _SYS_CDEFS_H 1	_SYS_CDEFS_H	1
#ifndef _SYS_CDEFS_H	_SYS_CDEFS_H	
#ifndef _FEATURES_H	_FEATURES_H	
#if defined __GNUC__ && !defined __STDC__	defined __GNUC__ && !defined __STDC__	
#ifdef __GNUC__	__GNUC__	
#if __GNUC_PREREQ (4, 6) && !defined _LIBC	__GNUC_PREREQ (4, 6) && !defined _LIBC	
#if !defined __cplusplus && __GNUC_PREREQ (3, 3)	!defined __cplusplus && __GNUC_PREREQ (3, 3)	
#if defined __cplusplus && __GNUC_PREREQ (2,8)	defined __cplusplus && __GNUC_PREREQ (2,8)	
"#if (defined __cplusplus						\"	"(defined __cplusplus						\"	
#if defined __clang__ && defined __has_extension	defined __clang__ && defined __has_extension	
#ifdef __cplusplus	__cplusplus	
#if __GNUC_PREREQ (4,3)	__GNUC_PREREQ (4,3)	
#if defined __STDC_VERSION__ && __STDC_VERSION__ >= 199901L	defined __STDC_VERSION__ && __STDC_VERSION__ >= 199901L	
#elif __GNUC_PREREQ (2,97)	__GNUC_PREREQ (2,97)	
#elif defined __GNUC__	defined __GNUC__	
#if defined __GNUC__ && __GNUC__ >= 2	defined __GNUC__ && __GNUC__ >= 2	
#ifdef __cplusplus	__cplusplus	
#if !defined __GNUC__ || __GNUC__ < 2	!defined __GNUC__ || __GNUC__ < 2	
#if __GNUC_PREREQ (2,96)	__GNUC_PREREQ (2,96)	
#if __GNUC_PREREQ (4, 3)	__GNUC_PREREQ (4, 3)	
#if __GNUC_PREREQ (2,96)	__GNUC_PREREQ (2,96)	
#if __GNUC_PREREQ (2,5)	__GNUC_PREREQ (2,5)	
#if __GNUC_PREREQ (3,1)	__GNUC_PREREQ (3,1)	
#if __GNUC_PREREQ (3,2)	__GNUC_PREREQ (3,2)	
#if __GNUC_PREREQ (4,5) \	__GNUC_PREREQ (4,5) \	
#if __GNUC_PREREQ (2,8)	__GNUC_PREREQ (2,8)	
#if __GNUC_PREREQ (2,97)	__GNUC_PREREQ (2,97)	
#if __GNUC_PREREQ (3,3)	__GNUC_PREREQ (3,3)	
#if __GNUC_PREREQ (3,4)	__GNUC_PREREQ (3,4)	
#if __USE_FORTIFY_LEVEL > 0	__USE_FORTIFY_LEVEL > 0	
#ifndef __wur	__wur	
#if __GNUC_PREREQ (3,2)	__GNUC_PREREQ (3,2)	
#if __GNUC_PREREQ (4,3)	__GNUC_PREREQ (4,3)	
#if (!defined __cplusplus || __GNUC_PREREQ (4,3) \	(!defined __cplusplus || __GNUC_PREREQ (4,3) \	
#if defined __GNUC_STDC_INLINE__ || defined __cplusplus	defined __GNUC_STDC_INLINE__ || defined __cplusplus	
#ifdef __extern_always_inline	__extern_always_inline	
#if __GNUC_PREREQ (4,3)	__GNUC_PREREQ (4,3)	
#if !__GNUC_PREREQ (2,8)	!__GNUC_PREREQ (2,8)	
#if !__GNUC_PREREQ (2,92)	!__GNUC_PREREQ (2,92)	
#if defined __STDC_VERSION__ && __STDC_VERSION__ >= 199901L	defined __STDC_VERSION__ && __STDC_VERSION__ >= 199901L	
#if __GNUC_PREREQ (3,1) && !defined __GNUG__	__GNUC_PREREQ (3,1) && !defined __GNUG__	
#ifdef __GNUC__	__GNUC__	
#if defined __STDC_VERSION__ && __STDC_VERSION__ >= 199901L	defined __STDC_VERSION__ && __STDC_VERSION__ >= 199901L	
#if __GNUC__ >= 3	__GNUC__ >= 3	
#ifdef __has_attribute	__has_attribute	
#ifdef __has_include	__has_include	
#if (!defined _Noreturn \	(!defined _Noreturn \	
#if __GNUC_PREREQ (2,8)	__GNUC_PREREQ (2,8)	
#if __GNUC_PREREQ (8, 0)	__GNUC_PREREQ (8, 0)	
#if __GNUC_PREREQ (9, 0)	__GNUC_PREREQ (9, 0)	
#if (!defined _Static_assert && !defined __cplusplus \	(!defined _Static_assert && !defined __cplusplus \	
#if defined __LONG_DOUBLE_MATH_OPTIONAL && defined __NO_LONG_DOUBLE_MATH	defined __LONG_DOUBLE_MATH_OPTIONAL && defined __NO_LONG_DOUBLE_MATH	
#ifdef __REDIRECT	__REDIRECT	
#if !defined __LDBL_COMPAT || !defined __REDIRECT	!defined __LDBL_COMPAT || !defined __REDIRECT	
#ifdef __REDIRECT	__REDIRECT	
#if __GNUC_PREREQ (4,8) || __glibc_clang_prereq (3,5)	__GNUC_PREREQ (4,8) || __glibc_clang_prereq (3,5)	
#if !defined __cplusplus \	!defined __cplusplus \	
#define __GNUC_PREREQ(maj,min) ((__GNUC__ << 16) + __GNUC_MINOR__ >= ((maj) << 16) + (min))	__GNUC_PREREQ(maj,min)	((__GNUC__ << 16) + __GNUC_MINOR__ >= ((maj) << 16) + (min))
#define __glibc_clang_prereq(maj,min) 0	__glibc_clang_prereq(maj,min)	0
#define __has_include(STR) __has_include__(STR)	__has_include(STR)	__has_include__(STR)
#define __GNUG__ 9	__GNUG__	9
#define __GNUC_STDC_INLINE__ 1	__GNUC_STDC_INLINE__	1
#define __USE_FORTIFY_LEVEL 2	__USE_FORTIFY_LEVEL	2
#define __STDC__ 1	__STDC__	1
#define _FEATURES_H 1	_FEATURES_H	1
#define __stub_stty	__stub_stty	
#define __stub_sstk	__stub_sstk	
#define __stub_sigreturn	__stub_sigreturn	
#define __stub_setlogin	__stub_setlogin	
#define __stub_revoke	__stub_revoke	
#define __stub_lchmod	__stub_lchmod	
#define __stub_gtty	__stub_gtty	
#define __stub_fchflags	__stub_fchflags	
#define __stub_chflags	__stub_chflags	
#define __stub___compat_bdflush	__stub___compat_bdflush	
#ifdef _LIBC	_LIBC	
#include <gnu/stubs-64.h>	<gnu/stubs-64.h>	
#if !defined __x86_64__	!defined __x86_64__	
#if defined __x86_64__ && defined __LP64__	defined __x86_64__ && defined __LP64__	
#if defined __x86_64__ && defined __ILP32__	defined __x86_64__ && defined __ILP32__	
#define __LP64__ 1	__LP64__	1
#include <gnu/stubs.h>	<gnu/stubs.h>	
#include <sys/cdefs.h>	<sys/cdefs.h>	
#include <stdc-predef.h>	<stdc-predef.h>	
#define __USE_EXTERN_INLINES 1	__USE_EXTERN_INLINES	1
#define __GLIBC_PREREQ(maj,min) ((__GLIBC__ << 16) + __GLIBC_MINOR__ >= ((maj) << 16) + (min))	__GLIBC_PREREQ(maj,min)	((__GLIBC__ << 16) + __GLIBC_MINOR__ >= ((maj) << 16) + (min))
#define __GLIBC_MINOR__ 30	__GLIBC_MINOR__	30
#define __GLIBC__ 2	__GLIBC__	2
#define __GNU_LIBRARY__ 6	__GNU_LIBRARY__	6
#undef __GNU_LIBRARY__	__GNU_LIBRARY__	
#define __GLIBC_USE_DEPRECATED_SCANF 0	__GLIBC_USE_DEPRECATED_SCANF	0
#define __GLIBC_USE_DEPRECATED_GETS 1	__GLIBC_USE_DEPRECATED_GETS	1
#define __USE_GNU 1	__USE_GNU	1
#define __USE_ATFILE 1	__USE_ATFILE	1
#define __USE_MISC 1	__USE_MISC	1
#define __USE_LARGEFILE64 1	__USE_LARGEFILE64	1
#define __USE_LARGEFILE 1	__USE_LARGEFILE	1
#define __USE_ISOC99 1	__USE_ISOC99	1
#undef __USE_ISOC99	__USE_ISOC99	
#define __USE_ISOC95 1	__USE_ISOC95	1
#undef __USE_ISOC95	__USE_ISOC95	
#define __USE_XOPEN2KXSI 1	__USE_XOPEN2KXSI	1
#define __USE_XOPEN2K 1	__USE_XOPEN2K	1
#define __USE_XOPEN2K8XSI 1	__USE_XOPEN2K8XSI	1
#define __USE_XOPEN2K8 1	__USE_XOPEN2K8	1
#define _LARGEFILE_SOURCE 1	_LARGEFILE_SOURCE	1
#undef _LARGEFILE_SOURCE	_LARGEFILE_SOURCE	
#define __USE_UNIX98 1	__USE_UNIX98	1
#define __USE_XOPEN_EXTENDED 1	__USE_XOPEN_EXTENDED	1
#define __USE_XOPEN 1	__USE_XOPEN	1
#define _ATFILE_SOURCE 1	_ATFILE_SOURCE	1
#undef _ATFILE_SOURCE	_ATFILE_SOURCE	
#define __USE_XOPEN2K8 1	__USE_XOPEN2K8	1
#define __USE_ISOC99 1	__USE_ISOC99	1
#undef __USE_ISOC99	__USE_ISOC99	
#define __USE_ISOC95 1	__USE_ISOC95	1
#undef __USE_ISOC95	__USE_ISOC95	
#define __USE_XOPEN2K 1	__USE_XOPEN2K	1
#define __USE_POSIX199506 1	__USE_POSIX199506	1
#define __USE_POSIX199309 1	__USE_POSIX199309	1
#define __USE_POSIX2 1	__USE_POSIX2	1
#define __USE_POSIX 1	__USE_POSIX	1
#define _POSIX_C_SOURCE 200809L	_POSIX_C_SOURCE	200809L
#undef _POSIX_C_SOURCE	_POSIX_C_SOURCE	
#define _POSIX_SOURCE 1	_POSIX_SOURCE	1
#undef _POSIX_SOURCE	_POSIX_SOURCE	
#define __USE_ISOC99 1	__USE_ISOC99	1
#define __USE_ISOCXX11 1	__USE_ISOCXX11	1
#define __USE_ISOC95 1	__USE_ISOC95	1
#define __USE_ISOC99 1	__USE_ISOC99	1
#define __USE_ISOC11 1	__USE_ISOC11	1
#define _DEFAULT_SOURCE 1	_DEFAULT_SOURCE	1
#undef _DEFAULT_SOURCE	_DEFAULT_SOURCE	
#define _ATFILE_SOURCE 1	_ATFILE_SOURCE	1
#undef _ATFILE_SOURCE	_ATFILE_SOURCE	
#define _DEFAULT_SOURCE 1	_DEFAULT_SOURCE	1
#undef _DEFAULT_SOURCE	_DEFAULT_SOURCE	
#define _LARGEFILE64_SOURCE 1	_LARGEFILE64_SOURCE	1
#undef _LARGEFILE64_SOURCE	_LARGEFILE64_SOURCE	
#define _XOPEN_SOURCE_EXTENDED 1	_XOPEN_SOURCE_EXTENDED	1
#undef _XOPEN_SOURCE_EXTENDED	_XOPEN_SOURCE_EXTENDED	
#define _XOPEN_SOURCE 700	_XOPEN_SOURCE	700
#undef _XOPEN_SOURCE	_XOPEN_SOURCE	
#define _POSIX_C_SOURCE 200809L	_POSIX_C_SOURCE	200809L
#undef _POSIX_C_SOURCE	_POSIX_C_SOURCE	
#define _POSIX_SOURCE 1	_POSIX_SOURCE	1
#undef _POSIX_SOURCE	_POSIX_SOURCE	
#define _ISOC11_SOURCE 1	_ISOC11_SOURCE	1
#undef _ISOC11_SOURCE	_ISOC11_SOURCE	
#define _ISOC99_SOURCE 1	_ISOC99_SOURCE	1
#undef _ISOC99_SOURCE	_ISOC99_SOURCE	
#define _ISOC95_SOURCE 1	_ISOC95_SOURCE	1
#undef _ISOC95_SOURCE	_ISOC95_SOURCE	
#define __GLIBC_USE(F) __GLIBC_USE_ ## F	__GLIBC_USE(F)	__GLIBC_USE_ ## F
#define __KERNEL_STRICT_NAMES	__KERNEL_STRICT_NAMES	
#undef __GLIBC_USE_DEPRECATED_SCANF	__GLIBC_USE_DEPRECATED_SCANF	
#undef __GLIBC_USE_DEPRECATED_GETS	__GLIBC_USE_DEPRECATED_GETS	
#undef __KERNEL_STRICT_NAMES	__KERNEL_STRICT_NAMES	
#undef __USE_FORTIFY_LEVEL	__USE_FORTIFY_LEVEL	
#undef __USE_GNU	__USE_GNU	
#undef __USE_ATFILE	__USE_ATFILE	
#undef __USE_MISC	__USE_MISC	
#undef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#undef __USE_LARGEFILE64	__USE_LARGEFILE64	
#undef __USE_LARGEFILE	__USE_LARGEFILE	
#undef __USE_XOPEN2K8XSI	__USE_XOPEN2K8XSI	
#undef __USE_XOPEN2K8	__USE_XOPEN2K8	
#undef __USE_XOPEN2KXSI	__USE_XOPEN2KXSI	
#undef __USE_XOPEN2K	__USE_XOPEN2K	
#undef __USE_UNIX98	__USE_UNIX98	
#undef __USE_XOPEN_EXTENDED	__USE_XOPEN_EXTENDED	
#undef __USE_XOPEN	__USE_XOPEN	
#undef __USE_POSIX199506	__USE_POSIX199506	
#undef __USE_POSIX199309	__USE_POSIX199309	
#undef __USE_POSIX2	__USE_POSIX2	
#undef __USE_POSIX	__USE_POSIX	
#undef __USE_ISOCXX11	__USE_ISOCXX11	
#undef __USE_ISOC95	__USE_ISOC95	
#undef __USE_ISOC99	__USE_ISOC99	
#undef __USE_ISOC11	__USE_ISOC11	
#ifndef _FEATURES_H	_FEATURES_H	
#ifndef _LOOSE_KERNEL_NAMES	_LOOSE_KERNEL_NAMES	
#if defined __GNUC__ && defined __GNUC_MINOR__	defined __GNUC__ && defined __GNUC_MINOR__	
#if defined __clang_major__ && defined __clang_minor__	defined __clang_major__ && defined __clang_minor__	
#if (defined _BSD_SOURCE || defined _SVID_SOURCE) \	(defined _BSD_SOURCE || defined _SVID_SOURCE) \	
#ifdef _GNU_SOURCE	_GNU_SOURCE	
"#if (defined _DEFAULT_SOURCE					\"	"(defined _DEFAULT_SOURCE					\"	
#if (defined _ISOC11_SOURCE \	(defined _ISOC11_SOURCE \	
#if (defined _ISOC99_SOURCE || defined _ISOC11_SOURCE \	(defined _ISOC99_SOURCE || defined _ISOC11_SOURCE \	
#if (defined _ISOC99_SOURCE || defined _ISOC11_SOURCE \	(defined _ISOC99_SOURCE || defined _ISOC11_SOURCE \	
#ifdef __cplusplus	__cplusplus	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201103L || defined __GXX_EXPERIMENTAL_CXX0X__	__cplusplus >= 201103L || defined __GXX_EXPERIMENTAL_CXX0X__	
#ifdef _DEFAULT_SOURCE	_DEFAULT_SOURCE	
#if !defined _POSIX_SOURCE && !defined _POSIX_C_SOURCE	!defined _POSIX_SOURCE && !defined _POSIX_C_SOURCE	
"#if ((!defined __STRICT_ANSI__					\"	"((!defined __STRICT_ANSI__					\"	
#if defined _XOPEN_SOURCE && (_XOPEN_SOURCE - 0) < 500	defined _XOPEN_SOURCE && (_XOPEN_SOURCE - 0) < 500	
#elif defined _XOPEN_SOURCE && (_XOPEN_SOURCE - 0) < 600	defined _XOPEN_SOURCE && (_XOPEN_SOURCE - 0) < 600	
#elif defined _XOPEN_SOURCE && (_XOPEN_SOURCE - 0) < 700	defined _XOPEN_SOURCE && (_XOPEN_SOURCE - 0) < 700	
#if ((!defined _POSIX_C_SOURCE || (_POSIX_C_SOURCE - 0) < 199506L) \	((!defined _POSIX_C_SOURCE || (_POSIX_C_SOURCE - 0) < 199506L) \	
"#if (defined _POSIX_SOURCE					\"	"(defined _POSIX_SOURCE					\"	
#if defined _POSIX_C_SOURCE && _POSIX_C_SOURCE >= 2 || defined _XOPEN_SOURCE	defined _POSIX_C_SOURCE && _POSIX_C_SOURCE >= 2 || defined _XOPEN_SOURCE	
#if defined _POSIX_C_SOURCE && (_POSIX_C_SOURCE - 0) >= 199309L	defined _POSIX_C_SOURCE && (_POSIX_C_SOURCE - 0) >= 199309L	
#if defined _POSIX_C_SOURCE && (_POSIX_C_SOURCE - 0) >= 199506L	defined _POSIX_C_SOURCE && (_POSIX_C_SOURCE - 0) >= 199506L	
#if defined _POSIX_C_SOURCE && (_POSIX_C_SOURCE - 0) >= 200112L	defined _POSIX_C_SOURCE && (_POSIX_C_SOURCE - 0) >= 200112L	
#if defined _POSIX_C_SOURCE && (_POSIX_C_SOURCE - 0) >= 200809L	defined _POSIX_C_SOURCE && (_POSIX_C_SOURCE - 0) >= 200809L	
#ifdef _XOPEN_SOURCE	_XOPEN_SOURCE	
#if (_XOPEN_SOURCE - 0) >= 500	(_XOPEN_SOURCE - 0) >= 500	
#if (_XOPEN_SOURCE - 0) >= 600	(_XOPEN_SOURCE - 0) >= 600	
#if (_XOPEN_SOURCE - 0) >= 700	(_XOPEN_SOURCE - 0) >= 700	
#ifdef _XOPEN_SOURCE_EXTENDED	_XOPEN_SOURCE_EXTENDED	
#ifdef _LARGEFILE_SOURCE	_LARGEFILE_SOURCE	
#ifdef _LARGEFILE64_SOURCE	_LARGEFILE64_SOURCE	
#if defined _FILE_OFFSET_BITS && _FILE_OFFSET_BITS == 64	defined _FILE_OFFSET_BITS && _FILE_OFFSET_BITS == 64	
#if defined _DEFAULT_SOURCE	defined _DEFAULT_SOURCE	
#ifdef _ATFILE_SOURCE	_ATFILE_SOURCE	
#ifdef _GNU_SOURCE	_GNU_SOURCE	
#if defined _FORTIFY_SOURCE && _FORTIFY_SOURCE > 0 \	defined _FORTIFY_SOURCE && _FORTIFY_SOURCE > 0 \	
#if _FORTIFY_SOURCE > 1	_FORTIFY_SOURCE > 1	
#if defined __cplusplus ? __cplusplus >= 201402L : defined __USE_ISOC11	defined __cplusplus ? __cplusplus >= 201402L : defined __USE_ISOC11	
"#if (defined __USE_GNU							\"	"(defined __USE_GNU							\"	
#ifndef __ASSEMBLER__	__ASSEMBLER__	
#ifndef _SYS_CDEFS_H	_SYS_CDEFS_H	
#if defined __USE_FILE_OFFSET64 && !defined __REDIRECT	defined __USE_FILE_OFFSET64 && !defined __REDIRECT	
#if __GNUC_PREREQ (2, 7) && defined __OPTIMIZE__ \	__GNUC_PREREQ (2, 7) && defined __OPTIMIZE__ \	
#define __OPTIMIZE__ 1	__OPTIMIZE__	1
#define __GXX_EXPERIMENTAL_CXX0X__ 1	__GXX_EXPERIMENTAL_CXX0X__	1
#define _FORTIFY_SOURCE 2	_FORTIFY_SOURCE	2
#define _REENTRANT 1	_REENTRANT	1
#include <features.h>	<features.h>	
#define _GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC __GLIBC_PREREQ(2,23)	_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC	__GLIBC_PREREQ(2,23)
#undef _GLIBCXX_HAVE_GETS	_GLIBCXX_HAVE_GETS	
#define __NO_CTYPE 1	__NO_CTYPE	1
#define _GLIBCXX_OS_DEFINES 1	_GLIBCXX_OS_DEFINES	1
#ifndef _GLIBCXX_OS_DEFINES	_GLIBCXX_OS_DEFINES	
#if __GLIBC_PREREQ(2,15) && defined(_GNU_SOURCE)	__GLIBC_PREREQ(2,15) && defined(_GNU_SOURCE)	
#define _GLIBCXX_CPU_DEFINES 1	_GLIBCXX_CPU_DEFINES	1
#ifndef _GLIBCXX_CPU_DEFINES	_GLIBCXX_CPU_DEFINES	
#include <bits/cpu_defines.h>	<bits/cpu_defines.h>	
#include <bits/os_defines.h>	<bits/os_defines.h>	
#define _GTHREAD_USE_MUTEX_TIMEDLOCK 1	_GTHREAD_USE_MUTEX_TIMEDLOCK	1
#define _GLIBCXX_X86_RDRAND 1	_GLIBCXX_X86_RDRAND	1
#define _GLIBCXX_VERBOSE 1	_GLIBCXX_VERBOSE	1
#define _GLIBCXX_USE_UTIMENSAT 1	_GLIBCXX_USE_UTIMENSAT	1
#define _GLIBCXX_USE_UTIME 1	_GLIBCXX_USE_UTIME	1
#define _GLIBCXX_USE_TMPNAM 1	_GLIBCXX_USE_TMPNAM	1
#define _GLIBCXX_USE_ST_MTIM 1	_GLIBCXX_USE_ST_MTIM	1
#define _GLIBCXX_USE_SENDFILE 1	_GLIBCXX_USE_SENDFILE	1
#define _GLIBCXX_USE_SC_NPROCESSORS_ONLN 1	_GLIBCXX_USE_SC_NPROCESSORS_ONLN	1
#define _GLIBCXX_USE_SCHED_YIELD 1	_GLIBCXX_USE_SCHED_YIELD	1
#define _GLIBCXX_USE_REALPATH 1	_GLIBCXX_USE_REALPATH	1
#define _GLIBCXX_USE_RANDOM_TR1 1	_GLIBCXX_USE_RANDOM_TR1	1
#define _GLIBCXX_USE_PTHREAD_RWLOCK_T 1	_GLIBCXX_USE_PTHREAD_RWLOCK_T	1
#define _GLIBCXX_USE_NLS 1	_GLIBCXX_USE_NLS	1
#define _GLIBCXX_USE_NANOSLEEP 1	_GLIBCXX_USE_NANOSLEEP	1
#define _GLIBCXX_USE_LSTAT 1	_GLIBCXX_USE_LSTAT	1
#define _GLIBCXX_USE_LONG_LONG 1	_GLIBCXX_USE_LONG_LONG	1
#define _GLIBCXX_USE_LFS 1	_GLIBCXX_USE_LFS	1
#define _GLIBCXX_USE_INT128 1	_GLIBCXX_USE_INT128	1
#define _GLIBCXX_USE_GET_NPROCS 1	_GLIBCXX_USE_GET_NPROCS	1
#define _GLIBCXX_USE_GETTIMEOFDAY 1	_GLIBCXX_USE_GETTIMEOFDAY	1
#define _GLIBCXX_USE_FCHMODAT 1	_GLIBCXX_USE_FCHMODAT	1
#define _GLIBCXX_USE_FCHMOD 1	_GLIBCXX_USE_FCHMOD	1
#define _GLIBCXX_USE_DEV_RANDOM 1	_GLIBCXX_USE_DEV_RANDOM	1
#define _GLIBCXX_USE_DECIMAL_FLOAT 1	_GLIBCXX_USE_DECIMAL_FLOAT	1
#define _GLIBCXX_USE_CLOCK_REALTIME 1	_GLIBCXX_USE_CLOCK_REALTIME	1
#define _GLIBCXX_USE_CLOCK_MONOTONIC 1	_GLIBCXX_USE_CLOCK_MONOTONIC	1
#define _GLIBCXX_USE_C99_STDINT_TR1 1	_GLIBCXX_USE_C99_STDINT_TR1	1
#define _GLIBCXX_USE_C99_MATH_TR1 1	_GLIBCXX_USE_C99_MATH_TR1	1
#define _GLIBCXX_USE_C99_INTTYPES_WCHAR_T_TR1 1	_GLIBCXX_USE_C99_INTTYPES_WCHAR_T_TR1	1
#define _GLIBCXX_USE_C99_INTTYPES_TR1 1	_GLIBCXX_USE_C99_INTTYPES_TR1	1
#define _GLIBCXX_USE_C99_FENV_TR1 1	_GLIBCXX_USE_C99_FENV_TR1	1
#define _GLIBCXX_USE_C99_CTYPE_TR1 1	_GLIBCXX_USE_C99_CTYPE_TR1	1
#define _GLIBCXX_USE_C99_COMPLEX_TR1 1	_GLIBCXX_USE_C99_COMPLEX_TR1	1
#define _GLIBCXX_USE_C99 1	_GLIBCXX_USE_C99	1
#define _GLIBCXX_USE_C11_UCHAR_CXX11 1	_GLIBCXX_USE_C11_UCHAR_CXX11	1
#define _GLIBCXX_SYMVER_GNU 1	_GLIBCXX_SYMVER_GNU	1
#define _GLIBCXX_SYMVER 1	_GLIBCXX_SYMVER	1
#define _GLIBCXX_STDIO_SEEK_END 2	_GLIBCXX_STDIO_SEEK_END	2
#define _GLIBCXX_STDIO_SEEK_CUR 1	_GLIBCXX_STDIO_SEEK_CUR	1
#define _GLIBCXX_STDIO_EOF -1	_GLIBCXX_STDIO_EOF	-1
#define _GLIBCXX_RES_LIMITS 1	_GLIBCXX_RES_LIMITS	1
#define _GLIBCXX_MANGLE_SIZE_T m	_GLIBCXX_MANGLE_SIZE_T	m
#define _GLIBCXX_HOSTED 1	_GLIBCXX_HOSTED	1
#define _GLIBCXX_HAS_GTHREADS 1	_GLIBCXX_HAS_GTHREADS	1
#define _GLIBCXX_FULLY_DYNAMIC_STRING 0	_GLIBCXX_FULLY_DYNAMIC_STRING	0
#define _GLIBCXX_ATOMIC_BUILTINS 1	_GLIBCXX_ATOMIC_BUILTINS	1
#define _GLIBCXX98_USE_C99_WCHAR 1	_GLIBCXX98_USE_C99_WCHAR	1
#define _GLIBCXX98_USE_C99_STDLIB 1	_GLIBCXX98_USE_C99_STDLIB	1
#define _GLIBCXX98_USE_C99_STDIO 1	_GLIBCXX98_USE_C99_STDIO	1
#define _GLIBCXX98_USE_C99_MATH 1	_GLIBCXX98_USE_C99_MATH	1
#define _GLIBCXX98_USE_C99_COMPLEX 1	_GLIBCXX98_USE_C99_COMPLEX	1
#define _GLIBCXX11_USE_C99_MATH 1	_GLIBCXX11_USE_C99_MATH	1
#define _GLIBCXX11_USE_C99_COMPLEX 1	_GLIBCXX11_USE_C99_COMPLEX	1
#define STDC_HEADERS 1	STDC_HEADERS	1
"#define _GLIBCXX_PACKAGE__GLIBCXX_VERSION ""version-unused"""	_GLIBCXX_PACKAGE__GLIBCXX_VERSION	"""version-unused"""
"#define _GLIBCXX_PACKAGE_URL """""	_GLIBCXX_PACKAGE_URL	""""""
"#define _GLIBCXX_PACKAGE_TARNAME ""libstdc++"""	_GLIBCXX_PACKAGE_TARNAME	"""libstdc++"""
"#define _GLIBCXX_PACKAGE_STRING ""package-unused version-unused"""	_GLIBCXX_PACKAGE_STRING	"""package-unused version-unused"""
"#define _GLIBCXX_PACKAGE_NAME ""package-unused"""	_GLIBCXX_PACKAGE_NAME	"""package-unused"""
"#define _GLIBCXX_PACKAGE_BUGREPORT """""	_GLIBCXX_PACKAGE_BUGREPORT	""""""
"#define LT_OBJDIR "".libs/"""	LT_OBJDIR	""".libs/"""
#define _GLIBCXX_ICONV_CONST	_GLIBCXX_ICONV_CONST	
#define _GLIBCXX_HAVE___CXA_THREAD_ATEXIT_IMPL 1	_GLIBCXX_HAVE___CXA_THREAD_ATEXIT_IMPL	1
#define _GLIBCXX_HAVE_WRITEV 1	_GLIBCXX_HAVE_WRITEV	1
#define _GLIBCXX_HAVE_WCTYPE_H 1	_GLIBCXX_HAVE_WCTYPE_H	1
#define _GLIBCXX_HAVE_WCSTOF 1	_GLIBCXX_HAVE_WCSTOF	1
#define _GLIBCXX_HAVE_WCHAR_H 1	_GLIBCXX_HAVE_WCHAR_H	1
#define _GLIBCXX_HAVE_VWSCANF 1	_GLIBCXX_HAVE_VWSCANF	1
#define _GLIBCXX_HAVE_VSWSCANF 1	_GLIBCXX_HAVE_VSWSCANF	1
#define _GLIBCXX_HAVE_VFWSCANF 1	_GLIBCXX_HAVE_VFWSCANF	1
#define _GLIBCXX_HAVE_UTIME_H 1	_GLIBCXX_HAVE_UTIME_H	1
#define _GLIBCXX_HAVE_UNISTD_H 1	_GLIBCXX_HAVE_UNISTD_H	1
#define _GLIBCXX_HAVE_UCHAR_H 1	_GLIBCXX_HAVE_UCHAR_H	1
#define _GLIBCXX_HAVE_TRUNCATE 1	_GLIBCXX_HAVE_TRUNCATE	1
#define _GLIBCXX_HAVE_TLS 1	_GLIBCXX_HAVE_TLS	1
#define _GLIBCXX_HAVE_TIMESPEC_GET 1	_GLIBCXX_HAVE_TIMESPEC_GET	1
#define _GLIBCXX_HAVE_TGMATH_H 1	_GLIBCXX_HAVE_TGMATH_H	1
#define _GLIBCXX_HAVE_TANL 1	_GLIBCXX_HAVE_TANL	1
#define _GLIBCXX_HAVE_TANHL 1	_GLIBCXX_HAVE_TANHL	1
#define _GLIBCXX_HAVE_TANHF 1	_GLIBCXX_HAVE_TANHF	1
#define _GLIBCXX_HAVE_TANF 1	_GLIBCXX_HAVE_TANF	1
#define _GLIBCXX_HAVE_S_ISREG 1	_GLIBCXX_HAVE_S_ISREG	1
#define _GLIBCXX_HAVE_SYS_UIO_H 1	_GLIBCXX_HAVE_SYS_UIO_H	1
#define _GLIBCXX_HAVE_SYS_TYPES_H 1	_GLIBCXX_HAVE_SYS_TYPES_H	1
#define _GLIBCXX_HAVE_SYS_TIME_H 1	_GLIBCXX_HAVE_SYS_TIME_H	1
#define _GLIBCXX_HAVE_SYS_SYSINFO_H 1	_GLIBCXX_HAVE_SYS_SYSINFO_H	1
#define _GLIBCXX_HAVE_SYS_STAT_H 1	_GLIBCXX_HAVE_SYS_STAT_H	1
#define _GLIBCXX_HAVE_SYS_STATVFS_H 1	_GLIBCXX_HAVE_SYS_STATVFS_H	1
#define _GLIBCXX_HAVE_SYS_SOCKET_H 1	_GLIBCXX_HAVE_SYS_SOCKET_H	1
#define _GLIBCXX_HAVE_SYS_SEM_H 1	_GLIBCXX_HAVE_SYS_SEM_H	1
#define _GLIBCXX_HAVE_SYS_SDT_H 1	_GLIBCXX_HAVE_SYS_SDT_H	1
#define _GLIBCXX_HAVE_SYS_RESOURCE_H 1	_GLIBCXX_HAVE_SYS_RESOURCE_H	1
#define _GLIBCXX_HAVE_SYS_PARAM_H 1	_GLIBCXX_HAVE_SYS_PARAM_H	1
#define _GLIBCXX_HAVE_SYS_IPC_H 1	_GLIBCXX_HAVE_SYS_IPC_H	1
#define _GLIBCXX_HAVE_SYS_IOCTL_H 1	_GLIBCXX_HAVE_SYS_IOCTL_H	1
#define _GLIBCXX_HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT 1	_GLIBCXX_HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT	1
#define _GLIBCXX_HAVE_SYMLINK 1	_GLIBCXX_HAVE_SYMLINK	1
#define _GLIBCXX_HAVE_STRXFRM_L 1	_GLIBCXX_HAVE_STRXFRM_L	1
#define _GLIBCXX_HAVE_STRUCT_DIRENT_D_TYPE 1	_GLIBCXX_HAVE_STRUCT_DIRENT_D_TYPE	1
#define _GLIBCXX_HAVE_STRTOLD 1	_GLIBCXX_HAVE_STRTOLD	1
#define _GLIBCXX_HAVE_STRTOF 1	_GLIBCXX_HAVE_STRTOF	1
#define _GLIBCXX_HAVE_STRING_H 1	_GLIBCXX_HAVE_STRING_H	1
#define _GLIBCXX_HAVE_STRINGS_H 1	_GLIBCXX_HAVE_STRINGS_H	1
#define _GLIBCXX_HAVE_STRERROR_R 1	_GLIBCXX_HAVE_STRERROR_R	1
#define _GLIBCXX_HAVE_STRERROR_L 1	_GLIBCXX_HAVE_STRERROR_L	1
#define _GLIBCXX_HAVE_STDLIB_H 1	_GLIBCXX_HAVE_STDLIB_H	1
#define _GLIBCXX_HAVE_STDINT_H 1	_GLIBCXX_HAVE_STDINT_H	1
#define _GLIBCXX_HAVE_STDBOOL_H 1	_GLIBCXX_HAVE_STDBOOL_H	1
#define _GLIBCXX_HAVE_STDALIGN_H 1	_GLIBCXX_HAVE_STDALIGN_H	1
#define _GLIBCXX_HAVE_SQRTL 1	_GLIBCXX_HAVE_SQRTL	1
#define _GLIBCXX_HAVE_SQRTF 1	_GLIBCXX_HAVE_SQRTF	1
#define _GLIBCXX_HAVE_SOCKATMARK 1	_GLIBCXX_HAVE_SOCKATMARK	1
#define _GLIBCXX_HAVE_SINL 1	_GLIBCXX_HAVE_SINL	1
#define _GLIBCXX_HAVE_SINHL 1	_GLIBCXX_HAVE_SINHL	1
#define _GLIBCXX_HAVE_SINHF 1	_GLIBCXX_HAVE_SINHF	1
#define _GLIBCXX_HAVE_SINF 1	_GLIBCXX_HAVE_SINF	1
#define _GLIBCXX_HAVE_SINCOSL 1	_GLIBCXX_HAVE_SINCOSL	1
#define _GLIBCXX_HAVE_SINCOSF 1	_GLIBCXX_HAVE_SINCOSF	1
#define _GLIBCXX_HAVE_SINCOS 1	_GLIBCXX_HAVE_SINCOS	1
#define _GLIBCXX_HAVE_SETENV 1	_GLIBCXX_HAVE_SETENV	1
#define _GLIBCXX_HAVE_READLINK 1	_GLIBCXX_HAVE_READLINK	1
#define _GLIBCXX_HAVE_QUICK_EXIT 1	_GLIBCXX_HAVE_QUICK_EXIT	1
#define _GLIBCXX_HAVE_POWL 1	_GLIBCXX_HAVE_POWL	1
#define _GLIBCXX_HAVE_POWF 1	_GLIBCXX_HAVE_POWF	1
#define _GLIBCXX_HAVE_POSIX_MEMALIGN 1	_GLIBCXX_HAVE_POSIX_MEMALIGN	1
#define _GLIBCXX_HAVE_POLL_H 1	_GLIBCXX_HAVE_POLL_H	1
#define _GLIBCXX_HAVE_POLL 1	_GLIBCXX_HAVE_POLL	1
#define _GLIBCXX_HAVE_NETINET_TCP_H 1	_GLIBCXX_HAVE_NETINET_TCP_H	1
#define _GLIBCXX_HAVE_NETINET_IN_H 1	_GLIBCXX_HAVE_NETINET_IN_H	1
#define _GLIBCXX_HAVE_NETDB_H 1	_GLIBCXX_HAVE_NETDB_H	1
#define _GLIBCXX_HAVE_MODFL 1	_GLIBCXX_HAVE_MODFL	1
#define _GLIBCXX_HAVE_MODFF 1	_GLIBCXX_HAVE_MODFF	1
#define _GLIBCXX_HAVE_MODF 1	_GLIBCXX_HAVE_MODF	1
#define _GLIBCXX_HAVE_MEMORY_H 1	_GLIBCXX_HAVE_MEMORY_H	1
#define _GLIBCXX_HAVE_MEMALIGN 1	_GLIBCXX_HAVE_MEMALIGN	1
#define _GLIBCXX_HAVE_MBSTATE_T 1	_GLIBCXX_HAVE_MBSTATE_T	1
#define _GLIBCXX_HAVE_LOGL 1	_GLIBCXX_HAVE_LOGL	1
#define _GLIBCXX_HAVE_LOGF 1	_GLIBCXX_HAVE_LOGF	1
#define _GLIBCXX_HAVE_LOG10L 1	_GLIBCXX_HAVE_LOG10L	1
#define _GLIBCXX_HAVE_LOG10F 1	_GLIBCXX_HAVE_LOG10F	1
#define _GLIBCXX_HAVE_LOCALE_H 1	_GLIBCXX_HAVE_LOCALE_H	1
#define _GLIBCXX_HAVE_LINUX_TYPES_H 1	_GLIBCXX_HAVE_LINUX_TYPES_H	1
#define _GLIBCXX_HAVE_LINUX_RANDOM_H 1	_GLIBCXX_HAVE_LINUX_RANDOM_H	1
#define _GLIBCXX_HAVE_LINUX_FUTEX 1	_GLIBCXX_HAVE_LINUX_FUTEX	1
#define _GLIBCXX_HAVE_LINK 1	_GLIBCXX_HAVE_LINK	1
#define _GLIBCXX_HAVE_LIMIT_VMEM 0	_GLIBCXX_HAVE_LIMIT_VMEM	0
#define _GLIBCXX_HAVE_LIMIT_RSS 1	_GLIBCXX_HAVE_LIMIT_RSS	1
#define _GLIBCXX_HAVE_LIMIT_FSIZE 1	_GLIBCXX_HAVE_LIMIT_FSIZE	1
#define _GLIBCXX_HAVE_LIMIT_DATA 1	_GLIBCXX_HAVE_LIMIT_DATA	1
#define _GLIBCXX_HAVE_LIMIT_AS 1	_GLIBCXX_HAVE_LIMIT_AS	1
#define _GLIBCXX_HAVE_LIBINTL_H 1	_GLIBCXX_HAVE_LIBINTL_H	1
#define _GLIBCXX_HAVE_LDEXPL 1	_GLIBCXX_HAVE_LDEXPL	1
#define _GLIBCXX_HAVE_LDEXPF 1	_GLIBCXX_HAVE_LDEXPF	1
#define _GLIBCXX_HAVE_LC_MESSAGES 1	_GLIBCXX_HAVE_LC_MESSAGES	1
#define _GLIBCXX_HAVE_ISWBLANK 1	_GLIBCXX_HAVE_ISWBLANK	1
#define _GLIBCXX_HAVE_ISNANL 1	_GLIBCXX_HAVE_ISNANL	1
#define _GLIBCXX_HAVE_ISNANF 1	_GLIBCXX_HAVE_ISNANF	1
#define _GLIBCXX_HAVE_ISINFL 1	_GLIBCXX_HAVE_ISINFL	1
#define _GLIBCXX_HAVE_ISINFF 1	_GLIBCXX_HAVE_ISINFF	1
#define _GLIBCXX_HAVE_INTTYPES_H 1	_GLIBCXX_HAVE_INTTYPES_H	1
#define _GLIBCXX_HAVE_INT64_T_LONG 1	_GLIBCXX_HAVE_INT64_T_LONG	1
#define _GLIBCXX_HAVE_INT64_T 1	_GLIBCXX_HAVE_INT64_T	1
#define _GLIBCXX_HAVE_ICONV 1	_GLIBCXX_HAVE_ICONV	1
#define _GLIBCXX_HAVE_HYPOTL 1	_GLIBCXX_HAVE_HYPOTL	1
#define _GLIBCXX_HAVE_HYPOTF 1	_GLIBCXX_HAVE_HYPOTF	1
#define _GLIBCXX_HAVE_HYPOT 1	_GLIBCXX_HAVE_HYPOT	1
#define _GLIBCXX_HAVE_GETS 1	_GLIBCXX_HAVE_GETS	1
#define _GLIBCXX_HAVE_GETIPINFO 1	_GLIBCXX_HAVE_GETIPINFO	1
#define _GLIBCXX_HAVE_FREXPL 1	_GLIBCXX_HAVE_FREXPL	1
#define _GLIBCXX_HAVE_FREXPF 1	_GLIBCXX_HAVE_FREXPF	1
#define _GLIBCXX_HAVE_FMODL 1	_GLIBCXX_HAVE_FMODL	1
#define _GLIBCXX_HAVE_FMODF 1	_GLIBCXX_HAVE_FMODF	1
#define _GLIBCXX_HAVE_FLOORL 1	_GLIBCXX_HAVE_FLOORL	1
#define _GLIBCXX_HAVE_FLOORF 1	_GLIBCXX_HAVE_FLOORF	1
#define _GLIBCXX_HAVE_FLOAT_H 1	_GLIBCXX_HAVE_FLOAT_H	1
#define _GLIBCXX_HAVE_FINITEL 1	_GLIBCXX_HAVE_FINITEL	1
#define _GLIBCXX_HAVE_FINITEF 1	_GLIBCXX_HAVE_FINITEF	1
#define _GLIBCXX_HAVE_FINITE 1	_GLIBCXX_HAVE_FINITE	1
#define _GLIBCXX_HAVE_FENV_H 1	_GLIBCXX_HAVE_FENV_H	1
#define _GLIBCXX_HAVE_FCNTL_H 1	_GLIBCXX_HAVE_FCNTL_H	1
#define _GLIBCXX_HAVE_FABSL 1	_GLIBCXX_HAVE_FABSL	1
#define _GLIBCXX_HAVE_FABSF 1	_GLIBCXX_HAVE_FABSF	1
#define _GLIBCXX_HAVE_EXPL 1	_GLIBCXX_HAVE_EXPL	1
#define _GLIBCXX_HAVE_EXPF 1	_GLIBCXX_HAVE_EXPF	1
#define _GLIBCXX_HAVE_EXECINFO_H 1	_GLIBCXX_HAVE_EXECINFO_H	1
#define _GLIBCXX_HAVE_EXCEPTION_PTR_SINCE_GCC46 1	_GLIBCXX_HAVE_EXCEPTION_PTR_SINCE_GCC46	1
#define _GLIBCXX_HAVE_EWOULDBLOCK 1	_GLIBCXX_HAVE_EWOULDBLOCK	1
#define _GLIBCXX_HAVE_ETXTBSY 1	_GLIBCXX_HAVE_ETXTBSY	1
#define _GLIBCXX_HAVE_ETIMEDOUT 1	_GLIBCXX_HAVE_ETIMEDOUT	1
#define _GLIBCXX_HAVE_ETIME 1	_GLIBCXX_HAVE_ETIME	1
#define _GLIBCXX_HAVE_EPROTO 1	_GLIBCXX_HAVE_EPROTO	1
#define _GLIBCXX_HAVE_EPERM 1	_GLIBCXX_HAVE_EPERM	1
#define _GLIBCXX_HAVE_EOWNERDEAD 1	_GLIBCXX_HAVE_EOWNERDEAD	1
#define _GLIBCXX_HAVE_EOVERFLOW 1	_GLIBCXX_HAVE_EOVERFLOW	1
#define _GLIBCXX_HAVE_ENOTSUP 1	_GLIBCXX_HAVE_ENOTSUP	1
#define _GLIBCXX_HAVE_ENOTRECOVERABLE 1	_GLIBCXX_HAVE_ENOTRECOVERABLE	1
#define _GLIBCXX_HAVE_ENOSTR 1	_GLIBCXX_HAVE_ENOSTR	1
#define _GLIBCXX_HAVE_ENOSR 1	_GLIBCXX_HAVE_ENOSR	1
#define _GLIBCXX_HAVE_ENOSPC 1	_GLIBCXX_HAVE_ENOSPC	1
#define _GLIBCXX_HAVE_ENOLINK 1	_GLIBCXX_HAVE_ENOLINK	1
#define _GLIBCXX_HAVE_ENODATA 1	_GLIBCXX_HAVE_ENODATA	1
#define _GLIBCXX_HAVE_ENDIAN_H 1	_GLIBCXX_HAVE_ENDIAN_H	1
#define _GLIBCXX_HAVE_EIDRM 1	_GLIBCXX_HAVE_EIDRM	1
#define _GLIBCXX_HAVE_ECHILD 1	_GLIBCXX_HAVE_ECHILD	1
#define _GLIBCXX_HAVE_ECANCELED 1	_GLIBCXX_HAVE_ECANCELED	1
#define _GLIBCXX_HAVE_EBADMSG 1	_GLIBCXX_HAVE_EBADMSG	1
#define _GLIBCXX_HAVE_DLFCN_H 1	_GLIBCXX_HAVE_DLFCN_H	1
#define _GLIBCXX_HAVE_DIRENT_H 1	_GLIBCXX_HAVE_DIRENT_H	1
#define _GLIBCXX_HAVE_COSL 1	_GLIBCXX_HAVE_COSL	1
#define _GLIBCXX_HAVE_COSHL 1	_GLIBCXX_HAVE_COSHL	1
#define _GLIBCXX_HAVE_COSHF 1	_GLIBCXX_HAVE_COSHF	1
#define _GLIBCXX_HAVE_COSF 1	_GLIBCXX_HAVE_COSF	1
#define _GLIBCXX_HAVE_COMPLEX_H 1	_GLIBCXX_HAVE_COMPLEX_H	1
#define _GLIBCXX_HAVE_CEILL 1	_GLIBCXX_HAVE_CEILL	1
#define _GLIBCXX_HAVE_CEILF 1	_GLIBCXX_HAVE_CEILF	1
#define _GLIBCXX_HAVE_AT_QUICK_EXIT 1	_GLIBCXX_HAVE_AT_QUICK_EXIT	1
#define _GLIBCXX_HAVE_ATOMIC_LOCK_POLICY 1	_GLIBCXX_HAVE_ATOMIC_LOCK_POLICY	1
#define _GLIBCXX_HAVE_ATANL 1	_GLIBCXX_HAVE_ATANL	1
#define _GLIBCXX_HAVE_ATANF 1	_GLIBCXX_HAVE_ATANF	1
#define _GLIBCXX_HAVE_ATAN2L 1	_GLIBCXX_HAVE_ATAN2L	1
#define _GLIBCXX_HAVE_ATAN2F 1	_GLIBCXX_HAVE_ATAN2F	1
#define _GLIBCXX_HAVE_AS_SYMVER_DIRECTIVE 1	_GLIBCXX_HAVE_AS_SYMVER_DIRECTIVE	1
#define _GLIBCXX_HAVE_ASINL 1	_GLIBCXX_HAVE_ASINL	1
#define _GLIBCXX_HAVE_ASINF 1	_GLIBCXX_HAVE_ASINF	1
#define _GLIBCXX_HAVE_ARPA_INET_H 1	_GLIBCXX_HAVE_ARPA_INET_H	1
#define _GLIBCXX_HAVE_ALIGNED_ALLOC 1	_GLIBCXX_HAVE_ALIGNED_ALLOC	1
#define _GLIBCXX_HAVE_ACOSL 1	_GLIBCXX_HAVE_ACOSL	1
#define _GLIBCXX_HAVE_ACOSF 1	_GLIBCXX_HAVE_ACOSF	1
#define _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED 1	_GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED	1
#define _GLIBCXX_HAVE_BUILTIN_LAUNDER 1	_GLIBCXX_HAVE_BUILTIN_LAUNDER	1
#define _GLIBCXX_HAVE_BUILTIN_IS_AGGREGATE 1	_GLIBCXX_HAVE_BUILTIN_IS_AGGREGATE	1
#define _GLIBCXX_HAVE_BUILTIN_HAS_UNIQ_OBJ_REP 1	_GLIBCXX_HAVE_BUILTIN_HAS_UNIQ_OBJ_REP	1
#define _GLIBCXX_USE_FLOAT128 1	_GLIBCXX_USE_FLOAT128	1
#define _GLIBCXX_USE_C99_COMPLEX _GLIBCXX11_USE_C99_COMPLEX	_GLIBCXX_USE_C99_COMPLEX	_GLIBCXX11_USE_C99_COMPLEX
#define _GLIBCXX_USE_C99_MATH _GLIBCXX11_USE_C99_MATH	_GLIBCXX_USE_C99_MATH	_GLIBCXX11_USE_C99_MATH
#undef max	max	
#undef min	min	
#define _GLIBCXX_FAST_MATH 0	_GLIBCXX_FAST_MATH	0
#define _GLIBCXX_TXN_SAFE_DYN	_GLIBCXX_TXN_SAFE_DYN	
#define _GLIBCXX_TXN_SAFE	_GLIBCXX_TXN_SAFE	
#define _GLIBCXX_USE_WEAK_REF __GXX_WEAK__	_GLIBCXX_USE_WEAK_REF	__GXX_WEAK__
#define _GLIBCXX_WEAK_DEFINITION	_GLIBCXX_WEAK_DEFINITION	
#define _GLIBCXX_PSEUDO_VISIBILITY(V)	_GLIBCXX_PSEUDO_VISIBILITY(V)	
#define _GLIBCXX_USE_ALLOCATOR_NEW 1	_GLIBCXX_USE_ALLOCATOR_NEW	1
#define _GLIBCXX_END_EXTERN_C }	_GLIBCXX_END_EXTERN_C	}
"#define _GLIBCXX_BEGIN_EXTERN_C extern ""C"" {"	_GLIBCXX_BEGIN_EXTERN_C	"extern ""C"" {"
#define _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(A)	_GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(A)	
#define _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(A)	_GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(A)	
#define _GLIBCXX_END_NAMESPACE_LDBL_OR_CXX11 _GLIBCXX_END_NAMESPACE_CXX11	_GLIBCXX_END_NAMESPACE_LDBL_OR_CXX11	_GLIBCXX_END_NAMESPACE_CXX11
#define _GLIBCXX_BEGIN_NAMESPACE_LDBL_OR_CXX11 _GLIBCXX_BEGIN_NAMESPACE_CXX11	_GLIBCXX_BEGIN_NAMESPACE_LDBL_OR_CXX11	_GLIBCXX_BEGIN_NAMESPACE_CXX11
#define _GLIBCXX_NAMESPACE_LDBL_OR_CXX11 _GLIBCXX_NAMESPACE_CXX11	_GLIBCXX_NAMESPACE_LDBL_OR_CXX11	_GLIBCXX_NAMESPACE_CXX11
#define _GLIBCXX_END_NAMESPACE_LDBL	_GLIBCXX_END_NAMESPACE_LDBL	
#define _GLIBCXX_BEGIN_NAMESPACE_LDBL	_GLIBCXX_BEGIN_NAMESPACE_LDBL	
#define _GLIBCXX_NAMESPACE_LDBL	_GLIBCXX_NAMESPACE_LDBL	
#undef _GLIBCXX_LONG_DOUBLE_COMPAT	_GLIBCXX_LONG_DOUBLE_COMPAT	
#define _GLIBCXX_DEFAULT_ABI_TAG _GLIBCXX_ABI_TAG_CXX11	_GLIBCXX_DEFAULT_ABI_TAG	_GLIBCXX_ABI_TAG_CXX11
#define _GLIBCXX_NAMESPACE_CXX11 __cxx11::	_GLIBCXX_NAMESPACE_CXX11	__cxx11::
#define _GLIBCXX_USE_DUAL_ABI 1	_GLIBCXX_USE_DUAL_ABI	1
#define _GLIBCXX_EXTERN_TEMPLATE 1	_GLIBCXX_EXTERN_TEMPLATE	1
#define _GLIBCXX_NOEXCEPT_QUAL	_GLIBCXX_NOEXCEPT_QUAL	
#define _GLIBCXX_NOEXCEPT_PARM	_GLIBCXX_NOEXCEPT_PARM	
#define _GLIBCXX_THROW_OR_ABORT(_EXC) (__builtin_abort())	_GLIBCXX_THROW_OR_ABORT(_EXC)	(__builtin_abort())
#define _GLIBCXX_NOTHROW _GLIBCXX_USE_NOEXCEPT	_GLIBCXX_NOTHROW	_GLIBCXX_USE_NOEXCEPT
#define _GLIBCXX_THROW(_EXC)	_GLIBCXX_THROW(_EXC)	
#define _GLIBCXX_USE_NOEXCEPT noexcept	_GLIBCXX_USE_NOEXCEPT	noexcept
#define _GLIBCXX20_CONSTEXPR	_GLIBCXX20_CONSTEXPR	
#define _GLIBCXX_USE_CONSTEXPR constexpr	_GLIBCXX_USE_CONSTEXPR	constexpr
"#define _GLIBCXX_ABI_TAG_CXX11 __attribute ((__abi_tag__ (""cxx11"")))"	_GLIBCXX_ABI_TAG_CXX11	"__attribute ((__abi_tag__ (""cxx11"")))"
#define _GLIBCXX17_DEPRECATED	_GLIBCXX17_DEPRECATED	
#define _GLIBCXX_DEPRECATED __attribute__ ((__deprecated__))	_GLIBCXX_DEPRECATED	__attribute__ ((__deprecated__))
#define _GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY 1	_GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY	1
#define _GLIBCXX_NORETURN __attribute__ ((__noreturn__))	_GLIBCXX_NORETURN	__attribute__ ((__noreturn__))
#define _GLIBCXX_CONST __attribute__ ((__const__))	_GLIBCXX_CONST	__attribute__ ((__const__))
#define _GLIBCXX_PURE __attribute__ ((__pure__))	_GLIBCXX_PURE	__attribute__ ((__pure__))
#define __GLIBCXX__ 20191008	__GLIBCXX__	20191008
#define _GLIBCXX_RELEASE 9	_GLIBCXX_RELEASE	9
#define _GLIBCXX_CXX_CONFIG_H 1	_GLIBCXX_CXX_CONFIG_H	1
#ifndef _GLIBCXX_CXX_CONFIG_H	_GLIBCXX_CXX_CONFIG_H	
#ifndef _GLIBCXX_PURE	_GLIBCXX_PURE	
#ifndef _GLIBCXX_CONST	_GLIBCXX_CONST	
#ifndef _GLIBCXX_NORETURN	_GLIBCXX_NORETURN	
#ifndef _GLIBCXX_NOTHROW	_GLIBCXX_NOTHROW	
#ifndef __cplusplus	__cplusplus	
#if _GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY	_GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY	
#ifndef _GLIBCXX_USE_DEPRECATED	_GLIBCXX_USE_DEPRECATED	
#if defined(__DEPRECATED) && (__cplusplus >= 201103L)	defined(__DEPRECATED) && (__cplusplus >= 201103L)	
#if defined(__DEPRECATED) && (__cplusplus >= 201703L)	defined(__DEPRECATED) && (__cplusplus >= 201703L)	
#ifndef _GLIBCXX_ABI_TAG_CXX11	_GLIBCXX_ABI_TAG_CXX11	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus	__cplusplus	
#ifndef _GLIBCXX_CONSTEXPR	_GLIBCXX_CONSTEXPR	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifndef _GLIBCXX14_CONSTEXPR	_GLIBCXX14_CONSTEXPR	
#if __cplusplus >= 201402L	__cplusplus >= 201402L	
#ifndef _GLIBCXX17_CONSTEXPR	_GLIBCXX17_CONSTEXPR	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#ifndef _GLIBCXX20_CONSTEXPR	_GLIBCXX20_CONSTEXPR	
#if __cplusplus > 201703L	__cplusplus > 201703L	
#ifndef _GLIBCXX17_INLINE	_GLIBCXX17_INLINE	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#ifndef _GLIBCXX_NOEXCEPT	_GLIBCXX_NOEXCEPT	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifndef _GLIBCXX_NOTHROW	_GLIBCXX_NOTHROW	
#ifndef _GLIBCXX_THROW_OR_ABORT	_GLIBCXX_THROW_OR_ABORT	
#if __cpp_exceptions	__cpp_exceptions	
#if __cpp_noexcept_function_type	__cpp_noexcept_function_type	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if ! _GLIBCXX_USE_DUAL_ABI	! _GLIBCXX_USE_DUAL_ABI	
#ifndef _GLIBCXX_USE_CXX11_ABI	_GLIBCXX_USE_CXX11_ABI	
#if _GLIBCXX_USE_CXX11_ABI	_GLIBCXX_USE_CXX11_ABI	
#if _GLIBCXX_INLINE_VERSION	_GLIBCXX_INLINE_VERSION	
#if __cplusplus >= 201402L	__cplusplus >= 201402L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if defined(_GLIBCXX_DEBUG) || defined(_GLIBCXX_PARALLEL) \	defined(_GLIBCXX_DEBUG) || defined(_GLIBCXX_PARALLEL) \	
#if _GLIBCXX_USE_CXX11_ABI	_GLIBCXX_USE_CXX11_ABI	
#ifdef _GLIBCXX_DEBUG	_GLIBCXX_DEBUG	
#ifdef _GLIBCXX_PARALLEL	_GLIBCXX_PARALLEL	
#ifdef _GLIBCXX_PROFILE	_GLIBCXX_PROFILE	
#if defined(_GLIBCXX_DEBUG) && defined(_GLIBCXX_PARALLEL)	defined(_GLIBCXX_DEBUG) && defined(_GLIBCXX_PARALLEL)	
#if defined(_GLIBCXX_PROFILE) && defined(_GLIBCXX_DEBUG)	defined(_GLIBCXX_PROFILE) && defined(_GLIBCXX_DEBUG)	
#if defined(_GLIBCXX_PROFILE) && defined(_GLIBCXX_PARALLEL)	defined(_GLIBCXX_PROFILE) && defined(_GLIBCXX_PARALLEL)	
#if __NO_INLINE__ && !__GXX_WEAK__	__NO_INLINE__ && !__GXX_WEAK__	
#if defined(_GLIBCXX_DEBUG) || defined(_GLIBCXX_PROFILE)	defined(_GLIBCXX_DEBUG) || defined(_GLIBCXX_PROFILE)	
#ifdef _GLIBCXX_PARALLEL	_GLIBCXX_PARALLEL	
#if defined _GLIBCXX_LONG_DOUBLE_COMPAT && defined __LONG_DOUBLE_128__	defined _GLIBCXX_LONG_DOUBLE_COMPAT && defined __LONG_DOUBLE_128__	
#if _GLIBCXX_USE_CXX11_ABI	_GLIBCXX_USE_CXX11_ABI	
#if defined(_GLIBCXX_DEBUG) && !defined(_GLIBCXX_ASSERTIONS)	defined(_GLIBCXX_DEBUG) && !defined(_GLIBCXX_ASSERTIONS)	
#ifdef _GLIBCXX_ASSERTIONS	_GLIBCXX_ASSERTIONS	
#if defined(_GLIBCXX_ASSERTIONS) \	defined(_GLIBCXX_ASSERTIONS) \	
#if defined(_GLIBCXX_ASSERTIONS)	defined(_GLIBCXX_ASSERTIONS)	
#ifndef _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE	_GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE	
#ifndef _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER	_GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER	
#ifndef _GLIBCXX_PSEUDO_VISIBILITY	_GLIBCXX_PSEUDO_VISIBILITY	
#ifndef _GLIBCXX_WEAK_DEFINITION	_GLIBCXX_WEAK_DEFINITION	
#ifndef _GLIBCXX_USE_WEAK_REF	_GLIBCXX_USE_WEAK_REF	
"#if __cplusplus >= 201103L && _GLIBCXX_USE_CXX11_ABI			\"	"__cplusplus >= 201103L && _GLIBCXX_USE_CXX11_ABI			\"	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#elif __cplusplus >= 201103L && __STDCPP_WANT_MATH_SPEC_FUNCS__ != 0	__cplusplus >= 201103L && __STDCPP_WANT_MATH_SPEC_FUNCS__ != 0	
#ifdef __FAST_MATH__	__FAST_MATH__	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifndef _GLIBCXX_USE_C99_MATH	_GLIBCXX_USE_C99_MATH	
#ifndef _GLIBCXX_USE_C99_COMPLEX	_GLIBCXX_USE_C99_COMPLEX	
#ifndef _GLIBCXX_USE_C99_STDIO	_GLIBCXX_USE_C99_STDIO	
#ifndef _GLIBCXX_USE_C99_STDLIB	_GLIBCXX_USE_C99_STDLIB	
#ifndef _GLIBCXX_USE_C99_WCHAR	_GLIBCXX_USE_C99_WCHAR	
#ifndef _GLIBCXX_USE_C99_MATH	_GLIBCXX_USE_C99_MATH	
#ifndef _GLIBCXX_USE_C99_COMPLEX	_GLIBCXX_USE_C99_COMPLEX	
#ifndef _GLIBCXX_USE_C99_STDIO	_GLIBCXX_USE_C99_STDIO	
#ifndef _GLIBCXX_USE_C99_STDLIB	_GLIBCXX_USE_C99_STDLIB	
#ifndef _GLIBCXX_USE_C99_WCHAR	_GLIBCXX_USE_C99_WCHAR	
#ifndef _GLIBCXX_USE_CHAR8_T	_GLIBCXX_USE_CHAR8_T	
#ifdef __cpp_char8_t	__cpp_char8_t	
#ifdef _GLIBCXX_USE_CHAR8_T	_GLIBCXX_USE_CHAR8_T	
#if defined(__FLOAT128__) || defined(__SIZEOF_FLOAT128__)	defined(__FLOAT128__) || defined(__SIZEOF_FLOAT128__)	
#if __GNUC__ >= 7	__GNUC__ >= 7	
#if __GNUC__ >= 9	__GNUC__ >= 9	
#elif defined(__is_identifier) && defined(__has_builtin)	defined(__is_identifier) && defined(__has_builtin)	
#if ! __is_identifier(__has_unique_object_representations)	! __is_identifier(__has_unique_object_representations)	
#if ! __is_identifier(__is_aggregate)	! __is_identifier(__is_aggregate)	
#if __has_builtin(__builtin_launder)	__has_builtin(__builtin_launder)	
#if __has_builtin(__builtin_is_constant_evaluated)	__has_builtin(__builtin_is_constant_evaluated)	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#ifndef _GLIBCXX_USE_TBB_PAR_BACKEND	_GLIBCXX_USE_TBB_PAR_BACKEND	
#if _GLIBCXX_USE_TBB_PAR_BACKEND	_GLIBCXX_USE_TBB_PAR_BACKEND	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if defined (_GLIBCXX_HAVE__ACOSF) && ! defined (_GLIBCXX_HAVE_ACOSF)	defined (_GLIBCXX_HAVE__ACOSF) && ! defined (_GLIBCXX_HAVE_ACOSF)	
#if defined (_GLIBCXX_HAVE__ACOSL) && ! defined (_GLIBCXX_HAVE_ACOSL)	defined (_GLIBCXX_HAVE__ACOSL) && ! defined (_GLIBCXX_HAVE_ACOSL)	
#if defined (_GLIBCXX_HAVE__ASINF) && ! defined (_GLIBCXX_HAVE_ASINF)	defined (_GLIBCXX_HAVE__ASINF) && ! defined (_GLIBCXX_HAVE_ASINF)	
#if defined (_GLIBCXX_HAVE__ASINL) && ! defined (_GLIBCXX_HAVE_ASINL)	defined (_GLIBCXX_HAVE__ASINL) && ! defined (_GLIBCXX_HAVE_ASINL)	
#if defined (_GLIBCXX_HAVE__ATAN2F) && ! defined (_GLIBCXX_HAVE_ATAN2F)	defined (_GLIBCXX_HAVE__ATAN2F) && ! defined (_GLIBCXX_HAVE_ATAN2F)	
#if defined (_GLIBCXX_HAVE__ATAN2L) && ! defined (_GLIBCXX_HAVE_ATAN2L)	defined (_GLIBCXX_HAVE__ATAN2L) && ! defined (_GLIBCXX_HAVE_ATAN2L)	
#if defined (_GLIBCXX_HAVE__ATANF) && ! defined (_GLIBCXX_HAVE_ATANF)	defined (_GLIBCXX_HAVE__ATANF) && ! defined (_GLIBCXX_HAVE_ATANF)	
#if defined (_GLIBCXX_HAVE__ATANL) && ! defined (_GLIBCXX_HAVE_ATANL)	defined (_GLIBCXX_HAVE__ATANL) && ! defined (_GLIBCXX_HAVE_ATANL)	
#if defined (_GLIBCXX_HAVE__CEILF) && ! defined (_GLIBCXX_HAVE_CEILF)	defined (_GLIBCXX_HAVE__CEILF) && ! defined (_GLIBCXX_HAVE_CEILF)	
#if defined (_GLIBCXX_HAVE__CEILL) && ! defined (_GLIBCXX_HAVE_CEILL)	defined (_GLIBCXX_HAVE__CEILL) && ! defined (_GLIBCXX_HAVE_CEILL)	
#if defined (_GLIBCXX_HAVE__COSF) && ! defined (_GLIBCXX_HAVE_COSF)	defined (_GLIBCXX_HAVE__COSF) && ! defined (_GLIBCXX_HAVE_COSF)	
#if defined (_GLIBCXX_HAVE__COSHF) && ! defined (_GLIBCXX_HAVE_COSHF)	defined (_GLIBCXX_HAVE__COSHF) && ! defined (_GLIBCXX_HAVE_COSHF)	
#if defined (_GLIBCXX_HAVE__COSHL) && ! defined (_GLIBCXX_HAVE_COSHL)	defined (_GLIBCXX_HAVE__COSHL) && ! defined (_GLIBCXX_HAVE_COSHL)	
#if defined (_GLIBCXX_HAVE__COSL) && ! defined (_GLIBCXX_HAVE_COSL)	defined (_GLIBCXX_HAVE__COSL) && ! defined (_GLIBCXX_HAVE_COSL)	
#if defined (_GLIBCXX_HAVE__EXPF) && ! defined (_GLIBCXX_HAVE_EXPF)	defined (_GLIBCXX_HAVE__EXPF) && ! defined (_GLIBCXX_HAVE_EXPF)	
#if defined (_GLIBCXX_HAVE__EXPL) && ! defined (_GLIBCXX_HAVE_EXPL)	defined (_GLIBCXX_HAVE__EXPL) && ! defined (_GLIBCXX_HAVE_EXPL)	
#if defined (_GLIBCXX_HAVE__FABSF) && ! defined (_GLIBCXX_HAVE_FABSF)	defined (_GLIBCXX_HAVE__FABSF) && ! defined (_GLIBCXX_HAVE_FABSF)	
#if defined (_GLIBCXX_HAVE__FABSL) && ! defined (_GLIBCXX_HAVE_FABSL)	defined (_GLIBCXX_HAVE__FABSL) && ! defined (_GLIBCXX_HAVE_FABSL)	
#if defined (_GLIBCXX_HAVE__FINITE) && ! defined (_GLIBCXX_HAVE_FINITE)	defined (_GLIBCXX_HAVE__FINITE) && ! defined (_GLIBCXX_HAVE_FINITE)	
#if defined (_GLIBCXX_HAVE__FINITEF) && ! defined (_GLIBCXX_HAVE_FINITEF)	defined (_GLIBCXX_HAVE__FINITEF) && ! defined (_GLIBCXX_HAVE_FINITEF)	
#if defined (_GLIBCXX_HAVE__FINITEL) && ! defined (_GLIBCXX_HAVE_FINITEL)	defined (_GLIBCXX_HAVE__FINITEL) && ! defined (_GLIBCXX_HAVE_FINITEL)	
#if defined (_GLIBCXX_HAVE__FLOORF) && ! defined (_GLIBCXX_HAVE_FLOORF)	defined (_GLIBCXX_HAVE__FLOORF) && ! defined (_GLIBCXX_HAVE_FLOORF)	
#if defined (_GLIBCXX_HAVE__FLOORL) && ! defined (_GLIBCXX_HAVE_FLOORL)	defined (_GLIBCXX_HAVE__FLOORL) && ! defined (_GLIBCXX_HAVE_FLOORL)	
#if defined (_GLIBCXX_HAVE__FMODF) && ! defined (_GLIBCXX_HAVE_FMODF)	defined (_GLIBCXX_HAVE__FMODF) && ! defined (_GLIBCXX_HAVE_FMODF)	
#if defined (_GLIBCXX_HAVE__FMODL) && ! defined (_GLIBCXX_HAVE_FMODL)	defined (_GLIBCXX_HAVE__FMODL) && ! defined (_GLIBCXX_HAVE_FMODL)	
#if defined (_GLIBCXX_HAVE__FPCLASS) && ! defined (_GLIBCXX_HAVE_FPCLASS)	defined (_GLIBCXX_HAVE__FPCLASS) && ! defined (_GLIBCXX_HAVE_FPCLASS)	
#if defined (_GLIBCXX_HAVE__FREXPF) && ! defined (_GLIBCXX_HAVE_FREXPF)	defined (_GLIBCXX_HAVE__FREXPF) && ! defined (_GLIBCXX_HAVE_FREXPF)	
#if defined (_GLIBCXX_HAVE__FREXPL) && ! defined (_GLIBCXX_HAVE_FREXPL)	defined (_GLIBCXX_HAVE__FREXPL) && ! defined (_GLIBCXX_HAVE_FREXPL)	
#if defined (_GLIBCXX_HAVE__HYPOT) && ! defined (_GLIBCXX_HAVE_HYPOT)	defined (_GLIBCXX_HAVE__HYPOT) && ! defined (_GLIBCXX_HAVE_HYPOT)	
#if defined (_GLIBCXX_HAVE__HYPOTF) && ! defined (_GLIBCXX_HAVE_HYPOTF)	defined (_GLIBCXX_HAVE__HYPOTF) && ! defined (_GLIBCXX_HAVE_HYPOTF)	
#if defined (_GLIBCXX_HAVE__HYPOTL) && ! defined (_GLIBCXX_HAVE_HYPOTL)	defined (_GLIBCXX_HAVE__HYPOTL) && ! defined (_GLIBCXX_HAVE_HYPOTL)	
#if defined (_GLIBCXX_HAVE__ISINF) && ! defined (_GLIBCXX_HAVE_ISINF)	defined (_GLIBCXX_HAVE__ISINF) && ! defined (_GLIBCXX_HAVE_ISINF)	
#if defined (_GLIBCXX_HAVE__ISINFF) && ! defined (_GLIBCXX_HAVE_ISINFF)	defined (_GLIBCXX_HAVE__ISINFF) && ! defined (_GLIBCXX_HAVE_ISINFF)	
#if defined (_GLIBCXX_HAVE__ISINFL) && ! defined (_GLIBCXX_HAVE_ISINFL)	defined (_GLIBCXX_HAVE__ISINFL) && ! defined (_GLIBCXX_HAVE_ISINFL)	
#if defined (_GLIBCXX_HAVE__ISNAN) && ! defined (_GLIBCXX_HAVE_ISNAN)	defined (_GLIBCXX_HAVE__ISNAN) && ! defined (_GLIBCXX_HAVE_ISNAN)	
#if defined (_GLIBCXX_HAVE__ISNANF) && ! defined (_GLIBCXX_HAVE_ISNANF)	defined (_GLIBCXX_HAVE__ISNANF) && ! defined (_GLIBCXX_HAVE_ISNANF)	
#if defined (_GLIBCXX_HAVE__ISNANL) && ! defined (_GLIBCXX_HAVE_ISNANL)	defined (_GLIBCXX_HAVE__ISNANL) && ! defined (_GLIBCXX_HAVE_ISNANL)	
#if defined (_GLIBCXX_HAVE__LDEXPF) && ! defined (_GLIBCXX_HAVE_LDEXPF)	defined (_GLIBCXX_HAVE__LDEXPF) && ! defined (_GLIBCXX_HAVE_LDEXPF)	
#if defined (_GLIBCXX_HAVE__LDEXPL) && ! defined (_GLIBCXX_HAVE_LDEXPL)	defined (_GLIBCXX_HAVE__LDEXPL) && ! defined (_GLIBCXX_HAVE_LDEXPL)	
#if defined (_GLIBCXX_HAVE__LOG10F) && ! defined (_GLIBCXX_HAVE_LOG10F)	defined (_GLIBCXX_HAVE__LOG10F) && ! defined (_GLIBCXX_HAVE_LOG10F)	
#if defined (_GLIBCXX_HAVE__LOG10L) && ! defined (_GLIBCXX_HAVE_LOG10L)	defined (_GLIBCXX_HAVE__LOG10L) && ! defined (_GLIBCXX_HAVE_LOG10L)	
#if defined (_GLIBCXX_HAVE__LOGF) && ! defined (_GLIBCXX_HAVE_LOGF)	defined (_GLIBCXX_HAVE__LOGF) && ! defined (_GLIBCXX_HAVE_LOGF)	
#if defined (_GLIBCXX_HAVE__LOGL) && ! defined (_GLIBCXX_HAVE_LOGL)	defined (_GLIBCXX_HAVE__LOGL) && ! defined (_GLIBCXX_HAVE_LOGL)	
#if defined (_GLIBCXX_HAVE__MODF) && ! defined (_GLIBCXX_HAVE_MODF)	defined (_GLIBCXX_HAVE__MODF) && ! defined (_GLIBCXX_HAVE_MODF)	
#if defined (_GLIBCXX_HAVE__MODFF) && ! defined (_GLIBCXX_HAVE_MODFF)	defined (_GLIBCXX_HAVE__MODFF) && ! defined (_GLIBCXX_HAVE_MODFF)	
#if defined (_GLIBCXX_HAVE__MODFL) && ! defined (_GLIBCXX_HAVE_MODFL)	defined (_GLIBCXX_HAVE__MODFL) && ! defined (_GLIBCXX_HAVE_MODFL)	
#if defined (_GLIBCXX_HAVE__POWF) && ! defined (_GLIBCXX_HAVE_POWF)	defined (_GLIBCXX_HAVE__POWF) && ! defined (_GLIBCXX_HAVE_POWF)	
#if defined (_GLIBCXX_HAVE__POWL) && ! defined (_GLIBCXX_HAVE_POWL)	defined (_GLIBCXX_HAVE__POWL) && ! defined (_GLIBCXX_HAVE_POWL)	
#if defined (_GLIBCXX_HAVE__QFPCLASS) && ! defined (_GLIBCXX_HAVE_QFPCLASS)	defined (_GLIBCXX_HAVE__QFPCLASS) && ! defined (_GLIBCXX_HAVE_QFPCLASS)	
#if defined (_GLIBCXX_HAVE__SINCOS) && ! defined (_GLIBCXX_HAVE_SINCOS)	defined (_GLIBCXX_HAVE__SINCOS) && ! defined (_GLIBCXX_HAVE_SINCOS)	
#if defined (_GLIBCXX_HAVE__SINCOSF) && ! defined (_GLIBCXX_HAVE_SINCOSF)	defined (_GLIBCXX_HAVE__SINCOSF) && ! defined (_GLIBCXX_HAVE_SINCOSF)	
#if defined (_GLIBCXX_HAVE__SINCOSL) && ! defined (_GLIBCXX_HAVE_SINCOSL)	defined (_GLIBCXX_HAVE__SINCOSL) && ! defined (_GLIBCXX_HAVE_SINCOSL)	
#if defined (_GLIBCXX_HAVE__SINF) && ! defined (_GLIBCXX_HAVE_SINF)	defined (_GLIBCXX_HAVE__SINF) && ! defined (_GLIBCXX_HAVE_SINF)	
#if defined (_GLIBCXX_HAVE__SINHF) && ! defined (_GLIBCXX_HAVE_SINHF)	defined (_GLIBCXX_HAVE__SINHF) && ! defined (_GLIBCXX_HAVE_SINHF)	
#if defined (_GLIBCXX_HAVE__SINHL) && ! defined (_GLIBCXX_HAVE_SINHL)	defined (_GLIBCXX_HAVE__SINHL) && ! defined (_GLIBCXX_HAVE_SINHL)	
#if defined (_GLIBCXX_HAVE__SINL) && ! defined (_GLIBCXX_HAVE_SINL)	defined (_GLIBCXX_HAVE__SINL) && ! defined (_GLIBCXX_HAVE_SINL)	
#if defined (_GLIBCXX_HAVE__SQRTF) && ! defined (_GLIBCXX_HAVE_SQRTF)	defined (_GLIBCXX_HAVE__SQRTF) && ! defined (_GLIBCXX_HAVE_SQRTF)	
#if defined (_GLIBCXX_HAVE__SQRTL) && ! defined (_GLIBCXX_HAVE_SQRTL)	defined (_GLIBCXX_HAVE__SQRTL) && ! defined (_GLIBCXX_HAVE_SQRTL)	
#if defined (_GLIBCXX_HAVE__STRTOF) && ! defined (_GLIBCXX_HAVE_STRTOF)	defined (_GLIBCXX_HAVE__STRTOF) && ! defined (_GLIBCXX_HAVE_STRTOF)	
#if defined (_GLIBCXX_HAVE__STRTOLD) && ! defined (_GLIBCXX_HAVE_STRTOLD)	defined (_GLIBCXX_HAVE__STRTOLD) && ! defined (_GLIBCXX_HAVE_STRTOLD)	
#if defined (_GLIBCXX_HAVE__TANF) && ! defined (_GLIBCXX_HAVE_TANF)	defined (_GLIBCXX_HAVE__TANF) && ! defined (_GLIBCXX_HAVE_TANF)	
#if defined (_GLIBCXX_HAVE__TANHF) && ! defined (_GLIBCXX_HAVE_TANHF)	defined (_GLIBCXX_HAVE__TANHF) && ! defined (_GLIBCXX_HAVE_TANHF)	
#if defined (_GLIBCXX_HAVE__TANHL) && ! defined (_GLIBCXX_HAVE_TANHL)	defined (_GLIBCXX_HAVE__TANHL) && ! defined (_GLIBCXX_HAVE_TANHL)	
#if defined (_GLIBCXX_HAVE__TANL) && ! defined (_GLIBCXX_HAVE_TANL)	defined (_GLIBCXX_HAVE__TANL) && ! defined (_GLIBCXX_HAVE_TANL)	
#define __SIZEOF_FLOAT128__ 16	__SIZEOF_FLOAT128__	16
#define __GXX_WEAK__ 1	__GXX_WEAK__	1
#define __PTRDIFF_TYPE__ long int	__PTRDIFF_TYPE__	long int
#define __SIZE_TYPE__ long unsigned int	__SIZE_TYPE__	long unsigned int
#define __DEPRECATED 1	__DEPRECATED	1
#include <features.h>	<features.h>	
#define assert_perror(errnum) (!(errnum) ? __ASSERT_VOID_CAST (0) : __assert_perror_fail ((errnum), __FILE__, __LINE__, __ASSERT_FUNCTION))	assert_perror(errnum)	(!(errnum) ? __ASSERT_VOID_CAST (0) : __assert_perror_fail ((errnum), __FILE__, __LINE__, __ASSERT_FUNCTION))
#define _ASSERT_H_DECLS	_ASSERT_H_DECLS	
#define __ASSERT_VOID_CAST static_cast<void>	__ASSERT_VOID_CAST	static_cast<void>
#define _ASSERT_H 1	_ASSERT_H	1
#ifdef _ASSERT_H	_ASSERT_H	
#ifdef __USE_GNU	__USE_GNU	
#if defined __cplusplus && __GNUC_PREREQ (2,95)	defined __cplusplus && __GNUC_PREREQ (2,95)	
#ifdef NDEBUG	NDEBUG	
#ifdef __USE_GNU	__USE_GNU	
#ifndef _ASSERT_H_DECLS	_ASSERT_H_DECLS	
#if defined __cplusplus	defined __cplusplus	
#elif !defined __GNUC__ || defined __STRICT_ANSI__	!defined __GNUC__ || defined __STRICT_ANSI__	
#ifdef __USE_GNU	__USE_GNU	
#if defined __cplusplus ? __GNUC_PREREQ (2, 6) : __GNUC_PREREQ (2, 4)	defined __cplusplus ? __GNUC_PREREQ (2, 6) : __GNUC_PREREQ (2, 4)	
#if defined __STDC_VERSION__ && __STDC_VERSION__ >= 199901L	defined __STDC_VERSION__ && __STDC_VERSION__ >= 199901L	
#if defined __USE_ISOC11 && !defined __cplusplus	defined __USE_ISOC11 && !defined __cplusplus	
#include <assert.h>	<assert.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#pragma GCC system_header	GCC system_header	
#define _EXCEPTION_DEFINES_H 1	_EXCEPTION_DEFINES_H	1
#ifndef _EXCEPTION_DEFINES_H	_EXCEPTION_DEFINES_H	
#if ! __cpp_exceptions	! __cpp_exceptions	
#include <bits/exception_defines.h>	<bits/exception_defines.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#define _FUNCTEXCEPT_H 1	_FUNCTEXCEPT_H	1
#ifndef _FUNCTEXCEPT_H	_FUNCTEXCEPT_H	
#include <bits/c++config.h>	<bits/c++config.h>	
#define __INT_N(TYPE) template<> struct __is_integer<TYPE> { enum { __value = 1 }; typedef __true_type __type; }; template<> struct __is_integer<unsigned TYPE> { enum { __value = 1 }; typedef __true_type __type; };	__INT_N(TYPE)	template<> struct __is_integer<TYPE> { enum { __value = 1 }; typedef __true_type __type; }; template<> struct __is_integer<unsigned TYPE> { enum { __value = 1 }; typedef __true_type __type; };
#undef __INT_N	__INT_N	
#define _CPP_TYPE_TRAITS_H 1	_CPP_TYPE_TRAITS_H	1
#ifndef _CPP_TYPE_TRAITS_H	_CPP_TYPE_TRAITS_H	
#pragma GCC system_header	GCC system_header	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#ifdef _GLIBCXX_USE_CHAR8_T	_GLIBCXX_USE_CHAR8_T	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef __GLIBCXX_TYPE_INT_N_0	__GLIBCXX_TYPE_INT_N_0	
#ifdef __GLIBCXX_TYPE_INT_N_1	__GLIBCXX_TYPE_INT_N_1	
#ifdef __GLIBCXX_TYPE_INT_N_2	__GLIBCXX_TYPE_INT_N_2	
#ifdef __GLIBCXX_TYPE_INT_N_3	__GLIBCXX_TYPE_INT_N_3	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#define __GLIBCXX_TYPE_INT_N_0 __int128	__GLIBCXX_TYPE_INT_N_0	__int128
#include <bits/cpp_type_traits.h>	<bits/cpp_type_traits.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#define _EXT_TYPE_TRAITS 1	_EXT_TYPE_TRAITS	1
#ifndef _EXT_TYPE_TRAITS	_EXT_TYPE_TRAITS	
#pragma GCC system_header	GCC system_header	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#include <ext/type_traits.h>	<ext/type_traits.h>	
#include <bits/cpp_type_traits.h>	<bits/cpp_type_traits.h>	
#undef __glibcxx_max_exponent10	__glibcxx_max_exponent10	
#undef __glibcxx_digits10	__glibcxx_digits10	
#undef __glibcxx_max_digits10	__glibcxx_max_digits10	
#undef __glibcxx_floating	__glibcxx_floating	
#define __glibcxx_max_exponent10(_Tp) __glibcxx_floating(_Tp, __FLT_MAX_10_EXP__, __DBL_MAX_10_EXP__, __LDBL_MAX_10_EXP__)	__glibcxx_max_exponent10(_Tp)	__glibcxx_floating(_Tp, __FLT_MAX_10_EXP__, __DBL_MAX_10_EXP__, __LDBL_MAX_10_EXP__)
#define __glibcxx_digits10(_Tp) __glibcxx_floating(_Tp, __FLT_DIG__, __DBL_DIG__, __LDBL_DIG__)	__glibcxx_digits10(_Tp)	__glibcxx_floating(_Tp, __FLT_DIG__, __DBL_DIG__, __LDBL_DIG__)
#define __glibcxx_max_digits10(_Tp) (2 + __glibcxx_floating(_Tp, __FLT_MANT_DIG__, __DBL_MANT_DIG__, __LDBL_MANT_DIG__) * 643L / 2136)	__glibcxx_max_digits10(_Tp)	(2 + __glibcxx_floating(_Tp, __FLT_MANT_DIG__, __DBL_MANT_DIG__, __LDBL_MANT_DIG__) * 643L / 2136)
#define __glibcxx_floating(_Tp,_Fval,_Dval,_LDval) (std::__are_same<_Tp, float>::__value ? _Fval : std::__are_same<_Tp, double>::__value ? _Dval : _LDval)	__glibcxx_floating(_Tp,_Fval,_Dval,_LDval)	(std::__are_same<_Tp, float>::__value ? _Fval : std::__are_same<_Tp, double>::__value ? _Dval : _LDval)
#undef __glibcxx_max	__glibcxx_max	
#undef __glibcxx_min	__glibcxx_min	
#undef __glibcxx_digits	__glibcxx_digits	
#undef __glibcxx_signed	__glibcxx_signed	
#define __glibcxx_max(_Tp) (__glibcxx_signed(_Tp) ? (((((_Tp)1 << (__glibcxx_digits(_Tp) - 1)) - 1) << 1) + 1) : ~(_Tp)0)	__glibcxx_max(_Tp)	(__glibcxx_signed(_Tp) ? (((((_Tp)1 << (__glibcxx_digits(_Tp) - 1)) - 1) << 1) + 1) : ~(_Tp)0)
#define __glibcxx_min(_Tp) (__glibcxx_signed(_Tp) ? (_Tp)1 << __glibcxx_digits(_Tp) : (_Tp)0)	__glibcxx_min(_Tp)	(__glibcxx_signed(_Tp) ? (_Tp)1 << __glibcxx_digits(_Tp) : (_Tp)0)
#define __glibcxx_digits(_Tp) (sizeof(_Tp) * __CHAR_BIT__ - __glibcxx_signed(_Tp))	__glibcxx_digits(_Tp)	(sizeof(_Tp) * __CHAR_BIT__ - __glibcxx_signed(_Tp))
#define __glibcxx_signed(_Tp) ((_Tp)(-1) < 0)	__glibcxx_signed(_Tp)	((_Tp)(-1) < 0)
#define _EXT_NUMERIC_TRAITS 1	_EXT_NUMERIC_TRAITS	1
#ifndef _EXT_NUMERIC_TRAITS	_EXT_NUMERIC_TRAITS	
#pragma GCC system_header	GCC system_header	
#define __LDBL_MAX_10_EXP__ 4932	__LDBL_MAX_10_EXP__	4932
#define __DBL_MAX_10_EXP__ 308	__DBL_MAX_10_EXP__	308
#define __FLT_MAX_10_EXP__ 38	__FLT_MAX_10_EXP__	38
#define __LDBL_DIG__ 18	__LDBL_DIG__	18
#define __DBL_DIG__ 15	__DBL_DIG__	15
#define __FLT_DIG__ 6	__FLT_DIG__	6
#define __LDBL_MANT_DIG__ 64	__LDBL_MANT_DIG__	64
#define __DBL_MANT_DIG__ 53	__DBL_MANT_DIG__	53
#define __FLT_MANT_DIG__ 24	__FLT_MANT_DIG__	24
#include <bits/c++config.h>	<bits/c++config.h>	
#define __glibcxx_class_requires4(_a,_b,_c,_d,_e)	__glibcxx_class_requires4(_a,_b,_c,_d,_e)	
#define __glibcxx_class_requires3(_a,_b,_c,_d)	__glibcxx_class_requires3(_a,_b,_c,_d)	
#define __glibcxx_class_requires2(_a,_b,_c)	__glibcxx_class_requires2(_a,_b,_c)	
#define __glibcxx_class_requires(_a,_b)	__glibcxx_class_requires(_a,_b)	
#define _CONCEPT_CHECK_H 1	_CONCEPT_CHECK_H	1
#ifndef _CONCEPT_CHECK_H	_CONCEPT_CHECK_H	
#pragma GCC system_header	GCC system_header	
#if !defined(_GLIBCXX_CONCEPT_CHECKS) || !_GLIBCXX_HOSTED	!defined(_GLIBCXX_CONCEPT_CHECKS) || !_GLIBCXX_HOSTED	
#include <bits/c++config.h>	<bits/c++config.h>	
#define __cpp_lib_is_swappable 201603	__cpp_lib_is_swappable	201603
#define _GLIBCXX_HAS_NESTED_TYPE(_NTYPE) template<typename _Tp, typename = __void_t<>> struct __has_ ## _NTYPE : false_type { }; template<typename _Tp> struct __has_ ## _NTYPE<_Tp, __void_t<typename _Tp::_NTYPE>> : true_type { };	_GLIBCXX_HAS_NESTED_TYPE(_NTYPE)	template<typename _Tp, typename = __void_t<>> struct __has_ ## _NTYPE : false_type { }; template<typename _Tp> struct __has_ ## _NTYPE<_Tp, __void_t<typename _Tp::_NTYPE>> : true_type { };
#define __cpp_lib_void_t 201411	__cpp_lib_void_t	201411
#define __cpp_lib_result_of_sfinae 201210	__cpp_lib_result_of_sfinae	201210
#define __cpp_lib_is_null_pointer 201309	__cpp_lib_is_null_pointer	201309
#define _GLIBCXX_TYPE_TRAITS 1	_GLIBCXX_TYPE_TRAITS	1
#ifndef _GLIBCXX_TYPE_TRAITS	_GLIBCXX_TYPE_TRAITS	
#pragma GCC system_header	GCC system_header	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#ifdef _GLIBCXX_USE_CHAR8_T	_GLIBCXX_USE_CHAR8_T	
#if defined(__GLIBCXX_TYPE_INT_N_0)	defined(__GLIBCXX_TYPE_INT_N_0)	
#if defined(__GLIBCXX_TYPE_INT_N_1)	defined(__GLIBCXX_TYPE_INT_N_1)	
#if defined(__GLIBCXX_TYPE_INT_N_2)	defined(__GLIBCXX_TYPE_INT_N_2)	
#if defined(__GLIBCXX_TYPE_INT_N_3)	defined(__GLIBCXX_TYPE_INT_N_3)	
#if !defined(__STRICT_ANSI__) && defined(_GLIBCXX_USE_FLOAT128) && !defined(__CUDACC__)	!defined(__STRICT_ANSI__) && defined(_GLIBCXX_USE_FLOAT128) && !defined(__CUDACC__)	
#if __cplusplus >= 201402L	__cplusplus >= 201402L	
#if __cplusplus > 201703L	__cplusplus > 201703L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if defined(__GLIBCXX_TYPE_INT_N_0)	defined(__GLIBCXX_TYPE_INT_N_0)	
#if defined(__GLIBCXX_TYPE_INT_N_1)	defined(__GLIBCXX_TYPE_INT_N_1)	
#if defined(__GLIBCXX_TYPE_INT_N_2)	defined(__GLIBCXX_TYPE_INT_N_2)	
#if defined(__GLIBCXX_TYPE_INT_N_3)	defined(__GLIBCXX_TYPE_INT_N_3)	
#if defined(_GLIBCXX_USE_WCHAR_T)	defined(_GLIBCXX_USE_WCHAR_T)	
#ifdef _GLIBCXX_USE_CHAR8_T	_GLIBCXX_USE_CHAR8_T	
#if defined(__GLIBCXX_TYPE_INT_N_0)	defined(__GLIBCXX_TYPE_INT_N_0)	
#if defined(__GLIBCXX_TYPE_INT_N_1)	defined(__GLIBCXX_TYPE_INT_N_1)	
#if defined(__GLIBCXX_TYPE_INT_N_2)	defined(__GLIBCXX_TYPE_INT_N_2)	
#if defined(__GLIBCXX_TYPE_INT_N_3)	defined(__GLIBCXX_TYPE_INT_N_3)	
#if defined(_GLIBCXX_USE_WCHAR_T)	defined(_GLIBCXX_USE_WCHAR_T)	
#if defined(_GLIBCXX_USE_CHAR8_T)	defined(_GLIBCXX_USE_CHAR8_T)	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus >= 201402L	__cplusplus >= 201402L	
#if __cplusplus >= 201703L || !defined(__STRICT_ANSI__)	__cplusplus >= 201703L || !defined(__STRICT_ANSI__)	
#if __cplusplus > 201402L || !defined(__STRICT_ANSI__)	__cplusplus > 201402L || !defined(__STRICT_ANSI__)	
#if __cplusplus >= 201402L	__cplusplus >= 201402L	
#if __cplusplus >= 201402L	__cplusplus >= 201402L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#ifdef _GLIBCXX_HAVE_BUILTIN_HAS_UNIQ_OBJ_REP	_GLIBCXX_HAVE_BUILTIN_HAS_UNIQ_OBJ_REP	
#ifdef _GLIBCXX_HAVE_BUILTIN_IS_AGGREGATE	_GLIBCXX_HAVE_BUILTIN_IS_AGGREGATE	
#if __cplusplus > 201703L	__cplusplus > 201703L	
#ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED	_GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED	
#include <type_traits>	<type_traits>	
#include <bits/concept_check.h>	<bits/concept_check.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#define _GLIBCXX_FORWARD(_Tp,__val) std::forward<_Tp>(__val)	_GLIBCXX_FORWARD(_Tp,__val)	std::forward<_Tp>(__val)
#define _MOVE_H 1	_MOVE_H	1
#ifndef _MOVE_H	_MOVE_H	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#include <type_traits>	<type_traits>	
#include <bits/c++config.h>	<bits/c++config.h>	
#define _STL_ITERATOR_BASE_TYPES_H 1	_STL_ITERATOR_BASE_TYPES_H	1
#ifndef _STL_ITERATOR_BASE_TYPES_H	_STL_ITERATOR_BASE_TYPES_H	
#pragma GCC system_header	GCC system_header	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#define __glibcxx_requires_non_empty_range(_First,_Last)	__glibcxx_requires_non_empty_range(_First,_Last)	
#define _GLIBCXX_DEBUG_ONLY(_Statement)	_GLIBCXX_DEBUG_ONLY(_Statement)	
#define _GLIBCXX_DEBUG_ASSERT(_Condition)	_GLIBCXX_DEBUG_ASSERT(_Condition)	
#define _GLIBCXX_DEBUG_ASSERTIONS_H 1	_GLIBCXX_DEBUG_ASSERTIONS_H	1
#ifndef _GLIBCXX_DEBUG_ASSERTIONS_H	_GLIBCXX_DEBUG_ASSERTIONS_H	
#ifndef _GLIBCXX_DEBUG	_GLIBCXX_DEBUG	
#ifndef _GLIBCXX_ASSERTIONS	_GLIBCXX_ASSERTIONS	
#ifdef _GLIBCXX_DEBUG	_GLIBCXX_DEBUG	
#ifdef _GLIBCXX_DEBUG_PEDANTIC	_GLIBCXX_DEBUG_PEDANTIC	
#include <debug/assertions.h>	<debug/assertions.h>	
#include <bits/concept_check.h>	<bits/concept_check.h>	
#define _STL_ITERATOR_BASE_FUNCS_H 1	_STL_ITERATOR_BASE_FUNCS_H	1
#ifndef _STL_ITERATOR_BASE_FUNCS_H	_STL_ITERATOR_BASE_FUNCS_H	
#pragma GCC system_header	GCC system_header	
#if _GLIBCXX_USE_CXX11_ABI	_GLIBCXX_USE_CXX11_ABI	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#include <bits/move.h>	<bits/move.h>	
#define _PTR_TRAITS_H 1	_PTR_TRAITS_H	1
#ifndef _PTR_TRAITS_H	_PTR_TRAITS_H	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus <= 201703L	__cplusplus <= 201703L	
#include <debug/assertions.h>	<debug/assertions.h>	
#define __glibcxx_requires_irreflexive_pred2(_First,_Last,_Pred)	__glibcxx_requires_irreflexive_pred2(_First,_Last,_Pred)	
#define __glibcxx_requires_irreflexive_pred(_First,_Last,_Pred)	__glibcxx_requires_irreflexive_pred(_First,_Last,_Pred)	
#define __glibcxx_requires_irreflexive2(_First,_Last)	__glibcxx_requires_irreflexive2(_First,_Last)	
#define __glibcxx_requires_irreflexive(_First,_Last)	__glibcxx_requires_irreflexive(_First,_Last)	
#define __glibcxx_requires_heap_pred(_First,_Last,_Pred)	__glibcxx_requires_heap_pred(_First,_Last,_Pred)	
#define __glibcxx_requires_heap(_First,_Last)	__glibcxx_requires_heap(_First,_Last)	
#define __glibcxx_requires_partitioned_upper_pred(_First,_Last,_Value,_Pred)	__glibcxx_requires_partitioned_upper_pred(_First,_Last,_Value,_Pred)	
#define __glibcxx_requires_partitioned_lower_pred(_First,_Last,_Value,_Pred)	__glibcxx_requires_partitioned_lower_pred(_First,_Last,_Value,_Pred)	
#define __glibcxx_requires_partitioned_upper(_First,_Last,_Value)	__glibcxx_requires_partitioned_upper(_First,_Last,_Value)	
#define __glibcxx_requires_sorted_set_pred(_First1,_Last1,_First2,_Pred)	__glibcxx_requires_sorted_set_pred(_First1,_Last1,_First2,_Pred)	
#define __glibcxx_requires_sorted_set(_First1,_Last1,_First2)	__glibcxx_requires_sorted_set(_First1,_Last1,_First2)	
#define __glibcxx_requires_sorted_pred(_First,_Last,_Pred)	__glibcxx_requires_sorted_pred(_First,_Last,_Pred)	
#define __glibcxx_requires_sorted(_First,_Last)	__glibcxx_requires_sorted(_First,_Last)	
#define __glibcxx_requires_cond(_Cond,_Msg)	__glibcxx_requires_cond(_Cond,_Msg)	
#define _GLIBCXX_DEBUG_MACRO_SWITCH_H 1	_GLIBCXX_DEBUG_MACRO_SWITCH_H	1
#ifndef _GLIBCXX_DEBUG_MACRO_SWITCH_H	_GLIBCXX_DEBUG_MACRO_SWITCH_H	
#ifndef _GLIBCXX_DEBUG	_GLIBCXX_DEBUG	
#define _GLIBCXX_PREDEFINED_OPS_H 1	_GLIBCXX_PREDEFINED_OPS_H	1
#ifndef _GLIBCXX_PREDEFINED_OPS_H	_GLIBCXX_PREDEFINED_OPS_H	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#include <bits/c++config.h>	<bits/c++config.h>	
#define __EXCEPTION_H 1	__EXCEPTION_H	1
#ifndef __EXCEPTION_H	__EXCEPTION_H	
#pragma GCC system_header	GCC system_header	
#pragma GCC visibility push(default)	GCC visibility push(default)	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#pragma GCC visibility pop	GCC visibility pop	
#define _GXX_NULLPTR_T	_GXX_NULLPTR_T	
#define _GCC_MAX_ALIGN_T	_GCC_MAX_ALIGN_T	
#define offsetof(TYPE,MEMBER) __builtin_offsetof (TYPE, MEMBER)	offsetof(TYPE,MEMBER)	__builtin_offsetof (TYPE, MEMBER)
#undef __need_NULL	__need_NULL	
#define NULL __null	NULL	__null
#undef NULL	NULL	
#undef __need_wchar_t	__need_wchar_t	
#undef __need_size_t	__need_size_t	
#define __size_t	__size_t	
#define _SIZET_	_SIZET_	
#define _GCC_SIZE_T	_GCC_SIZE_T	
#define ___int_size_t_h	___int_size_t_h	
#define _SIZE_T_DECLARED	_SIZE_T_DECLARED	
#define _BSD_SIZE_T_DEFINED_	_BSD_SIZE_T_DEFINED_	
#define _SIZE_T_DEFINED	_SIZE_T_DEFINED	
#define _SIZE_T_DEFINED_	_SIZE_T_DEFINED_	
#define _BSD_SIZE_T_	_BSD_SIZE_T_	
#define _SIZE_T_	_SIZE_T_	
#define __SIZE_T	__SIZE_T	
#define _T_SIZE	_T_SIZE	
#define _T_SIZE_	_T_SIZE_	
#define _SYS_SIZE_T_H	_SYS_SIZE_T_H	
#define _SIZE_T	_SIZE_T	
#define __SIZE_T__	__SIZE_T__	
#define __size_t__	__size_t__	
#undef __need_ptrdiff_t	__need_ptrdiff_t	
#define _PTRDIFF_T_DECLARED	_PTRDIFF_T_DECLARED	
#define _GCC_PTRDIFF_T	_GCC_PTRDIFF_T	
#define ___int_ptrdiff_t_h	___int_ptrdiff_t_h	
#define _BSD_PTRDIFF_T_	_BSD_PTRDIFF_T_	
#define _PTRDIFF_T_	_PTRDIFF_T_	
#define __PTRDIFF_T	__PTRDIFF_T	
#define _T_PTRDIFF	_T_PTRDIFF	
#define _T_PTRDIFF_	_T_PTRDIFF_	
#define _PTRDIFF_T	_PTRDIFF_T	
#define _ANSI_STDDEF_H	_ANSI_STDDEF_H	
#define _STDDEF_H_	_STDDEF_H_	
#define _STDDEF_H	_STDDEF_H	
#if (!defined(_STDDEF_H) && !defined(_STDDEF_H_) && !defined(_ANSI_STDDEF_H) \	(!defined(_STDDEF_H) && !defined(_STDDEF_H_) && !defined(_ANSI_STDDEF_H) \	
"#if (!defined(__need_wchar_t) && !defined(__need_size_t)	\"	"(!defined(__need_wchar_t) && !defined(__need_size_t)	\"	
#ifndef __sys_stdtypes_h	__sys_stdtypes_h	
#if defined(__NetBSD__)	defined(__NetBSD__)	
#if defined (__FreeBSD__)	defined (__FreeBSD__)	
#if defined(__NetBSD__)	defined(__NetBSD__)	
#if !defined(_SIZE_T_) && !defined(_BSD_SIZE_T_)	!defined(_SIZE_T_) && !defined(_BSD_SIZE_T_)	
#if !defined(_PTRDIFF_T_) && !defined(_BSD_PTRDIFF_T_)	!defined(_PTRDIFF_T_) && !defined(_BSD_PTRDIFF_T_)	
#if !defined(_WCHAR_T_) && !defined(_BSD_WCHAR_T_)	!defined(_WCHAR_T_) && !defined(_BSD_WCHAR_T_)	
#ifndef _BSD_WCHAR_T_	_BSD_WCHAR_T_	
#if defined (__need_ptrdiff_t) || defined (_STDDEF_H_)	defined (__need_ptrdiff_t) || defined (_STDDEF_H_)	
#if defined (__need_size_t) || defined (_STDDEF_H_)	defined (__need_size_t) || defined (_STDDEF_H_)	
#if defined (__need_wchar_t) || defined (_STDDEF_H_)	defined (__need_wchar_t) || defined (_STDDEF_H_)	
#if defined (__sequent__) && defined (_PTRDIFF_T_)	defined (__sequent__) && defined (_PTRDIFF_T_)	
#if defined (_TYPE_ptrdiff_t) && (defined (__need_ptrdiff_t) || defined (_STDDEF_H_))	defined (_TYPE_ptrdiff_t) && (defined (__need_ptrdiff_t) || defined (_STDDEF_H_))	
#if defined (_TYPE_size_t) && (defined (__need_size_t) || defined (_STDDEF_H_))	defined (_TYPE_size_t) && (defined (__need_size_t) || defined (_STDDEF_H_))	
#if defined (_TYPE_wchar_t) && (defined (__need_wchar_t) || defined (_STDDEF_H_))	defined (_TYPE_wchar_t) && (defined (__need_wchar_t) || defined (_STDDEF_H_))	
#if defined (_STDDEF_H) || defined (__need_ptrdiff_t)	defined (_STDDEF_H) || defined (__need_ptrdiff_t)	
#ifndef _PTRDIFF_T	_PTRDIFF_T	
#ifndef _T_PTRDIFF_	_T_PTRDIFF_	
#ifndef _T_PTRDIFF	_T_PTRDIFF	
#ifndef __PTRDIFF_T	__PTRDIFF_T	
#ifndef _PTRDIFF_T_	_PTRDIFF_T_	
#ifndef _BSD_PTRDIFF_T_	_BSD_PTRDIFF_T_	
#ifndef ___int_ptrdiff_t_h	___int_ptrdiff_t_h	
#ifndef _GCC_PTRDIFF_T	_GCC_PTRDIFF_T	
#ifndef _PTRDIFF_T_DECLARED	_PTRDIFF_T_DECLARED	
#ifndef __PTRDIFF_TYPE__	__PTRDIFF_TYPE__	
#if defined (_STDDEF_H) || defined (__need_size_t)	defined (_STDDEF_H) || defined (__need_size_t)	
#ifndef __size_t__	__size_t__	
#ifndef __SIZE_T__	__SIZE_T__	
#ifndef _SIZE_T	_SIZE_T	
#ifndef _SYS_SIZE_T_H	_SYS_SIZE_T_H	
#ifndef _T_SIZE_	_T_SIZE_	
#ifndef _T_SIZE	_T_SIZE	
#ifndef __SIZE_T	__SIZE_T	
#ifndef _SIZE_T_	_SIZE_T_	
#ifndef _BSD_SIZE_T_	_BSD_SIZE_T_	
#ifndef _SIZE_T_DEFINED_	_SIZE_T_DEFINED_	
#ifndef _SIZE_T_DEFINED	_SIZE_T_DEFINED	
#ifndef _BSD_SIZE_T_DEFINED_	_BSD_SIZE_T_DEFINED_	
#ifndef _SIZE_T_DECLARED	_SIZE_T_DECLARED	
#ifndef ___int_size_t_h	___int_size_t_h	
#ifndef _GCC_SIZE_T	_GCC_SIZE_T	
#ifndef _SIZET_	_SIZET_	
#ifndef __size_t	__size_t	
#if defined (__FreeBSD__) \	defined (__FreeBSD__) \	
#ifndef __SIZE_TYPE__	__SIZE_TYPE__	
#if !(defined (__GNUG__) && defined (size_t))	!(defined (__GNUG__) && defined (size_t))	
#ifdef __BEOS__	__BEOS__	
#if defined (_STDDEF_H) || defined (__need_wchar_t)	defined (_STDDEF_H) || defined (__need_wchar_t)	
#ifndef __wchar_t__	__wchar_t__	
#ifndef __WCHAR_T__	__WCHAR_T__	
#ifndef _WCHAR_T	_WCHAR_T	
#ifndef _T_WCHAR_	_T_WCHAR_	
#ifndef _T_WCHAR	_T_WCHAR	
#ifndef __WCHAR_T	__WCHAR_T	
#ifndef _WCHAR_T_	_WCHAR_T_	
#ifndef _BSD_WCHAR_T_	_BSD_WCHAR_T_	
#ifndef _BSD_WCHAR_T_DEFINED_	_BSD_WCHAR_T_DEFINED_	
#ifndef _BSD_RUNE_T_DEFINED_	_BSD_RUNE_T_DEFINED_	
#ifndef _WCHAR_T_DECLARED	_WCHAR_T_DECLARED	
#ifndef _WCHAR_T_DEFINED_	_WCHAR_T_DEFINED_	
#ifndef _WCHAR_T_DEFINED	_WCHAR_T_DEFINED	
#ifndef _WCHAR_T_H	_WCHAR_T_H	
#ifndef ___int_wchar_t_h	___int_wchar_t_h	
#ifndef __INT_WCHAR_T_H	__INT_WCHAR_T_H	
#ifndef _GCC_WCHAR_T	_GCC_WCHAR_T	
#ifdef _BSD_WCHAR_T_	_BSD_WCHAR_T_	
#ifdef _BSD_RUNE_T_	_BSD_RUNE_T_	
#if !defined (_ANSI_SOURCE) && !defined (_POSIX_SOURCE)	!defined (_ANSI_SOURCE) && !defined (_POSIX_SOURCE)	
#if defined (__FreeBSD__) && (__FreeBSD__ < 5)	defined (__FreeBSD__) && (__FreeBSD__ < 5)	
#if defined (__FreeBSD__) && (__FreeBSD__ >= 5)	defined (__FreeBSD__) && (__FreeBSD__ >= 5)	
#if !defined (_ANSI_SOURCE) && !defined (_POSIX_SOURCE)	!defined (_ANSI_SOURCE) && !defined (_POSIX_SOURCE)	
#if __BSD_VISIBLE	__BSD_VISIBLE	
#ifndef _RUNE_T_DECLARED	_RUNE_T_DECLARED	
#ifndef __WCHAR_TYPE__	__WCHAR_TYPE__	
#ifndef __cplusplus	__cplusplus	
#if defined (__need_wint_t)	defined (__need_wint_t)	
#ifndef _WINT_T	_WINT_T	
#ifndef __WINT_TYPE__	__WINT_TYPE__	
#if defined(__NetBSD__)	defined(__NetBSD__)	
#ifdef _GCC_PTRDIFF_T_	_GCC_PTRDIFF_T_	
#ifdef _GCC_SIZE_T_	_GCC_SIZE_T_	
#ifdef _GCC_WCHAR_T_	_GCC_WCHAR_T_	
#ifdef _GCC_PTRDIFF_T	_GCC_PTRDIFF_T	
#ifdef _GCC_SIZE_T	_GCC_SIZE_T	
#ifdef _GCC_WCHAR_T	_GCC_WCHAR_T	
#if defined (_STDDEF_H) || defined (__need_NULL)	defined (_STDDEF_H) || defined (__need_NULL)	
#ifdef __GNUG__	__GNUG__	
#ifndef __cplusplus	__cplusplus	
#ifdef _STDDEF_H	_STDDEF_H	
#if (defined (__STDC_VERSION__) && __STDC_VERSION__ >= 201112L) \	(defined (__STDC_VERSION__) && __STDC_VERSION__ >= 201112L) \	
#ifndef _GCC_MAX_ALIGN_T	_GCC_MAX_ALIGN_T	
#ifdef __i386__	__i386__	
#if defined(__cplusplus) && __cplusplus >= 201103L	defined(__cplusplus) && __cplusplus >= 201103L	
#ifndef _GXX_NULLPTR_T	_GXX_NULLPTR_T	
#define _WCHAR_T 1	_WCHAR_T	1
#include <bits/c++config.h>	<bits/c++config.h>	
#include <stddef.h>	<stddef.h>	
#define _GLIBCXX_HAVE_CDTOR_CALLABI 0	_GLIBCXX_HAVE_CDTOR_CALLABI	0
#define _GLIBCXX_CDTOR_CALLABI	_GLIBCXX_CDTOR_CALLABI	
#define _CXXABI_INIT_EXCEPTION_H 1	_CXXABI_INIT_EXCEPTION_H	1
#ifndef _CXXABI_INIT_EXCEPTION_H	_CXXABI_INIT_EXCEPTION_H	
#pragma GCC system_header	GCC system_header	
#pragma GCC visibility push(default)	GCC visibility push(default)	
#ifndef _GLIBCXX_CDTOR_CALLABI	_GLIBCXX_CDTOR_CALLABI	
#ifdef __cplusplus	__cplusplus	
#pragma GCC visibility pop	GCC visibility pop	
#include <bits/c++config.h>	<bits/c++config.h>	
#define _HASH_BYTES_H 1	_HASH_BYTES_H	1
#ifndef _HASH_BYTES_H	_HASH_BYTES_H	
#pragma GCC system_header	GCC system_header	
#include <bits/hash_bytes.h>	<bits/hash_bytes.h>	
#include <bits/exception.h>	<bits/exception.h>	
#define __GXX_MERGED_TYPEINFO_NAMES 0	__GXX_MERGED_TYPEINFO_NAMES	0
#define __GXX_TYPEINFO_EQUALITY_INLINE 1	__GXX_TYPEINFO_EQUALITY_INLINE	1
#define _TYPEINFO	_TYPEINFO	
#ifndef _TYPEINFO	_TYPEINFO	
#pragma GCC system_header	GCC system_header	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#pragma GCC visibility push(default)	GCC visibility push(default)	
#ifndef __GXX_MERGED_TYPEINFO_NAMES	__GXX_MERGED_TYPEINFO_NAMES	
#ifndef __GXX_TYPEINFO_EQUALITY_INLINE	__GXX_TYPEINFO_EQUALITY_INLINE	
#if !__GXX_WEAK__	!__GXX_WEAK__	
#if !__GXX_TYPEINFO_EQUALITY_INLINE	!__GXX_TYPEINFO_EQUALITY_INLINE	
#if !__GXX_MERGED_TYPEINFO_NAMES	!__GXX_MERGED_TYPEINFO_NAMES	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if !__GXX_MERGED_TYPEINFO_NAMES	!__GXX_MERGED_TYPEINFO_NAMES	
#pragma GCC visibility pop	GCC visibility pop	
#ifndef _NEW	_NEW	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cpp_aligned_new	__cpp_aligned_new	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cpp_sized_deallocation	__cpp_sized_deallocation	
#if __cpp_aligned_new	__cpp_aligned_new	
#if __cpp_sized_deallocation	__cpp_sized_deallocation	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#ifdef _GLIBCXX_HAVE_BUILTIN_LAUNDER	_GLIBCXX_HAVE_BUILTIN_LAUNDER	
#if __cplusplus > 201703L	__cplusplus > 201703L	
#if __cpp_impl_destroying_delete	__cpp_impl_destroying_delete	
#define _NEW	_NEW	
#include <new>	<new>	
#include <typeinfo>	<typeinfo>	
#include <bits/cxxabi_init_exception.h>	<bits/cxxabi_init_exception.h>	
#include <bits/exception_defines.h>	<bits/exception_defines.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#define _EXCEPTION_PTR_H	_EXCEPTION_PTR_H	
#ifndef _EXCEPTION_PTR_H	_EXCEPTION_PTR_H	
#pragma GCC visibility push(default)	GCC visibility push(default)	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if (__cplusplus < 201103L) || defined (_GLIBCXX_EH_PTR_COMPAT)	(__cplusplus < 201103L) || defined (_GLIBCXX_EH_PTR_COMPAT)	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_EH_PTR_COMPAT	_GLIBCXX_EH_PTR_COMPAT	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cpp_exceptions && __cpp_rtti && !_GLIBCXX_HAVE_CDTOR_CALLABI	__cpp_exceptions && __cpp_rtti && !_GLIBCXX_HAVE_CDTOR_CALLABI	
#elif __cpp_exceptions	__cpp_exceptions	
#pragma GCC visibility pop	GCC visibility pop	
#define __cpp_rtti 199711	__cpp_rtti	199711
#include <bits/move.h>	<bits/move.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#define _GLIBCXX_NESTED_EXCEPTION_H 1	_GLIBCXX_NESTED_EXCEPTION_H	1
#ifndef _GLIBCXX_NESTED_EXCEPTION_H	_GLIBCXX_NESTED_EXCEPTION_H	
#pragma GCC visibility push(default)	GCC visibility push(default)	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#pragma GCC visibility pop	GCC visibility pop	
#include <bits/nested_exception.h>	<bits/nested_exception.h>	
#include <bits/exception_ptr.h>	<bits/exception_ptr.h>	
#include <bits/exception.h>	<bits/exception.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#define __cpp_lib_uncaught_exceptions 201411L	__cpp_lib_uncaught_exceptions	201411L
#define __EXCEPTION__	__EXCEPTION__	
#ifndef __EXCEPTION__	__EXCEPTION__	
#pragma GCC system_header	GCC system_header	
#pragma GCC visibility push(default)	GCC visibility push(default)	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201703L || !defined(__STRICT_ANSI__)	__cplusplus >= 201703L || !defined(__STRICT_ANSI__)	
#pragma GCC visibility pop	GCC visibility pop	
#if (__cplusplus >= 201103L)	(__cplusplus >= 201103L)	
#include <exception>	<exception>	
#include <bits/c++config.h>	<bits/c++config.h>	
#pragma GCC system_header	GCC system_header	
#pragma GCC visibility push(default)	GCC visibility push(default)	
#pragma GCC visibility pop	GCC visibility pop	
#include <type_traits>	<type_traits>	
#include <bits/move.h>	<bits/move.h>	
#include <bits/functexcept.h>	<bits/functexcept.h>	
#include <new>	<new>	
#include <bits/c++config.h>	<bits/c++config.h>	
#define _NEW_ALLOCATOR_H 1	_NEW_ALLOCATOR_H	1
#ifndef _NEW_ALLOCATOR_H	_NEW_ALLOCATOR_H	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cpp_aligned_new	__cpp_aligned_new	
#if __cpp_aligned_new	__cpp_aligned_new	
#if __PTRDIFF_MAX__ < __SIZE_MAX__	__PTRDIFF_MAX__ < __SIZE_MAX__	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#define __PTRDIFF_MAX__ 0x7fffffffffffffffL	__PTRDIFF_MAX__	0x7fffffffffffffffL
#define __SIZE_MAX__ 0xffffffffffffffffUL	__SIZE_MAX__	0xffffffffffffffffUL
#include <ext/new_allocator.h>	<ext/new_allocator.h>	
#define _GLIBCXX_CXX_ALLOCATOR_H 1	_GLIBCXX_CXX_ALLOCATOR_H	1
#ifndef _GLIBCXX_CXX_ALLOCATOR_H	_GLIBCXX_CXX_ALLOCATOR_H	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if defined(__SANITIZE_ADDRESS__) && !defined(_GLIBCXX_SANITIZE_STD_ALLOCATOR)	defined(__SANITIZE_ADDRESS__) && !defined(_GLIBCXX_SANITIZE_STD_ALLOCATOR)	
#include <bits/c++config.h>	<bits/c++config.h>	
#define _MEMORYFWD_H 1	_MEMORYFWD_H	1
#ifndef _MEMORYFWD_H	_MEMORYFWD_H	
#pragma GCC system_header	GCC system_header	
#include <type_traits>	<type_traits>	
#include <bits/memoryfwd.h>	<bits/memoryfwd.h>	
#include <bits/c++allocator.h>	<bits/c++allocator.h>	
#undef __allocator_base	__allocator_base	
#define __cpp_lib_allocator_is_always_equal 201411	__cpp_lib_allocator_is_always_equal	201411
#define __cpp_lib_incomplete_container_elements 201505	__cpp_lib_incomplete_container_elements	201505
#define _ALLOCATOR_H 1	_ALLOCATOR_H	1
#ifndef _ALLOCATOR_H	_ALLOCATOR_H	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if _GLIBCXX_EXTERN_TEMPLATE	_GLIBCXX_EXTERN_TEMPLATE	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cpp_exceptions	__cpp_exceptions	
#include <ext/numeric_traits.h>	<ext/numeric_traits.h>	
#include <bits/ptr_traits.h>	<bits/ptr_traits.h>	
#include <bits/memoryfwd.h>	<bits/memoryfwd.h>	
#define __cpp_lib_allocator_traits_is_always_equal 201411	__cpp_lib_allocator_traits_is_always_equal	201411
#define _ALLOC_TRAITS_H 1	_ALLOC_TRAITS_H	1
#ifndef _ALLOC_TRAITS_H	_ALLOC_TRAITS_H	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#include <bits/alloc_traits.h>	<bits/alloc_traits.h>	
#include <bits/move.h>	<bits/move.h>	
#define _EXT_ALLOC_TRAITS_H 1	_EXT_ALLOC_TRAITS_H	1
#ifndef _EXT_ALLOC_TRAITS_H	_EXT_ALLOC_TRAITS_H	
#pragma GCC system_header	GCC system_header	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#include <ext/alloc_traits.h>	<ext/alloc_traits.h>	
#include <bits/move.h>	<bits/move.h>	
#include <new>	<new>	
#define _STL_CONSTRUCT_H 1	_STL_CONSTRUCT_H	1
#ifndef _STL_CONSTRUCT_H	_STL_CONSTRUCT_H	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#include <type_traits>	<type_traits>	
#define _STL_UNINITIALIZED_H 1	_STL_UNINITIALIZED_H	1
#ifndef _STL_UNINITIALIZED_H	_STL_UNINITIALIZED_H	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#include <bits/stl_construct.h>	<bits/stl_construct.h>	
#include <bits/stl_algobase.h>	<bits/stl_algobase.h>	
#define _STL_TEMPBUF_H 1	_STL_TEMPBUF_H	1
#ifndef _STL_TEMPBUF_H	_STL_TEMPBUF_H	
#define _STL_RAW_STORAGE_ITERATOR_H 1	_STL_RAW_STORAGE_ITERATOR_H	1
#ifndef _STL_RAW_STORAGE_ITERATOR_H	_STL_RAW_STORAGE_ITERATOR_H	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#include <bits/memoryfwd.h>	<bits/memoryfwd.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#define _STRINGFWD_H 1	_STRINGFWD_H	1
#ifndef _STRINGFWD_H	_STRINGFWD_H	
#pragma GCC system_header	GCC system_header	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#ifdef _GLIBCXX_USE_CHAR8_T	_GLIBCXX_USE_CHAR8_T	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#ifdef _GLIBCXX_USE_CHAR8_T	_GLIBCXX_USE_CHAR8_T	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#include <features.h>	<features.h>	
#define __GLIBC_USE_IEC_60559_TYPES_EXT 1	__GLIBC_USE_IEC_60559_TYPES_EXT	1
#undef __GLIBC_USE_IEC_60559_TYPES_EXT	__GLIBC_USE_IEC_60559_TYPES_EXT	
#define __GLIBC_USE_IEC_60559_FUNCS_EXT 1	__GLIBC_USE_IEC_60559_FUNCS_EXT	1
#undef __GLIBC_USE_IEC_60559_FUNCS_EXT	__GLIBC_USE_IEC_60559_FUNCS_EXT	
#define __GLIBC_USE_IEC_60559_BFP_EXT 1	__GLIBC_USE_IEC_60559_BFP_EXT	1
#undef __GLIBC_USE_IEC_60559_BFP_EXT	__GLIBC_USE_IEC_60559_BFP_EXT	
#define __GLIBC_USE_LIB_EXT2 1	__GLIBC_USE_LIB_EXT2	1
#undef __GLIBC_USE_LIB_EXT2	__GLIBC_USE_LIB_EXT2	
#undef __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION	__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION	
#ifndef __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION	__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION	
"#if (defined __USE_GNU							\"	"(defined __USE_GNU							\"	
#if defined __USE_GNU || defined __STDC_WANT_IEC_60559_BFP_EXT__	defined __USE_GNU || defined __STDC_WANT_IEC_60559_BFP_EXT__	
#if defined __USE_GNU || defined __STDC_WANT_IEC_60559_FUNCS_EXT__	defined __USE_GNU || defined __STDC_WANT_IEC_60559_FUNCS_EXT__	
#if defined __USE_GNU || defined __STDC_WANT_IEC_60559_TYPES_EXT__	defined __USE_GNU || defined __STDC_WANT_IEC_60559_TYPES_EXT__	
#define __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION	__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION	
#include <bits/long-double.h>	<bits/long-double.h>	
#include <features.h>	<features.h>	
#define __CFLOAT64X _Complex long double	__CFLOAT64X	_Complex long double
#define __CFLOAT32X _Complex double	__CFLOAT32X	_Complex double
#define __CFLOAT64 _Complex double	__CFLOAT64	_Complex double
#define __CFLOAT32 _Complex float	__CFLOAT32	_Complex float
#define __f64x(x) x ## l	__f64x(x)	x ## l
#define __f32x(x) x	__f32x(x)	x
#define __f64(x) x	__f64(x)	x
#define __f32(x) x ## f	__f32(x)	x ## f
#define __HAVE_FLOATN_NOT_TYPEDEF 0	__HAVE_FLOATN_NOT_TYPEDEF	0
#define __HAVE_FLOAT128_UNLIKE_LDBL (__HAVE_DISTINCT_FLOAT128 && __LDBL_MANT_DIG__ != 113)	__HAVE_FLOAT128_UNLIKE_LDBL	(__HAVE_DISTINCT_FLOAT128 && __LDBL_MANT_DIG__ != 113)
#define __HAVE_DISTINCT_FLOAT128X __HAVE_FLOAT128X	__HAVE_DISTINCT_FLOAT128X	__HAVE_FLOAT128X
#define __HAVE_DISTINCT_FLOAT64X 0	__HAVE_DISTINCT_FLOAT64X	0
#define __HAVE_DISTINCT_FLOAT32X 0	__HAVE_DISTINCT_FLOAT32X	0
#define __HAVE_DISTINCT_FLOAT64 0	__HAVE_DISTINCT_FLOAT64	0
#define __HAVE_DISTINCT_FLOAT32 0	__HAVE_DISTINCT_FLOAT32	0
#define __HAVE_DISTINCT_FLOAT16 __HAVE_FLOAT16	__HAVE_DISTINCT_FLOAT16	__HAVE_FLOAT16
#define __HAVE_FLOAT128X 0	__HAVE_FLOAT128X	0
#define __HAVE_FLOAT32X 1	__HAVE_FLOAT32X	1
#define __HAVE_FLOAT64 1	__HAVE_FLOAT64	1
#define __HAVE_FLOAT32 1	__HAVE_FLOAT32	1
#define __HAVE_FLOAT16 0	__HAVE_FLOAT16	0
#define _BITS_FLOATN_COMMON_H	_BITS_FLOATN_COMMON_H	
#ifndef _BITS_FLOATN_COMMON_H	_BITS_FLOATN_COMMON_H	
#if __GNUC_PREREQ (7, 0) && !defined __cplusplus	__GNUC_PREREQ (7, 0) && !defined __cplusplus	
#ifndef __ASSEMBLER__	__ASSEMBLER__	
#if __HAVE_FLOAT16	__HAVE_FLOAT16	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if __HAVE_FLOAT32	__HAVE_FLOAT32	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if __HAVE_FLOAT64	__HAVE_FLOAT64	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#ifdef __NO_LONG_DOUBLE_MATH	__NO_LONG_DOUBLE_MATH	
#if __HAVE_FLOAT32X	__HAVE_FLOAT32X	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if __HAVE_FLOAT64X	__HAVE_FLOAT64X	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if __HAVE_FLOAT64X_LONG_DOUBLE	__HAVE_FLOAT64X_LONG_DOUBLE	
#if __HAVE_FLOAT128X	__HAVE_FLOAT128X	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if __HAVE_FLOAT16	__HAVE_FLOAT16	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if __HAVE_FLOAT32	__HAVE_FLOAT32	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if __HAVE_FLOAT64	__HAVE_FLOAT64	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#ifdef __NO_LONG_DOUBLE_MATH	__NO_LONG_DOUBLE_MATH	
#if __HAVE_FLOAT32X	__HAVE_FLOAT32X	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if __HAVE_FLOAT64X	__HAVE_FLOAT64X	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if __HAVE_FLOAT64X_LONG_DOUBLE	__HAVE_FLOAT64X_LONG_DOUBLE	
#if __HAVE_FLOAT128X	__HAVE_FLOAT128X	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if __HAVE_FLOAT16	__HAVE_FLOAT16	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if !__GNUC_PREREQ (7, 0)	!__GNUC_PREREQ (7, 0)	
#if __HAVE_FLOAT32	__HAVE_FLOAT32	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if !__GNUC_PREREQ (7, 0)	!__GNUC_PREREQ (7, 0)	
#if __HAVE_FLOAT64	__HAVE_FLOAT64	
#ifdef __NO_LONG_DOUBLE_MATH	__NO_LONG_DOUBLE_MATH	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if !__GNUC_PREREQ (7, 0)	!__GNUC_PREREQ (7, 0)	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if !__GNUC_PREREQ (7, 0)	!__GNUC_PREREQ (7, 0)	
#if __HAVE_FLOAT32X	__HAVE_FLOAT32X	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if !__GNUC_PREREQ (7, 0)	!__GNUC_PREREQ (7, 0)	
#if __HAVE_FLOAT64X	__HAVE_FLOAT64X	
#if __HAVE_FLOAT64X_LONG_DOUBLE	__HAVE_FLOAT64X_LONG_DOUBLE	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if !__GNUC_PREREQ (7, 0)	!__GNUC_PREREQ (7, 0)	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if !__GNUC_PREREQ (7, 0)	!__GNUC_PREREQ (7, 0)	
#if __HAVE_FLOAT128X	__HAVE_FLOAT128X	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if !__GNUC_PREREQ (7, 0)	!__GNUC_PREREQ (7, 0)	
#define __HAVE_FLOAT64X_LONG_DOUBLE 1	__HAVE_FLOAT64X_LONG_DOUBLE	1
#define __HAVE_FLOAT64X 1	__HAVE_FLOAT64X	1
#include <bits/floatn-common.h>	<bits/floatn-common.h>	
#include <features.h>	<features.h>	
#define __CFLOAT128 __cfloat128	__CFLOAT128	__cfloat128
#define __f128(x) x ## q	__f128(x)	x ## q
#define __HAVE_DISTINCT_FLOAT128 1	__HAVE_DISTINCT_FLOAT128	1
#define __HAVE_FLOAT128 1	__HAVE_FLOAT128	1
#define _BITS_FLOATN_H	_BITS_FLOATN_H	
#ifndef _BITS_FLOATN_H	_BITS_FLOATN_H	
"#if (defined __x86_64__							\"	"(defined __x86_64__							\"	
#if __HAVE_FLOAT128	__HAVE_FLOAT128	
#ifndef __ASSEMBLER__	__ASSEMBLER__	
#if __HAVE_FLOAT128	__HAVE_FLOAT128	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if __HAVE_FLOAT128	__HAVE_FLOAT128	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if __HAVE_FLOAT128	__HAVE_FLOAT128	
#if !__GNUC_PREREQ (7, 0) || defined __cplusplus	!__GNUC_PREREQ (7, 0) || defined __cplusplus	
#if !__GNUC_PREREQ (7, 0)	!__GNUC_PREREQ (7, 0)	
#if !__GNUC_PREREQ (7, 0)	!__GNUC_PREREQ (7, 0)	
#if !__GNUC_PREREQ (6, 0)	!__GNUC_PREREQ (6, 0)	
#define __need_NULL	__need_NULL	
#define __need_wchar_t	__need_wchar_t	
#define __need_size_t	__need_size_t	
#define __GNUC_VA_LIST	__GNUC_VA_LIST	
#undef __need___va_list	__need___va_list	
#ifndef _STDARG_H	_STDARG_H	
#ifndef _ANSI_STDARG_H_	_ANSI_STDARG_H_	
#ifndef __need___va_list	__need___va_list	
#ifndef __GNUC_VA_LIST	__GNUC_VA_LIST	
#ifdef _STDARG_H	_STDARG_H	
#if !defined(__STRICT_ANSI__) || __STDC_VERSION__ + 0 >= 199900L \	!defined(__STRICT_ANSI__) || __STDC_VERSION__ + 0 >= 199900L \	
#ifdef _BSD_VA_LIST	_BSD_VA_LIST	
#if defined(__svr4__) || (defined(_SCO_DS) && !defined(__VA_LIST))	defined(__svr4__) || (defined(_SCO_DS) && !defined(__VA_LIST))	
#ifndef _VA_LIST_	_VA_LIST_	
#ifdef __i860__	__i860__	
#ifndef _VA_LIST	_VA_LIST	
#ifdef _SCO_DS	_SCO_DS	
#if !defined (_VA_LIST_) || defined (__BSD_NET2__) || defined (____386BSD____) || defined (__bsdi__) || defined (__sequent__) || defined (__FreeBSD__) || defined(WINNT)	!defined (_VA_LIST_) || defined (__BSD_NET2__) || defined (____386BSD____) || defined (__bsdi__) || defined (__sequent__) || defined (__FreeBSD__) || defined(WINNT)	
#ifndef _VA_LIST_DEFINED	_VA_LIST_DEFINED	
#ifndef _VA_LIST	_VA_LIST	
#ifndef _VA_LIST_T_H	_VA_LIST_T_H	
#ifndef __va_list__	__va_list__	
#if !(defined (__BSD_NET2__) || defined (____386BSD____) || defined (__bsdi__) || defined (__sequent__) || defined (__FreeBSD__))	!(defined (__BSD_NET2__) || defined (____386BSD____) || defined (__bsdi__) || defined (__sequent__) || defined (__FreeBSD__))	
#ifndef _VA_LIST	_VA_LIST	
#ifndef _VA_LIST_DEFINED	_VA_LIST_DEFINED	
#ifndef _VA_LIST_T_H	_VA_LIST_T_H	
#ifndef __va_list__	__va_list__	
#define __need___va_list	__need___va_list	
#define __WCHAR_MIN __WCHAR_MIN__	__WCHAR_MIN	__WCHAR_MIN__
#define __WCHAR_MAX __WCHAR_MAX__	__WCHAR_MAX	__WCHAR_MAX__
#define _BITS_WCHAR_H 1	_BITS_WCHAR_H	1
#ifndef _BITS_WCHAR_H	_BITS_WCHAR_H	
#ifdef __WCHAR_MAX__	__WCHAR_MAX__	
#elif L'\0' - 1 > 0	L'\0' - 1 > 0	
#ifdef __WCHAR_MIN__	__WCHAR_MIN__	
#elif L'\0' - 1 > 0	L'\0' - 1 > 0	
#define __WCHAR_MIN__ (-__WCHAR_MAX__ - 1)	__WCHAR_MIN__	(-__WCHAR_MAX__ - 1)
#define __WCHAR_MAX__ 0x7fffffff	__WCHAR_MAX__	0x7fffffff
#define _WINT_T 1	_WINT_T	1
#define __wint_t_defined 1	__wint_t_defined	1
#ifndef __wint_t_defined	__wint_t_defined	
#ifndef _WINT_T	_WINT_T	
#ifndef __WINT_TYPE__	__WINT_TYPE__	
#define __WINT_TYPE__ unsigned int	__WINT_TYPE__	unsigned int
#define ____mbstate_t_defined 1	____mbstate_t_defined	1
#ifndef ____mbstate_t_defined	____mbstate_t_defined	
#ifndef __WINT_TYPE__	__WINT_TYPE__	
#include <bits/types/__mbstate_t.h>	<bits/types/__mbstate_t.h>	
#define __mbstate_t_defined 1	__mbstate_t_defined	1
#ifndef __mbstate_t_defined	__mbstate_t_defined	
#define ____FILE_defined 1	____FILE_defined	1
#ifndef ____FILE_defined	____FILE_defined	
#define __FILE_defined 1	__FILE_defined	1
#ifndef __FILE_defined	__FILE_defined	
#define _BITS_TYPES___LOCALE_T_H 1	_BITS_TYPES___LOCALE_T_H	1
#ifndef _BITS_TYPES___LOCALE_T_H	_BITS_TYPES___LOCALE_T_H	
#include <bits/types/__locale_t.h>	<bits/types/__locale_t.h>	
#define _BITS_TYPES_LOCALE_T_H 1	_BITS_TYPES_LOCALE_T_H	1
#ifndef _BITS_TYPES_LOCALE_T_H	_BITS_TYPES_LOCALE_T_H	
#define __WCHAR_MB_LEN_MAX 16	__WCHAR_MB_LEN_MAX	16
#ifndef _WCHAR_H	_WCHAR_H	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __va_arg_pack	__va_arg_pack	
#elif !defined __cplusplus	!defined __cplusplus	
#if __USE_FORTIFY_LEVEL > 1	__USE_FORTIFY_LEVEL > 1	
#ifdef __va_arg_pack	__va_arg_pack	
#elif !defined __cplusplus	!defined __cplusplus	
#ifdef __USE_GNU	__USE_GNU	
#if defined MB_LEN_MAX && MB_LEN_MAX != __WCHAR_MB_LEN_MAX	defined MB_LEN_MAX && MB_LEN_MAX != __WCHAR_MB_LEN_MAX	
#ifdef __USE_GNU	__USE_GNU	
#define __USER_LABEL_PREFIX__	__USER_LABEL_PREFIX__	
#define _WCHAR_H 1	_WCHAR_H	1
#include <bits/wchar2.h>	<bits/wchar2.h>	
#include <bits/types/locale_t.h>	<bits/types/locale_t.h>	
#include <bits/types/FILE.h>	<bits/types/FILE.h>	
#include <bits/types/__FILE.h>	<bits/types/__FILE.h>	
#include <bits/types/mbstate_t.h>	<bits/types/mbstate_t.h>	
#include <bits/types/wint_t.h>	<bits/types/wint_t.h>	
#include <bits/wchar.h>	<bits/wchar.h>	
#include <stdarg.h>	<stdarg.h>	
#include <stddef.h>	<stddef.h>	
#include <bits/floatn.h>	<bits/floatn.h>	
#include <bits/libc-header-start.h>	<bits/libc-header-start.h>	
#define WEOF (0xffffffffu)	WEOF	(0xffffffffu)
#define WCHAR_MAX __WCHAR_MAX	WCHAR_MAX	__WCHAR_MAX
#define WCHAR_MIN __WCHAR_MIN	WCHAR_MIN	__WCHAR_MIN
#define __CORRECT_ISO_CPP_WCHAR_H_PROTO	__CORRECT_ISO_CPP_WCHAR_H_PROTO	
#ifndef _WCHAR_H	_WCHAR_H	
#if defined __USE_UNIX98 || defined __USE_XOPEN2K	defined __USE_UNIX98 || defined __USE_XOPEN2K	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
#if defined __cplusplus && __GNUC_PREREQ (4, 4)	defined __cplusplus && __GNUC_PREREQ (4, 4)	
#ifndef WCHAR_MIN	WCHAR_MIN	
#ifndef WEOF	WEOF	
#if (defined __USE_XOPEN && !defined __USE_GNU \	(defined __USE_XOPEN && !defined __USE_GNU \	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
#ifdef __CORRECT_ISO_CPP_WCHAR_H_PROTO	__CORRECT_ISO_CPP_WCHAR_H_PROTO	
#ifdef __CORRECT_ISO_CPP_WCHAR_H_PROTO	__CORRECT_ISO_CPP_WCHAR_H_PROTO	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __CORRECT_ISO_CPP_WCHAR_H_PROTO	__CORRECT_ISO_CPP_WCHAR_H_PROTO	
#ifdef __CORRECT_ISO_CPP_WCHAR_H_PROTO	__CORRECT_ISO_CPP_WCHAR_H_PROTO	
#ifdef __USE_XOPEN	__USE_XOPEN	
#ifdef __CORRECT_ISO_CPP_WCHAR_H_PROTO	__CORRECT_ISO_CPP_WCHAR_H_PROTO	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
#ifdef __CORRECT_ISO_CPP_WCHAR_H_PROTO	__CORRECT_ISO_CPP_WCHAR_H_PROTO	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_EXTERN_INLINES	__USE_EXTERN_INLINES	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
#ifdef __USE_XOPEN	__USE_XOPEN	
#ifdef __USE_ISOC99	__USE_ISOC99	
#if __HAVE_FLOAT16 && defined __USE_GNU	__HAVE_FLOAT16 && defined __USE_GNU	
#if __HAVE_FLOAT32 && defined __USE_GNU	__HAVE_FLOAT32 && defined __USE_GNU	
#if __HAVE_FLOAT64 && defined __USE_GNU	__HAVE_FLOAT64 && defined __USE_GNU	
#if __HAVE_FLOAT128 && defined __USE_GNU	__HAVE_FLOAT128 && defined __USE_GNU	
#if __HAVE_FLOAT32X && defined __USE_GNU	__HAVE_FLOAT32X && defined __USE_GNU	
#if __HAVE_FLOAT64X && defined __USE_GNU	__HAVE_FLOAT64X && defined __USE_GNU	
#if __HAVE_FLOAT128X && defined __USE_GNU	__HAVE_FLOAT128X && defined __USE_GNU	
#ifdef __USE_ISOC99	__USE_ISOC99	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_GNU	__USE_GNU	
#if __HAVE_FLOAT16	__HAVE_FLOAT16	
#if __HAVE_FLOAT32	__HAVE_FLOAT32	
#if __HAVE_FLOAT64	__HAVE_FLOAT64	
#if __HAVE_FLOAT128	__HAVE_FLOAT128	
#if __HAVE_FLOAT32X	__HAVE_FLOAT32X	
#if __HAVE_FLOAT64X	__HAVE_FLOAT64X	
#if __HAVE_FLOAT128X	__HAVE_FLOAT128X	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
#if defined __USE_XOPEN2K8 || __GLIBC_USE (LIB_EXT2)	defined __USE_XOPEN2K8 || __GLIBC_USE (LIB_EXT2)	
#if defined __USE_ISOC95 || defined __USE_UNIX98	defined __USE_ISOC95 || defined __USE_UNIX98	
#if !__GLIBC_USE (DEPRECATED_SCANF) && !defined __LDBL_COMPAT	!__GLIBC_USE (DEPRECATED_SCANF) && !defined __LDBL_COMPAT	
#ifdef __REDIRECT	__REDIRECT	
#ifdef __USE_ISOC99	__USE_ISOC99	
#if !defined __USE_GNU \	!defined __USE_GNU \	
#ifdef __REDIRECT	__REDIRECT	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_GNU	__USE_GNU	
#if __USE_FORTIFY_LEVEL > 0 && defined __fortify_function	__USE_FORTIFY_LEVEL > 0 && defined __fortify_function	
#ifdef __LDBL_COMPAT	__LDBL_COMPAT	
#include <wchar.h>	<wchar.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#undef wcstoull	wcstoull	
#undef wcstoll	wcstoll	
#undef wcstold	wcstold	
#undef wscanf	wscanf	
#undef wprintf	wprintf	
#undef wmemset	wmemset	
#undef wmemmove	wmemmove	
#undef wmemcpy	wmemcpy	
#undef wmemcmp	wmemcmp	
#undef wmemchr	wmemchr	
#undef wctob	wctob	
#undef wcsxfrm	wcsxfrm	
#undef wcstoul	wcstoul	
#undef wcstol	wcstol	
#undef wcstok	wcstok	
#undef wcstof	wcstof	
#undef wcstod	wcstod	
#undef wcsstr	wcsstr	
#undef wcsspn	wcsspn	
#undef wcsrtombs	wcsrtombs	
#undef wcsrchr	wcsrchr	
#undef wcspbrk	wcspbrk	
#undef wcsncpy	wcsncpy	
#undef wcsncmp	wcsncmp	
#undef wcsncat	wcsncat	
#undef wcslen	wcslen	
#undef wcsftime	wcsftime	
#undef wcscspn	wcscspn	
#undef wcscpy	wcscpy	
#undef wcscoll	wcscoll	
#undef wcscmp	wcscmp	
#undef wcschr	wcschr	
#undef wcscat	wcscat	
#undef wcrtomb	wcrtomb	
#undef vwscanf	vwscanf	
#undef vwprintf	vwprintf	
#undef vswscanf	vswscanf	
#undef vswprintf	vswprintf	
#undef vfwscanf	vfwscanf	
#undef vfwprintf	vfwprintf	
#undef ungetwc	ungetwc	
#undef swscanf	swscanf	
#undef swprintf	swprintf	
#undef putwchar	putwchar	
#undef putwc	putwc	
#undef mbsrtowcs	mbsrtowcs	
#undef mbsinit	mbsinit	
#undef mbrtowc	mbrtowc	
#undef mbrlen	mbrlen	
#undef getwchar	getwchar	
#undef getwc	getwc	
#undef fwscanf	fwscanf	
#undef fwprintf	fwprintf	
#undef fwide	fwide	
#undef fputws	fputws	
#undef fputwc	fputwc	
#undef fgetws	fgetws	
#undef fgetwc	fgetwc	
#undef btowc	btowc	
#define _GLIBCXX_CWCHAR 1	_GLIBCXX_CWCHAR	1
#pragma GCC system_header	GCC system_header	
#if _GLIBCXX_HAVE_WCHAR_H	_GLIBCXX_HAVE_WCHAR_H	
#ifndef _GLIBCXX_CWCHAR	_GLIBCXX_CWCHAR	
#ifndef _GLIBCXX_HAVE_MBSTATE_T	_GLIBCXX_HAVE_MBSTATE_T	
#if _GLIBCXX_HAVE_VFWSCANF	_GLIBCXX_HAVE_VFWSCANF	
#if _GLIBCXX_HAVE_VSWSCANF	_GLIBCXX_HAVE_VSWSCANF	
#if _GLIBCXX_HAVE_VWSCANF	_GLIBCXX_HAVE_VWSCANF	
#if _GLIBCXX_HAVE_WCSTOF	_GLIBCXX_HAVE_WCSTOF	
#if _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#ifndef _GLIBCXX_HAVE_BROKEN_VSWPRINTF	_GLIBCXX_HAVE_BROKEN_VSWPRINTF	
#if _GLIBCXX_HAVE_VFWSCANF	_GLIBCXX_HAVE_VFWSCANF	
#ifndef _GLIBCXX_HAVE_BROKEN_VSWPRINTF	_GLIBCXX_HAVE_BROKEN_VSWPRINTF	
#if _GLIBCXX_HAVE_VSWSCANF	_GLIBCXX_HAVE_VSWSCANF	
#if _GLIBCXX_HAVE_VWSCANF	_GLIBCXX_HAVE_VWSCANF	
#if _GLIBCXX_HAVE_WCSTOF	_GLIBCXX_HAVE_WCSTOF	
#ifndef __CORRECT_ISO_CPP_WCHAR_H_PROTO	__CORRECT_ISO_CPP_WCHAR_H_PROTO	
#if _GLIBCXX_USE_C99_WCHAR	_GLIBCXX_USE_C99_WCHAR	
#if _GLIBCXX_USE_C99_CHECK || _GLIBCXX_USE_C99_DYNAMIC	_GLIBCXX_USE_C99_CHECK || _GLIBCXX_USE_C99_DYNAMIC	
#if !_GLIBCXX_USE_C99_DYNAMIC	!_GLIBCXX_USE_C99_DYNAMIC	
#if _GLIBCXX_USE_C99_LONG_LONG_CHECK || _GLIBCXX_USE_C99_LONG_LONG_DYNAMIC	_GLIBCXX_USE_C99_LONG_LONG_CHECK || _GLIBCXX_USE_C99_LONG_LONG_DYNAMIC	
#if !_GLIBCXX_USE_C99_LONG_LONG_DYNAMIC	!_GLIBCXX_USE_C99_LONG_LONG_DYNAMIC	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#if _GLIBCXX_HAVE_WCSTOF	_GLIBCXX_HAVE_WCSTOF	
#if _GLIBCXX_HAVE_VFWSCANF	_GLIBCXX_HAVE_VFWSCANF	
#if _GLIBCXX_HAVE_VSWSCANF	_GLIBCXX_HAVE_VSWSCANF	
#if _GLIBCXX_HAVE_VWSCANF	_GLIBCXX_HAVE_VWSCANF	
#if _GLIBCXX_USE_C99_WCHAR	_GLIBCXX_USE_C99_WCHAR	
#include <cwchar>	<cwchar>	
#define _GLIBCXX_POSTYPES_H 1	_GLIBCXX_POSTYPES_H	1
#ifndef _GLIBCXX_POSTYPES_H	_GLIBCXX_POSTYPES_H	
#pragma GCC system_header	GCC system_header	
#if (defined(_GLIBCXX_HAVE_INT64_T) && !defined(_GLIBCXX_HAVE_INT64_T_LONG) \	(defined(_GLIBCXX_HAVE_INT64_T) && !defined(_GLIBCXX_HAVE_INT64_T_LONG) \	
#ifndef __STDC_LIMIT_MACROS	__STDC_LIMIT_MACROS	
#ifndef __STDC_CONSTANT_MACROS	__STDC_CONSTANT_MACROS	
#ifdef _UNDEF__STDC_LIMIT_MACROS	_UNDEF__STDC_LIMIT_MACROS	
#ifdef _UNDEF__STDC_CONSTANT_MACROS	_UNDEF__STDC_CONSTANT_MACROS	
#ifdef _GLIBCXX_HAVE_INT64_T_LONG	_GLIBCXX_HAVE_INT64_T_LONG	
#elif defined(_GLIBCXX_HAVE_INT64_T_LONG_LONG)	defined(_GLIBCXX_HAVE_INT64_T_LONG_LONG)	
#elif defined(_GLIBCXX_HAVE_INT64_T)	defined(_GLIBCXX_HAVE_INT64_T)	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_USE_CHAR8_T	_GLIBCXX_USE_CHAR8_T	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#include <bits/postypes.h>	<bits/postypes.h>	
#include <bits/stringfwd.h>	<bits/stringfwd.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#define _GLIBCXX_IOSFWD 1	_GLIBCXX_IOSFWD	1
#ifndef _GLIBCXX_IOSFWD	_GLIBCXX_IOSFWD	
#pragma GCC system_header	GCC system_header	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#define __BYTE_ORDER __LITTLE_ENDIAN	__BYTE_ORDER	__LITTLE_ENDIAN
#ifndef _ENDIAN_H	_ENDIAN_H	
#define _ENDIAN_H 1	_ENDIAN_H	1
#define __TIMESIZE __WORDSIZE	__TIMESIZE	__WORDSIZE
#if defined __x86_64__ && defined __ILP32__	defined __x86_64__ && defined __ILP32__	
#define __FD_SETSIZE 1024	__FD_SETSIZE	1024
#define __RLIM_T_MATCHES_RLIM64_T 1	__RLIM_T_MATCHES_RLIM64_T	1
#define __INO_T_MATCHES_INO64_T 1	__INO_T_MATCHES_INO64_T	1
#define __OFF_T_MATCHES_OFF64_T 1	__OFF_T_MATCHES_OFF64_T	1
#define __CPU_MASK_TYPE __SYSCALL_ULONG_TYPE	__CPU_MASK_TYPE	__SYSCALL_ULONG_TYPE
#define __SSIZE_T_TYPE __SWORD_TYPE	__SSIZE_T_TYPE	__SWORD_TYPE
#define __FSID_T_TYPE struct { int __val[2]; }	__FSID_T_TYPE	struct { int __val[2]; }
#define __BLKSIZE_T_TYPE __SYSCALL_SLONG_TYPE	__BLKSIZE_T_TYPE	__SYSCALL_SLONG_TYPE
#define __TIMER_T_TYPE void *	__TIMER_T_TYPE	void *
#define __CLOCKID_T_TYPE __S32_TYPE	__CLOCKID_T_TYPE	__S32_TYPE
#define __KEY_T_TYPE __S32_TYPE	__KEY_T_TYPE	__S32_TYPE
#define __DADDR_T_TYPE __S32_TYPE	__DADDR_T_TYPE	__S32_TYPE
#define __SUSECONDS_T_TYPE __SYSCALL_SLONG_TYPE	__SUSECONDS_T_TYPE	__SYSCALL_SLONG_TYPE
#define __USECONDS_T_TYPE __U32_TYPE	__USECONDS_T_TYPE	__U32_TYPE
#define __TIME_T_TYPE __SYSCALL_SLONG_TYPE	__TIME_T_TYPE	__SYSCALL_SLONG_TYPE
#define __CLOCK_T_TYPE __SYSCALL_SLONG_TYPE	__CLOCK_T_TYPE	__SYSCALL_SLONG_TYPE
#define __ID_T_TYPE __U32_TYPE	__ID_T_TYPE	__U32_TYPE
#define __FSFILCNT64_T_TYPE __UQUAD_TYPE	__FSFILCNT64_T_TYPE	__UQUAD_TYPE
#define __FSFILCNT_T_TYPE __SYSCALL_ULONG_TYPE	__FSFILCNT_T_TYPE	__SYSCALL_ULONG_TYPE
#define __FSBLKCNT64_T_TYPE __UQUAD_TYPE	__FSBLKCNT64_T_TYPE	__UQUAD_TYPE
#define __FSBLKCNT_T_TYPE __SYSCALL_ULONG_TYPE	__FSBLKCNT_T_TYPE	__SYSCALL_ULONG_TYPE
#define __BLKCNT64_T_TYPE __SQUAD_TYPE	__BLKCNT64_T_TYPE	__SQUAD_TYPE
#define __BLKCNT_T_TYPE __SYSCALL_SLONG_TYPE	__BLKCNT_T_TYPE	__SYSCALL_SLONG_TYPE
#define __RLIM64_T_TYPE __UQUAD_TYPE	__RLIM64_T_TYPE	__UQUAD_TYPE
#define __RLIM_T_TYPE __SYSCALL_ULONG_TYPE	__RLIM_T_TYPE	__SYSCALL_ULONG_TYPE
#define __PID_T_TYPE __S32_TYPE	__PID_T_TYPE	__S32_TYPE
#define __OFF64_T_TYPE __SQUAD_TYPE	__OFF64_T_TYPE	__SQUAD_TYPE
#define __OFF_T_TYPE __SYSCALL_SLONG_TYPE	__OFF_T_TYPE	__SYSCALL_SLONG_TYPE
#define __FSWORD_T_TYPE __SYSCALL_SLONG_TYPE	__FSWORD_T_TYPE	__SYSCALL_SLONG_TYPE
#define __NLINK_T_TYPE __SYSCALL_ULONG_TYPE	__NLINK_T_TYPE	__SYSCALL_ULONG_TYPE
#define __MODE_T_TYPE __U32_TYPE	__MODE_T_TYPE	__U32_TYPE
#define __INO64_T_TYPE __UQUAD_TYPE	__INO64_T_TYPE	__UQUAD_TYPE
#define __INO_T_TYPE __SYSCALL_ULONG_TYPE	__INO_T_TYPE	__SYSCALL_ULONG_TYPE
#define __GID_T_TYPE __U32_TYPE	__GID_T_TYPE	__U32_TYPE
#define __UID_T_TYPE __U32_TYPE	__UID_T_TYPE	__U32_TYPE
#define __DEV_T_TYPE __UQUAD_TYPE	__DEV_T_TYPE	__UQUAD_TYPE
#define __SYSCALL_ULONG_TYPE __ULONGWORD_TYPE	__SYSCALL_ULONG_TYPE	__ULONGWORD_TYPE
#define __SYSCALL_SLONG_TYPE __SLONGWORD_TYPE	__SYSCALL_SLONG_TYPE	__SLONGWORD_TYPE
#define _BITS_TYPESIZES_H 1	_BITS_TYPESIZES_H	1
#ifndef _BITS_TYPES_H	_BITS_TYPES_H	
#ifndef _BITS_TYPESIZES_H	_BITS_TYPESIZES_H	
#if defined __x86_64__ && defined __ILP32__	defined __x86_64__ && defined __ILP32__	
#ifdef __x86_64__	__x86_64__	
#ifdef __x86_64__	__x86_64__	
#define _BITS_TYPES_H 1	_BITS_TYPES_H	1
#define __TIME64_T_TYPE __TIME_T_TYPE	__TIME64_T_TYPE	__TIME_T_TYPE
#define _BITS_TIME64_H 1	_BITS_TIME64_H	1
#ifndef _BITS_TYPES_H	_BITS_TYPES_H	
#ifndef _BITS_TIME64_H	_BITS_TIME64_H	
#if __TIMESIZE == 64	__TIMESIZE == 64	
#include <bits/time64.h>	<bits/time64.h>	
#include <bits/typesizes.h>	<bits/typesizes.h>	
#include <bits/timesize.h>	<bits/timesize.h>	
#include <bits/wordsize.h>	<bits/wordsize.h>	
#include <features.h>	<features.h>	
#undef __STD_TYPE	__STD_TYPE	
#define __STD_TYPE typedef	__STD_TYPE	typedef
#define __U64_TYPE unsigned long int	__U64_TYPE	unsigned long int
#define __S64_TYPE long int	__S64_TYPE	long int
#define __ULONG32_TYPE unsigned int	__ULONG32_TYPE	unsigned int
#define __SLONG32_TYPE int	__SLONG32_TYPE	int
#define __UWORD_TYPE unsigned long int	__UWORD_TYPE	unsigned long int
#define __SWORD_TYPE long int	__SWORD_TYPE	long int
#define __UQUAD_TYPE unsigned long int	__UQUAD_TYPE	unsigned long int
#define __SQUAD_TYPE long int	__SQUAD_TYPE	long int
#define __ULONGWORD_TYPE unsigned long int	__ULONGWORD_TYPE	unsigned long int
#define __SLONGWORD_TYPE long int	__SLONGWORD_TYPE	long int
#define __U32_TYPE unsigned int	__U32_TYPE	unsigned int
#define __S32_TYPE int	__S32_TYPE	int
#define __U16_TYPE unsigned short int	__U16_TYPE	unsigned short int
#define __S16_TYPE short int	__S16_TYPE	short int
#ifndef _BITS_TYPES_H	_BITS_TYPES_H	
#if __WORDSIZE == 64	__WORDSIZE == 64	
#if __WORDSIZE == 64	__WORDSIZE == 64	
#if __WORDSIZE == 64	__WORDSIZE == 64	
#if __WORDSIZE == 32	__WORDSIZE == 32	
#elif __WORDSIZE == 64	__WORDSIZE == 64	
#if __TIMESIZE == 64 && defined __LIBC	__TIMESIZE == 64 && defined __LIBC	
#elif __TIMESIZE != 64	__TIMESIZE != 64	
#include <bits/types.h>	<bits/types.h>	
#include <features.h>	<features.h>	
#define __bswap_constant_64(x) ((((x) & 0xff00000000000000ull) >> 56) | (((x) & 0x00ff000000000000ull) >> 40) | (((x) & 0x0000ff0000000000ull) >> 24) | (((x) & 0x000000ff00000000ull) >> 8) | (((x) & 0x00000000ff000000ull) << 8) | (((x) & 0x0000000000ff0000ull) << 24) | (((x) & 0x000000000000ff00ull) << 40) | (((x) & 0x00000000000000ffull) << 56))	__bswap_constant_64(x)	((((x) & 0xff00000000000000ull) >> 56) | (((x) & 0x00ff000000000000ull) >> 40) | (((x) & 0x0000ff0000000000ull) >> 24) | (((x) & 0x000000ff00000000ull) >> 8) | (((x) & 0x00000000ff000000ull) << 8) | (((x) & 0x0000000000ff0000ull) << 24) | (((x) & 0x000000000000ff00ull) << 40) | (((x) & 0x00000000000000ffull) << 56))
#define __bswap_constant_32(x) ((((x) & 0xff000000u) >> 24) | (((x) & 0x00ff0000u) >> 8) | (((x) & 0x0000ff00u) << 8) | (((x) & 0x000000ffu) << 24))	__bswap_constant_32(x)	((((x) & 0xff000000u) >> 24) | (((x) & 0x00ff0000u) >> 8) | (((x) & 0x0000ff00u) << 8) | (((x) & 0x000000ffu) << 24))
#define __bswap_constant_16(x) ((__uint16_t) ((((x) >> 8) & 0xff) | (((x) & 0xff) << 8)))	__bswap_constant_16(x)	((__uint16_t) ((((x) >> 8) & 0xff) | (((x) & 0xff) << 8)))
#define _BITS_BYTESWAP_H 1	_BITS_BYTESWAP_H	1
#if !defined _BYTESWAP_H && !defined _NETINET_IN_H && !defined _ENDIAN_H	!defined _BYTESWAP_H && !defined _NETINET_IN_H && !defined _ENDIAN_H	
#ifndef _BITS_BYTESWAP_H	_BITS_BYTESWAP_H	
#if __GNUC_PREREQ (4, 8)	__GNUC_PREREQ (4, 8)	
#if __GNUC_PREREQ (4, 3)	__GNUC_PREREQ (4, 3)	
#if __GNUC_PREREQ (4, 3)	__GNUC_PREREQ (4, 3)	
#include <bits/types.h>	<bits/types.h>	
#define _BITS_UINTN_IDENTITY_H 1	_BITS_UINTN_IDENTITY_H	1
#if !defined _NETINET_IN_H && !defined _ENDIAN_H	!defined _NETINET_IN_H && !defined _ENDIAN_H	
#ifndef _BITS_UINTN_IDENTITY_H	_BITS_UINTN_IDENTITY_H	
#include <bits/uintn-identity.h>	<bits/uintn-identity.h>	
#include <bits/byteswap.h>	<bits/byteswap.h>	
#include <bits/endian.h>	<bits/endian.h>	
#include <features.h>	<features.h>	
#define le64toh(x) __uint64_identity (x)	le64toh(x)	__uint64_identity (x)
#define be64toh(x) __bswap_64 (x)	be64toh(x)	__bswap_64 (x)
#define htole64(x) __uint64_identity (x)	htole64(x)	__uint64_identity (x)
#define htobe64(x) __bswap_64 (x)	htobe64(x)	__bswap_64 (x)
#define le32toh(x) __uint32_identity (x)	le32toh(x)	__uint32_identity (x)
#define be32toh(x) __bswap_32 (x)	be32toh(x)	__bswap_32 (x)
#define htole32(x) __uint32_identity (x)	htole32(x)	__uint32_identity (x)
#define htobe32(x) __bswap_32 (x)	htobe32(x)	__bswap_32 (x)
#define le16toh(x) __uint16_identity (x)	le16toh(x)	__uint16_identity (x)
#define be16toh(x) __bswap_16 (x)	be16toh(x)	__bswap_16 (x)
#define htole16(x) __uint16_identity (x)	htole16(x)	__uint16_identity (x)
#define htobe16(x) __bswap_16 (x)	htobe16(x)	__bswap_16 (x)
#define __LONG_LONG_PAIR(HI,LO) LO, HI	__LONG_LONG_PAIR(HI,LO)	LO, HI
#define BYTE_ORDER __BYTE_ORDER	BYTE_ORDER	__BYTE_ORDER
#define PDP_ENDIAN __PDP_ENDIAN	PDP_ENDIAN	__PDP_ENDIAN
#define BIG_ENDIAN __BIG_ENDIAN	BIG_ENDIAN	__BIG_ENDIAN
#define LITTLE_ENDIAN __LITTLE_ENDIAN	LITTLE_ENDIAN	__LITTLE_ENDIAN
#define __FLOAT_WORD_ORDER __BYTE_ORDER	__FLOAT_WORD_ORDER	__BYTE_ORDER
#define __PDP_ENDIAN 3412	__PDP_ENDIAN	3412
#define __BIG_ENDIAN 4321	__BIG_ENDIAN	4321
#define __LITTLE_ENDIAN 1234	__LITTLE_ENDIAN	1234
#ifndef _ENDIAN_H	_ENDIAN_H	
#ifndef __FLOAT_WORD_ORDER	__FLOAT_WORD_ORDER	
#ifdef __USE_MISC	__USE_MISC	
#if __BYTE_ORDER == __LITTLE_ENDIAN	__BYTE_ORDER == __LITTLE_ENDIAN	
#elif __BYTE_ORDER == __BIG_ENDIAN	__BYTE_ORDER == __BIG_ENDIAN	
#if defined __USE_MISC && !defined __ASSEMBLER__	defined __USE_MISC && !defined __ASSEMBLER__	
#if __BYTE_ORDER == __LITTLE_ENDIAN	__BYTE_ORDER == __LITTLE_ENDIAN	
#define __need_NULL	__need_NULL	
#define __need_size_t	__need_size_t	
#include <bits/types.h>	<bits/types.h>	
#define __time_t_defined 1	__time_t_defined	1
#ifndef __time_t_defined	__time_t_defined	
#include <bits/types.h>	<bits/types.h>	
#define _STRUCT_TIMESPEC 1	_STRUCT_TIMESPEC	1
#ifndef _STRUCT_TIMESPEC	_STRUCT_TIMESPEC	
#define _BITS_TYPES_STRUCT_SCHED_PARAM 1	_BITS_TYPES_STRUCT_SCHED_PARAM	1
#ifndef _BITS_TYPES_STRUCT_SCHED_PARAM	_BITS_TYPES_STRUCT_SCHED_PARAM	
#include <bits/types/struct_sched_param.h>	<bits/types/struct_sched_param.h>	
#define CLONE_IO 0x80000000	CLONE_IO	0x80000000
#define CLONE_NEWNET 0x40000000	CLONE_NEWNET	0x40000000
#define CLONE_NEWPID 0x20000000	CLONE_NEWPID	0x20000000
#define CLONE_NEWUSER 0x10000000	CLONE_NEWUSER	0x10000000
#define CLONE_NEWIPC 0x08000000	CLONE_NEWIPC	0x08000000
#define CLONE_NEWUTS 0x04000000	CLONE_NEWUTS	0x04000000
#define CLONE_NEWCGROUP 0x02000000	CLONE_NEWCGROUP	0x02000000
#define CLONE_CHILD_SETTID 0x01000000	CLONE_CHILD_SETTID	0x01000000
#define CLONE_UNTRACED 0x00800000	CLONE_UNTRACED	0x00800000
#define CLONE_DETACHED 0x00400000	CLONE_DETACHED	0x00400000
#define CLONE_CHILD_CLEARTID 0x00200000	CLONE_CHILD_CLEARTID	0x00200000
#define CLONE_PARENT_SETTID 0x00100000	CLONE_PARENT_SETTID	0x00100000
#define CLONE_SETTLS 0x00080000	CLONE_SETTLS	0x00080000
#define CLONE_SYSVSEM 0x00040000	CLONE_SYSVSEM	0x00040000
#define CLONE_NEWNS 0x00020000	CLONE_NEWNS	0x00020000
#define CLONE_THREAD 0x00010000	CLONE_THREAD	0x00010000
#define CLONE_PARENT 0x00008000	CLONE_PARENT	0x00008000
#define CLONE_VFORK 0x00004000	CLONE_VFORK	0x00004000
#define CLONE_PTRACE 0x00002000	CLONE_PTRACE	0x00002000
#define CLONE_SIGHAND 0x00000800	CLONE_SIGHAND	0x00000800
#define CLONE_FILES 0x00000400	CLONE_FILES	0x00000400
#define CLONE_FS 0x00000200	CLONE_FS	0x00000200
#define CLONE_VM 0x00000100	CLONE_VM	0x00000100
#define CSIGNAL 0x000000ff	CSIGNAL	0x000000ff
#define SCHED_RESET_ON_FORK 0x40000000	SCHED_RESET_ON_FORK	0x40000000
#define SCHED_DEADLINE 6	SCHED_DEADLINE	6
#define SCHED_IDLE 5	SCHED_IDLE	5
#define SCHED_ISO 4	SCHED_ISO	4
#define SCHED_BATCH 3	SCHED_BATCH	3
#define SCHED_RR 2	SCHED_RR	2
#define SCHED_FIFO 1	SCHED_FIFO	1
#define SCHED_OTHER 0	SCHED_OTHER	0
#define _BITS_SCHED_H 1	_BITS_SCHED_H	1
#ifndef _BITS_SCHED_H	_BITS_SCHED_H	
#ifndef _SCHED_H	_SCHED_H	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_GNU	__USE_GNU	
#define _SCHED_H 1	_SCHED_H	1
#define __CPU_SETSIZE 1024	__CPU_SETSIZE	1024
#define __NCPUBITS (8 * sizeof (__cpu_mask))	__NCPUBITS	(8 * sizeof (__cpu_mask))
#define __CPU_FREE(cpuset) __sched_cpufree (cpuset)	__CPU_FREE(cpuset)	__sched_cpufree (cpuset)
#define __CPU_ALLOC(count) __sched_cpualloc (count)	__CPU_ALLOC(count)	__sched_cpualloc (count)
#define __CPU_ALLOC_SIZE(count) ((((count) + __NCPUBITS - 1) / __NCPUBITS) * sizeof (__cpu_mask))	__CPU_ALLOC_SIZE(count)	((((count) + __NCPUBITS - 1) / __NCPUBITS) * sizeof (__cpu_mask))
#define __CPU_OP_S(setsize,destset,srcset1,srcset2,op) (__extension__ ({ cpu_set_t *__dest = (destset); const __cpu_mask *__arr1 = (srcset1)->__bits; const __cpu_mask *__arr2 = (srcset2)->__bits; size_t __imax = (setsize) / sizeof (__cpu_mask); size_t __i; for (__i = 0; __i < __imax; ++__i) ((__cpu_mask *) __dest->__bits)[__i] = __arr1[__i] op __arr2[__i]; __dest; }))	__CPU_OP_S(setsize,destset,srcset1,srcset2,op)	(__extension__ ({ cpu_set_t *__dest = (destset); const __cpu_mask *__arr1 = (srcset1)->__bits; const __cpu_mask *__arr2 = (srcset2)->__bits; size_t __imax = (setsize) / sizeof (__cpu_mask); size_t __i; for (__i = 0; __i < __imax; ++__i) ((__cpu_mask *) __dest->__bits)[__i] = __arr1[__i] op __arr2[__i]; __dest; }))
#define __CPU_EQUAL_S(setsize,cpusetp1,cpusetp2) (__builtin_memcmp (cpusetp1, cpusetp2, setsize) == 0)	__CPU_EQUAL_S(setsize,cpusetp1,cpusetp2)	(__builtin_memcmp (cpusetp1, cpusetp2, setsize) == 0)
#define __CPU_COUNT_S(setsize,cpusetp) __sched_cpucount (setsize, cpusetp)	__CPU_COUNT_S(setsize,cpusetp)	__sched_cpucount (setsize, cpusetp)
#define __CPU_ISSET_S(cpu,setsize,cpusetp) (__extension__ ({ size_t __cpu = (cpu); __cpu / 8 < (setsize) ? ((((const __cpu_mask *) ((cpusetp)->__bits))[__CPUELT (__cpu)] & __CPUMASK (__cpu))) != 0 : 0; }))	__CPU_ISSET_S(cpu,setsize,cpusetp)	(__extension__ ({ size_t __cpu = (cpu); __cpu / 8 < (setsize) ? ((((const __cpu_mask *) ((cpusetp)->__bits))[__CPUELT (__cpu)] & __CPUMASK (__cpu))) != 0 : 0; }))
#define __CPU_CLR_S(cpu,setsize,cpusetp) (__extension__ ({ size_t __cpu = (cpu); __cpu / 8 < (setsize) ? (((__cpu_mask *) ((cpusetp)->__bits))[__CPUELT (__cpu)] &= ~__CPUMASK (__cpu)) : 0; }))	__CPU_CLR_S(cpu,setsize,cpusetp)	(__extension__ ({ size_t __cpu = (cpu); __cpu / 8 < (setsize) ? (((__cpu_mask *) ((cpusetp)->__bits))[__CPUELT (__cpu)] &= ~__CPUMASK (__cpu)) : 0; }))
#define __CPU_SET_S(cpu,setsize,cpusetp) (__extension__ ({ size_t __cpu = (cpu); __cpu / 8 < (setsize) ? (((__cpu_mask *) ((cpusetp)->__bits))[__CPUELT (__cpu)] |= __CPUMASK (__cpu)) : 0; }))	__CPU_SET_S(cpu,setsize,cpusetp)	(__extension__ ({ size_t __cpu = (cpu); __cpu / 8 < (setsize) ? (((__cpu_mask *) ((cpusetp)->__bits))[__CPUELT (__cpu)] |= __CPUMASK (__cpu)) : 0; }))
#define __CPU_ZERO_S(setsize,cpusetp) do __builtin_memset (cpusetp, '\0', setsize); while (0)	__CPU_ZERO_S(setsize,cpusetp)	do __builtin_memset (cpusetp, '\0', setsize); while (0)
#define __CPUMASK(cpu) ((__cpu_mask) 1 << ((cpu) % __NCPUBITS))	__CPUMASK(cpu)	((__cpu_mask) 1 << ((cpu) % __NCPUBITS))
#define __CPUELT(cpu) ((cpu) / __NCPUBITS)	__CPUELT(cpu)	((cpu) / __NCPUBITS)
#define _BITS_CPU_SET_H 1	_BITS_CPU_SET_H	1
#ifndef _BITS_CPU_SET_H	_BITS_CPU_SET_H	
#ifndef _SCHED_H	_SCHED_H	
#if __GNUC_PREREQ (2, 91)	__GNUC_PREREQ (2, 91)	
#if __GNUC_PREREQ (2, 91)	__GNUC_PREREQ (2, 91)	
#include <bits/cpu-set.h>	<bits/cpu-set.h>	
#include <bits/sched.h>	<bits/sched.h>	
#include <bits/types/struct_timespec.h>	<bits/types/struct_timespec.h>	
#include <bits/types/time_t.h>	<bits/types/time_t.h>	
#include <stddef.h>	<stddef.h>	
#include <bits/types.h>	<bits/types.h>	
#include <features.h>	<features.h>	
#define CPU_FREE(cpuset) __CPU_FREE (cpuset)	CPU_FREE(cpuset)	__CPU_FREE (cpuset)
#define CPU_ALLOC(count) __CPU_ALLOC (count)	CPU_ALLOC(count)	__CPU_ALLOC (count)
#define CPU_ALLOC_SIZE(count) __CPU_ALLOC_SIZE (count)	CPU_ALLOC_SIZE(count)	__CPU_ALLOC_SIZE (count)
#define CPU_XOR_S(setsize,destset,srcset1,srcset2) __CPU_OP_S (setsize, destset, srcset1, srcset2, ^)	CPU_XOR_S(setsize,destset,srcset1,srcset2)	__CPU_OP_S (setsize, destset, srcset1, srcset2, ^)
#define CPU_OR_S(setsize,destset,srcset1,srcset2) __CPU_OP_S (setsize, destset, srcset1, srcset2, |)	CPU_OR_S(setsize,destset,srcset1,srcset2)	__CPU_OP_S (setsize, destset, srcset1, srcset2, |)
#define CPU_AND_S(setsize,destset,srcset1,srcset2) __CPU_OP_S (setsize, destset, srcset1, srcset2, &)	CPU_AND_S(setsize,destset,srcset1,srcset2)	__CPU_OP_S (setsize, destset, srcset1, srcset2, &)
#define CPU_XOR(destset,srcset1,srcset2) __CPU_OP_S (sizeof (cpu_set_t), destset, srcset1, srcset2, ^)	CPU_XOR(destset,srcset1,srcset2)	__CPU_OP_S (sizeof (cpu_set_t), destset, srcset1, srcset2, ^)
#define CPU_OR(destset,srcset1,srcset2) __CPU_OP_S (sizeof (cpu_set_t), destset, srcset1, srcset2, |)	CPU_OR(destset,srcset1,srcset2)	__CPU_OP_S (sizeof (cpu_set_t), destset, srcset1, srcset2, |)
#define CPU_AND(destset,srcset1,srcset2) __CPU_OP_S (sizeof (cpu_set_t), destset, srcset1, srcset2, &)	CPU_AND(destset,srcset1,srcset2)	__CPU_OP_S (sizeof (cpu_set_t), destset, srcset1, srcset2, &)
#define CPU_EQUAL_S(setsize,cpusetp1,cpusetp2) __CPU_EQUAL_S (setsize, cpusetp1, cpusetp2)	CPU_EQUAL_S(setsize,cpusetp1,cpusetp2)	__CPU_EQUAL_S (setsize, cpusetp1, cpusetp2)
#define CPU_EQUAL(cpusetp1,cpusetp2) __CPU_EQUAL_S (sizeof (cpu_set_t), cpusetp1, cpusetp2)	CPU_EQUAL(cpusetp1,cpusetp2)	__CPU_EQUAL_S (sizeof (cpu_set_t), cpusetp1, cpusetp2)
#define CPU_COUNT_S(setsize,cpusetp) __CPU_COUNT_S (setsize, cpusetp)	CPU_COUNT_S(setsize,cpusetp)	__CPU_COUNT_S (setsize, cpusetp)
#define CPU_ZERO_S(setsize,cpusetp) __CPU_ZERO_S (setsize, cpusetp)	CPU_ZERO_S(setsize,cpusetp)	__CPU_ZERO_S (setsize, cpusetp)
#define CPU_ISSET_S(cpu,setsize,cpusetp) __CPU_ISSET_S (cpu, setsize, cpusetp)	CPU_ISSET_S(cpu,setsize,cpusetp)	__CPU_ISSET_S (cpu, setsize, cpusetp)
#define CPU_CLR_S(cpu,setsize,cpusetp) __CPU_CLR_S (cpu, setsize, cpusetp)	CPU_CLR_S(cpu,setsize,cpusetp)	__CPU_CLR_S (cpu, setsize, cpusetp)
#define CPU_SET_S(cpu,setsize,cpusetp) __CPU_SET_S (cpu, setsize, cpusetp)	CPU_SET_S(cpu,setsize,cpusetp)	__CPU_SET_S (cpu, setsize, cpusetp)
#define CPU_COUNT(cpusetp) __CPU_COUNT_S (sizeof (cpu_set_t), cpusetp)	CPU_COUNT(cpusetp)	__CPU_COUNT_S (sizeof (cpu_set_t), cpusetp)
#define CPU_ZERO(cpusetp) __CPU_ZERO_S (sizeof (cpu_set_t), cpusetp)	CPU_ZERO(cpusetp)	__CPU_ZERO_S (sizeof (cpu_set_t), cpusetp)
#define CPU_ISSET(cpu,cpusetp) __CPU_ISSET_S (cpu, sizeof (cpu_set_t), cpusetp)	CPU_ISSET(cpu,cpusetp)	__CPU_ISSET_S (cpu, sizeof (cpu_set_t), cpusetp)
#define CPU_CLR(cpu,cpusetp) __CPU_CLR_S (cpu, sizeof (cpu_set_t), cpusetp)	CPU_CLR(cpu,cpusetp)	__CPU_CLR_S (cpu, sizeof (cpu_set_t), cpusetp)
#define CPU_SET(cpu,cpusetp) __CPU_SET_S (cpu, sizeof (cpu_set_t), cpusetp)	CPU_SET(cpu,cpusetp)	__CPU_SET_S (cpu, sizeof (cpu_set_t), cpusetp)
#define CPU_SETSIZE __CPU_SETSIZE	CPU_SETSIZE	__CPU_SETSIZE
#define __sched_priority sched_priority	__sched_priority	sched_priority
#define sched_priority sched_priority	sched_priority	sched_priority
#define __pid_t_defined	__pid_t_defined	
#ifndef _SCHED_H	_SCHED_H	
#ifndef __USE_XOPEN2K	__USE_XOPEN2K	
#ifndef __pid_t_defined	__pid_t_defined	
#ifdef __USE_GNU	__USE_GNU	
#define __need_NULL	__need_NULL	
#define __need_size_t	__need_size_t	
#include <bits/types.h>	<bits/types.h>	
#define __timeval_defined 1	__timeval_defined	1
#ifndef __timeval_defined	__timeval_defined	
#include <bits/types/struct_timeval.h>	<bits/types/struct_timeval.h>	
#include <bits/types.h>	<bits/types.h>	
#define STA_RONLY (STA_PPSSIGNAL | STA_PPSJITTER | STA_PPSWANDER | STA_PPSERROR | STA_CLOCKERR | STA_NANO | STA_MODE | STA_CLK)	STA_RONLY	(STA_PPSSIGNAL | STA_PPSJITTER | STA_PPSWANDER | STA_PPSERROR | STA_CLOCKERR | STA_NANO | STA_MODE | STA_CLK)
#define STA_CLK 0x8000	STA_CLK	0x8000
#define STA_MODE 0x4000	STA_MODE	0x4000
#define STA_NANO 0x2000	STA_NANO	0x2000
#define STA_CLOCKERR 0x1000	STA_CLOCKERR	0x1000
#define STA_PPSERROR 0x0800	STA_PPSERROR	0x0800
#define STA_PPSWANDER 0x0400	STA_PPSWANDER	0x0400
#define STA_PPSJITTER 0x0200	STA_PPSJITTER	0x0200
#define STA_PPSSIGNAL 0x0100	STA_PPSSIGNAL	0x0100
#define STA_FREQHOLD 0x0080	STA_FREQHOLD	0x0080
#define STA_UNSYNC 0x0040	STA_UNSYNC	0x0040
#define STA_DEL 0x0020	STA_DEL	0x0020
#define STA_INS 0x0010	STA_INS	0x0010
#define STA_FLL 0x0008	STA_FLL	0x0008
#define STA_PPSTIME 0x0004	STA_PPSTIME	0x0004
#define STA_PPSFREQ 0x0002	STA_PPSFREQ	0x0002
#define STA_PLL 0x0001	STA_PLL	0x0001
#define MOD_NANO ADJ_NANO	MOD_NANO	ADJ_NANO
#define MOD_MICRO ADJ_MICRO	MOD_MICRO	ADJ_MICRO
#define MOD_TAI ADJ_TAI	MOD_TAI	ADJ_TAI
#define MOD_CLKA ADJ_OFFSET_SINGLESHOT	MOD_CLKA	ADJ_OFFSET_SINGLESHOT
#define MOD_CLKB ADJ_TICK	MOD_CLKB	ADJ_TICK
#define MOD_TIMECONST ADJ_TIMECONST	MOD_TIMECONST	ADJ_TIMECONST
#define MOD_STATUS ADJ_STATUS	MOD_STATUS	ADJ_STATUS
#define MOD_ESTERROR ADJ_ESTERROR	MOD_ESTERROR	ADJ_ESTERROR
#define MOD_MAXERROR ADJ_MAXERROR	MOD_MAXERROR	ADJ_MAXERROR
#define MOD_FREQUENCY ADJ_FREQUENCY	MOD_FREQUENCY	ADJ_FREQUENCY
#define MOD_OFFSET ADJ_OFFSET	MOD_OFFSET	ADJ_OFFSET
#define ADJ_OFFSET_SS_READ 0xa001	ADJ_OFFSET_SS_READ	0xa001
#define ADJ_OFFSET_SINGLESHOT 0x8001	ADJ_OFFSET_SINGLESHOT	0x8001
#define ADJ_TICK 0x4000	ADJ_TICK	0x4000
#define ADJ_NANO 0x2000	ADJ_NANO	0x2000
#define ADJ_MICRO 0x1000	ADJ_MICRO	0x1000
#define ADJ_SETOFFSET 0x0100	ADJ_SETOFFSET	0x0100
#define ADJ_TAI 0x0080	ADJ_TAI	0x0080
#define ADJ_TIMECONST 0x0020	ADJ_TIMECONST	0x0020
#define ADJ_STATUS 0x0010	ADJ_STATUS	0x0010
#define ADJ_ESTERROR 0x0008	ADJ_ESTERROR	0x0008
#define ADJ_MAXERROR 0x0004	ADJ_MAXERROR	0x0004
#define ADJ_FREQUENCY 0x0002	ADJ_FREQUENCY	0x0002
#define ADJ_OFFSET 0x0001	ADJ_OFFSET	0x0001
#define _BITS_TIMEX_H 1	_BITS_TIMEX_H	1
#ifndef _BITS_TIMEX_H	_BITS_TIMEX_H	
#include <bits/timex.h>	<bits/timex.h>	
#include <bits/types.h>	<bits/types.h>	
#define TIMER_ABSTIME 1	TIMER_ABSTIME	1
#define CLOCK_TAI 11	CLOCK_TAI	11
#define CLOCK_BOOTTIME_ALARM 9	CLOCK_BOOTTIME_ALARM	9
#define CLOCK_REALTIME_ALARM 8	CLOCK_REALTIME_ALARM	8
#define CLOCK_BOOTTIME 7	CLOCK_BOOTTIME	7
#define CLOCK_MONOTONIC_COARSE 6	CLOCK_MONOTONIC_COARSE	6
#define CLOCK_REALTIME_COARSE 5	CLOCK_REALTIME_COARSE	5
#define CLOCK_MONOTONIC_RAW 4	CLOCK_MONOTONIC_RAW	4
#define CLOCK_THREAD_CPUTIME_ID 3	CLOCK_THREAD_CPUTIME_ID	3
#define CLOCK_PROCESS_CPUTIME_ID 2	CLOCK_PROCESS_CPUTIME_ID	2
#define CLOCK_MONOTONIC 1	CLOCK_MONOTONIC	1
#define CLOCK_REALTIME 0	CLOCK_REALTIME	0
#define CLOCKS_PER_SEC ((__clock_t) 1000000)	CLOCKS_PER_SEC	((__clock_t) 1000000)
#define _BITS_TIME_H 1	_BITS_TIME_H	1
#ifndef _BITS_TIME_H	_BITS_TIME_H	
#if (!defined __STRICT_ANSI__ || defined __USE_POSIX) \	(!defined __STRICT_ANSI__ || defined __USE_POSIX) \	
#ifdef __USE_POSIX199309	__USE_POSIX199309	
#ifdef __USE_GNU	__USE_GNU	
#include <bits/types.h>	<bits/types.h>	
#define __clock_t_defined 1	__clock_t_defined	1
#ifndef __clock_t_defined	__clock_t_defined	
#include <bits/types.h>	<bits/types.h>	
#define __struct_tm_defined 1	__struct_tm_defined	1
#ifndef __struct_tm_defined	__struct_tm_defined	
#ifdef __USE_MISC	__USE_MISC	
#include <bits/types.h>	<bits/types.h>	
#define __clockid_t_defined 1	__clockid_t_defined	1
#ifndef __clockid_t_defined	__clockid_t_defined	
#include <bits/types.h>	<bits/types.h>	
#define __timer_t_defined 1	__timer_t_defined	1
#ifndef __timer_t_defined	__timer_t_defined	
#include <bits/types/struct_timespec.h>	<bits/types/struct_timespec.h>	
#include <bits/types.h>	<bits/types.h>	
#define __itimerspec_defined 1	__itimerspec_defined	1
#ifndef __itimerspec_defined	__itimerspec_defined	
#include <bits/types/locale_t.h>	<bits/types/locale_t.h>	
#include <bits/types/struct_itimerspec.h>	<bits/types/struct_itimerspec.h>	
#include <bits/types/timer_t.h>	<bits/types/timer_t.h>	
#include <bits/types/clockid_t.h>	<bits/types/clockid_t.h>	
#include <bits/types/struct_timespec.h>	<bits/types/struct_timespec.h>	
#include <bits/types/struct_tm.h>	<bits/types/struct_tm.h>	
#include <bits/types/time_t.h>	<bits/types/time_t.h>	
#include <bits/types/clock_t.h>	<bits/types/clock_t.h>	
#include <bits/time.h>	<bits/time.h>	
#include <stddef.h>	<stddef.h>	
#include <features.h>	<features.h>	
#define __isleap(year) ((year) % 4 == 0 && ((year) % 100 != 0 || (year) % 400 == 0))	__isleap(year)	((year) % 4 == 0 && ((year) % 100 != 0 || (year) % 400 == 0))
#define TIME_UTC 1	TIME_UTC	1
#define _TIME_H 1	_TIME_H	1
#ifndef _TIME_H	_TIME_H	
#if defined __USE_POSIX199309 || defined __USE_ISOC11	defined __USE_POSIX199309 || defined __USE_ISOC11	
#ifdef __USE_POSIX199309	__USE_POSIX199309	
#ifdef __USE_XOPEN2K	__USE_XOPEN2K	
#ifndef __pid_t_defined	__pid_t_defined	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
#ifdef __USE_ISOC11	__USE_ISOC11	
#ifdef __USE_XOPEN	__USE_XOPEN	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_POSIX	__USE_POSIX	
#ifdef __USE_POSIX	__USE_POSIX	
#ifdef __USE_POSIX	__USE_POSIX	
#if defined __USE_MISC || defined __USE_XOPEN	defined __USE_MISC || defined __USE_XOPEN	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_POSIX199309	__USE_POSIX199309	
#ifdef __USE_XOPEN2K	__USE_XOPEN2K	
#ifdef __USE_ISOC11	__USE_ISOC11	
#ifdef __USE_XOPEN_EXTENDED	__USE_XOPEN_EXTENDED	
#ifdef __USE_GNU	__USE_GNU	
#include <bits/wordsize.h>	<bits/wordsize.h>	
#define __PTHREAD_RWLOCK_INT_FLAGS_SHARED 1	__PTHREAD_RWLOCK_INT_FLAGS_SHARED	1
#define __PTHREAD_RWLOCK_ELISION_EXTRA 0, { 0, 0, 0, 0, 0, 0, 0 }	__PTHREAD_RWLOCK_ELISION_EXTRA	0, { 0, 0, 0, 0, 0, 0, 0 }
#define __ONCE_ALIGNMENT	__ONCE_ALIGNMENT	
#define __LOCK_ALIGNMENT	__LOCK_ALIGNMENT	
#define __PTHREAD_MUTEX_USE_UNION 0	__PTHREAD_MUTEX_USE_UNION	0
#define __PTHREAD_MUTEX_NUSERS_AFTER_KIND 0	__PTHREAD_MUTEX_NUSERS_AFTER_KIND	0
#define __PTHREAD_MUTEX_LOCK_ELISION 1	__PTHREAD_MUTEX_LOCK_ELISION	1
#define __PTHREAD_COMPAT_PADDING_END	__PTHREAD_COMPAT_PADDING_END	
#define __PTHREAD_COMPAT_PADDING_MID	__PTHREAD_COMPAT_PADDING_MID	
#define __SIZEOF_PTHREAD_BARRIERATTR_T 4	__SIZEOF_PTHREAD_BARRIERATTR_T	4
#define __SIZEOF_PTHREAD_RWLOCKATTR_T 8	__SIZEOF_PTHREAD_RWLOCKATTR_T	8
#define __SIZEOF_PTHREAD_CONDATTR_T 4	__SIZEOF_PTHREAD_CONDATTR_T	4
#define __SIZEOF_PTHREAD_COND_T 48	__SIZEOF_PTHREAD_COND_T	48
#define __SIZEOF_PTHREAD_MUTEXATTR_T 4	__SIZEOF_PTHREAD_MUTEXATTR_T	4
#define __SIZEOF_PTHREAD_BARRIER_T 32	__SIZEOF_PTHREAD_BARRIER_T	32
#define __SIZEOF_PTHREAD_RWLOCK_T 56	__SIZEOF_PTHREAD_RWLOCK_T	56
#define __SIZEOF_PTHREAD_MUTEX_T 40	__SIZEOF_PTHREAD_MUTEX_T	40
#define __SIZEOF_PTHREAD_ATTR_T 56	__SIZEOF_PTHREAD_ATTR_T	56
#define __SIZEOF_PTHREAD_MUTEX_T 40	__SIZEOF_PTHREAD_MUTEX_T	40
#define _BITS_PTHREADTYPES_ARCH_H 1	_BITS_PTHREADTYPES_ARCH_H	1
#ifndef _BITS_PTHREADTYPES_ARCH_H	_BITS_PTHREADTYPES_ARCH_H	
#ifdef __x86_64__	__x86_64__	
#if __WORDSIZE == 64	__WORDSIZE == 64	
#ifdef __x86_64__	__x86_64__	
#ifdef __x86_64__	__x86_64__	
#ifdef __ILP32__	__ILP32__	
#ifndef __x86_64__	__x86_64__	
#include <bits/pthreadtypes-arch.h>	<bits/pthreadtypes-arch.h>	
#define __PTHREAD_SPINS_DATA short __spins; short __elision	__PTHREAD_SPINS_DATA	short __spins; short __elision
#define __PTHREAD_MUTEX_HAVE_PREV 1	__PTHREAD_MUTEX_HAVE_PREV	1
#define __PTHREAD_SPINS 0, 0	__PTHREAD_SPINS	0, 0
#define _THREAD_SHARED_TYPES_H 1	_THREAD_SHARED_TYPES_H	1
#ifndef _THREAD_SHARED_TYPES_H	_THREAD_SHARED_TYPES_H	
#if !__PTHREAD_MUTEX_USE_UNION	!__PTHREAD_MUTEX_USE_UNION	
#if __PTHREAD_MUTEX_LOCK_ELISION	__PTHREAD_MUTEX_LOCK_ELISION	
#if !__PTHREAD_MUTEX_USE_UNION	!__PTHREAD_MUTEX_USE_UNION	
#if !__PTHREAD_MUTEX_NUSERS_AFTER_KIND	!__PTHREAD_MUTEX_NUSERS_AFTER_KIND	
#if __PTHREAD_MUTEX_NUSERS_AFTER_KIND	__PTHREAD_MUTEX_NUSERS_AFTER_KIND	
#if !__PTHREAD_MUTEX_USE_UNION	!__PTHREAD_MUTEX_USE_UNION	
#include <bits/thread-shared-types.h>	<bits/thread-shared-types.h>	
#define __have_pthread_attr_t 1	__have_pthread_attr_t	1
#define _BITS_PTHREADTYPES_COMMON_H 1	_BITS_PTHREADTYPES_COMMON_H	1
#ifndef _BITS_PTHREADTYPES_COMMON_H	_BITS_PTHREADTYPES_COMMON_H	
#ifndef __have_pthread_attr_t	__have_pthread_attr_t	
#if defined __USE_UNIX98 || defined __USE_XOPEN2K	defined __USE_UNIX98 || defined __USE_XOPEN2K	
#ifdef __USE_XOPEN2K	__USE_XOPEN2K	
#include <bits/wordsize.h>	<bits/wordsize.h>	
#define _BITS_SETJMP_H 1	_BITS_SETJMP_H	1
#ifndef _BITS_SETJMP_H	_BITS_SETJMP_H	
#if !defined _SETJMP_H && !defined _PTHREAD_H	!defined _SETJMP_H && !defined _PTHREAD_H	
#ifndef _ASM	_ASM	
#if __WORDSIZE == 64	__WORDSIZE == 64	
#elif defined  __x86_64__	defined  __x86_64__	
#define _PTHREAD_H 1	_PTHREAD_H	1
#include <bits/types/struct_timespec.h>	<bits/types/struct_timespec.h>	
#include <bits/wordsize.h>	<bits/wordsize.h>	
#include <bits/setjmp.h>	<bits/setjmp.h>	
#include <bits/pthreadtypes.h>	<bits/pthreadtypes.h>	
#include <time.h>	<time.h>	
#include <sched.h>	<sched.h>	
#include <endian.h>	<endian.h>	
#include <features.h>	<features.h>	
#define pthread_cleanup_pop_restore_np(execute) do { } while (0); } while (0); __pthread_unregister_cancel_restore (&__cancel_buf); if (execute) __cancel_routine (__cancel_arg); } while (0)	pthread_cleanup_pop_restore_np(execute)	do { } while (0); } while (0); __pthread_unregister_cancel_restore (&__cancel_buf); if (execute) __cancel_routine (__cancel_arg); } while (0)
#define pthread_cleanup_push_defer_np(routine,arg) do { __pthread_unwind_buf_t __cancel_buf; void (*__cancel_routine) (void *) = (routine); void *__cancel_arg = (arg); int __not_first_call = __sigsetjmp ((struct __jmp_buf_tag *) (void *) __cancel_buf.__cancel_jmp_buf, 0); if (__glibc_unlikely (__not_first_call)) { __cancel_routine (__cancel_arg); __pthread_unwind_next (&__cancel_buf); } __pthread_register_cancel_defer (&__cancel_buf); do {	pthread_cleanup_push_defer_np(routine,arg)	do { __pthread_unwind_buf_t __cancel_buf; void (*__cancel_routine) (void *) = (routine); void *__cancel_arg = (arg); int __not_first_call = __sigsetjmp ((struct __jmp_buf_tag *) (void *) __cancel_buf.__cancel_jmp_buf, 0); if (__glibc_unlikely (__not_first_call)) { __cancel_routine (__cancel_arg); __pthread_unwind_next (&__cancel_buf); } __pthread_register_cancel_defer (&__cancel_buf); do {
#define pthread_cleanup_pop(execute) do { } while (0); } while (0); __pthread_unregister_cancel (&__cancel_buf); if (execute) __cancel_routine (__cancel_arg); } while (0)	pthread_cleanup_pop(execute)	do { } while (0); } while (0); __pthread_unregister_cancel (&__cancel_buf); if (execute) __cancel_routine (__cancel_arg); } while (0)
#define pthread_cleanup_push(routine,arg) do { __pthread_unwind_buf_t __cancel_buf; void (*__cancel_routine) (void *) = (routine); void *__cancel_arg = (arg); int __not_first_call = __sigsetjmp ((struct __jmp_buf_tag *) (void *) __cancel_buf.__cancel_jmp_buf, 0); if (__glibc_unlikely (__not_first_call)) { __cancel_routine (__cancel_arg); __pthread_unwind_next (&__cancel_buf); } __pthread_register_cancel (&__cancel_buf); do {	pthread_cleanup_push(routine,arg)	do { __pthread_unwind_buf_t __cancel_buf; void (*__cancel_routine) (void *) = (routine); void *__cancel_arg = (arg); int __not_first_call = __sigsetjmp ((struct __jmp_buf_tag *) (void *) __cancel_buf.__cancel_jmp_buf, 0); if (__glibc_unlikely (__not_first_call)) { __cancel_routine (__cancel_arg); __pthread_unwind_next (&__cancel_buf); } __pthread_register_cancel (&__cancel_buf); do {
#define __cleanup_fct_attribute	__cleanup_fct_attribute	
#define PTHREAD_BARRIER_SERIAL_THREAD -1	PTHREAD_BARRIER_SERIAL_THREAD	-1
#define PTHREAD_ONCE_INIT 0	PTHREAD_ONCE_INIT	0
#define PTHREAD_CANCELED ((void *) -1)	PTHREAD_CANCELED	((void *) -1)
#define PTHREAD_CANCEL_ASYNCHRONOUS PTHREAD_CANCEL_ASYNCHRONOUS	PTHREAD_CANCEL_ASYNCHRONOUS	PTHREAD_CANCEL_ASYNCHRONOUS
#define PTHREAD_CANCEL_DEFERRED PTHREAD_CANCEL_DEFERRED	PTHREAD_CANCEL_DEFERRED	PTHREAD_CANCEL_DEFERRED
#define PTHREAD_CANCEL_DISABLE PTHREAD_CANCEL_DISABLE	PTHREAD_CANCEL_DISABLE	PTHREAD_CANCEL_DISABLE
#define PTHREAD_CANCEL_ENABLE PTHREAD_CANCEL_ENABLE	PTHREAD_CANCEL_ENABLE	PTHREAD_CANCEL_ENABLE
#define PTHREAD_COND_INITIALIZER { { {0}, {0}, {0, 0}, {0, 0}, 0, 0, {0, 0} } }	PTHREAD_COND_INITIALIZER	{ { {0}, {0}, {0, 0}, {0, 0}, 0, 0, {0, 0} } }
#define PTHREAD_PROCESS_SHARED PTHREAD_PROCESS_SHARED	PTHREAD_PROCESS_SHARED	PTHREAD_PROCESS_SHARED
#define PTHREAD_PROCESS_PRIVATE PTHREAD_PROCESS_PRIVATE	PTHREAD_PROCESS_PRIVATE	PTHREAD_PROCESS_PRIVATE
#define PTHREAD_SCOPE_PROCESS PTHREAD_SCOPE_PROCESS	PTHREAD_SCOPE_PROCESS	PTHREAD_SCOPE_PROCESS
#define PTHREAD_SCOPE_SYSTEM PTHREAD_SCOPE_SYSTEM	PTHREAD_SCOPE_SYSTEM	PTHREAD_SCOPE_SYSTEM
#define PTHREAD_EXPLICIT_SCHED PTHREAD_EXPLICIT_SCHED	PTHREAD_EXPLICIT_SCHED	PTHREAD_EXPLICIT_SCHED
#define PTHREAD_INHERIT_SCHED PTHREAD_INHERIT_SCHED	PTHREAD_INHERIT_SCHED	PTHREAD_INHERIT_SCHED
#define PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP { { 0, 0, 0, 0, 0, 0, 0, 0, __PTHREAD_RWLOCK_ELISION_EXTRA, 0, PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP } }	PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP	{ { 0, 0, 0, 0, 0, 0, 0, 0, __PTHREAD_RWLOCK_ELISION_EXTRA, 0, PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP } }
#define PTHREAD_RWLOCK_INITIALIZER { { 0, 0, 0, 0, 0, 0, 0, 0, __PTHREAD_RWLOCK_ELISION_EXTRA, 0, 0 } }	PTHREAD_RWLOCK_INITIALIZER	{ { 0, 0, 0, 0, 0, 0, 0, 0, __PTHREAD_RWLOCK_ELISION_EXTRA, 0, 0 } }
#define PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP { { 0, 0, 0, 0, PTHREAD_MUTEX_ADAPTIVE_NP, __PTHREAD_SPINS, { 0, 0 } } }	PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP	{ { 0, 0, 0, 0, PTHREAD_MUTEX_ADAPTIVE_NP, __PTHREAD_SPINS, { 0, 0 } } }
#define PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP { { 0, 0, 0, 0, PTHREAD_MUTEX_ERRORCHECK_NP, __PTHREAD_SPINS, { 0, 0 } } }	PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP	{ { 0, 0, 0, 0, PTHREAD_MUTEX_ERRORCHECK_NP, __PTHREAD_SPINS, { 0, 0 } } }
#define PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP { { 0, 0, 0, 0, PTHREAD_MUTEX_RECURSIVE_NP, __PTHREAD_SPINS, { 0, 0 } } }	PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP	{ { 0, 0, 0, 0, PTHREAD_MUTEX_RECURSIVE_NP, __PTHREAD_SPINS, { 0, 0 } } }
#define PTHREAD_MUTEX_INITIALIZER { { 0, 0, 0, 0, 0, __PTHREAD_SPINS, { 0, 0 } } }	PTHREAD_MUTEX_INITIALIZER	{ { 0, 0, 0, 0, 0, __PTHREAD_SPINS, { 0, 0 } } }
#define PTHREAD_CREATE_DETACHED PTHREAD_CREATE_DETACHED	PTHREAD_CREATE_DETACHED	PTHREAD_CREATE_DETACHED
#define PTHREAD_CREATE_JOINABLE PTHREAD_CREATE_JOINABLE	PTHREAD_CREATE_JOINABLE	PTHREAD_CREATE_JOINABLE
#ifndef _PTHREAD_H	_PTHREAD_H	
#if defined __USE_UNIX98 || defined __USE_XOPEN2K8	defined __USE_UNIX98 || defined __USE_XOPEN2K8	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_XOPEN2K	__USE_XOPEN2K	
#if defined __USE_POSIX199506 || defined __USE_UNIX98	defined __USE_POSIX199506 || defined __USE_UNIX98	
#if __PTHREAD_MUTEX_HAVE_PREV	__PTHREAD_MUTEX_HAVE_PREV	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_GNU	__USE_GNU	
#if defined __USE_UNIX98 || defined __USE_XOPEN2K	defined __USE_UNIX98 || defined __USE_XOPEN2K	
#ifndef __PTHREAD_RWLOCK_INT_FLAGS_SHARED	__PTHREAD_RWLOCK_INT_FLAGS_SHARED	
#if __WORDSIZE == 64	__WORDSIZE == 64	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __PTHREAD_RWLOCK_INT_FLAGS_SHARED	__PTHREAD_RWLOCK_INT_FLAGS_SHARED	
#if __BYTE_ORDER == __LITTLE_ENDIAN	__BYTE_ORDER == __LITTLE_ENDIAN	
#ifdef __USE_XOPEN2K	__USE_XOPEN2K	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_XOPEN2K	__USE_XOPEN2K	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_UNIX98	__USE_UNIX98	
#ifdef __USE_GNU	__USE_GNU	
#ifndef __cleanup_fct_attribute	__cleanup_fct_attribute	
#if defined __GNUC__ && defined __EXCEPTIONS	defined __GNUC__ && defined __EXCEPTIONS	
#ifdef __cplusplus	__cplusplus	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_GNU	__USE_GNU	
#ifndef SHARED	SHARED	
#ifdef __USE_XOPEN2K	__USE_XOPEN2K	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
#ifdef __USE_GNU	__USE_GNU	
#if defined __USE_UNIX98 || defined __USE_XOPEN2K8	defined __USE_UNIX98 || defined __USE_XOPEN2K8	
#ifdef __USE_XOPEN2K	__USE_XOPEN2K	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_GNU	__USE_GNU	
#if defined __USE_UNIX98 || defined __USE_XOPEN2K	defined __USE_UNIX98 || defined __USE_XOPEN2K	
#ifdef __USE_XOPEN2K	__USE_XOPEN2K	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_XOPEN2K	__USE_XOPEN2K	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_XOPEN2K	__USE_XOPEN2K	
#ifdef __USE_XOPEN2K	__USE_XOPEN2K	
#ifdef __USE_XOPEN2K	__USE_XOPEN2K	
#ifdef __USE_EXTERN_INLINES	__USE_EXTERN_INLINES	
#include <pthread.h>	<pthread.h>	
#define __gthrw_(name) __gthrw_ ## name	__gthrw_(name)	__gthrw_ ## name
#define GTHR_ACTIVE_PROXY __gthrw_(__pthread_key_create)	GTHR_ACTIVE_PROXY	__gthrw_(__pthread_key_create)
#define __gthrw(name) __gthrw2(__gthrw_ ## name,name,name)	__gthrw(name)	__gthrw2(__gthrw_ ## name,name,name)
#define __gthrw2(name,name2,type) static __typeof(type) name __attribute__ ((__weakref__(#name2), __copy__ (type))); __gthrw_pragma(weak type)	__gthrw2(name,name2,type)	static __typeof(type) name __attribute__ ((__weakref__(#name2), __copy__ (type))); __gthrw_pragma(weak type)
#define __gthrw_pragma(pragma)	__gthrw_pragma(pragma)	
#define __GTHREAD_TIME_INIT {0,0}	__GTHREAD_TIME_INIT	{0,0}
#define __GTHREAD_COND_INIT PTHREAD_COND_INITIALIZER	__GTHREAD_COND_INIT	PTHREAD_COND_INITIALIZER
#define __GTHREAD_RECURSIVE_MUTEX_INIT PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP	__GTHREAD_RECURSIVE_MUTEX_INIT	PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
#define __GTHREAD_ONCE_INIT PTHREAD_ONCE_INIT	__GTHREAD_ONCE_INIT	PTHREAD_ONCE_INIT
#define __GTHREAD_MUTEX_INIT_FUNCTION __gthread_mutex_init_function	__GTHREAD_MUTEX_INIT_FUNCTION	__gthread_mutex_init_function
#define __GTHREAD_MUTEX_INIT PTHREAD_MUTEX_INITIALIZER	__GTHREAD_MUTEX_INIT	PTHREAD_MUTEX_INITIALIZER
#define __GTHREAD_HAS_COND 1	__GTHREAD_HAS_COND	1
#define __GTHREADS_CXX0X 1	__GTHREADS_CXX0X	1
#define __GTHREADS 1	__GTHREADS	1
#define _GLIBCXX_GCC_GTHR_POSIX_H	_GLIBCXX_GCC_GTHR_POSIX_H	
#ifndef _GLIBCXX_GCC_GTHR_POSIX_H	_GLIBCXX_GCC_GTHR_POSIX_H	
#if ((defined(_LIBOBJC) || defined(_LIBOBJC_WEAK)) \	((defined(_LIBOBJC) || defined(_LIBOBJC_WEAK)) \	
#if defined(_POSIX_TIMEOUTS) && _POSIX_TIMEOUTS >= 0	defined(_POSIX_TIMEOUTS) && _POSIX_TIMEOUTS >= 0	
#if defined(PTHREAD_RECURSIVE_MUTEX_INITIALIZER)	defined(PTHREAD_RECURSIVE_MUTEX_INITIALIZER)	
#elif defined(PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP)	defined(PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP)	
#ifdef _GTHREAD_USE_MUTEX_INIT_FUNC	_GTHREAD_USE_MUTEX_INIT_FUNC	
#ifdef _GTHREAD_USE_RECURSIVE_MUTEX_INIT_FUNC	_GTHREAD_USE_RECURSIVE_MUTEX_INIT_FUNC	
#ifdef _GTHREAD_USE_COND_INIT_FUNC	_GTHREAD_USE_COND_INIT_FUNC	
#if __GXX_WEAK__ && _GLIBCXX_GTHREAD_USE_WEAK	__GXX_WEAK__ && _GLIBCXX_GTHREAD_USE_WEAK	
#ifndef __gthrw_pragma	__gthrw_pragma	
#ifndef __BIONIC__	__BIONIC__	
#if _GTHREAD_USE_MUTEX_TIMEDLOCK	_GTHREAD_USE_MUTEX_TIMEDLOCK	
#if defined(_LIBOBJC) || defined(_LIBOBJC_WEAK)	defined(_LIBOBJC) || defined(_LIBOBJC_WEAK)	
#ifdef _POSIX_PRIORITY_SCHEDULING	_POSIX_PRIORITY_SCHEDULING	
#ifdef _POSIX_THREAD_PRIORITY_SCHEDULING	_POSIX_THREAD_PRIORITY_SCHEDULING	
#ifdef _POSIX_THREAD_PRIORITY_SCHEDULING	_POSIX_THREAD_PRIORITY_SCHEDULING	
#if __GXX_WEAK__ && _GLIBCXX_GTHREAD_USE_WEAK	__GXX_WEAK__ && _GLIBCXX_GTHREAD_USE_WEAK	
#if defined(__FreeBSD__) || (defined(__sun) && defined(__svr4__))	defined(__FreeBSD__) || (defined(__sun) && defined(__svr4__))	
#ifdef __GLIBC__	__GLIBC__	
#elif defined (__BIONIC__)	defined (__BIONIC__)	
#if defined(__hppa__) && defined(__hpux__)	defined(__hppa__) && defined(__hpux__)	
#ifdef _LIBOBJC	_LIBOBJC	
#ifdef HAVE_SCHED_H	HAVE_SCHED_H	
#ifdef _POSIX_PRIORITY_SCHEDULING	_POSIX_PRIORITY_SCHEDULING	
#ifdef _POSIX_THREAD_PRIORITY_SCHEDULING	_POSIX_THREAD_PRIORITY_SCHEDULING	
#ifdef _POSIX_PRIORITY_SCHEDULING	_POSIX_PRIORITY_SCHEDULING	
#ifdef _POSIX_THREAD_PRIORITY_SCHEDULING	_POSIX_THREAD_PRIORITY_SCHEDULING	
#if _GTHREAD_USE_MUTEX_TIMEDLOCK	_GTHREAD_USE_MUTEX_TIMEDLOCK	
#if !defined( PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP) \	!defined( PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP) \	
#if _GTHREAD_USE_MUTEX_TIMEDLOCK	_GTHREAD_USE_MUTEX_TIMEDLOCK	
#ifdef _GTHREAD_USE_COND_INIT_FUNC	_GTHREAD_USE_COND_INIT_FUNC	
#define _GLIBCXX_GTHREAD_USE_WEAK 1	_GLIBCXX_GTHREAD_USE_WEAK	1
#include <bits/gthr-default.h>	<bits/gthr-default.h>	
#define _GLIBCXX_GCC_GTHR_H	_GLIBCXX_GCC_GTHR_H	
#ifndef _GLIBCXX_GCC_GTHR_H	_GLIBCXX_GCC_GTHR_H	
#ifndef _GLIBCXX_HIDE_EXPORTS	_GLIBCXX_HIDE_EXPORTS	
#pragma GCC visibility push(default)	GCC visibility push(default)	
#if __GXX_WEAK__	__GXX_WEAK__	
#ifdef __MINGW32__	__MINGW32__	
#ifndef _GLIBCXX_GTHREAD_USE_WEAK	_GLIBCXX_GTHREAD_USE_WEAK	
#ifndef _GLIBCXX_HIDE_EXPORTS	_GLIBCXX_HIDE_EXPORTS	
#pragma GCC visibility pop	GCC visibility pop	
#define _GLIBCXX_WRITE_MEM_BARRIER __atomic_thread_fence (__ATOMIC_RELEASE)	_GLIBCXX_WRITE_MEM_BARRIER	__atomic_thread_fence (__ATOMIC_RELEASE)
#define _GLIBCXX_READ_MEM_BARRIER __atomic_thread_fence (__ATOMIC_ACQUIRE)	_GLIBCXX_READ_MEM_BARRIER	__atomic_thread_fence (__ATOMIC_ACQUIRE)
#define _GLIBCXX_ATOMIC_WORD_H 1	_GLIBCXX_ATOMIC_WORD_H	1
#ifndef _GLIBCXX_ATOMIC_WORD_H	_GLIBCXX_ATOMIC_WORD_H	
#include <bits/atomic_word.h>	<bits/atomic_word.h>	
#include <bits/gthr.h>	<bits/gthr.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#define _GLIBCXX_ATOMICITY_H 1	_GLIBCXX_ATOMICITY_H	1
#ifndef _GLIBCXX_ATOMICITY_H	_GLIBCXX_ATOMICITY_H	
#pragma GCC system_header	GCC system_header	
#ifdef _GLIBCXX_ATOMIC_BUILTINS	_GLIBCXX_ATOMIC_BUILTINS	
#ifdef __GTHREADS	__GTHREADS	
#ifdef __GTHREADS	__GTHREADS	
#ifndef _GLIBCXX_READ_MEM_BARRIER	_GLIBCXX_READ_MEM_BARRIER	
#ifndef _GLIBCXX_WRITE_MEM_BARRIER	_GLIBCXX_WRITE_MEM_BARRIER	
#define __ATOMIC_ACQ_REL 4	__ATOMIC_ACQ_REL	4
#include <ext/type_traits.h>	<ext/type_traits.h>	
#include <bits/cpp_type_traits.h>	<bits/cpp_type_traits.h>	
#include <bits/functexcept.h>	<bits/functexcept.h>	
#include <bits/gthr.h>	<bits/gthr.h>	
#include <exception>	<exception>	
#define _CONCURRENCE_H 1	_CONCURRENCE_H	1
#ifndef _CONCURRENCE_H	_CONCURRENCE_H	
#pragma GCC system_header	GCC system_header	
#ifndef __GTHREADS	__GTHREADS	
#elif defined _GLIBCXX_HAVE_ATOMIC_LOCK_POLICY	defined _GLIBCXX_HAVE_ATOMIC_LOCK_POLICY	
#ifdef __GTHREAD_HAS_COND	__GTHREAD_HAS_COND	
#if __GTHREADS && defined __GTHREAD_MUTEX_INIT	__GTHREADS && defined __GTHREAD_MUTEX_INIT	
#if __GTHREADS && ! defined __GTHREAD_MUTEX_INIT	__GTHREADS && ! defined __GTHREAD_MUTEX_INIT	
#if __GTHREADS && ! defined __GTHREAD_MUTEX_INIT	__GTHREADS && ! defined __GTHREAD_MUTEX_INIT	
#if __GTHREADS	__GTHREADS	
#if __GTHREADS	__GTHREADS	
#if __GTHREADS && defined __GTHREAD_RECURSIVE_MUTEX_INIT	__GTHREADS && defined __GTHREAD_RECURSIVE_MUTEX_INIT	
#if __GTHREADS && ! defined __GTHREAD_RECURSIVE_MUTEX_INIT	__GTHREADS && ! defined __GTHREAD_RECURSIVE_MUTEX_INIT	
#if __GTHREADS && ! defined __GTHREAD_RECURSIVE_MUTEX_INIT	__GTHREADS && ! defined __GTHREAD_RECURSIVE_MUTEX_INIT	
#if __GTHREADS	__GTHREADS	
#if __GTHREADS	__GTHREADS	
#ifdef __GTHREAD_HAS_COND	__GTHREAD_HAS_COND	
#if __GTHREADS && defined __GTHREAD_COND_INIT	__GTHREADS && defined __GTHREAD_COND_INIT	
#if __GTHREADS && ! defined __GTHREAD_COND_INIT	__GTHREADS && ! defined __GTHREAD_COND_INIT	
#if __GTHREADS && ! defined __GTHREAD_COND_INIT	__GTHREADS && ! defined __GTHREAD_COND_INIT	
#if __GTHREADS	__GTHREADS	
#if __GTHREADS	__GTHREADS	
#if __GTHREADS	__GTHREADS	
#define _BACKWARD_BINDERS_H 1	_BACKWARD_BINDERS_H	1
#ifndef _BACKWARD_BINDERS_H	_BACKWARD_BINDERS_H	
#pragma GCC diagnostic push	GCC diagnostic push	
"#pragma GCC diagnostic ignored ""-Wdeprecated-declarations"""	"GCC diagnostic ignored ""-Wdeprecated-declarations"""	
#pragma GCC diagnostic pop	GCC diagnostic pop	
#include <backward/binders.h>	<backward/binders.h>	
#define _STL_FUNCTION_H 1	_STL_FUNCTION_H	1
#ifndef _STL_FUNCTION_H	_STL_FUNCTION_H	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus >= 201402L	__cplusplus >= 201402L	
#ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED	_GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED	
#if __cplusplus >= 201402L	__cplusplus >= 201402L	
#ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED	_GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED	
#if __cplusplus >= 201402L	__cplusplus >= 201402L	
#ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED	_GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED	
#if __cplusplus >= 201402L	__cplusplus >= 201402L	
#ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED	_GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED	
#if __cplusplus >= 201402L	__cplusplus >= 201402L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if (__cplusplus < 201103L) || _GLIBCXX_USE_DEPRECATED	(__cplusplus < 201103L) || _GLIBCXX_USE_DEPRECATED	
#define __UINTPTR_TYPE__ long unsigned int	__UINTPTR_TYPE__	long unsigned int
#include <bits/move.h>	<bits/move.h>	
#include <type_traits>	<type_traits>	
#define _USES_ALLOCATOR_H 1	_USES_ALLOCATOR_H	1
#ifndef _USES_ALLOCATOR_H	_USES_ALLOCATOR_H	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus >= 201402L	__cplusplus >= 201402L	
#if __cplusplus >= 201402L	__cplusplus >= 201402L	
#define _STL_RELOPS_H 1	_STL_RELOPS_H	1
#ifndef _STL_RELOPS_H	_STL_RELOPS_H	
#include <bits/c++config.h>	<bits/c++config.h>	
#define _INITIALIZER_LIST	_INITIALIZER_LIST	
#ifndef _INITIALIZER_LIST	_INITIALIZER_LIST	
#pragma GCC system_header	GCC system_header	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#pragma GCC visibility push(default)	GCC visibility push(default)	
#pragma GCC visibility pop	GCC visibility pop	
#include <initializer_list>	<initializer_list>	
#include <bits/move.h>	<bits/move.h>	
#include <type_traits>	<type_traits>	
#include <bits/stl_pair.h>	<bits/stl_pair.h>	
#include <bits/stl_relops.h>	<bits/stl_relops.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#define _GLIBCXX_UTILITY 1	_GLIBCXX_UTILITY	1
#ifndef _GLIBCXX_UTILITY	_GLIBCXX_UTILITY	
#pragma GCC system_header	GCC system_header	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201402L	__cplusplus >= 201402L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#ifdef __has_builtin	__has_builtin	
#if __has_builtin(__make_integer_seq)	__has_builtin(__make_integer_seq)	
#if _GLIBCXX_USE_MAKE_INTEGER_SEQ	_GLIBCXX_USE_MAKE_INTEGER_SEQ	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if _GLIBCXX_USE_MAKE_INTEGER_SEQ	_GLIBCXX_USE_MAKE_INTEGER_SEQ	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#define __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION	__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION	
#include <bits/types.h>	<bits/types.h>	
#define _BITS_STDINT_INTN_H 1	_BITS_STDINT_INTN_H	1
#ifndef _BITS_STDINT_INTN_H	_BITS_STDINT_INTN_H	
#include <bits/types.h>	<bits/types.h>	
#define _BITS_STDINT_UINTN_H 1	_BITS_STDINT_UINTN_H	1
#ifndef _BITS_STDINT_UINTN_H	_BITS_STDINT_UINTN_H	
#include <bits/stdint-uintn.h>	<bits/stdint-uintn.h>	
#include <bits/stdint-intn.h>	<bits/stdint-intn.h>	
#include <bits/wordsize.h>	<bits/wordsize.h>	
#include <bits/wchar.h>	<bits/wchar.h>	
#include <bits/types.h>	<bits/types.h>	
#include <bits/libc-header-start.h>	<bits/libc-header-start.h>	
#define WINT_WIDTH 32	WINT_WIDTH	32
#define WCHAR_WIDTH 32	WCHAR_WIDTH	32
#define SIZE_WIDTH __WORDSIZE	SIZE_WIDTH	__WORDSIZE
#define SIG_ATOMIC_WIDTH 32	SIG_ATOMIC_WIDTH	32
#define PTRDIFF_WIDTH __WORDSIZE	PTRDIFF_WIDTH	__WORDSIZE
#define UINTMAX_WIDTH 64	UINTMAX_WIDTH	64
#define INTMAX_WIDTH 64	INTMAX_WIDTH	64
#define UINTPTR_WIDTH __WORDSIZE	UINTPTR_WIDTH	__WORDSIZE
#define INTPTR_WIDTH __WORDSIZE	INTPTR_WIDTH	__WORDSIZE
#define UINT_FAST64_WIDTH 64	UINT_FAST64_WIDTH	64
#define INT_FAST64_WIDTH 64	INT_FAST64_WIDTH	64
#define UINT_FAST32_WIDTH __WORDSIZE	UINT_FAST32_WIDTH	__WORDSIZE
#define INT_FAST32_WIDTH __WORDSIZE	INT_FAST32_WIDTH	__WORDSIZE
#define UINT_FAST16_WIDTH __WORDSIZE	UINT_FAST16_WIDTH	__WORDSIZE
#define INT_FAST16_WIDTH __WORDSIZE	INT_FAST16_WIDTH	__WORDSIZE
#define UINT_FAST8_WIDTH 8	UINT_FAST8_WIDTH	8
#define INT_FAST8_WIDTH 8	INT_FAST8_WIDTH	8
#define UINT_LEAST64_WIDTH 64	UINT_LEAST64_WIDTH	64
#define INT_LEAST64_WIDTH 64	INT_LEAST64_WIDTH	64
#define UINT_LEAST32_WIDTH 32	UINT_LEAST32_WIDTH	32
#define INT_LEAST32_WIDTH 32	INT_LEAST32_WIDTH	32
#define UINT_LEAST16_WIDTH 16	UINT_LEAST16_WIDTH	16
#define INT_LEAST16_WIDTH 16	INT_LEAST16_WIDTH	16
#define UINT_LEAST8_WIDTH 8	UINT_LEAST8_WIDTH	8
#define INT_LEAST8_WIDTH 8	INT_LEAST8_WIDTH	8
#define UINT64_WIDTH 64	UINT64_WIDTH	64
#define INT64_WIDTH 64	INT64_WIDTH	64
#define UINT32_WIDTH 32	UINT32_WIDTH	32
#define INT32_WIDTH 32	INT32_WIDTH	32
#define UINT16_WIDTH 16	UINT16_WIDTH	16
#define INT16_WIDTH 16	INT16_WIDTH	16
#define UINT8_WIDTH 8	UINT8_WIDTH	8
#define INT8_WIDTH 8	INT8_WIDTH	8
#define UINTMAX_C(c) c ## UL	UINTMAX_C(c)	c ## UL
#define INTMAX_C(c) c ## L	INTMAX_C(c)	c ## L
#define UINT64_C(c) c ## UL	UINT64_C(c)	c ## UL
#define UINT32_C(c) c ## U	UINT32_C(c)	c ## U
#define UINT16_C(c) c	UINT16_C(c)	c
#define UINT8_C(c) c	UINT8_C(c)	c
#define INT64_C(c) c ## L	INT64_C(c)	c ## L
#define INT32_C(c) c	INT32_C(c)	c
#define INT16_C(c) c	INT16_C(c)	c
#define INT8_C(c) c	INT8_C(c)	c
#define WINT_MAX (4294967295u)	WINT_MAX	(4294967295u)
#define WINT_MIN (0u)	WINT_MIN	(0u)
#define SIZE_MAX (18446744073709551615UL)	SIZE_MAX	(18446744073709551615UL)
#define SIG_ATOMIC_MAX (2147483647)	SIG_ATOMIC_MAX	(2147483647)
#define SIG_ATOMIC_MIN (-2147483647-1)	SIG_ATOMIC_MIN	(-2147483647-1)
#define PTRDIFF_MAX (9223372036854775807L)	PTRDIFF_MAX	(9223372036854775807L)
#define PTRDIFF_MIN (-9223372036854775807L-1)	PTRDIFF_MIN	(-9223372036854775807L-1)
#define UINTMAX_MAX (__UINT64_C(18446744073709551615))	UINTMAX_MAX	(__UINT64_C(18446744073709551615))
#define INTMAX_MAX (__INT64_C(9223372036854775807))	INTMAX_MAX	(__INT64_C(9223372036854775807))
#define INTMAX_MIN (-__INT64_C(9223372036854775807)-1)	INTMAX_MIN	(-__INT64_C(9223372036854775807)-1)
#define UINTPTR_MAX (18446744073709551615UL)	UINTPTR_MAX	(18446744073709551615UL)
#define INTPTR_MAX (9223372036854775807L)	INTPTR_MAX	(9223372036854775807L)
#define INTPTR_MIN (-9223372036854775807L-1)	INTPTR_MIN	(-9223372036854775807L-1)
#define UINT_FAST64_MAX (__UINT64_C(18446744073709551615))	UINT_FAST64_MAX	(__UINT64_C(18446744073709551615))
#define UINT_FAST32_MAX (18446744073709551615UL)	UINT_FAST32_MAX	(18446744073709551615UL)
#define UINT_FAST16_MAX (18446744073709551615UL)	UINT_FAST16_MAX	(18446744073709551615UL)
#define UINT_FAST8_MAX (255)	UINT_FAST8_MAX	(255)
#define INT_FAST64_MAX (__INT64_C(9223372036854775807))	INT_FAST64_MAX	(__INT64_C(9223372036854775807))
#define INT_FAST32_MAX (9223372036854775807L)	INT_FAST32_MAX	(9223372036854775807L)
#define INT_FAST16_MAX (9223372036854775807L)	INT_FAST16_MAX	(9223372036854775807L)
#define INT_FAST8_MAX (127)	INT_FAST8_MAX	(127)
#define INT_FAST64_MIN (-__INT64_C(9223372036854775807)-1)	INT_FAST64_MIN	(-__INT64_C(9223372036854775807)-1)
#define INT_FAST32_MIN (-9223372036854775807L-1)	INT_FAST32_MIN	(-9223372036854775807L-1)
#define INT_FAST16_MIN (-9223372036854775807L-1)	INT_FAST16_MIN	(-9223372036854775807L-1)
#define INT_FAST8_MIN (-128)	INT_FAST8_MIN	(-128)
#define UINT_LEAST64_MAX (__UINT64_C(18446744073709551615))	UINT_LEAST64_MAX	(__UINT64_C(18446744073709551615))
#define UINT_LEAST32_MAX (4294967295U)	UINT_LEAST32_MAX	(4294967295U)
#define UINT_LEAST16_MAX (65535)	UINT_LEAST16_MAX	(65535)
#define UINT_LEAST8_MAX (255)	UINT_LEAST8_MAX	(255)
#define INT_LEAST64_MAX (__INT64_C(9223372036854775807))	INT_LEAST64_MAX	(__INT64_C(9223372036854775807))
#define INT_LEAST32_MAX (2147483647)	INT_LEAST32_MAX	(2147483647)
#define INT_LEAST16_MAX (32767)	INT_LEAST16_MAX	(32767)
#define INT_LEAST8_MAX (127)	INT_LEAST8_MAX	(127)
#define INT_LEAST64_MIN (-__INT64_C(9223372036854775807)-1)	INT_LEAST64_MIN	(-__INT64_C(9223372036854775807)-1)
#define INT_LEAST32_MIN (-2147483647-1)	INT_LEAST32_MIN	(-2147483647-1)
#define INT_LEAST16_MIN (-32767-1)	INT_LEAST16_MIN	(-32767-1)
#define INT_LEAST8_MIN (-128)	INT_LEAST8_MIN	(-128)
#define UINT64_MAX (__UINT64_C(18446744073709551615))	UINT64_MAX	(__UINT64_C(18446744073709551615))
#define UINT16_MAX (65535)	UINT16_MAX	(65535)
#define UINT8_MAX (255)	UINT8_MAX	(255)
#define INT64_MAX (__INT64_C(9223372036854775807))	INT64_MAX	(__INT64_C(9223372036854775807))
#define INT32_MAX (2147483647)	INT32_MAX	(2147483647)
#define INT16_MAX (32767)	INT16_MAX	(32767)
#define INT8_MAX (127)	INT8_MAX	(127)
#define INT64_MIN (-__INT64_C(9223372036854775807)-1)	INT64_MIN	(-__INT64_C(9223372036854775807)-1)
#define INT32_MIN (-2147483647-1)	INT32_MIN	(-2147483647-1)
#define INT16_MIN (-32767-1)	INT16_MIN	(-32767-1)
#define INT8_MIN (-128)	INT8_MIN	(-128)
#define __UINT64_C(c) c ## UL	__UINT64_C(c)	c ## UL
#define __INT64_C(c) c ## L	__INT64_C(c)	c ## L
#define __intptr_t_defined	__intptr_t_defined	
#define _STDINT_H 1	_STDINT_H	1
#ifndef _STDINT_H	_STDINT_H	
#if __WORDSIZE == 64	__WORDSIZE == 64	
#if __WORDSIZE == 64	__WORDSIZE == 64	
#if __WORDSIZE == 64	__WORDSIZE == 64	
#ifndef __intptr_t_defined	__intptr_t_defined	
#ifndef __intptr_t_defined	__intptr_t_defined	
#if __WORDSIZE == 64	__WORDSIZE == 64	
#if __WORDSIZE == 64	__WORDSIZE == 64	
#if __WORDSIZE == 64	__WORDSIZE == 64	
#if __WORDSIZE == 64	__WORDSIZE == 64	
#if __WORDSIZE == 64	__WORDSIZE == 64	
#if __WORDSIZE == 64	__WORDSIZE == 64	
#if __WORDSIZE32_PTRDIFF_LONG	__WORDSIZE32_PTRDIFF_LONG	
#if __WORDSIZE == 64	__WORDSIZE == 64	
#if __WORDSIZE32_SIZE_ULONG	__WORDSIZE32_SIZE_ULONG	
#ifndef WCHAR_MIN	WCHAR_MIN	
#if __WORDSIZE == 64	__WORDSIZE == 64	
#if __WORDSIZE == 64	__WORDSIZE == 64	
#if __WORDSIZE == 64	__WORDSIZE == 64	
#if __GLIBC_USE (IEC_60559_BFP_EXT)	__GLIBC_USE (IEC_60559_BFP_EXT)	
#include_next <stdint.h>	<stdint.h>	
#define _GCC_WRAP_STDINT_H	_GCC_WRAP_STDINT_H	
#define __STDC_CONSTANT_MACROS	__STDC_CONSTANT_MACROS	
#undef __STDC_CONSTANT_MACROS	__STDC_CONSTANT_MACROS	
#define __STDC_LIMIT_MACROS	__STDC_LIMIT_MACROS	
#undef __STDC_LIMIT_MACROS	__STDC_LIMIT_MACROS	
#ifndef _GCC_WRAP_STDINT_H	_GCC_WRAP_STDINT_H	
#if __STDC_HOSTED__	__STDC_HOSTED__	
#if defined __cplusplus && __cplusplus >= 201103L	defined __cplusplus && __cplusplus >= 201103L	
#define __STDC_HOSTED__ 1	__STDC_HOSTED__	1
#include <stdint.h>	<stdint.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#define _GLIBCXX_CSTDINT 1	_GLIBCXX_CSTDINT	1
#ifndef _GLIBCXX_CSTDINT	_GLIBCXX_CSTDINT	
#pragma GCC system_header	GCC system_header	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if _GLIBCXX_HAVE_STDINT_H	_GLIBCXX_HAVE_STDINT_H	
#ifdef _GLIBCXX_USE_C99_STDINT_TR1	_GLIBCXX_USE_C99_STDINT_TR1	
#include <cstdint>	<cstdint>	
#include <cwchar>	<cwchar>	
#include <bits/postypes.h>	<bits/postypes.h>	
#include <bits/stl_algobase.h>	<bits/stl_algobase.h>	
#define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))	_GLIBCXX_ALWAYS_INLINE	inline __attribute__((__always_inline__))
#define _CHAR_TRAITS_H 1	_CHAR_TRAITS_H	1
#ifndef _CHAR_TRAITS_H	_CHAR_TRAITS_H	
#pragma GCC system_header	GCC system_header	
#ifndef _GLIBCXX_ALWAYS_INLINE	_GLIBCXX_ALWAYS_INLINE	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED	_GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED	
#ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED	_GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#ifdef _GLIBCXX_USE_CHAR8_T	_GLIBCXX_USE_CHAR8_T	
#if __cplusplus > 201402	__cplusplus > 201402	
#if __cplusplus > 201402	__cplusplus > 201402	
#if __cplusplus > 201402	__cplusplus > 201402	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_USE_C99_STDINT_TR1	_GLIBCXX_USE_C99_STDINT_TR1	
#elif defined __UINT_LEAST16_TYPE__	defined __UINT_LEAST16_TYPE__	
#ifdef _GLIBCXX_USE_C99_STDINT_TR1	_GLIBCXX_USE_C99_STDINT_TR1	
#elif defined __UINT_LEAST32_TYPE__	defined __UINT_LEAST32_TYPE__	
#define __need_NULL	__need_NULL	
#define __LC_IDENTIFICATION 12	__LC_IDENTIFICATION	12
#define __LC_MEASUREMENT 11	__LC_MEASUREMENT	11
#define __LC_TELEPHONE 10	__LC_TELEPHONE	10
#define __LC_ADDRESS 9	__LC_ADDRESS	9
#define __LC_NAME 8	__LC_NAME	8
#define __LC_PAPER 7	__LC_PAPER	7
#define __LC_ALL 6	__LC_ALL	6
#define __LC_MESSAGES 5	__LC_MESSAGES	5
#define __LC_MONETARY 4	__LC_MONETARY	4
#define __LC_COLLATE 3	__LC_COLLATE	3
#define __LC_TIME 2	__LC_TIME	2
#define __LC_NUMERIC 1	__LC_NUMERIC	1
#define __LC_CTYPE 0	__LC_CTYPE	0
#define _BITS_LOCALE_H 1	_BITS_LOCALE_H	1
#if !defined _LOCALE_H && !defined _LANGINFO_H	!defined _LOCALE_H && !defined _LANGINFO_H	
#ifndef _BITS_LOCALE_H	_BITS_LOCALE_H	
#define _LOCALE_H 1	_LOCALE_H	1
#include <bits/types/locale_t.h>	<bits/types/locale_t.h>	
#include <bits/locale.h>	<bits/locale.h>	
#include <stddef.h>	<stddef.h>	
#include <features.h>	<features.h>	
#define LC_GLOBAL_LOCALE ((locale_t) -1L)	LC_GLOBAL_LOCALE	((locale_t) -1L)
#define LC_ALL_MASK (LC_CTYPE_MASK | LC_NUMERIC_MASK | LC_TIME_MASK | LC_COLLATE_MASK | LC_MONETARY_MASK | LC_MESSAGES_MASK | LC_PAPER_MASK | LC_NAME_MASK | LC_ADDRESS_MASK | LC_TELEPHONE_MASK | LC_MEASUREMENT_MASK | LC_IDENTIFICATION_MASK )	LC_ALL_MASK	(LC_CTYPE_MASK | LC_NUMERIC_MASK | LC_TIME_MASK | LC_COLLATE_MASK | LC_MONETARY_MASK | LC_MESSAGES_MASK | LC_PAPER_MASK | LC_NAME_MASK | LC_ADDRESS_MASK | LC_TELEPHONE_MASK | LC_MEASUREMENT_MASK | LC_IDENTIFICATION_MASK )
#define LC_IDENTIFICATION_MASK (1 << __LC_IDENTIFICATION)	LC_IDENTIFICATION_MASK	(1 << __LC_IDENTIFICATION)
#define LC_MEASUREMENT_MASK (1 << __LC_MEASUREMENT)	LC_MEASUREMENT_MASK	(1 << __LC_MEASUREMENT)
#define LC_TELEPHONE_MASK (1 << __LC_TELEPHONE)	LC_TELEPHONE_MASK	(1 << __LC_TELEPHONE)
#define LC_ADDRESS_MASK (1 << __LC_ADDRESS)	LC_ADDRESS_MASK	(1 << __LC_ADDRESS)
#define LC_NAME_MASK (1 << __LC_NAME)	LC_NAME_MASK	(1 << __LC_NAME)
#define LC_PAPER_MASK (1 << __LC_PAPER)	LC_PAPER_MASK	(1 << __LC_PAPER)
#define LC_MESSAGES_MASK (1 << __LC_MESSAGES)	LC_MESSAGES_MASK	(1 << __LC_MESSAGES)
#define LC_MONETARY_MASK (1 << __LC_MONETARY)	LC_MONETARY_MASK	(1 << __LC_MONETARY)
#define LC_COLLATE_MASK (1 << __LC_COLLATE)	LC_COLLATE_MASK	(1 << __LC_COLLATE)
#define LC_TIME_MASK (1 << __LC_TIME)	LC_TIME_MASK	(1 << __LC_TIME)
#define LC_NUMERIC_MASK (1 << __LC_NUMERIC)	LC_NUMERIC_MASK	(1 << __LC_NUMERIC)
#define LC_CTYPE_MASK (1 << __LC_CTYPE)	LC_CTYPE_MASK	(1 << __LC_CTYPE)
#define LC_IDENTIFICATION __LC_IDENTIFICATION	LC_IDENTIFICATION	__LC_IDENTIFICATION
#define LC_MEASUREMENT __LC_MEASUREMENT	LC_MEASUREMENT	__LC_MEASUREMENT
#define LC_TELEPHONE __LC_TELEPHONE	LC_TELEPHONE	__LC_TELEPHONE
#define LC_ADDRESS __LC_ADDRESS	LC_ADDRESS	__LC_ADDRESS
#define LC_NAME __LC_NAME	LC_NAME	__LC_NAME
#define LC_PAPER __LC_PAPER	LC_PAPER	__LC_PAPER
#define LC_ALL __LC_ALL	LC_ALL	__LC_ALL
#define LC_MESSAGES __LC_MESSAGES	LC_MESSAGES	__LC_MESSAGES
#define LC_MONETARY __LC_MONETARY	LC_MONETARY	__LC_MONETARY
#define LC_COLLATE __LC_COLLATE	LC_COLLATE	__LC_COLLATE
#define LC_TIME __LC_TIME	LC_TIME	__LC_TIME
#define LC_NUMERIC __LC_NUMERIC	LC_NUMERIC	__LC_NUMERIC
#define LC_CTYPE __LC_CTYPE	LC_CTYPE	__LC_CTYPE
#ifndef _LOCALE_H	_LOCALE_H	
#ifdef __USE_ISOC99	__USE_ISOC99	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
#include <locale.h>	<locale.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#undef localeconv	localeconv	
#undef setlocale	setlocale	
#define _GLIBCXX_CLOCALE 1	_GLIBCXX_CLOCALE	1
#pragma GCC system_header	GCC system_header	
#ifndef _GLIBCXX_CLOCALE	_GLIBCXX_CLOCALE	
#include <clocale>	<clocale>	
#define _GLIBCXX_NUM_CATEGORIES 6	_GLIBCXX_NUM_CATEGORIES	6
#define _GLIBCXX_C_LOCALE_GNU 1	_GLIBCXX_C_LOCALE_GNU	1
#define _GLIBCXX_CXX_LOCALE_H 1	_GLIBCXX_CXX_LOCALE_H	1
#ifndef _GLIBCXX_CXX_LOCALE_H	_GLIBCXX_CXX_LOCALE_H	
#pragma GCC system_header	GCC system_header	
#if __GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ > 2)	__GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ > 2)	
#if __GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ > 2)	__GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ > 2)	
#if _GLIBCXX_USE_C99_STDIO	_GLIBCXX_USE_C99_STDIO	
#if __GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ > 2)	__GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ > 2)	
#include <bits/types/locale_t.h>	<bits/types/locale_t.h>	
#include <endian.h>	<endian.h>	
#include <bits/types.h>	<bits/types.h>	
#include <features.h>	<features.h>	
#define _ISbit(bit) ((bit) < 8 ? ((1 << (bit)) << 8) : ((1 << (bit)) >> 8))	_ISbit(bit)	((bit) < 8 ? ((1 << (bit)) << 8) : ((1 << (bit)) >> 8))
#define __exctype_l(name) extern int name (int, locale_t) __THROW	__exctype_l(name)	extern int name (int, locale_t) __THROW
#define __isctype_l(c,type,locale) ((locale)->__ctype_b[(int) (c)] & (unsigned short int) type)	__isctype_l(c,type,locale)	((locale)->__ctype_b[(int) (c)] & (unsigned short int) type)
#define __tobody(c,f,a,args) (__extension__ ({ int __res; if (sizeof (c) > 1) { if (__builtin_constant_p (c)) { int __c = (c); __res = __c < -128 || __c > 255 ? __c : (a)[__c]; } else __res = f args; } else __res = (a)[(int) (c)]; __res; }))	__tobody(c,f,a,args)	(__extension__ ({ int __res; if (sizeof (c) > 1) { if (__builtin_constant_p (c)) { int __c = (c); __res = __c < -128 || __c > 255 ? __c : (a)[__c]; } else __res = f args; } else __res = (a)[(int) (c)]; __res; }))
#define __exctype(name) extern int name (int) __THROW	__exctype(name)	extern int name (int) __THROW
#define __toascii(c) ((c) & 0x7f)	__toascii(c)	((c) & 0x7f)
#define __isascii(c) (((c) & ~0x7f) == 0)	__isascii(c)	(((c) & ~0x7f) == 0)
#define __isctype_f(type) __extern_inline int is ## type (int __c) __THROW { return (*__ctype_b_loc ())[(int) (__c)] & (unsigned short int) _IS ## type; }	__isctype_f(type)	__extern_inline int is ## type (int __c) __THROW { return (*__ctype_b_loc ())[(int) (__c)] & (unsigned short int) _IS ## type; }
#define _CTYPE_H 1	_CTYPE_H	1
#ifndef _CTYPE_H	_CTYPE_H	
#ifndef _ISbit	_ISbit	
#if __BYTE_ORDER == __BIG_ENDIAN	__BYTE_ORDER == __BIG_ENDIAN	
#ifndef __cplusplus	__cplusplus	
#elif defined __USE_EXTERN_INLINES	defined __USE_EXTERN_INLINES	
#ifdef __USE_ISOC99	__USE_ISOC99	
#ifdef __USE_GNU	__USE_GNU	
#if defined __USE_MISC || defined __USE_XOPEN	defined __USE_MISC || defined __USE_XOPEN	
#if !defined __NO_CTYPE	!defined __NO_CTYPE	
#ifdef __isctype_f	__isctype_f	
#ifdef __USE_ISOC99	__USE_ISOC99	
#elif defined __isctype	defined __isctype	
#ifdef __USE_ISOC99	__USE_ISOC99	
#ifdef __USE_EXTERN_INLINES	__USE_EXTERN_INLINES	
#if __GNUC__ >= 2 && defined __OPTIMIZE__ && !defined __cplusplus	__GNUC__ >= 2 && defined __OPTIMIZE__ && !defined __cplusplus	
#if defined __USE_MISC || defined __USE_XOPEN	defined __USE_MISC || defined __USE_XOPEN	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
#if __GNUC__ >= 2 && defined __OPTIMIZE__ && !defined __cplusplus	__GNUC__ >= 2 && defined __OPTIMIZE__ && !defined __cplusplus	
#ifndef __NO_CTYPE	__NO_CTYPE	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_MISC	__USE_MISC	
#include <ctype.h>	<ctype.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#undef isblank	isblank	
#undef toupper	toupper	
#undef tolower	tolower	
#undef isxdigit	isxdigit	
#undef isupper	isupper	
#undef isspace	isspace	
#undef ispunct	ispunct	
#undef isprint	isprint	
#undef islower	islower	
#undef isgraph	isgraph	
#undef isdigit	isdigit	
#undef iscntrl	iscntrl	
#undef isalpha	isalpha	
#undef isalnum	isalnum	
#define _GLIBCXX_CCTYPE 1	_GLIBCXX_CCTYPE	1
#pragma GCC system_header	GCC system_header	
#ifndef _GLIBCXX_CCTYPE	_GLIBCXX_CCTYPE	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_USE_C99_CTYPE_TR1	_GLIBCXX_USE_C99_CTYPE_TR1	
#include <cctype>	<cctype>	
#include <iosfwd>	<iosfwd>	
#include <bits/c++locale.h>	<bits/c++locale.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#define _LOCALE_FWD_H 1	_LOCALE_FWD_H	1
#ifndef _LOCALE_FWD_H	_LOCALE_FWD_H	
#pragma GCC system_header	GCC system_header	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_USE_CHAR8_T	_GLIBCXX_USE_CHAR8_T	
#define _CXXABI_FORCED_H 1	_CXXABI_FORCED_H	1
#ifndef _CXXABI_FORCED_H	_CXXABI_FORCED_H	
#pragma GCC system_header	GCC system_header	
#pragma GCC visibility push(default)	GCC visibility push(default)	
#ifdef __cplusplus	__cplusplus	
#pragma GCC visibility pop	GCC visibility pop	
#include <bits/cxxabi_forced.h>	<bits/cxxabi_forced.h>	
#include <iosfwd>	<iosfwd>	
#define _OSTREAM_INSERT_H 1	_OSTREAM_INSERT_H	1
#ifndef _OSTREAM_INSERT_H	_OSTREAM_INSERT_H	
#pragma GCC system_header	GCC system_header	
#if _GLIBCXX_EXTERN_TEMPLATE	_GLIBCXX_EXTERN_TEMPLATE	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#include <initializer_list>	<initializer_list>	
#define _GLIBCXX_RANGE_ACCESS_H 1	_GLIBCXX_RANGE_ACCESS_H	1
#ifndef _GLIBCXX_RANGE_ACCESS_H	_GLIBCXX_RANGE_ACCESS_H	
#pragma GCC system_header	GCC system_header	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201402L	__cplusplus >= 201402L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#define __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION	__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION	
#define __need_NULL	__need_NULL	
#define __need_wchar_t	__need_wchar_t	
#define __need_size_t	__need_size_t	
#undef P_PGID	P_PGID	
#undef P_PID	P_PID	
#undef P_ALL	P_ALL	
#define __ENUM_IDTYPE_T 1	__ENUM_IDTYPE_T	1
#define __WCLONE 0x80000000	__WCLONE	0x80000000
#define __WALL 0x40000000	__WALL	0x40000000
#define __WNOTHREAD 0x20000000	__WNOTHREAD	0x20000000
#define WNOWAIT 0x01000000	WNOWAIT	0x01000000
#define WCONTINUED 8	WCONTINUED	8
#define WEXITED 4	WEXITED	4
#define WSTOPPED 2	WSTOPPED	2
#define WUNTRACED 2	WUNTRACED	2
#define WNOHANG 1	WNOHANG	1
#if !defined _SYS_WAIT_H && !defined _STDLIB_H	!defined _SYS_WAIT_H && !defined _STDLIB_H	
#if defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	
#if defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	
#ifndef __ENUM_IDTYPE_T	__ENUM_IDTYPE_T	
#define _STDLIB_H 1	_STDLIB_H	1
#define __WCOREFLAG 0x80	__WCOREFLAG	0x80
#define __W_CONTINUED 0xffff	__W_CONTINUED	0xffff
#define __W_STOPCODE(sig) ((sig) << 8 | 0x7f)	__W_STOPCODE(sig)	((sig) << 8 | 0x7f)
#define __W_EXITCODE(ret,sig) ((ret) << 8 | (sig))	__W_EXITCODE(ret,sig)	((ret) << 8 | (sig))
#define __WCOREDUMP(status) ((status) & __WCOREFLAG)	__WCOREDUMP(status)	((status) & __WCOREFLAG)
#define __WIFCONTINUED(status) ((status) == __W_CONTINUED)	__WIFCONTINUED(status)	((status) == __W_CONTINUED)
#define __WIFSTOPPED(status) (((status) & 0xff) == 0x7f)	__WIFSTOPPED(status)	(((status) & 0xff) == 0x7f)
#define __WIFSIGNALED(status) (((signed char) (((status) & 0x7f) + 1) >> 1) > 0)	__WIFSIGNALED(status)	(((signed char) (((status) & 0x7f) + 1) >> 1) > 0)
#define __WIFEXITED(status) (__WTERMSIG(status) == 0)	__WIFEXITED(status)	(__WTERMSIG(status) == 0)
#define __WSTOPSIG(status) __WEXITSTATUS(status)	__WSTOPSIG(status)	__WEXITSTATUS(status)
#define __WTERMSIG(status) ((status) & 0x7f)	__WTERMSIG(status)	((status) & 0x7f)
#define __WEXITSTATUS(status) (((status) & 0xff00) >> 8)	__WEXITSTATUS(status)	(((status) & 0xff00) >> 8)
#if !defined _SYS_WAIT_H && !defined _STDLIB_H	!defined _SYS_WAIT_H && !defined _STDLIB_H	
#ifdef WCONTINUED	WCONTINUED	
#define __need_size_t	__need_size_t	
#include <bits/wordsize.h>	<bits/wordsize.h>	
#define __FD_ISSET(d,set) ((__FDS_BITS (set)[__FD_ELT (d)] & __FD_MASK (d)) != 0)	__FD_ISSET(d,set)	((__FDS_BITS (set)[__FD_ELT (d)] & __FD_MASK (d)) != 0)
#define __FD_CLR(d,set) ((void) (__FDS_BITS (set)[__FD_ELT (d)] &= ~__FD_MASK (d)))	__FD_CLR(d,set)	((void) (__FDS_BITS (set)[__FD_ELT (d)] &= ~__FD_MASK (d)))
#define __FD_SET(d,set) ((void) (__FDS_BITS (set)[__FD_ELT (d)] |= __FD_MASK (d)))	__FD_SET(d,set)	((void) (__FDS_BITS (set)[__FD_ELT (d)] |= __FD_MASK (d)))
"#define __FD_ZERO(fdsp) do { int __d0, __d1; __asm__ __volatile__ (""cld; rep; "" __FD_ZERO_STOS : ""=c"" (__d0), ""=D"" (__d1) : ""a"" (0), ""0"" (sizeof (fd_set) / sizeof (__fd_mask)), ""1"" (&__FDS_BITS (fdsp)[0]) : ""memory""); } while (0)"	__FD_ZERO(fdsp)	"do { int __d0, __d1; __asm__ __volatile__ (""cld; rep; "" __FD_ZERO_STOS : ""=c"" (__d0), ""=D"" (__d1) : ""a"" (0), ""0"" (sizeof (fd_set) / sizeof (__fd_mask)), ""1"" (&__FDS_BITS (fdsp)[0]) : ""memory""); } while (0)"
"#define __FD_ZERO_STOS ""stosq"""	__FD_ZERO_STOS	"""stosq"""
#ifndef _SYS_SELECT_H	_SYS_SELECT_H	
#if defined __GNUC__ && __GNUC__ >= 2	defined __GNUC__ && __GNUC__ >= 2	
#if __WORDSIZE == 64	__WORDSIZE == 64	
#define _SYS_SELECT_H 1	_SYS_SELECT_H	1
#define _SIGSET_NWORDS (1024 / (8 * sizeof (unsigned long int)))	_SIGSET_NWORDS	(1024 / (8 * sizeof (unsigned long int)))
#define ____sigset_t_defined	____sigset_t_defined	
#ifndef ____sigset_t_defined	____sigset_t_defined	
#include <bits/types/__sigset_t.h>	<bits/types/__sigset_t.h>	
#define __sigset_t_defined 1	__sigset_t_defined	1
#ifndef __sigset_t_defined	__sigset_t_defined	
#define __FD_ELT(d) __extension__ ({ long int __d = (d); (__builtin_constant_p (__d) ? (0 <= __d && __d < __FD_SETSIZE ? (__d / __NFDBITS) : __fdelt_warn (__d)) : __fdelt_chk (__d)); })	__FD_ELT(d)	__extension__ ({ long int __d = (d); (__builtin_constant_p (__d) ? (0 <= __d && __d < __FD_SETSIZE ? (__d / __NFDBITS) : __fdelt_warn (__d)) : __fdelt_chk (__d)); })
#undef __FD_ELT	__FD_ELT	
#ifndef _SYS_SELECT_H	_SYS_SELECT_H	
#include <bits/select2.h>	<bits/select2.h>	
#include <bits/types/struct_timespec.h>	<bits/types/struct_timespec.h>	
#include <bits/types/struct_timeval.h>	<bits/types/struct_timeval.h>	
#include <bits/types/time_t.h>	<bits/types/time_t.h>	
#include <bits/types/sigset_t.h>	<bits/types/sigset_t.h>	
#include <bits/select.h>	<bits/select.h>	
#include <bits/types.h>	<bits/types.h>	
#include <features.h>	<features.h>	
#define __NFDBITS (8 * (int) sizeof (__fd_mask))	__NFDBITS	(8 * (int) sizeof (__fd_mask))
#define FD_ZERO(fdsetp) __FD_ZERO (fdsetp)	FD_ZERO(fdsetp)	__FD_ZERO (fdsetp)
#define FD_ISSET(fd,fdsetp) __FD_ISSET (fd, fdsetp)	FD_ISSET(fd,fdsetp)	__FD_ISSET (fd, fdsetp)
#define FD_CLR(fd,fdsetp) __FD_CLR (fd, fdsetp)	FD_CLR(fd,fdsetp)	__FD_CLR (fd, fdsetp)
#define FD_SET(fd,fdsetp) __FD_SET (fd, fdsetp)	FD_SET(fd,fdsetp)	__FD_SET (fd, fdsetp)
#define NFDBITS __NFDBITS	NFDBITS	__NFDBITS
#define FD_SETSIZE __FD_SETSIZE	FD_SETSIZE	__FD_SETSIZE
#define __FDS_BITS(set) ((set)->fds_bits)	__FDS_BITS(set)	((set)->fds_bits)
#define __FD_MASK(d) ((__fd_mask) (1UL << ((d) % __NFDBITS)))	__FD_MASK(d)	((__fd_mask) (1UL << ((d) % __NFDBITS)))
#define __FD_ELT(d) ((d) / __NFDBITS)	__FD_ELT(d)	((d) / __NFDBITS)
#undef __NFDBITS	__NFDBITS	
#ifndef _SYS_SELECT_H	_SYS_SELECT_H	
#ifdef __USE_XOPEN2K	__USE_XOPEN2K	
#ifndef __suseconds_t_defined	__suseconds_t_defined	
#ifdef __USE_XOPEN	__USE_XOPEN	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_XOPEN2K	__USE_XOPEN2K	
#if __USE_FORTIFY_LEVEL > 0 && defined __GNUC__	__USE_FORTIFY_LEVEL > 0 && defined __GNUC__	
#define __suseconds_t_defined	__suseconds_t_defined	
#include <bits/pthreadtypes.h>	<bits/pthreadtypes.h>	
#include <sys/select.h>	<sys/select.h>	
#include <endian.h>	<endian.h>	
#include <bits/stdint-intn.h>	<bits/stdint-intn.h>	
#include <stddef.h>	<stddef.h>	
#include <bits/types/timer_t.h>	<bits/types/timer_t.h>	
#include <bits/types/time_t.h>	<bits/types/time_t.h>	
#include <bits/types/clockid_t.h>	<bits/types/clockid_t.h>	
#include <bits/types/clock_t.h>	<bits/types/clock_t.h>	
#include <bits/types.h>	<bits/types.h>	
#include <features.h>	<features.h>	
#define __fsfilcnt_t_defined	__fsfilcnt_t_defined	
#define __fsblkcnt_t_defined	__fsblkcnt_t_defined	
#define __blkcnt_t_defined	__blkcnt_t_defined	
#define __blksize_t_defined	__blksize_t_defined	
#define __BIT_TYPES_DEFINED__ 1	__BIT_TYPES_DEFINED__	1
#define __useconds_t_defined	__useconds_t_defined	
#define __key_t_defined	__key_t_defined	
#define __daddr_t_defined	__daddr_t_defined	
#define __ssize_t_defined	__ssize_t_defined	
#define __id_t_defined	__id_t_defined	
#define __off64_t_defined	__off64_t_defined	
#define __off_t_defined	__off_t_defined	
#define __uid_t_defined	__uid_t_defined	
#define __nlink_t_defined	__nlink_t_defined	
#define __mode_t_defined	__mode_t_defined	
#define __gid_t_defined	__gid_t_defined	
#define __dev_t_defined	__dev_t_defined	
#define __ino64_t_defined	__ino64_t_defined	
#define __ino_t_defined	__ino_t_defined	
#define __u_char_defined	__u_char_defined	
#define _SYS_TYPES_H 1	_SYS_TYPES_H	1
#ifndef _SYS_TYPES_H	_SYS_TYPES_H	
#ifdef __USE_MISC	__USE_MISC	
#ifndef __u_char_defined	__u_char_defined	
#ifndef __ino_t_defined	__ino_t_defined	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#if defined __USE_LARGEFILE64 && !defined __ino64_t_defined	defined __USE_LARGEFILE64 && !defined __ino64_t_defined	
#ifndef __dev_t_defined	__dev_t_defined	
#ifndef __gid_t_defined	__gid_t_defined	
#ifndef __mode_t_defined	__mode_t_defined	
#ifndef __nlink_t_defined	__nlink_t_defined	
#ifndef __uid_t_defined	__uid_t_defined	
#ifndef __off_t_defined	__off_t_defined	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#if defined __USE_LARGEFILE64 && !defined __off64_t_defined	defined __USE_LARGEFILE64 && !defined __off64_t_defined	
#ifndef __pid_t_defined	__pid_t_defined	
#if (defined __USE_XOPEN || defined __USE_XOPEN2K8) \	(defined __USE_XOPEN || defined __USE_XOPEN2K8) \	
#ifndef __ssize_t_defined	__ssize_t_defined	
#ifdef __USE_MISC	__USE_MISC	
#ifndef __daddr_t_defined	__daddr_t_defined	
#if (defined __USE_MISC || defined __USE_XOPEN) && !defined __key_t_defined	(defined __USE_MISC || defined __USE_XOPEN) && !defined __key_t_defined	
#if defined __USE_XOPEN || defined __USE_XOPEN2K8	defined __USE_XOPEN || defined __USE_XOPEN2K8	
#ifdef __USE_XOPEN	__USE_XOPEN	
#ifndef __useconds_t_defined	__useconds_t_defined	
#ifndef __suseconds_t_defined	__suseconds_t_defined	
#ifdef __USE_MISC	__USE_MISC	
#if __GNUC_PREREQ (2, 7)	__GNUC_PREREQ (2, 7)	
#ifdef __USE_MISC	__USE_MISC	
#if (defined __USE_UNIX98 || defined __USE_XOPEN2K8) \	(defined __USE_UNIX98 || defined __USE_XOPEN2K8) \	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifndef __blkcnt_t_defined	__blkcnt_t_defined	
#ifndef __fsblkcnt_t_defined	__fsblkcnt_t_defined	
#ifndef __fsfilcnt_t_defined	__fsfilcnt_t_defined	
#ifndef __blkcnt_t_defined	__blkcnt_t_defined	
#ifndef __fsblkcnt_t_defined	__fsblkcnt_t_defined	
#ifndef __fsfilcnt_t_defined	__fsfilcnt_t_defined	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#if defined __USE_POSIX199506 || defined __USE_UNIX98	defined __USE_POSIX199506 || defined __USE_UNIX98	
#define __need_size_t	__need_size_t	
#include <stddef.h>	<stddef.h>	
#include <features.h>	<features.h>	
#define alloca(size) __builtin_alloca (size)	alloca(size)	__builtin_alloca (size)
#undef alloca	alloca	
#define _ALLOCA_H 1	_ALLOCA_H	1
#ifndef _ALLOCA_H	_ALLOCA_H	
#ifdef __GNUC__	__GNUC__	
#ifndef _STDLIB_H	_STDLIB_H	
#ifdef __USE_EXTERN_INLINES	__USE_EXTERN_INLINES	
#define __STDLIB_MB_LEN_MAX 16	__STDLIB_MB_LEN_MAX	16
#ifndef _STDLIB_H	_STDLIB_H	
#if defined _LIBC_LIMITS_H_ && defined PATH_MAX	defined _LIBC_LIMITS_H_ && defined PATH_MAX	
#if defined MB_LEN_MAX && MB_LEN_MAX != __STDLIB_MB_LEN_MAX	defined MB_LEN_MAX && MB_LEN_MAX != __STDLIB_MB_LEN_MAX	
#include <bits/stdlib.h>	<bits/stdlib.h>	
#include <bits/stdlib-float.h>	<bits/stdlib-float.h>	
#include <bits/stdlib-bsearch.h>	<bits/stdlib-bsearch.h>	
#include <alloca.h>	<alloca.h>	
#include <sys/types.h>	<sys/types.h>	
#include <bits/types/locale_t.h>	<bits/types/locale_t.h>	
#include <bits/floatn.h>	<bits/floatn.h>	
#include <bits/waitstatus.h>	<bits/waitstatus.h>	
#include <bits/waitflags.h>	<bits/waitflags.h>	
#include <stddef.h>	<stddef.h>	
#include <bits/libc-header-start.h>	<bits/libc-header-start.h>	
#define __COMPAR_FN_T	__COMPAR_FN_T	
#define MB_CUR_MAX (__ctype_get_mb_cur_max ())	MB_CUR_MAX	(__ctype_get_mb_cur_max ())
#define EXIT_SUCCESS 0	EXIT_SUCCESS	0
#define EXIT_FAILURE 1	EXIT_FAILURE	1
#define RAND_MAX 2147483647	RAND_MAX	2147483647
#define __lldiv_t_defined 1	__lldiv_t_defined	1
#define __ldiv_t_defined 1	__ldiv_t_defined	1
#define WIFCONTINUED(status) __WIFCONTINUED (status)	WIFCONTINUED(status)	__WIFCONTINUED (status)
#define WIFSTOPPED(status) __WIFSTOPPED (status)	WIFSTOPPED(status)	__WIFSTOPPED (status)
#define WIFSIGNALED(status) __WIFSIGNALED (status)	WIFSIGNALED(status)	__WIFSIGNALED (status)
#define WIFEXITED(status) __WIFEXITED (status)	WIFEXITED(status)	__WIFEXITED (status)
#define WSTOPSIG(status) __WSTOPSIG (status)	WSTOPSIG(status)	__WSTOPSIG (status)
#define WTERMSIG(status) __WTERMSIG (status)	WTERMSIG(status)	__WTERMSIG (status)
#define WEXITSTATUS(status) __WEXITSTATUS (status)	WEXITSTATUS(status)	__WEXITSTATUS (status)
#ifndef _STDLIB_H	_STDLIB_H	
#if (defined __USE_XOPEN || defined __USE_XOPEN2K8) && !defined _SYS_WAIT_H	(defined __USE_XOPEN || defined __USE_XOPEN2K8) && !defined _SYS_WAIT_H	
#ifdef __WIFCONTINUED	__WIFCONTINUED	
#ifndef __ldiv_t_defined	__ldiv_t_defined	
#if defined __USE_ISOC99 && !defined __lldiv_t_defined	defined __USE_ISOC99 && !defined __lldiv_t_defined	
#ifdef __USE_ISOC99	__USE_ISOC99	
#ifdef __USE_ISOC99	__USE_ISOC99	
#if __HAVE_FLOAT16 && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT16 && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_FLOAT32 && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT32 && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_FLOAT64 && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT64 && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_FLOAT128 && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT128 && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_FLOAT32X && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT32X && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_FLOAT64X && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT64X && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_FLOAT128X && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT128X && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_ISOC99	__USE_ISOC99	
#if __GLIBC_USE (IEC_60559_BFP_EXT)	__GLIBC_USE (IEC_60559_BFP_EXT)	
#if __HAVE_FLOAT16 && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT16 && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_FLOAT32 && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT32 && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_FLOAT64 && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT64 && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_FLOAT128 && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT128 && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_FLOAT32X && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT32X && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_FLOAT64X && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT64X && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_FLOAT128X && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT128X && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#ifdef __USE_GNU	__USE_GNU	
#if __HAVE_FLOAT16	__HAVE_FLOAT16	
#if __HAVE_FLOAT32	__HAVE_FLOAT32	
#if __HAVE_FLOAT64	__HAVE_FLOAT64	
#if __HAVE_FLOAT128	__HAVE_FLOAT128	
#if __HAVE_FLOAT32X	__HAVE_FLOAT32X	
#if __HAVE_FLOAT64X	__HAVE_FLOAT64X	
#if __HAVE_FLOAT128X	__HAVE_FLOAT128X	
#ifdef __USE_EXTERN_INLINES	__USE_EXTERN_INLINES	
#ifdef __USE_ISOC99	__USE_ISOC99	
#if defined __USE_MISC || defined __USE_XOPEN_EXTENDED	defined __USE_MISC || defined __USE_XOPEN_EXTENDED	
#if defined __USE_MISC || defined __USE_XOPEN_EXTENDED	defined __USE_MISC || defined __USE_XOPEN_EXTENDED	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_POSIX199506	__USE_POSIX199506	
#if defined __USE_MISC || defined __USE_XOPEN	defined __USE_MISC || defined __USE_XOPEN	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_MISC	__USE_MISC	
#if (defined __USE_XOPEN_EXTENDED && !defined __USE_XOPEN2K) \	(defined __USE_XOPEN_EXTENDED && !defined __USE_XOPEN2K) \	
#ifdef __USE_XOPEN2K	__USE_XOPEN2K	
#ifdef __USE_ISOC11	__USE_ISOC11	
#if defined __USE_ISOC11 || defined __USE_ISOCXX11	defined __USE_ISOC11 || defined __USE_ISOCXX11	
#ifdef __cplusplus	__cplusplus	
#ifdef __USE_MISC	__USE_MISC	
#if defined __USE_ISOC11 || defined __USE_ISOCXX11	defined __USE_ISOC11 || defined __USE_ISOCXX11	
#ifdef __USE_ISOC99	__USE_ISOC99	
#ifdef __USE_GNU	__USE_GNU	
#if defined __USE_MISC || defined __USE_XOPEN	defined __USE_MISC || defined __USE_XOPEN	
#ifdef __USE_XOPEN2K	__USE_XOPEN2K	
#ifdef __USE_MISC	__USE_MISC	
#if defined __USE_MISC \	defined __USE_MISC \	
#if defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT	__REDIRECT	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifdef __USE_MISC	__USE_MISC	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT	__REDIRECT	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
#ifdef __USE_GNU	__USE_GNU	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT	__REDIRECT	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT	__REDIRECT	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifdef __USE_GNU	__USE_GNU	
#if defined __USE_MISC || defined __USE_XOPEN_EXTENDED	defined __USE_MISC || defined __USE_XOPEN_EXTENDED	
#ifndef __COMPAR_FN_T	__COMPAR_FN_T	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_EXTERN_INLINES	__USE_EXTERN_INLINES	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_ISOC99	__USE_ISOC99	
#ifdef __USE_ISOC99	__USE_ISOC99	
#if (defined __USE_XOPEN_EXTENDED && !defined __USE_XOPEN2K8) \	(defined __USE_XOPEN_EXTENDED && !defined __USE_XOPEN2K8) \	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_MISC	__USE_MISC	
#if defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	
#ifdef __USE_XOPEN2KXSI	__USE_XOPEN2KXSI	
#ifdef __USE_XOPEN_EXTENDED	__USE_XOPEN_EXTENDED	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_MISC	__USE_MISC	
#if defined __USE_XOPEN_EXTENDED && !defined __USE_XOPEN2K	defined __USE_XOPEN_EXTENDED && !defined __USE_XOPEN2K	
#if __USE_FORTIFY_LEVEL > 0 && defined __fortify_function	__USE_FORTIFY_LEVEL > 0 && defined __fortify_function	
#ifdef __LDBL_COMPAT	__LDBL_COMPAT	
#include_next <stdlib.h>	<stdlib.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#undef abs	abs	
#undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS	_GLIBCXX_INCLUDE_NEXT_C_HEADERS	
#define _GLIBCXX_INCLUDE_NEXT_C_HEADERS	_GLIBCXX_INCLUDE_NEXT_C_HEADERS	
#define _GLIBCXX_BITS_STD_ABS_H	_GLIBCXX_BITS_STD_ABS_H	
#ifndef _GLIBCXX_BITS_STD_ABS_H	_GLIBCXX_BITS_STD_ABS_H	
#pragma GCC system_header	GCC system_header	
#ifdef __CORRECT_ISO_CPP_MATH_H_PROTO	__CORRECT_ISO_CPP_MATH_H_PROTO	
#ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO	__CORRECT_ISO_CPP_STDLIB_H_PROTO	
#ifdef _GLIBCXX_USE_LONG_LONG	_GLIBCXX_USE_LONG_LONG	
#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO	__CORRECT_ISO_CPP_MATH_H_PROTO	
#if defined(__GLIBCXX_TYPE_INT_N_0)	defined(__GLIBCXX_TYPE_INT_N_0)	
#if defined(__GLIBCXX_TYPE_INT_N_1)	defined(__GLIBCXX_TYPE_INT_N_1)	
#if defined(__GLIBCXX_TYPE_INT_N_2)	defined(__GLIBCXX_TYPE_INT_N_2)	
#if defined(__GLIBCXX_TYPE_INT_N_3)	defined(__GLIBCXX_TYPE_INT_N_3)	
#if !defined(__STRICT_ANSI__) && defined(_GLIBCXX_USE_FLOAT128) && !defined(__CUDACC__)	!defined(__STRICT_ANSI__) && defined(_GLIBCXX_USE_FLOAT128) && !defined(__CUDACC__)	
#include <bits/std_abs.h>	<bits/std_abs.h>	
#include_next <stdlib.h>	<stdlib.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#undef strtold	strtold	
#undef strtof	strtof	
#undef strtoull	strtoull	
#undef strtoll	strtoll	
#undef atoll	atoll	
#undef lldiv	lldiv	
#undef llabs	llabs	
#undef _Exit	_Exit	
#undef wctomb	wctomb	
#undef wcstombs	wcstombs	
#undef system	system	
#undef strtoul	strtoul	
#undef strtol	strtol	
#undef strtod	strtod	
#undef srand	srand	
#undef realloc	realloc	
#undef rand	rand	
#undef quick_exit	quick_exit	
#undef qsort	qsort	
#undef mbtowc	mbtowc	
#undef mbstowcs	mbstowcs	
#undef mblen	mblen	
#undef malloc	malloc	
#undef ldiv	ldiv	
#undef labs	labs	
#undef getenv	getenv	
#undef free	free	
#undef exit	exit	
#undef div	div	
#undef calloc	calloc	
#undef bsearch	bsearch	
#undef atol	atol	
#undef atoi	atoi	
#undef atof	atof	
#undef at_quick_exit	at_quick_exit	
#undef atexit	atexit	
#undef abort	abort	
#undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS	_GLIBCXX_INCLUDE_NEXT_C_HEADERS	
#define _GLIBCXX_INCLUDE_NEXT_C_HEADERS	_GLIBCXX_INCLUDE_NEXT_C_HEADERS	
#define _GLIBCXX_CSTDLIB 1	_GLIBCXX_CSTDLIB	1
#pragma GCC system_header	GCC system_header	
#ifndef _GLIBCXX_CSTDLIB	_GLIBCXX_CSTDLIB	
#if !_GLIBCXX_HOSTED	!_GLIBCXX_HOSTED	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_HAVE_AT_QUICK_EXIT	_GLIBCXX_HAVE_AT_QUICK_EXIT	
#ifdef _GLIBCXX_HAVE_QUICK_EXIT	_GLIBCXX_HAVE_QUICK_EXIT	
#if __cplusplus >= 201703L && defined(_GLIBCXX_HAVE_ALIGNED_ALLOC)	__cplusplus >= 201703L && defined(_GLIBCXX_HAVE_ALIGNED_ALLOC)	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_HAVE_AT_QUICK_EXIT	_GLIBCXX_HAVE_AT_QUICK_EXIT	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_HAVE_QUICK_EXIT	_GLIBCXX_HAVE_QUICK_EXIT	
#if __cplusplus >= 201703L && defined(_GLIBCXX_HAVE_ALIGNED_ALLOC)	__cplusplus >= 201703L && defined(_GLIBCXX_HAVE_ALIGNED_ALLOC)	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_HAVE_AT_QUICK_EXIT	_GLIBCXX_HAVE_AT_QUICK_EXIT	
#ifdef _GLIBCXX_HAVE_MBSTATE_T	_GLIBCXX_HAVE_MBSTATE_T	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_HAVE_QUICK_EXIT	_GLIBCXX_HAVE_QUICK_EXIT	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO	__CORRECT_ISO_CPP_STDLIB_H_PROTO	
#if _GLIBCXX_USE_C99_STDLIB	_GLIBCXX_USE_C99_STDLIB	
#if !_GLIBCXX_USE_C99_LONG_LONG_DYNAMIC	!_GLIBCXX_USE_C99_LONG_LONG_DYNAMIC	
#if _GLIBCXX_USE_C99_CHECK || _GLIBCXX_USE_C99_DYNAMIC	_GLIBCXX_USE_C99_CHECK || _GLIBCXX_USE_C99_DYNAMIC	
#if !_GLIBCXX_USE_C99_DYNAMIC	!_GLIBCXX_USE_C99_DYNAMIC	
#if !_GLIBCXX_USE_C99_LONG_LONG_DYNAMIC	!_GLIBCXX_USE_C99_LONG_LONG_DYNAMIC	
#if _GLIBCXX_USE_C99_LONG_LONG_CHECK || _GLIBCXX_USE_C99_LONG_LONG_DYNAMIC	_GLIBCXX_USE_C99_LONG_LONG_CHECK || _GLIBCXX_USE_C99_LONG_LONG_DYNAMIC	
#if !_GLIBCXX_USE_C99_LONG_LONG_DYNAMIC	!_GLIBCXX_USE_C99_LONG_LONG_DYNAMIC	
#if !_GLIBCXX_USE_C99_LONG_LONG_DYNAMIC	!_GLIBCXX_USE_C99_LONG_LONG_DYNAMIC	
#if !_GLIBCXX_USE_C99_LONG_LONG_DYNAMIC	!_GLIBCXX_USE_C99_LONG_LONG_DYNAMIC	
#define __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION	__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION	
#define __need_NULL	__need_NULL	
#define __need_size_t	__need_size_t	
#define __need___va_list	__need___va_list	
#include <bits/types/__mbstate_t.h>	<bits/types/__mbstate_t.h>	
#include <bits/types.h>	<bits/types.h>	
#define _____fpos_t_defined 1	_____fpos_t_defined	1
#ifndef _____fpos_t_defined	_____fpos_t_defined	
#include <bits/types/__mbstate_t.h>	<bits/types/__mbstate_t.h>	
#include <bits/types.h>	<bits/types.h>	
#define _____fpos64_t_defined 1	_____fpos64_t_defined	1
#ifndef _____fpos64_t_defined	_____fpos64_t_defined	
#include <bits/types.h>	<bits/types.h>	
#define _IO_USER_LOCK 0x8000	_IO_USER_LOCK	0x8000
#define __ferror_unlocked_body(_fp) (((_fp)->_flags & _IO_ERR_SEEN) != 0)	__ferror_unlocked_body(_fp)	(((_fp)->_flags & _IO_ERR_SEEN) != 0)
#define _IO_ERR_SEEN 0x0020	_IO_ERR_SEEN	0x0020
#define __feof_unlocked_body(_fp) (((_fp)->_flags & _IO_EOF_SEEN) != 0)	__feof_unlocked_body(_fp)	(((_fp)->_flags & _IO_EOF_SEEN) != 0)
#define _IO_EOF_SEEN 0x0010	_IO_EOF_SEEN	0x0010
#define __putc_unlocked_body(_ch,_fp) (__glibc_unlikely ((_fp)->_IO_write_ptr >= (_fp)->_IO_write_end) ? __overflow (_fp, (unsigned char) (_ch)) : (unsigned char) (*(_fp)->_IO_write_ptr++ = (_ch)))	__putc_unlocked_body(_ch,_fp)	(__glibc_unlikely ((_fp)->_IO_write_ptr >= (_fp)->_IO_write_end) ? __overflow (_fp, (unsigned char) (_ch)) : (unsigned char) (*(_fp)->_IO_write_ptr++ = (_ch)))
#define __getc_unlocked_body(_fp) (__glibc_unlikely ((_fp)->_IO_read_ptr >= (_fp)->_IO_read_end) ? __uflow (_fp) : *(unsigned char *) (_fp)->_IO_read_ptr++)	__getc_unlocked_body(_fp)	(__glibc_unlikely ((_fp)->_IO_read_ptr >= (_fp)->_IO_read_end) ? __uflow (_fp) : *(unsigned char *) (_fp)->_IO_read_ptr++)
#define __struct_FILE_defined 1	__struct_FILE_defined	1
#ifndef __struct_FILE_defined	__struct_FILE_defined	
#if defined _IO_USE_OLD_IO_FILE && !defined _LIBC	defined _IO_USE_OLD_IO_FILE && !defined _LIBC	
#if defined _IO_lock_t_defined && !defined _LIBC	defined _IO_lock_t_defined && !defined _LIBC	
#ifndef _IO_lock_t_defined	_IO_lock_t_defined	
#ifdef _IO_USE_OLD_IO_FILE	_IO_USE_OLD_IO_FILE	
#include <bits/types.h>	<bits/types.h>	
#define __cookie_io_functions_t_defined 1	__cookie_io_functions_t_defined	1
#ifndef __cookie_io_functions_t_defined	__cookie_io_functions_t_defined	
#define FOPEN_MAX 16	FOPEN_MAX	16
#undef FOPEN_MAX	FOPEN_MAX	
#define L_cuserid 9	L_cuserid	9
#define L_ctermid 9	L_ctermid	9
#define FILENAME_MAX 4096	FILENAME_MAX	4096
#define TMP_MAX 238328	TMP_MAX	238328
#define L_tmpnam 20	L_tmpnam	20
#define _BITS_STDIO_LIM_H 1	_BITS_STDIO_LIM_H	1
#ifndef _BITS_STDIO_LIM_H	_BITS_STDIO_LIM_H	
#ifndef _STDIO_H	_STDIO_H	
#ifdef __USE_POSIX	__USE_POSIX	
#if !defined __USE_XOPEN2K || defined __USE_GNU	!defined __USE_XOPEN2K || defined __USE_GNU	
#define _STDIO_H 1	_STDIO_H	1
#ifndef _STDIO_H	_STDIO_H	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_GNU	__USE_GNU	
#define stdout stdout	stdout	stdout
#define stdin stdin	stdin	stdin
#undef __STDIO_INLINE	__STDIO_INLINE	
#define __STDIO_INLINE __extern_inline	__STDIO_INLINE	__extern_inline
#define _BITS_STDIO_H 1	_BITS_STDIO_H	1
#ifndef _BITS_STDIO_H	_BITS_STDIO_H	
#ifndef _STDIO_H	_STDIO_H	
#ifndef __extern_inline	__extern_inline	
#ifdef __USE_EXTERN_INLINES	__USE_EXTERN_INLINES	
#if !(__USE_FORTIFY_LEVEL > 0 && defined __fortify_function)	!(__USE_FORTIFY_LEVEL > 0 && defined __fortify_function)	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_POSIX	__USE_POSIX	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_POSIX	__USE_POSIX	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_MISC	__USE_MISC	
#if defined __USE_MISC && defined __GNUC__ && defined __OPTIMIZE__ \	defined __USE_MISC && defined __GNUC__ && defined __OPTIMIZE__ \	
#define EOF (-1)	EOF	(-1)
#undef fread_unlocked	fread_unlocked	
#define _BITS_STDIO2_H 1	_BITS_STDIO2_H	1
#ifndef _BITS_STDIO2_H	_BITS_STDIO2_H	
#ifndef _STDIO_H	_STDIO_H	
#ifdef __va_arg_pack	__va_arg_pack	
#elif !defined __cplusplus	!defined __cplusplus	
#if defined __USE_ISOC99 || defined __USE_UNIX98	defined __USE_ISOC99 || defined __USE_UNIX98	
#ifdef __va_arg_pack	__va_arg_pack	
#elif !defined __cplusplus	!defined __cplusplus	
#if __USE_FORTIFY_LEVEL > 1	__USE_FORTIFY_LEVEL > 1	
#ifdef __va_arg_pack	__va_arg_pack	
#elif !defined __cplusplus	!defined __cplusplus	
#ifdef __USE_EXTERN_INLINES	__USE_EXTERN_INLINES	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
#ifdef __va_arg_pack	__va_arg_pack	
#elif !defined __cplusplus	!defined __cplusplus	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __va_arg_pack	__va_arg_pack	
#elif !defined __cplusplus	!defined __cplusplus	
#if __GLIBC_USE (DEPRECATED_GETS)	__GLIBC_USE (DEPRECATED_GETS)	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_EXTERN_INLINES	__USE_EXTERN_INLINES	
#include <bits/stdio2.h>	<bits/stdio2.h>	
#include <bits/stdio.h>	<bits/stdio.h>	
#include <bits/sys_errlist.h>	<bits/sys_errlist.h>	
#include <bits/stdio_lim.h>	<bits/stdio_lim.h>	
#include <bits/types/cookie_io_functions_t.h>	<bits/types/cookie_io_functions_t.h>	
#include <bits/types/struct_FILE.h>	<bits/types/struct_FILE.h>	
#include <bits/types/FILE.h>	<bits/types/FILE.h>	
#include <bits/types/__FILE.h>	<bits/types/__FILE.h>	
#include <bits/types/__fpos64_t.h>	<bits/types/__fpos64_t.h>	
#include <bits/types/__fpos_t.h>	<bits/types/__fpos_t.h>	
#include <bits/types.h>	<bits/types.h>	
#include <stdarg.h>	<stdarg.h>	
#include <stddef.h>	<stddef.h>	
#include <bits/libc-header-start.h>	<bits/libc-header-start.h>	
#define RENAME_WHITEOUT (1 << 2)	RENAME_WHITEOUT	(1 << 2)
#define RENAME_EXCHANGE (1 << 1)	RENAME_EXCHANGE	(1 << 1)
#define RENAME_NOREPLACE (1 << 0)	RENAME_NOREPLACE	(1 << 0)
#define stderr stderr	stderr	stderr
"#define P_tmpdir ""/tmp"""	P_tmpdir	"""/tmp"""
#define SEEK_HOLE 4	SEEK_HOLE	4
#define SEEK_DATA 3	SEEK_DATA	3
#define SEEK_END 2	SEEK_END	2
#define SEEK_CUR 1	SEEK_CUR	1
#define SEEK_SET 0	SEEK_SET	0
#define BUFSIZ 8192	BUFSIZ	8192
#define _IONBF 2	_IONBF	2
#define _IOLBF 1	_IOLBF	1
#define _IOFBF 0	_IOFBF	0
#define _VA_LIST_DEFINED	_VA_LIST_DEFINED	
#ifndef _STDIO_H	_STDIO_H	
#ifdef __USE_GNU	__USE_GNU	
#if defined __USE_XOPEN || defined __USE_XOPEN2K8	defined __USE_XOPEN || defined __USE_XOPEN2K8	
#ifdef __GNUC__	__GNUC__	
#ifndef _VA_LIST_DEFINED	_VA_LIST_DEFINED	
#if defined __USE_UNIX98 || defined __USE_XOPEN2K	defined __USE_UNIX98 || defined __USE_XOPEN2K	
#ifndef __off_t_defined	__off_t_defined	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#if defined __USE_LARGEFILE64 && !defined __off64_t_defined	defined __USE_LARGEFILE64 && !defined __off64_t_defined	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
#ifndef __ssize_t_defined	__ssize_t_defined	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifdef __USE_GNU	__USE_GNU	
#if defined __USE_MISC || defined __USE_XOPEN	defined __USE_MISC || defined __USE_XOPEN	
#ifdef __USE_ATFILE	__USE_ATFILE	
#ifdef __USE_GNU	__USE_GNU	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT	__REDIRECT	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifdef __USE_MISC	__USE_MISC	
#if defined __USE_MISC || defined __USE_XOPEN	defined __USE_MISC || defined __USE_XOPEN	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_GNU	__USE_GNU	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT	__REDIRECT	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifdef __USE_POSIX	__USE_POSIX	
#ifdef __USE_GNU	__USE_GNU	
#if defined __USE_XOPEN2K8 || __GLIBC_USE (LIB_EXT2)	defined __USE_XOPEN2K8 || __GLIBC_USE (LIB_EXT2)	
#ifdef __USE_MISC	__USE_MISC	
#if defined __USE_ISOC99 || defined __USE_UNIX98	defined __USE_ISOC99 || defined __USE_UNIX98	
#if __GLIBC_USE (LIB_EXT2)	__GLIBC_USE (LIB_EXT2)	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
#if !__GLIBC_USE (DEPRECATED_SCANF) && !defined __LDBL_COMPAT	!__GLIBC_USE (DEPRECATED_SCANF) && !defined __LDBL_COMPAT	
#ifdef __REDIRECT	__REDIRECT	
#ifdef __USE_ISOC99	__USE_ISOC99	
#if !__GLIBC_USE (DEPRECATED_SCANF)	!__GLIBC_USE (DEPRECATED_SCANF)	
#if defined __REDIRECT && !defined __LDBL_COMPAT	defined __REDIRECT && !defined __LDBL_COMPAT	
#elif !defined __REDIRECT	!defined __REDIRECT	
#ifdef __USE_POSIX199506	__USE_POSIX199506	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_POSIX199506	__USE_POSIX199506	
#if defined __USE_MISC \	defined __USE_MISC \	
#if __GLIBC_USE (DEPRECATED_GETS)	__GLIBC_USE (DEPRECATED_GETS)	
#ifdef __USE_GNU	__USE_GNU	
#if defined __USE_XOPEN2K8 || __GLIBC_USE (LIB_EXT2)	defined __USE_XOPEN2K8 || __GLIBC_USE (LIB_EXT2)	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_MISC	__USE_MISC	
#if defined __USE_LARGEFILE || defined __USE_XOPEN2K	defined __USE_LARGEFILE || defined __USE_XOPEN2K	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT	__REDIRECT	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT	__REDIRECT	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_POSIX	__USE_POSIX	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_POSIX2	__USE_POSIX2	
#ifdef __USE_POSIX	__USE_POSIX	
#if (defined __USE_XOPEN && !defined __USE_XOPEN2K) || defined __USE_GNU	(defined __USE_XOPEN && !defined __USE_XOPEN2K) || defined __USE_GNU	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_POSIX199506	__USE_POSIX199506	
#if defined __USE_XOPEN && !defined __USE_XOPEN2K && !defined __USE_GNU	defined __USE_XOPEN && !defined __USE_XOPEN2K && !defined __USE_GNU	
#ifdef __USE_EXTERN_INLINES	__USE_EXTERN_INLINES	
#if __USE_FORTIFY_LEVEL > 0 && defined __fortify_function	__USE_FORTIFY_LEVEL > 0 && defined __fortify_function	
#ifdef __LDBL_COMPAT	__LDBL_COMPAT	
#include <stdio.h>	<stdio.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#undef vsscanf	vsscanf	
#undef vsnprintf	vsnprintf	
#undef vscanf	vscanf	
#undef vfscanf	vfscanf	
#undef snprintf	snprintf	
#undef vsprintf	vsprintf	
#undef vprintf	vprintf	
#undef vfprintf	vfprintf	
#undef ungetc	ungetc	
#undef tmpnam	tmpnam	
#undef tmpfile	tmpfile	
#undef sscanf	sscanf	
#undef sprintf	sprintf	
#undef setvbuf	setvbuf	
#undef setbuf	setbuf	
#undef scanf	scanf	
#undef rewind	rewind	
#undef rename	rename	
#undef remove	remove	
#undef puts	puts	
#undef putchar	putchar	
#undef putc	putc	
#undef printf	printf	
#undef perror	perror	
#undef gets	gets	
#undef getchar	getchar	
#undef getc	getc	
#undef fwrite	fwrite	
#undef ftell	ftell	
#undef fsetpos	fsetpos	
#undef fseek	fseek	
#undef fscanf	fscanf	
#undef freopen	freopen	
#undef fread	fread	
#undef fputs	fputs	
#undef fputc	fputc	
#undef fprintf	fprintf	
#undef fopen	fopen	
#undef fgets	fgets	
#undef fgetpos	fgetpos	
#undef fgetc	fgetc	
#undef fflush	fflush	
#undef ferror	ferror	
#undef feof	feof	
#undef fclose	fclose	
#undef clearerr	clearerr	
#define _GLIBCXX_CSTDIO 1	_GLIBCXX_CSTDIO	1
#pragma GCC system_header	GCC system_header	
#ifndef _GLIBCXX_CSTDIO	_GLIBCXX_CSTDIO	
#if __cplusplus <= 201103L && !defined(_GLIBCXX_HAVE_GETS)	__cplusplus <= 201103L && !defined(_GLIBCXX_HAVE_GETS)	
#if __cplusplus <= 201103L	__cplusplus <= 201103L	
#if __cplusplus <= 201103L	__cplusplus <= 201103L	
#if _GLIBCXX_USE_TMPNAM	_GLIBCXX_USE_TMPNAM	
#if _GLIBCXX_USE_C99_STDIO	_GLIBCXX_USE_C99_STDIO	
#if _GLIBCXX_USE_C99_CHECK || _GLIBCXX_USE_C99_DYNAMIC	_GLIBCXX_USE_C99_CHECK || _GLIBCXX_USE_C99_DYNAMIC	
#if !_GLIBCXX_USE_C99_DYNAMIC	!_GLIBCXX_USE_C99_DYNAMIC	
#define ERANGE 34	ERANGE	34
#define EDOM 33	EDOM	33
#define EPIPE 32	EPIPE	32
#define EMLINK 31	EMLINK	31
#define EROFS 30	EROFS	30
#define ESPIPE 29	ESPIPE	29
#define ENOSPC 28	ENOSPC	28
#define EFBIG 27	EFBIG	27
#define ETXTBSY 26	ETXTBSY	26
#define ENOTTY 25	ENOTTY	25
#define EMFILE 24	EMFILE	24
#define ENFILE 23	ENFILE	23
#define EINVAL 22	EINVAL	22
#define EISDIR 21	EISDIR	21
#define ENOTDIR 20	ENOTDIR	20
#define ENODEV 19	ENODEV	19
#define EXDEV 18	EXDEV	18
#define EEXIST 17	EEXIST	17
#define EBUSY 16	EBUSY	16
#define ENOTBLK 15	ENOTBLK	15
#define EFAULT 14	EFAULT	14
#define EACCES 13	EACCES	13
#define ENOMEM 12	ENOMEM	12
#define EAGAIN 11	EAGAIN	11
#define ECHILD 10	ECHILD	10
#define EBADF 9	EBADF	9
#define ENOEXEC 8	ENOEXEC	8
#define E2BIG 7	E2BIG	7
#define ENXIO 6	ENXIO	6
#define EIO 5	EIO	5
#define EINTR 4	EINTR	4
#define ESRCH 3	ESRCH	3
#define ENOENT 2	ENOENT	2
#define EPERM 1	EPERM	1
#define _ASM_GENERIC_ERRNO_BASE_H	_ASM_GENERIC_ERRNO_BASE_H	
#ifndef _ASM_GENERIC_ERRNO_BASE_H	_ASM_GENERIC_ERRNO_BASE_H	
#include <asm-generic/errno-base.h>	<asm-generic/errno-base.h>	
#define EHWPOISON 133	EHWPOISON	133
#define ERFKILL 132	ERFKILL	132
#define ENOTRECOVERABLE 131	ENOTRECOVERABLE	131
#define EOWNERDEAD 130	EOWNERDEAD	130
#define EKEYREJECTED 129	EKEYREJECTED	129
#define EKEYREVOKED 128	EKEYREVOKED	128
#define EKEYEXPIRED 127	EKEYEXPIRED	127
#define ENOKEY 126	ENOKEY	126
#define ECANCELED 125	ECANCELED	125
#define EMEDIUMTYPE 124	EMEDIUMTYPE	124
#define ENOMEDIUM 123	ENOMEDIUM	123
#define EDQUOT 122	EDQUOT	122
#define EREMOTEIO 121	EREMOTEIO	121
#define EISNAM 120	EISNAM	120
#define ENAVAIL 119	ENAVAIL	119
#define ENOTNAM 118	ENOTNAM	118
#define EUCLEAN 117	EUCLEAN	117
#define ESTALE 116	ESTALE	116
#define EINPROGRESS 115	EINPROGRESS	115
#define EALREADY 114	EALREADY	114
#define EHOSTUNREACH 113	EHOSTUNREACH	113
#define EHOSTDOWN 112	EHOSTDOWN	112
#define ECONNREFUSED 111	ECONNREFUSED	111
#define ETIMEDOUT 110	ETIMEDOUT	110
#define ETOOMANYREFS 109	ETOOMANYREFS	109
#define ESHUTDOWN 108	ESHUTDOWN	108
#define ENOTCONN 107	ENOTCONN	107
#define EISCONN 106	EISCONN	106
#define ENOBUFS 105	ENOBUFS	105
#define ECONNRESET 104	ECONNRESET	104
#define ECONNABORTED 103	ECONNABORTED	103
#define ENETRESET 102	ENETRESET	102
#define ENETUNREACH 101	ENETUNREACH	101
#define ENETDOWN 100	ENETDOWN	100
#define EADDRNOTAVAIL 99	EADDRNOTAVAIL	99
#define EADDRINUSE 98	EADDRINUSE	98
#define EAFNOSUPPORT 97	EAFNOSUPPORT	97
#define EPFNOSUPPORT 96	EPFNOSUPPORT	96
#define EOPNOTSUPP 95	EOPNOTSUPP	95
#define ESOCKTNOSUPPORT 94	ESOCKTNOSUPPORT	94
#define EPROTONOSUPPORT 93	EPROTONOSUPPORT	93
#define ENOPROTOOPT 92	ENOPROTOOPT	92
#define EPROTOTYPE 91	EPROTOTYPE	91
#define EMSGSIZE 90	EMSGSIZE	90
#define EDESTADDRREQ 89	EDESTADDRREQ	89
#define ENOTSOCK 88	ENOTSOCK	88
#define EUSERS 87	EUSERS	87
#define ESTRPIPE 86	ESTRPIPE	86
#define ERESTART 85	ERESTART	85
#define EILSEQ 84	EILSEQ	84
#define ELIBEXEC 83	ELIBEXEC	83
#define ELIBMAX 82	ELIBMAX	82
#define ELIBSCN 81	ELIBSCN	81
#define ELIBBAD 80	ELIBBAD	80
#define ELIBACC 79	ELIBACC	79
#define EREMCHG 78	EREMCHG	78
#define EBADFD 77	EBADFD	77
#define ENOTUNIQ 76	ENOTUNIQ	76
#define EOVERFLOW 75	EOVERFLOW	75
#define EBADMSG 74	EBADMSG	74
#define EDOTDOT 73	EDOTDOT	73
#define EMULTIHOP 72	EMULTIHOP	72
#define EPROTO 71	EPROTO	71
#define ECOMM 70	ECOMM	70
#define ESRMNT 69	ESRMNT	69
#define EADV 68	EADV	68
#define ENOLINK 67	ENOLINK	67
#define EREMOTE 66	EREMOTE	66
#define ENOPKG 65	ENOPKG	65
#define ENONET 64	ENONET	64
#define ENOSR 63	ENOSR	63
#define ETIME 62	ETIME	62
#define ENODATA 61	ENODATA	61
#define ENOSTR 60	ENOSTR	60
#define EBFONT 59	EBFONT	59
#define EDEADLOCK EDEADLK	EDEADLOCK	EDEADLK
#define EBADSLT 57	EBADSLT	57
#define EBADRQC 56	EBADRQC	56
#define ENOANO 55	ENOANO	55
#define EXFULL 54	EXFULL	54
#define EBADR 53	EBADR	53
#define EBADE 52	EBADE	52
#define EL2HLT 51	EL2HLT	51
#define ENOCSI 50	ENOCSI	50
#define EUNATCH 49	EUNATCH	49
#define ELNRNG 48	ELNRNG	48
#define EL3RST 47	EL3RST	47
#define EL3HLT 46	EL3HLT	46
#define EL2NSYNC 45	EL2NSYNC	45
#define ECHRNG 44	ECHRNG	44
#define EIDRM 43	EIDRM	43
#define ENOMSG 42	ENOMSG	42
#define EWOULDBLOCK EAGAIN	EWOULDBLOCK	EAGAIN
#define ELOOP 40	ELOOP	40
#define ENOTEMPTY 39	ENOTEMPTY	39
#define ENOSYS 38	ENOSYS	38
#define ENOLCK 37	ENOLCK	37
#define ENAMETOOLONG 36	ENAMETOOLONG	36
#define EDEADLK 35	EDEADLK	35
#define _ASM_GENERIC_ERRNO_H	_ASM_GENERIC_ERRNO_H	
#ifndef _ASM_GENERIC_ERRNO_H	_ASM_GENERIC_ERRNO_H	
#include <asm-generic/errno.h>	<asm-generic/errno.h>	
#include <asm/errno.h>	<asm/errno.h>	
#include <linux/errno.h>	<linux/errno.h>	
#define ENOTSUP EOPNOTSUPP	ENOTSUP	EOPNOTSUPP
#define _BITS_ERRNO_H 1	_BITS_ERRNO_H	1
#ifndef _BITS_ERRNO_H	_BITS_ERRNO_H	
#if !defined _ERRNO_H	!defined _ERRNO_H	
#ifndef ENOTSUP	ENOTSUP	
#ifndef ECANCELED	ECANCELED	
#ifndef EOWNERDEAD	EOWNERDEAD	
#ifndef ENOTRECOVERABLE	ENOTRECOVERABLE	
#ifndef ERFKILL	ERFKILL	
#ifndef EHWPOISON	EHWPOISON	
#define _ERRNO_H 1	_ERRNO_H	1
#define __error_t_defined 1	__error_t_defined	1
#ifndef __error_t_defined	__error_t_defined	
#include <bits/types/error_t.h>	<bits/types/error_t.h>	
#include <bits/errno.h>	<bits/errno.h>	
#include <features.h>	<features.h>	
#ifndef _ERRNO_H	_ERRNO_H	
#ifndef __ASSEMBLER__	__ASSEMBLER__	
#ifdef __USE_GNU	__USE_GNU	
#include <errno.h>	<errno.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#define _GLIBCXX_CERRNO 1	_GLIBCXX_CERRNO	1
#pragma GCC system_header	GCC system_header	
#ifndef _GLIBCXX_CERRNO	_GLIBCXX_CERRNO	
#ifndef errno	errno	
#include <cerrno>	<cerrno>	
#include <cstdio>	<cstdio>	
#include <cwchar>	<cwchar>	
#include <cstdlib>	<cstdlib>	
#include <bits/functexcept.h>	<bits/functexcept.h>	
#include <ext/numeric_traits.h>	<ext/numeric_traits.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#define _STRING_CONVERSIONS_H 1	_STRING_CONVERSIONS_H	1
#ifndef _STRING_CONVERSIONS_H	_STRING_CONVERSIONS_H	
#pragma GCC system_header	GCC system_header	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#include <bits/hash_bytes.h>	<bits/hash_bytes.h>	
#define _Cxx_hashtable_define_trivial_hash(_Tp) template<> struct hash<_Tp> : public __hash_base<size_t, _Tp> { size_t operator()(_Tp __val) const noexcept { return static_cast<size_t>(__val); } };	_Cxx_hashtable_define_trivial_hash(_Tp)	template<> struct hash<_Tp> : public __hash_base<size_t, _Tp> { size_t operator()(_Tp __val) const noexcept { return static_cast<size_t>(__val); } };
#undef _Cxx_hashtable_define_trivial_hash	_Cxx_hashtable_define_trivial_hash	
#define _FUNCTIONAL_HASH_H 1	_FUNCTIONAL_HASH_H	1
#ifndef _FUNCTIONAL_HASH_H	_FUNCTIONAL_HASH_H	
#pragma GCC system_header	GCC system_header	
#ifdef _GLIBCXX_USE_CHAR8_T	_GLIBCXX_USE_CHAR8_T	
#ifdef __GLIBCXX_TYPE_INT_N_0	__GLIBCXX_TYPE_INT_N_0	
#ifdef __GLIBCXX_TYPE_INT_N_1	__GLIBCXX_TYPE_INT_N_1	
#ifdef __GLIBCXX_TYPE_INT_N_2	__GLIBCXX_TYPE_INT_N_2	
#ifdef __GLIBCXX_TYPE_INT_N_3	__GLIBCXX_TYPE_INT_N_3	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#include <bits/cxxabi_forced.h>	<bits/cxxabi_forced.h>	
#define _BASIC_STRING_TCC 1	_BASIC_STRING_TCC	1
#ifndef _BASIC_STRING_TCC	_BASIC_STRING_TCC	
#pragma GCC system_header	GCC system_header	
#if _GLIBCXX_USE_CXX11_ABI	_GLIBCXX_USE_CXX11_ABI	
#if _GLIBCXX_FULLY_DYNAMIC_STRING == 0	_GLIBCXX_FULLY_DYNAMIC_STRING == 0	
#if _GLIBCXX_FULLY_DYNAMIC_STRING == 0	_GLIBCXX_FULLY_DYNAMIC_STRING == 0	
#if _GLIBCXX_FULLY_DYNAMIC_STRING == 0	_GLIBCXX_FULLY_DYNAMIC_STRING == 0	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if _GLIBCXX_FULLY_DYNAMIC_STRING == 0	_GLIBCXX_FULLY_DYNAMIC_STRING == 0	
#if _GLIBCXX_EXTERN_TEMPLATE	_GLIBCXX_EXTERN_TEMPLATE	
#if __cplusplus <= 201703L && _GLIBCXX_EXTERN_TEMPLATE > 0	__cplusplus <= 201703L && _GLIBCXX_EXTERN_TEMPLATE > 0	
#elif ! _GLIBCXX_USE_CXX11_ABI	! _GLIBCXX_USE_CXX11_ABI	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#if __cplusplus <= 201703L && _GLIBCXX_EXTERN_TEMPLATE > 0	__cplusplus <= 201703L && _GLIBCXX_EXTERN_TEMPLATE > 0	
#elif ! _GLIBCXX_USE_CXX11_ABI	! _GLIBCXX_USE_CXX11_ABI	
#include <bits/basic_string.tcc>	<bits/basic_string.tcc>	
#include <bits/basic_string.h>	<bits/basic_string.h>	
#include <bits/range_access.h>	<bits/range_access.h>	
#include <bits/stl_algobase.h>	<bits/stl_algobase.h>	
#include <ext/numeric_traits.h>	<ext/numeric_traits.h>	
#include <bits/stl_function.h>	<bits/stl_function.h>	
#include <bits/stl_iterator.h>	<bits/stl_iterator.h>	
#include <bits/stl_iterator_base_funcs.h>	<bits/stl_iterator_base_funcs.h>	
#include <bits/stl_iterator_base_types.h>	<bits/stl_iterator_base_types.h>	
#include <bits/ostream_insert.h>	<bits/ostream_insert.h>	
#include <bits/localefwd.h>	<bits/localefwd.h>	
#include <bits/cpp_type_traits.h>	<bits/cpp_type_traits.h>	
#include <bits/allocator.h>	<bits/allocator.h>	
#include <bits/char_traits.h>	<bits/char_traits.h>	
#include <bits/stringfwd.h>	<bits/stringfwd.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#define _GLIBCXX_STRING 1	_GLIBCXX_STRING	1
#ifndef _GLIBCXX_STRING	_GLIBCXX_STRING	
#pragma GCC system_header	GCC system_header	
#if __cplusplus > 201703L	__cplusplus > 201703L	
#if __cplusplus >= 201703L && _GLIBCXX_USE_CXX11_ABI	__cplusplus >= 201703L && _GLIBCXX_USE_CXX11_ABI	
#ifdef _GLIBCXX_USE_CHAR8_T	_GLIBCXX_USE_CHAR8_T	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#ifdef _GLIBCXX_USE_CHAR8_T	_GLIBCXX_USE_CHAR8_T	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#if __cplusplus > 201703L	__cplusplus > 201703L	
#include <string>	<string>	
#include <exception>	<exception>	
#define _GLIBCXX_STDEXCEPT 1	_GLIBCXX_STDEXCEPT	1
#ifndef _GLIBCXX_STDEXCEPT	_GLIBCXX_STDEXCEPT	
#pragma GCC system_header	GCC system_header	
#if _GLIBCXX_USE_DUAL_ABI	_GLIBCXX_USE_DUAL_ABI	
#if _GLIBCXX_USE_CXX11_ABI	_GLIBCXX_USE_CXX11_ABI	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if _GLIBCXX_USE_CXX11_ABI || _GLIBCXX_DEFINE_STDEXCEPT_COPY_OPS	_GLIBCXX_USE_CXX11_ABI || _GLIBCXX_DEFINE_STDEXCEPT_COPY_OPS	
#elif __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_TM_TS_INTERNAL	_GLIBCXX_TM_TS_INTERNAL	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if _GLIBCXX_USE_CXX11_ABI || _GLIBCXX_DEFINE_STDEXCEPT_COPY_OPS	_GLIBCXX_USE_CXX11_ABI || _GLIBCXX_DEFINE_STDEXCEPT_COPY_OPS	
#elif __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_TM_TS_INTERNAL	_GLIBCXX_TM_TS_INTERNAL	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#include <type_traits>	<type_traits>	
#define _GLIBCXX_INVOKE_H 1	_GLIBCXX_INVOKE_H	1
#ifndef _GLIBCXX_INVOKE_H	_GLIBCXX_INVOKE_H	
#pragma GCC system_header	GCC system_header	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#include <bits/invoke.h>	<bits/invoke.h>	
#include <bits/uses_allocator.h>	<bits/uses_allocator.h>	
#include <array>	<array>	
#include <utility>	<utility>	
#define _GLIBCXX_TUPLE 1	_GLIBCXX_TUPLE	1
#ifndef _GLIBCXX_TUPLE	_GLIBCXX_TUPLE	
#pragma GCC system_header	GCC system_header	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cpp_deduction_guides >= 201606	__cpp_deduction_guides >= 201606	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus >= 201402L	__cplusplus >= 201402L	
#if __cplusplus > 201402L || !defined(__STRICT_ANSI__)	__cplusplus > 201402L || !defined(__STRICT_ANSI__)	
#if __cplusplus > 201402L || !defined(__STRICT_ANSI__)	__cplusplus > 201402L || !defined(__STRICT_ANSI__)	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#include <bits/alloc_traits.h>	<bits/alloc_traits.h>	
#include <bits/ptr_traits.h>	<bits/ptr_traits.h>	
#include <type_traits>	<type_traits>	
#define _ALLOCATED_PTR_H 1	_ALLOCATED_PTR_H	1
#ifndef _ALLOCATED_PTR_H	_ALLOCATED_PTR_H	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#include <bits/stl_function.h>	<bits/stl_function.h>	
#include <bits/invoke.h>	<bits/invoke.h>	
#include <bits/move.h>	<bits/move.h>	
#define _GLIBCXX_MEM_FN_TRAITS2(_CV,_REF,_LVAL,_RVAL) template<typename _Res, typename _Class, typename... _ArgTypes> struct _Mem_fn_traits<_Res (_Class::*)(_ArgTypes...) _CV _REF> : _Mem_fn_traits_base<_Res, _CV _Class, _ArgTypes...> { using __vararg = false_type; }; template<typename _Res, typename _Class, typename... _ArgTypes> struct _Mem_fn_traits<_Res (_Class::*)(_ArgTypes... ...) _CV _REF> : _Mem_fn_traits_base<_Res, _CV _Class, _ArgTypes...> { using __vararg = true_type; };	_GLIBCXX_MEM_FN_TRAITS2(_CV,_REF,_LVAL,_RVAL)	template<typename _Res, typename _Class, typename... _ArgTypes> struct _Mem_fn_traits<_Res (_Class::*)(_ArgTypes...) _CV _REF> : _Mem_fn_traits_base<_Res, _CV _Class, _ArgTypes...> { using __vararg = false_type; }; template<typename _Res, typename _Class, typename... _ArgTypes> struct _Mem_fn_traits<_Res (_Class::*)(_ArgTypes... ...) _CV _REF> : _Mem_fn_traits_base<_Res, _CV _Class, _ArgTypes...> { using __vararg = true_type; };
#define _GLIBCXX_MEM_FN_TRAITS(_REF,_LVAL,_RVAL) _GLIBCXX_MEM_FN_TRAITS2( , _REF, _LVAL, _RVAL) _GLIBCXX_MEM_FN_TRAITS2(const , _REF, _LVAL, _RVAL) _GLIBCXX_MEM_FN_TRAITS2(volatile , _REF, _LVAL, _RVAL) _GLIBCXX_MEM_FN_TRAITS2(const volatile, _REF, _LVAL, _RVAL)	_GLIBCXX_MEM_FN_TRAITS(_REF,_LVAL,_RVAL)	_GLIBCXX_MEM_FN_TRAITS2( , _REF, _LVAL, _RVAL) _GLIBCXX_MEM_FN_TRAITS2(const , _REF, _LVAL, _RVAL) _GLIBCXX_MEM_FN_TRAITS2(volatile , _REF, _LVAL, _RVAL) _GLIBCXX_MEM_FN_TRAITS2(const volatile, _REF, _LVAL, _RVAL)
#undef _GLIBCXX_MEM_FN_TRAITS2	_GLIBCXX_MEM_FN_TRAITS2	
#undef _GLIBCXX_MEM_FN_TRAITS	_GLIBCXX_MEM_FN_TRAITS	
#define _GLIBCXX_REFWRAP_H 1	_GLIBCXX_REFWRAP_H	1
#ifndef _GLIBCXX_REFWRAP_H	_GLIBCXX_REFWRAP_H	
#pragma GCC system_header	GCC system_header	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus <= 201703L	__cplusplus <= 201703L	
#if __cplusplus <= 201703L	__cplusplus <= 201703L	
#if __cplusplus > 201703L	__cplusplus > 201703L	
#if __cpp_deduction_guides	__cpp_deduction_guides	
#include <type_traits>	<type_traits>	
#define _ALIGNED_BUFFER_H 1	_ALIGNED_BUFFER_H	1
#ifndef _ALIGNED_BUFFER_H	_ALIGNED_BUFFER_H	
#pragma GCC system_header	GCC system_header	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if _GLIBCXX_INLINE_VERSION	_GLIBCXX_INLINE_VERSION	
#include <ext/aligned_buffer.h>	<ext/aligned_buffer.h>	
#include <bits/stl_function.h>	<bits/stl_function.h>	
#include <bits/refwrap.h>	<bits/refwrap.h>	
#include <bits/allocated_ptr.h>	<bits/allocated_ptr.h>	
#include <typeinfo>	<typeinfo>	
#define __cpp_lib_shared_ptr_arrays 201611L	__cpp_lib_shared_ptr_arrays	201611L
#define _SHARED_PTR_BASE_H 1	_SHARED_PTR_BASE_H	1
#ifndef _SHARED_PTR_BASE_H	_SHARED_PTR_BASE_H	
#if _GLIBCXX_USE_DEPRECATED	_GLIBCXX_USE_DEPRECATED	
#pragma GCC diagnostic push	GCC diagnostic push	
"#pragma GCC diagnostic ignored ""-Wdeprecated-declarations"""	"GCC diagnostic ignored ""-Wdeprecated-declarations"""	
#pragma GCC diagnostic pop	GCC diagnostic pop	
#if __cpp_rtti	__cpp_rtti	
#if __cpp_rtti	__cpp_rtti	
#if _GLIBCXX_USE_DEPRECATED	_GLIBCXX_USE_DEPRECATED	
#pragma GCC diagnostic push	GCC diagnostic push	
"#pragma GCC diagnostic ignored ""-Wdeprecated-declarations"""	"GCC diagnostic ignored ""-Wdeprecated-declarations"""	
#pragma GCC diagnostic pop	GCC diagnostic pop	
#if __cplusplus <= 201402L	__cplusplus <= 201402L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus <= 201402L && _GLIBCXX_USE_DEPRECATED	__cplusplus <= 201402L && _GLIBCXX_USE_DEPRECATED	
#if _GLIBCXX_USE_DEPRECATED	_GLIBCXX_USE_DEPRECATED	
#pragma GCC diagnostic push	GCC diagnostic push	
"#pragma GCC diagnostic ignored ""-Wdeprecated-declarations"""	"GCC diagnostic ignored ""-Wdeprecated-declarations"""	
#pragma GCC diagnostic pop	GCC diagnostic pop	
#if _GLIBCXX_USE_DEPRECATED	_GLIBCXX_USE_DEPRECATED	
#pragma GCC diagnostic push	GCC diagnostic push	
"#pragma GCC diagnostic ignored ""-Wdeprecated-declarations"""	"GCC diagnostic ignored ""-Wdeprecated-declarations"""	
#pragma GCC diagnostic pop	GCC diagnostic pop	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus > 201402L || !defined(__STRICT_ANSI__)	__cplusplus > 201402L || !defined(__STRICT_ANSI__)	
#define __ATOMIC_RELAXED 0	__ATOMIC_RELAXED	0
#include <bits/shared_ptr_base.h>	<bits/shared_ptr_base.h>	
#define __cpp_lib_enable_shared_from_this 201603	__cpp_lib_enable_shared_from_this	201603
#define _SHARED_PTR_H 1	_SHARED_PTR_H	1
#ifndef _SHARED_PTR_H	_SHARED_PTR_H	
#if __cpp_rtti	__cpp_rtti	
#if __cpp_rtti	__cpp_rtti	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if _GLIBCXX_USE_DEPRECATED	_GLIBCXX_USE_DEPRECATED	
#pragma GCC diagnostic push	GCC diagnostic push	
"#pragma GCC diagnostic ignored ""-Wdeprecated-declarations"""	"GCC diagnostic ignored ""-Wdeprecated-declarations"""	
#pragma GCC diagnostic pop	GCC diagnostic pop	
#if __cplusplus <= 201402L && _GLIBCXX_USE_DEPRECATED	__cplusplus <= 201402L && _GLIBCXX_USE_DEPRECATED	
#if _GLIBCXX_USE_DEPRECATED	_GLIBCXX_USE_DEPRECATED	
#pragma GCC diagnostic push	GCC diagnostic push	
"#pragma GCC diagnostic ignored ""-Wdeprecated-declarations"""	"GCC diagnostic ignored ""-Wdeprecated-declarations"""	
#pragma GCC diagnostic pop	GCC diagnostic pop	
#if __cpp_deduction_guides >= 201606	__cpp_deduction_guides >= 201606	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cpp_deduction_guides >= 201606	__cpp_deduction_guides >= 201606	
#if __cplusplus > 201402L || !defined(__STRICT_ANSI__)	__cplusplus > 201402L || !defined(__STRICT_ANSI__)	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#define ATOMIC_POINTER_LOCK_FREE __GCC_ATOMIC_POINTER_LOCK_FREE	ATOMIC_POINTER_LOCK_FREE	__GCC_ATOMIC_POINTER_LOCK_FREE
#define ATOMIC_LLONG_LOCK_FREE __GCC_ATOMIC_LLONG_LOCK_FREE	ATOMIC_LLONG_LOCK_FREE	__GCC_ATOMIC_LLONG_LOCK_FREE
#define ATOMIC_LONG_LOCK_FREE __GCC_ATOMIC_LONG_LOCK_FREE	ATOMIC_LONG_LOCK_FREE	__GCC_ATOMIC_LONG_LOCK_FREE
#define ATOMIC_INT_LOCK_FREE __GCC_ATOMIC_INT_LOCK_FREE	ATOMIC_INT_LOCK_FREE	__GCC_ATOMIC_INT_LOCK_FREE
#define ATOMIC_SHORT_LOCK_FREE __GCC_ATOMIC_SHORT_LOCK_FREE	ATOMIC_SHORT_LOCK_FREE	__GCC_ATOMIC_SHORT_LOCK_FREE
#define ATOMIC_CHAR32_T_LOCK_FREE __GCC_ATOMIC_CHAR32_T_LOCK_FREE	ATOMIC_CHAR32_T_LOCK_FREE	__GCC_ATOMIC_CHAR32_T_LOCK_FREE
#define ATOMIC_CHAR16_T_LOCK_FREE __GCC_ATOMIC_CHAR16_T_LOCK_FREE	ATOMIC_CHAR16_T_LOCK_FREE	__GCC_ATOMIC_CHAR16_T_LOCK_FREE
#define ATOMIC_WCHAR_T_LOCK_FREE __GCC_ATOMIC_WCHAR_T_LOCK_FREE	ATOMIC_WCHAR_T_LOCK_FREE	__GCC_ATOMIC_WCHAR_T_LOCK_FREE
#define ATOMIC_CHAR_LOCK_FREE __GCC_ATOMIC_CHAR_LOCK_FREE	ATOMIC_CHAR_LOCK_FREE	__GCC_ATOMIC_CHAR_LOCK_FREE
#define ATOMIC_BOOL_LOCK_FREE __GCC_ATOMIC_BOOL_LOCK_FREE	ATOMIC_BOOL_LOCK_FREE	__GCC_ATOMIC_BOOL_LOCK_FREE
#define _GLIBCXX_ATOMIC_LOCK_FREE_H 1	_GLIBCXX_ATOMIC_LOCK_FREE_H	1
#ifndef _GLIBCXX_ATOMIC_LOCK_FREE_H	_GLIBCXX_ATOMIC_LOCK_FREE_H	
#pragma GCC system_header	GCC system_header	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_USE_CHAR8_T	_GLIBCXX_USE_CHAR8_T	
#include <bits/atomic_lockfree_defines.h>	<bits/atomic_lockfree_defines.h>	
#include <stdint.h>	<stdint.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#define ATOMIC_FLAG_INIT { 0 }	ATOMIC_FLAG_INIT	{ 0 }
#define ATOMIC_VAR_INIT(_VI) { _VI }	ATOMIC_VAR_INIT(_VI)	{ _VI }
#define _GLIBCXX_ATOMIC_BASE_H 1	_GLIBCXX_ATOMIC_BASE_H	1
#ifndef _GLIBCXX_ATOMIC_BASE_H	_GLIBCXX_ATOMIC_BASE_H	
#pragma GCC system_header	GCC system_header	
#ifndef _GLIBCXX_ALWAYS_INLINE	_GLIBCXX_ALWAYS_INLINE	
#if __cplusplus > 201703L	__cplusplus > 201703L	
#if __GCC_ATOMIC_TEST_AND_SET_TRUEVAL == 1	__GCC_ATOMIC_TEST_AND_SET_TRUEVAL == 1	
#define __GCC_ATOMIC_TEST_AND_SET_TRUEVAL 1	__GCC_ATOMIC_TEST_AND_SET_TRUEVAL	1
#include <bits/atomic_base.h>	<bits/atomic_base.h>	
#define _SHARED_PTR_ATOMIC_H 1	_SHARED_PTR_ATOMIC_H	1
#ifndef _SHARED_PTR_ATOMIC_H	_SHARED_PTR_ATOMIC_H	
#ifdef __GTHREADS	__GTHREADS	
#ifdef __GTHREADS	__GTHREADS	
#include <debug/debug.h>	<debug/debug.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#define _BACKWARD_AUTO_PTR_H 1	_BACKWARD_AUTO_PTR_H	1
#ifndef _BACKWARD_AUTO_PTR_H	_BACKWARD_AUTO_PTR_H	
#pragma GCC diagnostic push	GCC diagnostic push	
"#pragma GCC diagnostic ignored ""-Wdeprecated-declarations"""	"GCC diagnostic ignored ""-Wdeprecated-declarations"""	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#pragma GCC diagnostic pop	GCC diagnostic pop	
#include <cstdint>	<cstdint>	
#include <backward/auto_ptr.h>	<backward/auto_ptr.h>	
#include <bits/shared_ptr_atomic.h>	<bits/shared_ptr_atomic.h>	
#include <bits/shared_ptr.h>	<bits/shared_ptr.h>	
#include <bits/unique_ptr.h>	<bits/unique_ptr.h>	
#include <debug/debug.h>	<debug/debug.h>	
#include <type_traits>	<type_traits>	
#include <bits/uses_allocator.h>	<bits/uses_allocator.h>	
#include <bits/stl_function.h>	<bits/stl_function.h>	
#include <bits/functexcept.h>	<bits/functexcept.h>	
#include <ext/concurrence.h>	<ext/concurrence.h>	
#include <ext/atomicity.h>	<ext/atomicity.h>	
#include <iosfwd>	<iosfwd>	
#include <typeinfo>	<typeinfo>	
#include <exception>	<exception>	
#include <bits/stl_raw_storage_iter.h>	<bits/stl_raw_storage_iter.h>	
#include <bits/stl_tempbuf.h>	<bits/stl_tempbuf.h>	
#include <bits/stl_uninitialized.h>	<bits/stl_uninitialized.h>	
#include <bits/stl_construct.h>	<bits/stl_construct.h>	
#include <bits/allocator.h>	<bits/allocator.h>	
#include <bits/stl_algobase.h>	<bits/stl_algobase.h>	
#define _GLIBCXX_MEMORY 1	_GLIBCXX_MEMORY	1
#ifndef _GLIBCXX_MEMORY	_GLIBCXX_MEMORY	
#pragma GCC system_header	GCC system_header	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if _GLIBCXX_USE_DEPRECATED	_GLIBCXX_USE_DEPRECATED	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201703L	__cplusplus > 201703L	
#ifdef _GLIBCXX_USE_C99_STDINT_TR1	_GLIBCXX_USE_C99_STDINT_TR1	
#if __cplusplus > 201703L	__cplusplus > 201703L	
#if __cplusplus > 201703L	__cplusplus > 201703L	
#if __cpp_concepts	__cpp_concepts	
#if __cpp_concepts	__cpp_concepts	
#if ! __cpp_concepts	! __cpp_concepts	
#if __cpp_concepts	__cpp_concepts	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __PSTL_EXECUTION_POLICIES_DEFINED	__PSTL_EXECUTION_POLICIES_DEFINED	
#include <bits/c++config.h>	<bits/c++config.h>	
#define __INT_N(TYPE,BITSIZE,EXT,UEXT) template<> struct numeric_limits<TYPE> { static _GLIBCXX_USE_CONSTEXPR bool is_specialized = true; static _GLIBCXX_CONSTEXPR TYPE min() _GLIBCXX_USE_NOEXCEPT { return __glibcxx_min_b (TYPE, BITSIZE); } static _GLIBCXX_CONSTEXPR TYPE max() _GLIBCXX_USE_NOEXCEPT { return __glibcxx_max_b (TYPE, BITSIZE); } static _GLIBCXX_USE_CONSTEXPR int digits = BITSIZE - 1; static _GLIBCXX_USE_CONSTEXPR int digits10 = (BITSIZE - 1) * 643L / 2136; static _GLIBCXX_USE_CONSTEXPR bool is_signed = true; static _GLIBCXX_USE_CONSTEXPR bool is_integer = true; static _GLIBCXX_USE_CONSTEXPR bool is_exact = true; static _GLIBCXX_USE_CONSTEXPR int radix = 2; static _GLIBCXX_CONSTEXPR TYPE epsilon() _GLIBCXX_USE_NOEXCEPT { return 0; } static _GLIBCXX_CONSTEXPR TYPE round_error() _GLIBCXX_USE_NOEXCEPT { return 0; } EXT static _GLIBCXX_USE_CONSTEXPR int min_exponent = 0; static _GLIBCXX_USE_CONSTEXPR int min_exponent10 = 0; static _GLIBCXX_USE_CONSTEXPR int max_exponent = 0; static _GLIBCXX_USE_CONSTEXPR int max_exponent10 = 0; static _GLIBCXX_USE_CONSTEXPR bool has_infinity = false; static _GLIBCXX_USE_CONSTEXPR bool has_quiet_NaN = false; static _GLIBCXX_USE_CONSTEXPR bool has_signaling_NaN = false; static _GLIBCXX_USE_CONSTEXPR float_denorm_style has_denorm = denorm_absent; static _GLIBCXX_USE_CONSTEXPR bool has_denorm_loss = false; static _GLIBCXX_CONSTEXPR TYPE infinity() _GLIBCXX_USE_NOEXCEPT { return static_cast<TYPE>(0); } static _GLIBCXX_CONSTEXPR TYPE quiet_NaN() _GLIBCXX_USE_NOEXCEPT { return static_cast<TYPE>(0); } static _GLIBCXX_CONSTEXPR TYPE signaling_NaN() _GLIBCXX_USE_NOEXCEPT { return static_cast<TYPE>(0); } static _GLIBCXX_CONSTEXPR TYPE denorm_min() _GLIBCXX_USE_NOEXCEPT { return static_cast<TYPE>(0); } static _GLIBCXX_USE_CONSTEXPR bool is_iec559 = false; static _GLIBCXX_USE_CONSTEXPR bool is_bounded = true; static _GLIBCXX_USE_CONSTEXPR bool is_modulo = false; static _GLIBCXX_USE_CONSTEXPR bool traps = __glibcxx_integral_traps; static _GLIBCXX_USE_CONSTEXPR bool tinyness_before = false; static _GLIBCXX_USE_CONSTEXPR float_round_style round_style = round_toward_zero; }; template<> struct numeric_limits<unsigned TYPE> { static _GLIBCXX_USE_CONSTEXPR bool is_specialized = true; static _GLIBCXX_CONSTEXPR unsigned TYPE min() _GLIBCXX_USE_NOEXCEPT { return 0; } static _GLIBCXX_CONSTEXPR unsigned TYPE max() _GLIBCXX_USE_NOEXCEPT { return __glibcxx_max_b (unsigned TYPE, BITSIZE); } UEXT static _GLIBCXX_USE_CONSTEXPR int digits = BITSIZE; static _GLIBCXX_USE_CONSTEXPR int digits10 = BITSIZE * 643L / 2136; static _GLIBCXX_USE_CONSTEXPR bool is_signed = false; static _GLIBCXX_USE_CONSTEXPR bool is_integer = true; static _GLIBCXX_USE_CONSTEXPR bool is_exact = true; static _GLIBCXX_USE_CONSTEXPR int radix = 2; static _GLIBCXX_CONSTEXPR unsigned TYPE epsilon() _GLIBCXX_USE_NOEXCEPT { return 0; } static _GLIBCXX_CONSTEXPR unsigned TYPE round_error() _GLIBCXX_USE_NOEXCEPT { return 0; } static _GLIBCXX_USE_CONSTEXPR int min_exponent = 0; static _GLIBCXX_USE_CONSTEXPR int min_exponent10 = 0; static _GLIBCXX_USE_CONSTEXPR int max_exponent = 0; static _GLIBCXX_USE_CONSTEXPR int max_exponent10 = 0; static _GLIBCXX_USE_CONSTEXPR bool has_infinity = false; static _GLIBCXX_USE_CONSTEXPR bool has_quiet_NaN = false; static _GLIBCXX_USE_CONSTEXPR bool has_signaling_NaN = false; static _GLIBCXX_USE_CONSTEXPR float_denorm_style has_denorm = denorm_absent; static _GLIBCXX_USE_CONSTEXPR bool has_denorm_loss = false; static _GLIBCXX_CONSTEXPR unsigned TYPE infinity() _GLIBCXX_USE_NOEXCEPT { return static_cast<unsigned TYPE>(0); } static _GLIBCXX_CONSTEXPR unsigned TYPE quiet_NaN() _GLIBCXX_USE_NOEXCEPT { return static_cast<unsigned TYPE>(0); } static _GLIBCXX_CONSTEXPR unsigned TYPE signaling_NaN() _GLIBCXX_USE_NOEXCEPT { return static_cast<unsigned TYPE>(0); } static _GLIBCXX_CONSTEXPR unsigned TYPE denorm_min() _GLIBCXX_USE_NOEXCEPT { return static_cast<unsigned TYPE>(0); } static _GLIBCXX_USE_CONSTEXPR bool is_iec559 = false; static _GLIBCXX_USE_CONSTEXPR bool is_bounded = true; static _GLIBCXX_USE_CONSTEXPR bool is_modulo = true; static _GLIBCXX_USE_CONSTEXPR bool traps = __glibcxx_integral_traps; static _GLIBCXX_USE_CONSTEXPR bool tinyness_before = false; static _GLIBCXX_USE_CONSTEXPR float_round_style round_style = round_toward_zero; };	__INT_N(TYPE,BITSIZE,EXT,UEXT)	template<> struct numeric_limits<TYPE> { static _GLIBCXX_USE_CONSTEXPR bool is_specialized = true; static _GLIBCXX_CONSTEXPR TYPE min() _GLIBCXX_USE_NOEXCEPT { return __glibcxx_min_b (TYPE, BITSIZE); } static _GLIBCXX_CONSTEXPR TYPE max() _GLIBCXX_USE_NOEXCEPT { return __glibcxx_max_b (TYPE, BITSIZE); } static _GLIBCXX_USE_CONSTEXPR int digits = BITSIZE - 1; static _GLIBCXX_USE_CONSTEXPR int digits10 = (BITSIZE - 1) * 643L / 2136; static _GLIBCXX_USE_CONSTEXPR bool is_signed = true; static _GLIBCXX_USE_CONSTEXPR bool is_integer = true; static _GLIBCXX_USE_CONSTEXPR bool is_exact = true; static _GLIBCXX_USE_CONSTEXPR int radix = 2; static _GLIBCXX_CONSTEXPR TYPE epsilon() _GLIBCXX_USE_NOEXCEPT { return 0; } static _GLIBCXX_CONSTEXPR TYPE round_error() _GLIBCXX_USE_NOEXCEPT { return 0; } EXT static _GLIBCXX_USE_CONSTEXPR int min_exponent = 0; static _GLIBCXX_USE_CONSTEXPR int min_exponent10 = 0; static _GLIBCXX_USE_CONSTEXPR int max_exponent = 0; static _GLIBCXX_USE_CONSTEXPR int max_exponent10 = 0; static _GLIBCXX_USE_CONSTEXPR bool has_infinity = false; static _GLIBCXX_USE_CONSTEXPR bool has_quiet_NaN = false; static _GLIBCXX_USE_CONSTEXPR bool has_signaling_NaN = false; static _GLIBCXX_USE_CONSTEXPR float_denorm_style has_denorm = denorm_absent; static _GLIBCXX_USE_CONSTEXPR bool has_denorm_loss = false; static _GLIBCXX_CONSTEXPR TYPE infinity() _GLIBCXX_USE_NOEXCEPT { return static_cast<TYPE>(0); } static _GLIBCXX_CONSTEXPR TYPE quiet_NaN() _GLIBCXX_USE_NOEXCEPT { return static_cast<TYPE>(0); } static _GLIBCXX_CONSTEXPR TYPE signaling_NaN() _GLIBCXX_USE_NOEXCEPT { return static_cast<TYPE>(0); } static _GLIBCXX_CONSTEXPR TYPE denorm_min() _GLIBCXX_USE_NOEXCEPT { return static_cast<TYPE>(0); } static _GLIBCXX_USE_CONSTEXPR bool is_iec559 = false; static _GLIBCXX_USE_CONSTEXPR bool is_bounded = true; static _GLIBCXX_USE_CONSTEXPR bool is_modulo = false; static _GLIBCXX_USE_CONSTEXPR bool traps = __glibcxx_integral_traps; static _GLIBCXX_USE_CONSTEXPR bool tinyness_before = false; static _GLIBCXX_USE_CONSTEXPR float_round_style round_style = round_toward_zero; }; template<> struct numeric_limits<unsigned TYPE> { static _GLIBCXX_USE_CONSTEXPR bool is_specialized = true; static _GLIBCXX_CONSTEXPR unsigned TYPE min() _GLIBCXX_USE_NOEXCEPT { return 0; } static _GLIBCXX_CONSTEXPR unsigned TYPE max() _GLIBCXX_USE_NOEXCEPT { return __glibcxx_max_b (unsigned TYPE, BITSIZE); } UEXT static _GLIBCXX_USE_CONSTEXPR int digits = BITSIZE; static _GLIBCXX_USE_CONSTEXPR int digits10 = BITSIZE * 643L / 2136; static _GLIBCXX_USE_CONSTEXPR bool is_signed = false; static _GLIBCXX_USE_CONSTEXPR bool is_integer = true; static _GLIBCXX_USE_CONSTEXPR bool is_exact = true; static _GLIBCXX_USE_CONSTEXPR int radix = 2; static _GLIBCXX_CONSTEXPR unsigned TYPE epsilon() _GLIBCXX_USE_NOEXCEPT { return 0; } static _GLIBCXX_CONSTEXPR unsigned TYPE round_error() _GLIBCXX_USE_NOEXCEPT { return 0; } static _GLIBCXX_USE_CONSTEXPR int min_exponent = 0; static _GLIBCXX_USE_CONSTEXPR int min_exponent10 = 0; static _GLIBCXX_USE_CONSTEXPR int max_exponent = 0; static _GLIBCXX_USE_CONSTEXPR int max_exponent10 = 0; static _GLIBCXX_USE_CONSTEXPR bool has_infinity = false; static _GLIBCXX_USE_CONSTEXPR bool has_quiet_NaN = false; static _GLIBCXX_USE_CONSTEXPR bool has_signaling_NaN = false; static _GLIBCXX_USE_CONSTEXPR float_denorm_style has_denorm = denorm_absent; static _GLIBCXX_USE_CONSTEXPR bool has_denorm_loss = false; static _GLIBCXX_CONSTEXPR unsigned TYPE infinity() _GLIBCXX_USE_NOEXCEPT { return static_cast<unsigned TYPE>(0); } static _GLIBCXX_CONSTEXPR unsigned TYPE quiet_NaN() _GLIBCXX_USE_NOEXCEPT { return static_cast<unsigned TYPE>(0); } static _GLIBCXX_CONSTEXPR unsigned TYPE signaling_NaN() _GLIBCXX_USE_NOEXCEPT { return static_cast<unsigned TYPE>(0); } static _GLIBCXX_CONSTEXPR unsigned TYPE denorm_min() _GLIBCXX_USE_NOEXCEPT { return static_cast<unsigned TYPE>(0); } static _GLIBCXX_USE_CONSTEXPR bool is_iec559 = false; static _GLIBCXX_USE_CONSTEXPR bool is_bounded = true; static _GLIBCXX_USE_CONSTEXPR bool is_modulo = true; static _GLIBCXX_USE_CONSTEXPR bool traps = __glibcxx_integral_traps; static _GLIBCXX_USE_CONSTEXPR bool tinyness_before = false; static _GLIBCXX_USE_CONSTEXPR float_round_style round_style = round_toward_zero; };
#define __INT_N_U201103(TYPE) static constexpr unsigned TYPE lowest() noexcept { return min(); } static constexpr int max_digits10 = 0;	__INT_N_U201103(TYPE)	static constexpr unsigned TYPE lowest() noexcept { return min(); } static constexpr int max_digits10 = 0;
#define __glibcxx_max_b(T,B) (__glibcxx_signed_b (T,B) ? (((((T)1 << (__glibcxx_digits_b (T,B) - 1)) - 1) << 1) + 1) : ~(T)0)	__glibcxx_max_b(T,B)	(__glibcxx_signed_b (T,B) ? (((((T)1 << (__glibcxx_digits_b (T,B) - 1)) - 1) << 1) + 1) : ~(T)0)
#define __glibcxx_signed_b(T,B) ((T)(-1) < 0)	__glibcxx_signed_b(T,B)	((T)(-1) < 0)
#define __glibcxx_digits_b(T,B) (B - __glibcxx_signed_b (T,B))	__glibcxx_digits_b(T,B)	(B - __glibcxx_signed_b (T,B))
#define __INT_N_201103(TYPE) static constexpr TYPE lowest() noexcept { return min(); } static constexpr int max_digits10 = 0;	__INT_N_201103(TYPE)	static constexpr TYPE lowest() noexcept { return min(); } static constexpr int max_digits10 = 0;
#define __glibcxx_min_b(T,B) (__glibcxx_signed_b (T,B) ? -__glibcxx_max_b (T,B) - 1 : (T)0)	__glibcxx_min_b(T,B)	(__glibcxx_signed_b (T,B) ? -__glibcxx_max_b (T,B) - 1 : (T)0)
#define __glibcxx_max(T) __glibcxx_max_b (T, sizeof(T) * __CHAR_BIT__)	__glibcxx_max(T)	__glibcxx_max_b (T, sizeof(T) * __CHAR_BIT__)
#define __glibcxx_min(T) __glibcxx_min_b (T, sizeof(T) * __CHAR_BIT__)	__glibcxx_min(T)	__glibcxx_min_b (T, sizeof(T) * __CHAR_BIT__)
#define __glibcxx_long_double_tinyness_before false	__glibcxx_long_double_tinyness_before	false
#define __glibcxx_long_double_traps false	__glibcxx_long_double_traps	false
#define __glibcxx_long_double_has_denorm_loss false	__glibcxx_long_double_has_denorm_loss	false
#define __glibcxx_max_digits10(T) (2 + (T) * 643L / 2136)	__glibcxx_max_digits10(T)	(2 + (T) * 643L / 2136)
#define __glibcxx_double_tinyness_before false	__glibcxx_double_tinyness_before	false
#define __glibcxx_double_traps false	__glibcxx_double_traps	false
#define __glibcxx_double_has_denorm_loss false	__glibcxx_double_has_denorm_loss	false
#define __glibcxx_float_tinyness_before false	__glibcxx_float_tinyness_before	false
#define __glibcxx_float_traps false	__glibcxx_float_traps	false
#define __glibcxx_float_has_denorm_loss false	__glibcxx_float_has_denorm_loss	false
#define __glibcxx_integral_traps true	__glibcxx_integral_traps	true
#define __glibcxx_digits10(T) __glibcxx_digits10_b (T, sizeof(T) * __CHAR_BIT__)	__glibcxx_digits10(T)	__glibcxx_digits10_b (T, sizeof(T) * __CHAR_BIT__)
#define __glibcxx_digits10_b(T,B) (__glibcxx_digits_b (T,B) * 643L / 2136)	__glibcxx_digits10_b(T,B)	(__glibcxx_digits_b (T,B) * 643L / 2136)
#define __glibcxx_digits(T) __glibcxx_digits_b (T, sizeof(T) * __CHAR_BIT__)	__glibcxx_digits(T)	__glibcxx_digits_b (T, sizeof(T) * __CHAR_BIT__)
#define __glibcxx_signed(T) __glibcxx_signed_b (T, sizeof(T) * __CHAR_BIT__)	__glibcxx_signed(T)	__glibcxx_signed_b (T, sizeof(T) * __CHAR_BIT__)
#undef __glibcxx_max_digits10	__glibcxx_max_digits10	
#undef __glibcxx_digits10	__glibcxx_digits10	
#undef __glibcxx_digits	__glibcxx_digits	
#undef __glibcxx_max	__glibcxx_max	
#undef __glibcxx_min	__glibcxx_min	
#undef __glibcxx_signed	__glibcxx_signed	
#undef __glibcxx_long_double_tinyness_before	__glibcxx_long_double_tinyness_before	
#undef __glibcxx_long_double_traps	__glibcxx_long_double_traps	
#undef __glibcxx_long_double_has_denorm_loss	__glibcxx_long_double_has_denorm_loss	
#undef __glibcxx_double_tinyness_before	__glibcxx_double_tinyness_before	
#undef __glibcxx_double_traps	__glibcxx_double_traps	
#undef __glibcxx_double_has_denorm_loss	__glibcxx_double_has_denorm_loss	
#undef __glibcxx_float_tinyness_before	__glibcxx_float_tinyness_before	
#undef __glibcxx_float_traps	__glibcxx_float_traps	
#undef __glibcxx_float_has_denorm_loss	__glibcxx_float_has_denorm_loss	
#undef __INT_N_U201103	__INT_N_U201103	
#undef __INT_N_201103	__INT_N_201103	
#undef __INT_N	__INT_N	
#define _GLIBCXX_NUMERIC_LIMITS 1	_GLIBCXX_NUMERIC_LIMITS	1
#ifndef _GLIBCXX_NUMERIC_LIMITS	_GLIBCXX_NUMERIC_LIMITS	
#pragma GCC system_header	GCC system_header	
#ifndef __glibcxx_integral_traps	__glibcxx_integral_traps	
#ifndef __glibcxx_float_has_denorm_loss	__glibcxx_float_has_denorm_loss	
#ifndef __glibcxx_float_traps	__glibcxx_float_traps	
#ifndef __glibcxx_float_tinyness_before	__glibcxx_float_tinyness_before	
#ifndef __glibcxx_double_has_denorm_loss	__glibcxx_double_has_denorm_loss	
#ifndef __glibcxx_double_traps	__glibcxx_double_traps	
#ifndef __glibcxx_double_tinyness_before	__glibcxx_double_tinyness_before	
#ifndef __glibcxx_long_double_has_denorm_loss	__glibcxx_long_double_has_denorm_loss	
#ifndef __glibcxx_long_double_traps	__glibcxx_long_double_traps	
#ifndef __glibcxx_long_double_tinyness_before	__glibcxx_long_double_tinyness_before	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if _GLIBCXX_USE_CHAR8_T	_GLIBCXX_USE_CHAR8_T	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if !defined(__STRICT_ANSI__)	!defined(__STRICT_ANSI__)	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef __GLIBCXX_TYPE_INT_N_0	__GLIBCXX_TYPE_INT_N_0	
#ifdef __GLIBCXX_TYPE_INT_N_1	__GLIBCXX_TYPE_INT_N_1	
#ifdef __GLIBCXX_TYPE_INT_N_2	__GLIBCXX_TYPE_INT_N_2	
#ifdef __GLIBCXX_TYPE_INT_N_3	__GLIBCXX_TYPE_INT_N_3	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#define __LDBL_DENORM_MIN__ 3.64519953188247460252840593361941982e-4951L	__LDBL_DENORM_MIN__	3.64519953188247460252840593361941982e-4951L
#define __LDBL_HAS_DENORM__ 1	__LDBL_HAS_DENORM__	1
#define __LDBL_HAS_QUIET_NAN__ 1	__LDBL_HAS_QUIET_NAN__	1
#define __LDBL_HAS_INFINITY__ 1	__LDBL_HAS_INFINITY__	1
#define __LDBL_MAX_EXP__ 16384	__LDBL_MAX_EXP__	16384
#define __LDBL_MIN_10_EXP__ (-4931)	__LDBL_MIN_10_EXP__	(-4931)
#define __LDBL_MIN_EXP__ (-16381)	__LDBL_MIN_EXP__	(-16381)
#define __LDBL_EPSILON__ 1.08420217248550443400745280086994171e-19L	__LDBL_EPSILON__	1.08420217248550443400745280086994171e-19L
#define __FLT_RADIX__ 2	__FLT_RADIX__	2
#define __LDBL_MAX__ 1.18973149535723176502126385303097021e+4932L	__LDBL_MAX__	1.18973149535723176502126385303097021e+4932L
#define __LDBL_MIN__ 3.36210314311209350626267781732175260e-4932L	__LDBL_MIN__	3.36210314311209350626267781732175260e-4932L
#define __DBL_DENORM_MIN__ double(4.94065645841246544176568792868221372e-324L)	__DBL_DENORM_MIN__	double(4.94065645841246544176568792868221372e-324L)
#define __DBL_HAS_DENORM__ 1	__DBL_HAS_DENORM__	1
#define __LONG_LONG_MAX__ 0x7fffffffffffffffLL	__LONG_LONG_MAX__	0x7fffffffffffffffLL
#define __LONG_MAX__ 0x7fffffffffffffffL	__LONG_MAX__	0x7fffffffffffffffL
#define __DBL_HAS_QUIET_NAN__ 1	__DBL_HAS_QUIET_NAN__	1
#define __DBL_HAS_INFINITY__ 1	__DBL_HAS_INFINITY__	1
#define __DBL_MAX_EXP__ 1024	__DBL_MAX_EXP__	1024
#define __DBL_MIN_10_EXP__ (-307)	__DBL_MIN_10_EXP__	(-307)
#define __DBL_MIN_EXP__ (-1021)	__DBL_MIN_EXP__	(-1021)
#define __DBL_EPSILON__ double(2.22044604925031308084726333618164062e-16L)	__DBL_EPSILON__	double(2.22044604925031308084726333618164062e-16L)
#define __DBL_MAX__ double(1.79769313486231570814527423731704357e+308L)	__DBL_MAX__	double(1.79769313486231570814527423731704357e+308L)
#define __DBL_MIN__ double(2.22507385850720138309023271733240406e-308L)	__DBL_MIN__	double(2.22507385850720138309023271733240406e-308L)
#define __FLT_DENORM_MIN__ 1.40129846432481707092372958328991613e-45F	__FLT_DENORM_MIN__	1.40129846432481707092372958328991613e-45F
#define __FLT_HAS_DENORM__ 1	__FLT_HAS_DENORM__	1
#define __FLT_HAS_QUIET_NAN__ 1	__FLT_HAS_QUIET_NAN__	1
#define __FLT_HAS_INFINITY__ 1	__FLT_HAS_INFINITY__	1
#define __FLT_MAX_EXP__ 128	__FLT_MAX_EXP__	128
#define __FLT_MIN_10_EXP__ (-37)	__FLT_MIN_10_EXP__	(-37)
#define __FLT_MIN_EXP__ (-125)	__FLT_MIN_EXP__	(-125)
#define __FLT_EPSILON__ 1.19209289550781250000000000000000000e-7F	__FLT_EPSILON__	1.19209289550781250000000000000000000e-7F
#define __FLT_MAX__ 3.40282346638528859811704183484516925e+38F	__FLT_MAX__	3.40282346638528859811704183484516925e+38F
#define __FLT_MIN__ 1.17549435082228750796873653722224568e-38F	__FLT_MIN__	1.17549435082228750796873653722224568e-38F
#define __GLIBCXX_BITSIZE_INT_N_0 128	__GLIBCXX_BITSIZE_INT_N_0	128
#define __INT_MAX__ 0x7fffffff	__INT_MAX__	0x7fffffff
#define __SHRT_MAX__ 0x7fff	__SHRT_MAX__	0x7fff
#define __SCHAR_MAX__ 0x7f	__SCHAR_MAX__	0x7f
#include <bits/stl_algobase.h>	<bits/stl_algobase.h>	
#include <limits>	<limits>	
#include <tuple>	<tuple>	
#define _HASHTABLE_POLICY_H 1	_HASHTABLE_POLICY_H	1
#ifndef _HASHTABLE_POLICY_H	_HASHTABLE_POLICY_H	
#include <bits/hashtable_policy.h>	<bits/hashtable_policy.h>	
#define _HASHTABLE_H 1	_HASHTABLE_H	1
#ifndef _HASHTABLE_H	_HASHTABLE_H	
#pragma GCC system_header	GCC system_header	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#ifdef __STRICT_ANSI__	__STRICT_ANSI__	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cpp_deduction_guides >= 201606	__cpp_deduction_guides >= 201606	
#define _UNORDERED_MAP_H	_UNORDERED_MAP_H	
#ifndef _UNORDERED_MAP_H	_UNORDERED_MAP_H	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus > 201703L	__cplusplus > 201703L	
#if __cpp_deduction_guides >= 201606	__cpp_deduction_guides >= 201606	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus > 201703L	__cplusplus > 201703L	
#if __cpp_deduction_guides >= 201606	__cpp_deduction_guides >= 201606	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#define _GLIBCXX_ERASE_IF_H 1	_GLIBCXX_ERASE_IF_H	1
#ifndef _GLIBCXX_ERASE_IF_H	_GLIBCXX_ERASE_IF_H	
#pragma GCC system_header	GCC system_header	
#if __cplusplus >= 201402L	__cplusplus >= 201402L	
#if __cplusplus > 201703L	__cplusplus > 201703L	
#include <bits/erase_if.h>	<bits/erase_if.h>	
#include <bits/range_access.h>	<bits/range_access.h>	
#include <bits/unordered_map.h>	<bits/unordered_map.h>	
#include <bits/hashtable.h>	<bits/hashtable.h>	
#include <bits/functional_hash.h>	<bits/functional_hash.h>	
#include <bits/stl_function.h>	<bits/stl_function.h>	
#include <bits/stl_pair.h>	<bits/stl_pair.h>	
#include <ext/aligned_buffer.h>	<ext/aligned_buffer.h>	
#include <ext/alloc_traits.h>	<ext/alloc_traits.h>	
#include <bits/allocator.h>	<bits/allocator.h>	
#include <initializer_list>	<initializer_list>	
#include <type_traits>	<type_traits>	
#define _GLIBCXX_UNORDERED_MAP 1	_GLIBCXX_UNORDERED_MAP	1
#ifndef _GLIBCXX_UNORDERED_MAP	_GLIBCXX_UNORDERED_MAP	
#pragma GCC system_header	GCC system_header	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#ifdef _GLIBCXX_DEBUG	_GLIBCXX_DEBUG	
#ifdef _GLIBCXX_PROFILE	_GLIBCXX_PROFILE	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus > 201703L	__cplusplus > 201703L	
#define _UNORDERED_SET_H	_UNORDERED_SET_H	
#ifndef _UNORDERED_SET_H	_UNORDERED_SET_H	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus > 201703L	__cplusplus > 201703L	
#if __cpp_deduction_guides >= 201606	__cpp_deduction_guides >= 201606	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus > 201703L	__cplusplus > 201703L	
#if __cpp_deduction_guides >= 201606	__cpp_deduction_guides >= 201606	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#include <bits/erase_if.h>	<bits/erase_if.h>	
#include <bits/range_access.h>	<bits/range_access.h>	
#include <bits/unordered_set.h>	<bits/unordered_set.h>	
#include <bits/hashtable.h>	<bits/hashtable.h>	
#include <bits/functional_hash.h>	<bits/functional_hash.h>	
#include <bits/stl_function.h>	<bits/stl_function.h>	
#include <bits/stl_pair.h>	<bits/stl_pair.h>	
#include <ext/aligned_buffer.h>	<ext/aligned_buffer.h>	
#include <ext/alloc_traits.h>	<ext/alloc_traits.h>	
#include <bits/allocator.h>	<bits/allocator.h>	
#include <initializer_list>	<initializer_list>	
#include <type_traits>	<type_traits>	
#define _GLIBCXX_UNORDERED_SET 1	_GLIBCXX_UNORDERED_SET	1
#ifndef _GLIBCXX_UNORDERED_SET	_GLIBCXX_UNORDERED_SET	
#pragma GCC system_header	GCC system_header	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#ifdef _GLIBCXX_DEBUG	_GLIBCXX_DEBUG	
#ifdef _GLIBCXX_PROFILE	_GLIBCXX_PROFILE	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus > 201703L	__cplusplus > 201703L	
#define __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION	__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION	
#define RTSIG_MAX 32	RTSIG_MAX	32
#define XATTR_LIST_MAX 65536	XATTR_LIST_MAX	65536
#define XATTR_SIZE_MAX 65536	XATTR_SIZE_MAX	65536
#define XATTR_NAME_MAX 255	XATTR_NAME_MAX	255
#define PIPE_BUF 4096	PIPE_BUF	4096
#define MAX_INPUT 255	MAX_INPUT	255
#define MAX_CANON 255	MAX_CANON	255
#define LINK_MAX 127	LINK_MAX	127
#define ARG_MAX 131072	ARG_MAX	131072
#define NGROUPS_MAX 65536	NGROUPS_MAX	65536
#define NR_OPEN 1024	NR_OPEN	1024
#define _LINUX_LIMITS_H	_LINUX_LIMITS_H	
#ifndef _LINUX_LIMITS_H	_LINUX_LIMITS_H	
#include <linux/limits.h>	<linux/limits.h>	
#define SEM_VALUE_MAX (2147483647)	SEM_VALUE_MAX	(2147483647)
#define MQ_PRIO_MAX 32768	MQ_PRIO_MAX	32768
#define HOST_NAME_MAX 64	HOST_NAME_MAX	64
#define LOGIN_NAME_MAX 256	LOGIN_NAME_MAX	256
#define TTY_NAME_MAX 32	TTY_NAME_MAX	32
#define DELAYTIMER_MAX 2147483647	DELAYTIMER_MAX	2147483647
#define PTHREAD_STACK_MIN 16384	PTHREAD_STACK_MIN	16384
#define AIO_PRIO_DELTA_MAX 20	AIO_PRIO_DELTA_MAX	20
#undef PTHREAD_THREADS_MAX	PTHREAD_THREADS_MAX	
#define _POSIX_THREAD_THREADS_MAX 64	_POSIX_THREAD_THREADS_MAX	64
#define PTHREAD_DESTRUCTOR_ITERATIONS _POSIX_THREAD_DESTRUCTOR_ITERATIONS	PTHREAD_DESTRUCTOR_ITERATIONS	_POSIX_THREAD_DESTRUCTOR_ITERATIONS
#define _POSIX_THREAD_DESTRUCTOR_ITERATIONS 4	_POSIX_THREAD_DESTRUCTOR_ITERATIONS	4
#define PTHREAD_KEYS_MAX 1024	PTHREAD_KEYS_MAX	1024
#define _POSIX_THREAD_KEYS_MAX 128	_POSIX_THREAD_KEYS_MAX	128
#undef __undef_ARG_MAX	__undef_ARG_MAX	
#undef ARG_MAX	ARG_MAX	
#undef __undef_OPEN_MAX	__undef_OPEN_MAX	
#undef OPEN_MAX	OPEN_MAX	
#undef __undef_LINK_MAX	__undef_LINK_MAX	
#undef LINK_MAX	LINK_MAX	
#undef __undef_NR_OPEN	__undef_NR_OPEN	
#undef NR_OPEN	NR_OPEN	
#define __undef_ARG_MAX	__undef_ARG_MAX	
#define __undef_OPEN_MAX	__undef_OPEN_MAX	
#define __undef_LINK_MAX	__undef_LINK_MAX	
#define __undef_NR_OPEN	__undef_NR_OPEN	
#ifndef NR_OPEN	NR_OPEN	
#ifndef LINK_MAX	LINK_MAX	
#ifndef OPEN_MAX	OPEN_MAX	
#ifndef ARG_MAX	ARG_MAX	
#ifdef __undef_NR_OPEN	__undef_NR_OPEN	
#ifdef __undef_LINK_MAX	__undef_LINK_MAX	
#ifdef __undef_OPEN_MAX	__undef_OPEN_MAX	
#ifdef __undef_ARG_MAX	__undef_ARG_MAX	
#include <bits/local_lim.h>	<bits/local_lim.h>	
#include <bits/wordsize.h>	<bits/wordsize.h>	
#define SSIZE_MAX LONG_MAX	SSIZE_MAX	LONG_MAX
#define _POSIX_CLOCKRES_MIN 20000000	_POSIX_CLOCKRES_MIN	20000000
#define _POSIX_UIO_MAXIOV 16	_POSIX_UIO_MAXIOV	16
#define _POSIX_HIWAT _POSIX_PIPE_BUF	_POSIX_HIWAT	_POSIX_PIPE_BUF
#define _POSIX_QLIMIT 1	_POSIX_QLIMIT	1
#define _POSIX_TZNAME_MAX 6	_POSIX_TZNAME_MAX	6
#define _POSIX_TTY_NAME_MAX 9	_POSIX_TTY_NAME_MAX	9
#define _POSIX_TIMER_MAX 32	_POSIX_TIMER_MAX	32
#define _POSIX_SYMLOOP_MAX 8	_POSIX_SYMLOOP_MAX	8
#define _POSIX_SYMLINK_MAX 255	_POSIX_SYMLINK_MAX	255
#define _POSIX_STREAM_MAX 8	_POSIX_STREAM_MAX	8
#define _POSIX_SSIZE_MAX 32767	_POSIX_SSIZE_MAX	32767
#define _POSIX_SIGQUEUE_MAX 32	_POSIX_SIGQUEUE_MAX	32
#define _POSIX_SEM_VALUE_MAX 32767	_POSIX_SEM_VALUE_MAX	32767
#define _POSIX_SEM_NSEMS_MAX 256	_POSIX_SEM_NSEMS_MAX	256
#define _POSIX_RTSIG_MAX 8	_POSIX_RTSIG_MAX	8
#define _POSIX_RE_DUP_MAX 255	_POSIX_RE_DUP_MAX	255
#define _POSIX_PIPE_BUF 512	_POSIX_PIPE_BUF	512
#define _POSIX_PATH_MAX 256	_POSIX_PATH_MAX	256
#define _POSIX_FD_SETSIZE _POSIX_OPEN_MAX	_POSIX_FD_SETSIZE	_POSIX_OPEN_MAX
#define _POSIX_OPEN_MAX 20	_POSIX_OPEN_MAX	20
#define _POSIX_NGROUPS_MAX 8	_POSIX_NGROUPS_MAX	8
#define _POSIX_NAME_MAX 14	_POSIX_NAME_MAX	14
#define _POSIX_MQ_PRIO_MAX 32	_POSIX_MQ_PRIO_MAX	32
#define _POSIX_MQ_OPEN_MAX 8	_POSIX_MQ_OPEN_MAX	8
#define _POSIX_MAX_INPUT 255	_POSIX_MAX_INPUT	255
#define _POSIX_MAX_CANON 255	_POSIX_MAX_CANON	255
#define _POSIX_LOGIN_NAME_MAX 9	_POSIX_LOGIN_NAME_MAX	9
#define _POSIX_LINK_MAX 8	_POSIX_LINK_MAX	8
#define _POSIX_HOST_NAME_MAX 255	_POSIX_HOST_NAME_MAX	255
#define _POSIX_DELAYTIMER_MAX 32	_POSIX_DELAYTIMER_MAX	32
#define _POSIX_CHILD_MAX 25	_POSIX_CHILD_MAX	25
#define _POSIX_ARG_MAX 4096	_POSIX_ARG_MAX	4096
#define _POSIX_AIO_MAX 1	_POSIX_AIO_MAX	1
#define _POSIX_AIO_LISTIO_MAX 2	_POSIX_AIO_LISTIO_MAX	2
#define _BITS_POSIX1_LIM_H 1	_BITS_POSIX1_LIM_H	1
#ifndef _BITS_POSIX1_LIM_H	_BITS_POSIX1_LIM_H	
#ifdef __USE_XOPEN2K	__USE_XOPEN2K	
#ifdef __USE_XOPEN2K	__USE_XOPEN2K	
#ifdef __USE_XOPEN2K	__USE_XOPEN2K	
#if !defined __USE_XOPEN2K || defined __USE_GNU	!defined __USE_XOPEN2K || defined __USE_GNU	
#ifdef __USE_XOPEN2K	__USE_XOPEN2K	
#if !defined __USE_XOPEN2K || defined __USE_GNU	!defined __USE_XOPEN2K || defined __USE_GNU	
#ifndef SSIZE_MAX	SSIZE_MAX	
#if __WORDSIZE == 64 || __WORDSIZE32_SIZE_ULONG	__WORDSIZE == 64 || __WORDSIZE32_SIZE_ULONG	
#ifndef NGROUPS_MAX	NGROUPS_MAX	
#define RE_DUP_MAX (0x7fff)	RE_DUP_MAX	(0x7fff)
#define CHARCLASS_NAME_MAX 2048	CHARCLASS_NAME_MAX	2048
#define LINE_MAX _POSIX2_LINE_MAX	LINE_MAX	_POSIX2_LINE_MAX
#define EXPR_NEST_MAX _POSIX2_EXPR_NEST_MAX	EXPR_NEST_MAX	_POSIX2_EXPR_NEST_MAX
#define COLL_WEIGHTS_MAX 255	COLL_WEIGHTS_MAX	255
#define BC_STRING_MAX _POSIX2_BC_STRING_MAX	BC_STRING_MAX	_POSIX2_BC_STRING_MAX
#define BC_SCALE_MAX _POSIX2_BC_SCALE_MAX	BC_SCALE_MAX	_POSIX2_BC_SCALE_MAX
#define BC_DIM_MAX _POSIX2_BC_DIM_MAX	BC_DIM_MAX	_POSIX2_BC_DIM_MAX
#define BC_BASE_MAX _POSIX2_BC_BASE_MAX	BC_BASE_MAX	_POSIX2_BC_BASE_MAX
#define _POSIX2_CHARCLASS_NAME_MAX 14	_POSIX2_CHARCLASS_NAME_MAX	14
#define _POSIX2_RE_DUP_MAX 255	_POSIX2_RE_DUP_MAX	255
#define _POSIX2_LINE_MAX 2048	_POSIX2_LINE_MAX	2048
#define _POSIX2_EXPR_NEST_MAX 32	_POSIX2_EXPR_NEST_MAX	32
#define _POSIX2_COLL_WEIGHTS_MAX 2	_POSIX2_COLL_WEIGHTS_MAX	2
#define _POSIX2_BC_STRING_MAX 1000	_POSIX2_BC_STRING_MAX	1000
#define _POSIX2_BC_SCALE_MAX 99	_POSIX2_BC_SCALE_MAX	99
#define _POSIX2_BC_DIM_MAX 2048	_POSIX2_BC_DIM_MAX	2048
#define _POSIX2_BC_BASE_MAX 99	_POSIX2_BC_BASE_MAX	99
#define _BITS_POSIX2_LIM_H 1	_BITS_POSIX2_LIM_H	1
#ifndef _BITS_POSIX2_LIM_H	_BITS_POSIX2_LIM_H	
#ifndef BC_BASE_MAX	BC_BASE_MAX	
#ifndef BC_DIM_MAX	BC_DIM_MAX	
#ifndef BC_SCALE_MAX	BC_SCALE_MAX	
#ifndef BC_STRING_MAX	BC_STRING_MAX	
#ifndef COLL_WEIGHTS_MAX	COLL_WEIGHTS_MAX	
#ifndef EXPR_NEST_MAX	EXPR_NEST_MAX	
#ifndef LINE_MAX	LINE_MAX	
#ifndef CHARCLASS_NAME_MAX	CHARCLASS_NAME_MAX	
#define __IOV_MAX 1024	__IOV_MAX	1024
#define _BITS_UIO_LIM_H 1	_BITS_UIO_LIM_H	1
#ifndef _BITS_UIO_LIM_H	_BITS_UIO_LIM_H	
#include <bits/uio_lim.h>	<bits/uio_lim.h>	
#define LONG_BIT 64	LONG_BIT	64
#define WORD_BIT 32	WORD_BIT	32
#define NZERO 20	NZERO	20
#define NL_TEXTMAX INT_MAX	NL_TEXTMAX	INT_MAX
#define NL_SETMAX INT_MAX	NL_SETMAX	INT_MAX
#define NL_NMAX INT_MAX	NL_NMAX	INT_MAX
#define NL_MSGMAX INT_MAX	NL_MSGMAX	INT_MAX
#define NL_LANGMAX _POSIX2_LINE_MAX	NL_LANGMAX	_POSIX2_LINE_MAX
#define NL_ARGMAX _POSIX_ARG_MAX	NL_ARGMAX	_POSIX_ARG_MAX
#define IOV_MAX __IOV_MAX	IOV_MAX	__IOV_MAX
#define _XOPEN_IOV_MAX _POSIX_UIO_MAXIOV	_XOPEN_IOV_MAX	_POSIX_UIO_MAXIOV
#define _XOPEN_LIM_H 1	_XOPEN_LIM_H	1
#ifndef _XOPEN_LIM_H	_XOPEN_LIM_H	
#ifdef __IOV_MAX	__IOV_MAX	
#if defined __USE_GNU || !defined __USE_XOPEN2K8	defined __USE_GNU || !defined __USE_XOPEN2K8	
#ifdef INT_MAX	INT_MAX	
#if INT_MAX == 32767	INT_MAX == 32767	
#if INT_MAX == 2147483647	INT_MAX == 2147483647	
#elif defined __INT_MAX__	defined __INT_MAX__	
#if __INT_MAX__ == 32767	__INT_MAX__ == 32767	
#if __INT_MAX__ == 2147483647	__INT_MAX__ == 2147483647	
#ifdef LONG_MAX	LONG_MAX	
#if LONG_MAX == 2147483647	LONG_MAX == 2147483647	
#elif defined __LONG_MAX__	defined __LONG_MAX__	
#if __LONG_MAX__ == 2147483647	__LONG_MAX__ == 2147483647	
#if __WORDSIZE == 64	__WORDSIZE == 64	
#include <bits/xopen_lim.h>	<bits/xopen_lim.h>	
#include <bits/posix2_lim.h>	<bits/posix2_lim.h>	
#include <bits/posix1_lim.h>	<bits/posix1_lim.h>	
#include <bits/libc-header-start.h>	<bits/libc-header-start.h>	
#define ULLONG_WIDTH 64	ULLONG_WIDTH	64
#define LLONG_WIDTH 64	LLONG_WIDTH	64
#define ULONG_WIDTH __WORDSIZE	ULONG_WIDTH	__WORDSIZE
#define LONG_WIDTH __WORDSIZE	LONG_WIDTH	__WORDSIZE
#define UINT_WIDTH 32	UINT_WIDTH	32
#define INT_WIDTH 32	INT_WIDTH	32
#define USHRT_WIDTH 16	USHRT_WIDTH	16
#define SHRT_WIDTH 16	SHRT_WIDTH	16
#define UCHAR_WIDTH 8	UCHAR_WIDTH	8
#define SCHAR_WIDTH 8	SCHAR_WIDTH	8
#define CHAR_WIDTH 8	CHAR_WIDTH	8
#define ULLONG_MAX (LLONG_MAX * 2ULL + 1)	ULLONG_MAX	(LLONG_MAX * 2ULL + 1)
#define LLONG_MAX __LONG_LONG_MAX__	LLONG_MAX	__LONG_LONG_MAX__
#define LLONG_MIN (-LLONG_MAX-1)	LLONG_MIN	(-LLONG_MAX-1)
#define MB_LEN_MAX 16	MB_LEN_MAX	16
#define _LIBC_LIMITS_H_ 1	_LIBC_LIMITS_H_	1
#ifndef _LIBC_LIMITS_H_	_LIBC_LIMITS_H_	
#if !defined __GNUC__ || __GNUC__ < 2	!defined __GNUC__ || __GNUC__ < 2	
#ifndef _LIMITS_H	_LIMITS_H	
#ifdef __CHAR_UNSIGNED__	__CHAR_UNSIGNED__	
#if __WORDSIZE == 64	__WORDSIZE == 64	
#if __WORDSIZE == 64	__WORDSIZE == 64	
#ifdef __USE_ISOC99	__USE_ISOC99	
#if defined __GNUC__ && !defined _GCC_LIMITS_H_	defined __GNUC__ && !defined _GCC_LIMITS_H_	
#if defined __USE_ISOC99 && defined __GNUC__	defined __USE_ISOC99 && defined __GNUC__	
#ifndef LLONG_MIN	LLONG_MIN	
#ifndef LLONG_MAX	LLONG_MAX	
#ifndef ULLONG_MAX	ULLONG_MAX	
#if __GLIBC_USE (IEC_60559_BFP_EXT)	__GLIBC_USE (IEC_60559_BFP_EXT)	
#ifndef CHAR_WIDTH	CHAR_WIDTH	
#ifndef SCHAR_WIDTH	SCHAR_WIDTH	
#ifndef UCHAR_WIDTH	UCHAR_WIDTH	
#ifndef SHRT_WIDTH	SHRT_WIDTH	
#ifndef USHRT_WIDTH	USHRT_WIDTH	
#ifndef INT_WIDTH	INT_WIDTH	
#ifndef UINT_WIDTH	UINT_WIDTH	
#ifndef LONG_WIDTH	LONG_WIDTH	
#ifndef ULONG_WIDTH	ULONG_WIDTH	
#ifndef LLONG_WIDTH	LLONG_WIDTH	
#ifndef ULLONG_WIDTH	ULLONG_WIDTH	
#ifdef __USE_POSIX	__USE_POSIX	
#ifdef __USE_POSIX2	__USE_POSIX2	
#ifdef __USE_XOPEN	__USE_XOPEN	
#define _GCC_LIMITS_H_	_GCC_LIMITS_H_	
#include_next <limits.h>	<limits.h>	
#ifndef _GCC_LIMITS_H_	_GCC_LIMITS_H_	
#ifndef _LIBC_LIMITS_H_	_LIBC_LIMITS_H_	
#ifndef _LIMITS_H___	_LIMITS_H___	
#ifndef MB_LEN_MAX	MB_LEN_MAX	
#if __SCHAR_MAX__ == __INT_MAX__	__SCHAR_MAX__ == __INT_MAX__	
#ifdef __CHAR_UNSIGNED__	__CHAR_UNSIGNED__	
#if __SCHAR_MAX__ == __INT_MAX__	__SCHAR_MAX__ == __INT_MAX__	
#if __SHRT_MAX__ == __INT_MAX__	__SHRT_MAX__ == __INT_MAX__	
#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L	defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L	
#if defined (__GNU_LIBRARY__) ? defined (__USE_GNU) : !defined (__STRICT_ANSI__)	defined (__GNU_LIBRARY__) ? defined (__USE_GNU) : !defined (__STRICT_ANSI__)	
#ifdef __STDC_WANT_IEC_60559_BFP_EXT__	__STDC_WANT_IEC_60559_BFP_EXT__	
#ifdef _GCC_NEXT_LIMITS_H	_GCC_NEXT_LIMITS_H	
#define _GCC_NEXT_LIMITS_H	_GCC_NEXT_LIMITS_H	
#include_next <limits.h>	<limits.h>	
#undef _GCC_NEXT_LIMITS_H	_GCC_NEXT_LIMITS_H	
"#include ""syslimits.h"""	"""syslimits.h"""	
#define ULONG_LONG_MAX (LONG_LONG_MAX * 2ULL + 1ULL)	ULONG_LONG_MAX	(LONG_LONG_MAX * 2ULL + 1ULL)
#undef ULONG_LONG_MAX	ULONG_LONG_MAX	
#define LONG_LONG_MAX __LONG_LONG_MAX__	LONG_LONG_MAX	__LONG_LONG_MAX__
#undef LONG_LONG_MAX	LONG_LONG_MAX	
#define LONG_LONG_MIN (-LONG_LONG_MAX - 1LL)	LONG_LONG_MIN	(-LONG_LONG_MAX - 1LL)
#undef LONG_LONG_MIN	LONG_LONG_MIN	
#define ULONG_MAX (LONG_MAX * 2UL + 1UL)	ULONG_MAX	(LONG_MAX * 2UL + 1UL)
#undef ULONG_MAX	ULONG_MAX	
#define LONG_MAX __LONG_MAX__	LONG_MAX	__LONG_MAX__
#undef LONG_MAX	LONG_MAX	
#define LONG_MIN (-LONG_MAX - 1L)	LONG_MIN	(-LONG_MAX - 1L)
#undef LONG_MIN	LONG_MIN	
#define UINT_MAX (INT_MAX * 2U + 1U)	UINT_MAX	(INT_MAX * 2U + 1U)
#undef UINT_MAX	UINT_MAX	
#define INT_MAX __INT_MAX__	INT_MAX	__INT_MAX__
#undef INT_MAX	INT_MAX	
#define INT_MIN (-INT_MAX - 1)	INT_MIN	(-INT_MAX - 1)
#undef INT_MIN	INT_MIN	
#define USHRT_MAX (SHRT_MAX * 2 + 1)	USHRT_MAX	(SHRT_MAX * 2 + 1)
#undef USHRT_MAX	USHRT_MAX	
#define SHRT_MAX __SHRT_MAX__	SHRT_MAX	__SHRT_MAX__
#undef SHRT_MAX	SHRT_MAX	
#define SHRT_MIN (-SHRT_MAX - 1)	SHRT_MIN	(-SHRT_MAX - 1)
#undef SHRT_MIN	SHRT_MIN	
#define CHAR_MAX SCHAR_MAX	CHAR_MAX	SCHAR_MAX
#undef CHAR_MAX	CHAR_MAX	
#define CHAR_MIN SCHAR_MIN	CHAR_MIN	SCHAR_MIN
#undef CHAR_MIN	CHAR_MIN	
#define UCHAR_MAX (SCHAR_MAX * 2 + 1)	UCHAR_MAX	(SCHAR_MAX * 2 + 1)
#undef UCHAR_MAX	UCHAR_MAX	
#define SCHAR_MAX __SCHAR_MAX__	SCHAR_MAX	__SCHAR_MAX__
#undef SCHAR_MAX	SCHAR_MAX	
#define SCHAR_MIN (-SCHAR_MAX - 1)	SCHAR_MIN	(-SCHAR_MAX - 1)
#undef SCHAR_MIN	SCHAR_MIN	
#define CHAR_BIT __CHAR_BIT__	CHAR_BIT	__CHAR_BIT__
#undef CHAR_BIT	CHAR_BIT	
#define _LIMITS_H___	_LIMITS_H___	
#define __va_list__	__va_list__	
#define _VA_LIST_T_H	_VA_LIST_T_H	
#define _VA_LIST	_VA_LIST	
#define _VA_LIST_	_VA_LIST_	
#define __va_copy(d,s) __builtin_va_copy(d,s)	__va_copy(d,s)	__builtin_va_copy(d,s)
#define va_copy(d,s) __builtin_va_copy(d,s)	va_copy(d,s)	__builtin_va_copy(d,s)
#define va_arg(v,l) __builtin_va_arg(v,l)	va_arg(v,l)	__builtin_va_arg(v,l)
#define _ANSI_STDARG_H_	_ANSI_STDARG_H_	
#define _STDARG_H	_STDARG_H	
#define IOCSIZE_SHIFT (_IOC_SIZESHIFT)	IOCSIZE_SHIFT	(_IOC_SIZESHIFT)
#define IOCSIZE_MASK (_IOC_SIZEMASK << _IOC_SIZESHIFT)	IOCSIZE_MASK	(_IOC_SIZEMASK << _IOC_SIZESHIFT)
#define IOC_INOUT ((_IOC_WRITE|_IOC_READ) << _IOC_DIRSHIFT)	IOC_INOUT	((_IOC_WRITE|_IOC_READ) << _IOC_DIRSHIFT)
#define IOC_OUT (_IOC_READ << _IOC_DIRSHIFT)	IOC_OUT	(_IOC_READ << _IOC_DIRSHIFT)
#define IOC_IN (_IOC_WRITE << _IOC_DIRSHIFT)	IOC_IN	(_IOC_WRITE << _IOC_DIRSHIFT)
#define _IOC_SIZE(nr) (((nr) >> _IOC_SIZESHIFT) & _IOC_SIZEMASK)	_IOC_SIZE(nr)	(((nr) >> _IOC_SIZESHIFT) & _IOC_SIZEMASK)
#define _IOC_NR(nr) (((nr) >> _IOC_NRSHIFT) & _IOC_NRMASK)	_IOC_NR(nr)	(((nr) >> _IOC_NRSHIFT) & _IOC_NRMASK)
#define _IOC_TYPE(nr) (((nr) >> _IOC_TYPESHIFT) & _IOC_TYPEMASK)	_IOC_TYPE(nr)	(((nr) >> _IOC_TYPESHIFT) & _IOC_TYPEMASK)
#define _IOC_DIR(nr) (((nr) >> _IOC_DIRSHIFT) & _IOC_DIRMASK)	_IOC_DIR(nr)	(((nr) >> _IOC_DIRSHIFT) & _IOC_DIRMASK)
#define _IOWR_BAD(type,nr,size) _IOC(_IOC_READ|_IOC_WRITE,(type),(nr),sizeof(size))	_IOWR_BAD(type,nr,size)	_IOC(_IOC_READ|_IOC_WRITE,(type),(nr),sizeof(size))
#define _IOW_BAD(type,nr,size) _IOC(_IOC_WRITE,(type),(nr),sizeof(size))	_IOW_BAD(type,nr,size)	_IOC(_IOC_WRITE,(type),(nr),sizeof(size))
#define _IOR_BAD(type,nr,size) _IOC(_IOC_READ,(type),(nr),sizeof(size))	_IOR_BAD(type,nr,size)	_IOC(_IOC_READ,(type),(nr),sizeof(size))
#define _IOWR(type,nr,size) _IOC(_IOC_READ|_IOC_WRITE,(type),(nr),(_IOC_TYPECHECK(size)))	_IOWR(type,nr,size)	_IOC(_IOC_READ|_IOC_WRITE,(type),(nr),(_IOC_TYPECHECK(size)))
#define _IOW(type,nr,size) _IOC(_IOC_WRITE,(type),(nr),(_IOC_TYPECHECK(size)))	_IOW(type,nr,size)	_IOC(_IOC_WRITE,(type),(nr),(_IOC_TYPECHECK(size)))
#define _IOR(type,nr,size) _IOC(_IOC_READ,(type),(nr),(_IOC_TYPECHECK(size)))	_IOR(type,nr,size)	_IOC(_IOC_READ,(type),(nr),(_IOC_TYPECHECK(size)))
#define _IO(type,nr) _IOC(_IOC_NONE,(type),(nr),0)	_IO(type,nr)	_IOC(_IOC_NONE,(type),(nr),0)
#define _IOC_TYPECHECK(t) (sizeof(t))	_IOC_TYPECHECK(t)	(sizeof(t))
#define _IOC(dir,type,nr,size) (((dir) << _IOC_DIRSHIFT) | ((type) << _IOC_TYPESHIFT) | ((nr) << _IOC_NRSHIFT) | ((size) << _IOC_SIZESHIFT))	_IOC(dir,type,nr,size)	(((dir) << _IOC_DIRSHIFT) | ((type) << _IOC_TYPESHIFT) | ((nr) << _IOC_NRSHIFT) | ((size) << _IOC_SIZESHIFT))
#define _IOC_READ 2U	_IOC_READ	2U
#define _IOC_WRITE 1U	_IOC_WRITE	1U
#define _IOC_NONE 0U	_IOC_NONE	0U
#define _IOC_DIRSHIFT (_IOC_SIZESHIFT+_IOC_SIZEBITS)	_IOC_DIRSHIFT	(_IOC_SIZESHIFT+_IOC_SIZEBITS)
#define _IOC_SIZESHIFT (_IOC_TYPESHIFT+_IOC_TYPEBITS)	_IOC_SIZESHIFT	(_IOC_TYPESHIFT+_IOC_TYPEBITS)
#define _IOC_TYPESHIFT (_IOC_NRSHIFT+_IOC_NRBITS)	_IOC_TYPESHIFT	(_IOC_NRSHIFT+_IOC_NRBITS)
#define _IOC_NRSHIFT 0	_IOC_NRSHIFT	0
#define _IOC_DIRMASK ((1 << _IOC_DIRBITS)-1)	_IOC_DIRMASK	((1 << _IOC_DIRBITS)-1)
#define _IOC_SIZEMASK ((1 << _IOC_SIZEBITS)-1)	_IOC_SIZEMASK	((1 << _IOC_SIZEBITS)-1)
#define _IOC_TYPEMASK ((1 << _IOC_TYPEBITS)-1)	_IOC_TYPEMASK	((1 << _IOC_TYPEBITS)-1)
#define _IOC_NRMASK ((1 << _IOC_NRBITS)-1)	_IOC_NRMASK	((1 << _IOC_NRBITS)-1)
#define _IOC_DIRBITS 2	_IOC_DIRBITS	2
#define _IOC_SIZEBITS 14	_IOC_SIZEBITS	14
#define _IOC_TYPEBITS 8	_IOC_TYPEBITS	8
#define _IOC_NRBITS 8	_IOC_NRBITS	8
#define _ASM_GENERIC_IOCTL_H	_ASM_GENERIC_IOCTL_H	
#ifndef _ASM_GENERIC_IOCTL_H	_ASM_GENERIC_IOCTL_H	
#ifndef _IOC_SIZEBITS	_IOC_SIZEBITS	
#ifndef _IOC_DIRBITS	_IOC_DIRBITS	
#ifndef _IOC_NONE	_IOC_NONE	
#ifndef _IOC_WRITE	_IOC_WRITE	
#ifndef _IOC_READ	_IOC_READ	
#include <asm-generic/ioctl.h>	<asm-generic/ioctl.h>	
#include <asm/ioctl.h>	<asm/ioctl.h>	
#define _LINUX_IOCTL_H	_LINUX_IOCTL_H	
#ifndef _LINUX_IOCTL_H	_LINUX_IOCTL_H	
#include <linux/ioctl.h>	<linux/ioctl.h>	
#define TIOCSER_TEMT 0x01	TIOCSER_TEMT	0x01
#define TIOCPKT_IOCTL 64	TIOCPKT_IOCTL	64
#define TIOCPKT_DOSTOP 32	TIOCPKT_DOSTOP	32
#define TIOCPKT_NOSTOP 16	TIOCPKT_NOSTOP	16
#define TIOCPKT_START 8	TIOCPKT_START	8
#define TIOCPKT_STOP 4	TIOCPKT_STOP	4
#define TIOCPKT_FLUSHWRITE 2	TIOCPKT_FLUSHWRITE	2
#define TIOCPKT_FLUSHREAD 1	TIOCPKT_FLUSHREAD	1
#define TIOCPKT_DATA 0	TIOCPKT_DATA	0
#define FIOQSIZE 0x5460	FIOQSIZE	0x5460
#define TIOCGICOUNT 0x545D	TIOCGICOUNT	0x545D
#define TIOCMIWAIT 0x545C	TIOCMIWAIT	0x545C
#define TIOCSERSETMULTI 0x545B	TIOCSERSETMULTI	0x545B
#define TIOCSERGETMULTI 0x545A	TIOCSERGETMULTI	0x545A
#define TIOCSERGETLSR 0x5459	TIOCSERGETLSR	0x5459
#define TIOCSERGSTRUCT 0x5458	TIOCSERGSTRUCT	0x5458
#define TIOCSLCKTRMIOS 0x5457	TIOCSLCKTRMIOS	0x5457
#define TIOCGLCKTRMIOS 0x5456	TIOCGLCKTRMIOS	0x5456
#define TIOCSERSWILD 0x5455	TIOCSERSWILD	0x5455
#define TIOCSERGWILD 0x5454	TIOCSERGWILD	0x5454
#define TIOCSERCONFIG 0x5453	TIOCSERCONFIG	0x5453
#define FIOASYNC 0x5452	FIOASYNC	0x5452
#define FIOCLEX 0x5451	FIOCLEX	0x5451
#define FIONCLEX 0x5450	FIONCLEX	0x5450
#define TIOCSISO7816 _IOWR('T', 0x43, struct serial_iso7816)	TIOCSISO7816	_IOWR('T', 0x43, struct serial_iso7816)
#define TIOCGISO7816 _IOR('T', 0x42, struct serial_iso7816)	TIOCGISO7816	_IOR('T', 0x42, struct serial_iso7816)
#define TIOCGPTPEER _IO('T', 0x41)	TIOCGPTPEER	_IO('T', 0x41)
#define TIOCGEXCL _IOR('T', 0x40, int)	TIOCGEXCL	_IOR('T', 0x40, int)
#define TIOCGPTLCK _IOR('T', 0x39, int)	TIOCGPTLCK	_IOR('T', 0x39, int)
#define TIOCGPKT _IOR('T', 0x38, int)	TIOCGPKT	_IOR('T', 0x38, int)
#define TIOCVHANGUP 0x5437	TIOCVHANGUP	0x5437
#define TIOCSIG _IOW('T', 0x36, int)	TIOCSIG	_IOW('T', 0x36, int)
#define TCSETXW 0x5435	TCSETXW	0x5435
#define TCSETXF 0x5434	TCSETXF	0x5434
#define TCSETX 0x5433	TCSETX	0x5433
#define TCGETX 0x5432	TCGETX	0x5432
#define TIOCGDEV _IOR('T', 0x32, unsigned int)	TIOCGDEV	_IOR('T', 0x32, unsigned int)
#define TIOCSPTLCK _IOW('T', 0x31, int)	TIOCSPTLCK	_IOW('T', 0x31, int)
#define TIOCGPTN _IOR('T', 0x30, unsigned int)	TIOCGPTN	_IOR('T', 0x30, unsigned int)
#define TIOCSRS485 0x542F	TIOCSRS485	0x542F
#define TIOCGRS485 0x542E	TIOCGRS485	0x542E
#define TCSETSF2 _IOW('T', 0x2D, struct termios2)	TCSETSF2	_IOW('T', 0x2D, struct termios2)
#define TCSETSW2 _IOW('T', 0x2C, struct termios2)	TCSETSW2	_IOW('T', 0x2C, struct termios2)
#define TCSETS2 _IOW('T', 0x2B, struct termios2)	TCSETS2	_IOW('T', 0x2B, struct termios2)
#define TCGETS2 _IOR('T', 0x2A, struct termios2)	TCGETS2	_IOR('T', 0x2A, struct termios2)
#define TIOCGSID 0x5429	TIOCGSID	0x5429
#define TIOCCBRK 0x5428	TIOCCBRK	0x5428
#define TIOCSBRK 0x5427	TIOCSBRK	0x5427
#define TCSBRKP 0x5425	TCSBRKP	0x5425
#define TIOCGETD 0x5424	TIOCGETD	0x5424
#define TIOCSETD 0x5423	TIOCSETD	0x5423
#define TIOCNOTTY 0x5422	TIOCNOTTY	0x5422
#define FIONBIO 0x5421	FIONBIO	0x5421
#define TIOCPKT 0x5420	TIOCPKT	0x5420
#define TIOCSSERIAL 0x541F	TIOCSSERIAL	0x541F
#define TIOCGSERIAL 0x541E	TIOCGSERIAL	0x541E
#define TIOCCONS 0x541D	TIOCCONS	0x541D
#define TIOCLINUX 0x541C	TIOCLINUX	0x541C
#define TIOCINQ FIONREAD	TIOCINQ	FIONREAD
#define FIONREAD 0x541B	FIONREAD	0x541B
#define TIOCSSOFTCAR 0x541A	TIOCSSOFTCAR	0x541A
#define TIOCGSOFTCAR 0x5419	TIOCGSOFTCAR	0x5419
#define TIOCMSET 0x5418	TIOCMSET	0x5418
#define TIOCMBIC 0x5417	TIOCMBIC	0x5417
#define TIOCMBIS 0x5416	TIOCMBIS	0x5416
#define TIOCMGET 0x5415	TIOCMGET	0x5415
#define TIOCSWINSZ 0x5414	TIOCSWINSZ	0x5414
#define TIOCGWINSZ 0x5413	TIOCGWINSZ	0x5413
#define TIOCSTI 0x5412	TIOCSTI	0x5412
#define TIOCOUTQ 0x5411	TIOCOUTQ	0x5411
#define TIOCSPGRP 0x5410	TIOCSPGRP	0x5410
#define TIOCGPGRP 0x540F	TIOCGPGRP	0x540F
#define TIOCSCTTY 0x540E	TIOCSCTTY	0x540E
#define TIOCNXCL 0x540D	TIOCNXCL	0x540D
#define TIOCEXCL 0x540C	TIOCEXCL	0x540C
#define TCFLSH 0x540B	TCFLSH	0x540B
#define TCXONC 0x540A	TCXONC	0x540A
#define TCSBRK 0x5409	TCSBRK	0x5409
#define TCSETAF 0x5408	TCSETAF	0x5408
#define TCSETAW 0x5407	TCSETAW	0x5407
#define TCSETA 0x5406	TCSETA	0x5406
#define TCGETA 0x5405	TCGETA	0x5405
#define TCSETSF 0x5404	TCSETSF	0x5404
#define TCSETSW 0x5403	TCSETSW	0x5403
#define TCSETS 0x5402	TCSETS	0x5402
#define TCGETS 0x5401	TCGETS	0x5401
#define __ASM_GENERIC_IOCTLS_H	__ASM_GENERIC_IOCTLS_H	
#ifndef __ASM_GENERIC_IOCTLS_H	__ASM_GENERIC_IOCTLS_H	
#ifndef TIOCSRS485	TIOCSRS485	
#ifndef FIOQSIZE	FIOQSIZE	
#include <asm-generic/ioctls.h>	<asm-generic/ioctls.h>	
#include <asm/ioctls.h>	<asm/ioctls.h>	
#define SIOCPROTOPRIVATE 0x89E0	SIOCPROTOPRIVATE	0x89E0
#define SIOCDEVPRIVATE 0x89F0	SIOCDEVPRIVATE	0x89F0
#define SIOCDELDLCI 0x8981	SIOCDELDLCI	0x8981
#define SIOCADDDLCI 0x8980	SIOCADDDLCI	0x8980
#define SIOCSIFMAP 0x8971	SIOCSIFMAP	0x8971
#define SIOCGIFMAP 0x8970	SIOCGIFMAP	0x8970
#define SIOCSRARP 0x8962	SIOCSRARP	0x8962
#define SIOCGRARP 0x8961	SIOCGRARP	0x8961
#define SIOCDRARP 0x8960	SIOCDRARP	0x8960
#define SIOCSARP 0x8955	SIOCSARP	0x8955
#define SIOCGARP 0x8954	SIOCGARP	0x8954
#define SIOCDARP 0x8953	SIOCDARP	0x8953
#define SIOCSIFTXQLEN 0x8943	SIOCSIFTXQLEN	0x8943
#define SIOCGIFTXQLEN 0x8942	SIOCGIFTXQLEN	0x8942
#define SIOCSIFBR 0x8941	SIOCSIFBR	0x8941
#define SIOCGIFBR 0x8940	SIOCGIFBR	0x8940
#define SIOCGIFCOUNT 0x8938	SIOCGIFCOUNT	0x8938
#define SIOCSIFHWBROADCAST 0x8937	SIOCSIFHWBROADCAST	0x8937
#define SIOCDIFADDR 0x8936	SIOCDIFADDR	0x8936
#define SIOCGIFPFLAGS 0x8935	SIOCGIFPFLAGS	0x8935
#define SIOCSIFPFLAGS 0x8934	SIOCSIFPFLAGS	0x8934
#define SIOGIFINDEX SIOCGIFINDEX	SIOGIFINDEX	SIOCGIFINDEX
#define SIOCGIFINDEX 0x8933	SIOCGIFINDEX	0x8933
#define SIOCDELMULTI 0x8932	SIOCDELMULTI	0x8932
#define SIOCADDMULTI 0x8931	SIOCADDMULTI	0x8931
#define SIOCSIFSLAVE 0x8930	SIOCSIFSLAVE	0x8930
#define SIOCGIFSLAVE 0x8929	SIOCGIFSLAVE	0x8929
#define SIOCGIFHWADDR 0x8927	SIOCGIFHWADDR	0x8927
#define SIOCSIFENCAP 0x8926	SIOCSIFENCAP	0x8926
#define SIOCGIFENCAP 0x8925	SIOCGIFENCAP	0x8925
#define SIOCSIFHWADDR 0x8924	SIOCSIFHWADDR	0x8924
#define SIOCSIFNAME 0x8923	SIOCSIFNAME	0x8923
#define SIOCSIFMTU 0x8922	SIOCSIFMTU	0x8922
#define SIOCGIFMTU 0x8921	SIOCGIFMTU	0x8921
#define SIOCSIFMEM 0x8920	SIOCSIFMEM	0x8920
#define SIOCGIFMEM 0x891f	SIOCGIFMEM	0x891f
#define SIOCSIFMETRIC 0x891e	SIOCSIFMETRIC	0x891e
#define SIOCGIFMETRIC 0x891d	SIOCGIFMETRIC	0x891d
#define SIOCSIFNETMASK 0x891c	SIOCSIFNETMASK	0x891c
#define SIOCGIFNETMASK 0x891b	SIOCGIFNETMASK	0x891b
#define SIOCSIFBRDADDR 0x891a	SIOCSIFBRDADDR	0x891a
#define SIOCGIFBRDADDR 0x8919	SIOCGIFBRDADDR	0x8919
#define SIOCSIFDSTADDR 0x8918	SIOCSIFDSTADDR	0x8918
#define SIOCGIFDSTADDR 0x8917	SIOCGIFDSTADDR	0x8917
#define SIOCSIFADDR 0x8916	SIOCSIFADDR	0x8916
#define SIOCGIFADDR 0x8915	SIOCGIFADDR	0x8915
#define SIOCSIFFLAGS 0x8914	SIOCSIFFLAGS	0x8914
#define SIOCGIFFLAGS 0x8913	SIOCGIFFLAGS	0x8913
#define SIOCGIFCONF 0x8912	SIOCGIFCONF	0x8912
#define SIOCSIFLINK 0x8911	SIOCSIFLINK	0x8911
#define SIOCGIFNAME 0x8910	SIOCGIFNAME	0x8910
#define SIOCRTMSG 0x890D	SIOCRTMSG	0x890D
#define SIOCDELRT 0x890C	SIOCDELRT	0x890C
#define SIOCADDRT 0x890B	SIOCADDRT	0x890B
#ifndef _SYS_IOCTL_H	_SYS_IOCTL_H	
#define _SYS_IOCTL_H 1	_SYS_IOCTL_H	1
#include <asm/ioctls.h>	<asm/ioctls.h>	
#define NCC 8	NCC	8
#define N_HCI 15	N_HCI	15
#define N_SYNC_PPP 14	N_SYNC_PPP	14
#define N_HDLC 13	N_HDLC	13
#define N_SMSBLOCK 12	N_SMSBLOCK	12
#define N_IRDA 11	N_IRDA	11
#define N_PROFIBUS_FDL 10	N_PROFIBUS_FDL	10
#define N_R3964 9	N_R3964	9
#define N_MASC 8	N_MASC	8
#define N_6PACK 7	N_6PACK	7
#define N_X25 6	N_X25	6
#define N_AX25 5	N_AX25	5
#define N_STRIP 4	N_STRIP	4
#define N_PPP 3	N_PPP	3
#define N_MOUSE 2	N_MOUSE	2
#define N_SLIP 1	N_SLIP	1
#define N_TTY 0	N_TTY	0
#define TIOCM_RI TIOCM_RNG	TIOCM_RI	TIOCM_RNG
#define TIOCM_CD TIOCM_CAR	TIOCM_CD	TIOCM_CAR
#define TIOCM_DSR 0x100	TIOCM_DSR	0x100
#define TIOCM_RNG 0x080	TIOCM_RNG	0x080
#define TIOCM_CAR 0x040	TIOCM_CAR	0x040
#define TIOCM_CTS 0x020	TIOCM_CTS	0x020
#define TIOCM_SR 0x010	TIOCM_SR	0x010
#define TIOCM_ST 0x008	TIOCM_ST	0x008
#define TIOCM_RTS 0x004	TIOCM_RTS	0x004
#define TIOCM_DTR 0x002	TIOCM_DTR	0x002
#define TIOCM_LE 0x001	TIOCM_LE	0x001
#ifndef _SYS_IOCTL_H	_SYS_IOCTL_H	
#define CFLUSH CDISCARD	CFLUSH	CDISCARD
#define CRPRNT CREPRINT	CRPRNT	CREPRINT
#define CBRK CEOL	CBRK	CEOL
#define CEOT CEOF	CEOT	CEOF
#define CREPRINT CTRL('r')	CREPRINT	CTRL('r')
#define CWERASE CTRL('w')	CWERASE	CTRL('w')
#define CDISCARD CTRL('o')	CDISCARD	CTRL('o')
#define CLNEXT CTRL('v')	CLNEXT	CTRL('v')
#define CSTOP CTRL('s')	CSTOP	CTRL('s')
#define CSTART CTRL('q')	CSTART	CTRL('q')
#define CDSUSP CTRL('y')	CDSUSP	CTRL('y')
#define CTIME 0	CTIME	0
#define CSUSP CTRL('z')	CSUSP	CTRL('z')
#define CQUIT 034	CQUIT	034
#define CMIN 1	CMIN	1
#define CKILL CTRL('u')	CKILL	CTRL('u')
#define CSTATUS '\0'	CSTATUS	'\0'
#define CINTR CTRL('c')	CINTR	CTRL('c')
#define CERASE 0177	CERASE	0177
#define CEOL '\0'	CEOL	'\0'
#define CEOF CTRL('d')	CEOF	CTRL('d')
#define CTRL(x) (x&037)	CTRL(x)	(x&037)
#define TTYDEF_SPEED (B9600)	TTYDEF_SPEED	(B9600)
#define TTYDEF_CFLAG (CREAD | CS7 | PARENB | HUPCL)	TTYDEF_CFLAG	(CREAD | CS7 | PARENB | HUPCL)
#define TTYDEF_LFLAG (ECHO | ICANON | ISIG | IEXTEN | ECHOE|ECHOKE|ECHOCTL)	TTYDEF_LFLAG	(ECHO | ICANON | ISIG | IEXTEN | ECHOE|ECHOKE|ECHOCTL)
#define TTYDEF_OFLAG (OPOST | ONLCR | XTABS)	TTYDEF_OFLAG	(OPOST | ONLCR | XTABS)
#define TTYDEF_IFLAG (BRKINT | ISTRIP | ICRNL | IMAXBEL | IXON | IXANY)	TTYDEF_IFLAG	(BRKINT | ISTRIP | ICRNL | IMAXBEL | IXON | IXANY)
#define _SYS_TTYDEFAULTS_H_	_SYS_TTYDEFAULTS_H_	
#ifndef _SYS_TTYDEFAULTS_H_	_SYS_TTYDEFAULTS_H_	
#ifdef _POSIX_VDISABLE	_POSIX_VDISABLE	
#ifdef _POSIX_VDISABLE	_POSIX_VDISABLE	
#ifdef TTYDEFCHARS	TTYDEFCHARS	
#include <sys/ttydefaults.h>	<sys/ttydefaults.h>	
#include <bits/ioctl-types.h>	<bits/ioctl-types.h>	
#include <bits/ioctls.h>	<bits/ioctls.h>	
#include <features.h>	<features.h>	
#ifndef _SYS_IOCTL_H	_SYS_IOCTL_H	
#include <initializer_list>	<initializer_list>	
#include <bits/stl_iterator_base_types.h>	<bits/stl_iterator_base_types.h>	
#include <bits/stl_pair.h>	<bits/stl_pair.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#define _GLIBCXX_ALGORITHMFWD_H 1	_GLIBCXX_ALGORITHMFWD_H	1
#ifndef _GLIBCXX_ALGORITHMFWD_H	_GLIBCXX_ALGORITHMFWD_H	
#pragma GCC system_header	GCC system_header	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if (__cplusplus >= 201103L) && defined(_GLIBCXX_USE_C99_STDINT_TR1)	(__cplusplus >= 201103L) && defined(_GLIBCXX_USE_C99_STDINT_TR1)	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_PARALLEL	_GLIBCXX_PARALLEL	
#include <bits/predefined_ops.h>	<bits/predefined_ops.h>	
#include <bits/move.h>	<bits/move.h>	
#include <debug/debug.h>	<debug/debug.h>	
#define _STL_HEAP_H 1	_STL_HEAP_H	1
#ifndef _STL_HEAP_H	_STL_HEAP_H	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#include <limits>	<limits>	
#include <type_traits>	<type_traits>	
#define _GLIBCXX_BITS_UNIFORM_INT_DIST_H	_GLIBCXX_BITS_UNIFORM_INT_DIST_H	
#ifndef _GLIBCXX_BITS_UNIFORM_INT_DIST_H	_GLIBCXX_BITS_UNIFORM_INT_DIST_H	
#include <bits/uniform_int_dist.h>	<bits/uniform_int_dist.h>	
#include <bits/predefined_ops.h>	<bits/predefined_ops.h>	
#include <bits/stl_tempbuf.h>	<bits/stl_tempbuf.h>	
#include <bits/stl_heap.h>	<bits/stl_heap.h>	
#include <bits/algorithmfwd.h>	<bits/algorithmfwd.h>	
#include <cstdlib>	<cstdlib>	
#define _STL_ALGO_H 1	_STL_ALGO_H	1
#ifndef _STL_ALGO_H	_STL_ALGO_H	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_CONCEPT_CHECKS	_GLIBCXX_CONCEPT_CHECKS	
#ifdef _GLIBCXX_CONCEPT_CHECKS	_GLIBCXX_CONCEPT_CHECKS	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#ifdef _GLIBCXX_USE_C99_STDINT_TR1	_GLIBCXX_USE_C99_STDINT_TR1	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if _GLIBCXX_HOSTED	_GLIBCXX_HOSTED	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201402L	__cplusplus >= 201402L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#include <bits/stl_algo.h>	<bits/stl_algo.h>	
#include <bits/stl_algobase.h>	<bits/stl_algobase.h>	
#include <utility>	<utility>	
#define _GLIBCXX_ALGORITHM 1	_GLIBCXX_ALGORITHM	1
#ifndef _GLIBCXX_ALGORITHM	_GLIBCXX_ALGORITHM	
#pragma GCC system_header	GCC system_header	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __PSTL_EXECUTION_POLICIES_DEFINED	__PSTL_EXECUTION_POLICIES_DEFINED	
#ifdef _GLIBCXX_PARALLEL	_GLIBCXX_PARALLEL	
#include <bits/move.h>	<bits/move.h>	
#include <bits/atomic_base.h>	<bits/atomic_base.h>	
#define _GLIBCXX_ATOMIC 1	_GLIBCXX_ATOMIC	1
#ifndef _GLIBCXX_ATOMIC	_GLIBCXX_ATOMIC	
#pragma GCC system_header	GCC system_header	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#ifdef _GLIBCXX_USE_CHAR8_T	_GLIBCXX_USE_CHAR8_T	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#ifdef _GLIBCXX_USE_CHAR8_T	_GLIBCXX_USE_CHAR8_T	
#ifdef _GLIBCXX_USE_C99_STDINT_TR1	_GLIBCXX_USE_C99_STDINT_TR1	
#ifdef _GLIBCXX_USE_C99_STDINT_TR1	_GLIBCXX_USE_C99_STDINT_TR1	
#include <bits/functexcept.h>	<bits/functexcept.h>	
#include <bits/refwrap.h>	<bits/refwrap.h>	
#include <bits/invoke.h>	<bits/invoke.h>	
#include <bits/stl_function.h>	<bits/stl_function.h>	
#include <typeinfo>	<typeinfo>	
#define _GLIBCXX_STD_FUNCTION_H 1	_GLIBCXX_STD_FUNCTION_H	1
#ifndef _GLIBCXX_STD_FUNCTION_H	_GLIBCXX_STD_FUNCTION_H	
#pragma GCC system_header	GCC system_header	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cpp_rtti	__cpp_rtti	
#if __cpp_rtti	__cpp_rtti	
#if __cpp_rtti	__cpp_rtti	
#if __cpp_rtti	__cpp_rtti	
#if __cpp_deduction_guides >= 201606	__cpp_deduction_guides >= 201606	
#if __cpp_rtti	__cpp_rtti	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#include <bits/std_function.h>	<bits/std_function.h>	
#include <bits/refwrap.h>	<bits/refwrap.h>	
#include <bits/invoke.h>	<bits/invoke.h>	
#include <bits/functional_hash.h>	<bits/functional_hash.h>	
#include <type_traits>	<type_traits>	
#include <tuple>	<tuple>	
#include <new>	<new>	
#include <bits/stl_function.h>	<bits/stl_function.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#undef _GLIBCXX_DEPR_BIND	_GLIBCXX_DEPR_BIND	
#define _GLIBCXX_DEPR_BIND	_GLIBCXX_DEPR_BIND	
#define _GLIBCXX_FUNCTIONAL 1	_GLIBCXX_FUNCTIONAL	1
#ifndef _GLIBCXX_FUNCTIONAL	_GLIBCXX_FUNCTIONAL	
#pragma GCC system_header	GCC system_header	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus > 201703L	__cplusplus > 201703L	
#if __cplusplus >= 201402L	__cplusplus >= 201402L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#include <cstdint>	<cstdint>	
#include <type_traits>	<type_traits>	
#define _GLIBCXX_RATIO 1	_GLIBCXX_RATIO	1
#ifndef _GLIBCXX_RATIO	_GLIBCXX_RATIO	
#pragma GCC system_header	GCC system_header	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#define __INTMAX_MAX__ 0x7fffffffffffffffL	__INTMAX_MAX__	0x7fffffffffffffffL
#include <time.h>	<time.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#undef strftime	strftime	
#undef localtime	localtime	
#undef gmtime	gmtime	
#undef ctime	ctime	
#undef asctime	asctime	
#undef time	time	
#undef mktime	mktime	
#undef difftime	difftime	
#undef clock	clock	
#define _GLIBCXX_CTIME 1	_GLIBCXX_CTIME	1
#pragma GCC system_header	GCC system_header	
#ifndef _GLIBCXX_CTIME	_GLIBCXX_CTIME	
#if __cplusplus >= 201703L && defined(_GLIBCXX_HAVE_TIMESPEC_GET)	__cplusplus >= 201703L && defined(_GLIBCXX_HAVE_TIMESPEC_GET)	
#define _GLIBCXX_PARSE_NUMBERS_H 1	_GLIBCXX_PARSE_NUMBERS_H	1
#ifndef _GLIBCXX_PARSE_NUMBERS_H	_GLIBCXX_PARSE_NUMBERS_H	
#pragma GCC system_header	GCC system_header	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#include <bits/parse_numbers.h>	<bits/parse_numbers.h>	
#include <ctime>	<ctime>	
#include <limits>	<limits>	
#include <type_traits>	<type_traits>	
#include <ratio>	<ratio>	
#undef _GLIBCXX_CHRONO_INT64_T	_GLIBCXX_CHRONO_INT64_T	
#define _GLIBCXX_CHRONO_INT64_T int64_t	_GLIBCXX_CHRONO_INT64_T	int64_t
#define _GLIBCXX_CHRONO 1	_GLIBCXX_CHRONO	1
#ifndef _GLIBCXX_CHRONO	_GLIBCXX_CHRONO	
#pragma GCC system_header	GCC system_header	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#ifdef _GLIBCXX_USE_C99_STDINT_TR1	_GLIBCXX_USE_C99_STDINT_TR1	
#elif defined __INT64_TYPE__	defined __INT64_TYPE__	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#include <cerrno>	<cerrno>	
#include <bits/c++config.h>	<bits/c++config.h>	
#define _GLIBCXX_ERROR_CONSTANTS 1	_GLIBCXX_ERROR_CONSTANTS	1
#ifndef _GLIBCXX_ERROR_CONSTANTS	_GLIBCXX_ERROR_CONSTANTS	
#ifdef _GLIBCXX_HAVE_EBADMSG	_GLIBCXX_HAVE_EBADMSG	
#ifdef _GLIBCXX_HAVE_EIDRM	_GLIBCXX_HAVE_EIDRM	
#ifdef _GLIBCXX_HAVE_ENOLINK	_GLIBCXX_HAVE_ENOLINK	
#ifdef _GLIBCXX_HAVE_ENODATA	_GLIBCXX_HAVE_ENODATA	
#ifdef _GLIBCXX_HAVE_ENOSR	_GLIBCXX_HAVE_ENOSR	
#ifdef _GLIBCXX_HAVE_ENOSTR	_GLIBCXX_HAVE_ENOSTR	
#ifdef _GLIBCXX_HAVE_ENOTSUP	_GLIBCXX_HAVE_ENOTSUP	
#ifdef _GLIBCXX_HAVE_ECANCELED	_GLIBCXX_HAVE_ECANCELED	
#ifdef _GLIBCXX_HAVE_EOWNERDEAD	_GLIBCXX_HAVE_EOWNERDEAD	
#ifdef _GLIBCXX_HAVE_EPROTO	_GLIBCXX_HAVE_EPROTO	
#ifdef _GLIBCXX_HAVE_ENOTRECOVERABLE	_GLIBCXX_HAVE_ENOTRECOVERABLE	
#ifdef _GLIBCXX_HAVE_ETIME	_GLIBCXX_HAVE_ETIME	
#ifdef _GLIBCXX_HAVE_ETXTBSY	_GLIBCXX_HAVE_ETXTBSY	
#ifdef _GLIBCXX_HAVE_EOVERFLOW	_GLIBCXX_HAVE_EOVERFLOW	
#include <bits/functional_hash.h>	<bits/functional_hash.h>	
#include <stdexcept>	<stdexcept>	
#include <iosfwd>	<iosfwd>	
#include <bits/error_constants.h>	<bits/error_constants.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#define _GLIBCXX_SYSTEM_ERROR 1	_GLIBCXX_SYSTEM_ERROR	1
#ifndef _GLIBCXX_SYSTEM_ERROR	_GLIBCXX_SYSTEM_ERROR	
#pragma GCC system_header	GCC system_header	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if _GLIBCXX_USE_CXX11_ABI	_GLIBCXX_USE_CXX11_ABI	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifndef _GLIBCXX_COMPATIBILITY_CXX0X	_GLIBCXX_COMPATIBILITY_CXX0X	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#include <bits/gthr.h>	<bits/gthr.h>	
#include <bits/functexcept.h>	<bits/functexcept.h>	
#include <system_error>	<system_error>	
#define _GLIBCXX_MUTEX_H 1	_GLIBCXX_MUTEX_H	1
#ifndef _GLIBCXX_MUTEX_H	_GLIBCXX_MUTEX_H	
#pragma GCC system_header	GCC system_header	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#ifdef _GLIBCXX_HAS_GTHREADS	_GLIBCXX_HAS_GTHREADS	
#ifdef __GTHREAD_MUTEX_INIT	__GTHREAD_MUTEX_INIT	
#ifdef __GTHREAD_MUTEX_INIT	__GTHREAD_MUTEX_INIT	
#include <bits/move.h>	<bits/move.h>	
#include <chrono>	<chrono>	
#define _GLIBCXX_UNIQUE_LOCK_H 1	_GLIBCXX_UNIQUE_LOCK_H	1
#ifndef _GLIBCXX_UNIQUE_LOCK_H	_GLIBCXX_UNIQUE_LOCK_H	
#pragma GCC system_header	GCC system_header	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#include <bits/unique_lock.h>	<bits/unique_lock.h>	
#include <bits/std_mutex.h>	<bits/std_mutex.h>	
#include <system_error>	<system_error>	
#include <type_traits>	<type_traits>	
#include <exception>	<exception>	
#include <chrono>	<chrono>	
#include <tuple>	<tuple>	
#define _GLIBCXX_MUTEX 1	_GLIBCXX_MUTEX	1
#ifndef _GLIBCXX_MUTEX	_GLIBCXX_MUTEX	
#pragma GCC system_header	GCC system_header	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if ! _GTHREAD_USE_MUTEX_TIMEDLOCK	! _GTHREAD_USE_MUTEX_TIMEDLOCK	
#ifndef _GLIBCXX_HAVE_TLS	_GLIBCXX_HAVE_TLS	
#ifdef _GLIBCXX_HAS_GTHREADS	_GLIBCXX_HAS_GTHREADS	
#ifdef __GTHREAD_RECURSIVE_MUTEX_INIT	__GTHREAD_RECURSIVE_MUTEX_INIT	
#if _GTHREAD_USE_MUTEX_TIMEDLOCK	_GTHREAD_USE_MUTEX_TIMEDLOCK	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#ifdef _GLIBCXX_HAS_GTHREADS	_GLIBCXX_HAS_GTHREADS	
#ifdef _GLIBCXX_HAVE_TLS	_GLIBCXX_HAVE_TLS	
#ifdef _GLIBCXX_HAVE_TLS	_GLIBCXX_HAVE_TLS	
#ifndef _GLIBCXX_HAVE_TLS	_GLIBCXX_HAVE_TLS	
#ifdef __clang_analyzer__	__clang_analyzer__	
#include <bits/stl_vector.h>	<bits/stl_vector.h>	
#include <bits/functional_hash.h>	<bits/functional_hash.h>	
#include <initializer_list>	<initializer_list>	
#define _STL_BVECTOR_H 1	_STL_BVECTOR_H	1
#ifndef _STL_BVECTOR_H	_STL_BVECTOR_H	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#undef _GLIBCXX_ASAN_ANNOTATE_SHRINK	_GLIBCXX_ASAN_ANNOTATE_SHRINK	
#undef _GLIBCXX_ASAN_ANNOTATE_GREW	_GLIBCXX_ASAN_ANNOTATE_GREW	
#undef _GLIBCXX_ASAN_ANNOTATE_GROW	_GLIBCXX_ASAN_ANNOTATE_GROW	
#undef _GLIBCXX_ASAN_ANNOTATE_REINIT	_GLIBCXX_ASAN_ANNOTATE_REINIT	
#define _VECTOR_TCC 1	_VECTOR_TCC	1
#ifndef _VECTOR_TCC	_VECTOR_TCC	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#include <bits/vector.tcc>	<bits/vector.tcc>	
#include <bits/range_access.h>	<bits/range_access.h>	
#include <bits/stl_bvector.h>	<bits/stl_bvector.h>	
#include <bits/stl_vector.h>	<bits/stl_vector.h>	
#include <bits/stl_uninitialized.h>	<bits/stl_uninitialized.h>	
#include <bits/stl_construct.h>	<bits/stl_construct.h>	
#include <bits/allocator.h>	<bits/allocator.h>	
#include <bits/stl_algobase.h>	<bits/stl_algobase.h>	
#define _GLIBCXX_VECTOR 1	_GLIBCXX_VECTOR	1
#ifndef _GLIBCXX_VECTOR	_GLIBCXX_VECTOR	
#pragma GCC system_header	GCC system_header	
#if __cplusplus > 201703L	__cplusplus > 201703L	
#ifndef _GLIBCXX_EXPORT_TEMPLATE	_GLIBCXX_EXPORT_TEMPLATE	
#ifdef _GLIBCXX_DEBUG	_GLIBCXX_DEBUG	
#ifdef _GLIBCXX_PROFILE	_GLIBCXX_PROFILE	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#ifdef _GLIBCXX_DEBUG	_GLIBCXX_DEBUG	
#if __cplusplus > 201703L	__cplusplus > 201703L	
#define _POSIX_TYPED_MEMORY_OBJECTS -1	_POSIX_TYPED_MEMORY_OBJECTS	-1
#define _POSIX_TRACE_LOG -1	_POSIX_TRACE_LOG	-1
#define _POSIX_TRACE_INHERIT -1	_POSIX_TRACE_INHERIT	-1
#define _POSIX_TRACE_EVENT_FILTER -1	_POSIX_TRACE_EVENT_FILTER	-1
#define _POSIX_TRACE -1	_POSIX_TRACE	-1
#define _POSIX_THREAD_SPORADIC_SERVER -1	_POSIX_THREAD_SPORADIC_SERVER	-1
#define _POSIX_SPORADIC_SERVER -1	_POSIX_SPORADIC_SERVER	-1
#define _POSIX2_CHAR_TERM 200809L	_POSIX2_CHAR_TERM	200809L
#define _POSIX_RAW_SOCKETS 200809L	_POSIX_RAW_SOCKETS	200809L
#define _POSIX_IPV6 200809L	_POSIX_IPV6	200809L
#define _POSIX_ADVISORY_INFO 200809L	_POSIX_ADVISORY_INFO	200809L
#define _POSIX_CLOCK_SELECTION 200809L	_POSIX_CLOCK_SELECTION	200809L
#define _POSIX_MONOTONIC_CLOCK 0	_POSIX_MONOTONIC_CLOCK	0
#define _POSIX_THREAD_PROCESS_SHARED 200809L	_POSIX_THREAD_PROCESS_SHARED	200809L
#define _POSIX_MESSAGE_PASSING 200809L	_POSIX_MESSAGE_PASSING	200809L
#define _POSIX_BARRIERS 200809L	_POSIX_BARRIERS	200809L
#define _POSIX_TIMERS 200809L	_POSIX_TIMERS	200809L
#define _POSIX_SPAWN 200809L	_POSIX_SPAWN	200809L
#define _POSIX_SPIN_LOCKS 200809L	_POSIX_SPIN_LOCKS	200809L
#define _POSIX_TIMEOUTS 200809L	_POSIX_TIMEOUTS	200809L
#define _POSIX_SHELL 1	_POSIX_SHELL	1
#define _POSIX_READER_WRITER_LOCKS 200809L	_POSIX_READER_WRITER_LOCKS	200809L
#define _POSIX_REGEXP 1	_POSIX_REGEXP	1
#define _POSIX_THREAD_CPUTIME 0	_POSIX_THREAD_CPUTIME	0
#define _POSIX_CPUTIME 0	_POSIX_CPUTIME	0
#define _POSIX_SHARED_MEMORY_OBJECTS 200809L	_POSIX_SHARED_MEMORY_OBJECTS	200809L
#define _LFS64_STDIO 1	_LFS64_STDIO	1
#define _LFS64_LARGEFILE 1	_LFS64_LARGEFILE	1
#define _LFS_LARGEFILE 1	_LFS_LARGEFILE	1
#define _LFS64_ASYNCHRONOUS_IO 1	_LFS64_ASYNCHRONOUS_IO	1
#define _POSIX_PRIORITIZED_IO 200809L	_POSIX_PRIORITIZED_IO	200809L
#define _LFS_ASYNCHRONOUS_IO 1	_LFS_ASYNCHRONOUS_IO	1
#define _POSIX_ASYNC_IO 1	_POSIX_ASYNC_IO	1
#define _POSIX_ASYNCHRONOUS_IO 200809L	_POSIX_ASYNCHRONOUS_IO	200809L
#define _POSIX_REALTIME_SIGNALS 200809L	_POSIX_REALTIME_SIGNALS	200809L
#define _POSIX_SEMAPHORES 200809L	_POSIX_SEMAPHORES	200809L
#define _POSIX_THREAD_ROBUST_PRIO_PROTECT -1	_POSIX_THREAD_ROBUST_PRIO_PROTECT	-1
#define _POSIX_THREAD_ROBUST_PRIO_INHERIT 200809L	_POSIX_THREAD_ROBUST_PRIO_INHERIT	200809L
#define _POSIX_THREAD_PRIO_PROTECT 200809L	_POSIX_THREAD_PRIO_PROTECT	200809L
#define _POSIX_THREAD_PRIO_INHERIT 200809L	_POSIX_THREAD_PRIO_INHERIT	200809L
#define _POSIX_THREAD_ATTR_STACKADDR 200809L	_POSIX_THREAD_ATTR_STACKADDR	200809L
#define _POSIX_THREAD_ATTR_STACKSIZE 200809L	_POSIX_THREAD_ATTR_STACKSIZE	200809L
#define _POSIX_THREAD_PRIORITY_SCHEDULING 200809L	_POSIX_THREAD_PRIORITY_SCHEDULING	200809L
#define _POSIX_THREAD_SAFE_FUNCTIONS 200809L	_POSIX_THREAD_SAFE_FUNCTIONS	200809L
#define _POSIX_REENTRANT_FUNCTIONS 1	_POSIX_REENTRANT_FUNCTIONS	1
#define _POSIX_THREADS 200809L	_POSIX_THREADS	200809L
#define _XOPEN_SHM 1	_XOPEN_SHM	1
#define _XOPEN_REALTIME_THREADS 1	_XOPEN_REALTIME_THREADS	1
#define _XOPEN_REALTIME 1	_XOPEN_REALTIME	1
#define _POSIX_NO_TRUNC 1	_POSIX_NO_TRUNC	1
#define _POSIX_VDISABLE '\0'	_POSIX_VDISABLE	'\0'
#define _POSIX_CHOWN_RESTRICTED 0	_POSIX_CHOWN_RESTRICTED	0
#define _POSIX_MEMORY_PROTECTION 200809L	_POSIX_MEMORY_PROTECTION	200809L
#define _POSIX_MEMLOCK_RANGE 200809L	_POSIX_MEMLOCK_RANGE	200809L
#define _POSIX_MEMLOCK 200809L	_POSIX_MEMLOCK	200809L
#define _POSIX_MAPPED_FILES 200809L	_POSIX_MAPPED_FILES	200809L
#define _POSIX_FSYNC 200809L	_POSIX_FSYNC	200809L
#define _POSIX_SYNCHRONIZED_IO 200809L	_POSIX_SYNCHRONIZED_IO	200809L
#define _POSIX_PRIORITY_SCHEDULING 200809L	_POSIX_PRIORITY_SCHEDULING	200809L
#define _POSIX_SAVED_IDS 1	_POSIX_SAVED_IDS	1
#define _POSIX_JOB_CONTROL 1	_POSIX_JOB_CONTROL	1
#define _BITS_POSIX_OPT_H 1	_BITS_POSIX_OPT_H	1
#ifndef _BITS_POSIX_OPT_H	_BITS_POSIX_OPT_H	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
#include <bits/wordsize.h>	<bits/wordsize.h>	
"#define __LP64_OFF64_LDFLAGS ""-m64"""	__LP64_OFF64_LDFLAGS	"""-m64"""
"#define __LP64_OFF64_CFLAGS ""-m64"""	__LP64_OFF64_CFLAGS	"""-m64"""
"#define __ILP32_OFFBIG_LDFLAGS ""-m32"""	__ILP32_OFFBIG_LDFLAGS	"""-m32"""
"#define __ILP32_OFFBIG_CFLAGS ""-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"""	__ILP32_OFFBIG_CFLAGS	"""-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"""
"#define __ILP32_OFF32_LDFLAGS ""-m32"""	__ILP32_OFF32_LDFLAGS	"""-m32"""
"#define __ILP32_OFF32_CFLAGS ""-m32"""	__ILP32_OFF32_CFLAGS	"""-m32"""
#define _XBS5_LP64_OFF64 1	_XBS5_LP64_OFF64	1
#define _POSIX_V6_LP64_OFF64 1	_POSIX_V6_LP64_OFF64	1
#define _POSIX_V7_LP64_OFF64 1	_POSIX_V7_LP64_OFF64	1
#define _XBS5_LPBIG_OFFBIG -1	_XBS5_LPBIG_OFFBIG	-1
#define _POSIX_V6_LPBIG_OFFBIG -1	_POSIX_V6_LPBIG_OFFBIG	-1
#define _POSIX_V7_LPBIG_OFFBIG -1	_POSIX_V7_LPBIG_OFFBIG	-1
#ifndef _UNISTD_H	_UNISTD_H	
#if __WORDSIZE == 64	__WORDSIZE == 64	
#ifndef __x86_64__	__x86_64__	
#if defined __x86_64__ && defined __ILP32__	defined __x86_64__ && defined __ILP32__	
#define _UNISTD_H 1	_UNISTD_H	1
#define __need_NULL	__need_NULL	
#define __need_size_t	__need_size_t	
#define _SC_UIO_MAXIOV _SC_UIO_MAXIOV	_SC_UIO_MAXIOV	_SC_UIO_MAXIOV
#define _SC_LEVEL1_ICACHE_SIZE _SC_LEVEL1_ICACHE_SIZE	_SC_LEVEL1_ICACHE_SIZE	_SC_LEVEL1_ICACHE_SIZE
#define _CS_V7_ENV _CS_V7_ENV	_CS_V7_ENV	_CS_V7_ENV
#define _CS_V6_ENV _CS_V6_ENV	_CS_V6_ENV	_CS_V6_ENV
#define _CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS _CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS	_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS	_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
#define _CS_POSIX_V7_LPBIG_OFFBIG_LIBS _CS_POSIX_V7_LPBIG_OFFBIG_LIBS	_CS_POSIX_V7_LPBIG_OFFBIG_LIBS	_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
#define _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS	_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS	_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
#define _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS	_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS	_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
#define _CS_POSIX_V7_LP64_OFF64_LINTFLAGS _CS_POSIX_V7_LP64_OFF64_LINTFLAGS	_CS_POSIX_V7_LP64_OFF64_LINTFLAGS	_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
#define _CS_POSIX_V7_LP64_OFF64_LIBS _CS_POSIX_V7_LP64_OFF64_LIBS	_CS_POSIX_V7_LP64_OFF64_LIBS	_CS_POSIX_V7_LP64_OFF64_LIBS
#define _CS_POSIX_V7_LP64_OFF64_LDFLAGS _CS_POSIX_V7_LP64_OFF64_LDFLAGS	_CS_POSIX_V7_LP64_OFF64_LDFLAGS	_CS_POSIX_V7_LP64_OFF64_LDFLAGS
#define _CS_POSIX_V7_LP64_OFF64_CFLAGS _CS_POSIX_V7_LP64_OFF64_CFLAGS	_CS_POSIX_V7_LP64_OFF64_CFLAGS	_CS_POSIX_V7_LP64_OFF64_CFLAGS
#define _CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS _CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS	_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS	_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
#define _CS_POSIX_V7_ILP32_OFFBIG_LIBS _CS_POSIX_V7_ILP32_OFFBIG_LIBS	_CS_POSIX_V7_ILP32_OFFBIG_LIBS	_CS_POSIX_V7_ILP32_OFFBIG_LIBS
#define _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS	_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS	_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
#define _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS	_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS	_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
#define _CS_POSIX_V7_ILP32_OFF32_LINTFLAGS _CS_POSIX_V7_ILP32_OFF32_LINTFLAGS	_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS	_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
#define _CS_POSIX_V7_ILP32_OFF32_LIBS _CS_POSIX_V7_ILP32_OFF32_LIBS	_CS_POSIX_V7_ILP32_OFF32_LIBS	_CS_POSIX_V7_ILP32_OFF32_LIBS
#define _CS_POSIX_V7_ILP32_OFF32_LDFLAGS _CS_POSIX_V7_ILP32_OFF32_LDFLAGS	_CS_POSIX_V7_ILP32_OFF32_LDFLAGS	_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
#define _CS_POSIX_V7_ILP32_OFF32_CFLAGS _CS_POSIX_V7_ILP32_OFF32_CFLAGS	_CS_POSIX_V7_ILP32_OFF32_CFLAGS	_CS_POSIX_V7_ILP32_OFF32_CFLAGS
#define _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS	_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS	_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
#define _CS_POSIX_V6_LPBIG_OFFBIG_LIBS _CS_POSIX_V6_LPBIG_OFFBIG_LIBS	_CS_POSIX_V6_LPBIG_OFFBIG_LIBS	_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
#define _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS	_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS	_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
#define _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS	_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS	_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
#define _CS_POSIX_V6_LP64_OFF64_LINTFLAGS _CS_POSIX_V6_LP64_OFF64_LINTFLAGS	_CS_POSIX_V6_LP64_OFF64_LINTFLAGS	_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
#define _CS_POSIX_V6_LP64_OFF64_LIBS _CS_POSIX_V6_LP64_OFF64_LIBS	_CS_POSIX_V6_LP64_OFF64_LIBS	_CS_POSIX_V6_LP64_OFF64_LIBS
#define _CS_POSIX_V6_LP64_OFF64_LDFLAGS _CS_POSIX_V6_LP64_OFF64_LDFLAGS	_CS_POSIX_V6_LP64_OFF64_LDFLAGS	_CS_POSIX_V6_LP64_OFF64_LDFLAGS
#define _CS_POSIX_V6_LP64_OFF64_CFLAGS _CS_POSIX_V6_LP64_OFF64_CFLAGS	_CS_POSIX_V6_LP64_OFF64_CFLAGS	_CS_POSIX_V6_LP64_OFF64_CFLAGS
#define _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS	_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS	_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
#define _CS_POSIX_V6_ILP32_OFFBIG_LIBS _CS_POSIX_V6_ILP32_OFFBIG_LIBS	_CS_POSIX_V6_ILP32_OFFBIG_LIBS	_CS_POSIX_V6_ILP32_OFFBIG_LIBS
#define _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS	_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS	_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
#define _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS	_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS	_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
#define _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS	_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS	_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
#define _CS_POSIX_V6_ILP32_OFF32_LIBS _CS_POSIX_V6_ILP32_OFF32_LIBS	_CS_POSIX_V6_ILP32_OFF32_LIBS	_CS_POSIX_V6_ILP32_OFF32_LIBS
#define _CS_POSIX_V6_ILP32_OFF32_LDFLAGS _CS_POSIX_V6_ILP32_OFF32_LDFLAGS	_CS_POSIX_V6_ILP32_OFF32_LDFLAGS	_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
#define _CS_POSIX_V6_ILP32_OFF32_CFLAGS _CS_POSIX_V6_ILP32_OFF32_CFLAGS	_CS_POSIX_V6_ILP32_OFF32_CFLAGS	_CS_POSIX_V6_ILP32_OFF32_CFLAGS
#define _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS	_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS	_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
#define _CS_XBS5_LPBIG_OFFBIG_LIBS _CS_XBS5_LPBIG_OFFBIG_LIBS	_CS_XBS5_LPBIG_OFFBIG_LIBS	_CS_XBS5_LPBIG_OFFBIG_LIBS
#define _CS_XBS5_LPBIG_OFFBIG_LDFLAGS _CS_XBS5_LPBIG_OFFBIG_LDFLAGS	_CS_XBS5_LPBIG_OFFBIG_LDFLAGS	_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
#define _CS_XBS5_LPBIG_OFFBIG_CFLAGS _CS_XBS5_LPBIG_OFFBIG_CFLAGS	_CS_XBS5_LPBIG_OFFBIG_CFLAGS	_CS_XBS5_LPBIG_OFFBIG_CFLAGS
#define _CS_XBS5_LP64_OFF64_LINTFLAGS _CS_XBS5_LP64_OFF64_LINTFLAGS	_CS_XBS5_LP64_OFF64_LINTFLAGS	_CS_XBS5_LP64_OFF64_LINTFLAGS
#define _CS_XBS5_LP64_OFF64_LIBS _CS_XBS5_LP64_OFF64_LIBS	_CS_XBS5_LP64_OFF64_LIBS	_CS_XBS5_LP64_OFF64_LIBS
#define _CS_XBS5_LP64_OFF64_LDFLAGS _CS_XBS5_LP64_OFF64_LDFLAGS	_CS_XBS5_LP64_OFF64_LDFLAGS	_CS_XBS5_LP64_OFF64_LDFLAGS
#define _CS_XBS5_LP64_OFF64_CFLAGS _CS_XBS5_LP64_OFF64_CFLAGS	_CS_XBS5_LP64_OFF64_CFLAGS	_CS_XBS5_LP64_OFF64_CFLAGS
#define _CS_XBS5_ILP32_OFFBIG_LINTFLAGS _CS_XBS5_ILP32_OFFBIG_LINTFLAGS	_CS_XBS5_ILP32_OFFBIG_LINTFLAGS	_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
#define _CS_XBS5_ILP32_OFFBIG_LIBS _CS_XBS5_ILP32_OFFBIG_LIBS	_CS_XBS5_ILP32_OFFBIG_LIBS	_CS_XBS5_ILP32_OFFBIG_LIBS
#define _CS_XBS5_ILP32_OFFBIG_LDFLAGS _CS_XBS5_ILP32_OFFBIG_LDFLAGS	_CS_XBS5_ILP32_OFFBIG_LDFLAGS	_CS_XBS5_ILP32_OFFBIG_LDFLAGS
#define _CS_XBS5_ILP32_OFFBIG_CFLAGS _CS_XBS5_ILP32_OFFBIG_CFLAGS	_CS_XBS5_ILP32_OFFBIG_CFLAGS	_CS_XBS5_ILP32_OFFBIG_CFLAGS
#define _CS_XBS5_ILP32_OFF32_LINTFLAGS _CS_XBS5_ILP32_OFF32_LINTFLAGS	_CS_XBS5_ILP32_OFF32_LINTFLAGS	_CS_XBS5_ILP32_OFF32_LINTFLAGS
#define _CS_XBS5_ILP32_OFF32_LIBS _CS_XBS5_ILP32_OFF32_LIBS	_CS_XBS5_ILP32_OFF32_LIBS	_CS_XBS5_ILP32_OFF32_LIBS
#define _CS_XBS5_ILP32_OFF32_LDFLAGS _CS_XBS5_ILP32_OFF32_LDFLAGS	_CS_XBS5_ILP32_OFF32_LDFLAGS	_CS_XBS5_ILP32_OFF32_LDFLAGS
#define _CS_XBS5_ILP32_OFF32_CFLAGS _CS_XBS5_ILP32_OFF32_CFLAGS	_CS_XBS5_ILP32_OFF32_CFLAGS	_CS_XBS5_ILP32_OFF32_CFLAGS
#define _CS_LFS64_LINTFLAGS _CS_LFS64_LINTFLAGS	_CS_LFS64_LINTFLAGS	_CS_LFS64_LINTFLAGS
#define _CS_LFS64_LIBS _CS_LFS64_LIBS	_CS_LFS64_LIBS	_CS_LFS64_LIBS
#define _CS_LFS64_LDFLAGS _CS_LFS64_LDFLAGS	_CS_LFS64_LDFLAGS	_CS_LFS64_LDFLAGS
#define _CS_LFS64_CFLAGS _CS_LFS64_CFLAGS	_CS_LFS64_CFLAGS	_CS_LFS64_CFLAGS
#define _CS_LFS_LINTFLAGS _CS_LFS_LINTFLAGS	_CS_LFS_LINTFLAGS	_CS_LFS_LINTFLAGS
#define _CS_LFS_LIBS _CS_LFS_LIBS	_CS_LFS_LIBS	_CS_LFS_LIBS
#define _CS_LFS_LDFLAGS _CS_LFS_LDFLAGS	_CS_LFS_LDFLAGS	_CS_LFS_LDFLAGS
#define _CS_LFS_CFLAGS _CS_LFS_CFLAGS	_CS_LFS_CFLAGS	_CS_LFS_CFLAGS
#define _CS_POSIX_V7_WIDTH_RESTRICTED_ENVS _CS_V7_WIDTH_RESTRICTED_ENVS	_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS	_CS_V7_WIDTH_RESTRICTED_ENVS
#define _CS_V7_WIDTH_RESTRICTED_ENVS _CS_V7_WIDTH_RESTRICTED_ENVS	_CS_V7_WIDTH_RESTRICTED_ENVS	_CS_V7_WIDTH_RESTRICTED_ENVS
#define _CS_POSIX_V5_WIDTH_RESTRICTED_ENVS _CS_V5_WIDTH_RESTRICTED_ENVS	_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS	_CS_V5_WIDTH_RESTRICTED_ENVS
#define _CS_V5_WIDTH_RESTRICTED_ENVS _CS_V5_WIDTH_RESTRICTED_ENVS	_CS_V5_WIDTH_RESTRICTED_ENVS	_CS_V5_WIDTH_RESTRICTED_ENVS
#define _CS_GNU_LIBPTHREAD_VERSION _CS_GNU_LIBPTHREAD_VERSION	_CS_GNU_LIBPTHREAD_VERSION	_CS_GNU_LIBPTHREAD_VERSION
#define _CS_GNU_LIBC_VERSION _CS_GNU_LIBC_VERSION	_CS_GNU_LIBC_VERSION	_CS_GNU_LIBC_VERSION
#define _CS_POSIX_V6_WIDTH_RESTRICTED_ENVS _CS_V6_WIDTH_RESTRICTED_ENVS	_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS	_CS_V6_WIDTH_RESTRICTED_ENVS
#define _CS_V6_WIDTH_RESTRICTED_ENVS _CS_V6_WIDTH_RESTRICTED_ENVS	_CS_V6_WIDTH_RESTRICTED_ENVS	_CS_V6_WIDTH_RESTRICTED_ENVS
#define _CS_PATH _CS_PATH	_CS_PATH	_CS_PATH
#define _SC_THREAD_ROBUST_PRIO_PROTECT _SC_THREAD_ROBUST_PRIO_PROTECT	_SC_THREAD_ROBUST_PRIO_PROTECT	_SC_THREAD_ROBUST_PRIO_PROTECT
#define _SC_THREAD_ROBUST_PRIO_INHERIT _SC_THREAD_ROBUST_PRIO_INHERIT	_SC_THREAD_ROBUST_PRIO_INHERIT	_SC_THREAD_ROBUST_PRIO_INHERIT
#define _SC_XOPEN_STREAMS _SC_XOPEN_STREAMS	_SC_XOPEN_STREAMS	_SC_XOPEN_STREAMS
#define _SC_TRACE_USER_EVENT_MAX _SC_TRACE_USER_EVENT_MAX	_SC_TRACE_USER_EVENT_MAX	_SC_TRACE_USER_EVENT_MAX
#define _SC_TRACE_SYS_MAX _SC_TRACE_SYS_MAX	_SC_TRACE_SYS_MAX	_SC_TRACE_SYS_MAX
#define _SC_TRACE_NAME_MAX _SC_TRACE_NAME_MAX	_SC_TRACE_NAME_MAX	_SC_TRACE_NAME_MAX
#define _SC_TRACE_EVENT_NAME_MAX _SC_TRACE_EVENT_NAME_MAX	_SC_TRACE_EVENT_NAME_MAX	_SC_TRACE_EVENT_NAME_MAX
#define _SC_SS_REPL_MAX _SC_SS_REPL_MAX	_SC_SS_REPL_MAX	_SC_SS_REPL_MAX
#define _SC_V7_LPBIG_OFFBIG _SC_V7_LPBIG_OFFBIG	_SC_V7_LPBIG_OFFBIG	_SC_V7_LPBIG_OFFBIG
#define _SC_V7_LP64_OFF64 _SC_V7_LP64_OFF64	_SC_V7_LP64_OFF64	_SC_V7_LP64_OFF64
#define _SC_V7_ILP32_OFFBIG _SC_V7_ILP32_OFFBIG	_SC_V7_ILP32_OFFBIG	_SC_V7_ILP32_OFFBIG
#define _SC_V7_ILP32_OFF32 _SC_V7_ILP32_OFF32	_SC_V7_ILP32_OFF32	_SC_V7_ILP32_OFF32
#define _SC_RAW_SOCKETS _SC_RAW_SOCKETS	_SC_RAW_SOCKETS	_SC_RAW_SOCKETS
#define _SC_IPV6 _SC_IPV6	_SC_IPV6	_SC_IPV6
#define _SC_LEVEL4_CACHE_LINESIZE _SC_LEVEL4_CACHE_LINESIZE	_SC_LEVEL4_CACHE_LINESIZE	_SC_LEVEL4_CACHE_LINESIZE
#define _SC_LEVEL4_CACHE_ASSOC _SC_LEVEL4_CACHE_ASSOC	_SC_LEVEL4_CACHE_ASSOC	_SC_LEVEL4_CACHE_ASSOC
#define _SC_LEVEL4_CACHE_SIZE _SC_LEVEL4_CACHE_SIZE	_SC_LEVEL4_CACHE_SIZE	_SC_LEVEL4_CACHE_SIZE
#define _SC_LEVEL3_CACHE_LINESIZE _SC_LEVEL3_CACHE_LINESIZE	_SC_LEVEL3_CACHE_LINESIZE	_SC_LEVEL3_CACHE_LINESIZE
#define _SC_LEVEL3_CACHE_ASSOC _SC_LEVEL3_CACHE_ASSOC	_SC_LEVEL3_CACHE_ASSOC	_SC_LEVEL3_CACHE_ASSOC
#define _SC_LEVEL3_CACHE_SIZE _SC_LEVEL3_CACHE_SIZE	_SC_LEVEL3_CACHE_SIZE	_SC_LEVEL3_CACHE_SIZE
#define _SC_LEVEL2_CACHE_LINESIZE _SC_LEVEL2_CACHE_LINESIZE	_SC_LEVEL2_CACHE_LINESIZE	_SC_LEVEL2_CACHE_LINESIZE
#define _SC_LEVEL2_CACHE_ASSOC _SC_LEVEL2_CACHE_ASSOC	_SC_LEVEL2_CACHE_ASSOC	_SC_LEVEL2_CACHE_ASSOC
#define _SC_LEVEL2_CACHE_SIZE _SC_LEVEL2_CACHE_SIZE	_SC_LEVEL2_CACHE_SIZE	_SC_LEVEL2_CACHE_SIZE
#define _SC_LEVEL1_DCACHE_LINESIZE _SC_LEVEL1_DCACHE_LINESIZE	_SC_LEVEL1_DCACHE_LINESIZE	_SC_LEVEL1_DCACHE_LINESIZE
#define _SC_LEVEL1_DCACHE_ASSOC _SC_LEVEL1_DCACHE_ASSOC	_SC_LEVEL1_DCACHE_ASSOC	_SC_LEVEL1_DCACHE_ASSOC
#define _SC_LEVEL1_DCACHE_SIZE _SC_LEVEL1_DCACHE_SIZE	_SC_LEVEL1_DCACHE_SIZE	_SC_LEVEL1_DCACHE_SIZE
#define _SC_LEVEL1_ICACHE_LINESIZE _SC_LEVEL1_ICACHE_LINESIZE	_SC_LEVEL1_ICACHE_LINESIZE	_SC_LEVEL1_ICACHE_LINESIZE
#define _SC_LEVEL1_ICACHE_ASSOC _SC_LEVEL1_ICACHE_ASSOC	_SC_LEVEL1_ICACHE_ASSOC	_SC_LEVEL1_ICACHE_ASSOC
#define _SC_TRACE_LOG _SC_TRACE_LOG	_SC_TRACE_LOG	_SC_TRACE_LOG
#define _SC_TRACE_INHERIT _SC_TRACE_INHERIT	_SC_TRACE_INHERIT	_SC_TRACE_INHERIT
#define _SC_TRACE_EVENT_FILTER _SC_TRACE_EVENT_FILTER	_SC_TRACE_EVENT_FILTER	_SC_TRACE_EVENT_FILTER
#define _SC_TRACE _SC_TRACE	_SC_TRACE	_SC_TRACE
#define _SC_HOST_NAME_MAX _SC_HOST_NAME_MAX	_SC_HOST_NAME_MAX	_SC_HOST_NAME_MAX
#define _SC_V6_LPBIG_OFFBIG _SC_V6_LPBIG_OFFBIG	_SC_V6_LPBIG_OFFBIG	_SC_V6_LPBIG_OFFBIG
#define _SC_V6_LP64_OFF64 _SC_V6_LP64_OFF64	_SC_V6_LP64_OFF64	_SC_V6_LP64_OFF64
#define _SC_V6_ILP32_OFFBIG _SC_V6_ILP32_OFFBIG	_SC_V6_ILP32_OFFBIG	_SC_V6_ILP32_OFFBIG
#define _SC_V6_ILP32_OFF32 _SC_V6_ILP32_OFF32	_SC_V6_ILP32_OFF32	_SC_V6_ILP32_OFF32
#define _SC_2_PBS_CHECKPOINT _SC_2_PBS_CHECKPOINT	_SC_2_PBS_CHECKPOINT	_SC_2_PBS_CHECKPOINT
#define _SC_STREAMS _SC_STREAMS	_SC_STREAMS	_SC_STREAMS
#define _SC_SYMLOOP_MAX _SC_SYMLOOP_MAX	_SC_SYMLOOP_MAX	_SC_SYMLOOP_MAX
#define _SC_2_PBS_TRACK _SC_2_PBS_TRACK	_SC_2_PBS_TRACK	_SC_2_PBS_TRACK
#define _SC_2_PBS_MESSAGE _SC_2_PBS_MESSAGE	_SC_2_PBS_MESSAGE	_SC_2_PBS_MESSAGE
#define _SC_2_PBS_LOCATE _SC_2_PBS_LOCATE	_SC_2_PBS_LOCATE	_SC_2_PBS_LOCATE
#define _SC_2_PBS_ACCOUNTING _SC_2_PBS_ACCOUNTING	_SC_2_PBS_ACCOUNTING	_SC_2_PBS_ACCOUNTING
#define _SC_2_PBS _SC_2_PBS	_SC_2_PBS	_SC_2_PBS
#define _SC_USER_GROUPS_R _SC_USER_GROUPS_R	_SC_USER_GROUPS_R	_SC_USER_GROUPS_R
#define _SC_USER_GROUPS _SC_USER_GROUPS	_SC_USER_GROUPS	_SC_USER_GROUPS
#define _SC_TYPED_MEMORY_OBJECTS _SC_TYPED_MEMORY_OBJECTS	_SC_TYPED_MEMORY_OBJECTS	_SC_TYPED_MEMORY_OBJECTS
#define _SC_TIMEOUTS _SC_TIMEOUTS	_SC_TIMEOUTS	_SC_TIMEOUTS
#define _SC_SYSTEM_DATABASE_R _SC_SYSTEM_DATABASE_R	_SC_SYSTEM_DATABASE_R	_SC_SYSTEM_DATABASE_R
#define _SC_SYSTEM_DATABASE _SC_SYSTEM_DATABASE	_SC_SYSTEM_DATABASE	_SC_SYSTEM_DATABASE
#define _SC_THREAD_SPORADIC_SERVER _SC_THREAD_SPORADIC_SERVER	_SC_THREAD_SPORADIC_SERVER	_SC_THREAD_SPORADIC_SERVER
#define _SC_SPORADIC_SERVER _SC_SPORADIC_SERVER	_SC_SPORADIC_SERVER	_SC_SPORADIC_SERVER
#define _SC_SPAWN _SC_SPAWN	_SC_SPAWN	_SC_SPAWN
#define _SC_SIGNALS _SC_SIGNALS	_SC_SIGNALS	_SC_SIGNALS
#define _SC_SHELL _SC_SHELL	_SC_SHELL	_SC_SHELL
#define _SC_REGEX_VERSION _SC_REGEX_VERSION	_SC_REGEX_VERSION	_SC_REGEX_VERSION
#define _SC_REGEXP _SC_REGEXP	_SC_REGEXP	_SC_REGEXP
#define _SC_SPIN_LOCKS _SC_SPIN_LOCKS	_SC_SPIN_LOCKS	_SC_SPIN_LOCKS
#define _SC_READER_WRITER_LOCKS _SC_READER_WRITER_LOCKS	_SC_READER_WRITER_LOCKS	_SC_READER_WRITER_LOCKS
#define _SC_NETWORKING _SC_NETWORKING	_SC_NETWORKING	_SC_NETWORKING
#define _SC_SINGLE_PROCESS _SC_SINGLE_PROCESS	_SC_SINGLE_PROCESS	_SC_SINGLE_PROCESS
#define _SC_MULTI_PROCESS _SC_MULTI_PROCESS	_SC_MULTI_PROCESS	_SC_MULTI_PROCESS
#define _SC_MONOTONIC_CLOCK _SC_MONOTONIC_CLOCK	_SC_MONOTONIC_CLOCK	_SC_MONOTONIC_CLOCK
#define _SC_FILE_SYSTEM _SC_FILE_SYSTEM	_SC_FILE_SYSTEM	_SC_FILE_SYSTEM
#define _SC_FILE_LOCKING _SC_FILE_LOCKING	_SC_FILE_LOCKING	_SC_FILE_LOCKING
#define _SC_FILE_ATTRIBUTES _SC_FILE_ATTRIBUTES	_SC_FILE_ATTRIBUTES	_SC_FILE_ATTRIBUTES
#define _SC_PIPE _SC_PIPE	_SC_PIPE	_SC_PIPE
#define _SC_FIFO _SC_FIFO	_SC_FIFO	_SC_FIFO
#define _SC_FD_MGMT _SC_FD_MGMT	_SC_FD_MGMT	_SC_FD_MGMT
#define _SC_DEVICE_SPECIFIC_R _SC_DEVICE_SPECIFIC_R	_SC_DEVICE_SPECIFIC_R	_SC_DEVICE_SPECIFIC_R
#define _SC_DEVICE_SPECIFIC _SC_DEVICE_SPECIFIC	_SC_DEVICE_SPECIFIC	_SC_DEVICE_SPECIFIC
#define _SC_DEVICE_IO _SC_DEVICE_IO	_SC_DEVICE_IO	_SC_DEVICE_IO
#define _SC_THREAD_CPUTIME _SC_THREAD_CPUTIME	_SC_THREAD_CPUTIME	_SC_THREAD_CPUTIME
#define _SC_CPUTIME _SC_CPUTIME	_SC_CPUTIME	_SC_CPUTIME
#define _SC_CLOCK_SELECTION _SC_CLOCK_SELECTION	_SC_CLOCK_SELECTION	_SC_CLOCK_SELECTION
#define _SC_C_LANG_SUPPORT_R _SC_C_LANG_SUPPORT_R	_SC_C_LANG_SUPPORT_R	_SC_C_LANG_SUPPORT_R
#define _SC_C_LANG_SUPPORT _SC_C_LANG_SUPPORT	_SC_C_LANG_SUPPORT	_SC_C_LANG_SUPPORT
#define _SC_BASE _SC_BASE	_SC_BASE	_SC_BASE
#define _SC_BARRIERS _SC_BARRIERS	_SC_BARRIERS	_SC_BARRIERS
#define _SC_ADVISORY_INFO _SC_ADVISORY_INFO	_SC_ADVISORY_INFO	_SC_ADVISORY_INFO
#define _SC_XOPEN_REALTIME_THREADS _SC_XOPEN_REALTIME_THREADS	_SC_XOPEN_REALTIME_THREADS	_SC_XOPEN_REALTIME_THREADS
#define _SC_XOPEN_REALTIME _SC_XOPEN_REALTIME	_SC_XOPEN_REALTIME	_SC_XOPEN_REALTIME
#define _SC_XOPEN_LEGACY _SC_XOPEN_LEGACY	_SC_XOPEN_LEGACY	_SC_XOPEN_LEGACY
#define _SC_XBS5_LPBIG_OFFBIG _SC_XBS5_LPBIG_OFFBIG	_SC_XBS5_LPBIG_OFFBIG	_SC_XBS5_LPBIG_OFFBIG
#define _SC_XBS5_LP64_OFF64 _SC_XBS5_LP64_OFF64	_SC_XBS5_LP64_OFF64	_SC_XBS5_LP64_OFF64
#define _SC_XBS5_ILP32_OFFBIG _SC_XBS5_ILP32_OFFBIG	_SC_XBS5_ILP32_OFFBIG	_SC_XBS5_ILP32_OFFBIG
#define _SC_XBS5_ILP32_OFF32 _SC_XBS5_ILP32_OFF32	_SC_XBS5_ILP32_OFF32	_SC_XBS5_ILP32_OFF32
#define _SC_NL_TEXTMAX _SC_NL_TEXTMAX	_SC_NL_TEXTMAX	_SC_NL_TEXTMAX
#define _SC_NL_SETMAX _SC_NL_SETMAX	_SC_NL_SETMAX	_SC_NL_SETMAX
#define _SC_NL_NMAX _SC_NL_NMAX	_SC_NL_NMAX	_SC_NL_NMAX
#define _SC_NL_MSGMAX _SC_NL_MSGMAX	_SC_NL_MSGMAX	_SC_NL_MSGMAX
#define _SC_NL_LANGMAX _SC_NL_LANGMAX	_SC_NL_LANGMAX	_SC_NL_LANGMAX
#define _SC_NL_ARGMAX _SC_NL_ARGMAX	_SC_NL_ARGMAX	_SC_NL_ARGMAX
#define _SC_USHRT_MAX _SC_USHRT_MAX	_SC_USHRT_MAX	_SC_USHRT_MAX
#define _SC_ULONG_MAX _SC_ULONG_MAX	_SC_ULONG_MAX	_SC_ULONG_MAX
#define _SC_UINT_MAX _SC_UINT_MAX	_SC_UINT_MAX	_SC_UINT_MAX
#define _SC_UCHAR_MAX _SC_UCHAR_MAX	_SC_UCHAR_MAX	_SC_UCHAR_MAX
#define _SC_SHRT_MIN _SC_SHRT_MIN	_SC_SHRT_MIN	_SC_SHRT_MIN
#define _SC_SHRT_MAX _SC_SHRT_MAX	_SC_SHRT_MAX	_SC_SHRT_MAX
#define _SC_SCHAR_MIN _SC_SCHAR_MIN	_SC_SCHAR_MIN	_SC_SCHAR_MIN
#define _SC_SCHAR_MAX _SC_SCHAR_MAX	_SC_SCHAR_MAX	_SC_SCHAR_MAX
#define _SC_SSIZE_MAX _SC_SSIZE_MAX	_SC_SSIZE_MAX	_SC_SSIZE_MAX
#define _SC_NZERO _SC_NZERO	_SC_NZERO	_SC_NZERO
#define _SC_MB_LEN_MAX _SC_MB_LEN_MAX	_SC_MB_LEN_MAX	_SC_MB_LEN_MAX
#define _SC_WORD_BIT _SC_WORD_BIT	_SC_WORD_BIT	_SC_WORD_BIT
#define _SC_LONG_BIT _SC_LONG_BIT	_SC_LONG_BIT	_SC_LONG_BIT
#define _SC_INT_MIN _SC_INT_MIN	_SC_INT_MIN	_SC_INT_MIN
#define _SC_INT_MAX _SC_INT_MAX	_SC_INT_MAX	_SC_INT_MAX
#define _SC_CHAR_MIN _SC_CHAR_MIN	_SC_CHAR_MIN	_SC_CHAR_MIN
#define _SC_CHAR_MAX _SC_CHAR_MAX	_SC_CHAR_MAX	_SC_CHAR_MAX
#define _SC_CHAR_BIT _SC_CHAR_BIT	_SC_CHAR_BIT	_SC_CHAR_BIT
#define _SC_XOPEN_XPG4 _SC_XOPEN_XPG4	_SC_XOPEN_XPG4	_SC_XOPEN_XPG4
#define _SC_XOPEN_XPG3 _SC_XOPEN_XPG3	_SC_XOPEN_XPG3	_SC_XOPEN_XPG3
#define _SC_XOPEN_XPG2 _SC_XOPEN_XPG2	_SC_XOPEN_XPG2	_SC_XOPEN_XPG2
#define _SC_2_UPE _SC_2_UPE	_SC_2_UPE	_SC_2_UPE
#define _SC_2_C_VERSION _SC_2_C_VERSION	_SC_2_C_VERSION	_SC_2_C_VERSION
#define _SC_2_CHAR_TERM _SC_2_CHAR_TERM	_SC_2_CHAR_TERM	_SC_2_CHAR_TERM
#define _SC_XOPEN_SHM _SC_XOPEN_SHM	_SC_XOPEN_SHM	_SC_XOPEN_SHM
#define _SC_XOPEN_ENH_I18N _SC_XOPEN_ENH_I18N	_SC_XOPEN_ENH_I18N	_SC_XOPEN_ENH_I18N
#define _SC_XOPEN_CRYPT _SC_XOPEN_CRYPT	_SC_XOPEN_CRYPT	_SC_XOPEN_CRYPT
#define _SC_XOPEN_UNIX _SC_XOPEN_UNIX	_SC_XOPEN_UNIX	_SC_XOPEN_UNIX
#define _SC_XOPEN_XCU_VERSION _SC_XOPEN_XCU_VERSION	_SC_XOPEN_XCU_VERSION	_SC_XOPEN_XCU_VERSION
#define _SC_XOPEN_VERSION _SC_XOPEN_VERSION	_SC_XOPEN_VERSION	_SC_XOPEN_VERSION
#define _SC_PASS_MAX _SC_PASS_MAX	_SC_PASS_MAX	_SC_PASS_MAX
#define _SC_ATEXIT_MAX _SC_ATEXIT_MAX	_SC_ATEXIT_MAX	_SC_ATEXIT_MAX
#define _SC_AVPHYS_PAGES _SC_AVPHYS_PAGES	_SC_AVPHYS_PAGES	_SC_AVPHYS_PAGES
#define _SC_PHYS_PAGES _SC_PHYS_PAGES	_SC_PHYS_PAGES	_SC_PHYS_PAGES
#define _SC_NPROCESSORS_ONLN _SC_NPROCESSORS_ONLN	_SC_NPROCESSORS_ONLN	_SC_NPROCESSORS_ONLN
#define _SC_NPROCESSORS_CONF _SC_NPROCESSORS_CONF	_SC_NPROCESSORS_CONF	_SC_NPROCESSORS_CONF
#define _SC_THREAD_PROCESS_SHARED _SC_THREAD_PROCESS_SHARED	_SC_THREAD_PROCESS_SHARED	_SC_THREAD_PROCESS_SHARED
#define _SC_THREAD_PRIO_PROTECT _SC_THREAD_PRIO_PROTECT	_SC_THREAD_PRIO_PROTECT	_SC_THREAD_PRIO_PROTECT
#define _SC_THREAD_PRIO_INHERIT _SC_THREAD_PRIO_INHERIT	_SC_THREAD_PRIO_INHERIT	_SC_THREAD_PRIO_INHERIT
#define _SC_THREAD_PRIORITY_SCHEDULING _SC_THREAD_PRIORITY_SCHEDULING	_SC_THREAD_PRIORITY_SCHEDULING	_SC_THREAD_PRIORITY_SCHEDULING
#define _SC_THREAD_ATTR_STACKSIZE _SC_THREAD_ATTR_STACKSIZE	_SC_THREAD_ATTR_STACKSIZE	_SC_THREAD_ATTR_STACKSIZE
#define _SC_THREAD_ATTR_STACKADDR _SC_THREAD_ATTR_STACKADDR	_SC_THREAD_ATTR_STACKADDR	_SC_THREAD_ATTR_STACKADDR
#define _SC_THREAD_THREADS_MAX _SC_THREAD_THREADS_MAX	_SC_THREAD_THREADS_MAX	_SC_THREAD_THREADS_MAX
#define _SC_THREAD_STACK_MIN _SC_THREAD_STACK_MIN	_SC_THREAD_STACK_MIN	_SC_THREAD_STACK_MIN
#define _SC_THREAD_KEYS_MAX _SC_THREAD_KEYS_MAX	_SC_THREAD_KEYS_MAX	_SC_THREAD_KEYS_MAX
#define _SC_THREAD_DESTRUCTOR_ITERATIONS _SC_THREAD_DESTRUCTOR_ITERATIONS	_SC_THREAD_DESTRUCTOR_ITERATIONS	_SC_THREAD_DESTRUCTOR_ITERATIONS
#define _SC_TTY_NAME_MAX _SC_TTY_NAME_MAX	_SC_TTY_NAME_MAX	_SC_TTY_NAME_MAX
#define _SC_LOGIN_NAME_MAX _SC_LOGIN_NAME_MAX	_SC_LOGIN_NAME_MAX	_SC_LOGIN_NAME_MAX
#define _SC_GETPW_R_SIZE_MAX _SC_GETPW_R_SIZE_MAX	_SC_GETPW_R_SIZE_MAX	_SC_GETPW_R_SIZE_MAX
#define _SC_GETGR_R_SIZE_MAX _SC_GETGR_R_SIZE_MAX	_SC_GETGR_R_SIZE_MAX	_SC_GETGR_R_SIZE_MAX
#define _SC_THREAD_SAFE_FUNCTIONS _SC_THREAD_SAFE_FUNCTIONS	_SC_THREAD_SAFE_FUNCTIONS	_SC_THREAD_SAFE_FUNCTIONS
#define _SC_THREADS _SC_THREADS	_SC_THREADS	_SC_THREADS
#define _SC_T_IOV_MAX _SC_T_IOV_MAX	_SC_T_IOV_MAX	_SC_T_IOV_MAX
#define _SC_PII_OSI_M _SC_PII_OSI_M	_SC_PII_OSI_M	_SC_PII_OSI_M
#define _SC_PII_OSI_CLTS _SC_PII_OSI_CLTS	_SC_PII_OSI_CLTS	_SC_PII_OSI_CLTS
#define _SC_PII_OSI_COTS _SC_PII_OSI_COTS	_SC_PII_OSI_COTS	_SC_PII_OSI_COTS
#define _SC_PII_INTERNET_DGRAM _SC_PII_INTERNET_DGRAM	_SC_PII_INTERNET_DGRAM	_SC_PII_INTERNET_DGRAM
#define _SC_PII_INTERNET_STREAM _SC_PII_INTERNET_STREAM	_SC_PII_INTERNET_STREAM	_SC_PII_INTERNET_STREAM
#define _SC_IOV_MAX _SC_IOV_MAX	_SC_IOV_MAX	_SC_IOV_MAX
#define _SC_SELECT _SC_SELECT	_SC_SELECT	_SC_SELECT
#define _SC_POLL _SC_POLL	_SC_POLL	_SC_POLL
#define _SC_PII_OSI _SC_PII_OSI	_SC_PII_OSI	_SC_PII_OSI
#define _SC_PII_INTERNET _SC_PII_INTERNET	_SC_PII_INTERNET	_SC_PII_INTERNET
#define _SC_PII_SOCKET _SC_PII_SOCKET	_SC_PII_SOCKET	_SC_PII_SOCKET
#define _SC_PII_XTI _SC_PII_XTI	_SC_PII_XTI	_SC_PII_XTI
#define _SC_PII _SC_PII	_SC_PII	_SC_PII
#define _SC_2_LOCALEDEF _SC_2_LOCALEDEF	_SC_2_LOCALEDEF	_SC_2_LOCALEDEF
#define _SC_2_SW_DEV _SC_2_SW_DEV	_SC_2_SW_DEV	_SC_2_SW_DEV
#define _SC_2_FORT_RUN _SC_2_FORT_RUN	_SC_2_FORT_RUN	_SC_2_FORT_RUN
#define _SC_2_FORT_DEV _SC_2_FORT_DEV	_SC_2_FORT_DEV	_SC_2_FORT_DEV
#define _SC_2_C_DEV _SC_2_C_DEV	_SC_2_C_DEV	_SC_2_C_DEV
#define _SC_2_C_BIND _SC_2_C_BIND	_SC_2_C_BIND	_SC_2_C_BIND
#define _SC_2_VERSION _SC_2_VERSION	_SC_2_VERSION	_SC_2_VERSION
#define _SC_CHARCLASS_NAME_MAX _SC_CHARCLASS_NAME_MAX	_SC_CHARCLASS_NAME_MAX	_SC_CHARCLASS_NAME_MAX
#define _SC_RE_DUP_MAX _SC_RE_DUP_MAX	_SC_RE_DUP_MAX	_SC_RE_DUP_MAX
#define _SC_LINE_MAX _SC_LINE_MAX	_SC_LINE_MAX	_SC_LINE_MAX
#define _SC_EXPR_NEST_MAX _SC_EXPR_NEST_MAX	_SC_EXPR_NEST_MAX	_SC_EXPR_NEST_MAX
#define _SC_EQUIV_CLASS_MAX _SC_EQUIV_CLASS_MAX	_SC_EQUIV_CLASS_MAX	_SC_EQUIV_CLASS_MAX
#define _SC_COLL_WEIGHTS_MAX _SC_COLL_WEIGHTS_MAX	_SC_COLL_WEIGHTS_MAX	_SC_COLL_WEIGHTS_MAX
#define _SC_BC_STRING_MAX _SC_BC_STRING_MAX	_SC_BC_STRING_MAX	_SC_BC_STRING_MAX
#define _SC_BC_SCALE_MAX _SC_BC_SCALE_MAX	_SC_BC_SCALE_MAX	_SC_BC_SCALE_MAX
#define _SC_BC_DIM_MAX _SC_BC_DIM_MAX	_SC_BC_DIM_MAX	_SC_BC_DIM_MAX
#define _SC_BC_BASE_MAX _SC_BC_BASE_MAX	_SC_BC_BASE_MAX	_SC_BC_BASE_MAX
#define _SC_TIMER_MAX _SC_TIMER_MAX	_SC_TIMER_MAX	_SC_TIMER_MAX
#define _SC_SIGQUEUE_MAX _SC_SIGQUEUE_MAX	_SC_SIGQUEUE_MAX	_SC_SIGQUEUE_MAX
#define _SC_SEM_VALUE_MAX _SC_SEM_VALUE_MAX	_SC_SEM_VALUE_MAX	_SC_SEM_VALUE_MAX
#define _SC_SEM_NSEMS_MAX _SC_SEM_NSEMS_MAX	_SC_SEM_NSEMS_MAX	_SC_SEM_NSEMS_MAX
#define _SC_RTSIG_MAX _SC_RTSIG_MAX	_SC_RTSIG_MAX	_SC_RTSIG_MAX
#define _SC_PAGE_SIZE _SC_PAGESIZE	_SC_PAGE_SIZE	_SC_PAGESIZE
#define _SC_PAGESIZE _SC_PAGESIZE	_SC_PAGESIZE	_SC_PAGESIZE
#define _SC_VERSION _SC_VERSION	_SC_VERSION	_SC_VERSION
#define _SC_MQ_PRIO_MAX _SC_MQ_PRIO_MAX	_SC_MQ_PRIO_MAX	_SC_MQ_PRIO_MAX
#define _SC_MQ_OPEN_MAX _SC_MQ_OPEN_MAX	_SC_MQ_OPEN_MAX	_SC_MQ_OPEN_MAX
#define _SC_DELAYTIMER_MAX _SC_DELAYTIMER_MAX	_SC_DELAYTIMER_MAX	_SC_DELAYTIMER_MAX
#define _SC_AIO_PRIO_DELTA_MAX _SC_AIO_PRIO_DELTA_MAX	_SC_AIO_PRIO_DELTA_MAX	_SC_AIO_PRIO_DELTA_MAX
#define _SC_AIO_MAX _SC_AIO_MAX	_SC_AIO_MAX	_SC_AIO_MAX
#define _SC_AIO_LISTIO_MAX _SC_AIO_LISTIO_MAX	_SC_AIO_LISTIO_MAX	_SC_AIO_LISTIO_MAX
#define _SC_SHARED_MEMORY_OBJECTS _SC_SHARED_MEMORY_OBJECTS	_SC_SHARED_MEMORY_OBJECTS	_SC_SHARED_MEMORY_OBJECTS
#define _SC_SEMAPHORES _SC_SEMAPHORES	_SC_SEMAPHORES	_SC_SEMAPHORES
#define _SC_MESSAGE_PASSING _SC_MESSAGE_PASSING	_SC_MESSAGE_PASSING	_SC_MESSAGE_PASSING
#define _SC_MEMORY_PROTECTION _SC_MEMORY_PROTECTION	_SC_MEMORY_PROTECTION	_SC_MEMORY_PROTECTION
#define _SC_MEMLOCK_RANGE _SC_MEMLOCK_RANGE	_SC_MEMLOCK_RANGE	_SC_MEMLOCK_RANGE
#define _SC_MEMLOCK _SC_MEMLOCK	_SC_MEMLOCK	_SC_MEMLOCK
#define _SC_MAPPED_FILES _SC_MAPPED_FILES	_SC_MAPPED_FILES	_SC_MAPPED_FILES
#define _SC_FSYNC _SC_FSYNC	_SC_FSYNC	_SC_FSYNC
#define _SC_SYNCHRONIZED_IO _SC_SYNCHRONIZED_IO	_SC_SYNCHRONIZED_IO	_SC_SYNCHRONIZED_IO
#define _SC_PRIORITIZED_IO _SC_PRIORITIZED_IO	_SC_PRIORITIZED_IO	_SC_PRIORITIZED_IO
#define _SC_ASYNCHRONOUS_IO _SC_ASYNCHRONOUS_IO	_SC_ASYNCHRONOUS_IO	_SC_ASYNCHRONOUS_IO
#define _SC_TIMERS _SC_TIMERS	_SC_TIMERS	_SC_TIMERS
#define _SC_PRIORITY_SCHEDULING _SC_PRIORITY_SCHEDULING	_SC_PRIORITY_SCHEDULING	_SC_PRIORITY_SCHEDULING
#define _SC_REALTIME_SIGNALS _SC_REALTIME_SIGNALS	_SC_REALTIME_SIGNALS	_SC_REALTIME_SIGNALS
#define _SC_SAVED_IDS _SC_SAVED_IDS	_SC_SAVED_IDS	_SC_SAVED_IDS
#define _SC_JOB_CONTROL _SC_JOB_CONTROL	_SC_JOB_CONTROL	_SC_JOB_CONTROL
#define _SC_TZNAME_MAX _SC_TZNAME_MAX	_SC_TZNAME_MAX	_SC_TZNAME_MAX
#define _SC_STREAM_MAX _SC_STREAM_MAX	_SC_STREAM_MAX	_SC_STREAM_MAX
#define _SC_OPEN_MAX _SC_OPEN_MAX	_SC_OPEN_MAX	_SC_OPEN_MAX
#define _SC_NGROUPS_MAX _SC_NGROUPS_MAX	_SC_NGROUPS_MAX	_SC_NGROUPS_MAX
#define _SC_CLK_TCK _SC_CLK_TCK	_SC_CLK_TCK	_SC_CLK_TCK
#define _SC_CHILD_MAX _SC_CHILD_MAX	_SC_CHILD_MAX	_SC_CHILD_MAX
#define _SC_ARG_MAX _SC_ARG_MAX	_SC_ARG_MAX	_SC_ARG_MAX
#define _PC_2_SYMLINKS _PC_2_SYMLINKS	_PC_2_SYMLINKS	_PC_2_SYMLINKS
#define _PC_SYMLINK_MAX _PC_SYMLINK_MAX	_PC_SYMLINK_MAX	_PC_SYMLINK_MAX
#define _PC_ALLOC_SIZE_MIN _PC_ALLOC_SIZE_MIN	_PC_ALLOC_SIZE_MIN	_PC_ALLOC_SIZE_MIN
#define _PC_REC_XFER_ALIGN _PC_REC_XFER_ALIGN	_PC_REC_XFER_ALIGN	_PC_REC_XFER_ALIGN
#define _PC_REC_MIN_XFER_SIZE _PC_REC_MIN_XFER_SIZE	_PC_REC_MIN_XFER_SIZE	_PC_REC_MIN_XFER_SIZE
#define _PC_REC_MAX_XFER_SIZE _PC_REC_MAX_XFER_SIZE	_PC_REC_MAX_XFER_SIZE	_PC_REC_MAX_XFER_SIZE
#define _PC_REC_INCR_XFER_SIZE _PC_REC_INCR_XFER_SIZE	_PC_REC_INCR_XFER_SIZE	_PC_REC_INCR_XFER_SIZE
#define _PC_FILESIZEBITS _PC_FILESIZEBITS	_PC_FILESIZEBITS	_PC_FILESIZEBITS
#define _PC_SOCK_MAXBUF _PC_SOCK_MAXBUF	_PC_SOCK_MAXBUF	_PC_SOCK_MAXBUF
#define _PC_PRIO_IO _PC_PRIO_IO	_PC_PRIO_IO	_PC_PRIO_IO
#define _PC_ASYNC_IO _PC_ASYNC_IO	_PC_ASYNC_IO	_PC_ASYNC_IO
#define _PC_SYNC_IO _PC_SYNC_IO	_PC_SYNC_IO	_PC_SYNC_IO
#define _PC_VDISABLE _PC_VDISABLE	_PC_VDISABLE	_PC_VDISABLE
#define _PC_NO_TRUNC _PC_NO_TRUNC	_PC_NO_TRUNC	_PC_NO_TRUNC
#define _PC_CHOWN_RESTRICTED _PC_CHOWN_RESTRICTED	_PC_CHOWN_RESTRICTED	_PC_CHOWN_RESTRICTED
#define _PC_PIPE_BUF _PC_PIPE_BUF	_PC_PIPE_BUF	_PC_PIPE_BUF
#define _PC_PATH_MAX _PC_PATH_MAX	_PC_PATH_MAX	_PC_PATH_MAX
#define _PC_NAME_MAX _PC_NAME_MAX	_PC_NAME_MAX	_PC_NAME_MAX
#define _PC_MAX_INPUT _PC_MAX_INPUT	_PC_MAX_INPUT	_PC_MAX_INPUT
#define _PC_MAX_CANON _PC_MAX_CANON	_PC_MAX_CANON	_PC_MAX_CANON
#define _PC_LINK_MAX _PC_LINK_MAX	_PC_LINK_MAX	_PC_LINK_MAX
#ifndef _UNISTD_H	_UNISTD_H	
#define _GETOPT_CORE_H 1	_GETOPT_CORE_H	1
#ifndef _GETOPT_CORE_H	_GETOPT_CORE_H	
#include <bits/getopt_core.h>	<bits/getopt_core.h>	
#define _GETOPT_POSIX_H 1	_GETOPT_POSIX_H	1
#ifndef _GETOPT_POSIX_H	_GETOPT_POSIX_H	
#if !defined _UNISTD_H && !defined _STDIO_H	!defined _UNISTD_H && !defined _STDIO_H	
#if defined __USE_POSIX2 && !defined __USE_POSIX_IMPLICITLY \	defined __USE_POSIX2 && !defined __USE_POSIX_IMPLICITLY \	
#ifdef __REDIRECT	__REDIRECT	
#ifndef _UNISTD_H	_UNISTD_H	
#ifdef __USE_UNIX98	__USE_UNIX98	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#if defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K	defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K	
#ifdef __USE_ATFILE	__USE_ATFILE	
#if defined __USE_MISC || defined __USE_XOPEN_EXTENDED	defined __USE_MISC || defined __USE_XOPEN_EXTENDED	
#ifdef __USE_POSIX199506	__USE_POSIX199506	
#if defined __USE_MISC || defined __USE_UNIX98	defined __USE_MISC || defined __USE_UNIX98	
#if defined __USE_MISC || (defined __USE_XOPEN && !defined __USE_UNIX98)	defined __USE_MISC || (defined __USE_XOPEN && !defined __USE_UNIX98)	
#ifndef _UNISTD_H	_UNISTD_H	
#ifdef __USE_GNU	__USE_GNU	
#include <bits/unistd_ext.h>	<bits/unistd_ext.h>	
#include <bits/unistd.h>	<bits/unistd.h>	
#include <bits/getopt_posix.h>	<bits/getopt_posix.h>	
#include <bits/confname.h>	<bits/confname.h>	
#include <stddef.h>	<stddef.h>	
#include <bits/types.h>	<bits/types.h>	
#include <bits/environments.h>	<bits/environments.h>	
#include <bits/posix_opt.h>	<bits/posix_opt.h>	
#include <features.h>	<features.h>	
#define TEMP_FAILURE_RETRY(expression) (__extension__ ({ long int __result; do __result = (long int) (expression); while (__result == -1L && errno == EINTR); __result; }))	TEMP_FAILURE_RETRY(expression)	(__extension__ ({ long int __result; do __result = (long int) (expression); while (__result == -1L && errno == EINTR); __result; }))
#define F_TEST 3	F_TEST	3
#define F_TLOCK 2	F_TLOCK	2
#define F_LOCK 1	F_LOCK	1
#define F_ULOCK 0	F_ULOCK	0
#define L_XTND SEEK_END	L_XTND	SEEK_END
#define L_INCR SEEK_CUR	L_INCR	SEEK_CUR
#define L_SET SEEK_SET	L_SET	SEEK_SET
#define F_OK 0	F_OK	0
#define X_OK 1	X_OK	1
#define W_OK 2	W_OK	2
#define R_OK 4	R_OK	4
#define __socklen_t_defined	__socklen_t_defined	
#define STDERR_FILENO 2	STDERR_FILENO	2
#define STDOUT_FILENO 1	STDOUT_FILENO	1
#define STDIN_FILENO 0	STDIN_FILENO	0
#define _XOPEN_LEGACY 1	_XOPEN_LEGACY	1
#define _XOPEN_ENH_I18N 1	_XOPEN_ENH_I18N	1
#define _XOPEN_UNIX 1	_XOPEN_UNIX	1
#define _XOPEN_XPG4 1	_XOPEN_XPG4	1
#define _XOPEN_XPG3 1	_XOPEN_XPG3	1
#define _XOPEN_XPG2 1	_XOPEN_XPG2	1
#define _XOPEN_XCU_VERSION 4	_XOPEN_XCU_VERSION	4
#define _XOPEN_VERSION 700	_XOPEN_VERSION	700
#define _POSIX2_LOCALEDEF __POSIX2_THIS_VERSION	_POSIX2_LOCALEDEF	__POSIX2_THIS_VERSION
#define _POSIX2_SW_DEV __POSIX2_THIS_VERSION	_POSIX2_SW_DEV	__POSIX2_THIS_VERSION
#define _POSIX2_C_DEV __POSIX2_THIS_VERSION	_POSIX2_C_DEV	__POSIX2_THIS_VERSION
#define _POSIX2_C_BIND __POSIX2_THIS_VERSION	_POSIX2_C_BIND	__POSIX2_THIS_VERSION
#define _POSIX2_C_VERSION __POSIX2_THIS_VERSION	_POSIX2_C_VERSION	__POSIX2_THIS_VERSION
#define _POSIX2_VERSION __POSIX2_THIS_VERSION	_POSIX2_VERSION	__POSIX2_THIS_VERSION
#define __POSIX2_THIS_VERSION 200809L	__POSIX2_THIS_VERSION	200809L
#define _POSIX_VERSION 200809L	_POSIX_VERSION	200809L
#ifndef _UNISTD_H	_UNISTD_H	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
#elif defined __USE_XOPEN2K	defined __USE_XOPEN2K	
#elif defined __USE_POSIX199506	defined __USE_POSIX199506	
#elif defined __USE_POSIX199309	defined __USE_POSIX199309	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
#elif defined __USE_XOPEN2K	defined __USE_XOPEN2K	
#elif defined __USE_POSIX199506	defined __USE_POSIX199506	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
#elif defined __USE_XOPEN2K	defined __USE_XOPEN2K	
#elif defined __USE_UNIX98	defined __USE_UNIX98	
#if defined __USE_UNIX98 || defined __USE_XOPEN2K	defined __USE_UNIX98 || defined __USE_XOPEN2K	
#ifndef __ssize_t_defined	__ssize_t_defined	
#if defined __USE_XOPEN || defined __USE_XOPEN2K	defined __USE_XOPEN || defined __USE_XOPEN2K	
#ifndef __gid_t_defined	__gid_t_defined	
#ifndef __uid_t_defined	__uid_t_defined	
#ifndef __off_t_defined	__off_t_defined	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#if defined __USE_LARGEFILE64 && !defined __off64_t_defined	defined __USE_LARGEFILE64 && !defined __off64_t_defined	
#ifndef __useconds_t_defined	__useconds_t_defined	
#ifndef __pid_t_defined	__pid_t_defined	
#if defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K	defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K	
#ifndef __intptr_t_defined	__intptr_t_defined	
#if defined __USE_MISC || defined __USE_XOPEN	defined __USE_MISC || defined __USE_XOPEN	
#ifndef __socklen_t_defined	__socklen_t_defined	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_ATFILE	__USE_ATFILE	
#ifndef _STDIO_H	_STDIO_H	
#ifdef __USE_GNU	__USE_GNU	
#if defined __USE_MISC && !defined L_SET	defined __USE_MISC && !defined L_SET	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT_NTH	__REDIRECT_NTH	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#if defined __USE_UNIX98 || defined __USE_XOPEN2K8	defined __USE_UNIX98 || defined __USE_XOPEN2K8	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT	__REDIRECT	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifdef __USE_GNU	__USE_GNU	
#if (defined __USE_XOPEN_EXTENDED && !defined __USE_XOPEN2K8) \	(defined __USE_XOPEN_EXTENDED && !defined __USE_XOPEN2K8) \	
#if defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	
#ifdef __USE_ATFILE	__USE_ATFILE	
#if defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	
#ifdef __USE_GNU	__USE_GNU	
#if (defined __USE_XOPEN_EXTENDED && !defined __USE_XOPEN2K8) \	(defined __USE_XOPEN_EXTENDED && !defined __USE_XOPEN2K8) \	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
#ifdef __USE_GNU	__USE_GNU	
#if defined __USE_MISC || defined __USE_XOPEN	defined __USE_MISC || defined __USE_XOPEN	
#ifdef __USE_POSIX2	__USE_POSIX2	
#if defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	
#if defined __USE_MISC || defined __USE_XOPEN_EXTENDED	defined __USE_MISC || defined __USE_XOPEN_EXTENDED	
#if defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	
#ifdef __USE_GNU	__USE_GNU	
#if defined __USE_MISC || defined __USE_XOPEN_EXTENDED	defined __USE_MISC || defined __USE_XOPEN_EXTENDED	
#ifdef __USE_XOPEN2K	__USE_XOPEN2K	
#if defined __USE_MISC || defined __USE_XOPEN_EXTENDED	defined __USE_MISC || defined __USE_XOPEN_EXTENDED	
#ifdef __USE_XOPEN2K	__USE_XOPEN2K	
#ifdef __USE_GNU	__USE_GNU	
#if (defined __USE_XOPEN_EXTENDED && !defined __USE_XOPEN2K8) \	(defined __USE_XOPEN_EXTENDED && !defined __USE_XOPEN2K8) \	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_ATFILE	__USE_ATFILE	
#if defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K	defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K	
#ifdef __USE_ATFILE	__USE_ATFILE	
#ifdef __USE_ATFILE	__USE_ATFILE	
#ifdef __USE_POSIX199506	__USE_POSIX199506	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_POSIX2	__USE_POSIX2	
#if defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K	defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K	
#if defined __USE_MISC	defined __USE_MISC	
#if defined __USE_MISC || (defined __USE_XOPEN && !defined __USE_XOPEN2K)	defined __USE_MISC || (defined __USE_XOPEN && !defined __USE_XOPEN2K)	
#ifdef __USE_GNU	__USE_GNU	
#if defined __USE_MISC || defined __USE_XOPEN_EXTENDED	defined __USE_MISC || defined __USE_XOPEN_EXTENDED	
#if defined __USE_MISC || !defined __USE_XOPEN2K	defined __USE_MISC || !defined __USE_XOPEN2K	
#if defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT_NTH	__REDIRECT_NTH	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#if defined __USE_POSIX199309 \	defined __USE_POSIX199309 \	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT_NTH	__REDIRECT_NTH	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#if (defined __USE_XOPEN_EXTENDED && !defined __USE_XOPEN2K) \	(defined __USE_XOPEN_EXTENDED && !defined __USE_XOPEN2K) \	
#ifdef __USE_MISC	__USE_MISC	
#if (defined __USE_MISC || defined __USE_XOPEN_EXTENDED) && !defined F_LOCK	(defined __USE_MISC || defined __USE_XOPEN_EXTENDED) && !defined F_LOCK	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT	__REDIRECT	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifdef __USE_GNU	__USE_GNU	
#if defined __USE_POSIX199309 || defined __USE_UNIX98	defined __USE_POSIX199309 || defined __USE_UNIX98	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_XOPEN	__USE_XOPEN	
#if defined __USE_XOPEN && !defined __USE_XOPEN2K	defined __USE_XOPEN && !defined __USE_XOPEN2K	
#if defined __USE_UNIX98 && !defined __USE_XOPEN2K	defined __USE_UNIX98 && !defined __USE_XOPEN2K	
#ifdef __USE_MISC	__USE_MISC	
#if __USE_FORTIFY_LEVEL > 0 && defined __fortify_function	__USE_FORTIFY_LEVEL > 0 && defined __fortify_function	
#include <cwchar>	<cwchar>	
#include <unistd.h>	<unistd.h>	
#include <stdint.h>	<stdint.h>	
#include <stddef.h>	<stddef.h>	
"#include ""config.h"""	"""config.h"""	
#define FISH_THREAD_LOCAL thread_local	FISH_THREAD_LOCAL	thread_local
#define FISH_FALLBACK_H	FISH_FALLBACK_H	
#ifndef FISH_FALLBACK_H	FISH_FALLBACK_H	
#if HAVE_CX11_THREAD_LOCAL	HAVE_CX11_THREAD_LOCAL	
#elif defined(__GNUC__)	defined(__GNUC__)	
#elif defined(_MSC_VER)	defined(_MSC_VER)	
#ifndef WCHAR_MAX	WCHAR_MAX	
#if defined(NCURSES_VERSION) || defined(__NetBSD__)	defined(NCURSES_VERSION) || defined(__NetBSD__)	
#ifndef HAVE_WINSIZE	HAVE_WINSIZE	
#if defined(TPARM_SOLARIS_KLUDGE)	defined(TPARM_SOLARIS_KLUDGE)	
#ifndef HAVE_WCSDUP	HAVE_WCSDUP	
#ifdef HAVE_STD__WCSDUP	HAVE_STD__WCSDUP	
#ifndef HAVE_WCSCASECMP	HAVE_WCSCASECMP	
#ifdef HAVE_STD__WCSCASECMP	HAVE_STD__WCSCASECMP	
#ifndef HAVE_WCSNCASECMP	HAVE_WCSNCASECMP	
#ifdef HAVE_STD__WCSNCASECMP	HAVE_STD__WCSNCASECMP	
#ifndef HAVE_DIRFD	HAVE_DIRFD	
#ifndef __XOPEN_OR_POSIX	__XOPEN_OR_POSIX	
#ifndef HAVE_WCSNDUP	HAVE_WCSNDUP	
#ifndef HAVE_WCSLCPY	HAVE_WCSLCPY	
#ifndef HAVE_FUTIMES	HAVE_FUTIMES	
#ifndef HAVE_KILLPG	HAVE_KILLPG	
#ifndef HAVE_FLOCK	HAVE_FLOCK	
#if !defined(HAVE_WCSTOD_L) && !defined(__NetBSD__)	!defined(HAVE_WCSTOD_L) && !defined(__NetBSD__)	
#undef assert_perror	assert_perror	
#undef __ASSERT_VOID_CAST	__ASSERT_VOID_CAST	
#undef assert	assert	
#undef _ASSERT_H	_ASSERT_H	
"#include ""common.h"""	"""common.h"""	
#include <vector>	<vector>	
#include <string>	<string>	
"#include ""config.h"""	"""config.h"""	
#define FISH_NULL_TERMINATED_ARRAY_H	FISH_NULL_TERMINATED_ARRAY_H	
#ifndef FISH_NULL_TERMINATED_ARRAY_H	FISH_NULL_TERMINATED_ARRAY_H	
"#include ""null_terminated_array.h"""	"""null_terminated_array.h"""	
"#include ""maybe.h"""	"""maybe.h"""	
"#include ""common.h"""	"""common.h"""	
#include <vector>	<vector>	
#include <unordered_map>	<unordered_map>	
#include <string>	<string>	
#include <memory>	<memory>	
#include <stdint.h>	<stdint.h>	
#include <stddef.h>	<stddef.h>	
#define FISH_ENV_H	FISH_ENV_H	
#ifndef FISH_ENV_H	FISH_ENV_H	
#define _DIRENT_MATCHES_DIRENT64 1	_DIRENT_MATCHES_DIRENT64	1
#define _DIRENT_HAVE_D_TYPE	_DIRENT_HAVE_D_TYPE	
#define _DIRENT_HAVE_D_OFF	_DIRENT_HAVE_D_OFF	
#define _DIRENT_HAVE_D_RECLEN	_DIRENT_HAVE_D_RECLEN	
#undef _DIRENT_HAVE_D_NAMLEN	_DIRENT_HAVE_D_NAMLEN	
#define d_fileno d_ino	d_fileno	d_ino
#ifndef _DIRENT_H	_DIRENT_H	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#if defined __OFF_T_MATCHES_OFF64_T && defined __INO_T_MATCHES_INO64_T	defined __OFF_T_MATCHES_OFF64_T && defined __INO_T_MATCHES_INO64_T	
#define _DIRENT_H 1	_DIRENT_H	1
#define __need_size_t	__need_size_t	
#ifndef _DIRENT_H	_DIRENT_H	
#ifdef __USE_GNU	__USE_GNU	
#include <bits/dirent_ext.h>	<bits/dirent_ext.h>	
#include <stddef.h>	<stddef.h>	
#include <bits/posix1_lim.h>	<bits/posix1_lim.h>	
#include <bits/types.h>	<bits/types.h>	
#include <bits/dirent.h>	<bits/dirent.h>	
#include <bits/types.h>	<bits/types.h>	
#include <features.h>	<features.h>	
#define MAXNAMLEN NAME_MAX	MAXNAMLEN	NAME_MAX
#define DTTOIF(dirtype) ((dirtype) << 12)	DTTOIF(dirtype)	((dirtype) << 12)
#define IFTODT(mode) (((mode) & 0170000) >> 12)	IFTODT(mode)	(((mode) & 0170000) >> 12)
#define DT_WHT DT_WHT	DT_WHT	DT_WHT
#define DT_SOCK DT_SOCK	DT_SOCK	DT_SOCK
#define DT_LNK DT_LNK	DT_LNK	DT_LNK
#define DT_REG DT_REG	DT_REG	DT_REG
#define DT_BLK DT_BLK	DT_BLK	DT_BLK
#define DT_DIR DT_DIR	DT_DIR	DT_DIR
#define DT_CHR DT_CHR	DT_CHR	DT_CHR
#define DT_FIFO DT_FIFO	DT_FIFO	DT_FIFO
#define DT_UNKNOWN DT_UNKNOWN	DT_UNKNOWN	DT_UNKNOWN
#define _D_ALLOC_NAMLEN(d) (((char *) (d) + (d)->d_reclen) - &(d)->d_name[0])	_D_ALLOC_NAMLEN(d)	(((char *) (d) + (d)->d_reclen) - &(d)->d_name[0])
#define _D_EXACT_NAMLEN(d) (strlen ((d)->d_name))	_D_EXACT_NAMLEN(d)	(strlen ((d)->d_name))
#ifndef _DIRENT_H	_DIRENT_H	
#ifdef __USE_XOPEN	__USE_XOPEN	
#ifndef __ino_t_defined	__ino_t_defined	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#if defined __USE_LARGEFILE64 && !defined __ino64_t_defined	defined __USE_LARGEFILE64 && !defined __ino64_t_defined	
#if defined __USE_MISC && !defined d_fileno	defined __USE_MISC && !defined d_fileno	
#ifdef _DIRENT_HAVE_D_NAMLEN	_DIRENT_HAVE_D_NAMLEN	
#ifdef _DIRENT_HAVE_D_RECLEN	_DIRENT_HAVE_D_RECLEN	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT	__REDIRECT	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifdef __USE_POSIX	__USE_POSIX	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT	__REDIRECT	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#if defined __USE_MISC || defined __USE_XOPEN	defined __USE_MISC || defined __USE_XOPEN	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
#if defined __OPTIMIZE__ && defined _DIR_dirfd	defined __OPTIMIZE__ && defined _DIR_dirfd	
#ifdef __USE_MISC	__USE_MISC	
#ifndef MAXNAMLEN	MAXNAMLEN	
#ifdef NAME_MAX	NAME_MAX	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT	__REDIRECT	
#if defined __USE_GNU && defined __USE_LARGEFILE64	defined __USE_GNU && defined __USE_LARGEFILE64	
#ifdef __USE_GNU	__USE_GNU	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT	__REDIRECT	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT	__REDIRECT	
#if defined __USE_GNU && defined __USE_LARGEFILE64	defined __USE_GNU && defined __USE_LARGEFILE64	
#ifdef __USE_MISC	__USE_MISC	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT	__REDIRECT	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifdef __USE_GNU	__USE_GNU	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT	__REDIRECT	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#include <endian.h>	<endian.h>	
#include <bits/types/wint_t.h>	<bits/types/wint_t.h>	
#include <bits/types.h>	<bits/types.h>	
#define _ISwbit(bit) ((bit) < 8 ? (int) ((1UL << (bit)) << 24) : ((bit) < 16 ? (int) ((1UL << (bit)) << 8) : ((bit) < 24 ? (int) ((1UL << (bit)) >> 8) : (int) ((1UL << (bit)) >> 24))))	_ISwbit(bit)	((bit) < 8 ? (int) ((1UL << (bit)) << 24) : ((bit) < 16 ? (int) ((1UL << (bit)) << 8) : ((bit) < 24 ? (int) ((1UL << (bit)) >> 8) : (int) ((1UL << (bit)) >> 24))))
#define _BITS_WCTYPE_WCHAR_H 1	_BITS_WCTYPE_WCHAR_H	1
#ifndef _BITS_WCTYPE_WCHAR_H	_BITS_WCTYPE_WCHAR_H	
#if !defined _WCTYPE_H && !defined _WCHAR_H	!defined _WCTYPE_H && !defined _WCHAR_H	
#ifndef _ISwbit	_ISwbit	
#if __BYTE_ORDER == __BIG_ENDIAN	__BYTE_ORDER == __BIG_ENDIAN	
#ifdef __USE_ISOC99	__USE_ISOC99	
#define _WCTYPE_H 1	_WCTYPE_H	1
#include <bits/types/locale_t.h>	<bits/types/locale_t.h>	
#include <bits/wctype-wchar.h>	<bits/wctype-wchar.h>	
#include <bits/types/wint_t.h>	<bits/types/wint_t.h>	
#include <bits/types.h>	<bits/types.h>	
#include <features.h>	<features.h>	
#ifndef _WCTYPE_H	_WCTYPE_H	
#ifndef WEOF	WEOF	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
"#include ""maybe.h"""	"""maybe.h"""	
"#include ""common.h"""	"""common.h"""	
#include <string>	<string>	
#include <wctype.h>	<wctype.h>	
#include <time.h>	<time.h>	
#include <sys/types.h>	<sys/types.h>	
#include <stdio.h>	<stdio.h>	
#include <stddef.h>	<stddef.h>	
#include <locale.h>	<locale.h>	
#include <dirent.h>	<dirent.h>	
#define HASH_FILE_ID 1	HASH_FILE_ID	1
#define iswgraph fish_iswgraph	iswgraph	fish_iswgraph
#define iswalnum fish_iswalnum	iswalnum	fish_iswalnum
#define iswalpha fish_iswalpha	iswalpha	fish_iswalpha
#define PUA3_END 0x10FFFE	PUA3_END	0x10FFFE
#define PUA3_START 0x100000	PUA3_START	0x100000
#define PUA2_END 0xFFFFE	PUA2_END	0xFFFFE
#define PUA2_START 0xF0000	PUA2_START	0xF0000
#define PUA1_END 0xF900	PUA1_END	0xF900
#define PUA1_START 0xE000	PUA1_START	0xE000
#define FISH_WUTIL_H	FISH_WUTIL_H	
#ifndef FISH_WUTIL_H	FISH_WUTIL_H	
#ifdef HAVE_XLOCALE_H	HAVE_XLOCALE_H	
#ifndef FISH_NO_ISW_WRAPPERS	FISH_NO_ISW_WRAPPERS	
#ifndef HASH_FILE_ID	HASH_FILE_ID	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""env.h"""	"""env.h"""	
"#include ""common.h"""	"""common.h"""	
#include <unordered_set>	<unordered_set>	
#include <unordered_map>	<unordered_map>	
#include <memory>	<memory>	
#include <cassert>	<cassert>	
"#include ""config.h"""	"""config.h"""	
#define FISH_AUTOLOAD_H	FISH_AUTOLOAD_H	
#ifndef FISH_AUTOLOAD_H	FISH_AUTOLOAD_H	
#define _NSIG (__SIGRTMAX + 1)	_NSIG	(__SIGRTMAX + 1)
#define __SIGRTMAX __SIGRTMIN	__SIGRTMAX	__SIGRTMIN
#define __SIGRTMIN 32	__SIGRTMIN	32
#define SIGCLD SIGCHLD	SIGCLD	SIGCHLD
#define SIGIOT SIGABRT	SIGIOT	SIGABRT
#define SIGIO SIGPOLL	SIGIO	SIGPOLL
#define SIGWINCH 28	SIGWINCH	28
#define SIGUSR2 31	SIGUSR2	31
#define SIGUSR1 30	SIGUSR1	30
#define SIGPROF 27	SIGPROF	27
#define SIGVTALRM 26	SIGVTALRM	26
#define SIGXFSZ 25	SIGXFSZ	25
#define SIGXCPU 24	SIGXCPU	24
#define SIGPOLL 23	SIGPOLL	23
#define SIGTTOU 22	SIGTTOU	22
#define SIGTTIN 21	SIGTTIN	21
#define SIGCHLD 20	SIGCHLD	20
#define SIGCONT 19	SIGCONT	19
#define SIGTSTP 18	SIGTSTP	18
#define SIGSTOP 17	SIGSTOP	17
#define SIGURG 16	SIGURG	16
#define SIGALRM 14	SIGALRM	14
#define SIGPIPE 13	SIGPIPE	13
#define SIGSYS 12	SIGSYS	12
#define SIGBUS 10	SIGBUS	10
#define SIGKILL 9	SIGKILL	9
#define SIGTRAP 5	SIGTRAP	5
#define SIGQUIT 3	SIGQUIT	3
#define SIGHUP 1	SIGHUP	1
#define SIGTERM 15	SIGTERM	15
#define SIGSEGV 11	SIGSEGV	11
#define SIGFPE 8	SIGFPE	8
#define SIGABRT 6	SIGABRT	6
#define SIGILL 4	SIGILL	4
#define SIGINT 2	SIGINT	2
#define SIG_HOLD ((__sighandler_t) 2)	SIG_HOLD	((__sighandler_t) 2)
#define SIG_IGN ((__sighandler_t) 1)	SIG_IGN	((__sighandler_t) 1)
#define SIG_DFL ((__sighandler_t) 0)	SIG_DFL	((__sighandler_t) 0)
#define SIG_ERR ((__sighandler_t) -1)	SIG_ERR	((__sighandler_t) -1)
#define _BITS_SIGNUM_GENERIC_H 1	_BITS_SIGNUM_GENERIC_H	1
#ifndef _BITS_SIGNUM_GENERIC_H	_BITS_SIGNUM_GENERIC_H	
#ifndef _SIGNAL_H	_SIGNAL_H	
#ifdef __USE_XOPEN	__USE_XOPEN	
#define _SIGNAL_H	_SIGNAL_H	
#include <bits/signum-generic.h>	<bits/signum-generic.h>	
#define __SIGRTMAX 64	__SIGRTMAX	64
#undef __SIGRTMAX	__SIGRTMAX	
#define SIGSYS 31	SIGSYS	31
#undef SIGSYS	SIGSYS	
#define SIGPOLL 29	SIGPOLL	29
#undef SIGPOLL	SIGPOLL	
#define SIGURG 23	SIGURG	23
#undef SIGURG	SIGURG	
#define SIGTSTP 20	SIGTSTP	20
#undef SIGTSTP	SIGTSTP	
#define SIGSTOP 19	SIGSTOP	19
#undef SIGSTOP	SIGSTOP	
#define SIGCONT 18	SIGCONT	18
#undef SIGCONT	SIGCONT	
#define SIGCHLD 17	SIGCHLD	17
#undef SIGCHLD	SIGCHLD	
#define SIGUSR2 12	SIGUSR2	12
#undef SIGUSR2	SIGUSR2	
#define SIGUSR1 10	SIGUSR1	10
#undef SIGUSR1	SIGUSR1	
#define SIGBUS 7	SIGBUS	7
#undef SIGBUS	SIGBUS	
#define SIGPWR 30	SIGPWR	30
#define SIGSTKFLT 16	SIGSTKFLT	16
#define _BITS_SIGNUM_H 1	_BITS_SIGNUM_H	1
#ifndef _BITS_SIGNUM_H	_BITS_SIGNUM_H	
#ifndef _SIGNAL_H	_SIGNAL_H	
#include <bits/types.h>	<bits/types.h>	
#define __sig_atomic_t_defined 1	__sig_atomic_t_defined	1
#ifndef __sig_atomic_t_defined	__sig_atomic_t_defined	
#define ____sigval_t_defined	____sigval_t_defined	
#ifndef ____sigval_t_defined	____sigval_t_defined	
#ifdef __USE_POSIX199309	__USE_POSIX199309	
#define _BITS_SIGINFO_ARCH_H 1	_BITS_SIGINFO_ARCH_H	1
#ifndef _BITS_SIGINFO_ARCH_H	_BITS_SIGINFO_ARCH_H	
#if defined __x86_64__ && __WORDSIZE == 32	defined __x86_64__ && __WORDSIZE == 32	
#include <bits/siginfo-arch.h>	<bits/siginfo-arch.h>	
#include <bits/types/__sigval_t.h>	<bits/types/__sigval_t.h>	
#include <bits/types.h>	<bits/types.h>	
#include <bits/wordsize.h>	<bits/wordsize.h>	
#define __SI_BAND_TYPE long int	__SI_BAND_TYPE	long int
#define __SI_CLOCK_T __clock_t	__SI_CLOCK_T	__clock_t
#define __SI_MAX_SIZE 128	__SI_MAX_SIZE	128
#define __SI_PAD_SIZE ((__SI_MAX_SIZE / sizeof (int)) - 4)	__SI_PAD_SIZE	((__SI_MAX_SIZE / sizeof (int)) - 4)
#define si_arch _sifields._sigsys._arch	si_arch	_sifields._sigsys._arch
#define si_syscall _sifields._sigsys._syscall	si_syscall	_sifields._sigsys._syscall
#define si_call_addr _sifields._sigsys._call_addr	si_call_addr	_sifields._sigsys._call_addr
#define si_fd _sifields._sigpoll.si_fd	si_fd	_sifields._sigpoll.si_fd
#define si_band _sifields._sigpoll.si_band	si_band	_sifields._sigpoll.si_band
#define si_pkey _sifields._sigfault._bounds._pkey	si_pkey	_sifields._sigfault._bounds._pkey
#define si_upper _sifields._sigfault._bounds._addr_bnd._upper	si_upper	_sifields._sigfault._bounds._addr_bnd._upper
#define si_lower _sifields._sigfault._bounds._addr_bnd._lower	si_lower	_sifields._sigfault._bounds._addr_bnd._lower
#define si_addr_lsb _sifields._sigfault.si_addr_lsb	si_addr_lsb	_sifields._sigfault.si_addr_lsb
#define si_addr _sifields._sigfault.si_addr	si_addr	_sifields._sigfault.si_addr
#define si_ptr _sifields._rt.si_sigval.sival_ptr	si_ptr	_sifields._rt.si_sigval.sival_ptr
#define si_int _sifields._rt.si_sigval.sival_int	si_int	_sifields._rt.si_sigval.sival_int
#define si_value _sifields._rt.si_sigval	si_value	_sifields._rt.si_sigval
#define si_stime _sifields._sigchld.si_stime	si_stime	_sifields._sigchld.si_stime
#define si_utime _sifields._sigchld.si_utime	si_utime	_sifields._sigchld.si_utime
#define si_status _sifields._sigchld.si_status	si_status	_sifields._sigchld.si_status
#define si_overrun _sifields._timer.si_overrun	si_overrun	_sifields._timer.si_overrun
#define si_timerid _sifields._timer.si_tid	si_timerid	_sifields._timer.si_tid
#define si_uid _sifields._kill.si_uid	si_uid	_sifields._kill.si_uid
#define si_pid _sifields._kill.si_pid	si_pid	_sifields._kill.si_pid
#define __SI_SIGFAULT_ADDL	__SI_SIGFAULT_ADDL	
#define __SI_HAVE_SIGSYS 1	__SI_HAVE_SIGSYS	1
#define __SI_ERRNO_THEN_CODE 1	__SI_ERRNO_THEN_CODE	1
#define __SI_ALIGNMENT	__SI_ALIGNMENT	
#define __siginfo_t_defined 1	__siginfo_t_defined	1
#ifndef __siginfo_t_defined	__siginfo_t_defined	
#if __WORDSIZE == 64	__WORDSIZE == 64	
#ifndef __SI_ALIGNMENT	__SI_ALIGNMENT	
#ifndef __SI_BAND_TYPE	__SI_BAND_TYPE	
#ifndef __SI_CLOCK_T	__SI_CLOCK_T	
#ifndef __SI_ERRNO_THEN_CODE	__SI_ERRNO_THEN_CODE	
#ifndef __SI_HAVE_SIGSYS	__SI_HAVE_SIGSYS	
#ifndef __SI_SIGFAULT_ADDL	__SI_SIGFAULT_ADDL	
#if __SI_ERRNO_THEN_CODE	__SI_ERRNO_THEN_CODE	
#if __WORDSIZE == 64	__WORDSIZE == 64	
#if __SI_HAVE_SIGSYS	__SI_HAVE_SIGSYS	
#if __SI_HAVE_SIGSYS	__SI_HAVE_SIGSYS	
#define _BITS_SIGINFO_CONSTS_ARCH_H 1	_BITS_SIGINFO_CONSTS_ARCH_H	1
#ifndef _BITS_SIGINFO_CONSTS_ARCH_H	_BITS_SIGINFO_CONSTS_ARCH_H	
#include <bits/siginfo-consts-arch.h>	<bits/siginfo-consts-arch.h>	
#include <bits/siginfo-arch.h>	<bits/siginfo-arch.h>	
#define POLL_HUP POLL_HUP	POLL_HUP	POLL_HUP
#define POLL_PRI POLL_PRI	POLL_PRI	POLL_PRI
#define POLL_ERR POLL_ERR	POLL_ERR	POLL_ERR
#define POLL_MSG POLL_MSG	POLL_MSG	POLL_MSG
#define POLL_OUT POLL_OUT	POLL_OUT	POLL_OUT
#define POLL_IN POLL_IN	POLL_IN	POLL_IN
#define CLD_CONTINUED CLD_CONTINUED	CLD_CONTINUED	CLD_CONTINUED
#define CLD_STOPPED CLD_STOPPED	CLD_STOPPED	CLD_STOPPED
#define CLD_TRAPPED CLD_TRAPPED	CLD_TRAPPED	CLD_TRAPPED
#define CLD_DUMPED CLD_DUMPED	CLD_DUMPED	CLD_DUMPED
#define CLD_KILLED CLD_KILLED	CLD_KILLED	CLD_KILLED
#define CLD_EXITED CLD_EXITED	CLD_EXITED	CLD_EXITED
#define TRAP_UNK TRAP_UNK	TRAP_UNK	TRAP_UNK
#define TRAP_HWBKPT TRAP_HWBKPT	TRAP_HWBKPT	TRAP_HWBKPT
#define TRAP_BRANCH TRAP_BRANCH	TRAP_BRANCH	TRAP_BRANCH
#define TRAP_TRACE TRAP_TRACE	TRAP_TRACE	TRAP_TRACE
#define TRAP_BRKPT TRAP_BRKPT	TRAP_BRKPT	TRAP_BRKPT
#define BUS_MCEERR_AO BUS_MCEERR_AO	BUS_MCEERR_AO	BUS_MCEERR_AO
#define BUS_MCEERR_AR BUS_MCEERR_AR	BUS_MCEERR_AR	BUS_MCEERR_AR
#define BUS_OBJERR BUS_OBJERR	BUS_OBJERR	BUS_OBJERR
#define BUS_ADRERR BUS_ADRERR	BUS_ADRERR	BUS_ADRERR
#define BUS_ADRALN BUS_ADRALN	BUS_ADRALN	BUS_ADRALN
#define SEGV_ADIPERR SEGV_ADIPERR	SEGV_ADIPERR	SEGV_ADIPERR
#define SEGV_ADIDERR SEGV_ADIDERR	SEGV_ADIDERR	SEGV_ADIDERR
#define SEGV_ACCADI SEGV_ACCADI	SEGV_ACCADI	SEGV_ACCADI
#define SEGV_PKUERR SEGV_PKUERR	SEGV_PKUERR	SEGV_PKUERR
#define SEGV_BNDERR SEGV_BNDERR	SEGV_BNDERR	SEGV_BNDERR
#define SEGV_ACCERR SEGV_ACCERR	SEGV_ACCERR	SEGV_ACCERR
#define SEGV_MAPERR SEGV_MAPERR	SEGV_MAPERR	SEGV_MAPERR
#define FPE_CONDTRAP FPE_CONDTRAP	FPE_CONDTRAP	FPE_CONDTRAP
#define FPE_FLTUNK FPE_FLTUNK	FPE_FLTUNK	FPE_FLTUNK
#define FPE_FLTSUB FPE_FLTSUB	FPE_FLTSUB	FPE_FLTSUB
#define FPE_FLTINV FPE_FLTINV	FPE_FLTINV	FPE_FLTINV
#define FPE_FLTRES FPE_FLTRES	FPE_FLTRES	FPE_FLTRES
#define FPE_FLTUND FPE_FLTUND	FPE_FLTUND	FPE_FLTUND
#define FPE_FLTOVF FPE_FLTOVF	FPE_FLTOVF	FPE_FLTOVF
#define FPE_FLTDIV FPE_FLTDIV	FPE_FLTDIV	FPE_FLTDIV
#define FPE_INTOVF FPE_INTOVF	FPE_INTOVF	FPE_INTOVF
#define FPE_INTDIV FPE_INTDIV	FPE_INTDIV	FPE_INTDIV
#define ILL_BADIADDR ILL_BADIADDR	ILL_BADIADDR	ILL_BADIADDR
#define ILL_BADSTK ILL_BADSTK	ILL_BADSTK	ILL_BADSTK
#define ILL_COPROC ILL_COPROC	ILL_COPROC	ILL_COPROC
#define ILL_PRVREG ILL_PRVREG	ILL_PRVREG	ILL_PRVREG
#define ILL_PRVOPC ILL_PRVOPC	ILL_PRVOPC	ILL_PRVOPC
#define ILL_ILLTRP ILL_ILLTRP	ILL_ILLTRP	ILL_ILLTRP
#define ILL_ILLADR ILL_ILLADR	ILL_ILLADR	ILL_ILLADR
#define ILL_ILLOPN ILL_ILLOPN	ILL_ILLOPN	ILL_ILLOPN
#define ILL_ILLOPC ILL_ILLOPC	ILL_ILLOPC	ILL_ILLOPC
#define SI_KERNEL SI_KERNEL	SI_KERNEL	SI_KERNEL
#define SI_USER SI_USER	SI_USER	SI_USER
#define SI_QUEUE SI_QUEUE	SI_QUEUE	SI_QUEUE
#define SI_ASYNCIO SI_ASYNCIO	SI_ASYNCIO	SI_ASYNCIO
#define SI_TIMER SI_TIMER	SI_TIMER	SI_TIMER
#define SI_MESGQ SI_MESGQ	SI_MESGQ	SI_MESGQ
#define SI_ASYNCIO SI_ASYNCIO	SI_ASYNCIO	SI_ASYNCIO
#define SI_SIGIO SI_SIGIO	SI_SIGIO	SI_SIGIO
#define SI_TKILL SI_TKILL	SI_TKILL	SI_TKILL
#define SI_DETHREAD SI_DETHREAD	SI_DETHREAD	SI_DETHREAD
#define SI_ASYNCNL SI_ASYNCNL	SI_ASYNCNL	SI_ASYNCNL
#define __SI_ASYNCIO_AFTER_SIGIO 1	__SI_ASYNCIO_AFTER_SIGIO	1
#define _BITS_SIGINFO_CONSTS_H 1	_BITS_SIGINFO_CONSTS_H	1
#ifndef _BITS_SIGINFO_CONSTS_H	_BITS_SIGINFO_CONSTS_H	
#ifndef _SIGNAL_H	_SIGNAL_H	
#ifndef __SI_ASYNCIO_AFTER_SIGIO	__SI_ASYNCIO_AFTER_SIGIO	
#if __SI_ASYNCIO_AFTER_SIGIO	__SI_ASYNCIO_AFTER_SIGIO	
#if defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	
#ifdef __USE_XOPEN_EXTENDED	__USE_XOPEN_EXTENDED	
#if defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	
#ifdef __USE_GNU	__USE_GNU	
#include <bits/types/__sigval_t.h>	<bits/types/__sigval_t.h>	
#define __sigval_t_defined	__sigval_t_defined	
#ifndef __sigval_t_defined	__sigval_t_defined	
#ifndef __USE_POSIX199309	__USE_POSIX199309	
#include <bits/types/__sigval_t.h>	<bits/types/__sigval_t.h>	
#include <bits/types.h>	<bits/types.h>	
#include <bits/wordsize.h>	<bits/wordsize.h>	
#define __SIGEV_MAX_SIZE 64	__SIGEV_MAX_SIZE	64
#define __SIGEV_PAD_SIZE ((__SIGEV_MAX_SIZE / sizeof (int)) - 4)	__SIGEV_PAD_SIZE	((__SIGEV_MAX_SIZE / sizeof (int)) - 4)
#define sigev_notify_attributes _sigev_un._sigev_thread._attribute	sigev_notify_attributes	_sigev_un._sigev_thread._attribute
#define sigev_notify_function _sigev_un._sigev_thread._function	sigev_notify_function	_sigev_un._sigev_thread._function
#define __sigevent_t_defined 1	__sigevent_t_defined	1
#ifndef __sigevent_t_defined	__sigevent_t_defined	
#if __WORDSIZE == 64	__WORDSIZE == 64	
#ifndef __have_pthread_attr_t	__have_pthread_attr_t	
#define SIGEV_THREAD_ID SIGEV_THREAD_ID	SIGEV_THREAD_ID	SIGEV_THREAD_ID
#define SIGEV_THREAD SIGEV_THREAD	SIGEV_THREAD	SIGEV_THREAD
#define SIGEV_NONE SIGEV_NONE	SIGEV_NONE	SIGEV_NONE
#define SIGEV_SIGNAL SIGEV_SIGNAL	SIGEV_SIGNAL	SIGEV_SIGNAL
#define _BITS_SIGEVENT_CONSTS_H 1	_BITS_SIGEVENT_CONSTS_H	1
#ifndef _BITS_SIGEVENT_CONSTS_H	_BITS_SIGEVENT_CONSTS_H	
#if !defined _SIGNAL_H && !defined _AIO_H	!defined _SIGNAL_H && !defined _AIO_H	
#define SIG_SETMASK 2	SIG_SETMASK	2
#define SIG_UNBLOCK 1	SIG_UNBLOCK	1
#define SIG_BLOCK 0	SIG_BLOCK	0
#define SA_STACK SA_ONSTACK	SA_STACK	SA_ONSTACK
#define SA_ONESHOT SA_RESETHAND	SA_ONESHOT	SA_RESETHAND
#define SA_NOMASK SA_NODEFER	SA_NOMASK	SA_NODEFER
#define SA_INTERRUPT 0x20000000	SA_INTERRUPT	0x20000000
#define SA_RESETHAND 0x80000000	SA_RESETHAND	0x80000000
#define SA_NODEFER 0x40000000	SA_NODEFER	0x40000000
#define SA_RESTART 0x10000000	SA_RESTART	0x10000000
#define SA_ONSTACK 0x08000000	SA_ONSTACK	0x08000000
#define SA_SIGINFO 4	SA_SIGINFO	4
#define SA_NOCLDWAIT 2	SA_NOCLDWAIT	2
#define SA_NOCLDSTOP 1	SA_NOCLDSTOP	1
#define sa_sigaction __sigaction_handler.sa_sigaction	sa_sigaction	__sigaction_handler.sa_sigaction
#define sa_handler __sigaction_handler.sa_handler	sa_handler	__sigaction_handler.sa_handler
#define _BITS_SIGACTION_H 1	_BITS_SIGACTION_H	1
#ifndef _BITS_SIGACTION_H	_BITS_SIGACTION_H	
#ifndef _SIGNAL_H	_SIGNAL_H	
#if defined __USE_POSIX199309 || defined __USE_XOPEN_EXTENDED	defined __USE_POSIX199309 || defined __USE_XOPEN_EXTENDED	
#if defined __USE_XOPEN_EXTENDED || defined __USE_MISC	defined __USE_XOPEN_EXTENDED || defined __USE_MISC	
#if defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	
#ifdef __USE_MISC	__USE_MISC	
#include <bits/types.h>	<bits/types.h>	
#define FP_XSTATE_MAGIC2_SIZE sizeof (FP_XSTATE_MAGIC2)	FP_XSTATE_MAGIC2_SIZE	sizeof (FP_XSTATE_MAGIC2)
#define FP_XSTATE_MAGIC2 0x46505845U	FP_XSTATE_MAGIC2	0x46505845U
#define FP_XSTATE_MAGIC1 0x46505853U	FP_XSTATE_MAGIC1	0x46505853U
#define _BITS_SIGCONTEXT_H 1	_BITS_SIGCONTEXT_H	1
#ifndef _BITS_SIGCONTEXT_H	_BITS_SIGCONTEXT_H	
#if !defined _SIGNAL_H && !defined _SYS_UCONTEXT_H	!defined _SIGNAL_H && !defined _SYS_UCONTEXT_H	
#ifndef __x86_64__	__x86_64__	
#ifndef sigcontext_struct	sigcontext_struct	
#define __need_size_t	__need_size_t	
#define __need_size_t	__need_size_t	
#include <stddef.h>	<stddef.h>	
#define __stack_t_defined 1	__stack_t_defined	1
#ifndef __stack_t_defined	__stack_t_defined	
#include <bits/types/stack_t.h>	<bits/types/stack_t.h>	
#include <bits/types/sigset_t.h>	<bits/types/sigset_t.h>	
#include <bits/types.h>	<bits/types.h>	
#include <features.h>	<features.h>	
#define __NGREG 23	__NGREG	23
#define __ctx(fld) fld	__ctx(fld)	fld
#undef __ctx	__ctx	
#define REG_CR2 REG_CR2	REG_CR2	REG_CR2
#define REG_OLDMASK REG_OLDMASK	REG_OLDMASK	REG_OLDMASK
#define REG_TRAPNO REG_TRAPNO	REG_TRAPNO	REG_TRAPNO
#define REG_ERR REG_ERR	REG_ERR	REG_ERR
#define REG_CSGSFS REG_CSGSFS	REG_CSGSFS	REG_CSGSFS
#define REG_EFL REG_EFL	REG_EFL	REG_EFL
#define REG_RIP REG_RIP	REG_RIP	REG_RIP
#define REG_RSP REG_RSP	REG_RSP	REG_RSP
#define REG_RCX REG_RCX	REG_RCX	REG_RCX
#define REG_RAX REG_RAX	REG_RAX	REG_RAX
#define REG_RDX REG_RDX	REG_RDX	REG_RDX
#define REG_RBX REG_RBX	REG_RBX	REG_RBX
#define REG_RBP REG_RBP	REG_RBP	REG_RBP
#define REG_RSI REG_RSI	REG_RSI	REG_RSI
#define REG_RDI REG_RDI	REG_RDI	REG_RDI
#define REG_R15 REG_R15	REG_R15	REG_R15
#define REG_R14 REG_R14	REG_R14	REG_R14
#define REG_R13 REG_R13	REG_R13	REG_R13
#define REG_R12 REG_R12	REG_R12	REG_R12
#define REG_R11 REG_R11	REG_R11	REG_R11
#define REG_R10 REG_R10	REG_R10	REG_R10
#define REG_R9 REG_R9	REG_R9	REG_R9
#define REG_R8 REG_R8	REG_R8	REG_R8
#define NGREG __NGREG	NGREG	__NGREG
#define _SYS_UCONTEXT_H 1	_SYS_UCONTEXT_H	1
#ifndef _SYS_UCONTEXT_H	_SYS_UCONTEXT_H	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __x86_64__	__x86_64__	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_GNU	__USE_GNU	
#define SIGSTKSZ 8192	SIGSTKSZ	8192
#define MINSIGSTKSZ 2048	MINSIGSTKSZ	2048
#define _BITS_SIGSTACK_H 1	_BITS_SIGSTACK_H	1
#ifndef _BITS_SIGSTACK_H	_BITS_SIGSTACK_H	
#if !defined _SIGNAL_H && !defined _SYS_UCONTEXT_H	!defined _SIGNAL_H && !defined _SYS_UCONTEXT_H	
#define SS_DISABLE SS_DISABLE	SS_DISABLE	SS_DISABLE
#define SS_ONSTACK SS_ONSTACK	SS_ONSTACK	SS_ONSTACK
#define _BITS_SS_FLAGS_H 1	_BITS_SS_FLAGS_H	1
#ifndef _BITS_SS_FLAGS_H	_BITS_SS_FLAGS_H	
#if !defined _SIGNAL_H && !defined _SYS_UCONTEXT_H	!defined _SIGNAL_H && !defined _SYS_UCONTEXT_H	
#define __sigstack_defined 1	__sigstack_defined	1
#ifndef __sigstack_defined	__sigstack_defined	
#include <bits/types/__sigset_t.h>	<bits/types/__sigset_t.h>	
#define _BITS_SIGTHREAD_H 1	_BITS_SIGTHREAD_H	1
#ifndef _BITS_SIGTHREAD_H	_BITS_SIGTHREAD_H	
#if !defined _SIGNAL_H && !defined _PTHREAD_H	!defined _SIGNAL_H && !defined _PTHREAD_H	
#ifdef __USE_GNU	__USE_GNU	
#ifndef _SIGNAL_H	_SIGNAL_H	
#ifdef __USE_GNU	__USE_GNU	
#include <bits/signal_ext.h>	<bits/signal_ext.h>	
#include <bits/sigthread.h>	<bits/sigthread.h>	
#include <bits/pthreadtypes.h>	<bits/pthreadtypes.h>	
#include <bits/types/struct_sigstack.h>	<bits/types/struct_sigstack.h>	
#include <bits/ss_flags.h>	<bits/ss_flags.h>	
#include <bits/sigstack.h>	<bits/sigstack.h>	
#include <sys/ucontext.h>	<sys/ucontext.h>	
#include <bits/types/stack_t.h>	<bits/types/stack_t.h>	
#include <stddef.h>	<stddef.h>	
#include <bits/sigcontext.h>	<bits/sigcontext.h>	
#include <bits/sigaction.h>	<bits/sigaction.h>	
#include <bits/sigevent-consts.h>	<bits/sigevent-consts.h>	
#include <bits/types/sigevent_t.h>	<bits/types/sigevent_t.h>	
#include <bits/types/sigval_t.h>	<bits/types/sigval_t.h>	
#include <bits/siginfo-consts.h>	<bits/siginfo-consts.h>	
#include <bits/types/siginfo_t.h>	<bits/types/siginfo_t.h>	
#include <bits/types/struct_timespec.h>	<bits/types/struct_timespec.h>	
#include <bits/types/sigset_t.h>	<bits/types/sigset_t.h>	
#include <bits/types/sig_atomic_t.h>	<bits/types/sig_atomic_t.h>	
#include <bits/signum.h>	<bits/signum.h>	
#include <bits/types.h>	<bits/types.h>	
#include <features.h>	<features.h>	
#define SIGRTMAX (__libc_current_sigrtmax ())	SIGRTMAX	(__libc_current_sigrtmax ())
#define SIGRTMIN (__libc_current_sigrtmin ())	SIGRTMIN	(__libc_current_sigrtmin ())
#define NSIG _NSIG	NSIG	_NSIG
#define sigmask(sig) ((int)(1u << ((sig) - 1)))	sigmask(sig)	((int)(1u << ((sig) - 1)))
#ifndef _SIGNAL_H	_SIGNAL_H	
#if defined __USE_POSIX	defined __USE_POSIX	
#if defined __USE_XOPEN || defined __USE_XOPEN2K	defined __USE_XOPEN || defined __USE_XOPEN2K	
#ifndef __pid_t_defined	__pid_t_defined	
#ifdef __USE_XOPEN	__USE_XOPEN	
#ifndef __uid_t_defined	__uid_t_defined	
#ifdef __USE_POSIX199309	__USE_POSIX199309	
#if defined __USE_POSIX199309 || defined __USE_XOPEN_EXTENDED	defined __USE_POSIX199309 || defined __USE_XOPEN_EXTENDED	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_POSIX199309	__USE_POSIX199309	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __REDIRECT_NTH	__REDIRECT_NTH	
#if defined __USE_XOPEN_EXTENDED && !defined __USE_XOPEN2K8	defined __USE_XOPEN_EXTENDED && !defined __USE_XOPEN2K8	
#ifdef __USE_POSIX	__USE_POSIX	
#if defined __USE_MISC || defined __USE_XOPEN_EXTENDED	defined __USE_MISC || defined __USE_XOPEN_EXTENDED	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
#ifdef __USE_XOPEN_EXTENDED	__USE_XOPEN_EXTENDED	
#ifdef __GNUC__	__GNUC__	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_POSIX	__USE_POSIX	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_POSIX199506	__USE_POSIX199506	
#ifdef __USE_POSIX199309	__USE_POSIX199309	
#ifdef __USE_MISC	__USE_MISC	
#if defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	
#if defined __USE_XOPEN || defined __USE_XOPEN2K8	defined __USE_XOPEN || defined __USE_XOPEN2K8	
#if defined __USE_XOPEN_EXTENDED || defined __USE_MISC	defined __USE_XOPEN_EXTENDED || defined __USE_MISC	
"#if ((defined __USE_XOPEN_EXTENDED && !defined __USE_XOPEN2K8)	\"	"((defined __USE_XOPEN_EXTENDED && !defined __USE_XOPEN2K8)	\"	
"#if ((defined __USE_XOPEN_EXTENDED && !defined __USE_XOPEN2K)	\"	"((defined __USE_XOPEN_EXTENDED && !defined __USE_XOPEN2K)	\"	
#ifdef __USE_XOPEN_EXTENDED	__USE_XOPEN_EXTENDED	
#if defined __USE_POSIX199506 || defined __USE_UNIX98	defined __USE_POSIX199506 || defined __USE_UNIX98	
#include <sys/select.h>	<sys/select.h>	
#include <bits/types/struct_timeval.h>	<bits/types/struct_timeval.h>	
#include <bits/types/time_t.h>	<bits/types/time_t.h>	
#include <bits/types.h>	<bits/types.h>	
#include <features.h>	<features.h>	
#define timersub(a,b,result) do { (result)->tv_sec = (a)->tv_sec - (b)->tv_sec; (result)->tv_usec = (a)->tv_usec - (b)->tv_usec; if ((result)->tv_usec < 0) { --(result)->tv_sec; (result)->tv_usec += 1000000; } } while (0)	timersub(a,b,result)	do { (result)->tv_sec = (a)->tv_sec - (b)->tv_sec; (result)->tv_usec = (a)->tv_usec - (b)->tv_usec; if ((result)->tv_usec < 0) { --(result)->tv_sec; (result)->tv_usec += 1000000; } } while (0)
#define timeradd(a,b,result) do { (result)->tv_sec = (a)->tv_sec + (b)->tv_sec; (result)->tv_usec = (a)->tv_usec + (b)->tv_usec; if ((result)->tv_usec >= 1000000) { ++(result)->tv_sec; (result)->tv_usec -= 1000000; } } while (0)	timeradd(a,b,result)	do { (result)->tv_sec = (a)->tv_sec + (b)->tv_sec; (result)->tv_usec = (a)->tv_usec + (b)->tv_usec; if ((result)->tv_usec >= 1000000) { ++(result)->tv_sec; (result)->tv_usec -= 1000000; } } while (0)
#define timercmp(a,b,CMP) (((a)->tv_sec == (b)->tv_sec) ? ((a)->tv_usec CMP (b)->tv_usec) : ((a)->tv_sec CMP (b)->tv_sec))	timercmp(a,b,CMP)	(((a)->tv_sec == (b)->tv_sec) ? ((a)->tv_usec CMP (b)->tv_usec) : ((a)->tv_sec CMP (b)->tv_sec))
#define timerclear(tvp) ((tvp)->tv_sec = (tvp)->tv_usec = 0)	timerclear(tvp)	((tvp)->tv_sec = (tvp)->tv_usec = 0)
#define timerisset(tvp) ((tvp)->tv_sec || (tvp)->tv_usec)	timerisset(tvp)	((tvp)->tv_sec || (tvp)->tv_usec)
#define ITIMER_PROF ITIMER_PROF	ITIMER_PROF	ITIMER_PROF
#define ITIMER_VIRTUAL ITIMER_VIRTUAL	ITIMER_VIRTUAL	ITIMER_VIRTUAL
#define ITIMER_REAL ITIMER_REAL	ITIMER_REAL	ITIMER_REAL
#define TIMESPEC_TO_TIMEVAL(tv,ts) { (tv)->tv_sec = (ts)->tv_sec; (tv)->tv_usec = (ts)->tv_nsec / 1000; }	TIMESPEC_TO_TIMEVAL(tv,ts)	{ (tv)->tv_sec = (ts)->tv_sec; (tv)->tv_usec = (ts)->tv_nsec / 1000; }
#define TIMEVAL_TO_TIMESPEC(tv,ts) { (ts)->tv_sec = (tv)->tv_sec; (ts)->tv_nsec = (tv)->tv_usec * 1000; }	TIMEVAL_TO_TIMESPEC(tv,ts)	{ (ts)->tv_sec = (tv)->tv_sec; (ts)->tv_nsec = (tv)->tv_usec * 1000; }
#define _SYS_TIME_H 1	_SYS_TIME_H	1
#ifndef _SYS_TIME_H	_SYS_TIME_H	
#ifndef __suseconds_t_defined	__suseconds_t_defined	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_MISC	__USE_MISC	
#if defined __USE_GNU && !defined __cplusplus	defined __USE_GNU && !defined __cplusplus	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_MISC	__USE_MISC	
#include <bits/types/siginfo_t.h>	<bits/types/siginfo_t.h>	
#include <signal.h>	<signal.h>	
#include <bits/types.h>	<bits/types.h>	
#include <features.h>	<features.h>	
#define WAIT_MYPGRP 0	WAIT_MYPGRP	0
#define WAIT_ANY (-1)	WAIT_ANY	(-1)
#define W_STOPCODE(sig) __W_STOPCODE (sig)	W_STOPCODE(sig)	__W_STOPCODE (sig)
#define W_EXITCODE(ret,sig) __W_EXITCODE (ret, sig)	W_EXITCODE(ret,sig)	__W_EXITCODE (ret, sig)
#define WCOREDUMP(status) __WCOREDUMP (status)	WCOREDUMP(status)	__WCOREDUMP (status)
#define WCOREFLAG __WCOREFLAG	WCOREFLAG	__WCOREFLAG
#define _SYS_WAIT_H 1	_SYS_WAIT_H	1
#ifndef _SYS_WAIT_H	_SYS_WAIT_H	
#ifndef __pid_t_defined	__pid_t_defined	
#if defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	
#if defined __USE_XOPEN_EXTENDED && !defined __USE_XOPEN2K8	defined __USE_XOPEN_EXTENDED && !defined __USE_XOPEN2K8	
#if !defined _STDLIB_H || (!defined __USE_XOPEN && !defined __USE_XOPEN2K8)	!defined _STDLIB_H || (!defined __USE_XOPEN && !defined __USE_XOPEN2K8)	
#ifdef __WIFCONTINUED	__WIFCONTINUED	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_MISC	__USE_MISC	
#if defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	
#ifndef __id_t_defined	__id_t_defined	
#if defined __USE_MISC \	defined __USE_MISC \	
#ifdef __USE_MISC	__USE_MISC	
#define NCCS 32	NCCS	32
#define _HAVE_STRUCT_TERMIOS_C_OSPEED 1	_HAVE_STRUCT_TERMIOS_C_OSPEED	1
#define _HAVE_STRUCT_TERMIOS_C_ISPEED 1	_HAVE_STRUCT_TERMIOS_C_ISPEED	1
#ifndef _TERMIOS_H	_TERMIOS_H	
#define _TERMIOS_H 1	_TERMIOS_H	1
#define VEOL2 16	VEOL2	16
#define VLNEXT 15	VLNEXT	15
#define VWERASE 14	VWERASE	14
#define VDISCARD 13	VDISCARD	13
#define VREPRINT 12	VREPRINT	12
#define VEOL 11	VEOL	11
#define VSUSP 10	VSUSP	10
#define VSTOP 9	VSTOP	9
#define VSTART 8	VSTART	8
#define VSWTC 7	VSWTC	7
#define VMIN 6	VMIN	6
#define VTIME 5	VTIME	5
#define VEOF 4	VEOF	4
#define VKILL 3	VKILL	3
#define VERASE 2	VERASE	2
#define VQUIT 1	VQUIT	1
#define VINTR 0	VINTR	0
#ifndef _TERMIOS_H	_TERMIOS_H	
#define IUTF8 0040000	IUTF8	0040000
#define IMAXBEL 0020000	IMAXBEL	0020000
#define IXOFF 0010000	IXOFF	0010000
#define IXANY 0004000	IXANY	0004000
#define IXON 0002000	IXON	0002000
#define IUCLC 0001000	IUCLC	0001000
#define ICRNL 0000400	ICRNL	0000400
#define IGNCR 0000200	IGNCR	0000200
#define INLCR 0000100	INLCR	0000100
#define ISTRIP 0000040	ISTRIP	0000040
#define INPCK 0000020	INPCK	0000020
#define PARMRK 0000010	PARMRK	0000010
#define IGNPAR 0000004	IGNPAR	0000004
#define BRKINT 0000002	BRKINT	0000002
#define IGNBRK 0000001	IGNBRK	0000001
#ifndef _TERMIOS_H	_TERMIOS_H	
#define XTABS 0014000	XTABS	0014000
#define VT1 0040000	VT1	0040000
#define VT0 0000000	VT0	0000000
#define VTDLY 0040000	VTDLY	0040000
#define FF1 0100000	FF1	0100000
#define FF0 0000000	FF0	0000000
#define FFDLY 0100000	FFDLY	0100000
#define BS1 0020000	BS1	0020000
#define BS0 0000000	BS0	0000000
#define BSDLY 0020000	BSDLY	0020000
#define TAB3 0014000	TAB3	0014000
#define TAB2 0010000	TAB2	0010000
#define TAB1 0004000	TAB1	0004000
#define TAB0 0000000	TAB0	0000000
#define TABDLY 0014000	TABDLY	0014000
#define CR3 0003000	CR3	0003000
#define CR2 0002000	CR2	0002000
#define CR1 0001000	CR1	0001000
#define CR0 0000000	CR0	0000000
#define CRDLY 0003000	CRDLY	0003000
#define NL1 0000400	NL1	0000400
#define NL0 0000000	NL0	0000000
#define NLDLY 0000400	NLDLY	0000400
#define OFDEL 0000200	OFDEL	0000200
#define OFILL 0000100	OFILL	0000100
#define ONLRET 0000040	ONLRET	0000040
#define ONOCR 0000020	ONOCR	0000020
#define OCRNL 0000010	OCRNL	0000010
#define ONLCR 0000004	ONLCR	0000004
#define OLCUC 0000002	OLCUC	0000002
#define OPOST 0000001	OPOST	0000001
#ifndef _TERMIOS_H	_TERMIOS_H	
#if defined __USE_MISC || defined __USE_XOPEN	defined __USE_MISC || defined __USE_XOPEN	
#ifdef __USE_MISC	__USE_MISC	
#define __MAX_BAUD B4000000	__MAX_BAUD	B4000000
#define B4000000 0010017	B4000000	0010017
#define B3500000 0010016	B3500000	0010016
#define B3000000 0010015	B3000000	0010015
#define B2500000 0010014	B2500000	0010014
#define B2000000 0010013	B2000000	0010013
#define B1500000 0010012	B1500000	0010012
#define B1152000 0010011	B1152000	0010011
#define B1000000 0010010	B1000000	0010010
#define B921600 0010007	B921600	0010007
#define B576000 0010006	B576000	0010006
#define B500000 0010005	B500000	0010005
#define B460800 0010004	B460800	0010004
#define B230400 0010003	B230400	0010003
#define B115200 0010002	B115200	0010002
#define B57600 0010001	B57600	0010001
#define CRTSCTS 020000000000	CRTSCTS	020000000000
#define CMSPAR 010000000000	CMSPAR	010000000000
#define CIBAUD 002003600000	CIBAUD	002003600000
#define CBAUDEX 000000010000	CBAUDEX	000000010000
#define CBAUD 000000010017	CBAUD	000000010017
#ifndef _TERMIOS_H	_TERMIOS_H	
#ifdef __USE_MISC	__USE_MISC	
#define CLOCAL 0004000	CLOCAL	0004000
#define HUPCL 0002000	HUPCL	0002000
#define PARODD 0001000	PARODD	0001000
#define PARENB 0000400	PARENB	0000400
#define CREAD 0000200	CREAD	0000200
#define CSTOPB 0000100	CSTOPB	0000100
#define CS8 0000060	CS8	0000060
#define CS7 0000040	CS7	0000040
#define CS6 0000020	CS6	0000020
#define CS5 0000000	CS5	0000000
#define CSIZE 0000060	CSIZE	0000060
#ifndef _TERMIOS_H	_TERMIOS_H	
#define EXTPROC 0200000	EXTPROC	0200000
#define IEXTEN 0100000	IEXTEN	0100000
#define PENDIN 0040000	PENDIN	0040000
#define FLUSHO 0010000	FLUSHO	0010000
#define ECHOKE 0004000	ECHOKE	0004000
#define ECHOPRT 0002000	ECHOPRT	0002000
#define ECHOCTL 0001000	ECHOCTL	0001000
#define TOSTOP 0000400	TOSTOP	0000400
#define NOFLSH 0000200	NOFLSH	0000200
#define ECHONL 0000100	ECHONL	0000100
#define ECHOK 0000040	ECHOK	0000040
#define ECHOE 0000020	ECHOE	0000020
#define ECHO 0000010	ECHO	0000010
#define XCASE 0000004	XCASE	0000004
#define ICANON 0000002	ICANON	0000002
#define ISIG 0000001	ISIG	0000001
#ifndef _TERMIOS_H	_TERMIOS_H	
#if defined __USE_MISC || (defined __USE_XOPEN && !defined __USE_XOPEN2K)	defined __USE_MISC || (defined __USE_XOPEN && !defined __USE_XOPEN2K)	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_MISC	__USE_MISC	
#define TCSAFLUSH 2	TCSAFLUSH	2
#define TCSADRAIN 1	TCSADRAIN	1
#define TCSANOW 0	TCSANOW	0
#ifndef _TERMIOS_H	_TERMIOS_H	
#ifndef _TERMIOS_H	_TERMIOS_H	
#include <bits/termios-misc.h>	<bits/termios-misc.h>	
#include <bits/termios-tcflow.h>	<bits/termios-tcflow.h>	
#include <bits/termios-c_lflag.h>	<bits/termios-c_lflag.h>	
#include <bits/termios-c_cflag.h>	<bits/termios-c_cflag.h>	
#include <bits/termios-baud.h>	<bits/termios-baud.h>	
#include <bits/termios-c_oflag.h>	<bits/termios-c_oflag.h>	
#include <bits/termios-c_iflag.h>	<bits/termios-c_iflag.h>	
#include <bits/termios-c_cc.h>	<bits/termios-c_cc.h>	
#include <bits/termios-struct.h>	<bits/termios-struct.h>	
#define TCIOFLUSH 2	TCIOFLUSH	2
#define TCOFLUSH 1	TCOFLUSH	1
#define TCIFLUSH 0	TCIFLUSH	0
#define TCION 3	TCION	3
#define TCIOFF 2	TCIOFF	2
#define TCOON 1	TCOON	1
#define TCOOFF 0	TCOOFF	0
#define TIOCSER_TEMT 0x01	TIOCSER_TEMT	0x01
#define EXTB B38400	EXTB	B38400
#define EXTA B19200	EXTA	B19200
#define B38400 0000017	B38400	0000017
#define B19200 0000016	B19200	0000016
#define B9600 0000015	B9600	0000015
#define B4800 0000014	B4800	0000014
#define B2400 0000013	B2400	0000013
#define B1800 0000012	B1800	0000012
#define B1200 0000011	B1200	0000011
#define B600 0000010	B600	0000010
#define B300 0000007	B300	0000007
#define B200 0000006	B200	0000006
#define B150 0000005	B150	0000005
#define B134 0000004	B134	0000004
#define B110 0000003	B110	0000003
#define B75 0000002	B75	0000002
#define B50 0000001	B50	0000001
#define B0 0000000	B0	0000000
#ifndef _TERMIOS_H	_TERMIOS_H	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_MISC	__USE_MISC	
#include <sys/ttydefaults.h>	<sys/ttydefaults.h>	
#include <bits/termios.h>	<bits/termios.h>	
#include <bits/types.h>	<bits/types.h>	
#include <features.h>	<features.h>	
#define CCEQ(val,c) ((c) == (val) && (val) != _POSIX_VDISABLE)	CCEQ(val,c)	((c) == (val) && (val) != _POSIX_VDISABLE)
#ifndef _TERMIOS_H	_TERMIOS_H	
#if defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	
#ifndef __pid_t_defined	__pid_t_defined	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_MISC	__USE_MISC	
#if defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	
#ifdef __USE_MISC	__USE_MISC	
#include <debug/assertions.h>	<debug/assertions.h>	
#include <bits/stl_uninitialized.h>	<bits/stl_uninitialized.h>	
#include <initializer_list>	<initializer_list>	
#include <bits/stl_iterator_base_funcs.h>	<bits/stl_iterator_base_funcs.h>	
#include <bits/stl_iterator_base_types.h>	<bits/stl_iterator_base_types.h>	
#include <bits/concept_check.h>	<bits/concept_check.h>	
#define _GLIBCXX_DEQUE_BUF_SIZE 512	_GLIBCXX_DEQUE_BUF_SIZE	512
#undef _GLIBCXX_DEQUE_BUF_SIZE	_GLIBCXX_DEQUE_BUF_SIZE	
#define _STL_DEQUE_H 1	_STL_DEQUE_H	1
#ifndef _STL_DEQUE_H	_STL_DEQUE_H	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifndef _GLIBCXX_DEQUE_BUF_SIZE	_GLIBCXX_DEQUE_BUF_SIZE	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_CONCEPT_CHECKS	_GLIBCXX_CONCEPT_CHECKS	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef __STRICT_ANSI__	__STRICT_ANSI__	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cpp_deduction_guides >= 201606	__cpp_deduction_guides >= 201606	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#define _DEQUE_TCC 1	_DEQUE_TCC	1
#ifndef _DEQUE_TCC	_DEQUE_TCC	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#include <bits/deque.tcc>	<bits/deque.tcc>	
#include <bits/range_access.h>	<bits/range_access.h>	
#include <bits/stl_deque.h>	<bits/stl_deque.h>	
#include <bits/stl_uninitialized.h>	<bits/stl_uninitialized.h>	
#include <bits/stl_construct.h>	<bits/stl_construct.h>	
#include <bits/allocator.h>	<bits/allocator.h>	
#include <bits/stl_algobase.h>	<bits/stl_algobase.h>	
#define _GLIBCXX_DEQUE 1	_GLIBCXX_DEQUE	1
#ifndef _GLIBCXX_DEQUE	_GLIBCXX_DEQUE	
#pragma GCC system_header	GCC system_header	
#if __cplusplus > 201703L	__cplusplus > 201703L	
#ifdef _GLIBCXX_DEBUG	_GLIBCXX_DEBUG	
#ifdef _GLIBCXX_PROFILE	_GLIBCXX_PROFILE	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus > 201703L	__cplusplus > 201703L	
#include <ext/aligned_buffer.h>	<ext/aligned_buffer.h>	
#include <ext/alloc_traits.h>	<ext/alloc_traits.h>	
#include <bits/cpp_type_traits.h>	<bits/cpp_type_traits.h>	
#include <bits/stl_function.h>	<bits/stl_function.h>	
#include <bits/allocator.h>	<bits/allocator.h>	
#include <bits/stl_algobase.h>	<bits/stl_algobase.h>	
#define _STL_TREE_H 1	_STL_TREE_H	1
#ifndef _STL_TREE_H	_STL_TREE_H	
#pragma GCC system_header	GCC system_header	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201402L	__cplusplus >= 201402L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if _GLIBCXX_INLINE_VERSION	_GLIBCXX_INLINE_VERSION	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201402L	__cplusplus >= 201402L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#include <tuple>	<tuple>	
#include <initializer_list>	<initializer_list>	
#include <bits/concept_check.h>	<bits/concept_check.h>	
#include <bits/functexcept.h>	<bits/functexcept.h>	
#define _STL_MAP_H 1	_STL_MAP_H	1
#ifndef _STL_MAP_H	_STL_MAP_H	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_CONCEPT_CHECKS	_GLIBCXX_CONCEPT_CHECKS	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L && defined(__STRICT_ANSI__)	__cplusplus >= 201103L && defined(__STRICT_ANSI__)	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus > 201703L	__cplusplus > 201703L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cpp_deduction_guides >= 201606	__cpp_deduction_guides >= 201606	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#include <initializer_list>	<initializer_list>	
#include <bits/concept_check.h>	<bits/concept_check.h>	
#define _STL_MULTIMAP_H 1	_STL_MULTIMAP_H	1
#ifndef _STL_MULTIMAP_H	_STL_MULTIMAP_H	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_CONCEPT_CHECKS	_GLIBCXX_CONCEPT_CHECKS	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L && defined(__STRICT_ANSI__)	__cplusplus >= 201103L && defined(__STRICT_ANSI__)	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus > 201703L	__cplusplus > 201703L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cpp_deduction_guides >= 201606	__cpp_deduction_guides >= 201606	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#include <bits/erase_if.h>	<bits/erase_if.h>	
#include <bits/range_access.h>	<bits/range_access.h>	
#include <bits/stl_multimap.h>	<bits/stl_multimap.h>	
#include <bits/stl_map.h>	<bits/stl_map.h>	
#include <bits/stl_tree.h>	<bits/stl_tree.h>	
#define _GLIBCXX_MAP 1	_GLIBCXX_MAP	1
#ifndef _GLIBCXX_MAP	_GLIBCXX_MAP	
#pragma GCC system_header	GCC system_header	
#ifdef _GLIBCXX_DEBUG	_GLIBCXX_DEBUG	
#ifdef _GLIBCXX_PROFILE	_GLIBCXX_PROFILE	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus > 201703L	__cplusplus > 201703L	
#include <cstdlib>	<cstdlib>	
#define _GLIBCXX_STDLIB_H 1	_GLIBCXX_STDLIB_H	1
#if !defined __cplusplus || defined _GLIBCXX_INCLUDE_NEXT_C_HEADERS	!defined __cplusplus || defined _GLIBCXX_INCLUDE_NEXT_C_HEADERS	
#ifndef _GLIBCXX_STDLIB_H	_GLIBCXX_STDLIB_H	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_HAVE_AT_QUICK_EXIT	_GLIBCXX_HAVE_AT_QUICK_EXIT	
#ifdef _GLIBCXX_HAVE_QUICK_EXIT	_GLIBCXX_HAVE_QUICK_EXIT	
#if _GLIBCXX_HOSTED	_GLIBCXX_HOSTED	
#ifdef _GLIBCXX_HAVE_MBSTATE_T	_GLIBCXX_HAVE_MBSTATE_T	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#include <bits/gthr.h>	<bits/gthr.h>	
#include <bits/invoke.h>	<bits/invoke.h>	
#include <bits/functional_hash.h>	<bits/functional_hash.h>	
#include <bits/functexcept.h>	<bits/functexcept.h>	
#include <cerrno>	<cerrno>	
#include <tuple>	<tuple>	
#include <memory>	<memory>	
#include <chrono>	<chrono>	
#define _GLIBCXX_THREAD 1	_GLIBCXX_THREAD	1
#ifndef _GLIBCXX_THREAD	_GLIBCXX_THREAD	
#pragma GCC system_header	GCC system_header	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if defined(_GLIBCXX_HAS_GTHREADS)	defined(_GLIBCXX_HAS_GTHREADS)	
#ifdef GTHR_ACTIVE_PROXY	GTHR_ACTIVE_PROXY	
#if _GLIBCXX_THREAD_ABI_COMPAT	_GLIBCXX_THREAD_ABI_COMPAT	
#ifdef __GLIBC__	__GLIBC__	
#ifdef _GLIBCXX_USE_SCHED_YIELD	_GLIBCXX_USE_SCHED_YIELD	
#ifdef _GLIBCXX_USE_NANOSLEEP	_GLIBCXX_USE_NANOSLEEP	
#include <bits/cxxabi_forced.h>	<bits/cxxabi_forced.h>	
#include <bits/shared_ptr.h>	<bits/shared_ptr.h>	
#include <bits/unique_ptr.h>	<bits/unique_ptr.h>	
#include <bits/allocator.h>	<bits/allocator.h>	
#include <bits/alloc_traits.h>	<bits/alloc_traits.h>	
#include <ext/concurrence.h>	<ext/concurrence.h>	
#include <bits/unique_lock.h>	<bits/unique_lock.h>	
#include <bits/std_mutex.h>	<bits/std_mutex.h>	
#include <chrono>	<chrono>	
#define _GLIBCXX_CONDITION_VARIABLE 1	_GLIBCXX_CONDITION_VARIABLE	1
#ifndef _GLIBCXX_CONDITION_VARIABLE	_GLIBCXX_CONDITION_VARIABLE	
#pragma GCC system_header	GCC system_header	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if defined(_GLIBCXX_HAS_GTHREADS)	defined(_GLIBCXX_HAS_GTHREADS)	
#ifdef __GTHREAD_COND_INIT	__GTHREAD_COND_INIT	
#include <chrono>	<chrono>	
#include <atomic>	<atomic>	
#include <bits/c++config.h>	<bits/c++config.h>	
#define _GLIBCXX_ATOMIC_FUTEX_H 1	_GLIBCXX_ATOMIC_FUTEX_H	1
#ifndef _GLIBCXX_ATOMIC_FUTEX_H	_GLIBCXX_ATOMIC_FUTEX_H	
#pragma GCC system_header	GCC system_header	
#if ! (defined(_GLIBCXX_HAVE_LINUX_FUTEX) && ATOMIC_INT_LOCK_FREE > 1)	! (defined(_GLIBCXX_HAVE_LINUX_FUTEX) && ATOMIC_INT_LOCK_FREE > 1)	
#ifndef _GLIBCXX_ALWAYS_INLINE	_GLIBCXX_ALWAYS_INLINE	
#ifdef _GLIBCXX_HAS_GTHREADS	_GLIBCXX_HAS_GTHREADS	
#if defined(_GLIBCXX_HAVE_LINUX_FUTEX) && ATOMIC_INT_LOCK_FREE > 1	defined(_GLIBCXX_HAVE_LINUX_FUTEX) && ATOMIC_INT_LOCK_FREE > 1	
#define __GCC_ATOMIC_INT_LOCK_FREE 2	__GCC_ATOMIC_INT_LOCK_FREE	2
#include <ext/aligned_buffer.h>	<ext/aligned_buffer.h>	
#include <bits/allocated_ptr.h>	<bits/allocated_ptr.h>	
#include <bits/uses_allocator.h>	<bits/uses_allocator.h>	
#include <bits/std_function.h>	<bits/std_function.h>	
#include <bits/shared_ptr.h>	<bits/shared_ptr.h>	
#include <bits/unique_ptr.h>	<bits/unique_ptr.h>	
#include <bits/invoke.h>	<bits/invoke.h>	
#include <bits/functexcept.h>	<bits/functexcept.h>	
#include <bits/atomic_futex.h>	<bits/atomic_futex.h>	
#include <atomic>	<atomic>	
#include <system_error>	<system_error>	
#include <condition_variable>	<condition_variable>	
#include <thread>	<thread>	
#include <mutex>	<mutex>	
#define _GLIBCXX_FUTURE 1	_GLIBCXX_FUTURE	1
#ifndef _GLIBCXX_FUTURE	_GLIBCXX_FUTURE	
#pragma GCC system_header	GCC system_header	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if defined(_GLIBCXX_HAS_GTHREADS)	defined(_GLIBCXX_HAS_GTHREADS)	
#ifdef _GLIBCXX_ASYNC_ABI_COMPAT	_GLIBCXX_ASYNC_ABI_COMPAT	
#ifndef _GLIBCXX_ASYNC_ABI_COMPAT	_GLIBCXX_ASYNC_ABI_COMPAT	
#if __cpp_exceptions	__cpp_exceptions	
"#include ""common.h"""	"""common.h"""	
#include <utility>	<utility>	
#include <string>	<string>	
#include <algorithm>	<algorithm>	
#define FISH_WCSTRINGUTIL_H	FISH_WCSTRINGUTIL_H	
#ifndef FISH_WCSTRINGUTIL_H	FISH_WCSTRINGUTIL_H	
"#include ""wcstringutil.h"""	"""wcstringutil.h"""	
"#include ""global_safety.h"""	"""global_safety.h"""	
#include <utility>	<utility>	
#include <type_traits>	<type_traits>	
#include <string>	<string>	
#include <stdio.h>	<stdio.h>	
"#include ""config.h"""	"""config.h"""	
#define should_flog(wht) (flog_details::category_list_t::g_instance->wht.enabled)	should_flog(wht)	(flog_details::category_list_t::g_instance->wht.enabled)
#define FISH_FLOG_H	FISH_FLOG_H	
#ifndef FISH_FLOG_H	FISH_FLOG_H	
"#include ""maybe.h"""	"""maybe.h"""	
"#include ""common.h"""	"""common.h"""	
#include <vector>	<vector>	
#define FISH_REDIRECTION_H	FISH_REDIRECTION_H	
#ifndef FISH_REDIRECTION_H	FISH_REDIRECTION_H	
"#include ""redirection.h"""	"""redirection.h"""	
"#include ""maybe.h"""	"""maybe.h"""	
"#include ""global_safety.h"""	"""global_safety.h"""	
"#include ""flog.h"""	"""flog.h"""	
"#include ""env.h"""	"""env.h"""	
"#include ""common.h"""	"""common.h"""	
#include <vector>	<vector>	
#include <mutex>	<mutex>	
#include <memory>	<memory>	
#include <future>	<future>	
#include <atomic>	<atomic>	
#include <stdlib.h>	<stdlib.h>	
#include <stddef.h>	<stddef.h>	
#include <stdarg.h>	<stdarg.h>	
#include <pthread.h>	<pthread.h>	
#define FISH_IO_H	FISH_IO_H	
#ifndef FISH_IO_H	FISH_IO_H	
"#include ""io.h"""	"""io.h"""	
"#include ""common.h"""	"""common.h"""	
#include <vector>	<vector>	
#include <memory>	<memory>	
#include <map>	<map>	
#include <unistd.h>	<unistd.h>	
#define EVENT_ANY_PID 0	EVENT_ANY_PID	0
#define FISH_EVENT_H	FISH_EVENT_H	
#ifndef FISH_EVENT_H	FISH_EVENT_H	
"#include ""common.h"""	"""common.h"""	
"#include ""config.h"""	"""config.h"""	
"#define ERROR_TIME_BACKGROUND _(L""'time' is not supported for background jobs. Consider using 'command time'."")"	ERROR_TIME_BACKGROUND	"_(L""'time' is not supported for background jobs. Consider using 'command time'."")"
"#define ERROR_BAD_COMMAND_ASSIGN_ERR_MSG _(L""Unsupported use of '='. In fish, please use 'set %ls %ls'."")"	ERROR_BAD_COMMAND_ASSIGN_ERR_MSG	"_(L""Unsupported use of '='. In fish, please use 'set %ls %ls'."")"
"#define ERROR_NO_VAR_NAME _(L""Expected a variable name after this $."")"	ERROR_NO_VAR_NAME	"_(L""Expected a variable name after this $."")"
"#define ERROR_NOT_ARGV_STAR _(L""$* is not supported. In fish, please use $argv."")"	ERROR_NOT_ARGV_STAR	"_(L""$* is not supported. In fish, please use $argv."")"
"#define ERROR_BAD_VAR_SUBCOMMAND1 _(L""$(...) is not supported. In fish, please use '(%ls)'."")"	ERROR_BAD_VAR_SUBCOMMAND1	"_(L""$(...) is not supported. In fish, please use '(%ls)'."")"
"#define ERROR_NOT_ARGV_AT _(L""$@ is not supported. In fish, please use $argv."")"	ERROR_NOT_ARGV_AT	"_(L""$@ is not supported. In fish, please use $argv."")"
"#define ERROR_NOT_ARGV_COUNT _(L""$# is not supported. In fish, please use 'count $argv'."")"	ERROR_NOT_ARGV_COUNT	"_(L""$# is not supported. In fish, please use 'count $argv'."")"
"#define ERROR_NOT_PID _(L""$$ is not the pid. In fish, please use $fish_pid."")"	ERROR_NOT_PID	"_(L""$$ is not the pid. In fish, please use $fish_pid."")"
"#define ERROR_NOT_STATUS _(L""$? is not the exit status. In fish, please use $status."")"	ERROR_NOT_STATUS	"_(L""$? is not the exit status. In fish, please use $status."")"
"#define ERROR_BRACKETED_VARIABLE_QUOTED1 _(L""Variables cannot be bracketed. In fish, please use \""$%ls\""."")"	ERROR_BRACKETED_VARIABLE_QUOTED1	"_(L""Variables cannot be bracketed. In fish, please use \""$%ls\""."")"
"#define ERROR_BRACKETED_VARIABLE1 _(L""Variables cannot be bracketed. In fish, please use {$%ls}."")"	ERROR_BRACKETED_VARIABLE1	"_(L""Variables cannot be bracketed. In fish, please use {$%ls}."")"
"#define ERROR_BAD_VAR_CHAR1 _(L""$%lc is not a valid variable in fish."")"	ERROR_BAD_VAR_CHAR1	"_(L""$%lc is not a valid variable in fish."")"
"#define INVALID_RETURN_ERR_MSG _(L""'return' outside of function definition"")"	INVALID_RETURN_ERR_MSG	"_(L""'return' outside of function definition"")"
"#define INVALID_CONTINUE_ERR_MSG _(L""'continue' while not inside of loop"")"	INVALID_CONTINUE_ERR_MSG	"_(L""'continue' while not inside of loop"")"
"#define INVALID_BREAK_ERR_MSG _(L""'break' while not inside of loop"")"	INVALID_BREAK_ERR_MSG	"_(L""'break' while not inside of loop"")"
"#define WILDCARD_ERR_MSG _(L""No matches for wildcard '%ls'. See `help expand`."")"	WILDCARD_ERR_MSG	"_(L""No matches for wildcard '%ls'. See `help expand`."")"
"#define ILLEGAL_FD_ERR_MSG _(L""Illegal file descriptor in redirection '%ls'"")"	ILLEGAL_FD_ERR_MSG	"_(L""Illegal file descriptor in redirection '%ls'"")"
"#define FAILED_EXPANSION_VARIABLE_NAME_ERR_MSG _(L""Unable to expand variable name '%ls'"")"	FAILED_EXPANSION_VARIABLE_NAME_ERR_MSG	"_(L""Unable to expand variable name '%ls'"")"
"#define UNKNOWN_BUILTIN_ERR_MSG _(L""Unknown builtin '%ls'"")"	UNKNOWN_BUILTIN_ERR_MSG	"_(L""Unknown builtin '%ls'"")"
"#define ILLEGAL_CMD_ERR_MSG _(L""Illegal command name '%ls'"")"	ILLEGAL_CMD_ERR_MSG	"_(L""Illegal command name '%ls'"")"
"#define CALL_STACK_LIMIT_EXCEEDED_ERR_MSG _(L""The function call stack limit has been exceeded. Do you have an accidental infinite "" L""loop?"")"	CALL_STACK_LIMIT_EXCEEDED_ERR_MSG	"_(L""The function call stack limit has been exceeded. Do you have an accidental infinite "" L""loop?"")"
"#define INFINITE_FUNC_RECURSION_ERR_MSG _(L""The function '%ls' calls itself immediately, which would result in an infinite loop."")"	INFINITE_FUNC_RECURSION_ERR_MSG	"_(L""The function '%ls' calls itself immediately, which would result in an infinite loop."")"
#define FISH_MAX_STACK_DEPTH 128	FISH_MAX_STACK_DEPTH	128
#define SOURCE_LOCATION_UNKNOWN (static_cast<size_t>(-1))	SOURCE_LOCATION_UNKNOWN	(static_cast<size_t>(-1))
#define token_enum_map_len (sizeof token_enum_map / sizeof *token_enum_map)	token_enum_map_len	(sizeof token_enum_map / sizeof *token_enum_map)
"#define PARSER_DIE() do { FLOG(error, L""Parser dying!""); exit_without_destructors(-1); } while (0)"	PARSER_DIE()	"do { FLOG(error, L""Parser dying!""); exit_without_destructors(-1); } while (0)"
#define FISH_PARSE_CONSTANTS_H	FISH_PARSE_CONSTANTS_H	
#ifndef FISH_PARSE_CONSTANTS_H	FISH_PARSE_CONSTANTS_H	
"#include ""redirection.h"""	"""redirection.h"""	
"#include ""parse_constants.h"""	"""parse_constants.h"""	
"#include ""maybe.h"""	"""maybe.h"""	
"#include ""common.h"""	"""common.h"""	
#include <stddef.h>	<stddef.h>	
#define TOK_SHOW_BLANK_LINES 4	TOK_SHOW_BLANK_LINES	4
#define FISH_TOKENIZER_H	FISH_TOKENIZER_H	
#ifndef FISH_TOKENIZER_H	FISH_TOKENIZER_H	
"#include ""tokenizer.h"""	"""tokenizer.h"""	
"#include ""parse_constants.h"""	"""parse_constants.h"""	
"#include ""maybe.h"""	"""maybe.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""ast.h"""	"""ast.h"""	
#include <vector>	<vector>	
#include <memory>	<memory>	
#include <deque>	<deque>	
#include <sys/types.h>	<sys/types.h>	
#include <stdint.h>	<stdint.h>	
#include <stddef.h>	<stddef.h>	
#define FISH_PARSE_PRODUCTIONS_H	FISH_PARSE_PRODUCTIONS_H	
#ifndef FISH_PARSE_PRODUCTIONS_H	FISH_PARSE_PRODUCTIONS_H	
#include <bits/functional_hash.h>	<bits/functional_hash.h>	
#include <bits/cxxabi_forced.h>	<bits/cxxabi_forced.h>	
#include <iosfwd>	<iosfwd>	
#include <bits/functexcept.h>	<bits/functexcept.h>	
#include <string>	<string>	
#define _GLIBCXX_BITSET_BITS_PER_WORD (__CHAR_BIT__ * __SIZEOF_LONG__)	_GLIBCXX_BITSET_BITS_PER_WORD	(__CHAR_BIT__ * __SIZEOF_LONG__)
#undef _GLIBCXX_BITSET_BITS_PER_ULL	_GLIBCXX_BITSET_BITS_PER_ULL	
#undef _GLIBCXX_BITSET_BITS_PER_WORD	_GLIBCXX_BITSET_BITS_PER_WORD	
#undef _GLIBCXX_BITSET_WORDS	_GLIBCXX_BITSET_WORDS	
#define _GLIBCXX_BITSET_BITS_PER_ULL (__CHAR_BIT__ * __SIZEOF_LONG_LONG__)	_GLIBCXX_BITSET_BITS_PER_ULL	(__CHAR_BIT__ * __SIZEOF_LONG_LONG__)
#define _GLIBCXX_BITSET_WORDS(__n) ((__n) / _GLIBCXX_BITSET_BITS_PER_WORD + ((__n) % _GLIBCXX_BITSET_BITS_PER_WORD == 0 ? 0 : 1))	_GLIBCXX_BITSET_WORDS(__n)	((__n) / _GLIBCXX_BITSET_BITS_PER_WORD + ((__n) % _GLIBCXX_BITSET_BITS_PER_WORD == 0 ? 0 : 1))
#define _GLIBCXX_BITSET 1	_GLIBCXX_BITSET	1
#ifndef _GLIBCXX_BITSET	_GLIBCXX_BITSET	
#pragma GCC system_header	GCC system_header	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __SIZEOF_LONG_LONG__ > __SIZEOF_LONG__	__SIZEOF_LONG_LONG__ > __SIZEOF_LONG__	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_DEBUG	_GLIBCXX_DEBUG	
#ifdef _GLIBCXX_PROFILE	_GLIBCXX_PROFILE	
#define __SIZEOF_LONG_LONG__ 8	__SIZEOF_LONG_LONG__	8
#define __SIZEOF_LONG__ 8	__SIZEOF_LONG__	8
#include <bits/move.h>	<bits/move.h>	
#include <debug/debug.h>	<debug/debug.h>	
#include <bits/concept_check.h>	<bits/concept_check.h>	
#undef _GLIBCXX_MOVE_IF_20	_GLIBCXX_MOVE_IF_20	
#define _GLIBCXX_MOVE_IF_20(_E) _E	_GLIBCXX_MOVE_IF_20(_E)	_E
#define _STL_NUMERIC_H 1	_STL_NUMERIC_H	1
#ifndef _STL_NUMERIC_H	_STL_NUMERIC_H	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201703L	__cplusplus > 201703L	
#include <bits/stl_numeric.h>	<bits/stl_numeric.h>	
#include <bits/stl_iterator_base_types.h>	<bits/stl_iterator_base_types.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#define _GLIBCXX_NUMERIC 1	_GLIBCXX_NUMERIC	1
#ifndef _GLIBCXX_NUMERIC	_GLIBCXX_NUMERIC	
#pragma GCC system_header	GCC system_header	
#ifdef _GLIBCXX_PARALLEL	_GLIBCXX_PARALLEL	
#if __cplusplus >= 201402L	__cplusplus >= 201402L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus > 201703L	__cplusplus > 201703L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __PSTL_EXECUTION_POLICIES_DEFINED	__PSTL_EXECUTION_POLICIES_DEFINED	
#define _LOCALE_CLASSES_TCC 1	_LOCALE_CLASSES_TCC	1
#ifndef _LOCALE_CLASSES_TCC	_LOCALE_CLASSES_TCC	
#pragma GCC system_header	GCC system_header	
#if __cpp_rtti	__cpp_rtti	
#if __cpp_rtti	__cpp_rtti	
#if _GLIBCXX_EXTERN_TEMPLATE	_GLIBCXX_EXTERN_TEMPLATE	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#include <bits/locale_classes.tcc>	<bits/locale_classes.tcc>	
#include <ext/atomicity.h>	<ext/atomicity.h>	
#include <string>	<string>	
#include <bits/localefwd.h>	<bits/localefwd.h>	
#define _LOCALE_CLASSES_H 1	_LOCALE_CLASSES_H	1
#ifndef _LOCALE_CLASSES_H	_LOCALE_CLASSES_H	
#pragma GCC system_header	GCC system_header	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef __GTHREADS	__GTHREADS	
#if _GLIBCXX_USE_CXX11_ABI	_GLIBCXX_USE_CXX11_ABI	
#ifdef __GTHREADS	__GTHREADS	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#include <system_error>	<system_error>	
#include <bits/locale_classes.h>	<bits/locale_classes.h>	
#include <bits/localefwd.h>	<bits/localefwd.h>	
#include <ext/atomicity.h>	<ext/atomicity.h>	
#define _IOS_BASE_H 1	_IOS_BASE_H	1
#ifndef _IOS_BASE_H	_IOS_BASE_H	
#pragma GCC system_header	GCC system_header	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if _GLIBCXX_USE_CXX11_ABI	_GLIBCXX_USE_CXX11_ABI	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if _GLIBCXX_USE_CXX11_ABI	_GLIBCXX_USE_CXX11_ABI	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus <= 201402L	__cplusplus <= 201402L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#define _STREAMBUF_TCC 1	_STREAMBUF_TCC	1
#ifndef _STREAMBUF_TCC	_STREAMBUF_TCC	
#pragma GCC system_header	GCC system_header	
#if _GLIBCXX_EXTERN_TEMPLATE	_GLIBCXX_EXTERN_TEMPLATE	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#include <bits/streambuf.tcc>	<bits/streambuf.tcc>	
#include <ext/type_traits.h>	<ext/type_traits.h>	
#include <bits/cpp_type_traits.h>	<bits/cpp_type_traits.h>	
#include <bits/ios_base.h>	<bits/ios_base.h>	
#include <bits/localefwd.h>	<bits/localefwd.h>	
#include <iosfwd>	<iosfwd>	
#include <bits/c++config.h>	<bits/c++config.h>	
#undef _IsUnused	_IsUnused	
#define _IsUnused __attribute__ ((__unused__))	_IsUnused	__attribute__ ((__unused__))
#define _GLIBXX_STREAMBUF 1	_GLIBXX_STREAMBUF	1
#ifndef _GLIBXX_STREAMBUF	_GLIBXX_STREAMBUF	
#pragma GCC system_header	GCC system_header	
#if _GLIBCXX_USE_DEPRECATED && __cplusplus <= 201402L	_GLIBCXX_USE_DEPRECATED && __cplusplus <= 201402L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#include <wctype.h>	<wctype.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#undef wctype	wctype	
#undef wctrans	wctrans	
#undef towupper	towupper	
#undef towlower	towlower	
#undef towctrans	towctrans	
#undef iswxdigit	iswxdigit	
#undef iswupper	iswupper	
#undef iswspace	iswspace	
#undef iswpunct	iswpunct	
#undef iswprint	iswprint	
#undef iswlower	iswlower	
#undef iswgraph	iswgraph	
#undef iswdigit	iswdigit	
#undef iswctype	iswctype	
#undef iswcntrl	iswcntrl	
#undef iswblank	iswblank	
#undef iswalpha	iswalpha	
#undef iswalnum	iswalnum	
#define _GLIBCXX_CWCTYPE 1	_GLIBCXX_CWCTYPE	1
#pragma GCC system_header	GCC system_header	
#if _GLIBCXX_HAVE_WCTYPE_H	_GLIBCXX_HAVE_WCTYPE_H	
#if __GLIBC__ == 2 && __GLIBC_MINOR__ < 10	__GLIBC__ == 2 && __GLIBC_MINOR__ < 10	
#ifndef _GLIBCXX_CWCTYPE	_GLIBCXX_CWCTYPE	
#if _GLIBCXX_HAVE_ISWBLANK	_GLIBCXX_HAVE_ISWBLANK	
#if _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#if _GLIBCXX_HAVE_ISWBLANK	_GLIBCXX_HAVE_ISWBLANK	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#include <debug/debug.h>	<debug/debug.h>	
#include <streambuf>	<streambuf>	
#define _STREAMBUF_ITERATOR_H 1	_STREAMBUF_ITERATOR_H	1
#ifndef _STREAMBUF_ITERATOR_H	_STREAMBUF_ITERATOR_H	
#pragma GCC system_header	GCC system_header	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_DEBUG_PEDANTIC	_GLIBCXX_DEBUG_PEDANTIC	
#define _LOCALE_FACETS_TCC 1	_LOCALE_FACETS_TCC	1
#ifndef _LOCALE_FACETS_TCC	_LOCALE_FACETS_TCC	
#pragma GCC system_header	GCC system_header	
#if defined _GLIBCXX_LONG_DOUBLE_COMPAT && defined __LONG_DOUBLE_128__	defined _GLIBCXX_LONG_DOUBLE_COMPAT && defined __LONG_DOUBLE_128__	
#if _GLIBCXX_USE_C99_STDIO && !_GLIBCXX_HAVE_BROKEN_VSNPRINTF	_GLIBCXX_USE_C99_STDIO && !_GLIBCXX_HAVE_BROKEN_VSNPRINTF	
#if defined _GLIBCXX_LONG_DOUBLE_COMPAT && defined __LONG_DOUBLE_128__	defined _GLIBCXX_LONG_DOUBLE_COMPAT && defined __LONG_DOUBLE_128__	
#if _GLIBCXX_EXTERN_TEMPLATE	_GLIBCXX_EXTERN_TEMPLATE	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#include <bits/locale_facets.tcc>	<bits/locale_facets.tcc>	
#include <bits/ctype_inline.h>	<bits/ctype_inline.h>	
#include <bits/streambuf_iterator.h>	<bits/streambuf_iterator.h>	
#include <ext/numeric_traits.h>	<ext/numeric_traits.h>	
#include <ext/type_traits.h>	<ext/type_traits.h>	
#include <bits/cpp_type_traits.h>	<bits/cpp_type_traits.h>	
#include <streambuf>	<streambuf>	
#include <bits/ios_base.h>	<bits/ios_base.h>	
#include <iosfwd>	<iosfwd>	
#include <bits/ctype_base.h>	<bits/ctype_base.h>	
#include <cctype>	<cctype>	
#include <cwctype>	<cwctype>	
#define _GLIBCXX_NUM_UNICODE_FACETS 2	_GLIBCXX_NUM_UNICODE_FACETS	2
#define _GLIBCXX_NUM_CXX11_FACETS 16	_GLIBCXX_NUM_CXX11_FACETS	16
#define _GLIBCXX_NUM_FACETS 28	_GLIBCXX_NUM_FACETS	28
#define _LOCALE_FACETS_H 1	_LOCALE_FACETS_H	1
#ifndef _LOCALE_FACETS_H	_LOCALE_FACETS_H	
#pragma GCC system_header	GCC system_header	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#ifdef _GLIBCXX_USE_CHAR8_T	_GLIBCXX_USE_CHAR8_T	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_USE_LONG_LONG	_GLIBCXX_USE_LONG_LONG	
#ifdef _GLIBCXX_USE_LONG_LONG	_GLIBCXX_USE_LONG_LONG	
#if defined _GLIBCXX_LONG_DOUBLE_COMPAT && defined __LONG_DOUBLE_128__	defined _GLIBCXX_LONG_DOUBLE_COMPAT && defined __LONG_DOUBLE_128__	
#if defined _GLIBCXX_LONG_DOUBLE_COMPAT && defined __LONG_DOUBLE_128__	defined _GLIBCXX_LONG_DOUBLE_COMPAT && defined __LONG_DOUBLE_128__	
#ifdef _GLIBCXX_USE_LONG_LONG	_GLIBCXX_USE_LONG_LONG	
#ifdef _GLIBCXX_USE_LONG_LONG	_GLIBCXX_USE_LONG_LONG	
#if defined _GLIBCXX_LONG_DOUBLE_COMPAT && defined __LONG_DOUBLE_128__	defined _GLIBCXX_LONG_DOUBLE_COMPAT && defined __LONG_DOUBLE_128__	
#if defined _GLIBCXX_LONG_DOUBLE_COMPAT && defined __LONG_DOUBLE_128__	defined _GLIBCXX_LONG_DOUBLE_COMPAT && defined __LONG_DOUBLE_128__	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#define _BASIC_IOS_TCC 1	_BASIC_IOS_TCC	1
#ifndef _BASIC_IOS_TCC	_BASIC_IOS_TCC	
#pragma GCC system_header	GCC system_header	
#if _GLIBCXX_EXTERN_TEMPLATE	_GLIBCXX_EXTERN_TEMPLATE	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#include <bits/basic_ios.tcc>	<bits/basic_ios.tcc>	
#include <bits/move.h>	<bits/move.h>	
#include <bits/streambuf_iterator.h>	<bits/streambuf_iterator.h>	
#include <bits/locale_facets.h>	<bits/locale_facets.h>	
#include <bits/locale_classes.h>	<bits/locale_classes.h>	
#include <bits/localefwd.h>	<bits/localefwd.h>	
#define _BASIC_IOS_H 1	_BASIC_IOS_H	1
#ifndef _BASIC_IOS_H	_BASIC_IOS_H	
#pragma GCC system_header	GCC system_header	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#include <bits/basic_ios.h>	<bits/basic_ios.h>	
#include <streambuf>	<streambuf>	
#include <bits/ios_base.h>	<bits/ios_base.h>	
#include <bits/localefwd.h>	<bits/localefwd.h>	
#include <bits/char_traits.h>	<bits/char_traits.h>	
#include <exception>	<exception>	
#include <iosfwd>	<iosfwd>	
#define _GLIBCXX_IOS 1	_GLIBCXX_IOS	1
#ifndef _GLIBCXX_IOS	_GLIBCXX_IOS	
#pragma GCC system_header	GCC system_header	
#include <bits/cxxabi_forced.h>	<bits/cxxabi_forced.h>	
#define _OSTREAM_TCC 1	_OSTREAM_TCC	1
#ifndef _OSTREAM_TCC	_OSTREAM_TCC	
#pragma GCC system_header	GCC system_header	
#if _GLIBCXX_EXTERN_TEMPLATE	_GLIBCXX_EXTERN_TEMPLATE	
#ifdef _GLIBCXX_USE_LONG_LONG	_GLIBCXX_USE_LONG_LONG	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#ifdef _GLIBCXX_USE_LONG_LONG	_GLIBCXX_USE_LONG_LONG	
#include <bits/ostream.tcc>	<bits/ostream.tcc>	
#include <bits/ostream_insert.h>	<bits/ostream_insert.h>	
#include <ios>	<ios>	
#define _GLIBCXX_OSTREAM 1	_GLIBCXX_OSTREAM	1
#ifndef _GLIBCXX_OSTREAM	_GLIBCXX_OSTREAM	
#pragma GCC system_header	GCC system_header	
#ifdef _GLIBCXX_USE_LONG_LONG	_GLIBCXX_USE_LONG_LONG	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#pragma GCC diagnostic push	GCC diagnostic push	
"#pragma GCC diagnostic ignored ""-Wdeprecated-declarations"""	"GCC diagnostic ignored ""-Wdeprecated-declarations"""	
#pragma GCC diagnostic pop	GCC diagnostic pop	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#include <bits/cxxabi_forced.h>	<bits/cxxabi_forced.h>	
#define _ISTREAM_TCC 1	_ISTREAM_TCC	1
#ifndef _ISTREAM_TCC	_ISTREAM_TCC	
#pragma GCC system_header	GCC system_header	
#if _GLIBCXX_EXTERN_TEMPLATE	_GLIBCXX_EXTERN_TEMPLATE	
#ifdef _GLIBCXX_USE_LONG_LONG	_GLIBCXX_USE_LONG_LONG	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#ifdef _GLIBCXX_USE_LONG_LONG	_GLIBCXX_USE_LONG_LONG	
#include <bits/istream.tcc>	<bits/istream.tcc>	
#include <ostream>	<ostream>	
#include <ios>	<ios>	
#define _GLIBCXX_ISTREAM 1	_GLIBCXX_ISTREAM	1
#ifndef _GLIBCXX_ISTREAM	_GLIBCXX_ISTREAM	
#pragma GCC system_header	GCC system_header	
#ifdef _GLIBCXX_USE_LONG_LONG	_GLIBCXX_USE_LONG_LONG	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#include <debug/debug.h>	<debug/debug.h>	
#define _STREAM_ITERATOR_H 1	_STREAM_ITERATOR_H	1
#ifndef _STREAM_ITERATOR_H	_STREAM_ITERATOR_H	
#pragma GCC system_header	GCC system_header	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#include <bits/range_access.h>	<bits/range_access.h>	
#include <bits/streambuf_iterator.h>	<bits/streambuf_iterator.h>	
#include <bits/stream_iterator.h>	<bits/stream_iterator.h>	
#include <istream>	<istream>	
#include <ostream>	<ostream>	
#include <bits/stl_iterator.h>	<bits/stl_iterator.h>	
#include <bits/stl_iterator_base_funcs.h>	<bits/stl_iterator_base_funcs.h>	
#include <bits/stl_iterator_base_types.h>	<bits/stl_iterator_base_types.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#define _GLIBCXX_ITERATOR 1	_GLIBCXX_ITERATOR	1
#ifndef _GLIBCXX_ITERATOR	_GLIBCXX_ITERATOR	
#pragma GCC system_header	GCC system_header	
#if __cplusplus >= 201402L && ! defined _GLIBCXX_DEBUG	__cplusplus >= 201402L && ! defined _GLIBCXX_DEBUG	
#include <iterator>	<iterator>	
#include <cassert>	<cassert>	
#include <bitset>	<bitset>	
#include <array>	<array>	
#define FISH_ENUM_SET_H	FISH_ENUM_SET_H	
#ifndef FISH_ENUM_SET_H	FISH_ENUM_SET_H	
"#include ""io.h"""	"""io.h"""	
"#include ""enum_set.h"""	"""enum_set.h"""	
"#include ""common.h"""	"""common.h"""	
#include <numeric>	<numeric>	
#include <limits>	<limits>	
#include <condition_variable>	<condition_variable>	
#include <bitset>	<bitset>	
#include <atomic>	<atomic>	
#include <array>	<array>	
#define FISH_TOPIC_MONITOR_H	FISH_TOPIC_MONITOR_H	
#ifndef FISH_TOPIC_MONITOR_H	FISH_TOPIC_MONITOR_H	
"#include ""topic_monitor.h"""	"""topic_monitor.h"""	
"#include ""parse_tree.h"""	"""parse_tree.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""global_safety.h"""	"""global_safety.h"""	
"#include ""event.h"""	"""event.h"""	
"#include ""common.h"""	"""common.h"""	
#include <vector>	<vector>	
#include <memory>	<memory>	
#include <deque>	<deque>	
#include <unistd.h>	<unistd.h>	
#include <termios.h>	<termios.h>	
#include <sys/wait.h>	<sys/wait.h>	
#include <sys/time.h>	<sys/time.h>	
#include <stddef.h>	<stddef.h>	
#include <signal.h>	<signal.h>	
"#include ""config.h"""	"""config.h"""	
#define FISH_PROC_H	FISH_PROC_H	
#ifndef FISH_PROC_H	FISH_PROC_H	
#ifdef W_EXITCODE	W_EXITCODE	
"#include ""proc.h"""	"""proc.h"""	
"#include ""common.h"""	"""common.h"""	
#include <vector>	<vector>	
#include <stddef.h>	<stddef.h>	
"#define PIPE_ERROR _(L""An error occurred while setting up pipe"")"	PIPE_ERROR	"_(L""An error occurred while setting up pipe"")"
#define FISH_EXEC_H	FISH_EXEC_H	
#ifndef FISH_EXEC_H	FISH_EXEC_H	
"#include ""common.h"""	"""common.h"""	
#include <unordered_map>	<unordered_map>	
#include <cwchar>	<cwchar>	
#define FISH_LRU_H	FISH_LRU_H	
#ifndef FISH_LRU_H	FISH_LRU_H	
#include <signal.h>	<signal.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#undef raise	raise	
#define _GLIBCXX_CSIGNAL 1	_GLIBCXX_CSIGNAL	1
#pragma GCC system_header	GCC system_header	
#ifndef _GLIBCXX_CSIGNAL	_GLIBCXX_CSIGNAL	
#include <ext/aligned_buffer.h>	<ext/aligned_buffer.h>	
#include <bits/allocated_ptr.h>	<bits/allocated_ptr.h>	
#include <initializer_list>	<initializer_list>	
#include <ext/alloc_traits.h>	<ext/alloc_traits.h>	
#include <bits/concept_check.h>	<bits/concept_check.h>	
#undef _GLIBCXX_LIST_REMOVE_RETURN_TYPE_TAG	_GLIBCXX_LIST_REMOVE_RETURN_TYPE_TAG	
#define _GLIBCXX_LIST_REMOVE_RETURN_TYPE_TAG	_GLIBCXX_LIST_REMOVE_RETURN_TYPE_TAG	
#define _STL_LIST_H 1	_STL_LIST_H	1
#ifndef _STL_LIST_H	_STL_LIST_H	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if _GLIBCXX_USE_CXX11_ABI	_GLIBCXX_USE_CXX11_ABI	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if _GLIBCXX_USE_CXX11_ABI	_GLIBCXX_USE_CXX11_ABI	
#if _GLIBCXX_USE_CXX11_ABI	_GLIBCXX_USE_CXX11_ABI	
#if _GLIBCXX_USE_CXX11_ABI	_GLIBCXX_USE_CXX11_ABI	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if !_GLIBCXX_INLINE_VERSION	!_GLIBCXX_INLINE_VERSION	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if _GLIBCXX_USE_CXX11_ABI	_GLIBCXX_USE_CXX11_ABI	
#if !_GLIBCXX_INLINE_VERSION	!_GLIBCXX_INLINE_VERSION	
#if !_GLIBCXX_INLINE_VERSION	!_GLIBCXX_INLINE_VERSION	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if !_GLIBCXX_INLINE_VERSION	!_GLIBCXX_INLINE_VERSION	
#ifdef _GLIBCXX_CONCEPT_CHECKS	_GLIBCXX_CONCEPT_CHECKS	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef __STRICT_ANSI__	__STRICT_ANSI__	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if _GLIBCXX_USE_CXX11_ABI	_GLIBCXX_USE_CXX11_ABI	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201703L	__cplusplus > 201703L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cpp_deduction_guides >= 201606	__cpp_deduction_guides >= 201606	
#if _GLIBCXX_USE_CXX11_ABI	_GLIBCXX_USE_CXX11_ABI	
#if _GLIBCXX_USE_CXX11_ABI	_GLIBCXX_USE_CXX11_ABI	
#undef _GLIBCXX20_ONLY	_GLIBCXX20_ONLY	
#define _GLIBCXX20_ONLY(__expr)	_GLIBCXX20_ONLY(__expr)	
#define _LIST_TCC 1	_LIST_TCC	1
#ifndef _LIST_TCC	_LIST_TCC	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if _GLIBCXX_USE_CXX11_ABI	_GLIBCXX_USE_CXX11_ABI	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201703L	__cplusplus > 201703L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#include <bits/list.tcc>	<bits/list.tcc>	
#include <bits/stl_list.h>	<bits/stl_list.h>	
#include <bits/range_access.h>	<bits/range_access.h>	
#include <bits/allocator.h>	<bits/allocator.h>	
#include <bits/stl_algobase.h>	<bits/stl_algobase.h>	
#define _GLIBCXX_LIST 1	_GLIBCXX_LIST	1
#ifndef _GLIBCXX_LIST	_GLIBCXX_LIST	
#pragma GCC system_header	GCC system_header	
#ifdef _GLIBCXX_DEBUG	_GLIBCXX_DEBUG	
#ifdef _GLIBCXX_PROFILE	_GLIBCXX_PROFILE	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus > 201703L	__cplusplus > 201703L	
"#include ""parse_constants.h"""	"""parse_constants.h"""	
"#include ""maybe.h"""	"""maybe.h"""	
"#include ""enum_set.h"""	"""enum_set.h"""	
"#include ""common.h"""	"""common.h"""	
#include <vector>	<vector>	
#include <string>	<string>	
#include <map>	<map>	
#include <stddef.h>	<stddef.h>	
"#include ""config.h"""	"""config.h"""	
#define PROCESS_EXPAND_SELF_STR_LEN 5	PROCESS_EXPAND_SELF_STR_LEN	5
"#define PROCESS_EXPAND_SELF_STR L""%self"""	PROCESS_EXPAND_SELF_STR	"L""%self"""
#define FISH_EXPAND_H	FISH_EXPAND_H	
#ifndef FISH_EXPAND_H	FISH_EXPAND_H	
"#include ""common.h"""	"""common.h"""	
#include <memory>	<memory>	
#define FISH_OPERATION_CONTEXT_H	FISH_OPERATION_CONTEXT_H	
#ifndef FISH_OPERATION_CONTEXT_H	FISH_OPERATION_CONTEXT_H	
"#include ""proc.h"""	"""proc.h"""	
"#include ""parse_tree.h"""	"""parse_tree.h"""	
"#include ""parse_constants.h"""	"""parse_constants.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""ast.h"""	"""ast.h"""	
#include <stddef.h>	<stddef.h>	
#define FISH_PARSE_EXECUTION_H	FISH_PARSE_EXECUTION_H	
#ifndef FISH_PARSE_EXECUTION_H	FISH_PARSE_EXECUTION_H	
"#include ""proc.h"""	"""proc.h"""	
"#include ""parse_tree.h"""	"""parse_tree.h"""	
"#include ""parse_execution.h"""	"""parse_execution.h"""	
"#include ""parse_constants.h"""	"""parse_constants.h"""	
"#include ""operation_context.h"""	"""operation_context.h"""	
"#include ""expand.h"""	"""expand.h"""	
"#include ""event.h"""	"""event.h"""	
"#include ""common.h"""	"""common.h"""	
#include <vector>	<vector>	
#include <type_traits>	<type_traits>	
#include <memory>	<memory>	
#include <list>	<list>	
#include <csignal>	<csignal>	
#include <unistd.h>	<unistd.h>	
#include <stddef.h>	<stddef.h>	
#define FISH_PARSER_H	FISH_PARSER_H	
#ifndef FISH_PARSER_H	FISH_PARSER_H	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""lru.h"""	"""lru.h"""	
"#include ""exec.h"""	"""exec.h"""	
"#include ""env.h"""	"""env.h"""	
"#include ""common.h"""	"""common.h"""	
#include <chrono>	<chrono>	
"#include ""autoload.h"""	"""autoload.h"""	
"#include ""config.h"""	"""config.h"""	
#define _VA_LIST_DEFINED	_VA_LIST_DEFINED	
#define __pid_t_defined	__pid_t_defined	
#define WCHAR_MAX __WCHAR_MAX	WCHAR_MAX	__WCHAR_MAX
#define WCHAR_MIN __WCHAR_MIN	WCHAR_MIN	__WCHAR_MIN
#define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))	_GLIBCXX_ALWAYS_INLINE	inline __attribute__((__always_inline__))
"#include ""common.h"""	"""common.h"""	
#include <vector>	<vector>	
#include <stddef.h>	<stddef.h>	
"#define FG_MSG _(L""Send job %d, '%ls' to foreground\n"")"	FG_MSG	"_(L""Send job %d, '%ls' to foreground\n"")"
"#define BUILTIN_ERR_INVALID_SUBCMD _(L""%ls: Subcommand '%ls' is not valid\n"")"	BUILTIN_ERR_INVALID_SUBCMD	"_(L""%ls: Subcommand '%ls' is not valid\n"")"
"#define BUILTIN_ERR_MISSING_SUBCMD _(L""%ls: Expected a subcommand to follow the command\n"")"	BUILTIN_ERR_MISSING_SUBCMD	"_(L""%ls: Expected a subcommand to follow the command\n"")"
"#define BUILTIN_ERR_NOT_NUMBER _(L""%ls: Argument '%ls' is not a valid integer\n"")"	BUILTIN_ERR_NOT_NUMBER	"_(L""%ls: Argument '%ls' is not a valid integer\n"")"
"#define BUILTIN_ERR_TOO_MANY_ARGUMENTS _(L""%ls: Too many arguments\n"")"	BUILTIN_ERR_TOO_MANY_ARGUMENTS	"_(L""%ls: Too many arguments\n"")"
"#define BUILTIN_ERR_BIND_MODE _(L""%ls: mode name '%ls' is not valid. See `help identifiers`.\n"")"	BUILTIN_ERR_BIND_MODE	"_(L""%ls: mode name '%ls' is not valid. See `help identifiers`.\n"")"
"#define BUILTIN_ERR_VARNAME _(L""%ls: Variable name '%ls' is not valid. See `help identifiers`.\n"")"	BUILTIN_ERR_VARNAME	"_(L""%ls: Variable name '%ls' is not valid. See `help identifiers`.\n"")"
"#define BUILTIN_ERR_MAX_ARG_COUNT1 _(L""%ls: Expected at most %d args, got %d\n"")"	BUILTIN_ERR_MAX_ARG_COUNT1	"_(L""%ls: Expected at most %d args, got %d\n"")"
"#define BUILTIN_ERR_MIN_ARG_COUNT1 _(L""%ls: Expected at least %d args, got %d\n"")"	BUILTIN_ERR_MIN_ARG_COUNT1	"_(L""%ls: Expected at least %d args, got %d\n"")"
"#define BUILTIN_ERR_ARG_COUNT2 _(L""%ls %ls: Expected %d args, got %d\n"")"	BUILTIN_ERR_ARG_COUNT2	"_(L""%ls %ls: Expected %d args, got %d\n"")"
"#define BUILTIN_ERR_ARG_COUNT1 _(L""%ls: Expected %d args, got %d\n"")"	BUILTIN_ERR_ARG_COUNT1	"_(L""%ls: Expected %d args, got %d\n"")"
"#define BUILTIN_ERR_ARG_COUNT0 _(L""%ls: Expected an argument\n"")"	BUILTIN_ERR_ARG_COUNT0	"_(L""%ls: Expected an argument\n"")"
"#define BUILTIN_ERR_UNKNOWN _(L""%ls: Unknown option '%ls'\n"")"	BUILTIN_ERR_UNKNOWN	"_(L""%ls: Unknown option '%ls'\n"")"
"#define BUILTIN_ERR_EXPUNEXP _(L""%ls: Variable can't be both exported and unexported\n"")"	BUILTIN_ERR_EXPUNEXP	"_(L""%ls: Variable can't be both exported and unexported\n"")"
"#define BUILTIN_ERR_GLOCAL _(L""%ls: Variable scope can only be one of universal, global and local\n"")"	BUILTIN_ERR_GLOCAL	"_(L""%ls: Variable scope can only be one of universal, global and local\n"")"
"#define BUILTIN_ERR_COMBO2 _(L""%ls: Invalid combination of options,\n%ls\n"")"	BUILTIN_ERR_COMBO2	"_(L""%ls: Invalid combination of options,\n%ls\n"")"
"#define BUILTIN_ERR_COMBO _(L""%ls: Invalid combination of options\n"")"	BUILTIN_ERR_COMBO	"_(L""%ls: Invalid combination of options\n"")"
"#define BUILTIN_ERR_MISSING _(L""%ls: Expected argument for option %ls\n"")"	BUILTIN_ERR_MISSING	"_(L""%ls: Expected argument for option %ls\n"")"
"#define DEFAULT_READ_PROMPT L""set_color green; echo -n read; set_color normal; echo -n \""> \"""""	DEFAULT_READ_PROMPT	"L""set_color green; echo -n read; set_color normal; echo -n \""> \"""""
#define FISH_BUILTIN_H	FISH_BUILTIN_H	
#ifndef FISH_BUILTIN_H	FISH_BUILTIN_H	
#define __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION	__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION	
#define __need_NULL	__need_NULL	
#define __need_size_t	__need_size_t	
#define __need_size_t	__need_size_t	
#define __STRINGS_FORTIFIED 1	__STRINGS_FORTIFIED	1
#ifndef __STRINGS_FORTIFIED	__STRINGS_FORTIFIED	
#include <bits/strings_fortified.h>	<bits/strings_fortified.h>	
#include <bits/types/locale_t.h>	<bits/types/locale_t.h>	
#include <stddef.h>	<stddef.h>	
#include <features.h>	<features.h>	
#define __CORRECT_ISO_CPP_STRINGS_H_PROTO	__CORRECT_ISO_CPP_STRINGS_H_PROTO	
#define _STRINGS_H 1	_STRINGS_H	1
#ifndef _STRINGS_H	_STRINGS_H	
#if defined __cplusplus && __GNUC_PREREQ (4, 4)	defined __cplusplus && __GNUC_PREREQ (4, 4)	
#if defined __USE_MISC || !defined __USE_XOPEN2K8	defined __USE_MISC || !defined __USE_XOPEN2K8	
#ifdef __CORRECT_ISO_CPP_STRINGS_H_PROTO	__CORRECT_ISO_CPP_STRINGS_H_PROTO	
#if defined __OPTIMIZE__	defined __OPTIMIZE__	
#ifdef __CORRECT_ISO_CPP_STRINGS_H_PROTO	__CORRECT_ISO_CPP_STRINGS_H_PROTO	
#if defined __OPTIMIZE__	defined __OPTIMIZE__	
#if defined __USE_MISC || !defined __USE_XOPEN2K8 || defined __USE_XOPEN2K8XSI	defined __USE_MISC || !defined __USE_XOPEN2K8 || defined __USE_XOPEN2K8XSI	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
#if __GNUC_PREREQ (3,4) && __USE_FORTIFY_LEVEL > 0 \	__GNUC_PREREQ (3,4) && __USE_FORTIFY_LEVEL > 0 \	
#if defined __USE_MISC || !defined __USE_XOPEN2K8	defined __USE_MISC || !defined __USE_XOPEN2K8	
#include <bits/strings_fortified.h>	<bits/strings_fortified.h>	
#define _BITS_STRING_FORTIFIED_H 1	_BITS_STRING_FORTIFIED_H	1
#ifndef _BITS_STRING_FORTIFIED_H	_BITS_STRING_FORTIFIED_H	
#ifndef _STRING_H	_STRING_H	
#if !__GNUC_PREREQ (5,0)	!__GNUC_PREREQ (5,0)	
#ifdef __USE_GNU	__USE_GNU	
#if !__GNUC_PREREQ (5,0)	!__GNUC_PREREQ (5,0)	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_GNU	__USE_GNU	
#define _STRING_H 1	_STRING_H	1
#include <bits/string_fortified.h>	<bits/string_fortified.h>	
#include <strings.h>	<strings.h>	
#include <bits/types/locale_t.h>	<bits/types/locale_t.h>	
#include <stddef.h>	<stddef.h>	
#include <bits/libc-header-start.h>	<bits/libc-header-start.h>	
#define strndupa(s,n) (__extension__ ({ const char *__old = (s); size_t __len = strnlen (__old, (n)); char *__new = (char *) __builtin_alloca (__len + 1); __new[__len] = '\0'; (char *) memcpy (__new, __old, __len); }))	strndupa(s,n)	(__extension__ ({ const char *__old = (s); size_t __len = strnlen (__old, (n)); char *__new = (char *) __builtin_alloca (__len + 1); __new[__len] = '\0'; (char *) memcpy (__new, __old, __len); }))
#define strdupa(s) (__extension__ ({ const char *__old = (s); size_t __len = strlen (__old) + 1; char *__new = (char *) __builtin_alloca (__len); (char *) memcpy (__new, __old, __len); }))	strdupa(s)	(__extension__ ({ const char *__old = (s); size_t __len = strlen (__old) + 1; char *__new = (char *) __builtin_alloca (__len); (char *) memcpy (__new, __old, __len); }))
#define __CORRECT_ISO_CPP_STRING_H_PROTO	__CORRECT_ISO_CPP_STRING_H_PROTO	
#ifndef _STRING_H	_STRING_H	
#if defined __cplusplus && __GNUC_PREREQ (4, 4)	defined __cplusplus && __GNUC_PREREQ (4, 4)	
#if defined __USE_MISC || defined __USE_XOPEN	defined __USE_MISC || defined __USE_XOPEN	
#ifdef __CORRECT_ISO_CPP_STRING_H_PROTO	__CORRECT_ISO_CPP_STRING_H_PROTO	
#ifdef __OPTIMIZE__	__OPTIMIZE__	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __CORRECT_ISO_CPP_STRING_H_PROTO	__CORRECT_ISO_CPP_STRING_H_PROTO	
#ifdef __CORRECT_ISO_CPP_STRING_H_PROTO	__CORRECT_ISO_CPP_STRING_H_PROTO	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
"#if (defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	\"	"(defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K8	\"	
#if defined __USE_XOPEN2K8 || __GLIBC_USE (LIB_EXT2)	defined __USE_XOPEN2K8 || __GLIBC_USE (LIB_EXT2)	
#if defined __USE_GNU && defined __GNUC__	defined __USE_GNU && defined __GNUC__	
#ifdef __CORRECT_ISO_CPP_STRING_H_PROTO	__CORRECT_ISO_CPP_STRING_H_PROTO	
#ifdef __OPTIMIZE__	__OPTIMIZE__	
#ifdef __CORRECT_ISO_CPP_STRING_H_PROTO	__CORRECT_ISO_CPP_STRING_H_PROTO	
#ifdef __OPTIMIZE__	__OPTIMIZE__	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __CORRECT_ISO_CPP_STRING_H_PROTO	__CORRECT_ISO_CPP_STRING_H_PROTO	
#ifdef __CORRECT_ISO_CPP_STRING_H_PROTO	__CORRECT_ISO_CPP_STRING_H_PROTO	
#ifdef __OPTIMIZE__	__OPTIMIZE__	
#ifdef __CORRECT_ISO_CPP_STRING_H_PROTO	__CORRECT_ISO_CPP_STRING_H_PROTO	
#ifdef __OPTIMIZE__	__OPTIMIZE__	
#ifdef __USE_POSIX	__USE_POSIX	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __CORRECT_ISO_CPP_STRING_H_PROTO	__CORRECT_ISO_CPP_STRING_H_PROTO	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
#ifdef __USE_XOPEN2K	__USE_XOPEN2K	
#if defined __USE_XOPEN2K && !defined __USE_GNU	defined __USE_XOPEN2K && !defined __USE_GNU	
#ifdef __REDIRECT_NTH	__REDIRECT_NTH	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
#ifdef __USE_GNU	__USE_GNU	
#ifndef basename	basename	
#ifdef __CORRECT_ISO_CPP_STRING_H_PROTO	__CORRECT_ISO_CPP_STRING_H_PROTO	
#if __GNUC_PREREQ (3,4)	__GNUC_PREREQ (3,4)	
#if __USE_FORTIFY_LEVEL > 0 && defined __fortify_function	__USE_FORTIFY_LEVEL > 0 && defined __fortify_function	
#include <string.h>	<string.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#undef strxfrm	strxfrm	
#undef strtok	strtok	
#undef strstr	strstr	
#undef strspn	strspn	
#undef strrchr	strrchr	
#undef strpbrk	strpbrk	
#undef strncpy	strncpy	
#undef strncmp	strncmp	
#undef strncat	strncat	
#undef strlen	strlen	
#undef strerror	strerror	
#undef strcspn	strcspn	
#undef strcpy	strcpy	
#undef strcoll	strcoll	
#undef strcmp	strcmp	
#undef strchr	strchr	
#undef strcat	strcat	
#undef memset	memset	
#undef memmove	memmove	
#undef memcpy	memcpy	
#undef memcmp	memcmp	
#undef memchr	memchr	
#define _GLIBCXX_CSTRING 1	_GLIBCXX_CSTRING	1
#pragma GCC system_header	GCC system_header	
#ifndef _GLIBCXX_CSTRING	_GLIBCXX_CSTRING	
#ifndef __CORRECT_ISO_CPP_STRING_H_PROTO	__CORRECT_ISO_CPP_STRING_H_PROTO	
#define FISH_BUILTIN_ARGPARSE_H	FISH_BUILTIN_ARGPARSE_H	
#ifndef FISH_BUILTIN_ARGPARSE_H	FISH_BUILTIN_ARGPARSE_H	
#define FISH_BUILTIN_BG_H	FISH_BUILTIN_BG_H	
#ifndef FISH_BUILTIN_BG_H	FISH_BUILTIN_BG_H	
#include <bits/uses_allocator.h>	<bits/uses_allocator.h>	
#include <debug/debug.h>	<debug/debug.h>	
#include <bits/concept_check.h>	<bits/concept_check.h>	
#define _STL_QUEUE_H 1	_STL_QUEUE_H	1
#ifndef _STL_QUEUE_H	_STL_QUEUE_H	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_CONCEPT_CHECKS	_GLIBCXX_CONCEPT_CHECKS	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201402L || !defined(__STRICT_ANSI__)	__cplusplus > 201402L || !defined(__STRICT_ANSI__)	
#if __cpp_deduction_guides >= 201606	__cpp_deduction_guides >= 201606	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201402L || !defined(__STRICT_ANSI__)	__cplusplus > 201402L || !defined(__STRICT_ANSI__)	
#ifdef _GLIBCXX_CONCEPT_CHECKS	_GLIBCXX_CONCEPT_CHECKS	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201402L || !defined(__STRICT_ANSI__)	__cplusplus > 201402L || !defined(__STRICT_ANSI__)	
#if __cpp_deduction_guides >= 201606	__cpp_deduction_guides >= 201606	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201402L || !defined(__STRICT_ANSI__)	__cplusplus > 201402L || !defined(__STRICT_ANSI__)	
#include <bits/stl_queue.h>	<bits/stl_queue.h>	
#include <bits/stl_function.h>	<bits/stl_function.h>	
#include <bits/stl_heap.h>	<bits/stl_heap.h>	
#include <vector>	<vector>	
#include <deque>	<deque>	
#define _GLIBCXX_QUEUE 1	_GLIBCXX_QUEUE	1
#ifndef _GLIBCXX_QUEUE	_GLIBCXX_QUEUE	
#pragma GCC system_header	GCC system_header	
"#include ""maybe.h"""	"""maybe.h"""	
"#include ""common.h"""	"""common.h"""	
#include <queue>	<queue>	
#include <stddef.h>	<stddef.h>	
#define INPUT_COMMON_H	INPUT_COMMON_H	
#ifndef INPUT_COMMON_H	INPUT_COMMON_H	
"#include ""input_common.h"""	"""input_common.h"""	
"#include ""common.h"""	"""common.h"""	
#include <vector>	<vector>	
#include <stddef.h>	<stddef.h>	
"#define DEFAULT_BIND_MODE L""default"""	DEFAULT_BIND_MODE	"L""default"""
"#define FISH_BIND_MODE_VAR L""fish_bind_mode"""	FISH_BIND_MODE_VAR	"L""fish_bind_mode"""
#define FISH_INPUT_H	FISH_INPUT_H	
#ifndef FISH_INPUT_H	FISH_INPUT_H	
"#include ""input.h"""	"""input.h"""	
"#include ""common.h"""	"""common.h"""	
#define FISH_BUILTIN_BIND_H	FISH_BUILTIN_BIND_H	
#ifndef FISH_BUILTIN_BIND_H	FISH_BUILTIN_BIND_H	
#define FISH_BUILTIN_BLOCK_H	FISH_BUILTIN_BLOCK_H	
#ifndef FISH_BUILTIN_BLOCK_H	FISH_BUILTIN_BLOCK_H	
#define FISH_BUILTIN_BUILTIN_H	FISH_BUILTIN_BUILTIN_H	
#ifndef FISH_BUILTIN_BUILTIN_H	FISH_BUILTIN_BUILTIN_H	
#define FISH_BUILTIN_CD_H	FISH_BUILTIN_CD_H	
#ifndef FISH_BUILTIN_CD_H	FISH_BUILTIN_CD_H	
#define FISH_BUILTIN_COMMAND_H	FISH_BUILTIN_COMMAND_H	
#ifndef FISH_BUILTIN_COMMAND_H	FISH_BUILTIN_COMMAND_H	
#include <cwchar>	<cwchar>	
#include <cstring>	<cstring>	
#define FISH_BUILTIN_COMMANDLINE_H	FISH_BUILTIN_COMMANDLINE_H	
#ifndef FISH_BUILTIN_COMMANDLINE_H	FISH_BUILTIN_COMMANDLINE_H	
#include <cwchar>	<cwchar>	
#include <cstring>	<cstring>	
#define FISH_BUILTIN_COMPLETE_H	FISH_BUILTIN_COMPLETE_H	
#ifndef FISH_BUILTIN_COMPLETE_H	FISH_BUILTIN_COMPLETE_H	
#define FISH_BUILTIN_CONTAINS_H	FISH_BUILTIN_CONTAINS_H	
#ifndef FISH_BUILTIN_CONTAINS_H	FISH_BUILTIN_CONTAINS_H	
#define FISH_BUILTIN_DISOWN_H	FISH_BUILTIN_DISOWN_H	
#ifndef FISH_BUILTIN_DISOWN_H	FISH_BUILTIN_DISOWN_H	
#define FISH_BUILTIN_ECHO_H	FISH_BUILTIN_ECHO_H	
#ifndef FISH_BUILTIN_ECHO_H	FISH_BUILTIN_ECHO_H	
#define FISH_BUILTIN_EMIT_H	FISH_BUILTIN_EMIT_H	
#ifndef FISH_BUILTIN_EMIT_H	FISH_BUILTIN_EMIT_H	
#define FISH_BUILTIN_EVAL_H	FISH_BUILTIN_EVAL_H	
#ifndef FISH_BUILTIN_EVAL_H	FISH_BUILTIN_EVAL_H	
#define FISH_BUILTIN_EXIT_H	FISH_BUILTIN_EXIT_H	
#ifndef FISH_BUILTIN_EXIT_H	FISH_BUILTIN_EXIT_H	
#define FISH_BUILTIN_FG_H	FISH_BUILTIN_FG_H	
#ifndef FISH_BUILTIN_FG_H	FISH_BUILTIN_FG_H	
#define FISH_BUILTIN_FUNCTIONS_H	FISH_BUILTIN_FUNCTIONS_H	
#ifndef FISH_BUILTIN_FUNCTIONS_H	FISH_BUILTIN_FUNCTIONS_H	
#define FISH_BUILTIN_HISTORY_H	FISH_BUILTIN_HISTORY_H	
#ifndef FISH_BUILTIN_HISTORY_H	FISH_BUILTIN_HISTORY_H	
#include <cwchar>	<cwchar>	
#include <cstring>	<cstring>	
#define FISH_BUILTIN_JOBS_H	FISH_BUILTIN_JOBS_H	
#ifndef FISH_BUILTIN_JOBS_H	FISH_BUILTIN_JOBS_H	
#define FISH_BUILTIN_MATH_H	FISH_BUILTIN_MATH_H	
#ifndef FISH_BUILTIN_MATH_H	FISH_BUILTIN_MATH_H	
#include <cwchar>	<cwchar>	
#include <cstring>	<cstring>	
#define FISH_BUILTIN_PRINTF_H	FISH_BUILTIN_PRINTF_H	
#ifndef FISH_BUILTIN_PRINTF_H	FISH_BUILTIN_PRINTF_H	
#define FISH_BUILTIN_PWD_H	FISH_BUILTIN_PWD_H	
#ifndef FISH_BUILTIN_PWD_H	FISH_BUILTIN_PWD_H	
#define FISH_BUILTIN_RANDOM_H	FISH_BUILTIN_RANDOM_H	
#ifndef FISH_BUILTIN_RANDOM_H	FISH_BUILTIN_RANDOM_H	
#define FISH_BUILTIN_READ_H	FISH_BUILTIN_READ_H	
#ifndef FISH_BUILTIN_READ_H	FISH_BUILTIN_READ_H	
#define FISH_BUILTIN_REALPATH_H	FISH_BUILTIN_REALPATH_H	
#ifndef FISH_BUILTIN_REALPATH_H	FISH_BUILTIN_REALPATH_H	
#define FISH_BUILTIN_RETURN_H	FISH_BUILTIN_RETURN_H	
#ifndef FISH_BUILTIN_RETURN_H	FISH_BUILTIN_RETURN_H	
#include <cwchar>	<cwchar>	
#include <cstring>	<cstring>	
#define FISH_BUILTIN_SET_H	FISH_BUILTIN_SET_H	
#ifndef FISH_BUILTIN_SET_H	FISH_BUILTIN_SET_H	
#include <cwchar>	<cwchar>	
#include <cstring>	<cstring>	
#define FISH_BUILTIN_SET_COLOR_H	FISH_BUILTIN_SET_COLOR_H	
#ifndef FISH_BUILTIN_SET_COLOR_H	FISH_BUILTIN_SET_COLOR_H	
#define FISH_BUILTIN_SOURCE_H	FISH_BUILTIN_SOURCE_H	
#ifndef FISH_BUILTIN_SOURCE_H	FISH_BUILTIN_SOURCE_H	
#define FISH_BUILTIN_STATUS_H	FISH_BUILTIN_STATUS_H	
#ifndef FISH_BUILTIN_STATUS_H	FISH_BUILTIN_STATUS_H	
#include <cwchar>	<cwchar>	
#include <cstring>	<cstring>	
#define FISH_BUILTIN_STRING_H	FISH_BUILTIN_STRING_H	
#ifndef FISH_BUILTIN_STRING_H	FISH_BUILTIN_STRING_H	
#define FISH_BUILTIN_TEST_H	FISH_BUILTIN_TEST_H	
#ifndef FISH_BUILTIN_TEST_H	FISH_BUILTIN_TEST_H	
#include <cwchar>	<cwchar>	
#include <cstring>	<cstring>	
#define FISH_BUILTIN_ULIMIT_H	FISH_BUILTIN_ULIMIT_H	
#ifndef FISH_BUILTIN_ULIMIT_H	FISH_BUILTIN_ULIMIT_H	
#define FISH_BUILTIN_WAIT_H	FISH_BUILTIN_WAIT_H	
#ifndef FISH_BUILTIN_WAIT_H	FISH_BUILTIN_WAIT_H	
"#include ""enum_set.h"""	"""enum_set.h"""	
"#include ""common.h"""	"""common.h"""	
#include <vector>	<vector>	
#include <functional>	<functional>	
#include <stdint.h>	<stdint.h>	
#define PROG_COMPLETE_SEP L'\t'	PROG_COMPLETE_SEP	L'\t'
#define FISH_COMPLETE_H	FISH_COMPLETE_H	
#ifndef FISH_COMPLETE_H	FISH_COMPLETE_H	
#define FISH_INTERN_H	FISH_INTERN_H	
#ifndef FISH_INTERN_H	FISH_INTERN_H	
"#include ""tokenizer.h"""	"""tokenizer.h"""	
"#include ""parse_tree.h"""	"""parse_tree.h"""	
"#include ""common.h"""	"""common.h"""	
#include <vector>	<vector>	
#include <stddef.h>	<stddef.h>	
#define FISH_PARSE_UTIL_H	FISH_PARSE_UTIL_H	
#ifndef FISH_PARSE_UTIL_H	FISH_PARSE_UTIL_H	
"#include ""common.h"""	"""common.h"""	
#include <string>	<string>	
#include <cstring>	<cstring>	
#define FISH_COLOR_H	FISH_COLOR_H	
#ifndef FISH_COLOR_H	FISH_COLOR_H	
"#include ""env.h"""	"""env.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""color.h"""	"""color.h"""	
#include <vector>	<vector>	
#include <stdint.h>	<stdint.h>	
#include <stddef.h>	<stddef.h>	
#define FISH_HIGHLIGHT_H	FISH_HIGHLIGHT_H	
#ifndef FISH_HIGHLIGHT_H	FISH_HIGHLIGHT_H	
"#include ""parse_constants.h"""	"""parse_constants.h"""	
"#include ""highlight.h"""	"""highlight.h"""	
"#include ""complete.h"""	"""complete.h"""	
"#include ""common.h"""	"""common.h"""	
#include <vector>	<vector>	
#include <string>	<string>	
#include <stddef.h>	<stddef.h>	
#define FISH_READER_H	FISH_READER_H	
#ifndef FISH_READER_H	FISH_READER_H	
#include <stddef.h>	<stddef.h>	
#define optional_argument 2	optional_argument	2
#define required_argument 1	required_argument	1
#define no_argument 0	no_argument	0
#define FISH_WGETOPT_H	FISH_WGETOPT_H	
#ifndef FISH_WGETOPT_H	FISH_WGETOPT_H	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wgetopt.h"""	"""wgetopt.h"""	
"#include ""reader.h"""	"""reader.h"""	
"#include ""proc.h"""	"""proc.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""parse_util.h"""	"""parse_util.h"""	
"#include ""parse_constants.h"""	"""parse_constants.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""intern.h"""	"""intern.h"""	
"#include ""flog.h"""	"""flog.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""exec.h"""	"""exec.h"""	
"#include ""complete.h"""	"""complete.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin_wait.h"""	"""builtin_wait.h"""	
"#include ""builtin_ulimit.h"""	"""builtin_ulimit.h"""	
"#include ""builtin_test.h"""	"""builtin_test.h"""	
"#include ""builtin_string.h"""	"""builtin_string.h"""	
"#include ""builtin_status.h"""	"""builtin_status.h"""	
"#include ""builtin_source.h"""	"""builtin_source.h"""	
"#include ""builtin_set_color.h"""	"""builtin_set_color.h"""	
"#include ""builtin_set.h"""	"""builtin_set.h"""	
"#include ""builtin_return.h"""	"""builtin_return.h"""	
"#include ""builtin_realpath.h"""	"""builtin_realpath.h"""	
"#include ""builtin_read.h"""	"""builtin_read.h"""	
"#include ""builtin_random.h"""	"""builtin_random.h"""	
"#include ""builtin_pwd.h"""	"""builtin_pwd.h"""	
"#include ""builtin_printf.h"""	"""builtin_printf.h"""	
"#include ""builtin_math.h"""	"""builtin_math.h"""	
"#include ""builtin_jobs.h"""	"""builtin_jobs.h"""	
"#include ""builtin_history.h"""	"""builtin_history.h"""	
"#include ""builtin_functions.h"""	"""builtin_functions.h"""	
"#include ""builtin_fg.h"""	"""builtin_fg.h"""	
"#include ""builtin_exit.h"""	"""builtin_exit.h"""	
"#include ""builtin_eval.h"""	"""builtin_eval.h"""	
"#include ""builtin_emit.h"""	"""builtin_emit.h"""	
"#include ""builtin_echo.h"""	"""builtin_echo.h"""	
"#include ""builtin_disown.h"""	"""builtin_disown.h"""	
"#include ""builtin_contains.h"""	"""builtin_contains.h"""	
"#include ""builtin_complete.h"""	"""builtin_complete.h"""	
"#include ""builtin_commandline.h"""	"""builtin_commandline.h"""	
"#include ""builtin_command.h"""	"""builtin_command.h"""	
"#include ""builtin_cd.h"""	"""builtin_cd.h"""	
"#include ""builtin_builtin.h"""	"""builtin_builtin.h"""	
"#include ""builtin_block.h"""	"""builtin_block.h"""	
"#include ""builtin_bind.h"""	"""builtin_bind.h"""	
"#include ""builtin_bg.h"""	"""builtin_bg.h"""	
"#include ""builtin_argparse.h"""	"""builtin_argparse.h"""	
#include <string>	<string>	
#include <memory>	<memory>	
#include <cwchar>	<cwchar>	
#include <cstring>	<cstring>	
#include <cstdlib>	<cstdlib>	
#include <cerrno>	<cerrno>	
#include <algorithm>	<algorithm>	
#include <unistd.h>	<unistd.h>	
"#include ""builtin.h"""	"""builtin.h"""	
"#include ""config.h"""	"""config.h"""	
#define BUILTIN_COUNT (sizeof builtin_datas / sizeof *builtin_datas)	BUILTIN_COUNT	(sizeof builtin_datas / sizeof *builtin_datas)
#define COUNT_CHUNK_SIZE (512 * 256)	COUNT_CHUNK_SIZE	(512 * 256)
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wgetopt.h"""	"""wgetopt.h"""	
"#include ""wcstringutil.h"""	"""wcstringutil.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""exec.h"""	"""exec.h"""	
"#include ""env.h"""	"""env.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
#include <vector>	<vector>	
#include <utility>	<utility>	
#include <unordered_map>	<unordered_map>	
#include <string>	<string>	
#include <memory>	<memory>	
#include <cwchar>	<cwchar>	
#include <cstdint>	<cstdint>	
#include <cstddef>	<cstddef>	
#include <cerrno>	<cerrno>	
#include <algorithm>	<algorithm>	
"#include ""builtin_argparse.h"""	"""builtin_argparse.h"""	
"#include ""config.h"""	"""config.h"""	
"#define BUILTIN_ERR_INVALID_OPT_SPEC _(L""%ls: Invalid option spec '%ls' at char '%lc'\n"")"	BUILTIN_ERR_INVALID_OPT_SPEC	"_(L""%ls: Invalid option spec '%ls' at char '%lc'\n"")"
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""proc.h"""	"""proc.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
#include <vector>	<vector>	
#include <memory>	<memory>	
#include <cstdlib>	<cstdlib>	
#include <cerrno>	<cerrno>	
"#include ""builtin_bg.h"""	"""builtin_bg.h"""	
"#include ""config.h"""	"""config.h"""	
#include <stddef.h>	<stddef.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#undef __need_wint_t	__need_wint_t	
#undef __need_NULL	__need_NULL	
#undef __need_size_t	__need_size_t	
#undef __need_ptrdiff_t	__need_ptrdiff_t	
#undef __need_wchar_t	__need_wchar_t	
#define _GLIBCXX_CSTDDEF 1	_GLIBCXX_CSTDDEF	1
#ifndef _GLIBCXX_CSTDDEF	_GLIBCXX_CSTDDEF	
#pragma GCC system_header	GCC system_header	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#ifdef _GLIBCXX_USE_CHAR8_T	_GLIBCXX_USE_CHAR8_T	
#if defined(__GLIBCXX_TYPE_INT_N_0)	defined(__GLIBCXX_TYPE_INT_N_0)	
#if defined(__GLIBCXX_TYPE_INT_N_1)	defined(__GLIBCXX_TYPE_INT_N_1)	
#if defined(__GLIBCXX_TYPE_INT_N_2)	defined(__GLIBCXX_TYPE_INT_N_2)	
#include <initializer_list>	<initializer_list>	
#include <bits/concept_check.h>	<bits/concept_check.h>	
#define _STL_SET_H 1	_STL_SET_H	1
#ifndef _STL_SET_H	_STL_SET_H	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_CONCEPT_CHECKS	_GLIBCXX_CONCEPT_CHECKS	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef __STRICT_ANSI__	__STRICT_ANSI__	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus > 201703L	__cplusplus > 201703L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cpp_deduction_guides >= 201606	__cpp_deduction_guides >= 201606	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#include <initializer_list>	<initializer_list>	
#include <bits/concept_check.h>	<bits/concept_check.h>	
#define _STL_MULTISET_H 1	_STL_MULTISET_H	1
#ifndef _STL_MULTISET_H	_STL_MULTISET_H	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_CONCEPT_CHECKS	_GLIBCXX_CONCEPT_CHECKS	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef __STRICT_ANSI__	__STRICT_ANSI__	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus > 201703L	__cplusplus > 201703L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cplusplus > 201103L	__cplusplus > 201103L	
#if __cpp_deduction_guides >= 201606	__cpp_deduction_guides >= 201606	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#include <bits/erase_if.h>	<bits/erase_if.h>	
#include <bits/range_access.h>	<bits/range_access.h>	
#include <bits/stl_multiset.h>	<bits/stl_multiset.h>	
#include <bits/stl_set.h>	<bits/stl_set.h>	
#include <bits/stl_tree.h>	<bits/stl_tree.h>	
#define _GLIBCXX_SET 1	_GLIBCXX_SET	1
#ifndef _GLIBCXX_SET	_GLIBCXX_SET	
#pragma GCC system_header	GCC system_header	
#ifdef _GLIBCXX_DEBUG	_GLIBCXX_DEBUG	
#ifdef _GLIBCXX_PROFILE	_GLIBCXX_PROFILE	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus > 201703L	__cplusplus > 201703L	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wgetopt.h"""	"""wgetopt.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""input.h"""	"""input.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
#include <vector>	<vector>	
#include <string>	<string>	
#include <set>	<set>	
#include <memory>	<memory>	
#include <cstddef>	<cstddef>	
#include <cerrno>	<cerrno>	
"#include ""builtin_bind.h"""	"""builtin_bind.h"""	
"#include ""config.h"""	"""config.h"""	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wgetopt.h"""	"""wgetopt.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""event.h"""	"""event.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
#include <cstddef>	<cstddef>	
"#include ""builtin_block.h"""	"""builtin_block.h"""	
"#include ""config.h"""	"""config.h"""	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wgetopt.h"""	"""wgetopt.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin_builtin.h"""	"""builtin_builtin.h"""	
#include <string>	<string>	
#include <cstddef>	<cstddef>	
#include <algorithm>	<algorithm>	
"#include ""builtin.h"""	"""builtin.h"""	
"#include ""config.h"""	"""config.h"""	
#define __need_size_t	__need_size_t	
#include <stddef.h>	<stddef.h>	
#define __iovec_defined 1	__iovec_defined	1
#ifndef __iovec_defined	__iovec_defined	
#define FALLOC_FL_UNSHARE_RANGE 0x40	FALLOC_FL_UNSHARE_RANGE	0x40
#define FALLOC_FL_INSERT_RANGE 0x20	FALLOC_FL_INSERT_RANGE	0x20
#define FALLOC_FL_ZERO_RANGE 0x10	FALLOC_FL_ZERO_RANGE	0x10
#define FALLOC_FL_COLLAPSE_RANGE 0x08	FALLOC_FL_COLLAPSE_RANGE	0x08
#define FALLOC_FL_NO_HIDE_STALE 0x04	FALLOC_FL_NO_HIDE_STALE	0x04
#define FALLOC_FL_PUNCH_HOLE 0x02	FALLOC_FL_PUNCH_HOLE	0x02
#define FALLOC_FL_KEEP_SIZE 0x01	FALLOC_FL_KEEP_SIZE	0x01
#define _FALLOC_H_	_FALLOC_H_	
#ifndef _FALLOC_H_	_FALLOC_H_	
#include <linux/falloc.h>	<linux/falloc.h>	
#include <bits/types/struct_iovec.h>	<bits/types/struct_iovec.h>	
#define AT_EACCESS 0x200	AT_EACCESS	0x200
#define AT_STATX_DONT_SYNC 0x4000	AT_STATX_DONT_SYNC	0x4000
#define AT_STATX_FORCE_SYNC 0x2000	AT_STATX_FORCE_SYNC	0x2000
#define AT_STATX_SYNC_AS_STAT 0x0000	AT_STATX_SYNC_AS_STAT	0x0000
#define AT_STATX_SYNC_TYPE 0x6000	AT_STATX_SYNC_TYPE	0x6000
#define AT_EMPTY_PATH 0x1000	AT_EMPTY_PATH	0x1000
#define AT_NO_AUTOMOUNT 0x800	AT_NO_AUTOMOUNT	0x800
#define AT_SYMLINK_FOLLOW 0x400	AT_SYMLINK_FOLLOW	0x400
#define AT_REMOVEDIR 0x200	AT_REMOVEDIR	0x200
#define AT_SYMLINK_NOFOLLOW 0x100	AT_SYMLINK_NOFOLLOW	0x100
#define AT_FDCWD -100	AT_FDCWD	-100
#define MAX_HANDLE_SZ 128	MAX_HANDLE_SZ	128
#define SPLICE_F_GIFT 8	SPLICE_F_GIFT	8
#define SPLICE_F_MORE 4	SPLICE_F_MORE	4
#define SPLICE_F_NONBLOCK 2	SPLICE_F_NONBLOCK	2
#define SPLICE_F_MOVE 1	SPLICE_F_MOVE	1
#define SYNC_FILE_RANGE_WAIT_AFTER 4	SYNC_FILE_RANGE_WAIT_AFTER	4
#define SYNC_FILE_RANGE_WRITE 2	SYNC_FILE_RANGE_WRITE	2
#define SYNC_FILE_RANGE_WAIT_BEFORE 1	SYNC_FILE_RANGE_WAIT_BEFORE	1
#define POSIX_FADV_NOREUSE __POSIX_FADV_NOREUSE	POSIX_FADV_NOREUSE	__POSIX_FADV_NOREUSE
#define POSIX_FADV_DONTNEED __POSIX_FADV_DONTNEED	POSIX_FADV_DONTNEED	__POSIX_FADV_DONTNEED
#define POSIX_FADV_WILLNEED 3	POSIX_FADV_WILLNEED	3
#define POSIX_FADV_SEQUENTIAL 2	POSIX_FADV_SEQUENTIAL	2
#define POSIX_FADV_RANDOM 1	POSIX_FADV_RANDOM	1
#define POSIX_FADV_NORMAL 0	POSIX_FADV_NORMAL	0
#define __POSIX_FADV_NOREUSE 5	__POSIX_FADV_NOREUSE	5
#define __POSIX_FADV_DONTNEED 4	__POSIX_FADV_DONTNEED	4
#define FNDELAY O_NDELAY	FNDELAY	O_NDELAY
#define FNONBLOCK O_NONBLOCK	FNONBLOCK	O_NONBLOCK
#define FASYNC O_ASYNC	FASYNC	O_ASYNC
#define FFSYNC O_FSYNC	FFSYNC	O_FSYNC
#define FAPPEND O_APPEND	FAPPEND	O_APPEND
#define RWH_WRITE_LIFE_EXTREME 5	RWH_WRITE_LIFE_EXTREME	5
#define RWH_WRITE_LIFE_LONG 4	RWH_WRITE_LIFE_LONG	4
#define RWH_WRITE_LIFE_MEDIUM 3	RWH_WRITE_LIFE_MEDIUM	3
#define RWH_WRITE_LIFE_SHORT 2	RWH_WRITE_LIFE_SHORT	2
#define RWH_WRITE_LIFE_NONE 1	RWH_WRITE_LIFE_NONE	1
#define RWF_WRITE_LIFE_NOT_SET 0	RWF_WRITE_LIFE_NOT_SET	0
#define F_SEAL_FUTURE_WRITE 0x0010	F_SEAL_FUTURE_WRITE	0x0010
#define F_SEAL_WRITE 0x0008	F_SEAL_WRITE	0x0008
#define F_SEAL_GROW 0x0004	F_SEAL_GROW	0x0004
#define F_SEAL_SHRINK 0x0002	F_SEAL_SHRINK	0x0002
#define F_SEAL_SEAL 0x0001	F_SEAL_SEAL	0x0001
#define DN_MULTISHOT 0x80000000	DN_MULTISHOT	0x80000000
#define DN_ATTRIB 0x00000020	DN_ATTRIB	0x00000020
#define DN_RENAME 0x00000010	DN_RENAME	0x00000010
#define DN_DELETE 0x00000008	DN_DELETE	0x00000008
#define DN_CREATE 0x00000004	DN_CREATE	0x00000004
#define DN_MODIFY 0x00000002	DN_MODIFY	0x00000002
#define DN_ACCESS 0x00000001	DN_ACCESS	0x00000001
#define LOCK_RW 192	LOCK_RW	192
#define LOCK_WRITE 128	LOCK_WRITE	128
#define LOCK_READ 64	LOCK_READ	64
#define LOCK_MAND 32	LOCK_MAND	32
#define LOCK_UN 8	LOCK_UN	8
#define LOCK_NB 4	LOCK_NB	4
#define LOCK_EX 2	LOCK_EX	2
#define LOCK_SH 1	LOCK_SH	1
#define F_SHLCK 8	F_SHLCK	8
#define F_EXLCK 4	F_EXLCK	4
#define F_UNLCK 2	F_UNLCK	2
#define F_WRLCK 1	F_WRLCK	1
#define F_RDLCK 0	F_RDLCK	0
#define FD_CLOEXEC 1	FD_CLOEXEC	1
#define F_DUPFD_CLOEXEC 1030	F_DUPFD_CLOEXEC	1030
#define F_SET_FILE_RW_HINT 1038	F_SET_FILE_RW_HINT	1038
#define F_GET_FILE_RW_HINT 1037	F_GET_FILE_RW_HINT	1037
#define F_SET_RW_HINT 1036	F_SET_RW_HINT	1036
#define F_GET_RW_HINT 1035	F_GET_RW_HINT	1035
#define F_GET_SEALS 1034	F_GET_SEALS	1034
#define F_ADD_SEALS 1033	F_ADD_SEALS	1033
#define F_GETPIPE_SZ 1032	F_GETPIPE_SZ	1032
#define F_SETPIPE_SZ 1031	F_SETPIPE_SZ	1031
#define F_NOTIFY 1026	F_NOTIFY	1026
#define F_GETLEASE 1025	F_GETLEASE	1025
#define F_SETLEASE 1024	F_SETLEASE	1024
#define F_GETOWN_EX __F_GETOWN_EX	F_GETOWN_EX	__F_GETOWN_EX
#define F_SETOWN_EX __F_SETOWN_EX	F_SETOWN_EX	__F_SETOWN_EX
#define F_GETSIG __F_GETSIG	F_GETSIG	__F_GETSIG
#define F_SETSIG __F_SETSIG	F_SETSIG	__F_SETSIG
#define __F_GETOWN_EX 16	__F_GETOWN_EX	16
#define __F_SETOWN_EX 15	__F_SETOWN_EX	15
#define __F_GETSIG 11	__F_GETSIG	11
#define __F_SETSIG 10	__F_SETSIG	10
#define F_GETOWN __F_GETOWN	F_GETOWN	__F_GETOWN
#define F_SETOWN __F_SETOWN	F_SETOWN	__F_SETOWN
#define __F_GETOWN 9	__F_GETOWN	9
#define __F_SETOWN 8	__F_SETOWN	8
#define F_SETFL 4	F_SETFL	4
#define F_GETFL 3	F_GETFL	3
#define F_SETFD 2	F_SETFD	2
#define F_GETFD 1	F_GETFD	1
#define F_DUPFD 0	F_DUPFD	0
#define O_RSYNC O_SYNC	O_RSYNC	O_SYNC
#define O_DSYNC __O_DSYNC	O_DSYNC	__O_DSYNC
#define O_TMPFILE __O_TMPFILE	O_TMPFILE	__O_TMPFILE
#define O_PATH __O_PATH	O_PATH	__O_PATH
#define O_NOATIME __O_NOATIME	O_NOATIME	__O_NOATIME
#define O_DIRECT __O_DIRECT	O_DIRECT	__O_DIRECT
#define O_CLOEXEC __O_CLOEXEC	O_CLOEXEC	__O_CLOEXEC
#define O_NOFOLLOW __O_NOFOLLOW	O_NOFOLLOW	__O_NOFOLLOW
#define O_DIRECTORY __O_DIRECTORY	O_DIRECTORY	__O_DIRECTORY
#define O_LARGEFILE __O_LARGEFILE	O_LARGEFILE	__O_LARGEFILE
#define F_OFD_SETLKW 38	F_OFD_SETLKW	38
#define F_OFD_SETLK 37	F_OFD_SETLK	37
#define F_OFD_GETLK 36	F_OFD_GETLK	36
#define F_SETLKW 7	F_SETLKW	7
#define F_SETLK 6	F_SETLK	6
#define F_GETLK 5	F_GETLK	5
#define __O_TMPFILE (020000000 | __O_DIRECTORY)	__O_TMPFILE	(020000000 | __O_DIRECTORY)
#define __O_DSYNC 010000	__O_DSYNC	010000
#define __O_PATH 010000000	__O_PATH	010000000
#define __O_NOATIME 01000000	__O_NOATIME	01000000
#define __O_DIRECT 040000	__O_DIRECT	040000
#define __O_CLOEXEC 02000000	__O_CLOEXEC	02000000
#define __O_NOFOLLOW 0400000	__O_NOFOLLOW	0400000
#define __O_DIRECTORY 0200000	__O_DIRECTORY	0200000
#define O_ASYNC 020000	O_ASYNC	020000
#define O_FSYNC O_SYNC	O_FSYNC	O_SYNC
#define O_SYNC 04010000	O_SYNC	04010000
#define O_NDELAY O_NONBLOCK	O_NDELAY	O_NONBLOCK
#define O_NONBLOCK 04000	O_NONBLOCK	04000
#define O_APPEND 02000	O_APPEND	02000
#define O_TRUNC 01000	O_TRUNC	01000
#define O_NOCTTY 0400	O_NOCTTY	0400
#define O_EXCL 0200	O_EXCL	0200
#define O_CREAT 0100	O_CREAT	0100
#define O_RDWR 02	O_RDWR	02
#define O_WRONLY 01	O_WRONLY	01
#define O_RDONLY 00	O_RDONLY	00
#define O_ACCMODE 0003	O_ACCMODE	0003
#ifndef _FCNTL_H	_FCNTL_H	
#ifdef __USE_GNU	__USE_GNU	
#ifndef O_CREAT	O_CREAT	
#ifndef O_EXCL	O_EXCL	
#ifndef O_NOCTTY	O_NOCTTY	
#ifndef O_TRUNC	O_TRUNC	
#ifndef O_APPEND	O_APPEND	
#ifndef O_NONBLOCK	O_NONBLOCK	
#ifndef O_NDELAY	O_NDELAY	
#ifndef O_SYNC	O_SYNC	
#ifndef O_ASYNC	O_ASYNC	
#ifndef __O_LARGEFILE	__O_LARGEFILE	
#ifndef __O_DIRECTORY	__O_DIRECTORY	
#ifndef __O_NOFOLLOW	__O_NOFOLLOW	
#ifndef __O_CLOEXEC	__O_CLOEXEC	
#ifndef __O_DIRECT	__O_DIRECT	
#ifndef __O_NOATIME	__O_NOATIME	
#ifndef __O_PATH	__O_PATH	
#ifndef __O_DSYNC	__O_DSYNC	
#ifndef __O_TMPFILE	__O_TMPFILE	
#ifndef F_GETLK	F_GETLK	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifndef F_GETLK64	F_GETLK64	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
#ifdef __USE_GNU	__USE_GNU	
#if defined __USE_POSIX199309 || defined __USE_UNIX98	defined __USE_POSIX199309 || defined __USE_UNIX98	
#if defined __O_RSYNC	defined __O_RSYNC	
#ifndef __F_SETOWN	__F_SETOWN	
#if defined __USE_UNIX98 || defined __USE_XOPEN2K8	defined __USE_UNIX98 || defined __USE_XOPEN2K8	
#ifndef __F_SETSIG	__F_SETSIG	
#ifndef __F_SETOWN_EX	__F_SETOWN_EX	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
#ifndef F_RDLCK	F_RDLCK	
#ifndef F_EXLCK	F_EXLCK	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_MISC	__USE_MISC	
#ifndef __POSIX_FADV_DONTNEED	__POSIX_FADV_DONTNEED	
#ifdef __USE_XOPEN2K	__USE_XOPEN2K	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_ATFILE	__USE_ATFILE	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_GNU	__USE_GNU	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT	__REDIRECT	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#define F_GETLK64 5	F_GETLK64	5
#define __O_LARGEFILE 0	__O_LARGEFILE	0
#define _FCNTL_H 1	_FCNTL_H	1
#include <bits/fcntl-linux.h>	<bits/fcntl-linux.h>	
#define F_SETLKW64 7	F_SETLKW64	7
#define F_SETLK64 6	F_SETLK64	6
#ifndef _FCNTL_H	_FCNTL_H	
#ifdef __x86_64__	__x86_64__	
#ifdef __x86_64__	__x86_64__	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#define UTIME_OMIT ((1l << 30) - 2l)	UTIME_OMIT	((1l << 30) - 2l)
#define UTIME_NOW ((1l << 30) - 1l)	UTIME_NOW	((1l << 30) - 1l)
#define __S_IEXEC 0100	__S_IEXEC	0100
#define __S_IWRITE 0200	__S_IWRITE	0200
#define __S_IREAD 0400	__S_IREAD	0400
#define __S_ISVTX 01000	__S_ISVTX	01000
#define __S_ISGID 02000	__S_ISGID	02000
#define __S_ISUID 04000	__S_ISUID	04000
#define __S_TYPEISSHM(buf) ((buf)->st_mode - (buf)->st_mode)	__S_TYPEISSHM(buf)	((buf)->st_mode - (buf)->st_mode)
#define __S_TYPEISSEM(buf) ((buf)->st_mode - (buf)->st_mode)	__S_TYPEISSEM(buf)	((buf)->st_mode - (buf)->st_mode)
#define __S_TYPEISMQ(buf) ((buf)->st_mode - (buf)->st_mode)	__S_TYPEISMQ(buf)	((buf)->st_mode - (buf)->st_mode)
#define __S_IFSOCK 0140000	__S_IFSOCK	0140000
#define __S_IFLNK 0120000	__S_IFLNK	0120000
#define __S_IFIFO 0010000	__S_IFIFO	0010000
#define __S_IFREG 0100000	__S_IFREG	0100000
#define __S_IFBLK 0060000	__S_IFBLK	0060000
#define __S_IFCHR 0020000	__S_IFCHR	0020000
#define __S_IFDIR 0040000	__S_IFDIR	0040000
#define __S_IFMT 0170000	__S_IFMT	0170000
#define _STATBUF_ST_NSEC	_STATBUF_ST_NSEC	
#define _STATBUF_ST_RDEV	_STATBUF_ST_RDEV	
#define _STATBUF_ST_BLKSIZE	_STATBUF_ST_BLKSIZE	
#define st_ctime st_ctim.tv_sec	st_ctime	st_ctim.tv_sec
#define st_mtime st_mtim.tv_sec	st_mtime	st_mtim.tv_sec
#define st_atime st_atim.tv_sec	st_atime	st_atim.tv_sec
#define _STAT_VER _STAT_VER_LINUX	_STAT_VER	_STAT_VER_LINUX
#define _MKNOD_VER_LINUX 0	_MKNOD_VER_LINUX	0
#define _STAT_VER_LINUX 1	_STAT_VER_LINUX	1
#define _STAT_VER_KERNEL 0	_STAT_VER_KERNEL	0
#define _BITS_STAT_H 1	_BITS_STAT_H	1
#if !defined _SYS_STAT_H && !defined _FCNTL_H	!defined _SYS_STAT_H && !defined _FCNTL_H	
#ifndef _BITS_STAT_H	_BITS_STAT_H	
#ifndef __x86_64__	__x86_64__	
#ifndef __x86_64__	__x86_64__	
#if defined __x86_64__ || !defined __USE_FILE_OFFSET64	defined __x86_64__ || !defined __USE_FILE_OFFSET64	
#ifndef __x86_64__	__x86_64__	
#ifdef __x86_64__	__x86_64__	
#ifndef __x86_64__	__x86_64__	
#if defined __x86_64__ || !defined __USE_FILE_OFFSET64	defined __x86_64__ || !defined __USE_FILE_OFFSET64	
#if defined __x86_64__  || !defined __USE_FILE_OFFSET64	defined __x86_64__  || !defined __USE_FILE_OFFSET64	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
#ifdef __x86_64__	__x86_64__	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifdef __x86_64__	__x86_64__	
#ifdef __x86_64__	__x86_64__	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
#ifdef __x86_64__	__x86_64__	
#ifdef __USE_ATFILE	__USE_ATFILE	
#define __OPEN_NEEDS_MODE(oflag) (((oflag) & O_CREAT) != 0 || ((oflag) & __O_TMPFILE) == __O_TMPFILE)	__OPEN_NEEDS_MODE(oflag)	(((oflag) & O_CREAT) != 0 || ((oflag) & __O_TMPFILE) == __O_TMPFILE)
#ifndef _FCNTL_H	_FCNTL_H	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifdef __USE_ATFILE	__USE_ATFILE	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#include <bits/fcntl2.h>	<bits/fcntl2.h>	
#include <bits/stat.h>	<bits/stat.h>	
#include <bits/types/struct_timespec.h>	<bits/types/struct_timespec.h>	
#include <bits/fcntl.h>	<bits/fcntl.h>	
#include <bits/types.h>	<bits/types.h>	
#include <features.h>	<features.h>	
#define F_TEST 3	F_TEST	3
#define F_TLOCK 2	F_TLOCK	2
#define F_LOCK 1	F_LOCK	1
#define F_ULOCK 0	F_ULOCK	0
#define SEEK_END 2	SEEK_END	2
#define SEEK_CUR 1	SEEK_CUR	1
#define SEEK_SET 0	SEEK_SET	0
#define F_OK 0	F_OK	0
#define X_OK 1	X_OK	1
#define W_OK 2	W_OK	2
#define R_OK 4	R_OK	4
#define S_IRWXO (S_IRWXG >> 3)	S_IRWXO	(S_IRWXG >> 3)
#define S_IXOTH (S_IXGRP >> 3)	S_IXOTH	(S_IXGRP >> 3)
#define S_IWOTH (S_IWGRP >> 3)	S_IWOTH	(S_IWGRP >> 3)
#define S_IROTH (S_IRGRP >> 3)	S_IROTH	(S_IRGRP >> 3)
#define S_IRWXG (S_IRWXU >> 3)	S_IRWXG	(S_IRWXU >> 3)
#define S_IXGRP (S_IXUSR >> 3)	S_IXGRP	(S_IXUSR >> 3)
#define S_IWGRP (S_IWUSR >> 3)	S_IWGRP	(S_IWUSR >> 3)
#define S_IRGRP (S_IRUSR >> 3)	S_IRGRP	(S_IRUSR >> 3)
#define S_IRWXU (__S_IREAD|__S_IWRITE|__S_IEXEC)	S_IRWXU	(__S_IREAD|__S_IWRITE|__S_IEXEC)
#define S_IXUSR __S_IEXEC	S_IXUSR	__S_IEXEC
#define S_IWUSR __S_IWRITE	S_IWUSR	__S_IWRITE
#define S_IRUSR __S_IREAD	S_IRUSR	__S_IREAD
#define S_ISVTX __S_ISVTX	S_ISVTX	__S_ISVTX
#define S_ISGID __S_ISGID	S_ISGID	__S_ISGID
#define S_ISUID __S_ISUID	S_ISUID	__S_ISUID
#define S_IFSOCK __S_IFSOCK	S_IFSOCK	__S_IFSOCK
#define S_IFLNK __S_IFLNK	S_IFLNK	__S_IFLNK
#define S_IFIFO __S_IFIFO	S_IFIFO	__S_IFIFO
#define S_IFREG __S_IFREG	S_IFREG	__S_IFREG
#define S_IFBLK __S_IFBLK	S_IFBLK	__S_IFBLK
#define S_IFCHR __S_IFCHR	S_IFCHR	__S_IFCHR
#define S_IFDIR __S_IFDIR	S_IFDIR	__S_IFDIR
#define S_IFMT __S_IFMT	S_IFMT	__S_IFMT
#define __pid_t_defined	__pid_t_defined	
#define __off64_t_defined	__off64_t_defined	
#define __off_t_defined	__off_t_defined	
#define __mode_t_defined	__mode_t_defined	
#ifndef _FCNTL_H	_FCNTL_H	
#ifdef __O_TMPFILE	__O_TMPFILE	
#ifndef __mode_t_defined	__mode_t_defined	
#ifndef __off_t_defined	__off_t_defined	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#if defined __USE_LARGEFILE64 && !defined __off64_t_defined	defined __USE_LARGEFILE64 && !defined __off64_t_defined	
#ifndef __pid_t_defined	__pid_t_defined	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
#if defined __USE_XOPEN || defined __USE_XOPEN2K8	defined __USE_XOPEN || defined __USE_XOPEN2K8	
#ifdef __S_IFIFO	__S_IFIFO	
#ifdef __S_IFLNK	__S_IFLNK	
#if (defined __USE_UNIX98 || defined __USE_XOPEN2K8) && defined __S_IFSOCK	(defined __USE_UNIX98 || defined __USE_XOPEN2K8) && defined __S_IFSOCK	
#if defined __USE_MISC || defined __USE_XOPEN	defined __USE_MISC || defined __USE_XOPEN	
#ifdef __USE_MISC	__USE_MISC	
#ifndef R_OK	R_OK	
#if defined __USE_XOPEN || defined __USE_XOPEN2K8	defined __USE_XOPEN || defined __USE_XOPEN2K8	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT	__REDIRECT	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT	__REDIRECT	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifdef __USE_ATFILE	__USE_ATFILE	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT	__REDIRECT	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT	__REDIRECT	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#if !defined F_LOCK && (defined __USE_MISC || (defined __USE_XOPEN_EXTENDED \	!defined F_LOCK && (defined __USE_MISC || (defined __USE_XOPEN_EXTENDED \	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT	__REDIRECT	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifdef __USE_XOPEN2K	__USE_XOPEN2K	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT_NTH	__REDIRECT_NTH	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT	__REDIRECT	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#if __USE_FORTIFY_LEVEL > 0 && defined __fortify_function \	__USE_FORTIFY_LEVEL > 0 && defined __fortify_function \	
#define _SYS_STAT_H 1	_SYS_STAT_H	1
#define __statx_timestamp_defined 1	__statx_timestamp_defined	1
#ifndef _SYS_STAT_H	_SYS_STAT_H	
#ifndef __statx_timestamp_defined	__statx_timestamp_defined	
#define __statx_defined 1	__statx_defined	1
#ifndef _SYS_STAT_H	_SYS_STAT_H	
#ifndef __statx_defined	__statx_defined	
#include <bits/types/struct_statx.h>	<bits/types/struct_statx.h>	
#include <bits/types/struct_statx_timestamp.h>	<bits/types/struct_statx_timestamp.h>	
#define STATX_ATTR_AUTOMOUNT 0x1000	STATX_ATTR_AUTOMOUNT	0x1000
#define STATX_ATTR_ENCRYPTED 0x0800	STATX_ATTR_ENCRYPTED	0x0800
#define STATX_ATTR_NODUMP 0x0040	STATX_ATTR_NODUMP	0x0040
#define STATX_ATTR_APPEND 0x0020	STATX_ATTR_APPEND	0x0020
#define STATX_ATTR_IMMUTABLE 0x0010	STATX_ATTR_IMMUTABLE	0x0010
#define STATX_ATTR_COMPRESSED 0x0004	STATX_ATTR_COMPRESSED	0x0004
#define STATX__RESERVED 0x80000000U	STATX__RESERVED	0x80000000U
#define STATX_BTIME 0x0800U	STATX_BTIME	0x0800U
#define STATX_ALL 0x0fffU	STATX_ALL	0x0fffU
#define STATX_BASIC_STATS 0x07ffU	STATX_BASIC_STATS	0x07ffU
#define STATX_BLOCKS 0x0400U	STATX_BLOCKS	0x0400U
#define STATX_SIZE 0x0200U	STATX_SIZE	0x0200U
#define STATX_INO 0x0100U	STATX_INO	0x0100U
#define STATX_CTIME 0x0080U	STATX_CTIME	0x0080U
#define STATX_MTIME 0x0040U	STATX_MTIME	0x0040U
#define STATX_ATIME 0x0020U	STATX_ATIME	0x0020U
#define STATX_GID 0x0010U	STATX_GID	0x0010U
#define STATX_UID 0x0008U	STATX_UID	0x0008U
#define STATX_NLINK 0x0004U	STATX_NLINK	0x0004U
#define STATX_MODE 0x0002U	STATX_MODE	0x0002U
#define STATX_TYPE 0x0001U	STATX_TYPE	0x0001U
#ifndef _SYS_STAT_H	_SYS_STAT_H	
#ifndef STATX_TYPE	STATX_TYPE	
#include <bits/statx-generic.h>	<bits/statx-generic.h>	
#ifndef _SYS_STAT_H	_SYS_STAT_H	
"#if __glibc_has_include (""__linux__/stat.h"")"	"__glibc_has_include (""__linux__/stat.h"")"	
#ifdef STATX_TYPE	STATX_TYPE	
#define 		
#include <bits/statx.h>	<bits/statx.h>	
#include <bits/stat.h>	<bits/stat.h>	
#include <bits/types/time_t.h>	<bits/types/time_t.h>	
#include <bits/types/struct_timespec.h>	<bits/types/struct_timespec.h>	
#include <bits/types.h>	<bits/types.h>	
#include <features.h>	<features.h>	
#define _MKNOD_VER 0	_MKNOD_VER	0
#define S_BLKSIZE 512	S_BLKSIZE	512
#define DEFFILEMODE (S_IRUSR|S_IWUSR|S_IRGRP|S_IWGRP|S_IROTH|S_IWOTH)	DEFFILEMODE	(S_IRUSR|S_IWUSR|S_IRGRP|S_IWGRP|S_IROTH|S_IWOTH)
#define ALLPERMS (S_ISUID|S_ISGID|S_ISVTX|S_IRWXU|S_IRWXG|S_IRWXO)	ALLPERMS	(S_ISUID|S_ISGID|S_ISVTX|S_IRWXU|S_IRWXG|S_IRWXO)
#define ACCESSPERMS (S_IRWXU|S_IRWXG|S_IRWXO)	ACCESSPERMS	(S_IRWXU|S_IRWXG|S_IRWXO)
#define S_IRWXO (S_IRWXG >> 3)	S_IRWXO	(S_IRWXG >> 3)
#define S_IXOTH (S_IXGRP >> 3)	S_IXOTH	(S_IXGRP >> 3)
#define S_IWOTH (S_IWGRP >> 3)	S_IWOTH	(S_IWGRP >> 3)
#define S_IROTH (S_IRGRP >> 3)	S_IROTH	(S_IRGRP >> 3)
#define S_IRWXG (S_IRWXU >> 3)	S_IRWXG	(S_IRWXU >> 3)
#define S_IXGRP (S_IXUSR >> 3)	S_IXGRP	(S_IXUSR >> 3)
#define S_IWGRP (S_IWUSR >> 3)	S_IWGRP	(S_IWUSR >> 3)
#define S_IRGRP (S_IRUSR >> 3)	S_IRGRP	(S_IRUSR >> 3)
#define S_IEXEC S_IXUSR	S_IEXEC	S_IXUSR
#define S_IWRITE S_IWUSR	S_IWRITE	S_IWUSR
#define S_IREAD S_IRUSR	S_IREAD	S_IRUSR
#define S_IRWXU (__S_IREAD|__S_IWRITE|__S_IEXEC)	S_IRWXU	(__S_IREAD|__S_IWRITE|__S_IEXEC)
#define S_IXUSR __S_IEXEC	S_IXUSR	__S_IEXEC
#define S_IWUSR __S_IWRITE	S_IWUSR	__S_IWRITE
#define S_IRUSR __S_IREAD	S_IRUSR	__S_IREAD
#define S_ISVTX __S_ISVTX	S_ISVTX	__S_ISVTX
#define S_ISGID __S_ISGID	S_ISGID	__S_ISGID
#define S_ISUID __S_ISUID	S_ISUID	__S_ISUID
#define S_TYPEISSHM(buf) __S_TYPEISSHM(buf)	S_TYPEISSHM(buf)	__S_TYPEISSHM(buf)
#define S_TYPEISSEM(buf) __S_TYPEISSEM(buf)	S_TYPEISSEM(buf)	__S_TYPEISSEM(buf)
#define S_TYPEISMQ(buf) __S_TYPEISMQ(buf)	S_TYPEISMQ(buf)	__S_TYPEISMQ(buf)
#define S_ISSOCK(mode) __S_ISTYPE((mode), __S_IFSOCK)	S_ISSOCK(mode)	__S_ISTYPE((mode), __S_IFSOCK)
#define S_ISLNK(mode) __S_ISTYPE((mode), __S_IFLNK)	S_ISLNK(mode)	__S_ISTYPE((mode), __S_IFLNK)
#define S_ISFIFO(mode) __S_ISTYPE((mode), __S_IFIFO)	S_ISFIFO(mode)	__S_ISTYPE((mode), __S_IFIFO)
#define S_ISREG(mode) __S_ISTYPE((mode), __S_IFREG)	S_ISREG(mode)	__S_ISTYPE((mode), __S_IFREG)
#define S_ISBLK(mode) __S_ISTYPE((mode), __S_IFBLK)	S_ISBLK(mode)	__S_ISTYPE((mode), __S_IFBLK)
#define S_ISCHR(mode) __S_ISTYPE((mode), __S_IFCHR)	S_ISCHR(mode)	__S_ISTYPE((mode), __S_IFCHR)
#define S_ISDIR(mode) __S_ISTYPE((mode), __S_IFDIR)	S_ISDIR(mode)	__S_ISTYPE((mode), __S_IFDIR)
#define __S_ISTYPE(mode,mask) (((mode) & __S_IFMT) == (mask))	__S_ISTYPE(mode,mask)	(((mode) & __S_IFMT) == (mask))
#define S_IFSOCK __S_IFSOCK	S_IFSOCK	__S_IFSOCK
#define S_IFLNK __S_IFLNK	S_IFLNK	__S_IFLNK
#define S_IFIFO __S_IFIFO	S_IFIFO	__S_IFIFO
#define S_IFREG __S_IFREG	S_IFREG	__S_IFREG
#define S_IFBLK __S_IFBLK	S_IFBLK	__S_IFBLK
#define S_IFCHR __S_IFCHR	S_IFCHR	__S_IFCHR
#define S_IFDIR __S_IFDIR	S_IFDIR	__S_IFDIR
#define S_IFMT __S_IFMT	S_IFMT	__S_IFMT
#define __blksize_t_defined	__blksize_t_defined	
#define __blkcnt_t_defined	__blkcnt_t_defined	
#define __uid_t_defined	__uid_t_defined	
#define __nlink_t_defined	__nlink_t_defined	
#define __ino_t_defined	__ino_t_defined	
#define __gid_t_defined	__gid_t_defined	
#define __dev_t_defined	__dev_t_defined	
#ifndef _SYS_STAT_H	_SYS_STAT_H	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
#if defined __USE_XOPEN || defined __USE_XOPEN2K	defined __USE_XOPEN || defined __USE_XOPEN2K	
#ifndef __dev_t_defined	__dev_t_defined	
#ifndef __gid_t_defined	__gid_t_defined	
#ifndef __ino_t_defined	__ino_t_defined	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifndef __mode_t_defined	__mode_t_defined	
#ifndef __nlink_t_defined	__nlink_t_defined	
#ifndef __off_t_defined	__off_t_defined	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifndef __uid_t_defined	__uid_t_defined	
#ifdef __USE_UNIX98	__USE_UNIX98	
#ifndef __blkcnt_t_defined	__blkcnt_t_defined	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifndef __blksize_t_defined	__blksize_t_defined	
#if defined __USE_MISC || defined __USE_XOPEN	defined __USE_MISC || defined __USE_XOPEN	
#ifdef __S_IFIFO	__S_IFIFO	
#ifdef __S_IFLNK	__S_IFLNK	
#if (defined __USE_MISC || defined __USE_XOPEN_EXTENDED) \	(defined __USE_MISC || defined __USE_XOPEN_EXTENDED) \	
#ifdef __S_IFIFO	__S_IFIFO	
#ifdef __S_IFLNK	__S_IFLNK	
#if defined __USE_MISC && !defined __S_IFLNK	defined __USE_MISC && !defined __S_IFLNK	
#if (defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K) \	(defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K) \	
#elif defined __USE_XOPEN2K	defined __USE_XOPEN2K	
#ifdef __USE_POSIX199309	__USE_POSIX199309	
#if defined __USE_MISC || defined __USE_XOPEN	defined __USE_MISC || defined __USE_XOPEN	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_MISC	__USE_MISC	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT_NTH	__REDIRECT_NTH	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifdef __USE_ATFILE	__USE_ATFILE	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT_NTH	__REDIRECT_NTH	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#if defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K	defined __USE_XOPEN_EXTENDED || defined __USE_XOPEN2K	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT_NTH	__REDIRECT_NTH	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifdef __USE_MISC	__USE_MISC	
#if defined __USE_POSIX199309 || defined __USE_XOPEN_EXTENDED	defined __USE_POSIX199309 || defined __USE_XOPEN_EXTENDED	
#ifdef __USE_ATFILE	__USE_ATFILE	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_ATFILE	__USE_ATFILE	
#if defined __USE_MISC || defined __USE_XOPEN_EXTENDED	defined __USE_MISC || defined __USE_XOPEN_EXTENDED	
#ifdef __USE_ATFILE	__USE_ATFILE	
#ifdef __USE_ATFILE	__USE_ATFILE	
#ifdef __USE_ATFILE	__USE_ATFILE	
#ifdef __USE_XOPEN2K8	__USE_XOPEN2K8	
#ifndef _STAT_VER	_STAT_VER	
#ifndef _MKNOD_VER	_MKNOD_VER	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT_NTH	__REDIRECT_NTH	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_EXTERN_INLINES	__USE_EXTERN_INLINES	
#if defined __USE_MISC || defined __USE_XOPEN_EXTENDED	defined __USE_MISC || defined __USE_XOPEN_EXTENDED	
#ifdef __USE_ATFILE	__USE_ATFILE	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_ATFILE	__USE_ATFILE	
#if defined __USE_LARGEFILE64 \	defined __USE_LARGEFILE64 \	
#if defined __USE_MISC || defined __USE_XOPEN_EXTENDED	defined __USE_MISC || defined __USE_XOPEN_EXTENDED	
#ifdef __USE_ATFILE	__USE_ATFILE	
"#include ""env.h"""	"""env.h"""	
"#include ""common.h"""	"""common.h"""	
#include <stddef.h>	<stddef.h>	
#define EROTTEN 1	EROTTEN	1
#define FISH_PATH_H	FISH_PATH_H	
#ifndef FISH_PATH_H	FISH_PATH_H	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""proc.h"""	"""proc.h"""	
"#include ""path.h"""	"""path.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""env.h"""	"""env.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
#include <cerrno>	<cerrno>	
#include <sys/stat.h>	<sys/stat.h>	
#include <fcntl.h>	<fcntl.h>	
"#include ""builtin_cd.h"""	"""builtin_cd.h"""	
"#include ""config.h"""	"""config.h"""	
#define SEEK_HOLE 4	SEEK_HOLE	4
#define SEEK_DATA 3	SEEK_DATA	3
#define SEEK_END 2	SEEK_END	2
#define SEEK_CUR 1	SEEK_CUR	1
#define SEEK_SET 0	SEEK_SET	0
#define __intptr_t_defined	__intptr_t_defined	
#define __pid_t_defined	__pid_t_defined	
#define __useconds_t_defined	__useconds_t_defined	
#define __off64_t_defined	__off64_t_defined	
#define __off_t_defined	__off_t_defined	
#define __uid_t_defined	__uid_t_defined	
#define __gid_t_defined	__gid_t_defined	
#define __ssize_t_defined	__ssize_t_defined	
#define CSTATUS _POSIX_VDISABLE	CSTATUS	_POSIX_VDISABLE
#define CEOL _POSIX_VDISABLE	CEOL	_POSIX_VDISABLE
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wgetopt.h"""	"""wgetopt.h"""	
"#include ""path.h"""	"""path.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
#include <string>	<string>	
#include <unistd.h>	<unistd.h>	
"#include ""builtin_command.h"""	"""builtin_command.h"""	
"#include ""config.h"""	"""config.h"""	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wgetopt.h"""	"""wgetopt.h"""	
"#include ""tokenizer.h"""	"""tokenizer.h"""	
"#include ""reader.h"""	"""reader.h"""	
"#include ""proc.h"""	"""proc.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""parse_util.h"""	"""parse_util.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""input.h"""	"""input.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
#include <cwchar>	<cwchar>	
#include <cstdlib>	<cstdlib>	
#include <cstddef>	<cstddef>	
#include <cerrno>	<cerrno>	
"#include ""config.h"""	"""config.h"""	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wgetopt.h"""	"""wgetopt.h"""	
"#include ""wcstringutil.h"""	"""wcstringutil.h"""	
"#include ""reader.h"""	"""reader.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""parse_util.h"""	"""parse_util.h"""	
"#include ""parse_constants.h"""	"""parse_constants.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""highlight.h"""	"""highlight.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""env.h"""	"""env.h"""	
"#include ""complete.h"""	"""complete.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""color.h"""	"""color.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
#include <vector>	<vector>	
#include <string>	<string>	
#include <memory>	<memory>	
#include <cwchar>	<cwchar>	
#include <cstddef>	<cstddef>	
"#include ""config.h"""	"""config.h"""	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wgetopt.h"""	"""wgetopt.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
#include <cwchar>	<cwchar>	
#include <unistd.h>	<unistd.h>	
"#include ""builtin_contains.h"""	"""builtin_contains.h"""	
"#include ""config.h"""	"""config.h"""	
#define __have_pthread_attr_t 1	__have_pthread_attr_t	1
#define __uid_t_defined	__uid_t_defined	
#define __pid_t_defined	__pid_t_defined	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""proc.h"""	"""proc.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
#include <set>	<set>	
#include <csignal>	<csignal>	
#include <cerrno>	<cerrno>	
"#include ""builtin_disown.h"""	"""builtin_disown.h"""	
"#include ""config.h"""	"""config.h"""	
#include <limits.h>	<limits.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#define _GLIBCXX_CLIMITS 1	_GLIBCXX_CLIMITS	1
#pragma GCC system_header	GCC system_header	
#ifndef _GLIBCXX_CLIMITS	_GLIBCXX_CLIMITS	
#ifndef LLONG_MIN	LLONG_MIN	
#ifndef LLONG_MAX	LLONG_MAX	
#ifndef ULLONG_MAX	ULLONG_MAX	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wgetopt.h"""	"""wgetopt.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
#include <cstddef>	<cstddef>	
#include <climits>	<climits>	
"#include ""builtin_echo.h"""	"""builtin_echo.h"""	
"#include ""config.h"""	"""config.h"""	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""event.h"""	"""event.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
"#include ""builtin_emit.h"""	"""builtin_emit.h"""	
"#include ""config.h"""	"""config.h"""	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wgetopt.h"""	"""wgetopt.h"""	
"#include ""proc.h"""	"""proc.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""exec.h"""	"""exec.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
#include <cstddef>	<cstddef>	
#include <cerrno>	<cerrno>	
"#include ""config.h"""	"""config.h"""	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wgetopt.h"""	"""wgetopt.h"""	
"#include ""reader.h"""	"""reader.h"""	
"#include ""proc.h"""	"""proc.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
#include <cstddef>	<cstddef>	
#include <cerrno>	<cerrno>	
"#include ""builtin_exit.h"""	"""builtin_exit.h"""	
"#include ""config.h"""	"""config.h"""	
#define __ssize_t_defined	__ssize_t_defined	
#define __off64_t_defined	__off64_t_defined	
#define __off_t_defined	__off_t_defined	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""tokenizer.h"""	"""tokenizer.h"""	
"#include ""reader.h"""	"""reader.h"""	
"#include ""proc.h"""	"""proc.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""env.h"""	"""env.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
#include <cwchar>	<cwchar>	
#include <cstdlib>	<cstdlib>	
#include <cstdio>	<cstdio>	
#include <cerrno>	<cerrno>	
"#include ""builtin_fg.h"""	"""builtin_fg.h"""	
"#include ""config.h"""	"""config.h"""	
"#include ""parse_tree.h"""	"""parse_tree.h"""	
"#include ""common.h"""	"""common.h"""	
#define FISH_BUILTIN_FUNCTION_H	FISH_BUILTIN_FUNCTION_H	
#ifndef FISH_BUILTIN_FUNCTION_H	FISH_BUILTIN_FUNCTION_H	
"#include ""parse_tree.h"""	"""parse_tree.h"""	
"#include ""event.h"""	"""event.h"""	
"#include ""env.h"""	"""env.h"""	
"#include ""common.h"""	"""common.h"""	
#include <vector>	<vector>	
#include <map>	<map>	
#define FISH_FUNCTION_H	FISH_FUNCTION_H	
#ifndef FISH_FUNCTION_H	FISH_FUNCTION_H	
"#include ""common.h"""	"""common.h"""	
#define FISH_PARSER_KEYWORD_H	FISH_PARSER_KEYWORD_H	
#ifndef FISH_PARSER_KEYWORD_H	FISH_PARSER_KEYWORD_H	
#include <signal.h>	<signal.h>	
#define FISH_SIGNALH	FISH_SIGNALH	
#ifndef FISH_SIGNALH	FISH_SIGNALH	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wgetopt.h"""	"""wgetopt.h"""	
"#include ""signal.h"""	"""signal.h"""	
"#include ""proc.h"""	"""proc.h"""	
"#include ""parser_keywords.h"""	"""parser_keywords.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""function.h"""	"""function.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""event.h"""	"""event.h"""	
"#include ""complete.h"""	"""complete.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
#include <vector>	<vector>	
#include <string>	<string>	
#include <memory>	<memory>	
#include <cstdlib>	<cstdlib>	
#include <cstddef>	<cstddef>	
#include <cerrno>	<cerrno>	
#include <unistd.h>	<unistd.h>	
"#include ""builtin_function.h"""	"""builtin_function.h"""	
"#include ""config.h"""	"""config.h"""	
"#include ""global_safety.h"""	"""global_safety.h"""	
"#include ""common.h"""	"""common.h"""	
#include <stdint.h>	<stdint.h>	
"#include ""config.h"""	"""config.h"""	
#define FISH_TERMSIZE_H	FISH_TERMSIZE_H	
#ifndef FISH_TERMSIZE_H	FISH_TERMSIZE_H	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wgetopt.h"""	"""wgetopt.h"""	
"#include ""wcstringutil.h"""	"""wcstringutil.h"""	
"#include ""termsize.h"""	"""termsize.h"""	
"#include ""signal.h"""	"""signal.h"""	
"#include ""proc.h"""	"""proc.h"""	
"#include ""parser_keywords.h"""	"""parser_keywords.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""highlight.h"""	"""highlight.h"""	
"#include ""function.h"""	"""function.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""event.h"""	"""event.h"""	
"#include ""env.h"""	"""env.h"""	
"#include ""complete.h"""	"""complete.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
#include <vector>	<vector>	
#include <utility>	<utility>	
#include <string>	<string>	
#include <memory>	<memory>	
#include <map>	<map>	
#include <cwchar>	<cwchar>	
#include <cstddef>	<cstddef>	
#include <algorithm>	<algorithm>	
#include <unistd.h>	<unistd.h>	
"#include ""builtin_functions.h"""	"""builtin_functions.h"""	
"#include ""config.h"""	"""config.h"""	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""common.h"""	"""common.h"""	
#include <vector>	<vector>	
#include <utility>	<utility>	
#include <unordered_set>	<unordered_set>	
#include <unordered_map>	<unordered_map>	
#include <string>	<string>	
#include <memory>	<memory>	
#include <deque>	<deque>	
#include <wctype.h>	<wctype.h>	
#include <time.h>	<time.h>	
#include <stdio.h>	<stdio.h>	
#include <stdint.h>	<stdint.h>	
#include <stddef.h>	<stddef.h>	
#include <pthread.h>	<pthread.h>	
#define FISH_HISTORY_H	FISH_HISTORY_H	
#ifndef FISH_HISTORY_H	FISH_HISTORY_H	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wgetopt.h"""	"""wgetopt.h"""	
"#include ""reader.h"""	"""reader.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""history.h"""	"""history.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
#include <vector>	<vector>	
#include <string>	<string>	
#include <cwchar>	<cwchar>	
#include <cstdint>	<cstdint>	
#include <cstddef>	<cstddef>	
#include <cerrno>	<cerrno>	
"#include ""builtin_history.h"""	"""builtin_history.h"""	
"#include ""config.h"""	"""config.h"""	
#define __suseconds_t_defined	__suseconds_t_defined	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wgetopt.h"""	"""wgetopt.h"""	
"#include ""proc.h"""	"""proc.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
#include <cstddef>	<cstddef>	
#include <cerrno>	<cerrno>	
#include <sys/time.h>	<sys/time.h>	
"#include ""config.h"""	"""config.h"""	
#define __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION	__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION	
#define __DECL_SIMD_powf128x	__DECL_SIMD_powf128x	
#define __DECL_SIMD_powf64x	__DECL_SIMD_powf64x	
#define __DECL_SIMD_powf32x	__DECL_SIMD_powf32x	
#define __DECL_SIMD_powf128	__DECL_SIMD_powf128	
#define __DECL_SIMD_powf64	__DECL_SIMD_powf64	
#define __DECL_SIMD_powf32	__DECL_SIMD_powf32	
#define __DECL_SIMD_powf16	__DECL_SIMD_powf16	
#define __DECL_SIMD_powl	__DECL_SIMD_powl	
#define __DECL_SIMD_powf	__DECL_SIMD_powf	
#define __DECL_SIMD_pow	__DECL_SIMD_pow	
#define __DECL_SIMD_expf128x	__DECL_SIMD_expf128x	
#define __DECL_SIMD_expf64x	__DECL_SIMD_expf64x	
#define __DECL_SIMD_expf32x	__DECL_SIMD_expf32x	
#define __DECL_SIMD_expf128	__DECL_SIMD_expf128	
#define __DECL_SIMD_expf64	__DECL_SIMD_expf64	
#define __DECL_SIMD_expf32	__DECL_SIMD_expf32	
#define __DECL_SIMD_expf16	__DECL_SIMD_expf16	
#define __DECL_SIMD_expl	__DECL_SIMD_expl	
#define __DECL_SIMD_expf	__DECL_SIMD_expf	
#define __DECL_SIMD_exp	__DECL_SIMD_exp	
#define __DECL_SIMD_logf128x	__DECL_SIMD_logf128x	
#define __DECL_SIMD_logf64x	__DECL_SIMD_logf64x	
#define __DECL_SIMD_logf32x	__DECL_SIMD_logf32x	
#define __DECL_SIMD_logf128	__DECL_SIMD_logf128	
#define __DECL_SIMD_logf64	__DECL_SIMD_logf64	
#define __DECL_SIMD_logf32	__DECL_SIMD_logf32	
#define __DECL_SIMD_logf16	__DECL_SIMD_logf16	
#define __DECL_SIMD_logl	__DECL_SIMD_logl	
#define __DECL_SIMD_logf	__DECL_SIMD_logf	
#define __DECL_SIMD_log	__DECL_SIMD_log	
#define __DECL_SIMD_sincosf128x	__DECL_SIMD_sincosf128x	
#define __DECL_SIMD_sincosf64x	__DECL_SIMD_sincosf64x	
#define __DECL_SIMD_sincosf32x	__DECL_SIMD_sincosf32x	
#define __DECL_SIMD_sincosf128	__DECL_SIMD_sincosf128	
#define __DECL_SIMD_sincosf64	__DECL_SIMD_sincosf64	
#define __DECL_SIMD_sincosf32	__DECL_SIMD_sincosf32	
#define __DECL_SIMD_sincosf16	__DECL_SIMD_sincosf16	
#define __DECL_SIMD_sincosl	__DECL_SIMD_sincosl	
#define __DECL_SIMD_sincosf	__DECL_SIMD_sincosf	
#define __DECL_SIMD_sincos	__DECL_SIMD_sincos	
#define __DECL_SIMD_sinf128x	__DECL_SIMD_sinf128x	
#define __DECL_SIMD_sinf64x	__DECL_SIMD_sinf64x	
#define __DECL_SIMD_sinf32x	__DECL_SIMD_sinf32x	
#define __DECL_SIMD_sinf128	__DECL_SIMD_sinf128	
#define __DECL_SIMD_sinf64	__DECL_SIMD_sinf64	
#define __DECL_SIMD_sinf32	__DECL_SIMD_sinf32	
#define __DECL_SIMD_sinf16	__DECL_SIMD_sinf16	
#define __DECL_SIMD_sinl	__DECL_SIMD_sinl	
#define __DECL_SIMD_sinf	__DECL_SIMD_sinf	
#define __DECL_SIMD_sin	__DECL_SIMD_sin	
#define __DECL_SIMD_cosf128x	__DECL_SIMD_cosf128x	
#define __DECL_SIMD_cosf64x	__DECL_SIMD_cosf64x	
#define __DECL_SIMD_cosf32x	__DECL_SIMD_cosf32x	
#define __DECL_SIMD_cosf128	__DECL_SIMD_cosf128	
#define __DECL_SIMD_cosf64	__DECL_SIMD_cosf64	
#define __DECL_SIMD_cosf32	__DECL_SIMD_cosf32	
#define __DECL_SIMD_cosf16	__DECL_SIMD_cosf16	
#define __DECL_SIMD_cosl	__DECL_SIMD_cosl	
#define __DECL_SIMD_cosf	__DECL_SIMD_cosf	
#define __DECL_SIMD_cos	__DECL_SIMD_cos	
#define _BITS_LIBM_SIMD_DECL_STUBS_H 1	_BITS_LIBM_SIMD_DECL_STUBS_H	1
#ifndef _MATH_H	_MATH_H	
#ifndef _BITS_LIBM_SIMD_DECL_STUBS_H	_BITS_LIBM_SIMD_DECL_STUBS_H	
#define _MATH_H 1	_MATH_H	1
#include <bits/libm-simd-decl-stubs.h>	<bits/libm-simd-decl-stubs.h>	
#ifndef _MATH_H	_MATH_H	
#if defined __x86_64__ && defined __FAST_MATH__	defined __x86_64__ && defined __FAST_MATH__	
#if defined _OPENMP && _OPENMP >= 201307	defined _OPENMP && _OPENMP >= 201307	
#elif __GNUC_PREREQ (6,0)	__GNUC_PREREQ (6,0)	
#ifdef __DECL_SIMD_x86_64	__DECL_SIMD_x86_64	
#define __GLIBC_FLT_EVAL_METHOD __FLT_EVAL_METHOD__	__GLIBC_FLT_EVAL_METHOD	__FLT_EVAL_METHOD__
#ifndef _MATH_H	_MATH_H	
#ifdef __FLT_EVAL_METHOD__	__FLT_EVAL_METHOD__	
#if __FLT_EVAL_METHOD__ == -1	__FLT_EVAL_METHOD__ == -1	
#elif defined __x86_64__	defined __x86_64__	
#define __FLT_EVAL_METHOD__ 0	__FLT_EVAL_METHOD__	0
#define __FP_LOGBNAN_IS_MIN 1	__FP_LOGBNAN_IS_MIN	1
#define __FP_LOGB0_IS_MIN 1	__FP_LOGB0_IS_MIN	1
#ifndef _MATH_H	_MATH_H	
#ifndef _MATH_H	_MATH_H	
#ifdef __USE_ISOC99	__USE_ISOC99	
#ifdef __FP_FAST_FMA	__FP_FAST_FMA	
#ifdef __FP_FAST_FMAF	__FP_FAST_FMAF	
#ifdef __FP_FAST_FMAL	__FP_FAST_FMAL	
#define __MATHDECL_1(type,function,suffix,args) extern type __MATH_PRECNAME(function,suffix) args __THROW	__MATHDECL_1(type,function,suffix,args)	extern type __MATH_PRECNAME(function,suffix) args __THROW
#define __MATH_PRECNAME(name,r) __CONCAT(name,r)	__MATH_PRECNAME(name,r)	__CONCAT(name,r)
#define _Mdouble_ double	_Mdouble_	double
#ifndef _MATH_H	_MATH_H	
#ifdef __USE_GNU	__USE_GNU	
#if defined __USE_XOPEN_EXTENDED || defined __USE_ISOC99	defined __USE_XOPEN_EXTENDED || defined __USE_ISOC99	
#if __GLIBC_USE (IEC_60559_FUNCS_EXT)	__GLIBC_USE (IEC_60559_FUNCS_EXT)	
#if defined __USE_XOPEN_EXTENDED || defined __USE_ISOC99	defined __USE_XOPEN_EXTENDED || defined __USE_ISOC99	
#ifdef __USE_ISOC99	__USE_ISOC99	
#if defined __USE_XOPEN || defined __USE_ISOC99	defined __USE_XOPEN || defined __USE_ISOC99	
#if defined __USE_XOPEN_EXTENDED || defined __USE_ISOC99	defined __USE_XOPEN_EXTENDED || defined __USE_ISOC99	
#ifdef __USE_MISC	__USE_MISC	
#if ((!defined __cplusplus \	((!defined __cplusplus \	
#if !__MATH_DECLARING_FLOATN	!__MATH_DECLARING_FLOATN	
#ifdef __USE_ISOC99	__USE_ISOC99	
#ifdef __USE_ISOC99	__USE_ISOC99	
#if defined __USE_MISC || (defined __USE_XOPEN && !defined __USE_XOPEN2K)	defined __USE_MISC || (defined __USE_XOPEN && !defined __USE_XOPEN2K)	
#if ((!defined __cplusplus \	((!defined __cplusplus \	
#if defined __USE_MISC || (defined __USE_XOPEN && __MATH_DECLARING_DOUBLE)	defined __USE_MISC || (defined __USE_XOPEN && __MATH_DECLARING_DOUBLE)	
#if defined __USE_XOPEN || defined __USE_ISOC99	defined __USE_XOPEN || defined __USE_ISOC99	
#ifdef __USE_ISOC99	__USE_ISOC99	
#if defined __USE_MISC || (defined __USE_XOPEN && !defined __USE_XOPEN2K)	defined __USE_MISC || (defined __USE_XOPEN && !defined __USE_XOPEN2K)	
#if !__MATH_DECLARING_FLOATN	!__MATH_DECLARING_FLOATN	
#ifdef __USE_MISC	__USE_MISC	
#if defined __USE_XOPEN_EXTENDED || defined __USE_ISOC99	defined __USE_XOPEN_EXTENDED || defined __USE_ISOC99	
#if defined __USE_ISOC99 && !defined __LDBL_COMPAT && !__MATH_DECLARING_FLOATN	defined __USE_ISOC99 && !defined __LDBL_COMPAT && !__MATH_DECLARING_FLOATN	
#if __GLIBC_USE (IEC_60559_BFP_EXT) || __MATH_DECLARING_FLOATN	__GLIBC_USE (IEC_60559_BFP_EXT) || __MATH_DECLARING_FLOATN	
#ifdef __USE_ISOC99	__USE_ISOC99	
#if __GLIBC_USE (IEC_60559_BFP_EXT) || __MATH_DECLARING_FLOATN	__GLIBC_USE (IEC_60559_BFP_EXT) || __MATH_DECLARING_FLOATN	
#ifdef __USE_ISOC99	__USE_ISOC99	
#if __GLIBC_USE (IEC_60559_BFP_EXT) || __MATH_DECLARING_FLOATN	__GLIBC_USE (IEC_60559_BFP_EXT) || __MATH_DECLARING_FLOATN	
#if (defined __USE_MISC || (defined __USE_XOPEN_EXTENDED \	(defined __USE_MISC || (defined __USE_XOPEN_EXTENDED \	
#define __MATHCALL(function,suffix,args) __MATHDECL (_Mdouble_,function,suffix, args)	__MATHCALL(function,suffix,args)	__MATHDECL (_Mdouble_,function,suffix, args)
#define __MATHDECL(type,function,suffix,args) __MATHDECL_1(type, function,suffix, args); __MATHDECL_1(type, __CONCAT(__,function),suffix, args)	__MATHDECL(type,function,suffix,args)	__MATHDECL_1(type, function,suffix, args); __MATHDECL_1(type, __CONCAT(__,function),suffix, args)
#define __MATHCALLX(function,suffix,args,attrib) __MATHDECLX (_Mdouble_,function,suffix, args, attrib)	__MATHCALLX(function,suffix,args,attrib)	__MATHDECLX (_Mdouble_,function,suffix, args, attrib)
#define __MATHDECLX(type,function,suffix,args,attrib) __MATHDECL_1(type, function,suffix, args) __attribute__ (attrib); __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)	__MATHDECLX(type,function,suffix,args,attrib)	__MATHDECL_1(type, function,suffix, args) __attribute__ (attrib); __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib)
#define __MATHCALL_VEC(function,suffix,args) __SIMD_DECL (__MATH_PRECNAME (function, suffix)) __MATHCALL (function, suffix, args)	__MATHCALL_VEC(function,suffix,args)	__SIMD_DECL (__MATH_PRECNAME (function, suffix)) __MATHCALL (function, suffix, args)
#define __MATHDECL_VEC(type,function,suffix,args) __SIMD_DECL (__MATH_PRECNAME (function, suffix)) __MATHDECL(type, function,suffix, args)	__MATHDECL_VEC(type,function,suffix,args)	__SIMD_DECL (__MATH_PRECNAME (function, suffix)) __MATHDECL(type, function,suffix, args)
#define __MATH_DECLARING_FLOATN 0	__MATH_DECLARING_FLOATN	0
#define __MATH_DECLARING_DOUBLE 1	__MATH_DECLARING_DOUBLE	1
#define __SIMD_DECL(function) __CONCAT (__DECL_SIMD_, function)	__SIMD_DECL(function)	__CONCAT (__DECL_SIMD_, function)
#define __MATH_PRECNAME(name,r) name ## f ## r	__MATH_PRECNAME(name,r)	name ## f ## r
#define _Mdouble_ float	_Mdouble_	float
#define __MATH_DECLARING_FLOATN 0	__MATH_DECLARING_FLOATN	0
#define __MATH_DECLARING_DOUBLE 0	__MATH_DECLARING_DOUBLE	0
#define __MATH_PRECNAME(name,r) name ## l ## r	__MATH_PRECNAME(name,r)	name ## l ## r
#define _Mdouble_ long double	_Mdouble_	long double
#define __MATH_DECLARING_FLOATN 0	__MATH_DECLARING_FLOATN	0
#define __MATH_DECLARING_DOUBLE 0	__MATH_DECLARING_DOUBLE	0
#define __MATH_PRECNAME(name,r) name ## f32 ## r	__MATH_PRECNAME(name,r)	name ## f32 ## r
#define _Mdouble_ _Float32	_Mdouble_	_Float32
#define __MATH_DECLARING_DOUBLE 0	__MATH_DECLARING_DOUBLE	0
#define __MATH_DECLARING_FLOATN 1	__MATH_DECLARING_FLOATN	1
#define __MATH_PRECNAME(name,r) name ## f64 ## r	__MATH_PRECNAME(name,r)	name ## f64 ## r
#define _Mdouble_ _Float64	_Mdouble_	_Float64
#define __MATH_DECLARING_FLOATN 1	__MATH_DECLARING_FLOATN	1
#define __MATH_DECLARING_DOUBLE 0	__MATH_DECLARING_DOUBLE	0
#define __MATH_PRECNAME(name,r) name ## f128 ## r	__MATH_PRECNAME(name,r)	name ## f128 ## r
#define _Mdouble_ _Float128	_Mdouble_	_Float128
#define __MATH_DECLARING_FLOATN 1	__MATH_DECLARING_FLOATN	1
#define __MATH_DECLARING_DOUBLE 0	__MATH_DECLARING_DOUBLE	0
#define __MATH_PRECNAME(name,r) name ## f32x ## r	__MATH_PRECNAME(name,r)	name ## f32x ## r
#define _Mdouble_ _Float32x	_Mdouble_	_Float32x
#define __MATH_DECLARING_FLOATN 1	__MATH_DECLARING_FLOATN	1
#define __MATH_DECLARING_DOUBLE 0	__MATH_DECLARING_DOUBLE	0
#define __MATH_PRECNAME(name,r) name ## f64x ## r	__MATH_PRECNAME(name,r)	name ## f64x ## r
#define _Mdouble_ _Float64x	_Mdouble_	_Float64x
#define __MATH_DECLARING_DOUBLE 0	__MATH_DECLARING_DOUBLE	0
#define __MATH_DECLARING_FLOATN 1	__MATH_DECLARING_FLOATN	1
#ifndef _MATH_H	_MATH_H	
#define _Mret_ float	_Mret_	float
#define __MATHCALL_NARROW_NORMAL(func,nargs) extern _Mret_ func __MATHCALL_NARROW_ARGS_ ## nargs __THROW	__MATHCALL_NARROW_NORMAL(func,nargs)	extern _Mret_ func __MATHCALL_NARROW_ARGS_ ## nargs __THROW
#define __MATHCALL_NARROW(func,redir,nargs) __MATHCALL_NARROW_NORMAL (func, nargs)	__MATHCALL_NARROW(func,redir,nargs)	__MATHCALL_NARROW_NORMAL (func, nargs)
#define __MATHCALL_NAME(name) f ## name	__MATHCALL_NAME(name)	f ## name
#define _Marg_ double	_Marg_	double
#define __MATHCALL_NARROW_ARGS_2 (_Marg_ __x, _Marg_ __y)	__MATHCALL_NARROW_ARGS_2	(_Marg_ __x, _Marg_ __y)
#define _Mret_ float	_Mret_	float
#define __MATHCALL_NAME(name) f ## name ## l	__MATHCALL_NAME(name)	f ## name ## l
#define _Marg_ long double	_Marg_	long double
#define _Mret_ double	_Mret_	double
#define __MATHCALL_NAME(name) d ## name ## l	__MATHCALL_NAME(name)	d ## name ## l
#define _Marg_ long double	_Marg_	long double
#define _Mret_ _Float32	_Mret_	_Float32
#define __MATHCALL_NAME(name) f32 ## name ## f32x	__MATHCALL_NAME(name)	f32 ## name ## f32x
#define _Marg_ _Float32x	_Marg_	_Float32x
#define _Mret_ _Float32	_Mret_	_Float32
#define __MATHCALL_NAME(name) f32 ## name ## f64	__MATHCALL_NAME(name)	f32 ## name ## f64
#define _Marg_ _Float64	_Marg_	_Float64
#define _Mret_ _Float32	_Mret_	_Float32
#define __MATHCALL_NAME(name) f32 ## name ## f64x	__MATHCALL_NAME(name)	f32 ## name ## f64x
#define _Marg_ _Float64x	_Marg_	_Float64x
#define _Mret_ _Float32	_Mret_	_Float32
#define __MATHCALL_NAME(name) f32 ## name ## f128	__MATHCALL_NAME(name)	f32 ## name ## f128
#define _Marg_ _Float128	_Marg_	_Float128
#define _Mret_ _Float32x	_Mret_	_Float32x
#define __MATHCALL_NAME(name) f32x ## name ## f64	__MATHCALL_NAME(name)	f32x ## name ## f64
#define _Marg_ _Float64	_Marg_	_Float64
#define _Mret_ _Float32x	_Mret_	_Float32x
#define __MATHCALL_NAME(name) f32x ## name ## f64x	__MATHCALL_NAME(name)	f32x ## name ## f64x
#define _Marg_ _Float64x	_Marg_	_Float64x
#define _Mret_ _Float32x	_Mret_	_Float32x
#define __MATHCALL_NAME(name) f32x ## name ## f128	__MATHCALL_NAME(name)	f32x ## name ## f128
#define _Marg_ _Float128	_Marg_	_Float128
#define _Mret_ _Float64	_Mret_	_Float64
#define __MATHCALL_NAME(name) f64 ## name ## f64x	__MATHCALL_NAME(name)	f64 ## name ## f64x
#define _Marg_ _Float64x	_Marg_	_Float64x
#define _Mret_ _Float64	_Mret_	_Float64
#define __MATHCALL_NAME(name) f64 ## name ## f128	__MATHCALL_NAME(name)	f64 ## name ## f128
#define _Marg_ _Float128	_Marg_	_Float128
#define _Mret_ _Float64x	_Mret_	_Float64x
#define __MATHCALL_NAME(name) f64x ## name ## f128	__MATHCALL_NAME(name)	f64x ## name ## f128
#define _Marg_ _Float128	_Marg_	_Float128
#define __iscanonicalf128(x) ((void) (__typeof (x)) (x), 1)	__iscanonicalf128(x)	((void) (__typeof (x)) (x), 1)
#define __iscanonical(x) ((void) (__typeof (x)) (x), 1)	__iscanonical(x)	((void) (__typeof (x)) (x), 1)
#define __iscanonicalf(x) ((void) (__typeof (x)) (x), 1)	__iscanonicalf(x)	((void) (__typeof (x)) (x), 1)
#ifndef _MATH_H	_MATH_H	
#if __HAVE_DISTINCT_FLOAT128	__HAVE_DISTINCT_FLOAT128	
#ifndef __cplusplus	__cplusplus	
#if __HAVE_DISTINCT_FLOAT128	__HAVE_DISTINCT_FLOAT128	
#if !defined __NO_MATH_INLINES && defined __OPTIMIZE__	!defined __NO_MATH_INLINES && defined __OPTIMIZE__	
#include <bits/mathinline.h>	<bits/mathinline.h>	
#include <bits/iscanonical.h>	<bits/iscanonical.h>	
#include <bits/mathcalls-narrow.h>	<bits/mathcalls-narrow.h>	
#include <bits/mathcalls-narrow.h>	<bits/mathcalls-narrow.h>	
#include <bits/mathcalls-narrow.h>	<bits/mathcalls-narrow.h>	
#include <bits/mathcalls-narrow.h>	<bits/mathcalls-narrow.h>	
#include <bits/mathcalls-narrow.h>	<bits/mathcalls-narrow.h>	
#include <bits/mathcalls-narrow.h>	<bits/mathcalls-narrow.h>	
#include <bits/mathcalls-narrow.h>	<bits/mathcalls-narrow.h>	
#include <bits/mathcalls-narrow.h>	<bits/mathcalls-narrow.h>	
#include <bits/mathcalls-narrow.h>	<bits/mathcalls-narrow.h>	
#include <bits/mathcalls-narrow.h>	<bits/mathcalls-narrow.h>	
#include <bits/mathcalls-narrow.h>	<bits/mathcalls-narrow.h>	
#include <bits/mathcalls-narrow.h>	<bits/mathcalls-narrow.h>	
#include <bits/mathcalls-narrow.h>	<bits/mathcalls-narrow.h>	
#include <bits/mathcalls.h>	<bits/mathcalls.h>	
#include <bits/mathcalls.h>	<bits/mathcalls.h>	
#include <bits/mathcalls.h>	<bits/mathcalls.h>	
#include <bits/mathcalls-helper-functions.h>	<bits/mathcalls-helper-functions.h>	
#include <bits/mathcalls.h>	<bits/mathcalls.h>	
#include <bits/mathcalls.h>	<bits/mathcalls.h>	
#include <bits/mathcalls.h>	<bits/mathcalls.h>	
#include <bits/mathcalls-helper-functions.h>	<bits/mathcalls-helper-functions.h>	
#include <bits/mathcalls.h>	<bits/mathcalls.h>	
#include <bits/mathcalls-helper-functions.h>	<bits/mathcalls-helper-functions.h>	
#include <bits/mathcalls.h>	<bits/mathcalls.h>	
#include <bits/mathcalls-helper-functions.h>	<bits/mathcalls-helper-functions.h>	
#include <bits/fp-fast.h>	<bits/fp-fast.h>	
#include <bits/fp-logb.h>	<bits/fp-logb.h>	
#include <bits/flt-eval-method.h>	<bits/flt-eval-method.h>	
#include <bits/floatn.h>	<bits/floatn.h>	
#include <bits/math-vector.h>	<bits/math-vector.h>	
#include <bits/types.h>	<bits/types.h>	
#include <bits/libc-header-start.h>	<bits/libc-header-start.h>	
#define FP_NAN 0	FP_NAN	0
#define FP_INFINITE 1	FP_INFINITE	1
#define FP_ZERO 2	FP_ZERO	2
#define FP_SUBNORMAL 3	FP_SUBNORMAL	3
#define FP_NORMAL 4	FP_NORMAL	4
#define FP_INT_UPWARD 0	FP_INT_UPWARD	0
#define FP_INT_DOWNWARD 1	FP_INT_DOWNWARD	1
#define FP_INT_TOWARDZERO 2	FP_INT_TOWARDZERO	2
#define FP_INT_TONEARESTFROMZERO 3	FP_INT_TONEARESTFROMZERO	3
#define FP_INT_TONEAREST 4	FP_INT_TONEAREST	4
#define __MATH_EVAL_FMT2(x,y) ((x) + (y) + 0.0f)	__MATH_EVAL_FMT2(x,y)	((x) + (y) + 0.0f)
#define isunordered(x,y) __builtin_isunordered(x, y)	isunordered(x,y)	__builtin_isunordered(x, y)
#define islessgreater(x,y) __builtin_islessgreater(x, y)	islessgreater(x,y)	__builtin_islessgreater(x, y)
#define islessequal(x,y) __builtin_islessequal(x, y)	islessequal(x,y)	__builtin_islessequal(x, y)
#define isless(x,y) __builtin_isless(x, y)	isless(x,y)	__builtin_isless(x, y)
#define isgreaterequal(x,y) __builtin_isgreaterequal(x, y)	isgreaterequal(x,y)	__builtin_isgreaterequal(x, y)
#define isgreater(x,y) __builtin_isgreater(x, y)	isgreater(x,y)	__builtin_isgreater(x, y)
#define M_SQRT1_2f64x __f64x (0.707106781186547524400844362104849039)	M_SQRT1_2f64x	__f64x (0.707106781186547524400844362104849039)
#define M_SQRT2f64x __f64x (1.414213562373095048801688724209698079)	M_SQRT2f64x	__f64x (1.414213562373095048801688724209698079)
#define M_2_SQRTPIf64x __f64x (1.128379167095512573896158903121545172)	M_2_SQRTPIf64x	__f64x (1.128379167095512573896158903121545172)
#define M_2_PIf64x __f64x (0.636619772367581343075535053490057448)	M_2_PIf64x	__f64x (0.636619772367581343075535053490057448)
#define M_1_PIf64x __f64x (0.318309886183790671537767526745028724)	M_1_PIf64x	__f64x (0.318309886183790671537767526745028724)
#define M_PI_4f64x __f64x (0.785398163397448309615660845819875721)	M_PI_4f64x	__f64x (0.785398163397448309615660845819875721)
#define M_PI_2f64x __f64x (1.570796326794896619231321691639751442)	M_PI_2f64x	__f64x (1.570796326794896619231321691639751442)
#define M_PIf64x __f64x (3.141592653589793238462643383279502884)	M_PIf64x	__f64x (3.141592653589793238462643383279502884)
#define M_LN10f64x __f64x (2.302585092994045684017991454684364208)	M_LN10f64x	__f64x (2.302585092994045684017991454684364208)
#define M_LN2f64x __f64x (0.693147180559945309417232121458176568)	M_LN2f64x	__f64x (0.693147180559945309417232121458176568)
#define M_LOG10Ef64x __f64x (0.434294481903251827651128918916605082)	M_LOG10Ef64x	__f64x (0.434294481903251827651128918916605082)
#define M_LOG2Ef64x __f64x (1.442695040888963407359924681001892137)	M_LOG2Ef64x	__f64x (1.442695040888963407359924681001892137)
#define M_Ef64x __f64x (2.718281828459045235360287471352662498)	M_Ef64x	__f64x (2.718281828459045235360287471352662498)
#define M_SQRT1_2f32x __f32x (0.707106781186547524400844362104849039)	M_SQRT1_2f32x	__f32x (0.707106781186547524400844362104849039)
#define M_SQRT2f32x __f32x (1.414213562373095048801688724209698079)	M_SQRT2f32x	__f32x (1.414213562373095048801688724209698079)
#define M_2_SQRTPIf32x __f32x (1.128379167095512573896158903121545172)	M_2_SQRTPIf32x	__f32x (1.128379167095512573896158903121545172)
#define M_2_PIf32x __f32x (0.636619772367581343075535053490057448)	M_2_PIf32x	__f32x (0.636619772367581343075535053490057448)
#define M_1_PIf32x __f32x (0.318309886183790671537767526745028724)	M_1_PIf32x	__f32x (0.318309886183790671537767526745028724)
#define M_PI_4f32x __f32x (0.785398163397448309615660845819875721)	M_PI_4f32x	__f32x (0.785398163397448309615660845819875721)
#define M_PI_2f32x __f32x (1.570796326794896619231321691639751442)	M_PI_2f32x	__f32x (1.570796326794896619231321691639751442)
#define M_PIf32x __f32x (3.141592653589793238462643383279502884)	M_PIf32x	__f32x (3.141592653589793238462643383279502884)
#define M_LN10f32x __f32x (2.302585092994045684017991454684364208)	M_LN10f32x	__f32x (2.302585092994045684017991454684364208)
#define M_LN2f32x __f32x (0.693147180559945309417232121458176568)	M_LN2f32x	__f32x (0.693147180559945309417232121458176568)
#define M_LOG10Ef32x __f32x (0.434294481903251827651128918916605082)	M_LOG10Ef32x	__f32x (0.434294481903251827651128918916605082)
#define M_LOG2Ef32x __f32x (1.442695040888963407359924681001892137)	M_LOG2Ef32x	__f32x (1.442695040888963407359924681001892137)
#define M_Ef32x __f32x (2.718281828459045235360287471352662498)	M_Ef32x	__f32x (2.718281828459045235360287471352662498)
#define M_SQRT1_2f128 __f128 (0.707106781186547524400844362104849039)	M_SQRT1_2f128	__f128 (0.707106781186547524400844362104849039)
#define M_SQRT2f128 __f128 (1.414213562373095048801688724209698079)	M_SQRT2f128	__f128 (1.414213562373095048801688724209698079)
#define M_2_SQRTPIf128 __f128 (1.128379167095512573896158903121545172)	M_2_SQRTPIf128	__f128 (1.128379167095512573896158903121545172)
#define M_2_PIf128 __f128 (0.636619772367581343075535053490057448)	M_2_PIf128	__f128 (0.636619772367581343075535053490057448)
#define M_1_PIf128 __f128 (0.318309886183790671537767526745028724)	M_1_PIf128	__f128 (0.318309886183790671537767526745028724)
#define M_PI_4f128 __f128 (0.785398163397448309615660845819875721)	M_PI_4f128	__f128 (0.785398163397448309615660845819875721)
#define M_PI_2f128 __f128 (1.570796326794896619231321691639751442)	M_PI_2f128	__f128 (1.570796326794896619231321691639751442)
#define M_PIf128 __f128 (3.141592653589793238462643383279502884)	M_PIf128	__f128 (3.141592653589793238462643383279502884)
#define M_LN10f128 __f128 (2.302585092994045684017991454684364208)	M_LN10f128	__f128 (2.302585092994045684017991454684364208)
#define M_LN2f128 __f128 (0.693147180559945309417232121458176568)	M_LN2f128	__f128 (0.693147180559945309417232121458176568)
#define M_LOG10Ef128 __f128 (0.434294481903251827651128918916605082)	M_LOG10Ef128	__f128 (0.434294481903251827651128918916605082)
#define M_LOG2Ef128 __f128 (1.442695040888963407359924681001892137)	M_LOG2Ef128	__f128 (1.442695040888963407359924681001892137)
#define M_Ef128 __f128 (2.718281828459045235360287471352662498)	M_Ef128	__f128 (2.718281828459045235360287471352662498)
#define M_SQRT1_2f64 __f64 (0.707106781186547524400844362104849039)	M_SQRT1_2f64	__f64 (0.707106781186547524400844362104849039)
#define M_SQRT2f64 __f64 (1.414213562373095048801688724209698079)	M_SQRT2f64	__f64 (1.414213562373095048801688724209698079)
#define M_2_SQRTPIf64 __f64 (1.128379167095512573896158903121545172)	M_2_SQRTPIf64	__f64 (1.128379167095512573896158903121545172)
#define M_2_PIf64 __f64 (0.636619772367581343075535053490057448)	M_2_PIf64	__f64 (0.636619772367581343075535053490057448)
#define M_1_PIf64 __f64 (0.318309886183790671537767526745028724)	M_1_PIf64	__f64 (0.318309886183790671537767526745028724)
#define M_PI_4f64 __f64 (0.785398163397448309615660845819875721)	M_PI_4f64	__f64 (0.785398163397448309615660845819875721)
#define M_PI_2f64 __f64 (1.570796326794896619231321691639751442)	M_PI_2f64	__f64 (1.570796326794896619231321691639751442)
#define M_PIf64 __f64 (3.141592653589793238462643383279502884)	M_PIf64	__f64 (3.141592653589793238462643383279502884)
#define M_LN10f64 __f64 (2.302585092994045684017991454684364208)	M_LN10f64	__f64 (2.302585092994045684017991454684364208)
#define M_LN2f64 __f64 (0.693147180559945309417232121458176568)	M_LN2f64	__f64 (0.693147180559945309417232121458176568)
#define M_LOG10Ef64 __f64 (0.434294481903251827651128918916605082)	M_LOG10Ef64	__f64 (0.434294481903251827651128918916605082)
#define M_LOG2Ef64 __f64 (1.442695040888963407359924681001892137)	M_LOG2Ef64	__f64 (1.442695040888963407359924681001892137)
#define M_Ef64 __f64 (2.718281828459045235360287471352662498)	M_Ef64	__f64 (2.718281828459045235360287471352662498)
#define M_SQRT1_2f32 __f32 (0.707106781186547524400844362104849039)	M_SQRT1_2f32	__f32 (0.707106781186547524400844362104849039)
#define M_SQRT2f32 __f32 (1.414213562373095048801688724209698079)	M_SQRT2f32	__f32 (1.414213562373095048801688724209698079)
#define M_2_SQRTPIf32 __f32 (1.128379167095512573896158903121545172)	M_2_SQRTPIf32	__f32 (1.128379167095512573896158903121545172)
#define M_2_PIf32 __f32 (0.636619772367581343075535053490057448)	M_2_PIf32	__f32 (0.636619772367581343075535053490057448)
#define M_1_PIf32 __f32 (0.318309886183790671537767526745028724)	M_1_PIf32	__f32 (0.318309886183790671537767526745028724)
#define M_PI_4f32 __f32 (0.785398163397448309615660845819875721)	M_PI_4f32	__f32 (0.785398163397448309615660845819875721)
#define M_PI_2f32 __f32 (1.570796326794896619231321691639751442)	M_PI_2f32	__f32 (1.570796326794896619231321691639751442)
#define M_PIf32 __f32 (3.141592653589793238462643383279502884)	M_PIf32	__f32 (3.141592653589793238462643383279502884)
#define M_LN10f32 __f32 (2.302585092994045684017991454684364208)	M_LN10f32	__f32 (2.302585092994045684017991454684364208)
#define M_LN2f32 __f32 (0.693147180559945309417232121458176568)	M_LN2f32	__f32 (0.693147180559945309417232121458176568)
#define M_LOG10Ef32 __f32 (0.434294481903251827651128918916605082)	M_LOG10Ef32	__f32 (0.434294481903251827651128918916605082)
#define M_LOG2Ef32 __f32 (1.442695040888963407359924681001892137)	M_LOG2Ef32	__f32 (1.442695040888963407359924681001892137)
#define M_Ef32 __f32 (2.718281828459045235360287471352662498)	M_Ef32	__f32 (2.718281828459045235360287471352662498)
#define M_SQRT1_2l 0.707106781186547524400844362104849039L	M_SQRT1_2l	0.707106781186547524400844362104849039L
#define M_SQRT2l 1.414213562373095048801688724209698079L	M_SQRT2l	1.414213562373095048801688724209698079L
#define M_2_SQRTPIl 1.128379167095512573896158903121545172L	M_2_SQRTPIl	1.128379167095512573896158903121545172L
#define M_2_PIl 0.636619772367581343075535053490057448L	M_2_PIl	0.636619772367581343075535053490057448L
#define M_1_PIl 0.318309886183790671537767526745028724L	M_1_PIl	0.318309886183790671537767526745028724L
#define M_PI_4l 0.785398163397448309615660845819875721L	M_PI_4l	0.785398163397448309615660845819875721L
#define M_PI_2l 1.570796326794896619231321691639751442L	M_PI_2l	1.570796326794896619231321691639751442L
#define M_PIl 3.141592653589793238462643383279502884L	M_PIl	3.141592653589793238462643383279502884L
#define M_LN10l 2.302585092994045684017991454684364208L	M_LN10l	2.302585092994045684017991454684364208L
#define M_LN2l 0.693147180559945309417232121458176568L	M_LN2l	0.693147180559945309417232121458176568L
#define M_LOG10El 0.434294481903251827651128918916605082L	M_LOG10El	0.434294481903251827651128918916605082L
#define M_LOG2El 1.442695040888963407359924681001892137L	M_LOG2El	1.442695040888963407359924681001892137L
#define M_El 2.718281828459045235360287471352662498L	M_El	2.718281828459045235360287471352662498L
#define M_SQRT1_2 0.70710678118654752440	M_SQRT1_2	0.70710678118654752440
#define M_SQRT2 1.41421356237309504880	M_SQRT2	1.41421356237309504880
#define M_2_SQRTPI 1.12837916709551257390	M_2_SQRTPI	1.12837916709551257390
#define M_2_PI 0.63661977236758134308	M_2_PI	0.63661977236758134308
#define M_1_PI 0.31830988618379067154	M_1_PI	0.31830988618379067154
#define M_PI_4 0.78539816339744830962	M_PI_4	0.78539816339744830962
#define M_PI_2 1.57079632679489661923	M_PI_2	1.57079632679489661923
#define M_PI 3.14159265358979323846	M_PI	3.14159265358979323846
#define M_LN10 2.30258509299404568402	M_LN10	2.30258509299404568402
#define M_LN2 0.69314718055994530942	M_LN2	0.69314718055994530942
#define M_LOG10E 0.43429448190325182765	M_LOG10E	0.43429448190325182765
#define M_LOG2E 1.4426950408889634074	M_LOG2E	1.4426950408889634074
#define M_E 2.7182818284590452354	M_E	2.7182818284590452354
#define MAXFLOAT 3.40282347e+38F	MAXFLOAT	3.40282347e+38F
#define issubnormal(x) (fpclassify (x) == FP_SUBNORMAL)	issubnormal(x)	(fpclassify (x) == FP_SUBNORMAL)
#define math_errhandling (MATH_ERRNO | MATH_ERREXCEPT)	math_errhandling	(MATH_ERRNO | MATH_ERREXCEPT)
#define MATH_ERREXCEPT 2	MATH_ERREXCEPT	2
#define MATH_ERRNO 1	MATH_ERRNO	1
#define isinf(x) __builtin_isinf_sign (x)	isinf(x)	__builtin_isinf_sign (x)
#define isnan(x) __builtin_isnan (x)	isnan(x)	__builtin_isnan (x)
#define isnormal(x) __builtin_isnormal (x)	isnormal(x)	__builtin_isnormal (x)
#define isfinite(x) __builtin_isfinite (x)	isfinite(x)	__builtin_isfinite (x)
#define signbit(x) __builtin_signbit (x)	signbit(x)	__builtin_signbit (x)
#define fpclassify(x) __builtin_fpclassify (FP_NAN, FP_INFINITE, FP_NORMAL, FP_SUBNORMAL, FP_ZERO, x)	fpclassify(x)	__builtin_fpclassify (FP_NAN, FP_INFINITE, FP_NORMAL, FP_SUBNORMAL, FP_ZERO, x)
#define __MATH_TG(TG_ARG,FUNC,ARGS) __builtin_choose_expr (__builtin_types_compatible_p (__typeof (TG_ARG), float), FUNC ## f ARGS, __builtin_choose_expr (__builtin_types_compatible_p (__typeof (TG_ARG), double), FUNC ARGS, __builtin_choose_expr (__builtin_types_compatible_p (__typeof (TG_ARG), long double), FUNC ## l ARGS, FUNC ## f128 ARGS)))	__MATH_TG(TG_ARG,FUNC,ARGS)	__builtin_choose_expr (__builtin_types_compatible_p (__typeof (TG_ARG), float), FUNC ## f ARGS, __builtin_choose_expr (__builtin_types_compatible_p (__typeof (TG_ARG), double), FUNC ARGS, __builtin_choose_expr (__builtin_types_compatible_p (__typeof (TG_ARG), long double), FUNC ## l ARGS, FUNC ## f128 ARGS)))
#undef __MATHCALL_NARROW	__MATHCALL_NARROW	
#undef __MATHCALL_NARROW_REDIR	__MATHCALL_NARROW_REDIR	
#undef __MATHCALL_NARROW_NORMAL	__MATHCALL_NARROW_NORMAL	
#undef __MATHCALL_NARROW_ARGS_3	__MATHCALL_NARROW_ARGS_3	
#undef __MATHCALL_NARROW_ARGS_2	__MATHCALL_NARROW_ARGS_2	
#undef __MATHCALL_NARROW_ARGS_1	__MATHCALL_NARROW_ARGS_1	
#undef __MATHCALL_NAME	__MATHCALL_NAME	
#undef _Marg_	_Marg_	
#undef _Mret_	_Mret_	
#undef __MATHCALL_NAME	__MATHCALL_NAME	
#undef _Marg_	_Marg_	
#undef _Mret_	_Mret_	
#undef __MATHCALL_NAME	__MATHCALL_NAME	
#undef _Marg_	_Marg_	
#undef _Mret_	_Mret_	
#undef __MATHCALL_NAME	__MATHCALL_NAME	
#undef _Marg_	_Marg_	
#undef _Mret_	_Mret_	
#undef __MATHCALL_NAME	__MATHCALL_NAME	
#undef _Marg_	_Marg_	
#undef _Mret_	_Mret_	
#undef __MATHCALL_NAME	__MATHCALL_NAME	
#undef _Marg_	_Marg_	
#undef _Mret_	_Mret_	
#undef __MATHCALL_NAME	__MATHCALL_NAME	
#undef _Marg_	_Marg_	
#undef _Mret_	_Mret_	
#undef __MATHCALL_NAME	__MATHCALL_NAME	
#undef _Marg_	_Marg_	
#undef _Mret_	_Mret_	
#undef __MATHCALL_NAME	__MATHCALL_NAME	
#undef _Marg_	_Marg_	
#undef _Mret_	_Mret_	
#undef __MATHCALL_NAME	__MATHCALL_NAME	
#undef _Marg_	_Marg_	
#undef _Mret_	_Mret_	
#undef __MATHCALL_NAME	__MATHCALL_NAME	
#undef _Marg_	_Marg_	
#undef _Mret_	_Mret_	
#undef __MATHCALL_NAME	__MATHCALL_NAME	
#undef _Marg_	_Marg_	
#undef _Mret_	_Mret_	
#undef __MATHCALL_NAME	__MATHCALL_NAME	
#undef _Marg_	_Marg_	
#undef _Mret_	_Mret_	
#define __MATHCALL_NARROW_REDIR(func,redir,nargs) extern _Mret_ __REDIRECT_NTH (func, __MATHCALL_NARROW_ARGS_ ## nargs, redir)	__MATHCALL_NARROW_REDIR(func,redir,nargs)	extern _Mret_ __REDIRECT_NTH (func, __MATHCALL_NARROW_ARGS_ ## nargs, redir)
#define __MATHCALL_NARROW_ARGS_3 (_Marg_ __x, _Marg_ __y, _Marg_ __z)	__MATHCALL_NARROW_ARGS_3	(_Marg_ __x, _Marg_ __y, _Marg_ __z)
#define __MATHCALL_NARROW_ARGS_1 (_Marg_ __x)	__MATHCALL_NARROW_ARGS_1	(_Marg_ __x)
#undef __MATHCALL	__MATHCALL	
#undef __MATHDECL	__MATHDECL	
#undef __MATHDECL_1	__MATHDECL_1	
#undef __MATH_DECLARING_FLOATN	__MATH_DECLARING_FLOATN	
#undef __MATH_DECLARING_DOUBLE	__MATH_DECLARING_DOUBLE	
#undef __MATH_PRECNAME	__MATH_PRECNAME	
#undef _Mdouble_	_Mdouble_	
#undef __MATH_DECLARING_FLOATN	__MATH_DECLARING_FLOATN	
#undef __MATH_DECLARING_DOUBLE	__MATH_DECLARING_DOUBLE	
#undef __MATH_PRECNAME	__MATH_PRECNAME	
#undef _Mdouble_	_Mdouble_	
#undef __MATH_DECLARING_FLOATN	__MATH_DECLARING_FLOATN	
#undef __MATH_DECLARING_DOUBLE	__MATH_DECLARING_DOUBLE	
#undef __MATH_PRECNAME	__MATH_PRECNAME	
#undef _Mdouble_	_Mdouble_	
#undef __MATH_DECLARING_FLOATN	__MATH_DECLARING_FLOATN	
#undef __MATH_DECLARING_DOUBLE	__MATH_DECLARING_DOUBLE	
#undef __MATH_PRECNAME	__MATH_PRECNAME	
#undef _Mdouble_	_Mdouble_	
#undef __MATH_DECLARING_FLOATN	__MATH_DECLARING_FLOATN	
#undef __MATH_DECLARING_DOUBLE	__MATH_DECLARING_DOUBLE	
#undef __MATH_PRECNAME	__MATH_PRECNAME	
#undef _Mdouble_	_Mdouble_	
#undef __MATH_DECLARING_FLOATN	__MATH_DECLARING_FLOATN	
#undef __MATH_DECLARING_DOUBLE	__MATH_DECLARING_DOUBLE	
#undef __MATH_PRECNAME	__MATH_PRECNAME	
#undef _Mdouble_	_Mdouble_	
#define __MATH_DECLARE_LDOUBLE 1	__MATH_DECLARE_LDOUBLE	1
#undef __MATH_DECLARING_FLOATN	__MATH_DECLARING_FLOATN	
#undef __MATH_DECLARING_DOUBLE	__MATH_DECLARING_DOUBLE	
#undef __MATH_PRECNAME	__MATH_PRECNAME	
#undef _Mdouble_	_Mdouble_	
#undef __MATH_DECLARING_FLOATN	__MATH_DECLARING_FLOATN	
#undef __MATH_DECLARING_DOUBLE	__MATH_DECLARING_DOUBLE	
#undef __MATH_PRECNAME	__MATH_PRECNAME	
#undef _Mdouble_	_Mdouble_	
#define FP_LLOGBNAN (-__FP_LONG_MAX - 1)	FP_LLOGBNAN	(-__FP_LONG_MAX - 1)
#define FP_LLOGB0 (-__FP_LONG_MAX - 1)	FP_LLOGB0	(-__FP_LONG_MAX - 1)
#define __FP_LONG_MAX 0x7fffffffffffffffL	__FP_LONG_MAX	0x7fffffffffffffffL
#define FP_ILOGBNAN (-2147483647 - 1)	FP_ILOGBNAN	(-2147483647 - 1)
#define FP_ILOGB0 (-2147483647 - 1)	FP_ILOGB0	(-2147483647 - 1)
"#define SNANF64X (__builtin_nansf64x (""""))"	SNANF64X	"(__builtin_nansf64x (""""))"
"#define SNANF32X (__builtin_nansf32x (""""))"	SNANF32X	"(__builtin_nansf32x (""""))"
"#define SNANF128 (__builtin_nansf128 (""""))"	SNANF128	"(__builtin_nansf128 (""""))"
"#define SNANF64 (__builtin_nansf64 (""""))"	SNANF64	"(__builtin_nansf64 (""""))"
"#define SNANF32 (__builtin_nansf32 (""""))"	SNANF32	"(__builtin_nansf32 (""""))"
"#define SNANL (__builtin_nansl (""""))"	SNANL	"(__builtin_nansl (""""))"
"#define SNAN (__builtin_nans (""""))"	SNAN	"(__builtin_nans (""""))"
"#define SNANF (__builtin_nansf (""""))"	SNANF	"(__builtin_nansf (""""))"
"#define NAN (__builtin_nanf (""""))"	NAN	"(__builtin_nanf (""""))"
#define INFINITY (__builtin_inff ())	INFINITY	(__builtin_inff ())
#define HUGE_VAL_F64X (__builtin_huge_valf64x ())	HUGE_VAL_F64X	(__builtin_huge_valf64x ())
#define HUGE_VAL_F32X (__builtin_huge_valf32x ())	HUGE_VAL_F32X	(__builtin_huge_valf32x ())
#define HUGE_VAL_F128 (__builtin_huge_valf128 ())	HUGE_VAL_F128	(__builtin_huge_valf128 ())
#define HUGE_VAL_F64 (__builtin_huge_valf64 ())	HUGE_VAL_F64	(__builtin_huge_valf64 ())
#define HUGE_VAL_F32 (__builtin_huge_valf32 ())	HUGE_VAL_F32	(__builtin_huge_valf32 ())
#define HUGE_VALL (__builtin_huge_vall ())	HUGE_VALL	(__builtin_huge_vall ())
#define HUGE_VALF (__builtin_huge_valf ())	HUGE_VALF	(__builtin_huge_valf ())
#define HUGE_VAL (__builtin_huge_val ())	HUGE_VAL	(__builtin_huge_val ())
#ifndef _MATH_H	_MATH_H	
#if defined log && defined __GNUC__	defined log && defined __GNUC__	
#if __GNUC_PREREQ (3, 3)	__GNUC_PREREQ (3, 3)	
#ifdef __USE_ISOC99	__USE_ISOC99	
#if __GNUC_PREREQ (3, 3)	__GNUC_PREREQ (3, 3)	
#if __HAVE_FLOAT16 && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT16 && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_FLOAT32 && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT32 && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_FLOAT64 && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT64 && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_FLOAT128 && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT128 && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_FLOAT32X && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT32X && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_FLOAT64X && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT64X && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_FLOAT128X && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT128X && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#ifdef __USE_ISOC99	__USE_ISOC99	
#if __GNUC_PREREQ (3, 3)	__GNUC_PREREQ (3, 3)	
#if __GNUC_PREREQ (3, 3)	__GNUC_PREREQ (3, 3)	
#if __GLIBC_USE (IEC_60559_BFP_EXT)	__GLIBC_USE (IEC_60559_BFP_EXT)	
#if __GNUC_PREREQ (3, 3)	__GNUC_PREREQ (3, 3)	
#if __HAVE_FLOAT16 && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT16 && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_FLOAT32 && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT32 && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_FLOAT64 && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT64 && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_FLOAT128 && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT128 && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_FLOAT32X && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT32X && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_FLOAT64X && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT64X && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_FLOAT128X && __GLIBC_USE (IEC_60559_TYPES_EXT)	__HAVE_FLOAT128X && __GLIBC_USE (IEC_60559_TYPES_EXT)	
#ifdef __USE_ISOC99	__USE_ISOC99	
#if __GLIBC_FLT_EVAL_METHOD == 0 || __GLIBC_FLT_EVAL_METHOD == 16	__GLIBC_FLT_EVAL_METHOD == 0 || __GLIBC_FLT_EVAL_METHOD == 16	
#elif __GLIBC_FLT_EVAL_METHOD == 1	__GLIBC_FLT_EVAL_METHOD == 1	
#elif __GLIBC_FLT_EVAL_METHOD == 2	__GLIBC_FLT_EVAL_METHOD == 2	
#elif __GLIBC_FLT_EVAL_METHOD == 32	__GLIBC_FLT_EVAL_METHOD == 32	
#elif __GLIBC_FLT_EVAL_METHOD == 33	__GLIBC_FLT_EVAL_METHOD == 33	
#elif __GLIBC_FLT_EVAL_METHOD == 64	__GLIBC_FLT_EVAL_METHOD == 64	
#elif __GLIBC_FLT_EVAL_METHOD == 65	__GLIBC_FLT_EVAL_METHOD == 65	
#elif __GLIBC_FLT_EVAL_METHOD == 128	__GLIBC_FLT_EVAL_METHOD == 128	
#elif __GLIBC_FLT_EVAL_METHOD == 129	__GLIBC_FLT_EVAL_METHOD == 129	
#ifdef __USE_ISOC99	__USE_ISOC99	
#if __FP_LOGB0_IS_MIN	__FP_LOGB0_IS_MIN	
#if __FP_LOGBNAN_IS_MIN	__FP_LOGBNAN_IS_MIN	
#if __GLIBC_USE (IEC_60559_BFP_EXT)	__GLIBC_USE (IEC_60559_BFP_EXT)	
#if __WORDSIZE == 32	__WORDSIZE == 32	
#if __FP_LOGB0_IS_MIN	__FP_LOGB0_IS_MIN	
#if __FP_LOGBNAN_IS_MIN	__FP_LOGBNAN_IS_MIN	
#if __GLIBC_USE (IEC_60559_BFP_EXT)	__GLIBC_USE (IEC_60559_BFP_EXT)	
#ifdef __USE_ISOC99	__USE_ISOC99	
#if !(defined __NO_LONG_DOUBLE_MATH && defined _LIBC) \	!(defined __NO_LONG_DOUBLE_MATH && defined _LIBC) \	
#ifdef __LDBL_COMPAT	__LDBL_COMPAT	
#ifdef __USE_ISOC99	__USE_ISOC99	
#ifdef __REDIRECT_NTH	__REDIRECT_NTH	
#if __HAVE_DISTINCT_FLOAT16 || (__HAVE_FLOAT16 && !defined _LIBC)	__HAVE_DISTINCT_FLOAT16 || (__HAVE_FLOAT16 && !defined _LIBC)	
#if __HAVE_DISTINCT_FLOAT16	__HAVE_DISTINCT_FLOAT16	
#if __GLIBC_USE (IEC_60559_TYPES_EXT)	__GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_DISTINCT_FLOAT32 || (__HAVE_FLOAT32 && !defined _LIBC)	__HAVE_DISTINCT_FLOAT32 || (__HAVE_FLOAT32 && !defined _LIBC)	
#if __HAVE_DISTINCT_FLOAT32	__HAVE_DISTINCT_FLOAT32	
#if __GLIBC_USE (IEC_60559_TYPES_EXT)	__GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_DISTINCT_FLOAT64 || (__HAVE_FLOAT64 && !defined _LIBC)	__HAVE_DISTINCT_FLOAT64 || (__HAVE_FLOAT64 && !defined _LIBC)	
#if __HAVE_DISTINCT_FLOAT64	__HAVE_DISTINCT_FLOAT64	
#if __GLIBC_USE (IEC_60559_TYPES_EXT)	__GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_DISTINCT_FLOAT128 || (__HAVE_FLOAT128 && !defined _LIBC)	__HAVE_DISTINCT_FLOAT128 || (__HAVE_FLOAT128 && !defined _LIBC)	
#if __HAVE_DISTINCT_FLOAT128	__HAVE_DISTINCT_FLOAT128	
#if __GLIBC_USE (IEC_60559_TYPES_EXT)	__GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_DISTINCT_FLOAT32X || (__HAVE_FLOAT32X && !defined _LIBC)	__HAVE_DISTINCT_FLOAT32X || (__HAVE_FLOAT32X && !defined _LIBC)	
#if __HAVE_DISTINCT_FLOAT32X	__HAVE_DISTINCT_FLOAT32X	
#if __GLIBC_USE (IEC_60559_TYPES_EXT)	__GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_DISTINCT_FLOAT64X || (__HAVE_FLOAT64X && !defined _LIBC)	__HAVE_DISTINCT_FLOAT64X || (__HAVE_FLOAT64X && !defined _LIBC)	
#if __HAVE_DISTINCT_FLOAT64X	__HAVE_DISTINCT_FLOAT64X	
#if __GLIBC_USE (IEC_60559_TYPES_EXT)	__GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_DISTINCT_FLOAT128X || (__HAVE_FLOAT128X && !defined _LIBC)	__HAVE_DISTINCT_FLOAT128X || (__HAVE_FLOAT128X && !defined _LIBC)	
#if __HAVE_DISTINCT_FLOAT128X	__HAVE_DISTINCT_FLOAT128X	
#if __GLIBC_USE (IEC_60559_TYPES_EXT)	__GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __GLIBC_USE (IEC_60559_BFP_EXT)	__GLIBC_USE (IEC_60559_BFP_EXT)	
#ifdef __LDBL_COMPAT	__LDBL_COMPAT	
#ifdef __LDBL_COMPAT	__LDBL_COMPAT	
#ifdef __LDBL_COMPAT	__LDBL_COMPAT	
#ifdef __LDBL_COMPAT	__LDBL_COMPAT	
#if __GLIBC_USE (IEC_60559_TYPES_EXT)	__GLIBC_USE (IEC_60559_TYPES_EXT)	
#if __HAVE_FLOAT16 && __HAVE_FLOAT32	__HAVE_FLOAT16 && __HAVE_FLOAT32	
#if __HAVE_FLOAT16 && __HAVE_FLOAT32X	__HAVE_FLOAT16 && __HAVE_FLOAT32X	
#if __HAVE_FLOAT16 && __HAVE_FLOAT64	__HAVE_FLOAT16 && __HAVE_FLOAT64	
#if __HAVE_FLOAT16 && __HAVE_FLOAT64X	__HAVE_FLOAT16 && __HAVE_FLOAT64X	
#if __HAVE_FLOAT16 && __HAVE_FLOAT128	__HAVE_FLOAT16 && __HAVE_FLOAT128	
#if __HAVE_FLOAT16 && __HAVE_FLOAT128X	__HAVE_FLOAT16 && __HAVE_FLOAT128X	
#if __HAVE_FLOAT32 && __HAVE_FLOAT32X	__HAVE_FLOAT32 && __HAVE_FLOAT32X	
#if __HAVE_FLOAT32 && __HAVE_FLOAT64	__HAVE_FLOAT32 && __HAVE_FLOAT64	
#if __HAVE_FLOAT32 && __HAVE_FLOAT64X	__HAVE_FLOAT32 && __HAVE_FLOAT64X	
#if __HAVE_FLOAT32 && __HAVE_FLOAT128	__HAVE_FLOAT32 && __HAVE_FLOAT128	
#if __HAVE_FLOAT32 && __HAVE_FLOAT128X	__HAVE_FLOAT32 && __HAVE_FLOAT128X	
#if __HAVE_FLOAT32X && __HAVE_FLOAT64	__HAVE_FLOAT32X && __HAVE_FLOAT64	
#if __HAVE_FLOAT32X && __HAVE_FLOAT64X	__HAVE_FLOAT32X && __HAVE_FLOAT64X	
#if __HAVE_FLOAT32X && __HAVE_FLOAT128	__HAVE_FLOAT32X && __HAVE_FLOAT128	
#if __HAVE_FLOAT32X && __HAVE_FLOAT128X	__HAVE_FLOAT32X && __HAVE_FLOAT128X	
#if __HAVE_FLOAT64 && __HAVE_FLOAT64X	__HAVE_FLOAT64 && __HAVE_FLOAT64X	
#if __HAVE_FLOAT64 && __HAVE_FLOAT128	__HAVE_FLOAT64 && __HAVE_FLOAT128	
#if __HAVE_FLOAT64 && __HAVE_FLOAT128X	__HAVE_FLOAT64 && __HAVE_FLOAT128X	
#if __HAVE_FLOAT64X && __HAVE_FLOAT128	__HAVE_FLOAT64X && __HAVE_FLOAT128	
#if __HAVE_FLOAT64X && __HAVE_FLOAT128X	__HAVE_FLOAT64X && __HAVE_FLOAT128X	
#if __HAVE_FLOAT128 && __HAVE_FLOAT128X	__HAVE_FLOAT128 && __HAVE_FLOAT128X	
#if defined __USE_MISC || defined __USE_XOPEN	defined __USE_MISC || defined __USE_XOPEN	
"#if (__HAVE_DISTINCT_FLOAT16			\"	"(__HAVE_DISTINCT_FLOAT16			\"	
#ifdef __NO_LONG_DOUBLE_MATH	__NO_LONG_DOUBLE_MATH	
#if __HAVE_DISTINCT_FLOAT128	__HAVE_DISTINCT_FLOAT128	
#elif __HAVE_DISTINCT_FLOAT128	__HAVE_DISTINCT_FLOAT128	
#if __HAVE_GENERIC_SELECTION	__HAVE_GENERIC_SELECTION	
#if __HAVE_FLOATN_NOT_TYPEDEF && __HAVE_FLOAT32	__HAVE_FLOATN_NOT_TYPEDEF && __HAVE_FLOAT32	
#if __HAVE_FLOATN_NOT_TYPEDEF && __HAVE_FLOAT64X	__HAVE_FLOATN_NOT_TYPEDEF && __HAVE_FLOAT64X	
#if __HAVE_FLOAT64X_LONG_DOUBLE	__HAVE_FLOAT64X_LONG_DOUBLE	
#if __HAVE_FLOATN_NOT_TYPEDEF	__HAVE_FLOATN_NOT_TYPEDEF	
#ifdef __USE_ISOC99	__USE_ISOC99	
"#if ((__GNUC_PREREQ (4,4) && !defined __SUPPORT_SNAN__)		      \"	"((__GNUC_PREREQ (4,4) && !defined __SUPPORT_SNAN__)		      \"	
#if __GNUC_PREREQ (6,0) || __glibc_clang_prereq (3,3)	__GNUC_PREREQ (6,0) || __glibc_clang_prereq (3,3)	
#elif defined __cplusplus	defined __cplusplus	
#elif __GNUC_PREREQ (4,0)	__GNUC_PREREQ (4,0)	
#if (__GNUC_PREREQ (4,4) && !defined __SUPPORT_SNAN__) \	(__GNUC_PREREQ (4,4) && !defined __SUPPORT_SNAN__) \	
#if (__GNUC_PREREQ (4,4) && !defined __SUPPORT_SNAN__) \	(__GNUC_PREREQ (4,4) && !defined __SUPPORT_SNAN__) \	
#if (__GNUC_PREREQ (4,4) && !defined __SUPPORT_SNAN__) \	(__GNUC_PREREQ (4,4) && !defined __SUPPORT_SNAN__) \	
#if __HAVE_DISTINCT_FLOAT128 && !__GNUC_PREREQ (7,0) \	__HAVE_DISTINCT_FLOAT128 && !__GNUC_PREREQ (7,0) \	
#elif (__GNUC_PREREQ (4,4) && !defined __SUPPORT_SNAN__) \	(__GNUC_PREREQ (4,4) && !defined __SUPPORT_SNAN__) \	
#ifdef __FAST_MATH__	__FAST_MATH__	
#elif defined __NO_MATH_ERRNO__	defined __NO_MATH_ERRNO__	
#if __GLIBC_USE (IEC_60559_BFP_EXT)	__GLIBC_USE (IEC_60559_BFP_EXT)	
#ifndef __cplusplus	__cplusplus	
#ifdef __NO_LONG_DOUBLE_MATH	__NO_LONG_DOUBLE_MATH	
#if __HAVE_FLOAT128_UNLIKE_LDBL	__HAVE_FLOAT128_UNLIKE_LDBL	
#ifndef __cplusplus	__cplusplus	
#ifdef __SUPPORT_SNAN__	__SUPPORT_SNAN__	
#ifdef __SUPPORT_SNAN__	__SUPPORT_SNAN__	
#ifdef __NO_LONG_DOUBLE_MATH	__NO_LONG_DOUBLE_MATH	
#if __HAVE_FLOAT128_UNLIKE_LDBL	__HAVE_FLOAT128_UNLIKE_LDBL	
#ifdef __USE_XOPEN	__USE_XOPEN	
#if defined __USE_MISC || defined __USE_XOPEN	defined __USE_MISC || defined __USE_XOPEN	
#ifdef __USE_GNU	__USE_GNU	
#if __HAVE_FLOAT16 && defined __USE_GNU	__HAVE_FLOAT16 && defined __USE_GNU	
#if __HAVE_FLOAT32 && defined __USE_GNU	__HAVE_FLOAT32 && defined __USE_GNU	
#if __HAVE_FLOAT64 && defined __USE_GNU	__HAVE_FLOAT64 && defined __USE_GNU	
#if __HAVE_FLOAT128 && defined __USE_GNU	__HAVE_FLOAT128 && defined __USE_GNU	
#if __HAVE_FLOAT32X && defined __USE_GNU	__HAVE_FLOAT32X && defined __USE_GNU	
#if __HAVE_FLOAT64X && defined __USE_GNU	__HAVE_FLOAT64X && defined __USE_GNU	
#if __HAVE_FLOAT128X && defined __USE_GNU	__HAVE_FLOAT128X && defined __USE_GNU	
#if defined __STRICT_ANSI__ && !defined __NO_MATH_INLINES	defined __STRICT_ANSI__ && !defined __NO_MATH_INLINES	
#ifdef __USE_ISOC99	__USE_ISOC99	
#if __GNUC_PREREQ (3, 1)	__GNUC_PREREQ (3, 1)	
#ifdef __USE_EXTERN_INLINES	__USE_EXTERN_INLINES	
#if defined __FINITE_MATH_ONLY__ && __FINITE_MATH_ONLY__ > 0	defined __FINITE_MATH_ONLY__ && __FINITE_MATH_ONLY__ > 0	
#ifdef __USE_ISOC99	__USE_ISOC99	
#ifdef __MATH_DECLARE_LDOUBLE	__MATH_DECLARE_LDOUBLE	
#ifdef __NO_LONG_DOUBLE_MATH	__NO_LONG_DOUBLE_MATH	
"#if (__HAVE_DISTINCT_FLOAT16 || (__HAVE_FLOAT16 && !defined _LIBC))	\"	"(__HAVE_DISTINCT_FLOAT16 || (__HAVE_FLOAT16 && !defined _LIBC))	\"	
#if __HAVE_DISTINCT_FLOAT16	__HAVE_DISTINCT_FLOAT16	
"#if (__HAVE_DISTINCT_FLOAT32 || (__HAVE_FLOAT32 && !defined _LIBC))	\"	"(__HAVE_DISTINCT_FLOAT32 || (__HAVE_FLOAT32 && !defined _LIBC))	\"	
#if __HAVE_DISTINCT_FLOAT32	__HAVE_DISTINCT_FLOAT32	
"#if (__HAVE_DISTINCT_FLOAT64 || (__HAVE_FLOAT64 && !defined _LIBC))	\"	"(__HAVE_DISTINCT_FLOAT64 || (__HAVE_FLOAT64 && !defined _LIBC))	\"	
#if __HAVE_DISTINCT_FLOAT64	__HAVE_DISTINCT_FLOAT64	
"#if (__HAVE_DISTINCT_FLOAT128 || (__HAVE_FLOAT128 && !defined _LIBC))	\"	"(__HAVE_DISTINCT_FLOAT128 || (__HAVE_FLOAT128 && !defined _LIBC))	\"	
#if __HAVE_DISTINCT_FLOAT128	__HAVE_DISTINCT_FLOAT128	
"#if (__HAVE_DISTINCT_FLOAT32X || (__HAVE_FLOAT32X && !defined _LIBC))	\"	"(__HAVE_DISTINCT_FLOAT32X || (__HAVE_FLOAT32X && !defined _LIBC))	\"	
#if __HAVE_DISTINCT_FLOAT32X	__HAVE_DISTINCT_FLOAT32X	
"#if (__HAVE_DISTINCT_FLOAT64X || (__HAVE_FLOAT64X && !defined _LIBC))	\"	"(__HAVE_DISTINCT_FLOAT64X || (__HAVE_FLOAT64X && !defined _LIBC))	\"	
#if __HAVE_DISTINCT_FLOAT64X	__HAVE_DISTINCT_FLOAT64X	
#elif __HAVE_FLOAT64X_LONG_DOUBLE	__HAVE_FLOAT64X_LONG_DOUBLE	
#if (__HAVE_DISTINCT_FLOAT128X || (__HAVE_FLOAT128X && !defined _LIBC)) \	(__HAVE_DISTINCT_FLOAT128X || (__HAVE_FLOAT128X && !defined _LIBC)) \	
#if __HAVE_DISTINCT_FLOAT128X	__HAVE_DISTINCT_FLOAT128X	
#if __GLIBC_USE (IEC_60559_BFP_EXT)	__GLIBC_USE (IEC_60559_BFP_EXT)	
#if __FLT_EVAL_METHOD__ == 2 || __FLT_EVAL_METHOD__ > 64	__FLT_EVAL_METHOD__ == 2 || __FLT_EVAL_METHOD__ > 64	
#elif __FLT_EVAL_METHOD__ == 1 || __FLT_EVAL_METHOD__ > 32	__FLT_EVAL_METHOD__ == 1 || __FLT_EVAL_METHOD__ > 32	
#elif __FLT_EVAL_METHOD__ == 0 || __FLT_EVAL_METHOD__ == 32	__FLT_EVAL_METHOD__ == 0 || __FLT_EVAL_METHOD__ == 32	
#if !defined __cplusplus || (__cplusplus < 201103L && !defined __GNUC__)	!defined __cplusplus || (__cplusplus < 201103L && !defined __GNUC__)	
#ifndef __NO_LONG_DOUBLE_MATH	__NO_LONG_DOUBLE_MATH	
#if __HAVE_FLOAT128_UNLIKE_LDBL	__HAVE_FLOAT128_UNLIKE_LDBL	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#define __FINITE_MATH_ONLY__ 0	__FINITE_MATH_ONLY__	0
#include <bits/std_abs.h>	<bits/std_abs.h>	
#include_next <math.h>	<math.h>	
#include <ext/type_traits.h>	<ext/type_traits.h>	
#include <bits/cpp_type_traits.h>	<bits/cpp_type_traits.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#undef truncl	truncl	
#undef truncf	truncf	
#undef trunc	trunc	
#undef tgammal	tgammal	
#undef tgammaf	tgammaf	
#undef tgamma	tgamma	
#undef scalbnl	scalbnl	
#undef scalbnf	scalbnf	
#undef scalbn	scalbn	
#undef scalblnl	scalblnl	
#undef scalblnf	scalblnf	
#undef scalbln	scalbln	
#undef roundl	roundl	
#undef roundf	roundf	
#undef round	round	
#undef rintl	rintl	
#undef rintf	rintf	
#undef rint	rint	
#undef remquol	remquol	
#undef remquof	remquof	
#undef remquo	remquo	
#undef remainderl	remainderl	
#undef remainderf	remainderf	
#undef remainder	remainder	
#undef nexttowardl	nexttowardl	
#undef nexttowardf	nexttowardf	
#undef nexttoward	nexttoward	
#undef nextafterl	nextafterl	
#undef nextafterf	nextafterf	
#undef nextafter	nextafter	
#undef nearbyintl	nearbyintl	
#undef nearbyintf	nearbyintf	
#undef nearbyint	nearbyint	
#undef nanl	nanl	
#undef nanf	nanf	
#undef nan	nan	
#undef lroundl	lroundl	
#undef lroundf	lroundf	
#undef lround	lround	
#undef lrintl	lrintl	
#undef lrintf	lrintf	
#undef lrint	lrint	
#undef logbl	logbl	
#undef logbf	logbf	
#undef logb	logb	
#undef log2l	log2l	
#undef log2f	log2f	
#undef log2	log2	
#undef log1pl	log1pl	
#undef log1pf	log1pf	
#undef log1p	log1p	
#undef llroundl	llroundl	
#undef llroundf	llroundf	
#undef llround	llround	
#undef llrintl	llrintl	
#undef llrintf	llrintf	
#undef llrint	llrint	
#undef lgammal	lgammal	
#undef lgammaf	lgammaf	
#undef lgamma	lgamma	
#undef ilogbl	ilogbl	
#undef ilogbf	ilogbf	
#undef ilogb	ilogb	
#undef hypotl	hypotl	
#undef hypotf	hypotf	
#undef hypot	hypot	
#undef fminl	fminl	
#undef fminf	fminf	
#undef fmin	fmin	
#undef fmaxl	fmaxl	
#undef fmaxf	fmaxf	
#undef fmax	fmax	
#undef fmal	fmal	
#undef fmaf	fmaf	
#undef fma	fma	
#undef fdiml	fdiml	
#undef fdimf	fdimf	
#undef fdim	fdim	
#undef expm1l	expm1l	
#undef expm1f	expm1f	
#undef expm1	expm1	
#undef exp2l	exp2l	
#undef exp2f	exp2f	
#undef exp2	exp2	
#undef erfcl	erfcl	
#undef erfcf	erfcf	
#undef erfc	erfc	
#undef erfl	erfl	
#undef erff	erff	
#undef erf	erf	
#undef copysignl	copysignl	
#undef copysignf	copysignf	
#undef copysign	copysign	
#undef cbrtl	cbrtl	
#undef cbrtf	cbrtf	
#undef cbrt	cbrt	
#undef atanhl	atanhl	
#undef atanhf	atanhf	
#undef atanh	atanh	
#undef asinhl	asinhl	
#undef asinhf	asinhf	
#undef asinh	asinh	
#undef acoshl	acoshl	
#undef acoshf	acoshf	
#undef acosh	acosh	
#undef isunordered	isunordered	
#undef islessgreater	islessgreater	
#undef islessequal	islessequal	
#undef isless	isless	
#undef isgreaterequal	isgreaterequal	
#undef isgreater	isgreater	
#undef signbit	signbit	
#undef isnormal	isnormal	
#undef isnan	isnan	
#undef isinf	isinf	
#undef isfinite	isfinite	
#undef fpclassify	fpclassify	
#undef tanh	tanh	
#undef tan	tan	
#undef sqrt	sqrt	
#undef sinh	sinh	
#undef sin	sin	
#undef pow	pow	
#undef modf	modf	
#undef log10	log10	
#undef log	log	
#undef ldexp	ldexp	
#undef frexp	frexp	
#undef fmod	fmod	
#undef floor	floor	
#undef fabs	fabs	
#undef exp	exp	
#undef cosh	cosh	
#undef cos	cos	
#undef ceil	ceil	
#undef atan2	atan2	
#undef atan	atan	
#undef asin	asin	
#undef acos	acos	
#undef div	div	
#define _GLIBCXX_CMATH 1	_GLIBCXX_CMATH	1
#undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS	_GLIBCXX_INCLUDE_NEXT_C_HEADERS	
#define _GLIBCXX_INCLUDE_NEXT_C_HEADERS	_GLIBCXX_INCLUDE_NEXT_C_HEADERS	
#pragma GCC system_header	GCC system_header	
#ifndef _GLIBCXX_CMATH	_GLIBCXX_CMATH	
#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO	__CORRECT_ISO_CPP_MATH_H_PROTO	
#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO	__CORRECT_ISO_CPP_MATH_H_PROTO	
#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO	__CORRECT_ISO_CPP_MATH_H_PROTO	
#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO	__CORRECT_ISO_CPP_MATH_H_PROTO	
#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO	__CORRECT_ISO_CPP_MATH_H_PROTO	
#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO	__CORRECT_ISO_CPP_MATH_H_PROTO	
#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO	__CORRECT_ISO_CPP_MATH_H_PROTO	
#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO	__CORRECT_ISO_CPP_MATH_H_PROTO	
#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO	__CORRECT_ISO_CPP_MATH_H_PROTO	
#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO	__CORRECT_ISO_CPP_MATH_H_PROTO	
#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO	__CORRECT_ISO_CPP_MATH_H_PROTO	
#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO	__CORRECT_ISO_CPP_MATH_H_PROTO	
#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO	__CORRECT_ISO_CPP_MATH_H_PROTO	
#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO	__CORRECT_ISO_CPP_MATH_H_PROTO	
#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO	__CORRECT_ISO_CPP_MATH_H_PROTO	
#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO	__CORRECT_ISO_CPP_MATH_H_PROTO	
#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO	__CORRECT_ISO_CPP_MATH_H_PROTO	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO	__CORRECT_ISO_CPP_MATH_H_PROTO	
#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO	__CORRECT_ISO_CPP_MATH_H_PROTO	
#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO	__CORRECT_ISO_CPP_MATH_H_PROTO	
#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO	__CORRECT_ISO_CPP_MATH_H_PROTO	
#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO	__CORRECT_ISO_CPP_MATH_H_PROTO	
#if _GLIBCXX_USE_C99_MATH	_GLIBCXX_USE_C99_MATH	
#if !_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC	!_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#if _GLIBCXX_HAVE_OBSOLETE_ISINF \	_GLIBCXX_HAVE_OBSOLETE_ISINF \	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#if _GLIBCXX_HAVE_OBSOLETE_ISNAN \	_GLIBCXX_HAVE_OBSOLETE_ISNAN \	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_USE_C99_MATH_TR1	_GLIBCXX_USE_C99_MATH_TR1	
#ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS	_GLIBCXX_NO_C99_ROUNDING_FUNCS	
#ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS	_GLIBCXX_NO_C99_ROUNDING_FUNCS	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP	__CORRECT_ISO_CPP11_MATH_H_PROTO_FP	
#ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT	__CORRECT_ISO_CPP11_MATH_H_PROTO_INT	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus > 201703L	__cplusplus > 201703L	
#if _GLIBCXX_USE_STD_SPEC_FUNCS	_GLIBCXX_USE_STD_SPEC_FUNCS	
#define __TINYEXPR_H__	__TINYEXPR_H__	
#ifndef __TINYEXPR_H__	__TINYEXPR_H__	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wgetopt.h"""	"""wgetopt.h"""	
"#include ""tinyexpr.h"""	"""tinyexpr.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
#include <string>	<string>	
#include <limits>	<limits>	
#include <cstring>	<cstring>	
#include <cstddef>	<cstddef>	
#include <cmath>	<cmath>	
#include <cerrno>	<cerrno>	
#include <algorithm>	<algorithm>	
"#include ""builtin_math.h"""	"""builtin_math.h"""	
"#include ""config.h"""	"""config.h"""	
#include <stdarg.h>	<stdarg.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#define _GLIBCXX_CSTDARG 1	_GLIBCXX_CSTDARG	1
#undef __need___va_list	__need___va_list	
#pragma GCC system_header	GCC system_header	
#ifndef _GLIBCXX_CSTDARG	_GLIBCXX_CSTDARG	
#ifndef va_end	va_end	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wcstringutil.h"""	"""wcstringutil.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
#include <cwctype>	<cwctype>	
#include <cwchar>	<cwchar>	
#include <cstring>	<cstring>	
#include <cstdlib>	<cstdlib>	
#include <cstdint>	<cstdint>	
#include <cstddef>	<cstddef>	
#include <cstdarg>	<cstdarg>	
#include <clocale>	<clocale>	
#include <climits>	<climits>	
#include <cerrno>	<cerrno>	
#include <sys/types.h>	<sys/types.h>	
"#include ""config.h"""	"""config.h"""	
#if defined(__STDC_ISO_10646__)	defined(__STDC_ISO_10646__)	
#define __STDC_ISO_10646__ 201706L	__STDC_ISO_10646__	201706L
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wgetopt.h"""	"""wgetopt.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
#include <cstring>	<cstring>	
"#include ""builtin_pwd.h"""	"""builtin_pwd.h"""	
"#include ""config.h"""	"""config.h"""	
#include <bits/uniform_int_dist.h>	<bits/uniform_int_dist.h>	
#include <vector>	<vector>	
#define _RANDOM_H 1	_RANDOM_H	1
#ifndef _RANDOM_H	_RANDOM_H	
#ifdef _GLIBCXX_USE_INT128	_GLIBCXX_USE_INT128	
#ifdef _GLIBCXX_USE_DEV_RANDOM	_GLIBCXX_USE_DEV_RANDOM	
#ifdef _GLIBCXX_USE_DEV_RANDOM	_GLIBCXX_USE_DEV_RANDOM	
#ifdef _GLIBCXX_USE_DEV_RANDOM	_GLIBCXX_USE_DEV_RANDOM	
#if _GLIBCXX_USE_C99_MATH_TR1	_GLIBCXX_USE_C99_MATH_TR1	
#ifdef _GLIBCXX_USE_C99_MATH_TR1	_GLIBCXX_USE_C99_MATH_TR1	
#if _GLIBCXX_USE_C99_MATH_TR1	_GLIBCXX_USE_C99_MATH_TR1	
#ifdef _GLIBCXX_USE_C99_MATH_TR1	_GLIBCXX_USE_C99_MATH_TR1	
#define _BITS_OPT_RANDOM_H 1	_BITS_OPT_RANDOM_H	1
#ifndef _BITS_OPT_RANDOM_H	_BITS_OPT_RANDOM_H	
#ifdef __SSE3__	__SSE3__	
#pragma GCC system_header	GCC system_header	
#ifdef __SSE3__	__SSE3__	
#include <numeric>	<numeric>	
#define _RANDOM_TCC 1	_RANDOM_TCC	1
#ifndef _RANDOM_TCC	_RANDOM_TCC	
#if _GLIBCXX_USE_C99_MATH_TR1	_GLIBCXX_USE_C99_MATH_TR1	
#if _GLIBCXX_USE_C99_MATH_TR1	_GLIBCXX_USE_C99_MATH_TR1	
#if _GLIBCXX_USE_C99_MATH_TR1	_GLIBCXX_USE_C99_MATH_TR1	
#if _GLIBCXX_USE_C99_MATH_TR1	_GLIBCXX_USE_C99_MATH_TR1	
#if _GLIBCXX_USE_C99_MATH_TR1	_GLIBCXX_USE_C99_MATH_TR1	
#include <bits/random.tcc>	<bits/random.tcc>	
#include <bits/opt_random.h>	<bits/opt_random.h>	
#include <bits/random.h>	<bits/random.h>	
#include <cstdint>	<cstdint>	
#include <type_traits>	<type_traits>	
#include <debug/debug.h>	<debug/debug.h>	
#include <limits>	<limits>	
#include <iosfwd>	<iosfwd>	
#include <string>	<string>	
#include <cstdlib>	<cstdlib>	
#include <cmath>	<cmath>	
#define _GLIBCXX_RANDOM 1	_GLIBCXX_RANDOM	1
#ifndef _GLIBCXX_RANDOM	_GLIBCXX_RANDOM	
#pragma GCC system_header	GCC system_header	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#ifdef _GLIBCXX_USE_C99_STDINT_TR1	_GLIBCXX_USE_C99_STDINT_TR1	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
#include <random>	<random>	
#include <cwchar>	<cwchar>	
#include <cstdint>	<cstdint>	
#include <cerrno>	<cerrno>	
#include <algorithm>	<algorithm>	
"#include ""builtin_random.h"""	"""builtin_random.h"""	
"#include ""config.h"""	"""config.h"""	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wgetopt.h"""	"""wgetopt.h"""	
"#include ""wcstringutil.h"""	"""wcstringutil.h"""	
"#include ""reader.h"""	"""reader.h"""	
"#include ""proc.h"""	"""proc.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""history.h"""	"""history.h"""	
"#include ""highlight.h"""	"""highlight.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""event.h"""	"""event.h"""	
"#include ""env.h"""	"""env.h"""	
"#include ""complete.h"""	"""complete.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
#include <vector>	<vector>	
#include <string>	<string>	
#include <numeric>	<numeric>	
#include <memory>	<memory>	
#include <cwchar>	<cwchar>	
#include <cstring>	<cstring>	
#include <cstdlib>	<cstdlib>	
#include <cstdio>	<cstdio>	
#include <cstddef>	<cstddef>	
#include <climits>	<climits>	
#include <cerrno>	<cerrno>	
#include <algorithm>	<algorithm>	
#include <unistd.h>	<unistd.h>	
"#include ""builtin_read.h"""	"""builtin_read.h"""	
"#include ""config.h"""	"""config.h"""	
#define READ_CHUNK_SIZE 128	READ_CHUNK_SIZE	128
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
#include <cwchar>	<cwchar>	
#include <cstring>	<cstring>	
#include <cstdlib>	<cstdlib>	
#include <cstdio>	<cstdio>	
"#include ""builtin_realpath.h"""	"""builtin_realpath.h"""	
"#include ""config.h"""	"""config.h"""	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wgetopt.h"""	"""wgetopt.h"""	
"#include ""proc.h"""	"""proc.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
#include <cstddef>	<cstddef>	
#include <cerrno>	<cerrno>	
"#include ""builtin_return.h"""	"""builtin_return.h"""	
"#include ""config.h"""	"""config.h"""	
#define __off_t_defined	__off_t_defined	
#define __mode_t_defined	__mode_t_defined	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wgetopt.h"""	"""wgetopt.h"""	
"#include ""wcstringutil.h"""	"""wcstringutil.h"""	
"#include ""proc.h"""	"""proc.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""history.h"""	"""history.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""expand.h"""	"""expand.h"""	
"#include ""env.h"""	"""env.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
#include <vector>	<vector>	
#include <string>	<string>	
#include <set>	<set>	
#include <memory>	<memory>	
#include <iterator>	<iterator>	
#include <cwchar>	<cwchar>	
#include <cstring>	<cstring>	
#include <cstdlib>	<cstdlib>	
#include <cstddef>	<cstddef>	
#include <cerrno>	<cerrno>	
#include <algorithm>	<algorithm>	
#include <unistd.h>	<unistd.h>	
#include <sys/stat.h>	<sys/stat.h>	
"#include ""config.h"""	"""config.h"""	
"#define BUILTIN_SET_MISMATCHED_ARGS _(L""%ls: You provided %d indexes but %d values\n"")"	BUILTIN_SET_MISMATCHED_ARGS	"_(L""%ls: You provided %d indexes but %d values\n"")"
"#define BUILTIN_SET_ARRAY_BOUNDS_ERR _(L""%ls: Array index out of bounds\n"")"	BUILTIN_SET_ARRAY_BOUNDS_ERR	"_(L""%ls: Array index out of bounds\n"")"
"#define BUILTIN_SET_PATH_ERROR _(L""%ls: Warning: $%ls entry \""%ls\"" is not valid (%s)\n"")"	BUILTIN_SET_PATH_ERROR	"_(L""%ls: Warning: $%ls entry \""%ls\"" is not valid (%s)\n"")"
"#define BUILTIN_SET_PATH_HINT _(L""%ls: Did you mean 'set %ls $%ls %ls'?\n"")"	BUILTIN_SET_PATH_HINT	"_(L""%ls: Did you mean 'set %ls $%ls %ls'?\n"")"
"#define BUILTIN_SET_UVAR_ERR _(L""%ls: Universal variable '%ls' is shadowed by the global variable of the same name.\n"")"	BUILTIN_SET_UVAR_ERR	"_(L""%ls: Universal variable '%ls' is shadowed by the global variable of the same name.\n"")"
"#define BUILTIN_SET_ERASE_NO_VAR _(L""%ls: Erase needs a variable name\n"")"	BUILTIN_SET_ERASE_NO_VAR	"_(L""%ls: Erase needs a variable name\n"")"
#define NCURSES_EXPORT_VAR(type) NCURSES_IMPEXP type	NCURSES_EXPORT_VAR(type)	NCURSES_IMPEXP type
#define NCURSES_EXPORT(type) NCURSES_IMPEXP type NCURSES_API	NCURSES_EXPORT(type)	NCURSES_IMPEXP type NCURSES_API
#define NCURSES_API	NCURSES_API	
#define NCURSES_IMPEXP	NCURSES_IMPEXP	
#define NCURSES_STATIC	NCURSES_STATIC	
#undef NCURSES_DLL	NCURSES_DLL	
#define NCURSES_WRAPPED_VAR(type,name) extern type NCURSES_PUBLIC_VAR(name)(void)	NCURSES_WRAPPED_VAR(type,name)	extern type NCURSES_PUBLIC_VAR(name)(void)
#define NCURSES_PUBLIC_VAR(name) _nc_ ## name	NCURSES_PUBLIC_VAR(name)	_nc_ ## name
#define NCURSES_DLL_H_incl 1	NCURSES_DLL_H_incl	1
#ifndef NCURSES_DLL_H_incl	NCURSES_DLL_H_incl	
#if defined(__MINGW64__)	defined(__MINGW64__)	
#ifndef _WIN64	_WIN64	
#elif defined(__MINGW32__)	defined(__MINGW32__)	
#ifndef _WIN32	_WIN32	
#if (__GNUC__ == 4) && (__GNUC_MINOR__ == 8)	(__GNUC__ == 4) && (__GNUC_MINOR__ == 8)	
#ifdef trace	trace	
#if defined(__CYGWIN__) || defined(_WIN32)	defined(__CYGWIN__) || defined(_WIN32)	
#if defined(NCURSES_DLL)	defined(NCURSES_DLL)	
#if defined(NCURSES_STATIC)	defined(NCURSES_STATIC)	
#if defined(NCURSES_DLL)	defined(NCURSES_DLL)	
#elif defined(NCURSES_STATIC)	defined(NCURSES_STATIC)	
#if !defined(NCURSES_IMPEXP)	!defined(NCURSES_IMPEXP)	
#if !defined(NCURSES_API)	!defined(NCURSES_API)	
#if !defined(NCURSES_EXPORT)	!defined(NCURSES_EXPORT)	
#if !defined(NCURSES_EXPORT_VAR)	!defined(NCURSES_EXPORT_VAR)	
#ifndef __NCURSES_H	__NCURSES_H	
#if 1	1	
#ifndef NCURSES_ENABLE_STDBOOL_H	NCURSES_ENABLE_STDBOOL_H	
#ifndef NCURSES_ATTR_T	NCURSES_ATTR_T	
#ifndef NCURSES_INTERNALS	NCURSES_INTERNALS	
#ifndef NCURSES_WATTR_MACROS	NCURSES_WATTR_MACROS	
#ifndef NCURSES_REENTRANT	NCURSES_REENTRANT	
#if 1 && defined(_LP64)	1 && defined(_LP64)	
#ifndef NCURSES_WIDECHAR	NCURSES_WIDECHAR	
#if defined(_XOPEN_SOURCE_EXTENDED) || (defined(_XOPEN_SOURCE) && (_XOPEN_SOURCE - 0 >= 500))	defined(_XOPEN_SOURCE_EXTENDED) || (defined(_XOPEN_SOURCE) && (_XOPEN_SOURCE - 0 >= 500))	
#if NCURSES_WIDECHAR	NCURSES_WIDECHAR	
#if defined(__cplusplus)	defined(__cplusplus)	
#if NCURSES_ENABLE_STDBOOL_H	NCURSES_ENABLE_STDBOOL_H	
#ifdef __cplusplus	__cplusplus	
#if 1	1	
#if 0 || NCURSES_REENTRANT	0 || NCURSES_REENTRANT	
#if NCURSES_WIDECHAR	NCURSES_WIDECHAR	
#if 0	0	
#ifdef mblen	mblen	
#if 1	1	
#if 0	0	
#if 0	0	
#if 1	1	
#if !NCURSES_OPAQUE	!NCURSES_OPAQUE	
#if NCURSES_WIDECHAR	NCURSES_WIDECHAR	
#if 1	1	
#if 1	1	
#ifdef NCURSES_WGETCH_EVENTS	NCURSES_WGETCH_EVENTS	
#if !defined(__BEOS__) || defined(__HAIKU__)	!defined(__BEOS__) || defined(__HAIKU__)	
#if 0	0	
#if !(defined(__GNUC__) || defined(__GNUG__) || defined(__attribute__))	!(defined(__GNUC__) || defined(__GNUG__) || defined(__attribute__))	
#ifndef GCC_PRINTFLIKE	GCC_PRINTFLIKE	
#if defined(GCC_PRINTF) && !defined(printf)	defined(GCC_PRINTF) && !defined(printf)	
#ifndef GCC_SCANFLIKE	GCC_SCANFLIKE	
#if defined(GCC_SCANF) && !defined(scanf)	defined(GCC_SCANF) && !defined(scanf)	
#ifndef GCC_NORETURN	GCC_NORETURN	
#ifndef GCC_UNUSED	GCC_UNUSED	
#if (__GNUC__ - 0 > 3 || (__GNUC__ - 0 == 3 && __GNUC_MINOR__ - 0 >= 2))	(__GNUC__ - 0 > 3 || (__GNUC__ - 0 == 3 && __GNUC_MINOR__ - 0 >= 2))	
#if NCURSES_TPARM_VARARGS	NCURSES_TPARM_VARARGS	
#if !NCURSES_WIDECHAR	!NCURSES_WIDECHAR	
#if 1	1	
#if 1	1	
#if 1	1	
#if 1	1	
#ifndef NCURSES_NOMACROS	NCURSES_NOMACROS	
#if !NCURSES_OPAQUE	!NCURSES_OPAQUE	
#if !NCURSES_OPAQUE	!NCURSES_OPAQUE	
#if NCURSES_WATTR_MACROS	NCURSES_WATTR_MACROS	
#if NCURSES_WIDECHAR && 1	NCURSES_WIDECHAR && 1	
#if !NCURSES_OPAQUE	!NCURSES_OPAQUE	
#if !NCURSES_OPAQUE	!NCURSES_OPAQUE	
#if !NCURSES_OPAQUE	!NCURSES_OPAQUE	
#if NCURSES_WATTR_MACROS	NCURSES_WATTR_MACROS	
#if NCURSES_WIDECHAR && 1	NCURSES_WIDECHAR && 1	
#if !1	!1	
#if 1	1	
#if !NCURSES_OPAQUE	!NCURSES_OPAQUE	
#if NCURSES_REENTRANT	NCURSES_REENTRANT	
#if NCURSES_WIDECHAR	NCURSES_WIDECHAR	
#if NCURSES_SP_FUNCS	NCURSES_SP_FUNCS	
#ifndef NCURSES_NOMACROS	NCURSES_NOMACROS	
#if !NCURSES_OPAQUE	!NCURSES_OPAQUE	
#if defined(TRACE) || defined(NCURSES_TEST)	defined(TRACE) || defined(NCURSES_TEST)	
#if NCURSES_MOUSE_VERSION > 1	NCURSES_MOUSE_VERSION > 1	
#if NCURSES_MOUSE_VERSION > 1	NCURSES_MOUSE_VERSION > 1	
#if NCURSES_SP_FUNCS	NCURSES_SP_FUNCS	
#ifndef NCURSES_NOMACROS	NCURSES_NOMACROS	
#if NCURSES_SP_FUNCS	NCURSES_SP_FUNCS	
#if NCURSES_WIDECHAR	NCURSES_WIDECHAR	
#if defined(TRACE) || defined(NCURSES_TEST)	defined(TRACE) || defined(NCURSES_TEST)	
#ifdef __cplusplus	__cplusplus	
#ifndef NCURSES_NOMACROS	NCURSES_NOMACROS	
#define __NCURSES_H	__NCURSES_H	
#include <curses.h>	<curses.h>	
#undef unctrl	unctrl	
"#define NCURSES_VERSION ""6.1"""	NCURSES_VERSION	"""6.1"""
#undef NCURSES_VERSION	NCURSES_VERSION	
#define NCURSES_UNCTRL_H_incl 1	NCURSES_UNCTRL_H_incl	1
#ifndef NCURSES_UNCTRL_H_incl	NCURSES_UNCTRL_H_incl	
#ifdef __cplusplus	__cplusplus	
#if 1	1	
#ifdef __cplusplus	__cplusplus	
#define NCURSES_SP_NAME(name) name ## _sp	NCURSES_SP_NAME(name)	name ## _sp
#define NCURSES_CONST const	NCURSES_CONST	const
#include <unctrl.h>	<unctrl.h>	
#include <wchar.h>	<wchar.h>	
#include <stddef.h>	<stddef.h>	
#include <stdarg.h>	<stdarg.h>	
#include <stdio.h>	<stdio.h>	
#include <stdint.h>	<stdint.h>	
#include <ncurses_dll.h>	<ncurses_dll.h>	
#define NCURSES_SP_OUTC NCURSES_SP_NAME(NCURSES_OUTC)	NCURSES_SP_OUTC	NCURSES_SP_NAME(NCURSES_OUTC)
#define CCHARW_MAX 5	CCHARW_MAX	5
#define NCURSES_SIZE_T short	NCURSES_SIZE_T	short
#define TRACE_MAXIMUM ((1 << TRACE_SHIFT) - 1)	TRACE_MAXIMUM	((1 << TRACE_SHIFT) - 1)
#define TRACE_SHIFT 13	TRACE_SHIFT	13
#define TRACE_ATTRS 0x1000	TRACE_ATTRS	0x1000
#define TRACE_DATABASE 0x0800	TRACE_DATABASE	0x0800
#define TRACE_CCALLS 0x0400	TRACE_CCALLS	0x0400
#define TRACE_ICALLS 0x0200	TRACE_ICALLS	0x0200
#define TRACE_BITS 0x0100	TRACE_BITS	0x0100
#define TRACE_IEVENT 0x0080	TRACE_IEVENT	0x0080
#define TRACE_VIRTPUT 0x0040	TRACE_VIRTPUT	0x0040
#define TRACE_CALLS 0x0020	TRACE_CALLS	0x0020
#define TRACE_ORDINARY 0x001F	TRACE_ORDINARY	0x001F
#define TRACE_CHARPUT 0x0010	TRACE_CHARPUT	0x0010
#define TRACE_MOVE 0x0008	TRACE_MOVE	0x0008
#define TRACE_UPDATE 0x0004	TRACE_UPDATE	0x0004
#define TRACE_TPUTS 0x0002	TRACE_TPUTS	0x0002
#define TRACE_TIMES 0x0001	TRACE_TIMES	0x0001
#define TRACE_DISABLE 0x0000	TRACE_DISABLE	0x0000
#define _tracech_t2 _tracecchar_t2	_tracech_t2	_tracecchar_t2
#define _tracech_t _tracecchar_t	_tracech_t	_tracecchar_t
#define BUTTON_RESERVED_EVENT(e,x) ((e) & NCURSES_MOUSE_MASK(x, 040))	BUTTON_RESERVED_EVENT(e,x)	((e) & NCURSES_MOUSE_MASK(x, 040))
#define BUTTON_TRIPLE_CLICK(e,x) ((e) & NCURSES_MOUSE_MASK(x, 020))	BUTTON_TRIPLE_CLICK(e,x)	((e) & NCURSES_MOUSE_MASK(x, 020))
#define BUTTON_DOUBLE_CLICK(e,x) ((e) & NCURSES_MOUSE_MASK(x, 010))	BUTTON_DOUBLE_CLICK(e,x)	((e) & NCURSES_MOUSE_MASK(x, 010))
#define BUTTON_CLICK(e,x) ((e) & NCURSES_MOUSE_MASK(x, 004))	BUTTON_CLICK(e,x)	((e) & NCURSES_MOUSE_MASK(x, 004))
#define BUTTON_PRESS(e,x) ((e) & NCURSES_MOUSE_MASK(x, 002))	BUTTON_PRESS(e,x)	((e) & NCURSES_MOUSE_MASK(x, 002))
#define BUTTON_RELEASE(e,x) ((e) & NCURSES_MOUSE_MASK(x, 001))	BUTTON_RELEASE(e,x)	((e) & NCURSES_MOUSE_MASK(x, 001))
#define ALL_MOUSE_EVENTS (REPORT_MOUSE_POSITION - 1)	ALL_MOUSE_EVENTS	(REPORT_MOUSE_POSITION - 1)
#define REPORT_MOUSE_POSITION NCURSES_MOUSE_MASK(6, 0010L)	REPORT_MOUSE_POSITION	NCURSES_MOUSE_MASK(6, 0010L)
#define BUTTON_ALT NCURSES_MOUSE_MASK(6, 0004L)	BUTTON_ALT	NCURSES_MOUSE_MASK(6, 0004L)
#define BUTTON_SHIFT NCURSES_MOUSE_MASK(6, 0002L)	BUTTON_SHIFT	NCURSES_MOUSE_MASK(6, 0002L)
#define BUTTON_CTRL NCURSES_MOUSE_MASK(6, 0001L)	BUTTON_CTRL	NCURSES_MOUSE_MASK(6, 0001L)
#define BUTTON5_TRIPLE_CLICKED NCURSES_MOUSE_MASK(5, NCURSES_TRIPLE_CLICKED)	BUTTON5_TRIPLE_CLICKED	NCURSES_MOUSE_MASK(5, NCURSES_TRIPLE_CLICKED)
#define BUTTON5_DOUBLE_CLICKED NCURSES_MOUSE_MASK(5, NCURSES_DOUBLE_CLICKED)	BUTTON5_DOUBLE_CLICKED	NCURSES_MOUSE_MASK(5, NCURSES_DOUBLE_CLICKED)
#define BUTTON5_CLICKED NCURSES_MOUSE_MASK(5, NCURSES_BUTTON_CLICKED)	BUTTON5_CLICKED	NCURSES_MOUSE_MASK(5, NCURSES_BUTTON_CLICKED)
#define BUTTON5_PRESSED NCURSES_MOUSE_MASK(5, NCURSES_BUTTON_PRESSED)	BUTTON5_PRESSED	NCURSES_MOUSE_MASK(5, NCURSES_BUTTON_PRESSED)
#define BUTTON5_RELEASED NCURSES_MOUSE_MASK(5, NCURSES_BUTTON_RELEASED)	BUTTON5_RELEASED	NCURSES_MOUSE_MASK(5, NCURSES_BUTTON_RELEASED)
#define BUTTON4_TRIPLE_CLICKED NCURSES_MOUSE_MASK(4, NCURSES_TRIPLE_CLICKED)	BUTTON4_TRIPLE_CLICKED	NCURSES_MOUSE_MASK(4, NCURSES_TRIPLE_CLICKED)
#define BUTTON4_DOUBLE_CLICKED NCURSES_MOUSE_MASK(4, NCURSES_DOUBLE_CLICKED)	BUTTON4_DOUBLE_CLICKED	NCURSES_MOUSE_MASK(4, NCURSES_DOUBLE_CLICKED)
#define BUTTON4_CLICKED NCURSES_MOUSE_MASK(4, NCURSES_BUTTON_CLICKED)	BUTTON4_CLICKED	NCURSES_MOUSE_MASK(4, NCURSES_BUTTON_CLICKED)
#define BUTTON4_PRESSED NCURSES_MOUSE_MASK(4, NCURSES_BUTTON_PRESSED)	BUTTON4_PRESSED	NCURSES_MOUSE_MASK(4, NCURSES_BUTTON_PRESSED)
#define BUTTON4_RELEASED NCURSES_MOUSE_MASK(4, NCURSES_BUTTON_RELEASED)	BUTTON4_RELEASED	NCURSES_MOUSE_MASK(4, NCURSES_BUTTON_RELEASED)
#define BUTTON3_TRIPLE_CLICKED NCURSES_MOUSE_MASK(3, NCURSES_TRIPLE_CLICKED)	BUTTON3_TRIPLE_CLICKED	NCURSES_MOUSE_MASK(3, NCURSES_TRIPLE_CLICKED)
#define BUTTON3_DOUBLE_CLICKED NCURSES_MOUSE_MASK(3, NCURSES_DOUBLE_CLICKED)	BUTTON3_DOUBLE_CLICKED	NCURSES_MOUSE_MASK(3, NCURSES_DOUBLE_CLICKED)
#define BUTTON3_CLICKED NCURSES_MOUSE_MASK(3, NCURSES_BUTTON_CLICKED)	BUTTON3_CLICKED	NCURSES_MOUSE_MASK(3, NCURSES_BUTTON_CLICKED)
#define BUTTON3_PRESSED NCURSES_MOUSE_MASK(3, NCURSES_BUTTON_PRESSED)	BUTTON3_PRESSED	NCURSES_MOUSE_MASK(3, NCURSES_BUTTON_PRESSED)
#define BUTTON3_RELEASED NCURSES_MOUSE_MASK(3, NCURSES_BUTTON_RELEASED)	BUTTON3_RELEASED	NCURSES_MOUSE_MASK(3, NCURSES_BUTTON_RELEASED)
#define BUTTON2_TRIPLE_CLICKED NCURSES_MOUSE_MASK(2, NCURSES_TRIPLE_CLICKED)	BUTTON2_TRIPLE_CLICKED	NCURSES_MOUSE_MASK(2, NCURSES_TRIPLE_CLICKED)
#define BUTTON2_DOUBLE_CLICKED NCURSES_MOUSE_MASK(2, NCURSES_DOUBLE_CLICKED)	BUTTON2_DOUBLE_CLICKED	NCURSES_MOUSE_MASK(2, NCURSES_DOUBLE_CLICKED)
#define BUTTON2_CLICKED NCURSES_MOUSE_MASK(2, NCURSES_BUTTON_CLICKED)	BUTTON2_CLICKED	NCURSES_MOUSE_MASK(2, NCURSES_BUTTON_CLICKED)
#define BUTTON2_PRESSED NCURSES_MOUSE_MASK(2, NCURSES_BUTTON_PRESSED)	BUTTON2_PRESSED	NCURSES_MOUSE_MASK(2, NCURSES_BUTTON_PRESSED)
#define BUTTON2_RELEASED NCURSES_MOUSE_MASK(2, NCURSES_BUTTON_RELEASED)	BUTTON2_RELEASED	NCURSES_MOUSE_MASK(2, NCURSES_BUTTON_RELEASED)
#define BUTTON1_TRIPLE_CLICKED NCURSES_MOUSE_MASK(1, NCURSES_TRIPLE_CLICKED)	BUTTON1_TRIPLE_CLICKED	NCURSES_MOUSE_MASK(1, NCURSES_TRIPLE_CLICKED)
#define BUTTON1_DOUBLE_CLICKED NCURSES_MOUSE_MASK(1, NCURSES_DOUBLE_CLICKED)	BUTTON1_DOUBLE_CLICKED	NCURSES_MOUSE_MASK(1, NCURSES_DOUBLE_CLICKED)
#define BUTTON1_CLICKED NCURSES_MOUSE_MASK(1, NCURSES_BUTTON_CLICKED)	BUTTON1_CLICKED	NCURSES_MOUSE_MASK(1, NCURSES_BUTTON_CLICKED)
#define BUTTON1_PRESSED NCURSES_MOUSE_MASK(1, NCURSES_BUTTON_PRESSED)	BUTTON1_PRESSED	NCURSES_MOUSE_MASK(1, NCURSES_BUTTON_PRESSED)
#define BUTTON1_RELEASED NCURSES_MOUSE_MASK(1, NCURSES_BUTTON_RELEASED)	BUTTON1_RELEASED	NCURSES_MOUSE_MASK(1, NCURSES_BUTTON_RELEASED)
#define NCURSES_RESERVED_EVENT 040L	NCURSES_RESERVED_EVENT	040L
#define NCURSES_TRIPLE_CLICKED 020L	NCURSES_TRIPLE_CLICKED	020L
#define NCURSES_DOUBLE_CLICKED 010L	NCURSES_DOUBLE_CLICKED	010L
#define NCURSES_BUTTON_CLICKED 004L	NCURSES_BUTTON_CLICKED	004L
#define NCURSES_BUTTON_PRESSED 002L	NCURSES_BUTTON_PRESSED	002L
#define NCURSES_BUTTON_RELEASED 001L	NCURSES_BUTTON_RELEASED	001L
#define NCURSES_MOUSE_MASK(b,m) ((m) << (((b) - 1) * 5))	NCURSES_MOUSE_MASK(b,m)	((m) << (((b) - 1) * 5))
#define WACS_T_PLUS WACS_TTTT	WACS_T_PLUS	WACS_TTTT
#define WACS_T_VLINE WACS_TBTB	WACS_T_VLINE	WACS_TBTB
#define WACS_T_HLINE WACS_BTBT	WACS_T_HLINE	WACS_BTBT
#define WACS_T_TTEE WACS_BTTT	WACS_T_TTEE	WACS_BTTT
#define WACS_T_BTEE WACS_TTBT	WACS_T_BTEE	WACS_TTBT
#define WACS_T_LTEE WACS_TTTB	WACS_T_LTEE	WACS_TTTB
#define WACS_T_RTEE WACS_TBTT	WACS_T_RTEE	WACS_TBTT
#define WACS_T_LRCORNER WACS_TBBT	WACS_T_LRCORNER	WACS_TBBT
#define WACS_T_URCORNER WACS_BBTT	WACS_T_URCORNER	WACS_BBTT
#define WACS_T_LLCORNER WACS_TTBB	WACS_T_LLCORNER	WACS_TTBB
#define WACS_T_ULCORNER WACS_BTTB	WACS_T_ULCORNER	WACS_BTTB
#define WACS_TTTT NCURSES_WACS('N')	WACS_TTTT	NCURSES_WACS('N')
#define WACS_TBTB NCURSES_WACS('X')	WACS_TBTB	NCURSES_WACS('X')
#define WACS_BTBT NCURSES_WACS('Q')	WACS_BTBT	NCURSES_WACS('Q')
#define WACS_BTTT NCURSES_WACS('W')	WACS_BTTT	NCURSES_WACS('W')
#define WACS_TTBT NCURSES_WACS('V')	WACS_TTBT	NCURSES_WACS('V')
#define WACS_TTTB NCURSES_WACS('T')	WACS_TTTB	NCURSES_WACS('T')
#define WACS_TBTT NCURSES_WACS('U')	WACS_TBTT	NCURSES_WACS('U')
#define WACS_TBBT NCURSES_WACS('J')	WACS_TBBT	NCURSES_WACS('J')
#define WACS_BBTT NCURSES_WACS('K')	WACS_BBTT	NCURSES_WACS('K')
#define WACS_TTBB NCURSES_WACS('M')	WACS_TTBB	NCURSES_WACS('M')
#define WACS_BTTB NCURSES_WACS('L')	WACS_BTTB	NCURSES_WACS('L')
#define WACS_D_PLUS WACS_DDDD	WACS_D_PLUS	WACS_DDDD
#define WACS_D_VLINE WACS_DBDB	WACS_D_VLINE	WACS_DBDB
#define WACS_D_HLINE WACS_BDBD	WACS_D_HLINE	WACS_BDBD
#define WACS_D_TTEE WACS_BDDD	WACS_D_TTEE	WACS_BDDD
#define WACS_D_BTEE WACS_DDBD	WACS_D_BTEE	WACS_DDBD
#define WACS_D_LTEE WACS_DDDB	WACS_D_LTEE	WACS_DDDB
#define WACS_D_RTEE WACS_DBDD	WACS_D_RTEE	WACS_DBDD
#define WACS_D_LRCORNER WACS_DBBD	WACS_D_LRCORNER	WACS_DBBD
#define WACS_D_URCORNER WACS_BBDD	WACS_D_URCORNER	WACS_BBDD
#define WACS_D_LLCORNER WACS_DDBB	WACS_D_LLCORNER	WACS_DDBB
#define WACS_D_ULCORNER WACS_BDDB	WACS_D_ULCORNER	WACS_BDDB
#define WACS_DDDD NCURSES_WACS('E')	WACS_DDDD	NCURSES_WACS('E')
#define WACS_DBDB NCURSES_WACS('Y')	WACS_DBDB	NCURSES_WACS('Y')
#define WACS_BDBD NCURSES_WACS('R')	WACS_BDBD	NCURSES_WACS('R')
#define WACS_BDDD NCURSES_WACS('I')	WACS_BDDD	NCURSES_WACS('I')
#define WACS_DDBD NCURSES_WACS('H')	WACS_DDBD	NCURSES_WACS('H')
#define WACS_DDDB NCURSES_WACS('F')	WACS_DDDB	NCURSES_WACS('F')
#define WACS_DBDD NCURSES_WACS('G')	WACS_DBDD	NCURSES_WACS('G')
#define WACS_DBBD NCURSES_WACS('A')	WACS_DBBD	NCURSES_WACS('A')
#define WACS_BBDD NCURSES_WACS('B')	WACS_BBDD	NCURSES_WACS('B')
#define WACS_DDBB NCURSES_WACS('D')	WACS_DDBB	NCURSES_WACS('D')
#define WACS_BDDB NCURSES_WACS('C')	WACS_BDDB	NCURSES_WACS('C')
#define WACS_STERLING NCURSES_WACS('}')	WACS_STERLING	NCURSES_WACS('}')
#define WACS_NEQUAL NCURSES_WACS('|')	WACS_NEQUAL	NCURSES_WACS('|')
#define WACS_PI NCURSES_WACS('{')	WACS_PI	NCURSES_WACS('{')
#define WACS_GEQUAL NCURSES_WACS('z')	WACS_GEQUAL	NCURSES_WACS('z')
#define WACS_LEQUAL NCURSES_WACS('y')	WACS_LEQUAL	NCURSES_WACS('y')
#define WACS_S7 NCURSES_WACS('r')	WACS_S7	NCURSES_WACS('r')
#define WACS_S3 NCURSES_WACS('p')	WACS_S3	NCURSES_WACS('p')
#define WACS_BLOCK NCURSES_WACS('0')	WACS_BLOCK	NCURSES_WACS('0')
#define WACS_LANTERN NCURSES_WACS('i')	WACS_LANTERN	NCURSES_WACS('i')
#define WACS_BOARD NCURSES_WACS('h')	WACS_BOARD	NCURSES_WACS('h')
#define WACS_UARROW NCURSES_WACS('-')	WACS_UARROW	NCURSES_WACS('-')
#define WACS_DARROW NCURSES_WACS('.')	WACS_DARROW	NCURSES_WACS('.')
#define WACS_RARROW NCURSES_WACS('+')	WACS_RARROW	NCURSES_WACS('+')
#define WACS_LARROW NCURSES_WACS(',')	WACS_LARROW	NCURSES_WACS(',')
#define WACS_BULLET NCURSES_WACS('~')	WACS_BULLET	NCURSES_WACS('~')
#define WACS_PLMINUS NCURSES_WACS('g')	WACS_PLMINUS	NCURSES_WACS('g')
#define WACS_DEGREE NCURSES_WACS('f')	WACS_DEGREE	NCURSES_WACS('f')
#define WACS_CKBOARD NCURSES_WACS('a')	WACS_CKBOARD	NCURSES_WACS('a')
#define WACS_DIAMOND NCURSES_WACS('`')	WACS_DIAMOND	NCURSES_WACS('`')
#define WACS_S9 NCURSES_WACS('s')	WACS_S9	NCURSES_WACS('s')
#define WACS_S1 NCURSES_WACS('o')	WACS_S1	NCURSES_WACS('o')
#define WACS_PLUS WACS_SSSS	WACS_PLUS	WACS_SSSS
#define WACS_VLINE WACS_SBSB	WACS_VLINE	WACS_SBSB
#define WACS_HLINE WACS_BSBS	WACS_HLINE	WACS_BSBS
#define WACS_TTEE WACS_BSSS	WACS_TTEE	WACS_BSSS
#define WACS_BTEE WACS_SSBS	WACS_BTEE	WACS_SSBS
#define WACS_LTEE WACS_SSSB	WACS_LTEE	WACS_SSSB
#define WACS_RTEE WACS_SBSS	WACS_RTEE	WACS_SBSS
#define WACS_LRCORNER WACS_SBBS	WACS_LRCORNER	WACS_SBBS
#define WACS_URCORNER WACS_BBSS	WACS_URCORNER	WACS_BBSS
#define WACS_LLCORNER WACS_SSBB	WACS_LLCORNER	WACS_SSBB
#define WACS_ULCORNER WACS_BSSB	WACS_ULCORNER	WACS_BSSB
#define WACS_SSSS NCURSES_WACS('n')	WACS_SSSS	NCURSES_WACS('n')
#define WACS_SBSB NCURSES_WACS('x')	WACS_SBSB	NCURSES_WACS('x')
#define WACS_BSBS NCURSES_WACS('q')	WACS_BSBS	NCURSES_WACS('q')
#define WACS_BSSS NCURSES_WACS('w')	WACS_BSSS	NCURSES_WACS('w')
#define WACS_SSBS NCURSES_WACS('v')	WACS_SSBS	NCURSES_WACS('v')
#define WACS_SSSB NCURSES_WACS('t')	WACS_SSSB	NCURSES_WACS('t')
#define WACS_SBSS NCURSES_WACS('u')	WACS_SBSS	NCURSES_WACS('u')
#define WACS_SBBS NCURSES_WACS('j')	WACS_SBBS	NCURSES_WACS('j')
#define WACS_BBSS NCURSES_WACS('k')	WACS_BBSS	NCURSES_WACS('k')
#define WACS_SSBB NCURSES_WACS('m')	WACS_SSBB	NCURSES_WACS('m')
#define WACS_BSSB NCURSES_WACS('l')	WACS_BSSB	NCURSES_WACS('l')
#define NCURSES_WACS(c) (&_nc_wacs[NCURSES_CAST(unsigned char,(c))])	NCURSES_WACS(c)	(&_nc_wacs[NCURSES_CAST(unsigned char,(c))])
#define _XOPEN_CURSES 1	_XOPEN_CURSES	1
#define KEY_MAX 0777	KEY_MAX	0777
#define KEY_EVENT 0633	KEY_EVENT	0633
#define KEY_RESIZE 0632	KEY_RESIZE	0632
#define KEY_MOUSE 0631	KEY_MOUSE	0631
#define KEY_UNDO 0630	KEY_UNDO	0630
#define KEY_SUSPEND 0627	KEY_SUSPEND	0627
#define KEY_SUNDO 0626	KEY_SUNDO	0626
#define KEY_SSUSPEND 0625	KEY_SSUSPEND	0625
#define KEY_SSAVE 0624	KEY_SSAVE	0624
#define KEY_SRSUME 0623	KEY_SRSUME	0623
#define KEY_SRIGHT 0622	KEY_SRIGHT	0622
#define KEY_SREPLACE 0621	KEY_SREPLACE	0621
#define KEY_SREDO 0620	KEY_SREDO	0620
#define KEY_SPRINT 0617	KEY_SPRINT	0617
#define KEY_SPREVIOUS 0616	KEY_SPREVIOUS	0616
#define KEY_SOPTIONS 0615	KEY_SOPTIONS	0615
#define KEY_SNEXT 0614	KEY_SNEXT	0614
#define KEY_SMOVE 0613	KEY_SMOVE	0613
#define KEY_SMESSAGE 0612	KEY_SMESSAGE	0612
#define KEY_SLEFT 0611	KEY_SLEFT	0611
#define KEY_SIC 0610	KEY_SIC	0610
#define KEY_SHOME 0607	KEY_SHOME	0607
#define KEY_SHELP 0606	KEY_SHELP	0606
#define KEY_SFIND 0605	KEY_SFIND	0605
#define KEY_SEXIT 0604	KEY_SEXIT	0604
#define KEY_SEOL 0603	KEY_SEOL	0603
#define KEY_SEND 0602	KEY_SEND	0602
#define KEY_SELECT 0601	KEY_SELECT	0601
#define KEY_SDL 0600	KEY_SDL	0600
#define KEY_SDC 0577	KEY_SDC	0577
#define KEY_SCREATE 0576	KEY_SCREATE	0576
#define KEY_SCOPY 0575	KEY_SCOPY	0575
#define KEY_SCOMMAND 0574	KEY_SCOMMAND	0574
#define KEY_SCANCEL 0573	KEY_SCANCEL	0573
#define KEY_SBEG 0572	KEY_SBEG	0572
#define KEY_SAVE 0571	KEY_SAVE	0571
#define KEY_RESUME 0570	KEY_RESUME	0570
#define KEY_RESTART 0567	KEY_RESTART	0567
#define KEY_REPLACE 0566	KEY_REPLACE	0566
#define KEY_REFRESH 0565	KEY_REFRESH	0565
#define KEY_REFERENCE 0564	KEY_REFERENCE	0564
#define KEY_REDO 0563	KEY_REDO	0563
#define KEY_PREVIOUS 0562	KEY_PREVIOUS	0562
#define KEY_OPTIONS 0561	KEY_OPTIONS	0561
#define KEY_OPEN 0560	KEY_OPEN	0560
#define KEY_NEXT 0557	KEY_NEXT	0557
#define KEY_MOVE 0556	KEY_MOVE	0556
#define KEY_MESSAGE 0555	KEY_MESSAGE	0555
#define KEY_MARK 0554	KEY_MARK	0554
#define KEY_HELP 0553	KEY_HELP	0553
#define KEY_FIND 0552	KEY_FIND	0552
#define KEY_EXIT 0551	KEY_EXIT	0551
#define KEY_END 0550	KEY_END	0550
#define KEY_CREATE 0547	KEY_CREATE	0547
#define KEY_COPY 0546	KEY_COPY	0546
#define KEY_COMMAND 0545	KEY_COMMAND	0545
#define KEY_CLOSE 0544	KEY_CLOSE	0544
#define KEY_CANCEL 0543	KEY_CANCEL	0543
#define KEY_BEG 0542	KEY_BEG	0542
#define KEY_BTAB 0541	KEY_BTAB	0541
#define KEY_C3 0540	KEY_C3	0540
#define KEY_C1 0537	KEY_C1	0537
#define KEY_B2 0536	KEY_B2	0536
#define KEY_A3 0535	KEY_A3	0535
#define KEY_A1 0534	KEY_A1	0534
#define KEY_LL 0533	KEY_LL	0533
#define KEY_PRINT 0532	KEY_PRINT	0532
#define KEY_ENTER 0527	KEY_ENTER	0527
#define KEY_CATAB 0526	KEY_CATAB	0526
#define KEY_CTAB 0525	KEY_CTAB	0525
#define KEY_STAB 0524	KEY_STAB	0524
#define KEY_PPAGE 0523	KEY_PPAGE	0523
#define KEY_NPAGE 0522	KEY_NPAGE	0522
#define KEY_SR 0521	KEY_SR	0521
#define KEY_SF 0520	KEY_SF	0520
#define KEY_EOL 0517	KEY_EOL	0517
#define KEY_EOS 0516	KEY_EOS	0516
#define KEY_CLEAR 0515	KEY_CLEAR	0515
#define KEY_EIC 0514	KEY_EIC	0514
#define KEY_IC 0513	KEY_IC	0513
#define KEY_DC 0512	KEY_DC	0512
#define KEY_IL 0511	KEY_IL	0511
#define KEY_DL 0510	KEY_DL	0510
#define KEY_F(n) (KEY_F0+(n))	KEY_F(n)	(KEY_F0+(n))
#define KEY_F0 0410	KEY_F0	0410
#define KEY_BACKSPACE 0407	KEY_BACKSPACE	0407
#define KEY_HOME 0406	KEY_HOME	0406
#define KEY_RIGHT 0405	KEY_RIGHT	0405
#define KEY_LEFT 0404	KEY_LEFT	0404
#define KEY_UP 0403	KEY_UP	0403
#define KEY_DOWN 0402	KEY_DOWN	0402
#define KEY_RESET 0531	KEY_RESET	0531
#define KEY_SRESET 0530	KEY_SRESET	0530
#define KEY_BREAK 0401	KEY_BREAK	0401
#define KEY_MIN 0401	KEY_MIN	0401
#define KEY_CODE_YES 0400	KEY_CODE_YES	0400
#define setsyx(y,x) do { if (newscr) { if ((y) == -1 && (x) == -1) leaveok(newscr, TRUE); else { leaveok(newscr, FALSE); wmove(newscr, (y), (x)); } } } while(0)	setsyx(y,x)	do { if (newscr) { if ((y) == -1 && (x) == -1) leaveok(newscr, TRUE); else { leaveok(newscr, FALSE); wmove(newscr, (y), (x)); } } } while(0)
#define getsyx(y,x) do { if (newscr) { if (is_leaveok(newscr)) (y) = (x) = -1; else getyx(newscr,(y), (x)); } } while(0)	getsyx(y,x)	do { if (newscr) { if (is_leaveok(newscr)) (y) = (x) = -1; else getyx(newscr,(y), (x)); } } while(0)
#define getparyx(win,y,x) (y = getpary(win), x = getparx(win))	getparyx(win,y,x)	(y = getpary(win), x = getparx(win))
#define getmaxyx(win,y,x) (y = getmaxy(win), x = getmaxx(win))	getmaxyx(win,y,x)	(y = getmaxy(win), x = getmaxx(win))
#define getbegyx(win,y,x) (y = getbegy(win), x = getbegx(win))	getbegyx(win,y,x)	(y = getbegy(win), x = getbegx(win))
#define getyx(win,y,x) (y = getcury(win), x = getcurx(win))	getyx(win,y,x)	(y = getcury(win), x = getcurx(win))
#define A_ITALIC NCURSES_BITS(1U,23)	A_ITALIC	NCURSES_BITS(1U,23)
#define A_VERTICAL NCURSES_BITS(1U,22)	A_VERTICAL	NCURSES_BITS(1U,22)
#define A_TOP NCURSES_BITS(1U,21)	A_TOP	NCURSES_BITS(1U,21)
#define A_RIGHT NCURSES_BITS(1U,20)	A_RIGHT	NCURSES_BITS(1U,20)
#define A_LOW NCURSES_BITS(1U,19)	A_LOW	NCURSES_BITS(1U,19)
#define A_LEFT NCURSES_BITS(1U,18)	A_LEFT	NCURSES_BITS(1U,18)
#define A_HORIZONTAL NCURSES_BITS(1U,17)	A_HORIZONTAL	NCURSES_BITS(1U,17)
#define A_PROTECT NCURSES_BITS(1U,16)	A_PROTECT	NCURSES_BITS(1U,16)
#define A_INVIS NCURSES_BITS(1U,15)	A_INVIS	NCURSES_BITS(1U,15)
#define A_ALTCHARSET NCURSES_BITS(1U,14)	A_ALTCHARSET	NCURSES_BITS(1U,14)
#define A_BOLD NCURSES_BITS(1U,13)	A_BOLD	NCURSES_BITS(1U,13)
#define A_DIM NCURSES_BITS(1U,12)	A_DIM	NCURSES_BITS(1U,12)
#define A_BLINK NCURSES_BITS(1U,11)	A_BLINK	NCURSES_BITS(1U,11)
#define A_REVERSE NCURSES_BITS(1U,10)	A_REVERSE	NCURSES_BITS(1U,10)
#define A_UNDERLINE NCURSES_BITS(1U,9)	A_UNDERLINE	NCURSES_BITS(1U,9)
#define A_STANDOUT NCURSES_BITS(1U,8)	A_STANDOUT	NCURSES_BITS(1U,8)
#define A_COLOR NCURSES_BITS(((1U) << 8) - 1U,0)	A_COLOR	NCURSES_BITS(((1U) << 8) - 1U,0)
#define A_CHARTEXT (NCURSES_BITS(1U,0) - 1U)	A_CHARTEXT	(NCURSES_BITS(1U,0) - 1U)
#define A_ATTRIBUTES NCURSES_BITS(~(1U - 1U),0)	A_ATTRIBUTES	NCURSES_BITS(~(1U - 1U),0)
#define A_NORMAL (1U - 1U)	A_NORMAL	(1U - 1U)
#define NCURSES_BITS(mask,shift) (NCURSES_CAST(chtype,(mask)) << ((shift) + NCURSES_ATTR_SHIFT))	NCURSES_BITS(mask,shift)	(NCURSES_CAST(chtype,(mask)) << ((shift) + NCURSES_ATTR_SHIFT))
#define NCURSES_ATTR_SHIFT 8	NCURSES_ATTR_SHIFT	8
#define NCURSES_SP_FUNCS 20190803	NCURSES_SP_FUNCS	20190803
#undef NCURSES_SP_FUNCS	NCURSES_SP_FUNCS	
#define NCURSES_EXT_FUNCS 20190803	NCURSES_EXT_FUNCS	20190803
#undef NCURSES_EXT_FUNCS	NCURSES_EXT_FUNCS	
#define GCC_DEPRECATED(msg) __attribute__((deprecated))	GCC_DEPRECATED(msg)	__attribute__((deprecated))
#undef GCC_DEPRECATED	GCC_DEPRECATED	
#define GCC_UNUSED	GCC_UNUSED	
#define GCC_NORETURN	GCC_NORETURN	
#define GCC_SCANFLIKE(fmt,var)	GCC_SCANFLIKE(fmt,var)	
#define GCC_PRINTFLIKE(fmt,var)	GCC_PRINTFLIKE(fmt,var)	
#define NCURSES_EXT_COLORS 20190803	NCURSES_EXT_COLORS	20190803
#undef NCURSES_EXT_COLORS	NCURSES_EXT_COLORS	
#define _NEWINDEX -1	_NEWINDEX	-1
#define _NOCHANGE -1	_NOCHANGE	-1
#define _WRAPPED 0x40	_WRAPPED	0x40
#define _HASMOVED 0x20	_HASMOVED	0x20
#define _ISPAD 0x10	_ISPAD	0x10
#define _SCROLLWIN 0x08	_SCROLLWIN	0x08
#define _FULLWIN 0x04	_FULLWIN	0x04
#define _ENDLINE 0x02	_ENDLINE	0x02
#define _SUBWIN 0x01	_SUBWIN	0x01
#define OK (0)	OK	(0)
#undef OK	OK	
#define ERR (-1)	ERR	(-1)
#undef ERR	ERR	
#define ACS_SSSS ACS_PLUS	ACS_SSSS	ACS_PLUS
#define ACS_SBSB ACS_VLINE	ACS_SBSB	ACS_VLINE
#define ACS_BSBS ACS_HLINE	ACS_BSBS	ACS_HLINE
#define ACS_BSSS ACS_TTEE	ACS_BSSS	ACS_TTEE
#define ACS_SSBS ACS_BTEE	ACS_SSBS	ACS_BTEE
#define ACS_SSSB ACS_LTEE	ACS_SSSB	ACS_LTEE
#define ACS_SBSS ACS_RTEE	ACS_SBSS	ACS_RTEE
#define ACS_SBBS ACS_LRCORNER	ACS_SBBS	ACS_LRCORNER
#define ACS_BBSS ACS_URCORNER	ACS_BBSS	ACS_URCORNER
#define ACS_SSBB ACS_LLCORNER	ACS_SSBB	ACS_LLCORNER
#define ACS_BSSB ACS_ULCORNER	ACS_BSSB	ACS_ULCORNER
#define ACS_STERLING NCURSES_ACS('}')	ACS_STERLING	NCURSES_ACS('}')
#define ACS_NEQUAL NCURSES_ACS('|')	ACS_NEQUAL	NCURSES_ACS('|')
#define ACS_PI NCURSES_ACS('{')	ACS_PI	NCURSES_ACS('{')
#define ACS_GEQUAL NCURSES_ACS('z')	ACS_GEQUAL	NCURSES_ACS('z')
#define ACS_LEQUAL NCURSES_ACS('y')	ACS_LEQUAL	NCURSES_ACS('y')
#define ACS_S7 NCURSES_ACS('r')	ACS_S7	NCURSES_ACS('r')
#define ACS_S3 NCURSES_ACS('p')	ACS_S3	NCURSES_ACS('p')
#define ACS_BLOCK NCURSES_ACS('0')	ACS_BLOCK	NCURSES_ACS('0')
#define ACS_LANTERN NCURSES_ACS('i')	ACS_LANTERN	NCURSES_ACS('i')
#define ACS_BOARD NCURSES_ACS('h')	ACS_BOARD	NCURSES_ACS('h')
#define ACS_UARROW NCURSES_ACS('-')	ACS_UARROW	NCURSES_ACS('-')
#define ACS_DARROW NCURSES_ACS('.')	ACS_DARROW	NCURSES_ACS('.')
#define ACS_RARROW NCURSES_ACS('+')	ACS_RARROW	NCURSES_ACS('+')
#define ACS_LARROW NCURSES_ACS(',')	ACS_LARROW	NCURSES_ACS(',')
#define ACS_BULLET NCURSES_ACS('~')	ACS_BULLET	NCURSES_ACS('~')
#define ACS_PLMINUS NCURSES_ACS('g')	ACS_PLMINUS	NCURSES_ACS('g')
#define ACS_DEGREE NCURSES_ACS('f')	ACS_DEGREE	NCURSES_ACS('f')
#define ACS_CKBOARD NCURSES_ACS('a')	ACS_CKBOARD	NCURSES_ACS('a')
#define ACS_DIAMOND NCURSES_ACS('`')	ACS_DIAMOND	NCURSES_ACS('`')
#define ACS_S9 NCURSES_ACS('s')	ACS_S9	NCURSES_ACS('s')
#define ACS_S1 NCURSES_ACS('o')	ACS_S1	NCURSES_ACS('o')
#define ACS_PLUS NCURSES_ACS('n')	ACS_PLUS	NCURSES_ACS('n')
#define ACS_VLINE NCURSES_ACS('x')	ACS_VLINE	NCURSES_ACS('x')
#define ACS_HLINE NCURSES_ACS('q')	ACS_HLINE	NCURSES_ACS('q')
#define ACS_TTEE NCURSES_ACS('w')	ACS_TTEE	NCURSES_ACS('w')
#define ACS_BTEE NCURSES_ACS('v')	ACS_BTEE	NCURSES_ACS('v')
#define ACS_RTEE NCURSES_ACS('u')	ACS_RTEE	NCURSES_ACS('u')
#define ACS_LTEE NCURSES_ACS('t')	ACS_LTEE	NCURSES_ACS('t')
#define ACS_LRCORNER NCURSES_ACS('j')	ACS_LRCORNER	NCURSES_ACS('j')
#define ACS_URCORNER NCURSES_ACS('k')	ACS_URCORNER	NCURSES_ACS('k')
#define ACS_LLCORNER NCURSES_ACS('m')	ACS_LLCORNER	NCURSES_ACS('m')
#define ACS_ULCORNER NCURSES_ACS('l')	ACS_ULCORNER	NCURSES_ACS('l')
#define NCURSES_ACS(c) (acs_map[NCURSES_CAST(unsigned char,(c))])	NCURSES_ACS(c)	(acs_map[NCURSES_CAST(unsigned char,(c))])
#define COLOR_WHITE 7	COLOR_WHITE	7
#define COLOR_CYAN 6	COLOR_CYAN	6
#define COLOR_MAGENTA 5	COLOR_MAGENTA	5
#define COLOR_BLUE 4	COLOR_BLUE	4
#define COLOR_YELLOW 3	COLOR_YELLOW	3
#define COLOR_GREEN 2	COLOR_GREEN	2
#define COLOR_RED 1	COLOR_RED	1
#define COLOR_BLACK 0	COLOR_BLACK	0
#define WA_ITALIC A_ITALIC	WA_ITALIC	A_ITALIC
#define WA_VERTICAL A_VERTICAL	WA_VERTICAL	A_VERTICAL
#define WA_TOP A_TOP	WA_TOP	A_TOP
#define WA_RIGHT A_RIGHT	WA_RIGHT	A_RIGHT
#define WA_LOW A_LOW	WA_LOW	A_LOW
#define WA_LEFT A_LEFT	WA_LEFT	A_LEFT
#define WA_HORIZONTAL A_HORIZONTAL	WA_HORIZONTAL	A_HORIZONTAL
#define WA_PROTECT A_PROTECT	WA_PROTECT	A_PROTECT
#define WA_INVIS A_INVIS	WA_INVIS	A_INVIS
#define WA_ALTCHARSET A_ALTCHARSET	WA_ALTCHARSET	A_ALTCHARSET
#define WA_BOLD A_BOLD	WA_BOLD	A_BOLD
#define WA_DIM A_DIM	WA_DIM	A_DIM
#define WA_BLINK A_BLINK	WA_BLINK	A_BLINK
#define WA_REVERSE A_REVERSE	WA_REVERSE	A_REVERSE
#define WA_UNDERLINE A_UNDERLINE	WA_UNDERLINE	A_UNDERLINE
#define WA_STANDOUT A_STANDOUT	WA_STANDOUT	A_STANDOUT
#define WA_NORMAL A_NORMAL	WA_NORMAL	A_NORMAL
#define WA_ATTRIBUTES A_ATTRIBUTES	WA_ATTRIBUTES	A_ATTRIBUTES
#define NCURSES_OK_ADDR(p) (0 != NCURSES_CAST(const void *, (p)))	NCURSES_OK_ADDR(p)	(0 != NCURSES_CAST(const void *, (p)))
#define NCURSES_CAST(type,value) static_cast<type>(value)	NCURSES_CAST(type,value)	static_cast<type>(value)
#define NCURSES_BOOL bool	NCURSES_BOOL	bool
#define FALSE 0	FALSE	0
#undef FALSE	FALSE	
#define TRUE 1	TRUE	1
#undef TRUE	TRUE	
#define NCURSES_WIDECHAR 1	NCURSES_WIDECHAR	1
#define NCURSES_CH_T cchar_t	NCURSES_CH_T	cchar_t
#undef NCURSES_CH_T	NCURSES_CH_T	
#define NCURSES_WCWIDTH_GRAPHICS 1	NCURSES_WCWIDTH_GRAPHICS	1
#undef NCURSES_WCWIDTH_GRAPHICS	NCURSES_WCWIDTH_GRAPHICS	
#define NCURSES_TPARM_ARG intptr_t	NCURSES_TPARM_ARG	intptr_t
#undef NCURSES_TPARM_ARG	NCURSES_TPARM_ARG	
#define NCURSES_TPARM_VARARGS 1	NCURSES_TPARM_VARARGS	1
#undef NCURSES_TPARM_VARARGS	NCURSES_TPARM_VARARGS	
#undef NCURSES_SIZE_T	NCURSES_SIZE_T	
#define NCURSES_INTEROP_FUNCS 1	NCURSES_INTEROP_FUNCS	1
#undef NCURSES_INTEROP_FUNCS	NCURSES_INTEROP_FUNCS	
#define NCURSES_REENTRANT 0	NCURSES_REENTRANT	0
#define NCURSES_WATTR_MACROS 0	NCURSES_WATTR_MACROS	0
#define NCURSES_OPAQUE_PANEL 0	NCURSES_OPAQUE_PANEL	0
#define NCURSES_OPAQUE_MENU 0	NCURSES_OPAQUE_MENU	0
#define NCURSES_OPAQUE_FORM 0	NCURSES_OPAQUE_FORM	0
#define NCURSES_OPAQUE 0	NCURSES_OPAQUE	0
#define NCURSES_PAIRS_T short	NCURSES_PAIRS_T	short
#undef NCURSES_PAIRS_T	NCURSES_PAIRS_T	
#define NCURSES_COLOR_T short	NCURSES_COLOR_T	short
#undef NCURSES_COLOR_T	NCURSES_COLOR_T	
#define NCURSES_INLINE inline	NCURSES_INLINE	inline
#undef NCURSES_INLINE	NCURSES_INLINE	
#undef NCURSES_CONST	NCURSES_CONST	
#define NCURSES_ATTR_T int	NCURSES_ATTR_T	int
#define NCURSES_ENABLE_STDBOOL_H 1	NCURSES_ENABLE_STDBOOL_H	1
#define NCURSES_MOUSE_VERSION 2	NCURSES_MOUSE_VERSION	2
"#define NCURSES_VERSION ""6.1"""	NCURSES_VERSION	"""6.1"""
#undef NCURSES_VERSION	NCURSES_VERSION	
#define NCURSES_VERSION_PATCH 20190803	NCURSES_VERSION_PATCH	20190803
#define NCURSES_VERSION_MINOR 1	NCURSES_VERSION_MINOR	1
#define NCURSES_VERSION_MAJOR 6	NCURSES_VERSION_MAJOR	6
#define CURSES_H 1	CURSES_H	1
#define CURSES 1	CURSES	1
#define _LP64 1	_LP64	1
#include <termios.h>	<termios.h>	
#include <ncurses_dll.h>	<ncurses_dll.h>	
#define NCURSES_SBOOL char	NCURSES_SBOOL	char
#define acs_chars_index 146	acs_chars_index	146
#define STRCOUNT 414	STRCOUNT	414
#define NUMCOUNT 39	NUMCOUNT	39
#define BOOLCOUNT 44	BOOLCOUNT	44
#define micro_char_size micro_col_size	micro_char_size	micro_col_size
#define teleray_glitch dest_tabs_magic_smso	teleray_glitch	dest_tabs_magic_smso
#define beehive_glitch no_esc_ctlc	beehive_glitch	no_esc_ctlc
#define STRWRITE 394	STRWRITE	394
#define NUMWRITE 33	NUMWRITE	33
#define BOOLWRITE 37	BOOLWRITE	37
#define set_pglen_inch CUR Strings[393]	set_pglen_inch	CUR Strings[393]
#define set_a_attributes CUR Strings[392]	set_a_attributes	CUR Strings[392]
#define enter_vertical_hl_mode CUR Strings[391]	enter_vertical_hl_mode	CUR Strings[391]
#define enter_top_hl_mode CUR Strings[390]	enter_top_hl_mode	CUR Strings[390]
#define enter_right_hl_mode CUR Strings[389]	enter_right_hl_mode	CUR Strings[389]
#define enter_low_hl_mode CUR Strings[388]	enter_low_hl_mode	CUR Strings[388]
#define enter_left_hl_mode CUR Strings[387]	enter_left_hl_mode	CUR Strings[387]
#define enter_horizontal_hl_mode CUR Strings[386]	enter_horizontal_hl_mode	CUR Strings[386]
#define alt_scancode_esc CUR Strings[385]	alt_scancode_esc	CUR Strings[385]
#define scancode_escape CUR Strings[384]	scancode_escape	CUR Strings[384]
#define pc_term_options CUR Strings[383]	pc_term_options	CUR Strings[383]
#define exit_scancode_mode CUR Strings[382]	exit_scancode_mode	CUR Strings[382]
#define enter_scancode_mode CUR Strings[381]	enter_scancode_mode	CUR Strings[381]
#define exit_pc_charset_mode CUR Strings[380]	exit_pc_charset_mode	CUR Strings[380]
#define enter_pc_charset_mode CUR Strings[379]	enter_pc_charset_mode	CUR Strings[379]
#define display_pc_char CUR Strings[378]	display_pc_char	CUR Strings[378]
#define set_page_length CUR Strings[377]	set_page_length	CUR Strings[377]
#define set_color_band CUR Strings[376]	set_color_band	CUR Strings[376]
#define end_bit_image_region CUR Strings[375]	end_bit_image_region	CUR Strings[375]
#define define_bit_image_region CUR Strings[374]	define_bit_image_region	CUR Strings[374]
#define color_names CUR Strings[373]	color_names	CUR Strings[373]
#define bit_image_carriage_return CUR Strings[372]	bit_image_carriage_return	CUR Strings[372]
#define bit_image_newline CUR Strings[371]	bit_image_newline	CUR Strings[371]
#define bit_image_repeat CUR Strings[370]	bit_image_repeat	CUR Strings[370]
#define set_tb_margin CUR Strings[369]	set_tb_margin	CUR Strings[369]
#define set_lr_margin CUR Strings[368]	set_lr_margin	CUR Strings[368]
#define set3_des_seq CUR Strings[367]	set3_des_seq	CUR Strings[367]
#define set2_des_seq CUR Strings[366]	set2_des_seq	CUR Strings[366]
#define set1_des_seq CUR Strings[365]	set1_des_seq	CUR Strings[365]
#define set0_des_seq CUR Strings[364]	set0_des_seq	CUR Strings[364]
#define code_set_init CUR Strings[363]	code_set_init	CUR Strings[363]
#define device_type CUR Strings[362]	device_type	CUR Strings[362]
#define pkey_plab CUR Strings[361]	pkey_plab	CUR Strings[361]
#define set_a_background CUR Strings[360]	set_a_background	CUR Strings[360]
#define set_a_foreground CUR Strings[359]	set_a_foreground	CUR Strings[359]
#define get_mouse CUR Strings[358]	get_mouse	CUR Strings[358]
#define req_mouse_pos CUR Strings[357]	req_mouse_pos	CUR Strings[357]
#define mouse_info CUR Strings[356]	mouse_info	CUR Strings[356]
#define key_mouse CUR Strings[355]	key_mouse	CUR Strings[355]
#define char_set_names CUR Strings[354]	char_set_names	CUR Strings[354]
#define zero_motion CUR Strings[353]	zero_motion	CUR Strings[353]
#define these_cause_cr CUR Strings[352]	these_cause_cr	CUR Strings[352]
#define superscript_characters CUR Strings[351]	superscript_characters	CUR Strings[351]
#define subscript_characters CUR Strings[350]	subscript_characters	CUR Strings[350]
#define stop_char_set_def CUR Strings[349]	stop_char_set_def	CUR Strings[349]
#define stop_bit_image CUR Strings[348]	stop_bit_image	CUR Strings[348]
#define start_char_set_def CUR Strings[347]	start_char_set_def	CUR Strings[347]
#define start_bit_image CUR Strings[346]	start_bit_image	CUR Strings[346]
#define set_top_margin_parm CUR Strings[345]	set_top_margin_parm	CUR Strings[345]
#define set_top_margin CUR Strings[344]	set_top_margin	CUR Strings[344]
#define set_right_margin_parm CUR Strings[343]	set_right_margin_parm	CUR Strings[343]
#define set_left_margin_parm CUR Strings[342]	set_left_margin_parm	CUR Strings[342]
#define set_bottom_margin_parm CUR Strings[341]	set_bottom_margin_parm	CUR Strings[341]
#define set_bottom_margin CUR Strings[340]	set_bottom_margin	CUR Strings[340]
#define select_char_set CUR Strings[339]	select_char_set	CUR Strings[339]
#define parm_up_micro CUR Strings[338]	parm_up_micro	CUR Strings[338]
#define parm_right_micro CUR Strings[337]	parm_right_micro	CUR Strings[337]
#define parm_left_micro CUR Strings[336]	parm_left_micro	CUR Strings[336]
#define parm_down_micro CUR Strings[335]	parm_down_micro	CUR Strings[335]
#define order_of_pins CUR Strings[334]	order_of_pins	CUR Strings[334]
#define micro_up CUR Strings[333]	micro_up	CUR Strings[333]
#define micro_row_address CUR Strings[332]	micro_row_address	CUR Strings[332]
#define micro_right CUR Strings[331]	micro_right	CUR Strings[331]
#define micro_left CUR Strings[330]	micro_left	CUR Strings[330]
#define micro_down CUR Strings[329]	micro_down	CUR Strings[329]
#define micro_column_address CUR Strings[328]	micro_column_address	CUR Strings[328]
#define exit_upward_mode CUR Strings[327]	exit_upward_mode	CUR Strings[327]
#define exit_superscript_mode CUR Strings[326]	exit_superscript_mode	CUR Strings[326]
#define exit_subscript_mode CUR Strings[325]	exit_subscript_mode	CUR Strings[325]
#define exit_shadow_mode CUR Strings[324]	exit_shadow_mode	CUR Strings[324]
#define exit_micro_mode CUR Strings[323]	exit_micro_mode	CUR Strings[323]
#define exit_leftward_mode CUR Strings[322]	exit_leftward_mode	CUR Strings[322]
#define exit_italics_mode CUR Strings[321]	exit_italics_mode	CUR Strings[321]
#define exit_doublewide_mode CUR Strings[320]	exit_doublewide_mode	CUR Strings[320]
#define enter_upward_mode CUR Strings[319]	enter_upward_mode	CUR Strings[319]
#define enter_superscript_mode CUR Strings[318]	enter_superscript_mode	CUR Strings[318]
#define enter_subscript_mode CUR Strings[317]	enter_subscript_mode	CUR Strings[317]
#define enter_shadow_mode CUR Strings[316]	enter_shadow_mode	CUR Strings[316]
#define enter_normal_quality CUR Strings[315]	enter_normal_quality	CUR Strings[315]
#define enter_near_letter_quality CUR Strings[314]	enter_near_letter_quality	CUR Strings[314]
#define enter_micro_mode CUR Strings[313]	enter_micro_mode	CUR Strings[313]
#define enter_leftward_mode CUR Strings[312]	enter_leftward_mode	CUR Strings[312]
#define enter_italics_mode CUR Strings[311]	enter_italics_mode	CUR Strings[311]
#define enter_draft_quality CUR Strings[310]	enter_draft_quality	CUR Strings[310]
#define enter_doublewide_mode CUR Strings[309]	enter_doublewide_mode	CUR Strings[309]
#define define_char CUR Strings[308]	define_char	CUR Strings[308]
#define change_res_vert CUR Strings[307]	change_res_vert	CUR Strings[307]
#define change_res_horz CUR Strings[306]	change_res_horz	CUR Strings[306]
#define change_line_pitch CUR Strings[305]	change_line_pitch	CUR Strings[305]
#define change_char_pitch CUR Strings[304]	change_char_pitch	CUR Strings[304]
#define set_background CUR Strings[303]	set_background	CUR Strings[303]
#define set_foreground CUR Strings[302]	set_foreground	CUR Strings[302]
#define set_color_pair CUR Strings[301]	set_color_pair	CUR Strings[301]
#define initialize_pair CUR Strings[300]	initialize_pair	CUR Strings[300]
#define initialize_color CUR Strings[299]	initialize_color	CUR Strings[299]
#define orig_colors CUR Strings[298]	orig_colors	CUR Strings[298]
#define orig_pair CUR Strings[297]	orig_pair	CUR Strings[297]
#define user9 CUR Strings[296]	user9	CUR Strings[296]
#define user8 CUR Strings[295]	user8	CUR Strings[295]
#define user7 CUR Strings[294]	user7	CUR Strings[294]
#define user6 CUR Strings[293]	user6	CUR Strings[293]
#define user5 CUR Strings[292]	user5	CUR Strings[292]
#define user4 CUR Strings[291]	user4	CUR Strings[291]
#define user3 CUR Strings[290]	user3	CUR Strings[290]
#define user2 CUR Strings[289]	user2	CUR Strings[289]
#define user1 CUR Strings[288]	user1	CUR Strings[288]
#define user0 CUR Strings[287]	user0	CUR Strings[287]
#define wait_tone CUR Strings[286]	wait_tone	CUR Strings[286]
#define fixed_pause CUR Strings[285]	fixed_pause	CUR Strings[285]
#define flash_hook CUR Strings[284]	flash_hook	CUR Strings[284]
#define pulse CUR Strings[283]	pulse	CUR Strings[283]
#define tone CUR Strings[282]	tone	CUR Strings[282]
#define quick_dial CUR Strings[281]	quick_dial	CUR Strings[281]
#define dial_phone CUR Strings[280]	dial_phone	CUR Strings[280]
#define hangup CUR Strings[279]	hangup	CUR Strings[279]
#define goto_window CUR Strings[278]	goto_window	CUR Strings[278]
#define create_window CUR Strings[277]	create_window	CUR Strings[277]
#define remove_clock CUR Strings[276]	remove_clock	CUR Strings[276]
#define display_clock CUR Strings[275]	display_clock	CUR Strings[275]
#define set_clock CUR Strings[274]	set_clock	CUR Strings[274]
#define label_format CUR Strings[273]	label_format	CUR Strings[273]
#define set_right_margin CUR Strings[272]	set_right_margin	CUR Strings[272]
#define set_left_margin CUR Strings[271]	set_left_margin	CUR Strings[271]
#define clear_margins CUR Strings[270]	clear_margins	CUR Strings[270]
#define clr_bol CUR Strings[269]	clr_bol	CUR Strings[269]
#define key_f63 CUR Strings[268]	key_f63	CUR Strings[268]
#define key_f62 CUR Strings[267]	key_f62	CUR Strings[267]
#define key_f61 CUR Strings[266]	key_f61	CUR Strings[266]
#define key_f60 CUR Strings[265]	key_f60	CUR Strings[265]
#define key_f59 CUR Strings[264]	key_f59	CUR Strings[264]
#define key_f58 CUR Strings[263]	key_f58	CUR Strings[263]
#define key_f57 CUR Strings[262]	key_f57	CUR Strings[262]
#define key_f56 CUR Strings[261]	key_f56	CUR Strings[261]
#define key_f55 CUR Strings[260]	key_f55	CUR Strings[260]
#define key_f54 CUR Strings[259]	key_f54	CUR Strings[259]
#define key_f53 CUR Strings[258]	key_f53	CUR Strings[258]
#define key_f52 CUR Strings[257]	key_f52	CUR Strings[257]
#define key_f51 CUR Strings[256]	key_f51	CUR Strings[256]
#define key_f50 CUR Strings[255]	key_f50	CUR Strings[255]
#define key_f49 CUR Strings[254]	key_f49	CUR Strings[254]
#define key_f48 CUR Strings[253]	key_f48	CUR Strings[253]
#define key_f47 CUR Strings[252]	key_f47	CUR Strings[252]
#define key_f46 CUR Strings[251]	key_f46	CUR Strings[251]
#define key_f45 CUR Strings[250]	key_f45	CUR Strings[250]
#define key_f44 CUR Strings[249]	key_f44	CUR Strings[249]
#define key_f43 CUR Strings[248]	key_f43	CUR Strings[248]
#define key_f42 CUR Strings[247]	key_f42	CUR Strings[247]
#define key_f41 CUR Strings[246]	key_f41	CUR Strings[246]
#define key_f40 CUR Strings[245]	key_f40	CUR Strings[245]
#define key_f39 CUR Strings[244]	key_f39	CUR Strings[244]
#define key_f38 CUR Strings[243]	key_f38	CUR Strings[243]
#define key_f37 CUR Strings[242]	key_f37	CUR Strings[242]
#define key_f36 CUR Strings[241]	key_f36	CUR Strings[241]
#define key_f35 CUR Strings[240]	key_f35	CUR Strings[240]
#define key_f34 CUR Strings[239]	key_f34	CUR Strings[239]
#define key_f33 CUR Strings[238]	key_f33	CUR Strings[238]
#define key_f32 CUR Strings[237]	key_f32	CUR Strings[237]
#define key_f31 CUR Strings[236]	key_f31	CUR Strings[236]
#define key_f30 CUR Strings[235]	key_f30	CUR Strings[235]
#define key_f29 CUR Strings[234]	key_f29	CUR Strings[234]
#define key_f28 CUR Strings[233]	key_f28	CUR Strings[233]
#define key_f27 CUR Strings[232]	key_f27	CUR Strings[232]
#define key_f26 CUR Strings[231]	key_f26	CUR Strings[231]
#define key_f25 CUR Strings[230]	key_f25	CUR Strings[230]
#define key_f24 CUR Strings[229]	key_f24	CUR Strings[229]
#define key_f23 CUR Strings[228]	key_f23	CUR Strings[228]
#define key_f22 CUR Strings[227]	key_f22	CUR Strings[227]
#define key_f21 CUR Strings[226]	key_f21	CUR Strings[226]
#define key_f20 CUR Strings[225]	key_f20	CUR Strings[225]
#define key_f19 CUR Strings[224]	key_f19	CUR Strings[224]
#define key_f18 CUR Strings[223]	key_f18	CUR Strings[223]
#define key_f17 CUR Strings[222]	key_f17	CUR Strings[222]
#define key_f16 CUR Strings[221]	key_f16	CUR Strings[221]
#define key_f15 CUR Strings[220]	key_f15	CUR Strings[220]
#define key_f14 CUR Strings[219]	key_f14	CUR Strings[219]
#define key_f13 CUR Strings[218]	key_f13	CUR Strings[218]
#define key_f12 CUR Strings[217]	key_f12	CUR Strings[217]
#define key_f11 CUR Strings[216]	key_f11	CUR Strings[216]
#define req_for_input CUR Strings[215]	req_for_input	CUR Strings[215]
#define key_sundo CUR Strings[214]	key_sundo	CUR Strings[214]
#define key_ssuspend CUR Strings[213]	key_ssuspend	CUR Strings[213]
#define key_ssave CUR Strings[212]	key_ssave	CUR Strings[212]
#define key_srsume CUR Strings[211]	key_srsume	CUR Strings[211]
#define key_sright CUR Strings[210]	key_sright	CUR Strings[210]
#define key_sreplace CUR Strings[209]	key_sreplace	CUR Strings[209]
#define key_sredo CUR Strings[208]	key_sredo	CUR Strings[208]
#define key_sprint CUR Strings[207]	key_sprint	CUR Strings[207]
#define key_sprevious CUR Strings[206]	key_sprevious	CUR Strings[206]
#define key_soptions CUR Strings[205]	key_soptions	CUR Strings[205]
#define key_snext CUR Strings[204]	key_snext	CUR Strings[204]
#define key_smove CUR Strings[203]	key_smove	CUR Strings[203]
#define key_smessage CUR Strings[202]	key_smessage	CUR Strings[202]
#define key_sleft CUR Strings[201]	key_sleft	CUR Strings[201]
#define key_sic CUR Strings[200]	key_sic	CUR Strings[200]
#define key_shome CUR Strings[199]	key_shome	CUR Strings[199]
#define key_shelp CUR Strings[198]	key_shelp	CUR Strings[198]
#define key_sfind CUR Strings[197]	key_sfind	CUR Strings[197]
#define key_sexit CUR Strings[196]	key_sexit	CUR Strings[196]
#define key_seol CUR Strings[195]	key_seol	CUR Strings[195]
#define key_send CUR Strings[194]	key_send	CUR Strings[194]
#define key_select CUR Strings[193]	key_select	CUR Strings[193]
#define key_sdl CUR Strings[192]	key_sdl	CUR Strings[192]
#define key_sdc CUR Strings[191]	key_sdc	CUR Strings[191]
#define key_screate CUR Strings[190]	key_screate	CUR Strings[190]
#define key_scopy CUR Strings[189]	key_scopy	CUR Strings[189]
#define key_scommand CUR Strings[188]	key_scommand	CUR Strings[188]
#define key_scancel CUR Strings[187]	key_scancel	CUR Strings[187]
#define key_sbeg CUR Strings[186]	key_sbeg	CUR Strings[186]
#define key_undo CUR Strings[185]	key_undo	CUR Strings[185]
#define key_suspend CUR Strings[184]	key_suspend	CUR Strings[184]
#define key_save CUR Strings[183]	key_save	CUR Strings[183]
#define key_resume CUR Strings[182]	key_resume	CUR Strings[182]
#define key_restart CUR Strings[181]	key_restart	CUR Strings[181]
#define key_replace CUR Strings[180]	key_replace	CUR Strings[180]
#define key_refresh CUR Strings[179]	key_refresh	CUR Strings[179]
#define key_reference CUR Strings[178]	key_reference	CUR Strings[178]
#define key_redo CUR Strings[177]	key_redo	CUR Strings[177]
#define key_print CUR Strings[176]	key_print	CUR Strings[176]
#define key_previous CUR Strings[175]	key_previous	CUR Strings[175]
#define key_options CUR Strings[174]	key_options	CUR Strings[174]
#define key_open CUR Strings[173]	key_open	CUR Strings[173]
#define key_next CUR Strings[172]	key_next	CUR Strings[172]
#define key_move CUR Strings[171]	key_move	CUR Strings[171]
#define key_message CUR Strings[170]	key_message	CUR Strings[170]
#define key_mark CUR Strings[169]	key_mark	CUR Strings[169]
#define key_help CUR Strings[168]	key_help	CUR Strings[168]
#define key_find CUR Strings[167]	key_find	CUR Strings[167]
#define key_exit CUR Strings[166]	key_exit	CUR Strings[166]
#define key_enter CUR Strings[165]	key_enter	CUR Strings[165]
#define key_end CUR Strings[164]	key_end	CUR Strings[164]
#define key_create CUR Strings[163]	key_create	CUR Strings[163]
#define key_copy CUR Strings[162]	key_copy	CUR Strings[162]
#define key_command CUR Strings[161]	key_command	CUR Strings[161]
#define key_close CUR Strings[160]	key_close	CUR Strings[160]
#define key_cancel CUR Strings[159]	key_cancel	CUR Strings[159]
#define key_beg CUR Strings[158]	key_beg	CUR Strings[158]
#define label_off CUR Strings[157]	label_off	CUR Strings[157]
#define label_on CUR Strings[156]	label_on	CUR Strings[156]
#define ena_acs CUR Strings[155]	ena_acs	CUR Strings[155]
#define xoff_character CUR Strings[154]	xoff_character	CUR Strings[154]
#define xon_character CUR Strings[153]	xon_character	CUR Strings[153]
#define exit_am_mode CUR Strings[152]	exit_am_mode	CUR Strings[152]
#define enter_am_mode CUR Strings[151]	enter_am_mode	CUR Strings[151]
#define exit_xon_mode CUR Strings[150]	exit_xon_mode	CUR Strings[150]
#define enter_xon_mode CUR Strings[149]	enter_xon_mode	CUR Strings[149]
#define key_btab CUR Strings[148]	key_btab	CUR Strings[148]
#define plab_norm CUR Strings[147]	plab_norm	CUR Strings[147]
#define acs_chars CUR Strings[146]	acs_chars	CUR Strings[146]
#define char_padding CUR Strings[145]	char_padding	CUR Strings[145]
#define prtr_non CUR Strings[144]	prtr_non	CUR Strings[144]
#define key_c3 CUR Strings[143]	key_c3	CUR Strings[143]
#define key_c1 CUR Strings[142]	key_c1	CUR Strings[142]
#define key_b2 CUR Strings[141]	key_b2	CUR Strings[141]
#define key_a3 CUR Strings[140]	key_a3	CUR Strings[140]
#define key_a1 CUR Strings[139]	key_a1	CUR Strings[139]
#define init_prog CUR Strings[138]	init_prog	CUR Strings[138]
#define up_half_line CUR Strings[137]	up_half_line	CUR Strings[137]
#define underline_char CUR Strings[136]	underline_char	CUR Strings[136]
#define to_status_line CUR Strings[135]	to_status_line	CUR Strings[135]
#define tab CUR Strings[134]	tab	CUR Strings[134]
#define set_window CUR Strings[133]	set_window	CUR Strings[133]
#define set_tab CUR Strings[132]	set_tab	CUR Strings[132]
#define set_attributes CUR Strings[131]	set_attributes	CUR Strings[131]
#define scroll_reverse CUR Strings[130]	scroll_reverse	CUR Strings[130]
#define scroll_forward CUR Strings[129]	scroll_forward	CUR Strings[129]
#define save_cursor CUR Strings[128]	save_cursor	CUR Strings[128]
#define row_address CUR Strings[127]	row_address	CUR Strings[127]
#define restore_cursor CUR Strings[126]	restore_cursor	CUR Strings[126]
#define reset_file CUR Strings[125]	reset_file	CUR Strings[125]
#define reset_3string CUR Strings[124]	reset_3string	CUR Strings[124]
#define reset_2string CUR Strings[123]	reset_2string	CUR Strings[123]
#define reset_1string CUR Strings[122]	reset_1string	CUR Strings[122]
#define repeat_char CUR Strings[121]	repeat_char	CUR Strings[121]
#define prtr_on CUR Strings[120]	prtr_on	CUR Strings[120]
#define prtr_off CUR Strings[119]	prtr_off	CUR Strings[119]
#define print_screen CUR Strings[118]	print_screen	CUR Strings[118]
#define pkey_xmit CUR Strings[117]	pkey_xmit	CUR Strings[117]
#define pkey_local CUR Strings[116]	pkey_local	CUR Strings[116]
#define pkey_key CUR Strings[115]	pkey_key	CUR Strings[115]
#define parm_up_cursor CUR Strings[114]	parm_up_cursor	CUR Strings[114]
#define parm_rindex CUR Strings[113]	parm_rindex	CUR Strings[113]
#define parm_right_cursor CUR Strings[112]	parm_right_cursor	CUR Strings[112]
#define parm_left_cursor CUR Strings[111]	parm_left_cursor	CUR Strings[111]
#define parm_insert_line CUR Strings[110]	parm_insert_line	CUR Strings[110]
#define parm_index CUR Strings[109]	parm_index	CUR Strings[109]
#define parm_ich CUR Strings[108]	parm_ich	CUR Strings[108]
#define parm_down_cursor CUR Strings[107]	parm_down_cursor	CUR Strings[107]
#define parm_delete_line CUR Strings[106]	parm_delete_line	CUR Strings[106]
#define parm_dch CUR Strings[105]	parm_dch	CUR Strings[105]
#define pad_char CUR Strings[104]	pad_char	CUR Strings[104]
#define newline CUR Strings[103]	newline	CUR Strings[103]
#define meta_on CUR Strings[102]	meta_on	CUR Strings[102]
#define meta_off CUR Strings[101]	meta_off	CUR Strings[101]
#define lab_f9 CUR Strings[100]	lab_f9	CUR Strings[100]
#define lab_f8 CUR Strings[99]	lab_f8	CUR Strings[99]
#define lab_f7 CUR Strings[98]	lab_f7	CUR Strings[98]
#define lab_f6 CUR Strings[97]	lab_f6	CUR Strings[97]
#define lab_f5 CUR Strings[96]	lab_f5	CUR Strings[96]
#define lab_f4 CUR Strings[95]	lab_f4	CUR Strings[95]
#define lab_f3 CUR Strings[94]	lab_f3	CUR Strings[94]
#define lab_f2 CUR Strings[93]	lab_f2	CUR Strings[93]
#define lab_f10 CUR Strings[92]	lab_f10	CUR Strings[92]
#define lab_f1 CUR Strings[91]	lab_f1	CUR Strings[91]
#define lab_f0 CUR Strings[90]	lab_f0	CUR Strings[90]
#define keypad_xmit CUR Strings[89]	keypad_xmit	CUR Strings[89]
#define keypad_local CUR Strings[88]	keypad_local	CUR Strings[88]
#define key_up CUR Strings[87]	key_up	CUR Strings[87]
#define key_stab CUR Strings[86]	key_stab	CUR Strings[86]
#define key_sr CUR Strings[85]	key_sr	CUR Strings[85]
#define key_sf CUR Strings[84]	key_sf	CUR Strings[84]
#define key_right CUR Strings[83]	key_right	CUR Strings[83]
#define key_ppage CUR Strings[82]	key_ppage	CUR Strings[82]
#define key_npage CUR Strings[81]	key_npage	CUR Strings[81]
#define key_ll CUR Strings[80]	key_ll	CUR Strings[80]
#define key_left CUR Strings[79]	key_left	CUR Strings[79]
#define key_il CUR Strings[78]	key_il	CUR Strings[78]
#define key_ic CUR Strings[77]	key_ic	CUR Strings[77]
#define key_home CUR Strings[76]	key_home	CUR Strings[76]
#define key_f9 CUR Strings[75]	key_f9	CUR Strings[75]
#define key_f8 CUR Strings[74]	key_f8	CUR Strings[74]
#define key_f7 CUR Strings[73]	key_f7	CUR Strings[73]
#define key_f6 CUR Strings[72]	key_f6	CUR Strings[72]
#define key_f5 CUR Strings[71]	key_f5	CUR Strings[71]
#define key_f4 CUR Strings[70]	key_f4	CUR Strings[70]
#define key_f3 CUR Strings[69]	key_f3	CUR Strings[69]
#define key_f2 CUR Strings[68]	key_f2	CUR Strings[68]
#define key_f10 CUR Strings[67]	key_f10	CUR Strings[67]
#define key_f1 CUR Strings[66]	key_f1	CUR Strings[66]
#define key_f0 CUR Strings[65]	key_f0	CUR Strings[65]
#define key_eos CUR Strings[64]	key_eos	CUR Strings[64]
#define key_eol CUR Strings[63]	key_eol	CUR Strings[63]
#define key_eic CUR Strings[62]	key_eic	CUR Strings[62]
#define key_down CUR Strings[61]	key_down	CUR Strings[61]
#define key_dl CUR Strings[60]	key_dl	CUR Strings[60]
#define key_dc CUR Strings[59]	key_dc	CUR Strings[59]
#define key_ctab CUR Strings[58]	key_ctab	CUR Strings[58]
#define key_clear CUR Strings[57]	key_clear	CUR Strings[57]
#define key_catab CUR Strings[56]	key_catab	CUR Strings[56]
#define key_backspace CUR Strings[55]	key_backspace	CUR Strings[55]
#define insert_padding CUR Strings[54]	insert_padding	CUR Strings[54]
#define insert_line CUR Strings[53]	insert_line	CUR Strings[53]
#define insert_character CUR Strings[52]	insert_character	CUR Strings[52]
#define init_file CUR Strings[51]	init_file	CUR Strings[51]
#define init_3string CUR Strings[50]	init_3string	CUR Strings[50]
#define init_2string CUR Strings[49]	init_2string	CUR Strings[49]
#define init_1string CUR Strings[48]	init_1string	CUR Strings[48]
#define from_status_line CUR Strings[47]	from_status_line	CUR Strings[47]
#define form_feed CUR Strings[46]	form_feed	CUR Strings[46]
#define flash_screen CUR Strings[45]	flash_screen	CUR Strings[45]
#define exit_underline_mode CUR Strings[44]	exit_underline_mode	CUR Strings[44]
#define exit_standout_mode CUR Strings[43]	exit_standout_mode	CUR Strings[43]
#define exit_insert_mode CUR Strings[42]	exit_insert_mode	CUR Strings[42]
#define exit_delete_mode CUR Strings[41]	exit_delete_mode	CUR Strings[41]
#define exit_ca_mode CUR Strings[40]	exit_ca_mode	CUR Strings[40]
#define exit_attribute_mode CUR Strings[39]	exit_attribute_mode	CUR Strings[39]
#define exit_alt_charset_mode CUR Strings[38]	exit_alt_charset_mode	CUR Strings[38]
#define erase_chars CUR Strings[37]	erase_chars	CUR Strings[37]
#define enter_underline_mode CUR Strings[36]	enter_underline_mode	CUR Strings[36]
#define enter_standout_mode CUR Strings[35]	enter_standout_mode	CUR Strings[35]
#define enter_reverse_mode CUR Strings[34]	enter_reverse_mode	CUR Strings[34]
#define enter_protected_mode CUR Strings[33]	enter_protected_mode	CUR Strings[33]
#define enter_secure_mode CUR Strings[32]	enter_secure_mode	CUR Strings[32]
#define enter_insert_mode CUR Strings[31]	enter_insert_mode	CUR Strings[31]
#define enter_dim_mode CUR Strings[30]	enter_dim_mode	CUR Strings[30]
#define enter_delete_mode CUR Strings[29]	enter_delete_mode	CUR Strings[29]
#define enter_ca_mode CUR Strings[28]	enter_ca_mode	CUR Strings[28]
#define enter_bold_mode CUR Strings[27]	enter_bold_mode	CUR Strings[27]
#define enter_blink_mode CUR Strings[26]	enter_blink_mode	CUR Strings[26]
#define enter_alt_charset_mode CUR Strings[25]	enter_alt_charset_mode	CUR Strings[25]
#define down_half_line CUR Strings[24]	down_half_line	CUR Strings[24]
#define dis_status_line CUR Strings[23]	dis_status_line	CUR Strings[23]
#define delete_line CUR Strings[22]	delete_line	CUR Strings[22]
#define delete_character CUR Strings[21]	delete_character	CUR Strings[21]
#define cursor_visible CUR Strings[20]	cursor_visible	CUR Strings[20]
#define cursor_up CUR Strings[19]	cursor_up	CUR Strings[19]
#define cursor_to_ll CUR Strings[18]	cursor_to_ll	CUR Strings[18]
#define cursor_right CUR Strings[17]	cursor_right	CUR Strings[17]
#define cursor_normal CUR Strings[16]	cursor_normal	CUR Strings[16]
#define cursor_mem_address CUR Strings[15]	cursor_mem_address	CUR Strings[15]
#define cursor_left CUR Strings[14]	cursor_left	CUR Strings[14]
#define cursor_invisible CUR Strings[13]	cursor_invisible	CUR Strings[13]
#define cursor_home CUR Strings[12]	cursor_home	CUR Strings[12]
#define cursor_down CUR Strings[11]	cursor_down	CUR Strings[11]
#define cursor_address CUR Strings[10]	cursor_address	CUR Strings[10]
#define command_character CUR Strings[9]	command_character	CUR Strings[9]
#define column_address CUR Strings[8]	column_address	CUR Strings[8]
#define clr_eos CUR Strings[7]	clr_eos	CUR Strings[7]
#define clr_eol CUR Strings[6]	clr_eol	CUR Strings[6]
#define clear_screen CUR Strings[5]	clear_screen	CUR Strings[5]
#define clear_all_tabs CUR Strings[4]	clear_all_tabs	CUR Strings[4]
#define change_scroll_region CUR Strings[3]	change_scroll_region	CUR Strings[3]
#define carriage_return CUR Strings[2]	carriage_return	CUR Strings[2]
#define bell CUR Strings[1]	bell	CUR Strings[1]
#define back_tab CUR Strings[0]	back_tab	CUR Strings[0]
#define bit_image_type CUR Numbers[32]	bit_image_type	CUR Numbers[32]
#define bit_image_entwining CUR Numbers[31]	bit_image_entwining	CUR Numbers[31]
#define buttons CUR Numbers[30]	buttons	CUR Numbers[30]
#define wide_char_size CUR Numbers[29]	wide_char_size	CUR Numbers[29]
#define print_rate CUR Numbers[28]	print_rate	CUR Numbers[28]
#define output_res_vert_inch CUR Numbers[27]	output_res_vert_inch	CUR Numbers[27]
#define output_res_horz_inch CUR Numbers[26]	output_res_horz_inch	CUR Numbers[26]
#define output_res_line CUR Numbers[25]	output_res_line	CUR Numbers[25]
#define output_res_char CUR Numbers[24]	output_res_char	CUR Numbers[24]
#define number_of_pins CUR Numbers[23]	number_of_pins	CUR Numbers[23]
#define micro_line_size CUR Numbers[22]	micro_line_size	CUR Numbers[22]
#define micro_col_size CUR Numbers[21]	micro_col_size	CUR Numbers[21]
#define max_micro_jump CUR Numbers[20]	max_micro_jump	CUR Numbers[20]
#define max_micro_address CUR Numbers[19]	max_micro_address	CUR Numbers[19]
#define dot_horz_spacing CUR Numbers[18]	dot_horz_spacing	CUR Numbers[18]
#define dot_vert_spacing CUR Numbers[17]	dot_vert_spacing	CUR Numbers[17]
#define buffer_capacity CUR Numbers[16]	buffer_capacity	CUR Numbers[16]
#define no_color_video CUR Numbers[15]	no_color_video	CUR Numbers[15]
#define max_pairs CUR Numbers[14]	max_pairs	CUR Numbers[14]
#define max_colors CUR Numbers[13]	max_colors	CUR Numbers[13]
#define maximum_windows CUR Numbers[12]	maximum_windows	CUR Numbers[12]
#define max_attributes CUR Numbers[11]	max_attributes	CUR Numbers[11]
#define label_width CUR Numbers[10]	label_width	CUR Numbers[10]
#define label_height CUR Numbers[9]	label_height	CUR Numbers[9]
#define num_labels CUR Numbers[8]	num_labels	CUR Numbers[8]
#define width_status_line CUR Numbers[7]	width_status_line	CUR Numbers[7]
#define virtual_terminal CUR Numbers[6]	virtual_terminal	CUR Numbers[6]
#define padding_baud_rate CUR Numbers[5]	padding_baud_rate	CUR Numbers[5]
#define magic_cookie_glitch CUR Numbers[4]	magic_cookie_glitch	CUR Numbers[4]
#define lines_of_memory CUR Numbers[3]	lines_of_memory	CUR Numbers[3]
#define lines CUR Numbers[2]	lines	CUR Numbers[2]
#define init_tabs CUR Numbers[1]	init_tabs	CUR Numbers[1]
#define columns CUR Numbers[0]	columns	CUR Numbers[0]
#define lpi_changes_res CUR Booleans[36]	lpi_changes_res	CUR Booleans[36]
#define cpi_changes_res CUR Booleans[35]	cpi_changes_res	CUR Booleans[35]
#define semi_auto_right_margin CUR Booleans[34]	semi_auto_right_margin	CUR Booleans[34]
#define row_addr_glitch CUR Booleans[33]	row_addr_glitch	CUR Booleans[33]
#define has_print_wheel CUR Booleans[32]	has_print_wheel	CUR Booleans[32]
#define cr_cancels_micro_mode CUR Booleans[31]	cr_cancels_micro_mode	CUR Booleans[31]
#define col_addr_glitch CUR Booleans[30]	col_addr_glitch	CUR Booleans[30]
#define hue_lightness_saturation CUR Booleans[29]	hue_lightness_saturation	CUR Booleans[29]
#define back_color_erase CUR Booleans[28]	back_color_erase	CUR Booleans[28]
#define can_change CUR Booleans[27]	can_change	CUR Booleans[27]
#define non_dest_scroll_region CUR Booleans[26]	non_dest_scroll_region	CUR Booleans[26]
#define no_pad_char CUR Booleans[25]	no_pad_char	CUR Booleans[25]
#define non_rev_rmcup CUR Booleans[24]	non_rev_rmcup	CUR Booleans[24]
#define hard_cursor CUR Booleans[23]	hard_cursor	CUR Booleans[23]
#define prtr_silent CUR Booleans[22]	prtr_silent	CUR Booleans[22]
#define needs_xon_xoff CUR Booleans[21]	needs_xon_xoff	CUR Booleans[21]
#define xon_xoff CUR Booleans[20]	xon_xoff	CUR Booleans[20]
#define transparent_underline CUR Booleans[19]	transparent_underline	CUR Booleans[19]
#define tilde_glitch CUR Booleans[18]	tilde_glitch	CUR Booleans[18]
#define dest_tabs_magic_smso CUR Booleans[17]	dest_tabs_magic_smso	CUR Booleans[17]
#define status_line_esc_ok CUR Booleans[16]	status_line_esc_ok	CUR Booleans[16]
#define over_strike CUR Booleans[15]	over_strike	CUR Booleans[15]
#define move_standout_mode CUR Booleans[14]	move_standout_mode	CUR Booleans[14]
#define move_insert_mode CUR Booleans[13]	move_insert_mode	CUR Booleans[13]
#define memory_below CUR Booleans[12]	memory_below	CUR Booleans[12]
#define memory_above CUR Booleans[11]	memory_above	CUR Booleans[11]
#define insert_null_glitch CUR Booleans[10]	insert_null_glitch	CUR Booleans[10]
#define has_status_line CUR Booleans[9]	has_status_line	CUR Booleans[9]
#define has_meta_key CUR Booleans[8]	has_meta_key	CUR Booleans[8]
#define hard_copy CUR Booleans[7]	hard_copy	CUR Booleans[7]
#define generic_type CUR Booleans[6]	generic_type	CUR Booleans[6]
#define erase_overstrike CUR Booleans[5]	erase_overstrike	CUR Booleans[5]
#define eat_newline_glitch CUR Booleans[4]	eat_newline_glitch	CUR Booleans[4]
#define ceol_standout_glitch CUR Booleans[3]	ceol_standout_glitch	CUR Booleans[3]
#define no_esc_ctlc CUR Booleans[2]	no_esc_ctlc	CUR Booleans[2]
#define auto_right_margin CUR Booleans[1]	auto_right_margin	CUR Booleans[1]
#define auto_left_margin CUR Booleans[0]	auto_left_margin	CUR Booleans[0]
#define CUR ((TERMTYPE *)(cur_term))->	CUR	((TERMTYPE *)(cur_term))->
#define NAMESIZE 256	NAMESIZE	256
#define SET_TTY(fd,buf) tcsetattr(fd, TCSADRAIN, buf)	SET_TTY(fd,buf)	tcsetattr(fd, TCSADRAIN, buf)
#define GET_TTY(fd,buf) tcgetattr(fd, buf)	GET_TTY(fd,buf)	tcgetattr(fd, buf)
#define TTY struct termios	TTY	struct termios
#define TERMIOS 1	TERMIOS	1
#undef TERMIOS	TERMIOS	
#undef GET_TTY	GET_TTY	
#undef SET_TTY	SET_TTY	
#undef TTY	TTY	
#define NCURSES_XNAMES 1	NCURSES_XNAMES	1
#undef NCURSES_XNAMES	NCURSES_XNAMES	
#define NCURSES_USE_TERMCAP 0	NCURSES_USE_TERMCAP	0
#undef NCURSES_USE_TERMCAP	NCURSES_USE_TERMCAP	
#define NCURSES_USE_DATABASE 1	NCURSES_USE_DATABASE	1
#undef NCURSES_USE_DATABASE	NCURSES_USE_DATABASE	
#undef NCURSES_SBOOL	NCURSES_SBOOL	
#define NCURSES_CONST const	NCURSES_CONST	const
#undef NCURSES_CONST	NCURSES_CONST	
"#define NCURSES_VERSION ""6.1"""	NCURSES_VERSION	"""6.1"""
#undef NCURSES_VERSION	NCURSES_VERSION	
#define NCURSES_TERM_H_incl 1	NCURSES_TERM_H_incl	1
#ifndef NCURSES_TERM_H_incl	NCURSES_TERM_H_incl	
#ifdef __cplusplus	__cplusplus	
#if 1 && 1	1 && 1	
#if 1	1	
#if _WIN32	_WIN32	
#ifdef TERMIOS	TERMIOS	
#ifndef micro_char_size	micro_char_size	
#ifdef __INTERNAL_CAPS_VISIBLE	__INTERNAL_CAPS_VISIBLE	
#if NCURSES_XNAMES	NCURSES_XNAMES	
#ifdef NCURSES_INTERNALS	NCURSES_INTERNALS	
#if NCURSES_XNAMES	NCURSES_XNAMES	
#if 0 && !0	0 && !0	
#elif 0	0	
#if 0 || 0	0 || 0	
#ifdef NCURSES_INTERNALS	NCURSES_INTERNALS	
#if !defined(__NCURSES_H)	!defined(__NCURSES_H)	
#if 1	1	
#if !defined(NCURSES_TERMCAP_H_incl)	!defined(NCURSES_TERMCAP_H_incl)	
#if defined(NCURSES_SP_FUNCS) && (NCURSES_SP_FUNCS != 0)	defined(NCURSES_SP_FUNCS) && (NCURSES_SP_FUNCS != 0)	
#if 1	1	
#ifdef __cplusplus	__cplusplus	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""color.h"""	"""color.h"""	
#include <vector>	<vector>	
#include <stddef.h>	<stddef.h>	
#define writembs_nofail(outp,mbs) writembs_check((outp), (mbs), #mbs, false, __FILE__, __LINE__)	writembs_nofail(outp,mbs)	writembs_check((outp), (mbs), #mbs, false, __FILE__, __LINE__)
#define writembs(outp,mbs) writembs_check((outp), (mbs), #mbs, true, __FILE__, __LINE__)	writembs(outp,mbs)	writembs_check((outp), (mbs), #mbs, true, __FILE__, __LINE__)
#define FISH_OUTPUT_H	FISH_OUTPUT_H	
#ifndef FISH_OUTPUT_H	FISH_OUTPUT_H	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wgetopt.h"""	"""wgetopt.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""output.h"""	"""output.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""env.h"""	"""env.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""color.h"""	"""color.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
#include <vector>	<vector>	
#include <string>	<string>	
#include <memory>	<memory>	
#include <term.h>	<term.h>	
#include <curses.h>	<curses.h>	
#include <cstdlib>	<cstdlib>	
#include <cstddef>	<cstddef>	
"#include ""config.h"""	"""config.h"""	
#if HAVE_CURSES_H	HAVE_CURSES_H	
#elif HAVE_NCURSES_H	HAVE_NCURSES_H	
#elif HAVE_NCURSES_CURSES_H	HAVE_NCURSES_CURSES_H	
#if HAVE_TERM_H	HAVE_TERM_H	
#elif HAVE_NCURSES_TERM_H	HAVE_NCURSES_TERM_H	
#ifdef __APPLE__	__APPLE__	
#ifdef __APPLE__	__APPLE__	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""reader.h"""	"""reader.h"""	
"#include ""proc.h"""	"""proc.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""intern.h"""	"""intern.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""env.h"""	"""env.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
#include <cwchar>	<cwchar>	
#include <unistd.h>	<unistd.h>	
#include <sys/stat.h>	<sys/stat.h>	
#include <fcntl.h>	<fcntl.h>	
"#include ""builtin_source.h"""	"""builtin_source.h"""	
"#include ""config.h"""	"""config.h"""	
"#include ""common.h"""	"""common.h"""	
#include <unordered_map>	<unordered_map>	
#include <assert.h>	<assert.h>	
#define FISH_FUTURE_FEATURE_FLAGS_H	FISH_FUTURE_FEATURE_FLAGS_H	
#ifndef FISH_FUTURE_FEATURE_FLAGS_H	FISH_FUTURE_FEATURE_FLAGS_H	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wgetopt.h"""	"""wgetopt.h"""	
"#include ""proc.h"""	"""proc.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""future_feature_flags.h"""	"""future_feature_flags.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
#include <string>	<string>	
#include <cwchar>	<cwchar>	
#include <cstddef>	<cstddef>	
"#include ""builtin_status.h"""	"""builtin_status.h"""	
"#include ""config.h"""	"""config.h"""	
#define status_enum_map_len (sizeof status_enum_map / sizeof *status_enum_map)	status_enum_map_len	(sizeof status_enum_map / sizeof *status_enum_map)
"#define CHECK_FOR_UNEXPECTED_STATUS_ARGS(status_cmd) if (!args.empty()) { const wchar_t *subcmd_str = enum_to_str(status_cmd, status_enum_map); if (!subcmd_str) subcmd_str = L""default""; streams.err.append_format(BUILTIN_ERR_ARG_COUNT2, cmd, subcmd_str, 0, args.size()); retval = STATUS_INVALID_ARGS; break; }"	CHECK_FOR_UNEXPECTED_STATUS_ARGS(status_cmd)	"if (!args.empty()) { const wchar_t *subcmd_str = enum_to_str(status_cmd, status_enum_map); if (!subcmd_str) subcmd_str = L""default""; streams.err.append_format(BUILTIN_ERR_ARG_COUNT2, cmd, subcmd_str, 0, args.size()); retval = STATUS_INVALID_ARGS; break; }"
#include <stdint.h>	<stdint.h>	
#include <stdlib.h>	<stdlib.h>	
#include <limits.h>	<limits.h>	
#define PCRE2_JOIN(a,b) a ## b	PCRE2_JOIN(a,b)	a ## b
#define PCRE2_GLUE(a,b) PCRE2_JOIN(a,b)	PCRE2_GLUE(a,b)	PCRE2_JOIN(a,b)
#define PCRE2_SUFFIX(a) PCRE2_GLUE(a,PCRE2_LOCAL_WIDTH)	PCRE2_SUFFIX(a)	PCRE2_GLUE(a,PCRE2_LOCAL_WIDTH)
#define pcre2_callout_enumerate_block PCRE2_SUFFIX(pcre2_callout_enumerate_block_)	pcre2_callout_enumerate_block	PCRE2_SUFFIX(pcre2_callout_enumerate_block_)
#define PCRE2_STRUCTURE_LIST typedef struct pcre2_callout_block { uint32_t version; uint32_t callout_number; uint32_t capture_top; uint32_t capture_last; PCRE2_SIZE *offset_vector; PCRE2_SPTR mark; PCRE2_SPTR subject; PCRE2_SIZE subject_length; PCRE2_SIZE start_match; PCRE2_SIZE current_position; PCRE2_SIZE pattern_position; PCRE2_SIZE next_item_length; PCRE2_SIZE callout_string_offset; PCRE2_SIZE callout_string_length; PCRE2_SPTR callout_string; uint32_t callout_flags; } pcre2_callout_block; typedef struct pcre2_callout_enumerate_block { uint32_t version; PCRE2_SIZE pattern_position; PCRE2_SIZE next_item_length; uint32_t callout_number; PCRE2_SIZE callout_string_offset; PCRE2_SIZE callout_string_length; PCRE2_SPTR callout_string; } pcre2_callout_enumerate_block;	PCRE2_STRUCTURE_LIST	typedef struct pcre2_callout_block { uint32_t version; uint32_t callout_number; uint32_t capture_top; uint32_t capture_last; PCRE2_SIZE *offset_vector; PCRE2_SPTR mark; PCRE2_SPTR subject; PCRE2_SIZE subject_length; PCRE2_SIZE start_match; PCRE2_SIZE current_position; PCRE2_SIZE pattern_position; PCRE2_SIZE next_item_length; PCRE2_SIZE callout_string_offset; PCRE2_SIZE callout_string_length; PCRE2_SPTR callout_string; uint32_t callout_flags; } pcre2_callout_block; typedef struct pcre2_callout_enumerate_block { uint32_t version; PCRE2_SIZE pattern_position; PCRE2_SIZE next_item_length; uint32_t callout_number; PCRE2_SIZE callout_string_offset; PCRE2_SIZE callout_string_length; PCRE2_SPTR callout_string; } pcre2_callout_enumerate_block;
#define PCRE2_TYPES_STRUCTURES_AND_FUNCTIONS PCRE2_TYPES_LIST PCRE2_STRUCTURE_LIST PCRE2_GENERAL_INFO_FUNCTIONS PCRE2_GENERAL_CONTEXT_FUNCTIONS PCRE2_COMPILE_CONTEXT_FUNCTIONS PCRE2_CONVERT_CONTEXT_FUNCTIONS PCRE2_CONVERT_FUNCTIONS PCRE2_MATCH_CONTEXT_FUNCTIONS PCRE2_COMPILE_FUNCTIONS PCRE2_PATTERN_INFO_FUNCTIONS PCRE2_MATCH_FUNCTIONS PCRE2_SUBSTRING_FUNCTIONS PCRE2_SERIALIZE_FUNCTIONS PCRE2_SUBSTITUTE_FUNCTION PCRE2_JIT_FUNCTIONS PCRE2_OTHER_FUNCTIONS	PCRE2_TYPES_STRUCTURES_AND_FUNCTIONS	PCRE2_TYPES_LIST PCRE2_STRUCTURE_LIST PCRE2_GENERAL_INFO_FUNCTIONS PCRE2_GENERAL_CONTEXT_FUNCTIONS PCRE2_COMPILE_CONTEXT_FUNCTIONS PCRE2_CONVERT_CONTEXT_FUNCTIONS PCRE2_CONVERT_FUNCTIONS PCRE2_MATCH_CONTEXT_FUNCTIONS PCRE2_COMPILE_FUNCTIONS PCRE2_PATTERN_INFO_FUNCTIONS PCRE2_MATCH_FUNCTIONS PCRE2_SUBSTRING_FUNCTIONS PCRE2_SERIALIZE_FUNCTIONS PCRE2_SUBSTITUTE_FUNCTION PCRE2_JIT_FUNCTIONS PCRE2_OTHER_FUNCTIONS
#define pcre2_callout_block PCRE2_SUFFIX(pcre2_callout_block_)	pcre2_callout_block	PCRE2_SUFFIX(pcre2_callout_block_)
#define pcre2_jit_callback PCRE2_SUFFIX(pcre2_jit_callback_)	pcre2_jit_callback	PCRE2_SUFFIX(pcre2_jit_callback_)
#define PCRE2_TYPES_LIST struct pcre2_real_general_context; typedef struct pcre2_real_general_context pcre2_general_context; struct pcre2_real_compile_context; typedef struct pcre2_real_compile_context pcre2_compile_context; struct pcre2_real_match_context; typedef struct pcre2_real_match_context pcre2_match_context; struct pcre2_real_convert_context; typedef struct pcre2_real_convert_context pcre2_convert_context; struct pcre2_real_code; typedef struct pcre2_real_code pcre2_code; struct pcre2_real_match_data; typedef struct pcre2_real_match_data pcre2_match_data; struct pcre2_real_jit_stack; typedef struct pcre2_real_jit_stack pcre2_jit_stack; typedef pcre2_jit_stack *(*pcre2_jit_callback)(void *);	PCRE2_TYPES_LIST	struct pcre2_real_general_context; typedef struct pcre2_real_general_context pcre2_general_context; struct pcre2_real_compile_context; typedef struct pcre2_real_compile_context pcre2_compile_context; struct pcre2_real_match_context; typedef struct pcre2_real_match_context pcre2_match_context; struct pcre2_real_convert_context; typedef struct pcre2_real_convert_context pcre2_convert_context; struct pcre2_real_code; typedef struct pcre2_real_code pcre2_code; struct pcre2_real_match_data; typedef struct pcre2_real_match_data pcre2_match_data; struct pcre2_real_jit_stack; typedef struct pcre2_real_jit_stack pcre2_jit_stack; typedef pcre2_jit_stack *(*pcre2_jit_callback)(void *);
#define pcre2_jit_stack PCRE2_SUFFIX(pcre2_jit_stack_)	pcre2_jit_stack	PCRE2_SUFFIX(pcre2_jit_stack_)
#define pcre2_real_jit_stack PCRE2_SUFFIX(pcre2_real_jit_stack_)	pcre2_real_jit_stack	PCRE2_SUFFIX(pcre2_real_jit_stack_)
#define pcre2_convert_context PCRE2_SUFFIX(pcre2_convert_context_)	pcre2_convert_context	PCRE2_SUFFIX(pcre2_convert_context_)
#define pcre2_real_convert_context PCRE2_SUFFIX(pcre2_real_convert_context_)	pcre2_real_convert_context	PCRE2_SUFFIX(pcre2_real_convert_context_)
#define pcre2_match_context PCRE2_SUFFIX(pcre2_match_context_)	pcre2_match_context	PCRE2_SUFFIX(pcre2_match_context_)
#define pcre2_real_match_context PCRE2_SUFFIX(pcre2_real_match_context_)	pcre2_real_match_context	PCRE2_SUFFIX(pcre2_real_match_context_)
#define pcre2_compile_context PCRE2_SUFFIX(pcre2_compile_context_)	pcre2_compile_context	PCRE2_SUFFIX(pcre2_compile_context_)
#define pcre2_real_compile_context PCRE2_SUFFIX(pcre2_real_compile_context_)	pcre2_real_compile_context	PCRE2_SUFFIX(pcre2_real_compile_context_)
#define pcre2_general_context PCRE2_SUFFIX(pcre2_general_context_)	pcre2_general_context	PCRE2_SUFFIX(pcre2_general_context_)
#define pcre2_real_general_context PCRE2_SUFFIX(pcre2_real_general_context_)	pcre2_real_general_context	PCRE2_SUFFIX(pcre2_real_general_context_)
#define pcre2_match_data PCRE2_SUFFIX(pcre2_match_data_)	pcre2_match_data	PCRE2_SUFFIX(pcre2_match_data_)
#define pcre2_real_match_data PCRE2_SUFFIX(pcre2_real_match_data_)	pcre2_real_match_data	PCRE2_SUFFIX(pcre2_real_match_data_)
#define pcre2_code PCRE2_SUFFIX(pcre2_code_)	pcre2_code	PCRE2_SUFFIX(pcre2_code_)
#define pcre2_real_code PCRE2_SUFFIX(pcre2_real_code_)	pcre2_real_code	PCRE2_SUFFIX(pcre2_real_code_)
#define PCRE2_SPTR PCRE2_SUFFIX(PCRE2_SPTR)	PCRE2_SPTR	PCRE2_SUFFIX(PCRE2_SPTR)
#define PCRE2_SIZE size_t	PCRE2_SIZE	size_t
#define PCRE2_SUFFIX(a) PCRE2_GLUE(a, PCRE2_CODE_UNIT_WIDTH)	PCRE2_SUFFIX(a)	PCRE2_GLUE(a, PCRE2_CODE_UNIT_WIDTH)
#undef PCRE2_SUFFIX	PCRE2_SUFFIX	
#undef PCRE2_TYPES_STRUCTURES_AND_FUNCTIONS	PCRE2_TYPES_STRUCTURES_AND_FUNCTIONS	
#undef PCRE2_OTHER_FUNCTIONS	PCRE2_OTHER_FUNCTIONS	
#undef PCRE2_JIT_FUNCTIONS	PCRE2_JIT_FUNCTIONS	
#undef PCRE2_SUBSTITUTE_FUNCTION	PCRE2_SUBSTITUTE_FUNCTION	
#undef PCRE2_SERIALIZE_FUNCTIONS	PCRE2_SERIALIZE_FUNCTIONS	
#undef PCRE2_SUBSTRING_FUNCTIONS	PCRE2_SUBSTRING_FUNCTIONS	
#undef PCRE2_MATCH_FUNCTIONS	PCRE2_MATCH_FUNCTIONS	
#undef PCRE2_PATTERN_INFO_FUNCTIONS	PCRE2_PATTERN_INFO_FUNCTIONS	
#undef PCRE2_COMPILE_FUNCTIONS	PCRE2_COMPILE_FUNCTIONS	
#undef PCRE2_MATCH_CONTEXT_FUNCTIONS	PCRE2_MATCH_CONTEXT_FUNCTIONS	
#undef PCRE2_CONVERT_CONTEXT_FUNCTIONS	PCRE2_CONVERT_CONTEXT_FUNCTIONS	
#undef PCRE2_COMPILE_CONTEXT_FUNCTIONS	PCRE2_COMPILE_CONTEXT_FUNCTIONS	
#undef PCRE2_GENERAL_CONTEXT_FUNCTIONS	PCRE2_GENERAL_CONTEXT_FUNCTIONS	
#undef PCRE2_GENERAL_INFO_FUNCTIONS	PCRE2_GENERAL_INFO_FUNCTIONS	
#undef PCRE2_STRUCTURE_LIST	PCRE2_STRUCTURE_LIST	
#undef PCRE2_TYPES_LIST	PCRE2_TYPES_LIST	
#undef PCRE2_LOCAL_WIDTH	PCRE2_LOCAL_WIDTH	
#define PCRE2_LOCAL_WIDTH 32	PCRE2_LOCAL_WIDTH	32
#undef PCRE2_LOCAL_WIDTH	PCRE2_LOCAL_WIDTH	
#define PCRE2_LOCAL_WIDTH 16	PCRE2_LOCAL_WIDTH	16
#undef PCRE2_LOCAL_WIDTH	PCRE2_LOCAL_WIDTH	
#define PCRE2_LOCAL_WIDTH 8	PCRE2_LOCAL_WIDTH	8
#define pcre2_set_recursion_memory_management PCRE2_SUFFIX(pcre2_set_recursion_memory_management_)	pcre2_set_recursion_memory_management	PCRE2_SUFFIX(pcre2_set_recursion_memory_management_)
#define pcre2_set_recursion_limit PCRE2_SUFFIX(pcre2_set_recursion_limit_)	pcre2_set_recursion_limit	PCRE2_SUFFIX(pcre2_set_recursion_limit_)
#define pcre2_substring_number_from_name PCRE2_SUFFIX(pcre2_substring_number_from_name_)	pcre2_substring_number_from_name	PCRE2_SUFFIX(pcre2_substring_number_from_name_)
#define pcre2_substring_nametable_scan PCRE2_SUFFIX(pcre2_substring_nametable_scan_)	pcre2_substring_nametable_scan	PCRE2_SUFFIX(pcre2_substring_nametable_scan_)
#define pcre2_substring_list_free PCRE2_SUFFIX(pcre2_substring_list_free_)	pcre2_substring_list_free	PCRE2_SUFFIX(pcre2_substring_list_free_)
#define pcre2_substring_list_get PCRE2_SUFFIX(pcre2_substring_list_get_)	pcre2_substring_list_get	PCRE2_SUFFIX(pcre2_substring_list_get_)
#define pcre2_substring_length_bynumber PCRE2_SUFFIX(pcre2_substring_length_bynumber_)	pcre2_substring_length_bynumber	PCRE2_SUFFIX(pcre2_substring_length_bynumber_)
#define pcre2_substring_length_byname PCRE2_SUFFIX(pcre2_substring_length_byname_)	pcre2_substring_length_byname	PCRE2_SUFFIX(pcre2_substring_length_byname_)
#define pcre2_substring_get_bynumber PCRE2_SUFFIX(pcre2_substring_get_bynumber_)	pcre2_substring_get_bynumber	PCRE2_SUFFIX(pcre2_substring_get_bynumber_)
#define pcre2_substring_get_byname PCRE2_SUFFIX(pcre2_substring_get_byname_)	pcre2_substring_get_byname	PCRE2_SUFFIX(pcre2_substring_get_byname_)
#define pcre2_substring_free PCRE2_SUFFIX(pcre2_substring_free_)	pcre2_substring_free	PCRE2_SUFFIX(pcre2_substring_free_)
#define pcre2_substring_copy_bynumber PCRE2_SUFFIX(pcre2_substring_copy_bynumber_)	pcre2_substring_copy_bynumber	PCRE2_SUFFIX(pcre2_substring_copy_bynumber_)
#define pcre2_substring_copy_byname PCRE2_SUFFIX(pcre2_substring_copy_byname_)	pcre2_substring_copy_byname	PCRE2_SUFFIX(pcre2_substring_copy_byname_)
#define pcre2_substitute PCRE2_SUFFIX(pcre2_substitute_)	pcre2_substitute	PCRE2_SUFFIX(pcre2_substitute_)
#define pcre2_set_offset_limit PCRE2_SUFFIX(pcre2_set_offset_limit_)	pcre2_set_offset_limit	PCRE2_SUFFIX(pcre2_set_offset_limit_)
#define pcre2_set_parens_nest_limit PCRE2_SUFFIX(pcre2_set_parens_nest_limit_)	pcre2_set_parens_nest_limit	PCRE2_SUFFIX(pcre2_set_parens_nest_limit_)
#define pcre2_set_newline PCRE2_SUFFIX(pcre2_set_newline_)	pcre2_set_newline	PCRE2_SUFFIX(pcre2_set_newline_)
#define pcre2_set_max_pattern_length PCRE2_SUFFIX(pcre2_set_max_pattern_length_)	pcre2_set_max_pattern_length	PCRE2_SUFFIX(pcre2_set_max_pattern_length_)
#define pcre2_set_match_limit PCRE2_SUFFIX(pcre2_set_match_limit_)	pcre2_set_match_limit	PCRE2_SUFFIX(pcre2_set_match_limit_)
#define pcre2_set_heap_limit PCRE2_SUFFIX(pcre2_set_heap_limit_)	pcre2_set_heap_limit	PCRE2_SUFFIX(pcre2_set_heap_limit_)
#define pcre2_set_glob_separator PCRE2_SUFFIX(pcre2_set_glob_separator_)	pcre2_set_glob_separator	PCRE2_SUFFIX(pcre2_set_glob_separator_)
#define pcre2_set_glob_escape PCRE2_SUFFIX(pcre2_set_glob_escape_)	pcre2_set_glob_escape	PCRE2_SUFFIX(pcre2_set_glob_escape_)
#define pcre2_set_depth_limit PCRE2_SUFFIX(pcre2_set_depth_limit_)	pcre2_set_depth_limit	PCRE2_SUFFIX(pcre2_set_depth_limit_)
#define pcre2_set_compile_recursion_guard PCRE2_SUFFIX(pcre2_set_compile_recursion_guard_)	pcre2_set_compile_recursion_guard	PCRE2_SUFFIX(pcre2_set_compile_recursion_guard_)
#define pcre2_set_compile_extra_options PCRE2_SUFFIX(pcre2_set_compile_extra_options_)	pcre2_set_compile_extra_options	PCRE2_SUFFIX(pcre2_set_compile_extra_options_)
#define pcre2_set_character_tables PCRE2_SUFFIX(pcre2_set_character_tables_)	pcre2_set_character_tables	PCRE2_SUFFIX(pcre2_set_character_tables_)
#define pcre2_set_callout PCRE2_SUFFIX(pcre2_set_callout_)	pcre2_set_callout	PCRE2_SUFFIX(pcre2_set_callout_)
#define pcre2_set_bsr PCRE2_SUFFIX(pcre2_set_bsr_)	pcre2_set_bsr	PCRE2_SUFFIX(pcre2_set_bsr_)
#define pcre2_serialize_get_number_of_codes PCRE2_SUFFIX(pcre2_serialize_get_number_of_codes_)	pcre2_serialize_get_number_of_codes	PCRE2_SUFFIX(pcre2_serialize_get_number_of_codes_)
#define pcre2_serialize_free PCRE2_SUFFIX(pcre2_serialize_free_)	pcre2_serialize_free	PCRE2_SUFFIX(pcre2_serialize_free_)
#define pcre2_serialize_encode PCRE2_SUFFIX(pcre2_serialize_encode_)	pcre2_serialize_encode	PCRE2_SUFFIX(pcre2_serialize_encode_)
#define pcre2_serialize_decode PCRE2_SUFFIX(pcre2_serialize_decode_)	pcre2_serialize_decode	PCRE2_SUFFIX(pcre2_serialize_decode_)
#define pcre2_pattern_info PCRE2_SUFFIX(pcre2_pattern_info_)	pcre2_pattern_info	PCRE2_SUFFIX(pcre2_pattern_info_)
#define pcre2_pattern_convert PCRE2_SUFFIX(pcre2_pattern_convert_)	pcre2_pattern_convert	PCRE2_SUFFIX(pcre2_pattern_convert_)
#define pcre2_match_data_free PCRE2_SUFFIX(pcre2_match_data_free_)	pcre2_match_data_free	PCRE2_SUFFIX(pcre2_match_data_free_)
#define pcre2_match_data_create_from_pattern PCRE2_SUFFIX(pcre2_match_data_create_from_pattern_)	pcre2_match_data_create_from_pattern	PCRE2_SUFFIX(pcre2_match_data_create_from_pattern_)
#define pcre2_match_data_create PCRE2_SUFFIX(pcre2_match_data_create_)	pcre2_match_data_create	PCRE2_SUFFIX(pcre2_match_data_create_)
#define pcre2_match_context_free PCRE2_SUFFIX(pcre2_match_context_free_)	pcre2_match_context_free	PCRE2_SUFFIX(pcre2_match_context_free_)
#define pcre2_match_context_create PCRE2_SUFFIX(pcre2_match_context_create_)	pcre2_match_context_create	PCRE2_SUFFIX(pcre2_match_context_create_)
#define pcre2_match_context_copy PCRE2_SUFFIX(pcre2_match_context_copy_)	pcre2_match_context_copy	PCRE2_SUFFIX(pcre2_match_context_copy_)
#define pcre2_match PCRE2_SUFFIX(pcre2_match_)	pcre2_match	PCRE2_SUFFIX(pcre2_match_)
#define pcre2_maketables PCRE2_SUFFIX(pcre2_maketables_)	pcre2_maketables	PCRE2_SUFFIX(pcre2_maketables_)
#define pcre2_jit_stack_free PCRE2_SUFFIX(pcre2_jit_stack_free_)	pcre2_jit_stack_free	PCRE2_SUFFIX(pcre2_jit_stack_free_)
#define pcre2_jit_stack_create PCRE2_SUFFIX(pcre2_jit_stack_create_)	pcre2_jit_stack_create	PCRE2_SUFFIX(pcre2_jit_stack_create_)
#define pcre2_jit_stack_assign PCRE2_SUFFIX(pcre2_jit_stack_assign_)	pcre2_jit_stack_assign	PCRE2_SUFFIX(pcre2_jit_stack_assign_)
#define pcre2_jit_free_unused_memory PCRE2_SUFFIX(pcre2_jit_free_unused_memory_)	pcre2_jit_free_unused_memory	PCRE2_SUFFIX(pcre2_jit_free_unused_memory_)
#define pcre2_jit_match PCRE2_SUFFIX(pcre2_jit_match_)	pcre2_jit_match	PCRE2_SUFFIX(pcre2_jit_match_)
#define pcre2_jit_compile PCRE2_SUFFIX(pcre2_jit_compile_)	pcre2_jit_compile	PCRE2_SUFFIX(pcre2_jit_compile_)
#define pcre2_get_startchar PCRE2_SUFFIX(pcre2_get_startchar_)	pcre2_get_startchar	PCRE2_SUFFIX(pcre2_get_startchar_)
#define pcre2_get_ovector_count PCRE2_SUFFIX(pcre2_get_ovector_count_)	pcre2_get_ovector_count	PCRE2_SUFFIX(pcre2_get_ovector_count_)
#define pcre2_get_ovector_pointer PCRE2_SUFFIX(pcre2_get_ovector_pointer_)	pcre2_get_ovector_pointer	PCRE2_SUFFIX(pcre2_get_ovector_pointer_)
#define pcre2_get_mark PCRE2_SUFFIX(pcre2_get_mark_)	pcre2_get_mark	PCRE2_SUFFIX(pcre2_get_mark_)
#define pcre2_get_error_message PCRE2_SUFFIX(pcre2_get_error_message_)	pcre2_get_error_message	PCRE2_SUFFIX(pcre2_get_error_message_)
#define pcre2_general_context_free PCRE2_SUFFIX(pcre2_general_context_free_)	pcre2_general_context_free	PCRE2_SUFFIX(pcre2_general_context_free_)
#define pcre2_general_context_create PCRE2_SUFFIX(pcre2_general_context_create_)	pcre2_general_context_create	PCRE2_SUFFIX(pcre2_general_context_create_)
#define pcre2_general_context_copy PCRE2_SUFFIX(pcre2_general_context_copy_)	pcre2_general_context_copy	PCRE2_SUFFIX(pcre2_general_context_copy_)
#define pcre2_dfa_match PCRE2_SUFFIX(pcre2_dfa_match_)	pcre2_dfa_match	PCRE2_SUFFIX(pcre2_dfa_match_)
#define pcre2_converted_pattern_free PCRE2_SUFFIX(pcre2_converted_pattern_free_)	pcre2_converted_pattern_free	PCRE2_SUFFIX(pcre2_converted_pattern_free_)
#define pcre2_convert_context_free PCRE2_SUFFIX(pcre2_convert_context_free_)	pcre2_convert_context_free	PCRE2_SUFFIX(pcre2_convert_context_free_)
#define pcre2_convert_context_create PCRE2_SUFFIX(pcre2_convert_context_create_)	pcre2_convert_context_create	PCRE2_SUFFIX(pcre2_convert_context_create_)
#define pcre2_convert_context_copy PCRE2_SUFFIX(pcre2_convert_context_copy_)	pcre2_convert_context_copy	PCRE2_SUFFIX(pcre2_convert_context_copy_)
#define pcre2_config PCRE2_SUFFIX(pcre2_config_)	pcre2_config	PCRE2_SUFFIX(pcre2_config_)
#define pcre2_compile_context_free PCRE2_SUFFIX(pcre2_compile_context_free_)	pcre2_compile_context_free	PCRE2_SUFFIX(pcre2_compile_context_free_)
#define pcre2_compile_context_create PCRE2_SUFFIX(pcre2_compile_context_create_)	pcre2_compile_context_create	PCRE2_SUFFIX(pcre2_compile_context_create_)
#define pcre2_compile_context_copy PCRE2_SUFFIX(pcre2_compile_context_copy_)	pcre2_compile_context_copy	PCRE2_SUFFIX(pcre2_compile_context_copy_)
#define pcre2_compile PCRE2_SUFFIX(pcre2_compile_)	pcre2_compile	PCRE2_SUFFIX(pcre2_compile_)
#define pcre2_code_free PCRE2_SUFFIX(pcre2_code_free_)	pcre2_code_free	PCRE2_SUFFIX(pcre2_code_free_)
#define pcre2_code_copy_with_tables PCRE2_SUFFIX(pcre2_code_copy_with_tables_)	pcre2_code_copy_with_tables	PCRE2_SUFFIX(pcre2_code_copy_with_tables_)
#define pcre2_code_copy PCRE2_SUFFIX(pcre2_code_copy_)	pcre2_code_copy	PCRE2_SUFFIX(pcre2_code_copy_)
#define pcre2_callout_enumerate PCRE2_SUFFIX(pcre2_callout_enumerate_)	pcre2_callout_enumerate	PCRE2_SUFFIX(pcre2_callout_enumerate_)
#define PCRE2_UCHAR PCRE2_SUFFIX(PCRE2_UCHAR)	PCRE2_UCHAR	PCRE2_SUFFIX(PCRE2_UCHAR)
#define PCRE2_OTHER_FUNCTIONS PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_get_error_message(int, PCRE2_UCHAR *, PCRE2_SIZE); PCRE2_EXP_DECL const uint8_t PCRE2_CALL_CONVENTION *pcre2_maketables(pcre2_general_context *);	PCRE2_OTHER_FUNCTIONS	PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_get_error_message(int, PCRE2_UCHAR *, PCRE2_SIZE); PCRE2_EXP_DECL const uint8_t PCRE2_CALL_CONVENTION *pcre2_maketables(pcre2_general_context *);
#define PCRE2_JIT_FUNCTIONS PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_jit_compile(pcre2_code *, uint32_t); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_jit_match(const pcre2_code *, PCRE2_SPTR, PCRE2_SIZE, PCRE2_SIZE, uint32_t, pcre2_match_data *, pcre2_match_context *); PCRE2_EXP_DECL void PCRE2_CALL_CONVENTION pcre2_jit_free_unused_memory(pcre2_general_context *); PCRE2_EXP_DECL pcre2_jit_stack PCRE2_CALL_CONVENTION *pcre2_jit_stack_create(PCRE2_SIZE, PCRE2_SIZE, pcre2_general_context *); PCRE2_EXP_DECL void PCRE2_CALL_CONVENTION pcre2_jit_stack_assign(pcre2_match_context *, pcre2_jit_callback, void *); PCRE2_EXP_DECL void PCRE2_CALL_CONVENTION pcre2_jit_stack_free(pcre2_jit_stack *);	PCRE2_JIT_FUNCTIONS	PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_jit_compile(pcre2_code *, uint32_t); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_jit_match(const pcre2_code *, PCRE2_SPTR, PCRE2_SIZE, PCRE2_SIZE, uint32_t, pcre2_match_data *, pcre2_match_context *); PCRE2_EXP_DECL void PCRE2_CALL_CONVENTION pcre2_jit_free_unused_memory(pcre2_general_context *); PCRE2_EXP_DECL pcre2_jit_stack PCRE2_CALL_CONVENTION *pcre2_jit_stack_create(PCRE2_SIZE, PCRE2_SIZE, pcre2_general_context *); PCRE2_EXP_DECL void PCRE2_CALL_CONVENTION pcre2_jit_stack_assign(pcre2_match_context *, pcre2_jit_callback, void *); PCRE2_EXP_DECL void PCRE2_CALL_CONVENTION pcre2_jit_stack_free(pcre2_jit_stack *);
#define PCRE2_CONVERT_FUNCTIONS PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_pattern_convert(PCRE2_SPTR, PCRE2_SIZE, uint32_t, PCRE2_UCHAR **, PCRE2_SIZE *, pcre2_convert_context *); PCRE2_EXP_DECL void PCRE2_CALL_CONVENTION pcre2_converted_pattern_free(PCRE2_UCHAR *);	PCRE2_CONVERT_FUNCTIONS	PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_pattern_convert(PCRE2_SPTR, PCRE2_SIZE, uint32_t, PCRE2_UCHAR **, PCRE2_SIZE *, pcre2_convert_context *); PCRE2_EXP_DECL void PCRE2_CALL_CONVENTION pcre2_converted_pattern_free(PCRE2_UCHAR *);
#define PCRE2_SUBSTITUTE_FUNCTION PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_substitute(const pcre2_code *, PCRE2_SPTR, PCRE2_SIZE, PCRE2_SIZE, uint32_t, pcre2_match_data *, pcre2_match_context *, PCRE2_SPTR, PCRE2_SIZE, PCRE2_UCHAR *, PCRE2_SIZE *);	PCRE2_SUBSTITUTE_FUNCTION	PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_substitute(const pcre2_code *, PCRE2_SPTR, PCRE2_SIZE, PCRE2_SIZE, uint32_t, pcre2_match_data *, pcre2_match_context *, PCRE2_SPTR, PCRE2_SIZE, PCRE2_UCHAR *, PCRE2_SIZE *);
#define PCRE2_SERIALIZE_FUNCTIONS PCRE2_EXP_DECL int32_t PCRE2_CALL_CONVENTION pcre2_serialize_encode(const pcre2_code **, int32_t, uint8_t **, PCRE2_SIZE *, pcre2_general_context *); PCRE2_EXP_DECL int32_t PCRE2_CALL_CONVENTION pcre2_serialize_decode(pcre2_code **, int32_t, const uint8_t *, pcre2_general_context *); PCRE2_EXP_DECL int32_t PCRE2_CALL_CONVENTION pcre2_serialize_get_number_of_codes(const uint8_t *); PCRE2_EXP_DECL void PCRE2_CALL_CONVENTION pcre2_serialize_free(uint8_t *);	PCRE2_SERIALIZE_FUNCTIONS	PCRE2_EXP_DECL int32_t PCRE2_CALL_CONVENTION pcre2_serialize_encode(const pcre2_code **, int32_t, uint8_t **, PCRE2_SIZE *, pcre2_general_context *); PCRE2_EXP_DECL int32_t PCRE2_CALL_CONVENTION pcre2_serialize_decode(pcre2_code **, int32_t, const uint8_t *, pcre2_general_context *); PCRE2_EXP_DECL int32_t PCRE2_CALL_CONVENTION pcre2_serialize_get_number_of_codes(const uint8_t *); PCRE2_EXP_DECL void PCRE2_CALL_CONVENTION pcre2_serialize_free(uint8_t *);
#define PCRE2_SUBSTRING_FUNCTIONS PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_substring_copy_byname(pcre2_match_data *, PCRE2_SPTR, PCRE2_UCHAR *, PCRE2_SIZE *); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_substring_copy_bynumber(pcre2_match_data *, uint32_t, PCRE2_UCHAR *, PCRE2_SIZE *); PCRE2_EXP_DECL void PCRE2_CALL_CONVENTION pcre2_substring_free(PCRE2_UCHAR *); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_substring_get_byname(pcre2_match_data *, PCRE2_SPTR, PCRE2_UCHAR **, PCRE2_SIZE *); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_substring_get_bynumber(pcre2_match_data *, uint32_t, PCRE2_UCHAR **, PCRE2_SIZE *); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_substring_length_byname(pcre2_match_data *, PCRE2_SPTR, PCRE2_SIZE *); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_substring_length_bynumber(pcre2_match_data *, uint32_t, PCRE2_SIZE *); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_substring_nametable_scan(const pcre2_code *, PCRE2_SPTR, PCRE2_SPTR *, PCRE2_SPTR *); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_substring_number_from_name(const pcre2_code *, PCRE2_SPTR); PCRE2_EXP_DECL void PCRE2_CALL_CONVENTION pcre2_substring_list_free(PCRE2_SPTR *); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_substring_list_get(pcre2_match_data *, PCRE2_UCHAR ***, PCRE2_SIZE **);	PCRE2_SUBSTRING_FUNCTIONS	PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_substring_copy_byname(pcre2_match_data *, PCRE2_SPTR, PCRE2_UCHAR *, PCRE2_SIZE *); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_substring_copy_bynumber(pcre2_match_data *, uint32_t, PCRE2_UCHAR *, PCRE2_SIZE *); PCRE2_EXP_DECL void PCRE2_CALL_CONVENTION pcre2_substring_free(PCRE2_UCHAR *); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_substring_get_byname(pcre2_match_data *, PCRE2_SPTR, PCRE2_UCHAR **, PCRE2_SIZE *); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_substring_get_bynumber(pcre2_match_data *, uint32_t, PCRE2_UCHAR **, PCRE2_SIZE *); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_substring_length_byname(pcre2_match_data *, PCRE2_SPTR, PCRE2_SIZE *); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_substring_length_bynumber(pcre2_match_data *, uint32_t, PCRE2_SIZE *); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_substring_nametable_scan(const pcre2_code *, PCRE2_SPTR, PCRE2_SPTR *, PCRE2_SPTR *); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_substring_number_from_name(const pcre2_code *, PCRE2_SPTR); PCRE2_EXP_DECL void PCRE2_CALL_CONVENTION pcre2_substring_list_free(PCRE2_SPTR *); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_substring_list_get(pcre2_match_data *, PCRE2_UCHAR ***, PCRE2_SIZE **);
#define PCRE2_MATCH_FUNCTIONS PCRE2_EXP_DECL pcre2_match_data PCRE2_CALL_CONVENTION *pcre2_match_data_create(uint32_t, pcre2_general_context *); PCRE2_EXP_DECL pcre2_match_data PCRE2_CALL_CONVENTION *pcre2_match_data_create_from_pattern(const pcre2_code *, pcre2_general_context *); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_dfa_match(const pcre2_code *, PCRE2_SPTR, PCRE2_SIZE, PCRE2_SIZE, uint32_t, pcre2_match_data *, pcre2_match_context *, int *, PCRE2_SIZE); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_match(const pcre2_code *, PCRE2_SPTR, PCRE2_SIZE, PCRE2_SIZE, uint32_t, pcre2_match_data *, pcre2_match_context *); PCRE2_EXP_DECL void PCRE2_CALL_CONVENTION pcre2_match_data_free(pcre2_match_data *); PCRE2_EXP_DECL PCRE2_SPTR PCRE2_CALL_CONVENTION pcre2_get_mark(pcre2_match_data *); PCRE2_EXP_DECL uint32_t PCRE2_CALL_CONVENTION pcre2_get_ovector_count(pcre2_match_data *); PCRE2_EXP_DECL PCRE2_SIZE PCRE2_CALL_CONVENTION *pcre2_get_ovector_pointer(pcre2_match_data *); PCRE2_EXP_DECL PCRE2_SIZE PCRE2_CALL_CONVENTION pcre2_get_startchar(pcre2_match_data *);	PCRE2_MATCH_FUNCTIONS	PCRE2_EXP_DECL pcre2_match_data PCRE2_CALL_CONVENTION *pcre2_match_data_create(uint32_t, pcre2_general_context *); PCRE2_EXP_DECL pcre2_match_data PCRE2_CALL_CONVENTION *pcre2_match_data_create_from_pattern(const pcre2_code *, pcre2_general_context *); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_dfa_match(const pcre2_code *, PCRE2_SPTR, PCRE2_SIZE, PCRE2_SIZE, uint32_t, pcre2_match_data *, pcre2_match_context *, int *, PCRE2_SIZE); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_match(const pcre2_code *, PCRE2_SPTR, PCRE2_SIZE, PCRE2_SIZE, uint32_t, pcre2_match_data *, pcre2_match_context *); PCRE2_EXP_DECL void PCRE2_CALL_CONVENTION pcre2_match_data_free(pcre2_match_data *); PCRE2_EXP_DECL PCRE2_SPTR PCRE2_CALL_CONVENTION pcre2_get_mark(pcre2_match_data *); PCRE2_EXP_DECL uint32_t PCRE2_CALL_CONVENTION pcre2_get_ovector_count(pcre2_match_data *); PCRE2_EXP_DECL PCRE2_SIZE PCRE2_CALL_CONVENTION *pcre2_get_ovector_pointer(pcre2_match_data *); PCRE2_EXP_DECL PCRE2_SIZE PCRE2_CALL_CONVENTION pcre2_get_startchar(pcre2_match_data *);
#define PCRE2_PATTERN_INFO_FUNCTIONS PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_pattern_info(const pcre2_code *, uint32_t, void *); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_callout_enumerate(const pcre2_code *, int (*)(pcre2_callout_enumerate_block *, void *), void *);	PCRE2_PATTERN_INFO_FUNCTIONS	PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_pattern_info(const pcre2_code *, uint32_t, void *); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_callout_enumerate(const pcre2_code *, int (*)(pcre2_callout_enumerate_block *, void *), void *);
#define PCRE2_COMPILE_FUNCTIONS PCRE2_EXP_DECL pcre2_code PCRE2_CALL_CONVENTION *pcre2_compile(PCRE2_SPTR, PCRE2_SIZE, uint32_t, int *, PCRE2_SIZE *, pcre2_compile_context *); PCRE2_EXP_DECL void PCRE2_CALL_CONVENTION pcre2_code_free(pcre2_code *); PCRE2_EXP_DECL pcre2_code PCRE2_CALL_CONVENTION *pcre2_code_copy(const pcre2_code *); PCRE2_EXP_DECL pcre2_code PCRE2_CALL_CONVENTION *pcre2_code_copy_with_tables(const pcre2_code *);	PCRE2_COMPILE_FUNCTIONS	PCRE2_EXP_DECL pcre2_code PCRE2_CALL_CONVENTION *pcre2_compile(PCRE2_SPTR, PCRE2_SIZE, uint32_t, int *, PCRE2_SIZE *, pcre2_compile_context *); PCRE2_EXP_DECL void PCRE2_CALL_CONVENTION pcre2_code_free(pcre2_code *); PCRE2_EXP_DECL pcre2_code PCRE2_CALL_CONVENTION *pcre2_code_copy(const pcre2_code *); PCRE2_EXP_DECL pcre2_code PCRE2_CALL_CONVENTION *pcre2_code_copy_with_tables(const pcre2_code *);
#define PCRE2_CONVERT_CONTEXT_FUNCTIONS PCRE2_EXP_DECL pcre2_convert_context PCRE2_CALL_CONVENTION *pcre2_convert_context_copy(pcre2_convert_context *); PCRE2_EXP_DECL pcre2_convert_context PCRE2_CALL_CONVENTION *pcre2_convert_context_create(pcre2_general_context *); PCRE2_EXP_DECL void PCRE2_CALL_CONVENTION pcre2_convert_context_free(pcre2_convert_context *); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_set_glob_escape(pcre2_convert_context *, uint32_t); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_set_glob_separator(pcre2_convert_context *, uint32_t);	PCRE2_CONVERT_CONTEXT_FUNCTIONS	PCRE2_EXP_DECL pcre2_convert_context PCRE2_CALL_CONVENTION *pcre2_convert_context_copy(pcre2_convert_context *); PCRE2_EXP_DECL pcre2_convert_context PCRE2_CALL_CONVENTION *pcre2_convert_context_create(pcre2_general_context *); PCRE2_EXP_DECL void PCRE2_CALL_CONVENTION pcre2_convert_context_free(pcre2_convert_context *); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_set_glob_escape(pcre2_convert_context *, uint32_t); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_set_glob_separator(pcre2_convert_context *, uint32_t);
#define PCRE2_MATCH_CONTEXT_FUNCTIONS PCRE2_EXP_DECL pcre2_match_context PCRE2_CALL_CONVENTION *pcre2_match_context_copy(pcre2_match_context *); PCRE2_EXP_DECL pcre2_match_context PCRE2_CALL_CONVENTION *pcre2_match_context_create(pcre2_general_context *); PCRE2_EXP_DECL void PCRE2_CALL_CONVENTION pcre2_match_context_free(pcre2_match_context *); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_set_callout(pcre2_match_context *, int (*)(pcre2_callout_block *, void *), void *); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_set_depth_limit(pcre2_match_context *, uint32_t); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_set_heap_limit(pcre2_match_context *, uint32_t); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_set_match_limit(pcre2_match_context *, uint32_t); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_set_offset_limit(pcre2_match_context *, PCRE2_SIZE); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_set_recursion_limit(pcre2_match_context *, uint32_t); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_set_recursion_memory_management(pcre2_match_context *, void *(*)(PCRE2_SIZE, void *), void (*)(void *, void *), void *);	PCRE2_MATCH_CONTEXT_FUNCTIONS	PCRE2_EXP_DECL pcre2_match_context PCRE2_CALL_CONVENTION *pcre2_match_context_copy(pcre2_match_context *); PCRE2_EXP_DECL pcre2_match_context PCRE2_CALL_CONVENTION *pcre2_match_context_create(pcre2_general_context *); PCRE2_EXP_DECL void PCRE2_CALL_CONVENTION pcre2_match_context_free(pcre2_match_context *); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_set_callout(pcre2_match_context *, int (*)(pcre2_callout_block *, void *), void *); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_set_depth_limit(pcre2_match_context *, uint32_t); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_set_heap_limit(pcre2_match_context *, uint32_t); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_set_match_limit(pcre2_match_context *, uint32_t); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_set_offset_limit(pcre2_match_context *, PCRE2_SIZE); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_set_recursion_limit(pcre2_match_context *, uint32_t); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_set_recursion_memory_management(pcre2_match_context *, void *(*)(PCRE2_SIZE, void *), void (*)(void *, void *), void *);
#define PCRE2_COMPILE_CONTEXT_FUNCTIONS PCRE2_EXP_DECL pcre2_compile_context PCRE2_CALL_CONVENTION *pcre2_compile_context_copy(pcre2_compile_context *); PCRE2_EXP_DECL pcre2_compile_context PCRE2_CALL_CONVENTION *pcre2_compile_context_create(pcre2_general_context *);PCRE2_EXP_DECL void PCRE2_CALL_CONVENTION pcre2_compile_context_free(pcre2_compile_context *); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_set_bsr(pcre2_compile_context *, uint32_t); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_set_character_tables(pcre2_compile_context *, const unsigned char *); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_set_compile_extra_options(pcre2_compile_context *, uint32_t); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_set_max_pattern_length(pcre2_compile_context *, PCRE2_SIZE); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_set_newline(pcre2_compile_context *, uint32_t); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_set_parens_nest_limit(pcre2_compile_context *, uint32_t); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_set_compile_recursion_guard(pcre2_compile_context *, int (*)(uint32_t, void *), void *);	PCRE2_COMPILE_CONTEXT_FUNCTIONS	PCRE2_EXP_DECL pcre2_compile_context PCRE2_CALL_CONVENTION *pcre2_compile_context_copy(pcre2_compile_context *); PCRE2_EXP_DECL pcre2_compile_context PCRE2_CALL_CONVENTION *pcre2_compile_context_create(pcre2_general_context *);PCRE2_EXP_DECL void PCRE2_CALL_CONVENTION pcre2_compile_context_free(pcre2_compile_context *); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_set_bsr(pcre2_compile_context *, uint32_t); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_set_character_tables(pcre2_compile_context *, const unsigned char *); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_set_compile_extra_options(pcre2_compile_context *, uint32_t); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_set_max_pattern_length(pcre2_compile_context *, PCRE2_SIZE); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_set_newline(pcre2_compile_context *, uint32_t); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_set_parens_nest_limit(pcre2_compile_context *, uint32_t); PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_set_compile_recursion_guard(pcre2_compile_context *, int (*)(uint32_t, void *), void *);
#define PCRE2_GENERAL_CONTEXT_FUNCTIONS PCRE2_EXP_DECL pcre2_general_context PCRE2_CALL_CONVENTION *pcre2_general_context_copy(pcre2_general_context *); PCRE2_EXP_DECL pcre2_general_context PCRE2_CALL_CONVENTION *pcre2_general_context_create(void *(*)(PCRE2_SIZE, void *), void (*)(void *, void *), void *); PCRE2_EXP_DECL void PCRE2_CALL_CONVENTION pcre2_general_context_free(pcre2_general_context *);	PCRE2_GENERAL_CONTEXT_FUNCTIONS	PCRE2_EXP_DECL pcre2_general_context PCRE2_CALL_CONVENTION *pcre2_general_context_copy(pcre2_general_context *); PCRE2_EXP_DECL pcre2_general_context PCRE2_CALL_CONVENTION *pcre2_general_context_create(void *(*)(PCRE2_SIZE, void *), void (*)(void *, void *), void *); PCRE2_EXP_DECL void PCRE2_CALL_CONVENTION pcre2_general_context_free(pcre2_general_context *);
#define PCRE2_GENERAL_INFO_FUNCTIONS PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_config(uint32_t, void *);	PCRE2_GENERAL_INFO_FUNCTIONS	PCRE2_EXP_DECL int PCRE2_CALL_CONVENTION pcre2_config(uint32_t, void *);
#define PCRE2_CALLOUT_BACKTRACK 0x00000002u	PCRE2_CALLOUT_BACKTRACK	0x00000002u
#define PCRE2_CALLOUT_STARTMATCH 0x00000001u	PCRE2_CALLOUT_STARTMATCH	0x00000001u
#define PCRE2_UNSET (~(PCRE2_SIZE)0)	PCRE2_UNSET	(~(PCRE2_SIZE)0)
#define PCRE2_ZERO_TERMINATED (~(PCRE2_SIZE)0)	PCRE2_ZERO_TERMINATED	(~(PCRE2_SIZE)0)
#define PCRE2_SIZE_MAX SIZE_MAX	PCRE2_SIZE_MAX	SIZE_MAX
#define PCRE2_CONFIG_COMPILED_WIDTHS 14	PCRE2_CONFIG_COMPILED_WIDTHS	14
#define PCRE2_CONFIG_NEVER_BACKSLASH_C 13	PCRE2_CONFIG_NEVER_BACKSLASH_C	13
#define PCRE2_CONFIG_HEAPLIMIT 12	PCRE2_CONFIG_HEAPLIMIT	12
#define PCRE2_CONFIG_VERSION 11	PCRE2_CONFIG_VERSION	11
#define PCRE2_CONFIG_UNICODE_VERSION 10	PCRE2_CONFIG_UNICODE_VERSION	10
#define PCRE2_CONFIG_UNICODE 9	PCRE2_CONFIG_UNICODE	9
#define PCRE2_CONFIG_STACKRECURSE 8	PCRE2_CONFIG_STACKRECURSE	8
#define PCRE2_CONFIG_RECURSIONLIMIT 7	PCRE2_CONFIG_RECURSIONLIMIT	7
#define PCRE2_CONFIG_DEPTHLIMIT 7	PCRE2_CONFIG_DEPTHLIMIT	7
#define PCRE2_CONFIG_PARENSLIMIT 6	PCRE2_CONFIG_PARENSLIMIT	6
#define PCRE2_CONFIG_NEWLINE 5	PCRE2_CONFIG_NEWLINE	5
#define PCRE2_CONFIG_MATCHLIMIT 4	PCRE2_CONFIG_MATCHLIMIT	4
#define PCRE2_CONFIG_LINKSIZE 3	PCRE2_CONFIG_LINKSIZE	3
#define PCRE2_CONFIG_JITTARGET 2	PCRE2_CONFIG_JITTARGET	2
#define PCRE2_CONFIG_JIT 1	PCRE2_CONFIG_JIT	1
#define PCRE2_CONFIG_BSR 0	PCRE2_CONFIG_BSR	0
#define PCRE2_INFO_EXTRAOPTIONS 26	PCRE2_INFO_EXTRAOPTIONS	26
#define PCRE2_INFO_HEAPLIMIT 25	PCRE2_INFO_HEAPLIMIT	25
#define PCRE2_INFO_FRAMESIZE 24	PCRE2_INFO_FRAMESIZE	24
#define PCRE2_INFO_HASBACKSLASHC 23	PCRE2_INFO_HASBACKSLASHC	23
#define PCRE2_INFO_SIZE 22	PCRE2_INFO_SIZE	22
#define PCRE2_INFO_RECURSIONLIMIT 21	PCRE2_INFO_RECURSIONLIMIT	21
#define PCRE2_INFO_DEPTHLIMIT 21	PCRE2_INFO_DEPTHLIMIT	21
#define PCRE2_INFO_NEWLINE 20	PCRE2_INFO_NEWLINE	20
#define PCRE2_INFO_NAMETABLE 19	PCRE2_INFO_NAMETABLE	19
#define PCRE2_INFO_NAMEENTRYSIZE 18	PCRE2_INFO_NAMEENTRYSIZE	18
#define PCRE2_INFO_NAMECOUNT 17	PCRE2_INFO_NAMECOUNT	17
#define PCRE2_INFO_MINLENGTH 16	PCRE2_INFO_MINLENGTH	16
#define PCRE2_INFO_MAXLOOKBEHIND 15	PCRE2_INFO_MAXLOOKBEHIND	15
#define PCRE2_INFO_MATCHLIMIT 14	PCRE2_INFO_MATCHLIMIT	14
#define PCRE2_INFO_MATCHEMPTY 13	PCRE2_INFO_MATCHEMPTY	13
#define PCRE2_INFO_LASTCODETYPE 12	PCRE2_INFO_LASTCODETYPE	12
#define PCRE2_INFO_LASTCODEUNIT 11	PCRE2_INFO_LASTCODEUNIT	11
#define PCRE2_INFO_JITSIZE 10	PCRE2_INFO_JITSIZE	10
#define PCRE2_INFO_JCHANGED 9	PCRE2_INFO_JCHANGED	9
#define PCRE2_INFO_HASCRORLF 8	PCRE2_INFO_HASCRORLF	8
#define PCRE2_INFO_FIRSTBITMAP 7	PCRE2_INFO_FIRSTBITMAP	7
#define PCRE2_INFO_FIRSTCODETYPE 6	PCRE2_INFO_FIRSTCODETYPE	6
#define PCRE2_INFO_FIRSTCODEUNIT 5	PCRE2_INFO_FIRSTCODEUNIT	5
#define PCRE2_INFO_CAPTURECOUNT 4	PCRE2_INFO_CAPTURECOUNT	4
#define PCRE2_INFO_BSR 3	PCRE2_INFO_BSR	3
#define PCRE2_INFO_BACKREFMAX 2	PCRE2_INFO_BACKREFMAX	2
#define PCRE2_INFO_ARGOPTIONS 1	PCRE2_INFO_ARGOPTIONS	1
#define PCRE2_INFO_ALLOPTIONS 0	PCRE2_INFO_ALLOPTIONS	0
#define PCRE2_ERROR_INTERNAL_DUPMATCH (-65)	PCRE2_ERROR_INTERNAL_DUPMATCH	(-65)
#define PCRE2_ERROR_CONVERT_SYNTAX (-64)	PCRE2_ERROR_CONVERT_SYNTAX	(-64)
#define PCRE2_ERROR_HEAPLIMIT (-63)	PCRE2_ERROR_HEAPLIMIT	(-63)
#define PCRE2_ERROR_BADSERIALIZEDDATA (-62)	PCRE2_ERROR_BADSERIALIZEDDATA	(-62)
#define PCRE2_ERROR_TOOMANYREPLACE (-61)	PCRE2_ERROR_TOOMANYREPLACE	(-61)
#define PCRE2_ERROR_BADSUBSPATTERN (-60)	PCRE2_ERROR_BADSUBSPATTERN	(-60)
#define PCRE2_ERROR_BADSUBSTITUTION (-59)	PCRE2_ERROR_BADSUBSTITUTION	(-59)
#define PCRE2_ERROR_REPMISSINGBRACE (-58)	PCRE2_ERROR_REPMISSINGBRACE	(-58)
#define PCRE2_ERROR_BADREPESCAPE (-57)	PCRE2_ERROR_BADREPESCAPE	(-57)
#define PCRE2_ERROR_BADOFFSETLIMIT (-56)	PCRE2_ERROR_BADOFFSETLIMIT	(-56)
#define PCRE2_ERROR_UNSET (-55)	PCRE2_ERROR_UNSET	(-55)
#define PCRE2_ERROR_UNAVAILABLE (-54)	PCRE2_ERROR_UNAVAILABLE	(-54)
#define PCRE2_ERROR_RECURSIONLIMIT (-53)	PCRE2_ERROR_RECURSIONLIMIT	(-53)
#define PCRE2_ERROR_DEPTHLIMIT (-53)	PCRE2_ERROR_DEPTHLIMIT	(-53)
#define PCRE2_ERROR_RECURSELOOP (-52)	PCRE2_ERROR_RECURSELOOP	(-52)
#define PCRE2_ERROR_NULL (-51)	PCRE2_ERROR_NULL	(-51)
#define PCRE2_ERROR_NOUNIQUESUBSTRING (-50)	PCRE2_ERROR_NOUNIQUESUBSTRING	(-50)
#define PCRE2_ERROR_NOSUBSTRING (-49)	PCRE2_ERROR_NOSUBSTRING	(-49)
#define PCRE2_ERROR_NOMEMORY (-48)	PCRE2_ERROR_NOMEMORY	(-48)
#define PCRE2_ERROR_MATCHLIMIT (-47)	PCRE2_ERROR_MATCHLIMIT	(-47)
#define PCRE2_ERROR_JIT_STACKLIMIT (-46)	PCRE2_ERROR_JIT_STACKLIMIT	(-46)
#define PCRE2_ERROR_JIT_BADOPTION (-45)	PCRE2_ERROR_JIT_BADOPTION	(-45)
#define PCRE2_ERROR_INTERNAL (-44)	PCRE2_ERROR_INTERNAL	(-44)
#define PCRE2_ERROR_DFA_WSSIZE (-43)	PCRE2_ERROR_DFA_WSSIZE	(-43)
#define PCRE2_ERROR_DFA_UITEM (-42)	PCRE2_ERROR_DFA_UITEM	(-42)
#define PCRE2_ERROR_DFA_UFUNC (-41)	PCRE2_ERROR_DFA_UFUNC	(-41)
#define PCRE2_ERROR_DFA_UCOND (-40)	PCRE2_ERROR_DFA_UCOND	(-40)
#define PCRE2_ERROR_DFA_RECURSE (-39)	PCRE2_ERROR_DFA_RECURSE	(-39)
#define PCRE2_ERROR_DFA_BADRESTART (-38)	PCRE2_ERROR_DFA_BADRESTART	(-38)
#define PCRE2_ERROR_CALLOUT (-37)	PCRE2_ERROR_CALLOUT	(-37)
#define PCRE2_ERROR_BADUTFOFFSET (-36)	PCRE2_ERROR_BADUTFOFFSET	(-36)
#define PCRE2_ERROR_BADREPLACEMENT (-35)	PCRE2_ERROR_BADREPLACEMENT	(-35)
#define PCRE2_ERROR_BADOPTION (-34)	PCRE2_ERROR_BADOPTION	(-34)
#define PCRE2_ERROR_BADOFFSET (-33)	PCRE2_ERROR_BADOFFSET	(-33)
#define PCRE2_ERROR_BADMODE (-32)	PCRE2_ERROR_BADMODE	(-32)
#define PCRE2_ERROR_BADMAGIC (-31)	PCRE2_ERROR_BADMAGIC	(-31)
#define PCRE2_ERROR_MIXEDTABLES (-30)	PCRE2_ERROR_MIXEDTABLES	(-30)
#define PCRE2_ERROR_BADDATA (-29)	PCRE2_ERROR_BADDATA	(-29)
#define PCRE2_ERROR_UTF32_ERR2 (-28)	PCRE2_ERROR_UTF32_ERR2	(-28)
#define PCRE2_ERROR_UTF32_ERR1 (-27)	PCRE2_ERROR_UTF32_ERR1	(-27)
#define PCRE2_ERROR_UTF16_ERR3 (-26)	PCRE2_ERROR_UTF16_ERR3	(-26)
#define PCRE2_ERROR_UTF16_ERR2 (-25)	PCRE2_ERROR_UTF16_ERR2	(-25)
#define PCRE2_ERROR_UTF16_ERR1 (-24)	PCRE2_ERROR_UTF16_ERR1	(-24)
#define PCRE2_ERROR_UTF8_ERR21 (-23)	PCRE2_ERROR_UTF8_ERR21	(-23)
#define PCRE2_ERROR_UTF8_ERR20 (-22)	PCRE2_ERROR_UTF8_ERR20	(-22)
#define PCRE2_ERROR_UTF8_ERR19 (-21)	PCRE2_ERROR_UTF8_ERR19	(-21)
#define PCRE2_ERROR_UTF8_ERR18 (-20)	PCRE2_ERROR_UTF8_ERR18	(-20)
#define PCRE2_ERROR_UTF8_ERR17 (-19)	PCRE2_ERROR_UTF8_ERR17	(-19)
#define PCRE2_ERROR_UTF8_ERR16 (-18)	PCRE2_ERROR_UTF8_ERR16	(-18)
#define PCRE2_ERROR_UTF8_ERR15 (-17)	PCRE2_ERROR_UTF8_ERR15	(-17)
#define PCRE2_ERROR_UTF8_ERR14 (-16)	PCRE2_ERROR_UTF8_ERR14	(-16)
#define PCRE2_ERROR_UTF8_ERR13 (-15)	PCRE2_ERROR_UTF8_ERR13	(-15)
#define PCRE2_ERROR_UTF8_ERR12 (-14)	PCRE2_ERROR_UTF8_ERR12	(-14)
#define PCRE2_ERROR_UTF8_ERR11 (-13)	PCRE2_ERROR_UTF8_ERR11	(-13)
#define PCRE2_ERROR_UTF8_ERR10 (-12)	PCRE2_ERROR_UTF8_ERR10	(-12)
#define PCRE2_ERROR_UTF8_ERR9 (-11)	PCRE2_ERROR_UTF8_ERR9	(-11)
#define PCRE2_ERROR_UTF8_ERR8 (-10)	PCRE2_ERROR_UTF8_ERR8	(-10)
#define PCRE2_ERROR_UTF8_ERR7 (-9)	PCRE2_ERROR_UTF8_ERR7	(-9)
#define PCRE2_ERROR_UTF8_ERR6 (-8)	PCRE2_ERROR_UTF8_ERR6	(-8)
#define PCRE2_ERROR_UTF8_ERR5 (-7)	PCRE2_ERROR_UTF8_ERR5	(-7)
#define PCRE2_ERROR_UTF8_ERR4 (-6)	PCRE2_ERROR_UTF8_ERR4	(-6)
#define PCRE2_ERROR_UTF8_ERR3 (-5)	PCRE2_ERROR_UTF8_ERR3	(-5)
#define PCRE2_ERROR_UTF8_ERR2 (-4)	PCRE2_ERROR_UTF8_ERR2	(-4)
#define PCRE2_ERROR_UTF8_ERR1 (-3)	PCRE2_ERROR_UTF8_ERR1	(-3)
#define PCRE2_ERROR_PARTIAL (-2)	PCRE2_ERROR_PARTIAL	(-2)
#define PCRE2_ERROR_NOMATCH (-1)	PCRE2_ERROR_NOMATCH	(-1)
#define PCRE2_ERROR_INVALID_HYPHEN_IN_OPTIONS 194	PCRE2_ERROR_INVALID_HYPHEN_IN_OPTIONS	194
#define PCRE2_ERROR_SUPPORTED_ONLY_IN_UNICODE 193	PCRE2_ERROR_SUPPORTED_ONLY_IN_UNICODE	193
#define PCRE2_ERROR_BAD_LITERAL_OPTIONS 192	PCRE2_ERROR_BAD_LITERAL_OPTIONS	192
#define PCRE2_ERROR_NO_SURROGATES_IN_UTF16 191	PCRE2_ERROR_NO_SURROGATES_IN_UTF16	191
#define PCRE2_ERROR_INTERNAL_BAD_CODE_IN_SKIP 190	PCRE2_ERROR_INTERNAL_BAD_CODE_IN_SKIP	190
#define PCRE2_ERROR_INTERNAL_BAD_CODE 189	PCRE2_ERROR_INTERNAL_BAD_CODE	189
#define PCRE2_ERROR_PATTERN_STRING_TOO_LONG 188	PCRE2_ERROR_PATTERN_STRING_TOO_LONG	188
#define PCRE2_ERROR_LOOKBEHIND_TOO_LONG 187	PCRE2_ERROR_LOOKBEHIND_TOO_LONG	187
#define PCRE2_ERROR_PATTERN_TOO_COMPLICATED 186	PCRE2_ERROR_PATTERN_TOO_COMPLICATED	186
#define PCRE2_ERROR_BACKSLASH_C_LIBRARY_DISABLED 185	PCRE2_ERROR_BACKSLASH_C_LIBRARY_DISABLED	185
#define PCRE2_ERROR_QUERY_BARJX_NEST_TOO_DEEP 184	PCRE2_ERROR_QUERY_BARJX_NEST_TOO_DEEP	184
#define PCRE2_ERROR_BACKSLASH_C_CALLER_DISABLED 183	PCRE2_ERROR_BACKSLASH_C_CALLER_DISABLED	183
#define PCRE2_ERROR_CALLOUT_BAD_STRING_DELIMITER 182	PCRE2_ERROR_CALLOUT_BAD_STRING_DELIMITER	182
#define PCRE2_ERROR_CALLOUT_NO_STRING_DELIMITER 181	PCRE2_ERROR_CALLOUT_NO_STRING_DELIMITER	181
#define PCRE2_ERROR_INTERNAL_BAD_CODE_AUTO_POSSESS 180	PCRE2_ERROR_INTERNAL_BAD_CODE_AUTO_POSSESS	180
#define PCRE2_ERROR_VERSION_CONDITION_SYNTAX 179	PCRE2_ERROR_VERSION_CONDITION_SYNTAX	179
#define PCRE2_ERROR_MISSING_OCTAL_OR_HEX_DIGITS 178	PCRE2_ERROR_MISSING_OCTAL_OR_HEX_DIGITS	178
#define PCRE2_ERROR_BACKSLASH_U_CODE_POINT_TOO_BIG 177	PCRE2_ERROR_BACKSLASH_U_CODE_POINT_TOO_BIG	177
#define PCRE2_ERROR_VERB_NAME_TOO_LONG 176	PCRE2_ERROR_VERB_NAME_TOO_LONG	176
#define PCRE2_ERROR_UCP_IS_DISABLED 175	PCRE2_ERROR_UCP_IS_DISABLED	175
#define PCRE2_ERROR_UTF_IS_DISABLED 174	PCRE2_ERROR_UTF_IS_DISABLED	174
#define PCRE2_ERROR_UNICODE_DISALLOWED_CODE_POINT 173	PCRE2_ERROR_UNICODE_DISALLOWED_CODE_POINT	173
#define PCRE2_ERROR_CALLOUT_STRING_TOO_LONG 172	PCRE2_ERROR_CALLOUT_STRING_TOO_LONG	172
#define PCRE2_ERROR_BACKSLASH_N_IN_CLASS 171	PCRE2_ERROR_BACKSLASH_N_IN_CLASS	171
#define PCRE2_ERROR_INTERNAL_BAD_CODE_LOOKBEHINDS 170	PCRE2_ERROR_INTERNAL_BAD_CODE_LOOKBEHINDS	170
#define PCRE2_ERROR_BACKSLASH_K_SYNTAX 169	PCRE2_ERROR_BACKSLASH_K_SYNTAX	169
#define PCRE2_ERROR_BACKSLASH_C_SYNTAX 168	PCRE2_ERROR_BACKSLASH_C_SYNTAX	168
#define PCRE2_ERROR_INVALID_HEXADECIMAL 167	PCRE2_ERROR_INVALID_HEXADECIMAL	167
#define PCRE2_ERROR_MARK_MISSING_ARGUMENT 166	PCRE2_ERROR_MARK_MISSING_ARGUMENT	166
#define PCRE2_ERROR_SUBPATTERN_NAMES_MISMATCH 165	PCRE2_ERROR_SUBPATTERN_NAMES_MISMATCH	165
#define PCRE2_ERROR_INVALID_OCTAL 164	PCRE2_ERROR_INVALID_OCTAL	164
#define PCRE2_ERROR_INTERNAL_PARSED_OVERFLOW 163	PCRE2_ERROR_INTERNAL_PARSED_OVERFLOW	163
#define PCRE2_ERROR_SUBPATTERN_NAME_EXPECTED 162	PCRE2_ERROR_SUBPATTERN_NAME_EXPECTED	162
#define PCRE2_ERROR_SUBPATTERN_NUMBER_TOO_BIG 161	PCRE2_ERROR_SUBPATTERN_NUMBER_TOO_BIG	161
#define PCRE2_ERROR_VERB_UNKNOWN 160	PCRE2_ERROR_VERB_UNKNOWN	160
#define PCRE2_ERROR_VERB_ARGUMENT_NOT_ALLOWED 159	PCRE2_ERROR_VERB_ARGUMENT_NOT_ALLOWED	159
#define PCRE2_ERROR_PARENS_QUERY_R_MISSING_CLOSING 158	PCRE2_ERROR_PARENS_QUERY_R_MISSING_CLOSING	158
#define PCRE2_ERROR_BACKSLASH_G_SYNTAX 157	PCRE2_ERROR_BACKSLASH_G_SYNTAX	157
#define PCRE2_ERROR_INTERNAL_UNKNOWN_NEWLINE 156	PCRE2_ERROR_INTERNAL_UNKNOWN_NEWLINE	156
#define PCRE2_ERROR_BACKSLASH_O_MISSING_BRACE 155	PCRE2_ERROR_BACKSLASH_O_MISSING_BRACE	155
#define PCRE2_ERROR_DEFINE_TOO_MANY_BRANCHES 154	PCRE2_ERROR_DEFINE_TOO_MANY_BRANCHES	154
#define PCRE2_ERROR_INTERNAL_MISSING_SUBPATTERN 153	PCRE2_ERROR_INTERNAL_MISSING_SUBPATTERN	153
#define PCRE2_ERROR_INTERNAL_OVERRAN_WORKSPACE 152	PCRE2_ERROR_INTERNAL_OVERRAN_WORKSPACE	152
#define PCRE2_ERROR_OCTAL_BYTE_TOO_BIG 151	PCRE2_ERROR_OCTAL_BYTE_TOO_BIG	151
#define PCRE2_ERROR_CLASS_INVALID_RANGE 150	PCRE2_ERROR_CLASS_INVALID_RANGE	150
#define PCRE2_ERROR_TOO_MANY_NAMED_SUBPATTERNS 149	PCRE2_ERROR_TOO_MANY_NAMED_SUBPATTERNS	149
#define PCRE2_ERROR_SUBPATTERN_NAME_TOO_LONG 148	PCRE2_ERROR_SUBPATTERN_NAME_TOO_LONG	148
#define PCRE2_ERROR_UNKNOWN_UNICODE_PROPERTY 147	PCRE2_ERROR_UNKNOWN_UNICODE_PROPERTY	147
#define PCRE2_ERROR_MALFORMED_UNICODE_PROPERTY 146	PCRE2_ERROR_MALFORMED_UNICODE_PROPERTY	146
#define PCRE2_ERROR_UNICODE_PROPERTIES_UNAVAILABLE 145	PCRE2_ERROR_UNICODE_PROPERTIES_UNAVAILABLE	145
#define PCRE2_ERROR_INVALID_SUBPATTERN_NAME 144	PCRE2_ERROR_INVALID_SUBPATTERN_NAME	144
#define PCRE2_ERROR_DUPLICATE_SUBPATTERN_NAME 143	PCRE2_ERROR_DUPLICATE_SUBPATTERN_NAME	143
#define PCRE2_ERROR_MISSING_NAME_TERMINATOR 142	PCRE2_ERROR_MISSING_NAME_TERMINATOR	142
#define PCRE2_ERROR_UNRECOGNIZED_AFTER_QUERY_P 141	PCRE2_ERROR_UNRECOGNIZED_AFTER_QUERY_P	141
#define PCRE2_ERROR_ESCAPE_INVALID_IN_VERB 140	PCRE2_ERROR_ESCAPE_INVALID_IN_VERB	140
#define PCRE2_ERROR_MISSING_CALLOUT_CLOSING 139	PCRE2_ERROR_MISSING_CALLOUT_CLOSING	139
#define PCRE2_ERROR_CALLOUT_NUMBER_TOO_BIG 138	PCRE2_ERROR_CALLOUT_NUMBER_TOO_BIG	138
#define PCRE2_ERROR_UNSUPPORTED_ESCAPE_SEQUENCE 137	PCRE2_ERROR_UNSUPPORTED_ESCAPE_SEQUENCE	137
#define PCRE2_ERROR_LOOKBEHIND_INVALID_BACKSLASH_C 136	PCRE2_ERROR_LOOKBEHIND_INVALID_BACKSLASH_C	136
#define PCRE2_ERROR_LOOKBEHIND_TOO_COMPLICATED 135	PCRE2_ERROR_LOOKBEHIND_TOO_COMPLICATED	135
#define PCRE2_ERROR_CODE_POINT_TOO_BIG 134	PCRE2_ERROR_CODE_POINT_TOO_BIG	134
#define PCRE2_ERROR_PARENTHESES_STACK_CHECK 133	PCRE2_ERROR_PARENTHESES_STACK_CHECK	133
#define PCRE2_ERROR_UNICODE_NOT_SUPPORTED 132	PCRE2_ERROR_UNICODE_NOT_SUPPORTED	132
#define PCRE2_ERROR_INTERNAL_STUDY_ERROR 131	PCRE2_ERROR_INTERNAL_STUDY_ERROR	131
#define PCRE2_ERROR_UNKNOWN_POSIX_CLASS 130	PCRE2_ERROR_UNKNOWN_POSIX_CLASS	130
#define PCRE2_ERROR_BAD_RELATIVE_REFERENCE 129	PCRE2_ERROR_BAD_RELATIVE_REFERENCE	129
#define PCRE2_ERROR_CONDITION_ASSERTION_EXPECTED 128	PCRE2_ERROR_CONDITION_ASSERTION_EXPECTED	128
#define PCRE2_ERROR_TOO_MANY_CONDITION_BRANCHES 127	PCRE2_ERROR_TOO_MANY_CONDITION_BRANCHES	127
#define PCRE2_ERROR_ZERO_RELATIVE_REFERENCE 126	PCRE2_ERROR_ZERO_RELATIVE_REFERENCE	126
#define PCRE2_ERROR_LOOKBEHIND_NOT_FIXED_LENGTH 125	PCRE2_ERROR_LOOKBEHIND_NOT_FIXED_LENGTH	125
#define PCRE2_ERROR_MISSING_CONDITION_CLOSING 124	PCRE2_ERROR_MISSING_CONDITION_CLOSING	124
#define PCRE2_ERROR_INTERNAL_CODE_OVERFLOW 123	PCRE2_ERROR_INTERNAL_CODE_OVERFLOW	123
#define PCRE2_ERROR_UNMATCHED_CLOSING_PARENTHESIS 122	PCRE2_ERROR_UNMATCHED_CLOSING_PARENTHESIS	122
#define PCRE2_ERROR_HEAP_FAILED 121	PCRE2_ERROR_HEAP_FAILED	121
#define PCRE2_ERROR_PATTERN_TOO_LARGE 120	PCRE2_ERROR_PATTERN_TOO_LARGE	120
#define PCRE2_ERROR_PARENTHESES_NEST_TOO_DEEP 119	PCRE2_ERROR_PARENTHESES_NEST_TOO_DEEP	119
#define PCRE2_ERROR_MISSING_COMMENT_CLOSING 118	PCRE2_ERROR_MISSING_COMMENT_CLOSING	118
#define PCRE2_ERROR_BAD_OPTIONS 117	PCRE2_ERROR_BAD_OPTIONS	117
#define PCRE2_ERROR_NULL_PATTERN 116	PCRE2_ERROR_NULL_PATTERN	116
#define PCRE2_ERROR_BAD_SUBPATTERN_REFERENCE 115	PCRE2_ERROR_BAD_SUBPATTERN_REFERENCE	115
#define PCRE2_ERROR_MISSING_CLOSING_PARENTHESIS 114	PCRE2_ERROR_MISSING_CLOSING_PARENTHESIS	114
#define PCRE2_ERROR_POSIX_NO_SUPPORT_COLLATING 113	PCRE2_ERROR_POSIX_NO_SUPPORT_COLLATING	113
#define PCRE2_ERROR_POSIX_CLASS_NOT_IN_CLASS 112	PCRE2_ERROR_POSIX_CLASS_NOT_IN_CLASS	112
#define PCRE2_ERROR_INVALID_AFTER_PARENS_QUERY 111	PCRE2_ERROR_INVALID_AFTER_PARENS_QUERY	111
#define PCRE2_ERROR_INTERNAL_UNEXPECTED_REPEAT 110	PCRE2_ERROR_INTERNAL_UNEXPECTED_REPEAT	110
#define PCRE2_ERROR_QUANTIFIER_INVALID 109	PCRE2_ERROR_QUANTIFIER_INVALID	109
#define PCRE2_ERROR_CLASS_RANGE_ORDER 108	PCRE2_ERROR_CLASS_RANGE_ORDER	108
#define PCRE2_ERROR_ESCAPE_INVALID_IN_CLASS 107	PCRE2_ERROR_ESCAPE_INVALID_IN_CLASS	107
#define PCRE2_ERROR_MISSING_SQUARE_BRACKET 106	PCRE2_ERROR_MISSING_SQUARE_BRACKET	106
#define PCRE2_ERROR_QUANTIFIER_TOO_BIG 105	PCRE2_ERROR_QUANTIFIER_TOO_BIG	105
#define PCRE2_ERROR_QUANTIFIER_OUT_OF_ORDER 104	PCRE2_ERROR_QUANTIFIER_OUT_OF_ORDER	104
#define PCRE2_ERROR_UNKNOWN_ESCAPE 103	PCRE2_ERROR_UNKNOWN_ESCAPE	103
#define PCRE2_ERROR_END_BACKSLASH_C 102	PCRE2_ERROR_END_BACKSLASH_C	102
#define PCRE2_ERROR_END_BACKSLASH 101	PCRE2_ERROR_END_BACKSLASH	101
#define PCRE2_BSR_ANYCRLF 2	PCRE2_BSR_ANYCRLF	2
#define PCRE2_BSR_UNICODE 1	PCRE2_BSR_UNICODE	1
#define PCRE2_NEWLINE_NUL 6	PCRE2_NEWLINE_NUL	6
#define PCRE2_NEWLINE_ANYCRLF 5	PCRE2_NEWLINE_ANYCRLF	5
#define PCRE2_NEWLINE_ANY 4	PCRE2_NEWLINE_ANY	4
#define PCRE2_NEWLINE_CRLF 3	PCRE2_NEWLINE_CRLF	3
#define PCRE2_NEWLINE_LF 2	PCRE2_NEWLINE_LF	2
#define PCRE2_NEWLINE_CR 1	PCRE2_NEWLINE_CR	1
#define PCRE2_CONVERT_GLOB_NO_STARSTAR 0x00000050u	PCRE2_CONVERT_GLOB_NO_STARSTAR	0x00000050u
#define PCRE2_CONVERT_GLOB_NO_WILD_SEPARATOR 0x00000030u	PCRE2_CONVERT_GLOB_NO_WILD_SEPARATOR	0x00000030u
#define PCRE2_CONVERT_GLOB 0x00000010u	PCRE2_CONVERT_GLOB	0x00000010u
#define PCRE2_CONVERT_POSIX_EXTENDED 0x00000008u	PCRE2_CONVERT_POSIX_EXTENDED	0x00000008u
#define PCRE2_CONVERT_POSIX_BASIC 0x00000004u	PCRE2_CONVERT_POSIX_BASIC	0x00000004u
#define PCRE2_CONVERT_NO_UTF_CHECK 0x00000002u	PCRE2_CONVERT_NO_UTF_CHECK	0x00000002u
#define PCRE2_CONVERT_UTF 0x00000001u	PCRE2_CONVERT_UTF	0x00000001u
#define PCRE2_NO_JIT 0x00002000u	PCRE2_NO_JIT	0x00002000u
#define PCRE2_SUBSTITUTE_OVERFLOW_LENGTH 0x00001000u	PCRE2_SUBSTITUTE_OVERFLOW_LENGTH	0x00001000u
#define PCRE2_SUBSTITUTE_UNKNOWN_UNSET 0x00000800u	PCRE2_SUBSTITUTE_UNKNOWN_UNSET	0x00000800u
#define PCRE2_SUBSTITUTE_UNSET_EMPTY 0x00000400u	PCRE2_SUBSTITUTE_UNSET_EMPTY	0x00000400u
#define PCRE2_SUBSTITUTE_EXTENDED 0x00000200u	PCRE2_SUBSTITUTE_EXTENDED	0x00000200u
#define PCRE2_SUBSTITUTE_GLOBAL 0x00000100u	PCRE2_SUBSTITUTE_GLOBAL	0x00000100u
#define PCRE2_DFA_SHORTEST 0x00000080u	PCRE2_DFA_SHORTEST	0x00000080u
#define PCRE2_DFA_RESTART 0x00000040u	PCRE2_DFA_RESTART	0x00000040u
#define PCRE2_PARTIAL_HARD 0x00000020u	PCRE2_PARTIAL_HARD	0x00000020u
#define PCRE2_PARTIAL_SOFT 0x00000010u	PCRE2_PARTIAL_SOFT	0x00000010u
#define PCRE2_NOTEMPTY_ATSTART 0x00000008u	PCRE2_NOTEMPTY_ATSTART	0x00000008u
#define PCRE2_NOTEMPTY 0x00000004u	PCRE2_NOTEMPTY	0x00000004u
#define PCRE2_NOTEOL 0x00000002u	PCRE2_NOTEOL	0x00000002u
#define PCRE2_NOTBOL 0x00000001u	PCRE2_NOTBOL	0x00000001u
#define PCRE2_JIT_PARTIAL_HARD 0x00000004u	PCRE2_JIT_PARTIAL_HARD	0x00000004u
#define PCRE2_JIT_PARTIAL_SOFT 0x00000002u	PCRE2_JIT_PARTIAL_SOFT	0x00000002u
#define PCRE2_JIT_COMPLETE 0x00000001u	PCRE2_JIT_COMPLETE	0x00000001u
#define PCRE2_EXTRA_MATCH_LINE 0x00000008u	PCRE2_EXTRA_MATCH_LINE	0x00000008u
#define PCRE2_EXTRA_MATCH_WORD 0x00000004u	PCRE2_EXTRA_MATCH_WORD	0x00000004u
#define PCRE2_EXTRA_BAD_ESCAPE_IS_LITERAL 0x00000002u	PCRE2_EXTRA_BAD_ESCAPE_IS_LITERAL	0x00000002u
#define PCRE2_EXTRA_ALLOW_SURROGATE_ESCAPES 0x00000001u	PCRE2_EXTRA_ALLOW_SURROGATE_ESCAPES	0x00000001u
#define PCRE2_LITERAL 0x02000000u	PCRE2_LITERAL	0x02000000u
#define PCRE2_EXTENDED_MORE 0x01000000u	PCRE2_EXTENDED_MORE	0x01000000u
#define PCRE2_USE_OFFSET_LIMIT 0x00800000u	PCRE2_USE_OFFSET_LIMIT	0x00800000u
#define PCRE2_ALT_VERBNAMES 0x00400000u	PCRE2_ALT_VERBNAMES	0x00400000u
#define PCRE2_ALT_CIRCUMFLEX 0x00200000u	PCRE2_ALT_CIRCUMFLEX	0x00200000u
#define PCRE2_NEVER_BACKSLASH_C 0x00100000u	PCRE2_NEVER_BACKSLASH_C	0x00100000u
#define PCRE2_UTF 0x00080000u	PCRE2_UTF	0x00080000u
#define PCRE2_UNGREEDY 0x00040000u	PCRE2_UNGREEDY	0x00040000u
#define PCRE2_UCP 0x00020000u	PCRE2_UCP	0x00020000u
#define PCRE2_NO_START_OPTIMIZE 0x00010000u	PCRE2_NO_START_OPTIMIZE	0x00010000u
#define PCRE2_NO_DOTSTAR_ANCHOR 0x00008000u	PCRE2_NO_DOTSTAR_ANCHOR	0x00008000u
#define PCRE2_NO_AUTO_POSSESS 0x00004000u	PCRE2_NO_AUTO_POSSESS	0x00004000u
#define PCRE2_NO_AUTO_CAPTURE 0x00002000u	PCRE2_NO_AUTO_CAPTURE	0x00002000u
#define PCRE2_NEVER_UTF 0x00001000u	PCRE2_NEVER_UTF	0x00001000u
#define PCRE2_NEVER_UCP 0x00000800u	PCRE2_NEVER_UCP	0x00000800u
#define PCRE2_MULTILINE 0x00000400u	PCRE2_MULTILINE	0x00000400u
#define PCRE2_MATCH_UNSET_BACKREF 0x00000200u	PCRE2_MATCH_UNSET_BACKREF	0x00000200u
#define PCRE2_FIRSTLINE 0x00000100u	PCRE2_FIRSTLINE	0x00000100u
#define PCRE2_EXTENDED 0x00000080u	PCRE2_EXTENDED	0x00000080u
#define PCRE2_DUPNAMES 0x00000040u	PCRE2_DUPNAMES	0x00000040u
#define PCRE2_DOTALL 0x00000020u	PCRE2_DOTALL	0x00000020u
#define PCRE2_DOLLAR_ENDONLY 0x00000010u	PCRE2_DOLLAR_ENDONLY	0x00000010u
#define PCRE2_CASELESS 0x00000008u	PCRE2_CASELESS	0x00000008u
#define PCRE2_AUTO_CALLOUT 0x00000004u	PCRE2_AUTO_CALLOUT	0x00000004u
#define PCRE2_ALT_BSUX 0x00000002u	PCRE2_ALT_BSUX	0x00000002u
#define PCRE2_ALLOW_EMPTY_CLASS 0x00000001u	PCRE2_ALLOW_EMPTY_CLASS	0x00000001u
#define PCRE2_ENDANCHORED 0x20000000u	PCRE2_ENDANCHORED	0x20000000u
#define PCRE2_NO_UTF_CHECK 0x40000000u	PCRE2_NO_UTF_CHECK	0x40000000u
#define PCRE2_ANCHORED 0x80000000u	PCRE2_ANCHORED	0x80000000u
#define PCRE2_CALL_CONVENTION	PCRE2_CALL_CONVENTION	
"#define PCRE2_EXP_DECL extern ""C"""	PCRE2_EXP_DECL	"extern ""C"""
#define PCRE2_HAVE_INTTYPES_H 1	PCRE2_HAVE_INTTYPES_H	1
#define PCRE2_HAVE_STDINT_H 1	PCRE2_HAVE_STDINT_H	1
#define PCRE2_DATE 2018-09-10	PCRE2_DATE	2018-09-10
#define PCRE2_PRERELEASE	PCRE2_PRERELEASE	
#define PCRE2_MINOR 32	PCRE2_MINOR	32
#define PCRE2_MAJOR 10	PCRE2_MAJOR	10
#define PCRE2_H_IDEMPOTENT_GUARD	PCRE2_H_IDEMPOTENT_GUARD	
#ifndef PCRE2_H_IDEMPOTENT_GUARD	PCRE2_H_IDEMPOTENT_GUARD	
#if defined(_WIN32) && !defined(PCRE2_STATIC)	defined(_WIN32) && !defined(PCRE2_STATIC)	
#ifndef PCRE2_EXP_DECL	PCRE2_EXP_DECL	
#ifndef PCRE2_EXP_DECL	PCRE2_EXP_DECL	
#ifdef __cplusplus	__cplusplus	
#ifndef PCRE2_CALL_CONVENTION	PCRE2_CALL_CONVENTION	
#if PCRE2_HAVE_STDINT_H	PCRE2_HAVE_STDINT_H	
#elif PCRE2_HAVE_INTTYPES_H	PCRE2_HAVE_INTTYPES_H	
#ifdef __cplusplus	__cplusplus	
#ifndef PCRE2_CODE_UNIT_WIDTH	PCRE2_CODE_UNIT_WIDTH	
#if PCRE2_CODE_UNIT_WIDTH == 8 || \	PCRE2_CODE_UNIT_WIDTH == 8 || \	
#elif PCRE2_CODE_UNIT_WIDTH == 0	PCRE2_CODE_UNIT_WIDTH == 0	
#ifdef __cplusplus	__cplusplus	
#define PCRE2_CODE_UNIT_WIDTH WCHAR_T_BITS	PCRE2_CODE_UNIT_WIDTH	WCHAR_T_BITS
"#include ""expand.h"""	"""expand.h"""	
"#include ""complete.h"""	"""complete.h"""	
"#include ""common.h"""	"""common.h"""	
#include <vector>	<vector>	
#define FISH_WILDCARD_H	FISH_WILDCARD_H	
#ifndef FISH_WILDCARD_H	FISH_WILDCARD_H	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wildcard.h"""	"""wildcard.h"""	
"#include ""wgetopt.h"""	"""wgetopt.h"""	
"#include ""wcstringutil.h"""	"""wcstringutil.h"""	
"#include ""pcre2.h"""	"""pcre2.h"""	
"#include ""parse_util.h"""	"""parse_util.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""future_feature_flags.h"""	"""future_feature_flags.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
#include <vector>	<vector>	
#include <utility>	<utility>	
#include <unordered_map>	<unordered_map>	
#include <string>	<string>	
#include <memory>	<memory>	
#include <iterator>	<iterator>	
#include <cwctype>	<cwctype>	
#include <cwchar>	<cwchar>	
#include <cstdlib>	<cstdlib>	
#include <cstdint>	<cstdint>	
#include <cstddef>	<cstddef>	
#include <cstdarg>	<cstdarg>	
#include <climits>	<climits>	
#include <cerrno>	<cerrno>	
#include <algorithm>	<algorithm>	
"#include ""config.h"""	"""config.h"""	
#define STRING_CHUNK_SIZE 128	STRING_CHUNK_SIZE	128
#ifdef _WIN32	_WIN32	
#if PCRE2_CODE_UNIT_WIDTH < 32	PCRE2_CODE_UNIT_WIDTH < 32	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""common.h"""	"""common.h"""	
#include <utility>	<utility>	
#include <type_traits>	<type_traits>	
#include <string>	<string>	
#include <memory>	<memory>	
#include <cwctype>	<cwctype>	
#include <cwchar>	<cwchar>	
#include <cstring>	<cstring>	
#include <cstdarg>	<cstdarg>	
#include <cmath>	<cmath>	
#include <cerrno>	<cerrno>	
#include <unistd.h>	<unistd.h>	
#include <sys/types.h>	<sys/types.h>	
#include <sys/stat.h>	<sys/stat.h>	
"#include ""builtin.h"""	"""builtin.h"""	
"#include ""config.h"""	"""config.h"""	
#ifdef S_ISVTX	S_ISVTX	
#include <bits/types/struct_timeval.h>	<bits/types/struct_timeval.h>	
#include <bits/types.h>	<bits/types.h>	
#define __rusage_defined 1	__rusage_defined	1
#ifndef __rusage_defined	__rusage_defined	
#include <bits/types/struct_rusage.h>	<bits/types/struct_rusage.h>	
#include <bits/types/struct_timeval.h>	<bits/types/struct_timeval.h>	
#include <bits/types.h>	<bits/types.h>	
#define PRIO_USER PRIO_USER	PRIO_USER	PRIO_USER
#define PRIO_PGRP PRIO_PGRP	PRIO_PGRP	PRIO_PGRP
#define PRIO_PROCESS PRIO_PROCESS	PRIO_PROCESS	PRIO_PROCESS
#define PRIO_MAX 20	PRIO_MAX	20
#define PRIO_MIN -20	PRIO_MIN	-20
#define RUSAGE_LWP RUSAGE_THREAD	RUSAGE_LWP	RUSAGE_THREAD
#define RUSAGE_THREAD RUSAGE_THREAD	RUSAGE_THREAD	RUSAGE_THREAD
#define RUSAGE_CHILDREN RUSAGE_CHILDREN	RUSAGE_CHILDREN	RUSAGE_CHILDREN
#define RUSAGE_SELF RUSAGE_SELF	RUSAGE_SELF	RUSAGE_SELF
#define RLIM_SAVED_CUR RLIM_INFINITY	RLIM_SAVED_CUR	RLIM_INFINITY
#define RLIM_SAVED_MAX RLIM_INFINITY	RLIM_SAVED_MAX	RLIM_INFINITY
#define RLIM64_INFINITY 0xffffffffffffffffuLL	RLIM64_INFINITY	0xffffffffffffffffuLL
#define RLIM_INFINITY ((__rlim_t) -1)	RLIM_INFINITY	((__rlim_t) -1)
#define RLIM_NLIMITS __RLIM_NLIMITS	RLIM_NLIMITS	__RLIM_NLIMITS
#define RLIMIT_NLIMITS __RLIMIT_NLIMITS	RLIMIT_NLIMITS	__RLIMIT_NLIMITS
#define RLIMIT_RTTIME __RLIMIT_RTTIME	RLIMIT_RTTIME	__RLIMIT_RTTIME
#define RLIMIT_RTPRIO __RLIMIT_RTPRIO	RLIMIT_RTPRIO	__RLIMIT_RTPRIO
#define RLIMIT_NICE __RLIMIT_NICE	RLIMIT_NICE	__RLIMIT_NICE
#define RLIMIT_MSGQUEUE __RLIMIT_MSGQUEUE	RLIMIT_MSGQUEUE	__RLIMIT_MSGQUEUE
#define RLIMIT_SIGPENDING __RLIMIT_SIGPENDING	RLIMIT_SIGPENDING	__RLIMIT_SIGPENDING
#define RLIMIT_LOCKS __RLIMIT_LOCKS	RLIMIT_LOCKS	__RLIMIT_LOCKS
#define RLIMIT_MEMLOCK __RLIMIT_MEMLOCK	RLIMIT_MEMLOCK	__RLIMIT_MEMLOCK
#define RLIMIT_NPROC __RLIMIT_NPROC	RLIMIT_NPROC	__RLIMIT_NPROC
#define RLIMIT_AS RLIMIT_AS	RLIMIT_AS	RLIMIT_AS
#define RLIMIT_OFILE __RLIMIT_OFILE	RLIMIT_OFILE	__RLIMIT_OFILE
#define RLIMIT_NOFILE RLIMIT_NOFILE	RLIMIT_NOFILE	RLIMIT_NOFILE
#define RLIMIT_RSS __RLIMIT_RSS	RLIMIT_RSS	__RLIMIT_RSS
#define RLIMIT_CORE RLIMIT_CORE	RLIMIT_CORE	RLIMIT_CORE
#define RLIMIT_STACK RLIMIT_STACK	RLIMIT_STACK	RLIMIT_STACK
#define RLIMIT_DATA RLIMIT_DATA	RLIMIT_DATA	RLIMIT_DATA
#define RLIMIT_FSIZE RLIMIT_FSIZE	RLIMIT_FSIZE	RLIMIT_FSIZE
#define RLIMIT_CPU RLIMIT_CPU	RLIMIT_CPU	RLIMIT_CPU
#ifndef _SYS_RESOURCE_H	_SYS_RESOURCE_H	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_GNU	__USE_GNU	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT_NTH	__REDIRECT_NTH	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#define _SYS_RESOURCE_H 1	_SYS_RESOURCE_H	1
#include <bits/resource.h>	<bits/resource.h>	
#include <features.h>	<features.h>	
#define __id_t_defined	__id_t_defined	
#ifndef _SYS_RESOURCE_H	_SYS_RESOURCE_H	
#ifndef __id_t_defined	__id_t_defined	
#if defined __USE_GNU && !defined __cplusplus	defined __USE_GNU && !defined __cplusplus	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT_NTH	__REDIRECT_NTH	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT_NTH	__REDIRECT_NTH	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wgetopt.h"""	"""wgetopt.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
#include <cstddef>	<cstddef>	
#include <cerrno>	<cerrno>	
#include <sys/resource.h>	<sys/resource.h>	
"#include ""config.h"""	"""config.h"""	
#ifdef RLIMIT_MEMLOCK	RLIMIT_MEMLOCK	
#ifdef RLIMIT_RSS	RLIMIT_RSS	
#ifdef RLIMIT_NPROC	RLIMIT_NPROC	
#ifdef RLIMIT_AS	RLIMIT_AS	
#ifdef RLIMIT_MEMLOCK	RLIMIT_MEMLOCK	
#ifdef RLIMIT_RSS	RLIMIT_RSS	
#ifdef RLIMIT_NPROC	RLIMIT_NPROC	
#ifdef RLIMIT_AS	RLIMIT_AS	
#define __pid_t_defined	__pid_t_defined	
#include <bits/waitstatus.h>	<bits/waitstatus.h>	
#include <bits/waitflags.h>	<bits/waitflags.h>	
#define __id_t_defined	__id_t_defined	
#define WIFCONTINUED(status) __WIFCONTINUED (status)	WIFCONTINUED(status)	__WIFCONTINUED (status)
#define WIFSTOPPED(status) __WIFSTOPPED (status)	WIFSTOPPED(status)	__WIFSTOPPED (status)
#define WIFSIGNALED(status) __WIFSIGNALED (status)	WIFSIGNALED(status)	__WIFSIGNALED (status)
#define WIFEXITED(status) __WIFEXITED (status)	WIFEXITED(status)	__WIFEXITED (status)
#define WSTOPSIG(status) __WSTOPSIG (status)	WSTOPSIG(status)	__WSTOPSIG (status)
#define WTERMSIG(status) __WTERMSIG (status)	WTERMSIG(status)	__WTERMSIG (status)
#define WEXITSTATUS(status) __WEXITSTATUS (status)	WEXITSTATUS(status)	__WEXITSTATUS (status)
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wgetopt.h"""	"""wgetopt.h"""	
"#include ""signal.h"""	"""signal.h"""	
"#include ""proc.h"""	"""proc.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
#include <vector>	<vector>	
#include <algorithm>	<algorithm>	
#include <sys/wait.h>	<sys/wait.h>	
"#include ""builtin_wait.h"""	"""builtin_wait.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""common.h"""	"""common.h"""	
#include <cwctype>	<cwctype>	
#include <cwchar>	<cwchar>	
#include <cstdlib>	<cstdlib>	
#include <cstdint>	<cstdint>	
#include <cstddef>	<cstddef>	
#include <algorithm>	<algorithm>	
"#include ""color.h"""	"""color.h"""	
"#include ""config.h"""	"""config.h"""	
#define _GLIBCXX_CXA_VEC_CTOR_RETURN(x) return	_GLIBCXX_CXA_VEC_CTOR_RETURN(x)	return
#define _GLIBCXX_GUARD_WAITING_BIT __guard_test_bit (2, 1)	_GLIBCXX_GUARD_WAITING_BIT	__guard_test_bit (2, 1)
#define _GLIBCXX_GUARD_PENDING_BIT __guard_test_bit (1, 1)	_GLIBCXX_GUARD_PENDING_BIT	__guard_test_bit (1, 1)
#define _GLIBCXX_GUARD_BIT __guard_test_bit (0, 1)	_GLIBCXX_GUARD_BIT	__guard_test_bit (0, 1)
#define _GLIBCXX_GUARD_SET(x) *(char *) (x) = 1	_GLIBCXX_GUARD_SET(x)	*(char *) (x) = 1
#define _GLIBCXX_GUARD_TEST(x) (*(char *) (x) != 0)	_GLIBCXX_GUARD_TEST(x)	(*(char *) (x) != 0)
#define _CXXABI_TWEAKS_H 1	_CXXABI_TWEAKS_H	1
#ifndef _CXXABI_TWEAKS_H	_CXXABI_TWEAKS_H	
#ifdef __cplusplus	__cplusplus	
#ifdef __cplusplus	__cplusplus	
#include <typeinfo>	<typeinfo>	
#include <bits/cxxabi_init_exception.h>	<bits/cxxabi_init_exception.h>	
#include <bits/cxxabi_forced.h>	<bits/cxxabi_forced.h>	
#include <bits/cxxabi_tweaks.h>	<bits/cxxabi_tweaks.h>	
#include <bits/c++config.h>	<bits/c++config.h>	
#include <stddef.h>	<stddef.h>	
#define _CXXABI_H 1	_CXXABI_H	1
#ifndef _CXXABI_H	_CXXABI_H	
#pragma GCC system_header	GCC system_header	
#pragma GCC visibility push(default)	GCC visibility push(default)	
#ifdef __cplusplus	__cplusplus	
#ifdef __cplusplus	__cplusplus	
#ifdef __cplusplus	__cplusplus	
#ifdef _GLIBCXX_LLP64	_GLIBCXX_LLP64	
#pragma GCC visibility pop	GCC visibility pop	
#define __need_size_t	__need_size_t	
#define DL_CALL_FCT(fctp,args) (_dl_mcount_wrapper_check ((void *) (fctp)), (*(fctp)) args)	DL_CALL_FCT(fctp,args)	(_dl_mcount_wrapper_check ((void *) (fctp)), (*(fctp)) args)
#define RTLD_NODELETE 0x01000	RTLD_NODELETE	0x01000
#define RTLD_LOCAL 0	RTLD_LOCAL	0
#define RTLD_GLOBAL 0x00100	RTLD_GLOBAL	0x00100
#define RTLD_DEEPBIND 0x00008	RTLD_DEEPBIND	0x00008
#define RTLD_NOLOAD 0x00004	RTLD_NOLOAD	0x00004
#define RTLD_BINDING_MASK 0x3	RTLD_BINDING_MASK	0x3
#define RTLD_NOW 0x00002	RTLD_NOW	0x00002
#define RTLD_LAZY 0x00001	RTLD_LAZY	0x00001
#ifndef _DLFCN_H	_DLFCN_H	
#ifdef __USE_GNU	__USE_GNU	
#define _DLFCN_H 1	_DLFCN_H	1
#include <bits/dlfcn.h>	<bits/dlfcn.h>	
#include <stddef.h>	<stddef.h>	
#include <features.h>	<features.h>	
#define LM_ID_NEWLM -1	LM_ID_NEWLM	-1
#define LM_ID_BASE 0	LM_ID_BASE	0
#define RTLD_DEFAULT ((void *) 0)	RTLD_DEFAULT	((void *) 0)
#define RTLD_NEXT ((void *) -1l)	RTLD_NEXT	((void *) -1l)
#ifndef _DLFCN_H	_DLFCN_H	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_GNU	__USE_GNU	
#if __GNUC_PREREQ (3, 0)	__GNUC_PREREQ (3, 0)	
"#define _PATH_VARTMP ""/var/tmp/"""	_PATH_VARTMP	"""/var/tmp/"""
"#define _PATH_VARRUN ""/var/run/"""	_PATH_VARRUN	"""/var/run/"""
"#define _PATH_VARDB ""/var/lib/misc/"""	_PATH_VARDB	"""/var/lib/misc/"""
"#define _PATH_TMP ""/tmp/"""	_PATH_TMP	"""/tmp/"""
"#define _PATH_DEV ""/dev/"""	_PATH_DEV	"""/dev/"""
"#define _PATH_WTMP ""/var/log/wtmp"""	_PATH_WTMP	"""/var/log/wtmp"""
"#define _PATH_VI ""/usr/bin/vi"""	_PATH_VI	"""/usr/bin/vi"""
"#define _PATH_UTMP ""/var/run/utmp"""	_PATH_UTMP	"""/var/run/utmp"""
"#define _PATH_UNIX ""/boot/vmlinux"""	_PATH_UNIX	"""/boot/vmlinux"""
"#define _PATH_TTY ""/dev/tty"""	_PATH_TTY	"""/dev/tty"""
"#define _PATH_SHELLS ""/etc/shells"""	_PATH_SHELLS	"""/etc/shells"""
"#define _PATH_SHADOW ""/etc/shadow"""	_PATH_SHADOW	"""/etc/shadow"""
"#define _PATH_SENDMAIL ""/usr/sbin/sendmail"""	_PATH_SENDMAIL	"""/usr/sbin/sendmail"""
"#define _PATH_RWHODIR ""/var/spool/rwho"""	_PATH_RWHODIR	"""/var/spool/rwho"""
"#define _PATH_PRESERVE ""/var/lib"""	_PATH_PRESERVE	"""/var/lib"""
"#define _PATH_NOLOGIN ""/etc/nologin"""	_PATH_NOLOGIN	"""/etc/nologin"""
"#define _PATH_MOUNTED ""/etc/mtab"""	_PATH_MOUNTED	"""/etc/mtab"""
"#define _PATH_MNTTAB ""/etc/fstab"""	_PATH_MNTTAB	"""/etc/fstab"""
"#define _PATH_MEM ""/dev/mem"""	_PATH_MEM	"""/dev/mem"""
"#define _PATH_MAN ""/usr/share/man"""	_PATH_MAN	"""/usr/share/man"""
"#define _PATH_MAILDIR ""/var/mail"""	_PATH_MAILDIR	"""/var/mail"""
"#define _PATH_LASTLOG ""/var/log/lastlog"""	_PATH_LASTLOG	"""/var/log/lastlog"""
"#define _PATH_KMEM ""/dev/kmem"""	_PATH_KMEM	"""/dev/kmem"""
"#define _PATH_KLOG ""/proc/kmsg"""	_PATH_KLOG	"""/proc/kmsg"""
"#define _PATH_GSHADOW ""/etc/gshadow"""	_PATH_GSHADOW	"""/etc/gshadow"""
"#define _PATH_DRUM ""/dev/drum"""	_PATH_DRUM	"""/dev/drum"""
"#define _PATH_DEVNULL ""/dev/null"""	_PATH_DEVNULL	"""/dev/null"""
"#define _PATH_DEVDB ""/var/run/dev.db"""	_PATH_DEVDB	"""/var/run/dev.db"""
"#define _PATH_CSHELL ""/bin/csh"""	_PATH_CSHELL	"""/bin/csh"""
"#define _PATH_CONSOLE ""/dev/console"""	_PATH_CONSOLE	"""/dev/console"""
"#define _PATH_BSHELL ""/bin/sh"""	_PATH_BSHELL	"""/bin/sh"""
"#define _PATH_STDPATH ""/usr/bin:/bin:/usr/sbin:/sbin"""	_PATH_STDPATH	"""/usr/bin:/bin:/usr/sbin:/sbin"""
"#define _PATH_DEFPATH ""/usr/bin:/bin"""	_PATH_DEFPATH	"""/usr/bin:/bin"""
#define _PATHS_H_	_PATHS_H_	
#ifndef _PATHS_H_	_PATHS_H_	
#define WEOF (0xffffffffu)	WEOF	(0xffffffffu)
#include <features.h>	<features.h>	
#define _EXECINFO_H 1	_EXECINFO_H	1
#ifndef _EXECINFO_H	_EXECINFO_H	
#define _UTSNAME_DOMAIN_LENGTH _UTSNAME_LENGTH	_UTSNAME_DOMAIN_LENGTH	_UTSNAME_LENGTH
#define _UTSNAME_LENGTH 65	_UTSNAME_LENGTH	65
#ifndef _SYS_UTSNAME_H	_SYS_UTSNAME_H	
#define _SYS_UTSNAME_H 1	_SYS_UTSNAME_H	1
#include <bits/utsname.h>	<bits/utsname.h>	
#include <features.h>	<features.h>	
#define _UTSNAME_MACHINE_LENGTH _UTSNAME_LENGTH	_UTSNAME_MACHINE_LENGTH	_UTSNAME_LENGTH
#define _UTSNAME_VERSION_LENGTH _UTSNAME_LENGTH	_UTSNAME_VERSION_LENGTH	_UTSNAME_LENGTH
#define _UTSNAME_RELEASE_LENGTH _UTSNAME_LENGTH	_UTSNAME_RELEASE_LENGTH	_UTSNAME_LENGTH
#define _UTSNAME_NODENAME_LENGTH _UTSNAME_LENGTH	_UTSNAME_NODENAME_LENGTH	_UTSNAME_LENGTH
#define _UTSNAME_SYSNAME_LENGTH _UTSNAME_LENGTH	_UTSNAME_SYSNAME_LENGTH	_UTSNAME_LENGTH
#define SYS_NMLN _UTSNAME_LENGTH	SYS_NMLN	_UTSNAME_LENGTH
#ifndef _SYS_UTSNAME_H	_SYS_UTSNAME_H	
#ifndef _UTSNAME_SYSNAME_LENGTH	_UTSNAME_SYSNAME_LENGTH	
#ifndef _UTSNAME_NODENAME_LENGTH	_UTSNAME_NODENAME_LENGTH	
#ifndef _UTSNAME_RELEASE_LENGTH	_UTSNAME_RELEASE_LENGTH	
#ifndef _UTSNAME_VERSION_LENGTH	_UTSNAME_VERSION_LENGTH	
#ifndef _UTSNAME_MACHINE_LENGTH	_UTSNAME_MACHINE_LENGTH	
#if _UTSNAME_DOMAIN_LENGTH - 0	_UTSNAME_DOMAIN_LENGTH - 0	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_MISC	__USE_MISC	
"#include ""maybe.h"""	"""maybe.h"""	
#include <type_traits>	<type_traits>	
#include <memory>	<memory>	
#include <functional>	<functional>	
#include <cstdint>	<cstdint>	
#include <pthread.h>	<pthread.h>	
#define FISH_IOTHREAD_H	FISH_IOTHREAD_H	
#ifndef FISH_IOTHREAD_H	FISH_IOTHREAD_H	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wildcard.h"""	"""wildcard.h"""	
"#include ""wcstringutil.h"""	"""wcstringutil.h"""	
"#include ""termsize.h"""	"""termsize.h"""	
"#include ""signal.h"""	"""signal.h"""	
"#include ""proc.h"""	"""proc.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""iothread.h"""	"""iothread.h"""	
"#include ""global_safety.h"""	"""global_safety.h"""	
"#include ""future_feature_flags.h"""	"""future_feature_flags.h"""	
"#include ""flog.h"""	"""flog.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""expand.h"""	"""expand.h"""	
"#include ""env.h"""	"""env.h"""	
"#include ""common.h"""	"""common.h"""	
#include <type_traits>	<type_traits>	
#include <memory>	<memory>	
#include <atomic>	<atomic>	
#include <algorithm>	<algorithm>	
#include <sys/utsname.h>	<sys/utsname.h>	
#include <execinfo.h>	<execinfo.h>	
#include <cwchar>	<cwchar>	
#include <cstring>	<cstring>	
#include <wctype.h>	<wctype.h>	
#include <unistd.h>	<unistd.h>	
#include <termios.h>	<termios.h>	
#include <sys/time.h>	<sys/time.h>	
#include <sys/stat.h>	<sys/stat.h>	
#include <stdlib.h>	<stdlib.h>	
#include <stdio.h>	<stdio.h>	
#include <stdint.h>	<stdint.h>	
#include <stddef.h>	<stddef.h>	
#include <stdarg.h>	<stdarg.h>	
#include <pthread.h>	<pthread.h>	
#include <paths.h>	<paths.h>	
#include <limits.h>	<limits.h>	
#include <fcntl.h>	<fcntl.h>	
#include <errno.h>	<errno.h>	
#include <dlfcn.h>	<dlfcn.h>	
#include <ctype.h>	<ctype.h>	
#include <cxxabi.h>	<cxxabi.h>	
"#include ""config.h"""	"""config.h"""	
"#define TEST(x) case x: append_format(result, L""<%s>"", #x); break;"	TEST(x)	"case x: append_format(result, L""<%s>"", #x); break;"
#ifdef HAVE_BACKTRACE_SYMBOLS	HAVE_BACKTRACE_SYMBOLS	
#ifdef HAVE_EXECINFO_H	HAVE_EXECINFO_H	
#ifdef __linux__	__linux__	
#ifdef __FreeBSD__	__FreeBSD__	
#elif defined(__APPLE__)	defined(__APPLE__)	
#if defined(OS_IS_CYGWIN) || defined(WSL)	defined(OS_IS_CYGWIN) || defined(WSL)	
#if defined(WSL)	defined(WSL)	
#elif not defined(__linux__)	not defined(__linux__)	
#ifdef HAVE_BACKTRACE_SYMBOLS	HAVE_BACKTRACE_SYMBOLS	
#ifdef __APPLE__	__APPLE__	
#elif defined(__FreeBSD__)	defined(__FreeBSD__)	
#if defined(_CS_DARWIN_USER_TEMP_DIR)	defined(_CS_DARWIN_USER_TEMP_DIR)	
#elif defined(P_tmpdir)	defined(P_tmpdir)	
#elif defined(_PATH_TMP)	defined(_PATH_TMP)	
#define __linux__ 1	__linux__	1
#define __need_size_t	__need_size_t	
#include <bits/types/FILE.h>	<bits/types/FILE.h>	
#include <stddef.h>	<stddef.h>	
#include <bits/types.h>	<bits/types.h>	
#include <features.h>	<features.h>	
#define NSS_BUFLEN_PASSWD 1024	NSS_BUFLEN_PASSWD	1024
#define _PWD_H 1	_PWD_H	1
#ifndef _PWD_H	_PWD_H	
#if defined __USE_XOPEN || defined __USE_XOPEN2K	defined __USE_XOPEN || defined __USE_XOPEN2K	
#ifndef __gid_t_defined	__gid_t_defined	
#ifndef __uid_t_defined	__uid_t_defined	
#ifdef __USE_MISC	__USE_MISC	
#if defined __USE_MISC || defined __USE_XOPEN_EXTENDED	defined __USE_MISC || defined __USE_XOPEN_EXTENDED	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_POSIX	__USE_POSIX	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_GNU	__USE_GNU	
#define FISH_UTIL_H	FISH_UTIL_H	
#ifndef FISH_UTIL_H	FISH_UTIL_H	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wildcard.h"""	"""wildcard.h"""	
"#include ""wcstringutil.h"""	"""wcstringutil.h"""	
"#include ""util.h"""	"""util.h"""	
"#include ""reader.h"""	"""reader.h"""	
"#include ""proc.h"""	"""proc.h"""	
"#include ""path.h"""	"""path.h"""	
"#include ""parser_keywords.h"""	"""parser_keywords.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""parse_util.h"""	"""parse_util.h"""	
"#include ""parse_constants.h"""	"""parse_constants.h"""	
"#include ""iothread.h"""	"""iothread.h"""	
"#include ""history.h"""	"""history.h"""	
"#include ""function.h"""	"""function.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""expand.h"""	"""expand.h"""	
"#include ""exec.h"""	"""exec.h"""	
"#include ""env.h"""	"""env.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
"#include ""autoload.h"""	"""autoload.h"""	
#include <utility>	<utility>	
#include <unordered_set>	<unordered_set>	
#include <unordered_map>	<unordered_map>	
#include <type_traits>	<type_traits>	
#include <string>	<string>	
#include <set>	<set>	
#include <numeric>	<numeric>	
#include <memory>	<memory>	
#include <list>	<list>	
#include <iterator>	<iterator>	
#include <functional>	<functional>	
#include <cwchar>	<cwchar>	
#include <cstddef>	<cstddef>	
#include <atomic>	<atomic>	
#include <algorithm>	<algorithm>	
#include <wctype.h>	<wctype.h>	
#include <stddef.h>	<stddef.h>	
#include <pwd.h>	<pwd.h>	
#include <pthread.h>	<pthread.h>	
"#include ""complete.h"""	"""complete.h"""	
"#include ""config.h"""	"""config.h"""	
"#define COMPLETE_VAR_DESC_VAL _(L""Variable: %ls"")"	COMPLETE_VAR_DESC_VAL	"_(L""Variable: %ls"")"
"#define ABBR_DESC _(L""Abbreviation: %ls"")"	ABBR_DESC	"_(L""Abbreviation: %ls"")"
"#define COMPLETE_USER_DESC _(L""Home for %ls"")"	COMPLETE_USER_DESC	"_(L""Home for %ls"")"
#ifdef HAVE_GETTEXT	HAVE_GETTEXT	
#ifndef HAVE_GETPWENT	HAVE_GETPWENT	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""env.h"""	"""env.h"""	
"#include ""common.h"""	"""common.h"""	
#include <vector>	<vector>	
#include <unordered_set>	<unordered_set>	
#include <memory>	<memory>	
#include <stdio.h>	<stdio.h>	
#include <pthread.h>	<pthread.h>	
"#include ""config.h"""	"""config.h"""	
"#define UNIVERSAL_NOTIFIER_ENV_NAME ""fish_universal_notifier"""	UNIVERSAL_NOTIFIER_ENV_NAME	"""fish_universal_notifier"""
#define FISH_ENV_UNIVERSAL_COMMON_H	FISH_ENV_UNIVERSAL_COMMON_H	
#ifndef FISH_ENV_UNIVERSAL_COMMON_H	FISH_ENV_UNIVERSAL_COMMON_H	
"#include ""env_universal_common.h"""	"""env_universal_common.h"""	
"#include ""common.h"""	"""common.h"""	
#include <memory>	<memory>	
"#include ""config.h"""	"""config.h"""	
#define FISH_ENV_DISPATCH_H	FISH_ENV_DISPATCH_H	
#ifndef FISH_ENV_DISPATCH_H	FISH_ENV_DISPATCH_H	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""termsize.h"""	"""termsize.h"""	
"#include ""reader.h"""	"""reader.h"""	
"#include ""proc.h"""	"""proc.h"""	
"#include ""path.h"""	"""path.h"""	
"#include ""input.h"""	"""input.h"""	
"#include ""history.h"""	"""history.h"""	
"#include ""global_safety.h"""	"""global_safety.h"""	
"#include ""flog.h"""	"""flog.h"""	
"#include ""fish_version.h"""	"""fish_version.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""event.h"""	"""event.h"""	
"#include ""env_universal_common.h"""	"""env_universal_common.h"""	
"#include ""env_dispatch.h"""	"""env_dispatch.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin_bind.h"""	"""builtin_bind.h"""	
#include <vector>	<vector>	
#include <utility>	<utility>	
#include <set>	<set>	
#include <mutex>	<mutex>	
#include <iterator>	<iterator>	
#include <algorithm>	<algorithm>	
#include <unistd.h>	<unistd.h>	
#include <sys/stat.h>	<sys/stat.h>	
#include <stdlib.h>	<stdlib.h>	
#include <stdio.h>	<stdio.h>	
#include <stddef.h>	<stddef.h>	
#include <pwd.h>	<pwd.h>	
#include <errno.h>	<errno.h>	
"#include ""env.h"""	"""env.h"""	
"#include ""config.h"""	"""config.h"""	
"#define FISH_DATADIR_VAR L""__fish_data_dir"""	FISH_DATADIR_VAR	"L""__fish_data_dir"""
"#define FISH_SYSCONFDIR_VAR L""__fish_sysconf_dir"""	FISH_SYSCONFDIR_VAR	"L""__fish_sysconf_dir"""
"#define FISH_HELPDIR_VAR L""__fish_help_dir"""	FISH_HELPDIR_VAR	"L""__fish_help_dir"""
"#define FISH_BIN_DIR L""__fish_bin_dir"""	FISH_BIN_DIR	"L""__fish_bin_dir"""
"#define FISH_CONFIG_DIR L""__fish_config_dir"""	FISH_CONFIG_DIR	"L""__fish_config_dir"""
"#define FISH_USER_DATA_DIR L""__fish_user_data_dir"""	FISH_USER_DATA_DIR	"L""__fish_user_data_dir"""
#if defined(_CS_PATH)	defined(_CS_PATH)	
#if defined(__APPLE__) || defined(__CYGWIN__)	defined(__APPLE__) || defined(__CYGWIN__)	
"#include ""wcstringutil.h"""	"""wcstringutil.h"""	
"#include ""highlight.h"""	"""highlight.h"""	
"#include ""common.h"""	"""common.h"""	
#include <vector>	<vector>	
#include <utility>	<utility>	
#include <unordered_set>	<unordered_set>	
#include <unordered_map>	<unordered_map>	
#include <memory>	<memory>	
#include <list>	<list>	
#include <cwchar>	<cwchar>	
#include <cstddef>	<cstddef>	
#include <algorithm>	<algorithm>	
#include <sys/stat.h>	<sys/stat.h>	
#include <stddef.h>	<stddef.h>	
"#include ""config.h"""	"""config.h"""	
#define FISH_SCREEN_H	FISH_SCREEN_H	
#ifndef FISH_SCREEN_H	FISH_SCREEN_H	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""termsize.h"""	"""termsize.h"""	
"#include ""screen.h"""	"""screen.h"""	
"#include ""reader.h"""	"""reader.h"""	
"#include ""proc.h"""	"""proc.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""output.h"""	"""output.h"""	
"#include ""maybe.h"""	"""maybe.h"""	
"#include ""input_common.h"""	"""input_common.h"""	
"#include ""history.h"""	"""history.h"""	
"#include ""global_safety.h"""	"""global_safety.h"""	
"#include ""function.h"""	"""function.h"""	
"#include ""flog.h"""	"""flog.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""event.h"""	"""event.h"""	
"#include ""env_universal_common.h"""	"""env_universal_common.h"""	
"#include ""env.h"""	"""env.h"""	
"#include ""complete.h"""	"""complete.h"""	
"#include ""common.h"""	"""common.h"""	
#include <utility>	<utility>	
#include <unordered_map>	<unordered_map>	
#include <string>	<string>	
#include <memory>	<memory>	
#include <functional>	<functional>	
#include <algorithm>	<algorithm>	
#include <assert.h>	<assert.h>	
#include <term.h>	<term.h>	
#include <curses.h>	<curses.h>	
#include <cwchar>	<cwchar>	
#include <cstring>	<cstring>	
#include <unistd.h>	<unistd.h>	
#include <time.h>	<time.h>	
#include <stdlib.h>	<stdlib.h>	
#include <stddef.h>	<stddef.h>	
#include <locale.h>	<locale.h>	
#include <limits.h>	<limits.h>	
#include <errno.h>	<errno.h>	
"#include ""config.h"""	"""config.h"""	
"#define DEFAULT_TERM1 ""ansi"""	DEFAULT_TERM1	"""ansi"""
"#define DEFAULT_TERM2 ""dumb"""	DEFAULT_TERM2	"""dumb"""
#if HAVE_CURSES_H	HAVE_CURSES_H	
#elif HAVE_NCURSES_H	HAVE_NCURSES_H	
#elif HAVE_NCURSES_CURSES_H	HAVE_NCURSES_CURSES_H	
#if HAVE_TERM_H	HAVE_TERM_H	
#elif HAVE_NCURSES_TERM_H	HAVE_NCURSES_TERM_H	
#ifdef HAVE__NL_MSG_CAT_CNTR	HAVE__NL_MSG_CAT_CNTR	
#define __need_size_t	__need_size_t	
#define __need_size_t	__need_size_t	
#define _NETINET_IN_H 1	_NETINET_IN_H	1
#define SOCK_NONBLOCK SOCK_NONBLOCK	SOCK_NONBLOCK	SOCK_NONBLOCK
#define SOCK_CLOEXEC SOCK_CLOEXEC	SOCK_CLOEXEC	SOCK_CLOEXEC
#define SOCK_PACKET SOCK_PACKET	SOCK_PACKET	SOCK_PACKET
#define SOCK_DCCP SOCK_DCCP	SOCK_DCCP	SOCK_DCCP
#define SOCK_SEQPACKET SOCK_SEQPACKET	SOCK_SEQPACKET	SOCK_SEQPACKET
#define SOCK_RDM SOCK_RDM	SOCK_RDM	SOCK_RDM
#define SOCK_RAW SOCK_RAW	SOCK_RAW	SOCK_RAW
#define SOCK_DGRAM SOCK_DGRAM	SOCK_DGRAM	SOCK_DGRAM
#define SOCK_STREAM SOCK_STREAM	SOCK_STREAM	SOCK_STREAM
#ifndef _SYS_SOCKET_H	_SYS_SOCKET_H	
#define _SYS_SOCKET_H 1	_SYS_SOCKET_H	1
#define _SS_SIZE 128	_SS_SIZE	128
#define __SOCKADDR_COMMON_SIZE (sizeof (unsigned short int))	__SOCKADDR_COMMON_SIZE	(sizeof (unsigned short int))
#define __SOCKADDR_COMMON(sa_prefix) sa_family_t sa_prefix ## family	__SOCKADDR_COMMON(sa_prefix)	sa_family_t sa_prefix ## family
#define _BITS_SOCKADDR_H 1	_BITS_SOCKADDR_H	1
#ifndef _BITS_SOCKADDR_H	_BITS_SOCKADDR_H	
#ifndef __always_inline	__always_inline	
#define __ASM_GENERIC_BITS_PER_LONG	__ASM_GENERIC_BITS_PER_LONG	
#ifndef __ASM_GENERIC_BITS_PER_LONG	__ASM_GENERIC_BITS_PER_LONG	
#ifndef __BITS_PER_LONG	__BITS_PER_LONG	
#define __BITS_PER_LONG 64	__BITS_PER_LONG	64
#include <asm-generic/bitsperlong.h>	<asm-generic/bitsperlong.h>	
#define __ASM_X86_BITSPERLONG_H	__ASM_X86_BITSPERLONG_H	
#ifndef __ASM_X86_BITSPERLONG_H	__ASM_X86_BITSPERLONG_H	
#if defined(__x86_64__) && !defined(__ILP32__)	defined(__x86_64__) && !defined(__ILP32__)	
#include <asm/bitsperlong.h>	<asm/bitsperlong.h>	
#define __ASM_GENERIC_POSIX_TYPES_H	__ASM_GENERIC_POSIX_TYPES_H	
#ifndef __ASM_GENERIC_POSIX_TYPES_H	__ASM_GENERIC_POSIX_TYPES_H	
#ifndef __kernel_long_t	__kernel_long_t	
#ifndef __kernel_ino_t	__kernel_ino_t	
#ifndef __kernel_mode_t	__kernel_mode_t	
#ifndef __kernel_pid_t	__kernel_pid_t	
#ifndef __kernel_ipc_pid_t	__kernel_ipc_pid_t	
#ifndef __kernel_uid_t	__kernel_uid_t	
#ifndef __kernel_suseconds_t	__kernel_suseconds_t	
#ifndef __kernel_daddr_t	__kernel_daddr_t	
#ifndef __kernel_uid32_t	__kernel_uid32_t	
#ifndef __kernel_old_uid_t	__kernel_old_uid_t	
#ifndef __kernel_old_dev_t	__kernel_old_dev_t	
#ifndef __kernel_size_t	__kernel_size_t	
#if __BITS_PER_LONG != 64	__BITS_PER_LONG != 64	
#ifndef __kernel_fsid_t	__kernel_fsid_t	
#define __kernel_old_dev_t __kernel_old_dev_t	__kernel_old_dev_t	__kernel_old_dev_t
#define __kernel_old_uid_t __kernel_old_uid_t	__kernel_old_uid_t	__kernel_old_uid_t
#include <asm-generic/posix_types.h>	<asm-generic/posix_types.h>	
#define _ASM_X86_POSIX_TYPES_64_H	_ASM_X86_POSIX_TYPES_64_H	
#ifndef _ASM_X86_POSIX_TYPES_64_H	_ASM_X86_POSIX_TYPES_64_H	
#include <asm/posix_types_64.h>	<asm/posix_types_64.h>	
#ifdef __i386__	__i386__	
#elif defined(__ILP32__)	defined(__ILP32__)	
#include <asm/posix_types.h>	<asm/posix_types.h>	
#include <linux/stddef.h>	<linux/stddef.h>	
#define __FD_SETSIZE 1024	__FD_SETSIZE	1024
#undef __FD_SETSIZE	__FD_SETSIZE	
#define _LINUX_POSIX_TYPES_H	_LINUX_POSIX_TYPES_H	
#ifndef _LINUX_POSIX_TYPES_H	_LINUX_POSIX_TYPES_H	
#define SIOCGSTAMPNS_OLD 0x8907	SIOCGSTAMPNS_OLD	0x8907
#define SIOCGSTAMP_OLD 0x8906	SIOCGSTAMP_OLD	0x8906
#define SIOCATMARK 0x8905	SIOCATMARK	0x8905
#define SIOCGPGRP 0x8904	SIOCGPGRP	0x8904
#define FIOGETOWN 0x8903	FIOGETOWN	0x8903
#define SIOCSPGRP 0x8902	SIOCSPGRP	0x8902
#define FIOSETOWN 0x8901	FIOSETOWN	0x8901
#define __ASM_GENERIC_SOCKIOS_H	__ASM_GENERIC_SOCKIOS_H	
#ifndef __ASM_GENERIC_SOCKIOS_H	__ASM_GENERIC_SOCKIOS_H	
#include <asm-generic/sockios.h>	<asm-generic/sockios.h>	
#include <asm/sockios.h>	<asm/sockios.h>	
#include <linux/posix_types.h>	<linux/posix_types.h>	
#define SCM_TIMESTAMPING SO_TIMESTAMPING	SCM_TIMESTAMPING	SO_TIMESTAMPING
#define SCM_TIMESTAMPNS SO_TIMESTAMPNS	SCM_TIMESTAMPNS	SO_TIMESTAMPNS
#define SCM_TIMESTAMP SO_TIMESTAMP	SCM_TIMESTAMP	SO_TIMESTAMP
#define SO_SNDTIMEO SO_SNDTIMEO_OLD	SO_SNDTIMEO	SO_SNDTIMEO_OLD
#define SO_RCVTIMEO SO_RCVTIMEO_OLD	SO_RCVTIMEO	SO_RCVTIMEO_OLD
#define SO_TIMESTAMPING SO_TIMESTAMPING_OLD	SO_TIMESTAMPING	SO_TIMESTAMPING_OLD
#define SO_TIMESTAMPNS SO_TIMESTAMPNS_OLD	SO_TIMESTAMPNS	SO_TIMESTAMPNS_OLD
#define SO_TIMESTAMP SO_TIMESTAMP_OLD	SO_TIMESTAMP	SO_TIMESTAMP_OLD
#define SO_DETACH_REUSEPORT_BPF 68	SO_DETACH_REUSEPORT_BPF	68
#define SO_SNDTIMEO_NEW 67	SO_SNDTIMEO_NEW	67
#define SO_RCVTIMEO_NEW 66	SO_RCVTIMEO_NEW	66
#define SO_TIMESTAMPING_NEW 65	SO_TIMESTAMPING_NEW	65
#define SO_TIMESTAMPNS_NEW 64	SO_TIMESTAMPNS_NEW	64
#define SO_TIMESTAMP_NEW 63	SO_TIMESTAMP_NEW	63
#define SO_TIMESTAMPING_OLD 37	SO_TIMESTAMPING_OLD	37
#define SO_TIMESTAMPNS_OLD 35	SO_TIMESTAMPNS_OLD	35
#define SO_TIMESTAMP_OLD 29	SO_TIMESTAMP_OLD	29
#define SO_BINDTOIFINDEX 62	SO_BINDTOIFINDEX	62
#define SCM_TXTIME SO_TXTIME	SCM_TXTIME	SO_TXTIME
#define SO_TXTIME 61	SO_TXTIME	61
#define SO_ZEROCOPY 60	SO_ZEROCOPY	60
#define SO_PEERGROUPS 59	SO_PEERGROUPS	59
#define SCM_TIMESTAMPING_PKTINFO 58	SCM_TIMESTAMPING_PKTINFO	58
#define SO_COOKIE 57	SO_COOKIE	57
#define SO_INCOMING_NAPI_ID 56	SO_INCOMING_NAPI_ID	56
#define SO_MEMINFO 55	SO_MEMINFO	55
#define SCM_TIMESTAMPING_OPT_STATS 54	SCM_TIMESTAMPING_OPT_STATS	54
#define SO_CNX_ADVICE 53	SO_CNX_ADVICE	53
#define SO_ATTACH_REUSEPORT_EBPF 52	SO_ATTACH_REUSEPORT_EBPF	52
#define SO_ATTACH_REUSEPORT_CBPF 51	SO_ATTACH_REUSEPORT_CBPF	51
#define SO_DETACH_BPF SO_DETACH_FILTER	SO_DETACH_BPF	SO_DETACH_FILTER
#define SO_ATTACH_BPF 50	SO_ATTACH_BPF	50
#define SO_INCOMING_CPU 49	SO_INCOMING_CPU	49
#define SO_BPF_EXTENSIONS 48	SO_BPF_EXTENSIONS	48
#define SO_MAX_PACING_RATE 47	SO_MAX_PACING_RATE	47
#define SO_BUSY_POLL 46	SO_BUSY_POLL	46
#define SO_SELECT_ERR_QUEUE 45	SO_SELECT_ERR_QUEUE	45
#define SO_LOCK_FILTER 44	SO_LOCK_FILTER	44
#define SO_NOFCS 43	SO_NOFCS	43
#define SO_PEEK_OFF 42	SO_PEEK_OFF	42
#define SCM_WIFI_STATUS SO_WIFI_STATUS	SCM_WIFI_STATUS	SO_WIFI_STATUS
#define SO_WIFI_STATUS 41	SO_WIFI_STATUS	41
#define SO_RXQ_OVFL 40	SO_RXQ_OVFL	40
#define SO_DOMAIN 39	SO_DOMAIN	39
#define SO_PROTOCOL 38	SO_PROTOCOL	38
#define SO_MARK 36	SO_MARK	36
#define SO_PASSSEC 34	SO_PASSSEC	34
#define SO_PEERSEC 31	SO_PEERSEC	31
#define SO_ACCEPTCONN 30	SO_ACCEPTCONN	30
#define SO_PEERNAME 28	SO_PEERNAME	28
#define SO_GET_FILTER SO_ATTACH_FILTER	SO_GET_FILTER	SO_ATTACH_FILTER
#define SO_DETACH_FILTER 27	SO_DETACH_FILTER	27
#define SO_ATTACH_FILTER 26	SO_ATTACH_FILTER	26
#define SO_BINDTODEVICE 25	SO_BINDTODEVICE	25
#define SO_SECURITY_ENCRYPTION_NETWORK 24	SO_SECURITY_ENCRYPTION_NETWORK	24
#define SO_SECURITY_ENCRYPTION_TRANSPORT 23	SO_SECURITY_ENCRYPTION_TRANSPORT	23
#define SO_SECURITY_AUTHENTICATION 22	SO_SECURITY_AUTHENTICATION	22
#define SO_SNDTIMEO_OLD 21	SO_SNDTIMEO_OLD	21
#define SO_RCVTIMEO_OLD 20	SO_RCVTIMEO_OLD	20
#define SO_SNDLOWAT 19	SO_SNDLOWAT	19
#define SO_RCVLOWAT 18	SO_RCVLOWAT	18
#define SO_PEERCRED 17	SO_PEERCRED	17
#define SO_PASSCRED 16	SO_PASSCRED	16
#define SO_REUSEPORT 15	SO_REUSEPORT	15
#define SO_BSDCOMPAT 14	SO_BSDCOMPAT	14
#define SO_LINGER 13	SO_LINGER	13
#define SO_PRIORITY 12	SO_PRIORITY	12
#define SO_NO_CHECK 11	SO_NO_CHECK	11
#define SO_OOBINLINE 10	SO_OOBINLINE	10
#define SO_KEEPALIVE 9	SO_KEEPALIVE	9
#define SO_RCVBUFFORCE 33	SO_RCVBUFFORCE	33
#define SO_SNDBUFFORCE 32	SO_SNDBUFFORCE	32
#define SO_RCVBUF 8	SO_RCVBUF	8
#define SO_SNDBUF 7	SO_SNDBUF	7
#define SO_BROADCAST 6	SO_BROADCAST	6
#define SO_DONTROUTE 5	SO_DONTROUTE	5
#define SO_ERROR 4	SO_ERROR	4
#define SO_TYPE 3	SO_TYPE	3
#define SO_REUSEADDR 2	SO_REUSEADDR	2
#define SO_DEBUG 1	SO_DEBUG	1
#define SOL_SOCKET 1	SOL_SOCKET	1
#define __ASM_GENERIC_SOCKET_H	__ASM_GENERIC_SOCKET_H	
#ifndef __ASM_GENERIC_SOCKET_H	__ASM_GENERIC_SOCKET_H	
#ifndef SO_PASSCRED	SO_PASSCRED	
#if __BITS_PER_LONG == 64 || (defined(__x86_64__) && defined(__ILP32__))	__BITS_PER_LONG == 64 || (defined(__x86_64__) && defined(__ILP32__))	
#include <asm-generic/socket.h>	<asm-generic/socket.h>	
#include <asm/socket.h>	<asm/socket.h>	
#include <bits/types/time_t.h>	<bits/types/time_t.h>	
#include <bits/sockaddr.h>	<bits/sockaddr.h>	
#include <bits/socket_type.h>	<bits/socket_type.h>	
#include <sys/types.h>	<sys/types.h>	
#include <stddef.h>	<stddef.h>	
#define CMSG_ALIGN(len) (((len) + sizeof (size_t) - 1) & (size_t) ~(sizeof (size_t) - 1))	CMSG_ALIGN(len)	(((len) + sizeof (size_t) - 1) & (size_t) ~(sizeof (size_t) - 1))
#define MSG_DONTROUTE MSG_DONTROUTE	MSG_DONTROUTE	MSG_DONTROUTE
#define __ss_aligntype unsigned long int	__ss_aligntype	unsigned long int
#define _SS_PADSIZE (_SS_SIZE - __SOCKADDR_COMMON_SIZE - sizeof (__ss_aligntype))	_SS_PADSIZE	(_SS_SIZE - __SOCKADDR_COMMON_SIZE - sizeof (__ss_aligntype))
#define SCM_CREDENTIALS SCM_CREDENTIALS	SCM_CREDENTIALS	SCM_CREDENTIALS
#define SCM_RIGHTS SCM_RIGHTS	SCM_RIGHTS	SCM_RIGHTS
#define _EXTERN_INLINE __extern_inline	_EXTERN_INLINE	__extern_inline
#define CMSG_LEN(len) (CMSG_ALIGN (sizeof (struct cmsghdr)) + (len))	CMSG_LEN(len)	(CMSG_ALIGN (sizeof (struct cmsghdr)) + (len))
#define CMSG_SPACE(len) (CMSG_ALIGN (len) + CMSG_ALIGN (sizeof (struct cmsghdr)))	CMSG_SPACE(len)	(CMSG_ALIGN (len) + CMSG_ALIGN (sizeof (struct cmsghdr)))
#define CMSG_FIRSTHDR(mhdr) ((size_t) (mhdr)->msg_controllen >= sizeof (struct cmsghdr) ? (struct cmsghdr *) (mhdr)->msg_control : (struct cmsghdr *) 0)	CMSG_FIRSTHDR(mhdr)	((size_t) (mhdr)->msg_controllen >= sizeof (struct cmsghdr) ? (struct cmsghdr *) (mhdr)->msg_control : (struct cmsghdr *) 0)
#define CMSG_NXTHDR(mhdr,cmsg) __cmsg_nxthdr (mhdr, cmsg)	CMSG_NXTHDR(mhdr,cmsg)	__cmsg_nxthdr (mhdr, cmsg)
#define CMSG_DATA(cmsg) ((cmsg)->__cmsg_data)	CMSG_DATA(cmsg)	((cmsg)->__cmsg_data)
#define MSG_CMSG_CLOEXEC MSG_CMSG_CLOEXEC	MSG_CMSG_CLOEXEC	MSG_CMSG_CLOEXEC
#define MSG_FASTOPEN MSG_FASTOPEN	MSG_FASTOPEN	MSG_FASTOPEN
#define MSG_ZEROCOPY MSG_ZEROCOPY	MSG_ZEROCOPY	MSG_ZEROCOPY
#define MSG_BATCH MSG_BATCH	MSG_BATCH	MSG_BATCH
#define MSG_WAITFORONE MSG_WAITFORONE	MSG_WAITFORONE	MSG_WAITFORONE
#define MSG_MORE MSG_MORE	MSG_MORE	MSG_MORE
#define MSG_NOSIGNAL MSG_NOSIGNAL	MSG_NOSIGNAL	MSG_NOSIGNAL
#define MSG_ERRQUEUE MSG_ERRQUEUE	MSG_ERRQUEUE	MSG_ERRQUEUE
#define MSG_RST MSG_RST	MSG_RST	MSG_RST
#define MSG_CONFIRM MSG_CONFIRM	MSG_CONFIRM	MSG_CONFIRM
#define MSG_SYN MSG_SYN	MSG_SYN	MSG_SYN
#define MSG_FIN MSG_FIN	MSG_FIN	MSG_FIN
#define MSG_WAITALL MSG_WAITALL	MSG_WAITALL	MSG_WAITALL
#define MSG_EOR MSG_EOR	MSG_EOR	MSG_EOR
#define MSG_DONTWAIT MSG_DONTWAIT	MSG_DONTWAIT	MSG_DONTWAIT
#define MSG_TRUNC MSG_TRUNC	MSG_TRUNC	MSG_TRUNC
#define MSG_PROXY MSG_PROXY	MSG_PROXY	MSG_PROXY
#define MSG_CTRUNC MSG_CTRUNC	MSG_CTRUNC	MSG_CTRUNC
#define MSG_TRYHARD MSG_DONTROUTE	MSG_TRYHARD	MSG_DONTROUTE
#define MSG_PEEK MSG_PEEK	MSG_PEEK	MSG_PEEK
#define MSG_OOB MSG_OOB	MSG_OOB	MSG_OOB
#define SOMAXCONN 128	SOMAXCONN	128
#define SOL_XDP 283	SOL_XDP	283
#define SOL_TLS 282	SOL_TLS	282
#define SOL_KCM 281	SOL_KCM	281
#define SOL_NFC 280	SOL_NFC	280
#define SOL_ALG 279	SOL_ALG	279
#define SOL_CAIF 278	SOL_CAIF	278
#define SOL_IUCV 277	SOL_IUCV	277
#define SOL_RDS 276	SOL_RDS	276
#define SOL_PNPIPE 275	SOL_PNPIPE	275
#define SOL_BLUETOOTH 274	SOL_BLUETOOTH	274
#define SOL_PPPOL2TP 273	SOL_PPPOL2TP	273
#define SOL_RXRPC 272	SOL_RXRPC	272
#define SOL_TIPC 271	SOL_TIPC	271
#define SOL_NETLINK 270	SOL_NETLINK	270
#define SOL_DCCP 269	SOL_DCCP	269
#define SOL_LLC 268	SOL_LLC	268
#define SOL_NETBEUI 267	SOL_NETBEUI	267
#define SOL_IRDA 266	SOL_IRDA	266
#define SOL_AAL 265	SOL_AAL	265
#define SOL_ATM 264	SOL_ATM	264
#define SOL_PACKET 263	SOL_PACKET	263
#define SOL_X25 262	SOL_X25	262
#define SOL_DECNET 261	SOL_DECNET	261
#define SOL_RAW 255	SOL_RAW	255
#define AF_MAX PF_MAX	AF_MAX	PF_MAX
#define AF_XDP PF_XDP	AF_XDP	PF_XDP
#define AF_SMC PF_SMC	AF_SMC	PF_SMC
#define AF_QIPCRTR PF_QIPCRTR	AF_QIPCRTR	PF_QIPCRTR
#define AF_KCM PF_KCM	AF_KCM	PF_KCM
#define AF_VSOCK PF_VSOCK	AF_VSOCK	PF_VSOCK
#define AF_NFC PF_NFC	AF_NFC	PF_NFC
#define AF_ALG PF_ALG	AF_ALG	PF_ALG
#define AF_CAIF PF_CAIF	AF_CAIF	PF_CAIF
#define AF_IEEE802154 PF_IEEE802154	AF_IEEE802154	PF_IEEE802154
#define AF_PHONET PF_PHONET	AF_PHONET	PF_PHONET
#define AF_ISDN PF_ISDN	AF_ISDN	PF_ISDN
#define AF_RXRPC PF_RXRPC	AF_RXRPC	PF_RXRPC
#define AF_IUCV PF_IUCV	AF_IUCV	PF_IUCV
#define AF_BLUETOOTH PF_BLUETOOTH	AF_BLUETOOTH	PF_BLUETOOTH
#define AF_TIPC PF_TIPC	AF_TIPC	PF_TIPC
#define AF_CAN PF_CAN	AF_CAN	PF_CAN
#define AF_MPLS PF_MPLS	AF_MPLS	PF_MPLS
#define AF_IB PF_IB	AF_IB	PF_IB
#define AF_LLC PF_LLC	AF_LLC	PF_LLC
#define AF_WANPIPE PF_WANPIPE	AF_WANPIPE	PF_WANPIPE
#define AF_PPPOX PF_PPPOX	AF_PPPOX	PF_PPPOX
#define AF_IRDA PF_IRDA	AF_IRDA	PF_IRDA
#define AF_SNA PF_SNA	AF_SNA	PF_SNA
#define AF_RDS PF_RDS	AF_RDS	PF_RDS
#define AF_ATMSVC PF_ATMSVC	AF_ATMSVC	PF_ATMSVC
#define AF_ECONET PF_ECONET	AF_ECONET	PF_ECONET
#define AF_ASH PF_ASH	AF_ASH	PF_ASH
#define AF_PACKET PF_PACKET	AF_PACKET	PF_PACKET
#define AF_ROUTE PF_ROUTE	AF_ROUTE	PF_ROUTE
#define AF_NETLINK PF_NETLINK	AF_NETLINK	PF_NETLINK
#define AF_KEY PF_KEY	AF_KEY	PF_KEY
#define AF_SECURITY PF_SECURITY	AF_SECURITY	PF_SECURITY
#define AF_NETBEUI PF_NETBEUI	AF_NETBEUI	PF_NETBEUI
#define AF_DECnet PF_DECnet	AF_DECnet	PF_DECnet
#define AF_ROSE PF_ROSE	AF_ROSE	PF_ROSE
#define AF_INET6 PF_INET6	AF_INET6	PF_INET6
#define AF_X25 PF_X25	AF_X25	PF_X25
#define AF_ATMPVC PF_ATMPVC	AF_ATMPVC	PF_ATMPVC
#define AF_BRIDGE PF_BRIDGE	AF_BRIDGE	PF_BRIDGE
#define AF_NETROM PF_NETROM	AF_NETROM	PF_NETROM
#define AF_APPLETALK PF_APPLETALK	AF_APPLETALK	PF_APPLETALK
#define AF_IPX PF_IPX	AF_IPX	PF_IPX
#define AF_AX25 PF_AX25	AF_AX25	PF_AX25
#define AF_INET PF_INET	AF_INET	PF_INET
#define AF_FILE PF_FILE	AF_FILE	PF_FILE
#define AF_UNIX PF_UNIX	AF_UNIX	PF_UNIX
#define AF_LOCAL PF_LOCAL	AF_LOCAL	PF_LOCAL
#define AF_UNSPEC PF_UNSPEC	AF_UNSPEC	PF_UNSPEC
#define PF_MAX 45	PF_MAX	45
#define PF_XDP 44	PF_XDP	44
#define PF_SMC 43	PF_SMC	43
#define PF_QIPCRTR 42	PF_QIPCRTR	42
#define PF_KCM 41	PF_KCM	41
#define PF_VSOCK 40	PF_VSOCK	40
#define PF_NFC 39	PF_NFC	39
#define PF_ALG 38	PF_ALG	38
#define PF_CAIF 37	PF_CAIF	37
#define PF_IEEE802154 36	PF_IEEE802154	36
#define PF_PHONET 35	PF_PHONET	35
#define PF_ISDN 34	PF_ISDN	34
#define PF_RXRPC 33	PF_RXRPC	33
#define PF_IUCV 32	PF_IUCV	32
#define PF_BLUETOOTH 31	PF_BLUETOOTH	31
#define PF_TIPC 30	PF_TIPC	30
#define PF_CAN 29	PF_CAN	29
#define PF_MPLS 28	PF_MPLS	28
#define PF_IB 27	PF_IB	27
#define PF_LLC 26	PF_LLC	26
#define PF_WANPIPE 25	PF_WANPIPE	25
#define PF_PPPOX 24	PF_PPPOX	24
#define PF_IRDA 23	PF_IRDA	23
#define PF_SNA 22	PF_SNA	22
#define PF_RDS 21	PF_RDS	21
#define PF_ATMSVC 20	PF_ATMSVC	20
#define PF_ECONET 19	PF_ECONET	19
#define PF_ASH 18	PF_ASH	18
#define PF_PACKET 17	PF_PACKET	17
#define PF_ROUTE PF_NETLINK	PF_ROUTE	PF_NETLINK
#define PF_NETLINK 16	PF_NETLINK	16
#define PF_KEY 15	PF_KEY	15
#define PF_SECURITY 14	PF_SECURITY	14
#define PF_NETBEUI 13	PF_NETBEUI	13
#define PF_DECnet 12	PF_DECnet	12
#define PF_ROSE 11	PF_ROSE	11
#define PF_INET6 10	PF_INET6	10
#define PF_X25 9	PF_X25	9
#define PF_ATMPVC 8	PF_ATMPVC	8
#define PF_BRIDGE 7	PF_BRIDGE	7
#define PF_NETROM 6	PF_NETROM	6
#define PF_APPLETALK 5	PF_APPLETALK	5
#define PF_IPX 4	PF_IPX	4
#define PF_AX25 3	PF_AX25	3
#define PF_INET 2	PF_INET	2
#define PF_FILE PF_LOCAL	PF_FILE	PF_LOCAL
#define PF_UNIX PF_LOCAL	PF_UNIX	PF_LOCAL
#define PF_LOCAL 1	PF_LOCAL	1
#define PF_UNSPEC 0	PF_UNSPEC	0
#define __socklen_t_defined	__socklen_t_defined	
#define __BITS_SOCKET_H	__BITS_SOCKET_H	
#ifndef __BITS_SOCKET_H	__BITS_SOCKET_H	
#ifndef _SYS_SOCKET_H	_SYS_SOCKET_H	
#ifndef __socklen_t_defined	__socklen_t_defined	
#ifdef __USE_GNU	__USE_GNU	
#if __glibc_c99_flexarr_available	__glibc_c99_flexarr_available	
#if __glibc_c99_flexarr_available	__glibc_c99_flexarr_available	
#ifdef __USE_EXTERN_INLINES	__USE_EXTERN_INLINES	
#ifndef _EXTERN_INLINE	_EXTERN_INLINE	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_MISC	__USE_MISC	
#define __osockaddr_defined 1	__osockaddr_defined	1
#ifndef __osockaddr_defined	__osockaddr_defined	
#define __SOCKADDR_ARG struct sockaddr *__restrict	__SOCKADDR_ARG	struct sockaddr *__restrict
#ifndef _SYS_SOCKET_H	_SYS_SOCKET_H	
#include <bits/socket2.h>	<bits/socket2.h>	
#include <bits/types/struct_osockaddr.h>	<bits/types/struct_osockaddr.h>	
#include <bits/socket.h>	<bits/socket.h>	
#include <stddef.h>	<stddef.h>	
#include <bits/types/struct_iovec.h>	<bits/types/struct_iovec.h>	
#include <features.h>	<features.h>	
#define __CONST_SOCKADDR_ARG const struct sockaddr *	__CONST_SOCKADDR_ARG	const struct sockaddr *
#define SHUT_RDWR SHUT_RDWR	SHUT_RDWR	SHUT_RDWR
#define SHUT_WR SHUT_WR	SHUT_WR	SHUT_WR
#define SHUT_RD SHUT_RD	SHUT_RD	SHUT_RD
#ifndef _SYS_SOCKET_H	_SYS_SOCKET_H	
#ifdef __USE_MISC	__USE_MISC	
#if defined __cplusplus || !__GNUC_PREREQ (2, 7) || !defined __USE_GNU	defined __cplusplus || !__GNUC_PREREQ (2, 7) || !defined __USE_GNU	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_XOPEN2K	__USE_XOPEN2K	
#ifdef __USE_MISC	__USE_MISC	
#if __USE_FORTIFY_LEVEL > 0 && defined __fortify_function	__USE_FORTIFY_LEVEL > 0 && defined __fortify_function	
#define IPV6_RTHDR_TYPE_0 0	IPV6_RTHDR_TYPE_0	0
#define IPV6_RTHDR_STRICT 1	IPV6_RTHDR_STRICT	1
#define IPV6_RTHDR_LOOSE 0	IPV6_RTHDR_LOOSE	0
#define SOL_ICMPV6 58	SOL_ICMPV6	58
#define SOL_IPV6 41	SOL_IPV6	41
#define IPV6_PMTUDISC_OMIT 5	IPV6_PMTUDISC_OMIT	5
#define IPV6_PMTUDISC_INTERFACE 4	IPV6_PMTUDISC_INTERFACE	4
#define IPV6_PMTUDISC_PROBE 3	IPV6_PMTUDISC_PROBE	3
#define IPV6_PMTUDISC_DO 2	IPV6_PMTUDISC_DO	2
#define IPV6_PMTUDISC_WANT 1	IPV6_PMTUDISC_WANT	1
#define IPV6_PMTUDISC_DONT 0	IPV6_PMTUDISC_DONT	0
#define IPV6_RXDSTOPTS IPV6_DSTOPTS	IPV6_RXDSTOPTS	IPV6_DSTOPTS
#define IPV6_RXHOPOPTS IPV6_HOPOPTS	IPV6_RXHOPOPTS	IPV6_HOPOPTS
#define IPV6_DROP_MEMBERSHIP IPV6_LEAVE_GROUP	IPV6_DROP_MEMBERSHIP	IPV6_LEAVE_GROUP
#define IPV6_ADD_MEMBERSHIP IPV6_JOIN_GROUP	IPV6_ADD_MEMBERSHIP	IPV6_JOIN_GROUP
#define IPV6_FREEBIND 78	IPV6_FREEBIND	78
#define IPV6_RECVFRAGSIZE 77	IPV6_RECVFRAGSIZE	77
#define IPV6_UNICAST_IF 76	IPV6_UNICAST_IF	76
#define IPV6_TRANSPARENT 75	IPV6_TRANSPARENT	75
#define IPV6_RECVORIGDSTADDR IPV6_ORIGDSTADDR	IPV6_RECVORIGDSTADDR	IPV6_ORIGDSTADDR
#define IPV6_ORIGDSTADDR 74	IPV6_ORIGDSTADDR	74
#define IPV6_MINHOPCOUNT 73	IPV6_MINHOPCOUNT	73
#define IPV6_ADDR_PREFERENCES 72	IPV6_ADDR_PREFERENCES	72
#define IPV6_AUTOFLOWLABEL 70	IPV6_AUTOFLOWLABEL	70
#define IPV6_TCLASS 67	IPV6_TCLASS	67
#define IPV6_RECVTCLASS 66	IPV6_RECVTCLASS	66
#define IPV6_DONTFRAG 62	IPV6_DONTFRAG	62
#define IPV6_PATHMTU 61	IPV6_PATHMTU	61
#define IPV6_RECVPATHMTU 60	IPV6_RECVPATHMTU	60
#define IPV6_DSTOPTS 59	IPV6_DSTOPTS	59
#define IPV6_RECVDSTOPTS 58	IPV6_RECVDSTOPTS	58
#define IPV6_RTHDR 57	IPV6_RTHDR	57
#define IPV6_RECVRTHDR 56	IPV6_RECVRTHDR	56
#define IPV6_RTHDRDSTOPTS 55	IPV6_RTHDRDSTOPTS	55
#define IPV6_HOPOPTS 54	IPV6_HOPOPTS	54
#define IPV6_RECVHOPOPTS 53	IPV6_RECVHOPOPTS	53
#define IPV6_HOPLIMIT 52	IPV6_HOPLIMIT	52
#define IPV6_RECVHOPLIMIT 51	IPV6_RECVHOPLIMIT	51
#define IPV6_PKTINFO 50	IPV6_PKTINFO	50
#define IPV6_RECVPKTINFO 49	IPV6_RECVPKTINFO	49
#define IPV6_HDRINCL 36	IPV6_HDRINCL	36
#define IPV6_XFRM_POLICY 35	IPV6_XFRM_POLICY	35
#define IPV6_IPSEC_POLICY 34	IPV6_IPSEC_POLICY	34
#define IPV6_ROUTER_ALERT_ISOLATE 30	IPV6_ROUTER_ALERT_ISOLATE	30
#define IPV6_MULTICAST_ALL 29	IPV6_MULTICAST_ALL	29
#define IPV6_LEAVE_ANYCAST 28	IPV6_LEAVE_ANYCAST	28
#define IPV6_JOIN_ANYCAST 27	IPV6_JOIN_ANYCAST	27
#define IPV6_V6ONLY 26	IPV6_V6ONLY	26
#define IPV6_RECVERR 25	IPV6_RECVERR	25
#define IPV6_MTU 24	IPV6_MTU	24
#define IPV6_MTU_DISCOVER 23	IPV6_MTU_DISCOVER	23
#define IPV6_ROUTER_ALERT 22	IPV6_ROUTER_ALERT	22
#define IPV6_LEAVE_GROUP 21	IPV6_LEAVE_GROUP	21
#define IPV6_JOIN_GROUP 20	IPV6_JOIN_GROUP	20
#define IPV6_MULTICAST_LOOP 19	IPV6_MULTICAST_LOOP	19
#define IPV6_MULTICAST_HOPS 18	IPV6_MULTICAST_HOPS	18
#define IPV6_MULTICAST_IF 17	IPV6_MULTICAST_IF	17
#define IPV6_UNICAST_HOPS 16	IPV6_UNICAST_HOPS	16
#define IPV6_AUTHHDR 10	IPV6_AUTHHDR	10
#define IPV6_NEXTHOP 9	IPV6_NEXTHOP	9
#define SCM_SRCRT IPV6_RXSRCRT	SCM_SRCRT	IPV6_RXSRCRT
#define IPV6_2292HOPLIMIT 8	IPV6_2292HOPLIMIT	8
#define IPV6_CHECKSUM 7	IPV6_CHECKSUM	7
#define IPV6_2292PKTOPTIONS 6	IPV6_2292PKTOPTIONS	6
#define IPV6_2292RTHDR 5	IPV6_2292RTHDR	5
#define IPV6_2292DSTOPTS 4	IPV6_2292DSTOPTS	4
#define IPV6_2292HOPOPTS 3	IPV6_2292HOPOPTS	3
#define IPV6_2292PKTINFO 2	IPV6_2292PKTINFO	2
#define IPV6_ADDRFORM 1	IPV6_ADDRFORM	1
#define IP_MAX_MEMBERSHIPS 20	IP_MAX_MEMBERSHIPS	20
#define IP_DEFAULT_MULTICAST_LOOP 1	IP_DEFAULT_MULTICAST_LOOP	1
#define IP_DEFAULT_MULTICAST_TTL 1	IP_DEFAULT_MULTICAST_TTL	1
#define SOL_IP 0	SOL_IP	0
#define IP_UNICAST_IF 50	IP_UNICAST_IF	50
#define IP_MULTICAST_ALL 49	IP_MULTICAST_ALL	49
#define IP_MSFILTER 41	IP_MSFILTER	41
#define IP_DROP_SOURCE_MEMBERSHIP 40	IP_DROP_SOURCE_MEMBERSHIP	40
#define IP_ADD_SOURCE_MEMBERSHIP 39	IP_ADD_SOURCE_MEMBERSHIP	39
#define IP_BLOCK_SOURCE 38	IP_BLOCK_SOURCE	38
#define IP_UNBLOCK_SOURCE 37	IP_UNBLOCK_SOURCE	37
#define IP_DROP_MEMBERSHIP 36	IP_DROP_MEMBERSHIP	36
#define IP_ADD_MEMBERSHIP 35	IP_ADD_MEMBERSHIP	35
#define IP_MULTICAST_LOOP 34	IP_MULTICAST_LOOP	34
#define IP_MULTICAST_TTL 33	IP_MULTICAST_TTL	33
#define IP_MULTICAST_IF 32	IP_MULTICAST_IF	32
#define IP_PMTUDISC_OMIT 5	IP_PMTUDISC_OMIT	5
#define IP_PMTUDISC_INTERFACE 4	IP_PMTUDISC_INTERFACE	4
#define IP_PMTUDISC_PROBE 3	IP_PMTUDISC_PROBE	3
#define IP_PMTUDISC_DO 2	IP_PMTUDISC_DO	2
#define IP_PMTUDISC_WANT 1	IP_PMTUDISC_WANT	1
#define IP_PMTUDISC_DONT 0	IP_PMTUDISC_DONT	0
#define IP_RECVFRAGSIZE 25	IP_RECVFRAGSIZE	25
#define IP_BIND_ADDRESS_NO_PORT 24	IP_BIND_ADDRESS_NO_PORT	24
#define IP_CHECKSUM 23	IP_CHECKSUM	23
#define IP_NODEFRAG 22	IP_NODEFRAG	22
#define IP_MINTTL 21	IP_MINTTL	21
#define IP_RECVORIGDSTADDR IP_ORIGDSTADDR	IP_RECVORIGDSTADDR	IP_ORIGDSTADDR
#define IP_ORIGDSTADDR 20	IP_ORIGDSTADDR	20
#define IP_MULTICAST_ALL 49	IP_MULTICAST_ALL	49
#define IP_TRANSPARENT 19	IP_TRANSPARENT	19
#define IP_PASSSEC 18	IP_PASSSEC	18
#define IP_XFRM_POLICY 17	IP_XFRM_POLICY	17
#define IP_IPSEC_POLICY 16	IP_IPSEC_POLICY	16
#define IP_FREEBIND 15	IP_FREEBIND	15
#define IP_MTU 14	IP_MTU	14
#define IP_RECVTOS 13	IP_RECVTOS	13
#define IP_RECVTTL 12	IP_RECVTTL	12
#define IP_RECVERR 11	IP_RECVERR	11
#define IP_MTU_DISCOVER 10	IP_MTU_DISCOVER	10
#define IP_PMTUDISC 10	IP_PMTUDISC	10
#define IP_PKTOPTIONS 9	IP_PKTOPTIONS	9
#define IP_PKTINFO 8	IP_PKTINFO	8
#define IP_ROUTER_ALERT 5	IP_ROUTER_ALERT	5
#define MCAST_INCLUDE 1	MCAST_INCLUDE	1
#define MCAST_EXCLUDE 0	MCAST_EXCLUDE	0
#define IP_UNICAST_IF 50	IP_UNICAST_IF	50
#define IP_MULTICAST_ALL 49	IP_MULTICAST_ALL	49
#define MCAST_MSFILTER 48	MCAST_MSFILTER	48
#define MCAST_LEAVE_SOURCE_GROUP 47	MCAST_LEAVE_SOURCE_GROUP	47
#define MCAST_JOIN_SOURCE_GROUP 46	MCAST_JOIN_SOURCE_GROUP	46
#define MCAST_LEAVE_GROUP 45	MCAST_LEAVE_GROUP	45
#define MCAST_UNBLOCK_SOURCE 44	MCAST_UNBLOCK_SOURCE	44
#define MCAST_BLOCK_SOURCE 43	MCAST_BLOCK_SOURCE	43
#define MCAST_JOIN_GROUP 42	MCAST_JOIN_GROUP	42
#define IP_MSFILTER 41	IP_MSFILTER	41
#define IP_DROP_SOURCE_MEMBERSHIP 40	IP_DROP_SOURCE_MEMBERSHIP	40
#define IP_ADD_SOURCE_MEMBERSHIP 39	IP_ADD_SOURCE_MEMBERSHIP	39
#define IP_BLOCK_SOURCE 38	IP_BLOCK_SOURCE	38
#define IP_UNBLOCK_SOURCE 37	IP_UNBLOCK_SOURCE	37
#define IP_DROP_MEMBERSHIP 36	IP_DROP_MEMBERSHIP	36
#define IP_ADD_MEMBERSHIP 35	IP_ADD_MEMBERSHIP	35
#define IP_MULTICAST_LOOP 34	IP_MULTICAST_LOOP	34
#define IP_MULTICAST_TTL 33	IP_MULTICAST_TTL	33
#define IP_MULTICAST_IF 32	IP_MULTICAST_IF	32
#define IP_RETOPTS 7	IP_RETOPTS	7
#define IP_RECVRETOPTS IP_RETOPTS	IP_RECVRETOPTS	IP_RETOPTS
#define IP_RECVOPTS 6	IP_RECVOPTS	6
#define IP_TTL 2	IP_TTL	2
#define IP_TOS 1	IP_TOS	1
#define IP_HDRINCL 3	IP_HDRINCL	3
#define IP_OPTIONS 4	IP_OPTIONS	4
#define __USE_KERNEL_IPV6_DEFS 0	__USE_KERNEL_IPV6_DEFS	0
#ifndef _NETINET_IN_H	_NETINET_IN_H	
#if defined _UAPI_LINUX_IN6_H \	defined _UAPI_LINUX_IN6_H \	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_MISC	__USE_MISC	
#if !__USE_KERNEL_IPV6_DEFS	!__USE_KERNEL_IPV6_DEFS	
#include <bits/uintn-identity.h>	<bits/uintn-identity.h>	
#include <bits/byteswap.h>	<bits/byteswap.h>	
#include <endian.h>	<endian.h>	
#include <bits/in.h>	<bits/in.h>	
#include <bits/types.h>	<bits/types.h>	
#include <sys/socket.h>	<sys/socket.h>	
#include <bits/stdint-uintn.h>	<bits/stdint-uintn.h>	
#include <features.h>	<features.h>	
#define IN6_IS_ADDR_MC_GLOBAL(a) (IN6_IS_ADDR_MULTICAST(a) && ((((const uint8_t *) (a))[1] & 0xf) == 0xe))	IN6_IS_ADDR_MC_GLOBAL(a)	(IN6_IS_ADDR_MULTICAST(a) && ((((const uint8_t *) (a))[1] & 0xf) == 0xe))
#define IN6_IS_ADDR_MC_ORGLOCAL(a) (IN6_IS_ADDR_MULTICAST(a) && ((((const uint8_t *) (a))[1] & 0xf) == 0x8))	IN6_IS_ADDR_MC_ORGLOCAL(a)	(IN6_IS_ADDR_MULTICAST(a) && ((((const uint8_t *) (a))[1] & 0xf) == 0x8))
#define IN6_IS_ADDR_MC_SITELOCAL(a) (IN6_IS_ADDR_MULTICAST(a) && ((((const uint8_t *) (a))[1] & 0xf) == 0x5))	IN6_IS_ADDR_MC_SITELOCAL(a)	(IN6_IS_ADDR_MULTICAST(a) && ((((const uint8_t *) (a))[1] & 0xf) == 0x5))
#define IN6_IS_ADDR_MC_LINKLOCAL(a) (IN6_IS_ADDR_MULTICAST(a) && ((((const uint8_t *) (a))[1] & 0xf) == 0x2))	IN6_IS_ADDR_MC_LINKLOCAL(a)	(IN6_IS_ADDR_MULTICAST(a) && ((((const uint8_t *) (a))[1] & 0xf) == 0x2))
#define IN6_IS_ADDR_MC_NODELOCAL(a) (IN6_IS_ADDR_MULTICAST(a) && ((((const uint8_t *) (a))[1] & 0xf) == 0x1))	IN6_IS_ADDR_MC_NODELOCAL(a)	(IN6_IS_ADDR_MULTICAST(a) && ((((const uint8_t *) (a))[1] & 0xf) == 0x1))
#define IN6_IS_ADDR_MULTICAST(a) (((const uint8_t *) (a))[0] == 0xff)	IN6_IS_ADDR_MULTICAST(a)	(((const uint8_t *) (a))[0] == 0xff)
#define IN6_ARE_ADDR_EQUAL(a,b) (__extension__ ({ const struct in6_addr *__a = (const struct in6_addr *) (a); const struct in6_addr *__b = (const struct in6_addr *) (b); __a->__in6_u.__u6_addr32[0] == __b->__in6_u.__u6_addr32[0] && __a->__in6_u.__u6_addr32[1] == __b->__in6_u.__u6_addr32[1] && __a->__in6_u.__u6_addr32[2] == __b->__in6_u.__u6_addr32[2] && __a->__in6_u.__u6_addr32[3] == __b->__in6_u.__u6_addr32[3]; }))	IN6_ARE_ADDR_EQUAL(a,b)	(__extension__ ({ const struct in6_addr *__a = (const struct in6_addr *) (a); const struct in6_addr *__b = (const struct in6_addr *) (b); __a->__in6_u.__u6_addr32[0] == __b->__in6_u.__u6_addr32[0] && __a->__in6_u.__u6_addr32[1] == __b->__in6_u.__u6_addr32[1] && __a->__in6_u.__u6_addr32[2] == __b->__in6_u.__u6_addr32[2] && __a->__in6_u.__u6_addr32[3] == __b->__in6_u.__u6_addr32[3]; }))
#define IN6_IS_ADDR_V4COMPAT(a) (__extension__ ({ const struct in6_addr *__a = (const struct in6_addr *) (a); __a->__in6_u.__u6_addr32[0] == 0 && __a->__in6_u.__u6_addr32[1] == 0 && __a->__in6_u.__u6_addr32[2] == 0 && ntohl (__a->__in6_u.__u6_addr32[3]) > 1; }))	IN6_IS_ADDR_V4COMPAT(a)	(__extension__ ({ const struct in6_addr *__a = (const struct in6_addr *) (a); __a->__in6_u.__u6_addr32[0] == 0 && __a->__in6_u.__u6_addr32[1] == 0 && __a->__in6_u.__u6_addr32[2] == 0 && ntohl (__a->__in6_u.__u6_addr32[3]) > 1; }))
#define IN6_IS_ADDR_V4MAPPED(a) (__extension__ ({ const struct in6_addr *__a = (const struct in6_addr *) (a); __a->__in6_u.__u6_addr32[0] == 0 && __a->__in6_u.__u6_addr32[1] == 0 && __a->__in6_u.__u6_addr32[2] == htonl (0xffff); }))	IN6_IS_ADDR_V4MAPPED(a)	(__extension__ ({ const struct in6_addr *__a = (const struct in6_addr *) (a); __a->__in6_u.__u6_addr32[0] == 0 && __a->__in6_u.__u6_addr32[1] == 0 && __a->__in6_u.__u6_addr32[2] == htonl (0xffff); }))
#define IN6_IS_ADDR_SITELOCAL(a) (__extension__ ({ const struct in6_addr *__a = (const struct in6_addr *) (a); (__a->__in6_u.__u6_addr32[0] & htonl (0xffc00000)) == htonl (0xfec00000); }))	IN6_IS_ADDR_SITELOCAL(a)	(__extension__ ({ const struct in6_addr *__a = (const struct in6_addr *) (a); (__a->__in6_u.__u6_addr32[0] & htonl (0xffc00000)) == htonl (0xfec00000); }))
#define IN6_IS_ADDR_LINKLOCAL(a) (__extension__ ({ const struct in6_addr *__a = (const struct in6_addr *) (a); (__a->__in6_u.__u6_addr32[0] & htonl (0xffc00000)) == htonl (0xfe800000); }))	IN6_IS_ADDR_LINKLOCAL(a)	(__extension__ ({ const struct in6_addr *__a = (const struct in6_addr *) (a); (__a->__in6_u.__u6_addr32[0] & htonl (0xffc00000)) == htonl (0xfe800000); }))
#define IN6_IS_ADDR_LOOPBACK(a) (__extension__ ({ const struct in6_addr *__a = (const struct in6_addr *) (a); __a->__in6_u.__u6_addr32[0] == 0 && __a->__in6_u.__u6_addr32[1] == 0 && __a->__in6_u.__u6_addr32[2] == 0 && __a->__in6_u.__u6_addr32[3] == htonl (1); }))	IN6_IS_ADDR_LOOPBACK(a)	(__extension__ ({ const struct in6_addr *__a = (const struct in6_addr *) (a); __a->__in6_u.__u6_addr32[0] == 0 && __a->__in6_u.__u6_addr32[1] == 0 && __a->__in6_u.__u6_addr32[2] == 0 && __a->__in6_u.__u6_addr32[3] == htonl (1); }))
#define IN6_IS_ADDR_UNSPECIFIED(a) (__extension__ ({ const struct in6_addr *__a = (const struct in6_addr *) (a); __a->__in6_u.__u6_addr32[0] == 0 && __a->__in6_u.__u6_addr32[1] == 0 && __a->__in6_u.__u6_addr32[2] == 0 && __a->__in6_u.__u6_addr32[3] == 0; }))	IN6_IS_ADDR_UNSPECIFIED(a)	(__extension__ ({ const struct in6_addr *__a = (const struct in6_addr *) (a); __a->__in6_u.__u6_addr32[0] == 0 && __a->__in6_u.__u6_addr32[1] == 0 && __a->__in6_u.__u6_addr32[2] == 0 && __a->__in6_u.__u6_addr32[3] == 0; }))
#define htons(x) __bswap_16 (x)	htons(x)	__bswap_16 (x)
#define htonl(x) __bswap_32 (x)	htonl(x)	__bswap_32 (x)
#define ntohs(x) __bswap_16 (x)	ntohs(x)	__bswap_16 (x)
#define ntohl(x) __bswap_32 (x)	ntohl(x)	__bswap_32 (x)
#define GROUP_FILTER_SIZE(numsrc) (sizeof (struct group_filter) - sizeof (struct sockaddr_storage) + ((numsrc) * sizeof (struct sockaddr_storage)))	GROUP_FILTER_SIZE(numsrc)	(sizeof (struct group_filter) - sizeof (struct sockaddr_storage) + ((numsrc) * sizeof (struct sockaddr_storage)))
#define IP_MSFILTER_SIZE(numsrc) (sizeof (struct ip_msfilter) - sizeof (struct in_addr) + (numsrc) * sizeof (struct in_addr))	IP_MSFILTER_SIZE(numsrc)	(sizeof (struct ip_msfilter) - sizeof (struct in_addr) + (numsrc) * sizeof (struct in_addr))
#define INET6_ADDRSTRLEN 46	INET6_ADDRSTRLEN	46
#define INET_ADDRSTRLEN 16	INET_ADDRSTRLEN	16
#define IN6ADDR_LOOPBACK_INIT { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }	IN6ADDR_LOOPBACK_INIT	{ { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }
#define IN6ADDR_ANY_INIT { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }	IN6ADDR_ANY_INIT	{ { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }
#define s6_addr32 __in6_u.__u6_addr32	s6_addr32	__in6_u.__u6_addr32
#define s6_addr16 __in6_u.__u6_addr16	s6_addr16	__in6_u.__u6_addr16
#define s6_addr __in6_u.__u6_addr8	s6_addr	__in6_u.__u6_addr8
#define INADDR_MAX_LOCAL_GROUP ((in_addr_t) 0xe00000ff)	INADDR_MAX_LOCAL_GROUP	((in_addr_t) 0xe00000ff)
#define INADDR_ALLSNOOPERS_GROUP ((in_addr_t) 0xe000006a)	INADDR_ALLSNOOPERS_GROUP	((in_addr_t) 0xe000006a)
#define INADDR_ALLRTRS_GROUP ((in_addr_t) 0xe0000002)	INADDR_ALLRTRS_GROUP	((in_addr_t) 0xe0000002)
#define INADDR_ALLHOSTS_GROUP ((in_addr_t) 0xe0000001)	INADDR_ALLHOSTS_GROUP	((in_addr_t) 0xe0000001)
#define INADDR_UNSPEC_GROUP ((in_addr_t) 0xe0000000)	INADDR_UNSPEC_GROUP	((in_addr_t) 0xe0000000)
#define INADDR_LOOPBACK ((in_addr_t) 0x7f000001)	INADDR_LOOPBACK	((in_addr_t) 0x7f000001)
#define IN_LOOPBACKNET 127	IN_LOOPBACKNET	127
#define INADDR_NONE ((in_addr_t) 0xffffffff)	INADDR_NONE	((in_addr_t) 0xffffffff)
#define INADDR_BROADCAST ((in_addr_t) 0xffffffff)	INADDR_BROADCAST	((in_addr_t) 0xffffffff)
#define INADDR_ANY ((in_addr_t) 0x00000000)	INADDR_ANY	((in_addr_t) 0x00000000)
#define IN_BADCLASS(a) ((((in_addr_t)(a)) & 0xf0000000) == 0xf0000000)	IN_BADCLASS(a)	((((in_addr_t)(a)) & 0xf0000000) == 0xf0000000)
#define IN_EXPERIMENTAL(a) ((((in_addr_t)(a)) & 0xe0000000) == 0xe0000000)	IN_EXPERIMENTAL(a)	((((in_addr_t)(a)) & 0xe0000000) == 0xe0000000)
#define IN_MULTICAST(a) IN_CLASSD(a)	IN_MULTICAST(a)	IN_CLASSD(a)
#define IN_CLASSD(a) ((((in_addr_t)(a)) & 0xf0000000) == 0xe0000000)	IN_CLASSD(a)	((((in_addr_t)(a)) & 0xf0000000) == 0xe0000000)
#define IN_CLASSC_HOST (0xffffffff & ~IN_CLASSC_NET)	IN_CLASSC_HOST	(0xffffffff & ~IN_CLASSC_NET)
#define IN_CLASSC_NSHIFT 8	IN_CLASSC_NSHIFT	8
#define IN_CLASSC_NET 0xffffff00	IN_CLASSC_NET	0xffffff00
#define IN_CLASSC(a) ((((in_addr_t)(a)) & 0xe0000000) == 0xc0000000)	IN_CLASSC(a)	((((in_addr_t)(a)) & 0xe0000000) == 0xc0000000)
#define IN_CLASSB_MAX 65536	IN_CLASSB_MAX	65536
#define IN_CLASSB_HOST (0xffffffff & ~IN_CLASSB_NET)	IN_CLASSB_HOST	(0xffffffff & ~IN_CLASSB_NET)
#define IN_CLASSB_NSHIFT 16	IN_CLASSB_NSHIFT	16
#define IN_CLASSB_NET 0xffff0000	IN_CLASSB_NET	0xffff0000
#define IN_CLASSB(a) ((((in_addr_t)(a)) & 0xc0000000) == 0x80000000)	IN_CLASSB(a)	((((in_addr_t)(a)) & 0xc0000000) == 0x80000000)
#define IN_CLASSA_MAX 128	IN_CLASSA_MAX	128
#define IN_CLASSA_HOST (0xffffffff & ~IN_CLASSA_NET)	IN_CLASSA_HOST	(0xffffffff & ~IN_CLASSA_NET)
#define IN_CLASSA_NSHIFT 24	IN_CLASSA_NSHIFT	24
#define IN_CLASSA_NET 0xff000000	IN_CLASSA_NET	0xff000000
#define IN_CLASSA(a) ((((in_addr_t)(a)) & 0x80000000) == 0)	IN_CLASSA(a)	((((in_addr_t)(a)) & 0x80000000) == 0)
#define IPPROTO_MH IPPROTO_MH	IPPROTO_MH	IPPROTO_MH
#define IPPROTO_DSTOPTS IPPROTO_DSTOPTS	IPPROTO_DSTOPTS	IPPROTO_DSTOPTS
#define IPPROTO_NONE IPPROTO_NONE	IPPROTO_NONE	IPPROTO_NONE
#define IPPROTO_ICMPV6 IPPROTO_ICMPV6	IPPROTO_ICMPV6	IPPROTO_ICMPV6
#define IPPROTO_FRAGMENT IPPROTO_FRAGMENT	IPPROTO_FRAGMENT	IPPROTO_FRAGMENT
#define IPPROTO_ROUTING IPPROTO_ROUTING	IPPROTO_ROUTING	IPPROTO_ROUTING
#define IPPROTO_HOPOPTS IPPROTO_HOPOPTS	IPPROTO_HOPOPTS	IPPROTO_HOPOPTS
#define IPPROTO_RAW IPPROTO_RAW	IPPROTO_RAW	IPPROTO_RAW
#define IPPROTO_MPLS IPPROTO_MPLS	IPPROTO_MPLS	IPPROTO_MPLS
#define IPPROTO_UDPLITE IPPROTO_UDPLITE	IPPROTO_UDPLITE	IPPROTO_UDPLITE
#define IPPROTO_SCTP IPPROTO_SCTP	IPPROTO_SCTP	IPPROTO_SCTP
#define IPPROTO_COMP IPPROTO_COMP	IPPROTO_COMP	IPPROTO_COMP
#define IPPROTO_PIM IPPROTO_PIM	IPPROTO_PIM	IPPROTO_PIM
#define IPPROTO_ENCAP IPPROTO_ENCAP	IPPROTO_ENCAP	IPPROTO_ENCAP
#define IPPROTO_BEETPH IPPROTO_BEETPH	IPPROTO_BEETPH	IPPROTO_BEETPH
#define IPPROTO_MTP IPPROTO_MTP	IPPROTO_MTP	IPPROTO_MTP
#define IPPROTO_AH IPPROTO_AH	IPPROTO_AH	IPPROTO_AH
#define IPPROTO_ESP IPPROTO_ESP	IPPROTO_ESP	IPPROTO_ESP
#define IPPROTO_GRE IPPROTO_GRE	IPPROTO_GRE	IPPROTO_GRE
#define IPPROTO_RSVP IPPROTO_RSVP	IPPROTO_RSVP	IPPROTO_RSVP
#define IPPROTO_IPV6 IPPROTO_IPV6	IPPROTO_IPV6	IPPROTO_IPV6
#define IPPROTO_DCCP IPPROTO_DCCP	IPPROTO_DCCP	IPPROTO_DCCP
#define IPPROTO_TP IPPROTO_TP	IPPROTO_TP	IPPROTO_TP
#define IPPROTO_IDP IPPROTO_IDP	IPPROTO_IDP	IPPROTO_IDP
#define IPPROTO_UDP IPPROTO_UDP	IPPROTO_UDP	IPPROTO_UDP
#define IPPROTO_PUP IPPROTO_PUP	IPPROTO_PUP	IPPROTO_PUP
#define IPPROTO_EGP IPPROTO_EGP	IPPROTO_EGP	IPPROTO_EGP
#define IPPROTO_TCP IPPROTO_TCP	IPPROTO_TCP	IPPROTO_TCP
#define IPPROTO_IPIP IPPROTO_IPIP	IPPROTO_IPIP	IPPROTO_IPIP
#define IPPROTO_IGMP IPPROTO_IGMP	IPPROTO_IGMP	IPPROTO_IGMP
#define IPPROTO_ICMP IPPROTO_ICMP	IPPROTO_ICMP	IPPROTO_ICMP
#define IPPROTO_IP IPPROTO_IP	IPPROTO_IP	IPPROTO_IP
#ifndef _NETINET_IN_H	_NETINET_IN_H	
#if !__USE_KERNEL_IPV6_DEFS	!__USE_KERNEL_IPV6_DEFS	
#ifndef INADDR_LOOPBACK	INADDR_LOOPBACK	
#if !__USE_KERNEL_IPV6_DEFS	!__USE_KERNEL_IPV6_DEFS	
#ifdef __USE_MISC	__USE_MISC	
#if !__USE_KERNEL_IPV6_DEFS	!__USE_KERNEL_IPV6_DEFS	
#ifdef __USE_MISC	__USE_MISC	
#if !__USE_KERNEL_IPV6_DEFS	!__USE_KERNEL_IPV6_DEFS	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __OPTIMIZE__	__OPTIMIZE__	
#if __BYTE_ORDER == __BIG_ENDIAN	__BYTE_ORDER == __BIG_ENDIAN	
#if __BYTE_ORDER == __LITTLE_ENDIAN	__BYTE_ORDER == __LITTLE_ENDIAN	
#ifdef __GNUC__	__GNUC__	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_GNU	__USE_GNU	
#if !__USE_KERNEL_IPV6_DEFS	!__USE_KERNEL_IPV6_DEFS	
#include <netinet/in.h>	<netinet/in.h>	
#include <features.h>	<features.h>	
#define _ARPA_INET_H 1	_ARPA_INET_H	1
#ifndef _ARPA_INET_H	_ARPA_INET_H	
#ifndef __socklen_t_defined	__socklen_t_defined	
#ifdef __USE_MISC	__USE_MISC	
#include <features.h>	<features.h>	
#define LOCK_NB 4	LOCK_NB	4
#define __LOCK_ATOMIC 16	__LOCK_ATOMIC	16
#define LOCK_UN 8	LOCK_UN	8
#define LOCK_EX 2	LOCK_EX	2
#define LOCK_SH 1	LOCK_SH	1
#define L_XTND 2	L_XTND	2
#define L_INCR 1	L_INCR	1
#define L_SET 0	L_SET	0
#define _SYS_FILE_H 1	_SYS_FILE_H	1
#ifndef _SYS_FILE_H	_SYS_FILE_H	
#ifndef _FCNTL_H	_FCNTL_H	
#ifndef L_SET	L_SET	
#include <string>	<string>	
#include <stddef.h>	<stddef.h>	
#define UTF8_SKIP_BOM 0x02	UTF8_SKIP_BOM	0x02
#define UTF8_IGNORE_ERROR 0x01	UTF8_IGNORE_ERROR	0x01
#define _UTF8_H_	_UTF8_H_	
#ifndef _UTF8_H_	_UTF8_H_	
#include <sys/socket.h>	<sys/socket.h>	
#include <sys/types.h>	<sys/types.h>	
#include <features.h>	<features.h>	
#define IF_NAMESIZE 16	IF_NAMESIZE	16
#define IFNAMSIZ IF_NAMESIZE	IFNAMSIZ	IF_NAMESIZE
#define _IOT_ifconf _IOT(_IOTS(struct ifconf),1,0,0,0,0)	_IOT_ifconf	_IOT(_IOTS(struct ifconf),1,0,0,0,0)
#define ifc_req ifc_ifcu.ifcu_req	ifc_req	ifc_ifcu.ifcu_req
#define ifc_buf ifc_ifcu.ifcu_buf	ifc_buf	ifc_ifcu.ifcu_buf
#define _IOT_ifreq_int _IOT(_IOTS(char),IFNAMSIZ,_IOTS(int),1,0,0)	_IOT_ifreq_int	_IOT(_IOTS(char),IFNAMSIZ,_IOTS(int),1,0,0)
#define _IOT_ifreq_short _IOT(_IOTS(char),IFNAMSIZ,_IOTS(short),1,0,0)	_IOT_ifreq_short	_IOT(_IOTS(char),IFNAMSIZ,_IOTS(short),1,0,0)
#define _IOT_ifreq _IOT(_IOTS(char),IFNAMSIZ,_IOTS(char),16,0,0)	_IOT_ifreq	_IOT(_IOTS(char),IFNAMSIZ,_IOTS(char),16,0,0)
#define ifr_newname ifr_ifru.ifru_newname	ifr_newname	ifr_ifru.ifru_newname
#define ifr_qlen ifr_ifru.ifru_ivalue	ifr_qlen	ifr_ifru.ifru_ivalue
#define ifr_bandwidth ifr_ifru.ifru_ivalue	ifr_bandwidth	ifr_ifru.ifru_ivalue
#define ifr_ifindex ifr_ifru.ifru_ivalue	ifr_ifindex	ifr_ifru.ifru_ivalue
#define ifr_data ifr_ifru.ifru_data	ifr_data	ifr_ifru.ifru_data
#define ifr_slave ifr_ifru.ifru_slave	ifr_slave	ifr_ifru.ifru_slave
#define ifr_map ifr_ifru.ifru_map	ifr_map	ifr_ifru.ifru_map
#define ifr_mtu ifr_ifru.ifru_mtu	ifr_mtu	ifr_ifru.ifru_mtu
#define ifr_metric ifr_ifru.ifru_ivalue	ifr_metric	ifr_ifru.ifru_ivalue
#define ifr_flags ifr_ifru.ifru_flags	ifr_flags	ifr_ifru.ifru_flags
#define ifr_netmask ifr_ifru.ifru_netmask	ifr_netmask	ifr_ifru.ifru_netmask
#define ifr_broadaddr ifr_ifru.ifru_broadaddr	ifr_broadaddr	ifr_ifru.ifru_broadaddr
#define ifr_dstaddr ifr_ifru.ifru_dstaddr	ifr_dstaddr	ifr_ifru.ifru_dstaddr
#define ifr_addr ifr_ifru.ifru_addr	ifr_addr	ifr_ifru.ifru_addr
#define ifr_hwaddr ifr_ifru.ifru_hwaddr	ifr_hwaddr	ifr_ifru.ifru_hwaddr
#define ifr_name ifr_ifrn.ifrn_name	ifr_name	ifr_ifrn.ifrn_name
#define IFHWADDRLEN 6	IFHWADDRLEN	6
#define ifa_dstaddr ifa_ifu.ifu_dstaddr	ifa_dstaddr	ifa_ifu.ifu_dstaddr
#define ifa_broadaddr ifa_ifu.ifu_broadaddr	ifa_broadaddr	ifa_ifu.ifu_broadaddr
#define IFF_DYNAMIC IFF_DYNAMIC	IFF_DYNAMIC	IFF_DYNAMIC
#define IFF_AUTOMEDIA IFF_AUTOMEDIA	IFF_AUTOMEDIA	IFF_AUTOMEDIA
#define IFF_PORTSEL IFF_PORTSEL	IFF_PORTSEL	IFF_PORTSEL
#define IFF_MULTICAST IFF_MULTICAST	IFF_MULTICAST	IFF_MULTICAST
#define IFF_SLAVE IFF_SLAVE	IFF_SLAVE	IFF_SLAVE
#define IFF_MASTER IFF_MASTER	IFF_MASTER	IFF_MASTER
#define IFF_ALLMULTI IFF_ALLMULTI	IFF_ALLMULTI	IFF_ALLMULTI
#define IFF_PROMISC IFF_PROMISC	IFF_PROMISC	IFF_PROMISC
#define IFF_NOARP IFF_NOARP	IFF_NOARP	IFF_NOARP
#define IFF_RUNNING IFF_RUNNING	IFF_RUNNING	IFF_RUNNING
#define IFF_NOTRAILERS IFF_NOTRAILERS	IFF_NOTRAILERS	IFF_NOTRAILERS
#define IFF_POINTOPOINT IFF_POINTOPOINT	IFF_POINTOPOINT	IFF_POINTOPOINT
#define IFF_LOOPBACK IFF_LOOPBACK	IFF_LOOPBACK	IFF_LOOPBACK
#define IFF_DEBUG IFF_DEBUG	IFF_DEBUG	IFF_DEBUG
#define IFF_BROADCAST IFF_BROADCAST	IFF_BROADCAST	IFF_BROADCAST
#define IFF_UP IFF_UP	IFF_UP	IFF_UP
#define _NET_IF_H 1	_NET_IF_H	1
#ifndef _NET_IF_H	_NET_IF_H	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_MISC	__USE_MISC	
#include <sys/socket.h>	<sys/socket.h>	
#include <net/if.h>	<net/if.h>	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wcstringutil.h"""	"""wcstringutil.h"""	
"#include ""util.h"""	"""util.h"""	
"#include ""utf8.h"""	"""utf8.h"""	
"#include ""path.h"""	"""path.h"""	
"#include ""flog.h"""	"""flog.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""env_universal_common.h"""	"""env_universal_common.h"""	
"#include ""env.h"""	"""env.h"""	
"#include ""common.h"""	"""common.h"""	
#include <utility>	<utility>	
#include <type_traits>	<type_traits>	
#include <string>	<string>	
#include <map>	<map>	
#include <cwchar>	<cwchar>	
#include <atomic>	<atomic>	
#include <unistd.h>	<unistd.h>	
#include <sys/types.h>	<sys/types.h>	
#include <sys/time.h>	<sys/time.h>	
#include <sys/stat.h>	<sys/stat.h>	
#include <sys/select.h>	<sys/select.h>	
#include <cstring>	<cstring>	
#include <stdlib.h>	<stdlib.h>	
#include <stdint.h>	<stdint.h>	
#include <stddef.h>	<stddef.h>	
#include <pwd.h>	<pwd.h>	
#include <sys/ioctl.h>	<sys/ioctl.h>	
#include <netinet/in.h>	<netinet/in.h>	
#include <limits.h>	<limits.h>	
#include <sys/file.h>	<sys/file.h>	
#include <fcntl.h>	<fcntl.h>	
#include <errno.h>	<errno.h>	
#include <arpa/inet.h>	<arpa/inet.h>	
"#include ""config.h"""	"""config.h"""	
#define MAC_ADDRESS_MAX_LEN 6	MAC_ADDRESS_MAX_LEN	6
#define HOSTNAME_LEN 255	HOSTNAME_LEN	255
"#define SAVE_MSG ""# This file contains fish universal variable definitions.\n"""	SAVE_MSG	"""# This file contains fish universal variable definitions.\n"""
"#define UVARS_VERSION_3_0 ""3.0"""	UVARS_VERSION_3_0	"""3.0"""
"#define PARSE_ERR L""Unable to parse universal variable message: '%ls'"""	PARSE_ERR	"L""Unable to parse universal variable message: '%ls'"""
#define NAMED_PIPE_FLASH_DURATION_USEC (1e5)	NAMED_PIPE_FLASH_DURATION_USEC	(1e5)
#define SUSTAINED_READABILITY_CLEANUP_DURATION_USEC (5 * 1e6)	SUSTAINED_READABILITY_CLEANUP_DURATION_USEC	(5 * 1e6)
#if !defined(__APPLE__) && !defined(__CYGWIN__)	!defined(__APPLE__) && !defined(__CYGWIN__)	
#ifdef __CYGWIN__	__CYGWIN__	
#ifdef HAVE_SYS_SELECT_H	HAVE_SYS_SELECT_H	
#ifdef __APPLE__	__APPLE__	
#ifdef __HAIKU__	__HAIKU__	
#ifdef O_EXLOCK	O_EXLOCK	
#ifdef O_EXLOCK	O_EXLOCK	
#if HAVE_CLOCK_GETTIME && HAVE_FUTIMENS	HAVE_CLOCK_GETTIME && HAVE_FUTIMENS	
#ifdef SIOCGIFHWADDR	SIOCGIFHWADDR	
#elif defined(HAVE_GETIFADDRS)	defined(HAVE_GETIFADDRS)	
#ifdef __CYGWIN__	__CYGWIN__	
#ifdef FISH_NOTIFYD_AVAILABLE	FISH_NOTIFYD_AVAILABLE	
#if !defined(__APPLE__) && !defined(__CYGWIN__)	!defined(__APPLE__) && !defined(__CYGWIN__)	
#if !defined(__APPLE__) && !defined(__CYGWIN__)	!defined(__APPLE__) && !defined(__CYGWIN__)	
#ifdef FISH_NOTIFYD_AVAILABLE	FISH_NOTIFYD_AVAILABLE	
#elif defined(__CYGWIN__)	defined(__CYGWIN__)	
#if !defined(__APPLE__) && !defined(__CYGWIN__)	!defined(__APPLE__) && !defined(__CYGWIN__)	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""signal.h"""	"""signal.h"""	
"#include ""proc.h"""	"""proc.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""input_common.h"""	"""input_common.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""common.h"""	"""common.h"""	
#include <type_traits>	<type_traits>	
#include <string>	<string>	
#include <memory>	<memory>	
#include <functional>	<functional>	
#include <atomic>	<atomic>	
#include <algorithm>	<algorithm>	
#include <unistd.h>	<unistd.h>	
#include <stddef.h>	<stddef.h>	
#include <signal.h>	<signal.h>	
"#include ""event.h"""	"""event.h"""	
"#include ""config.h"""	"""config.h"""	
#if 0	0	
#include <bits/types/sigset_t.h>	<bits/types/sigset_t.h>	
#include <sys/types.h>	<sys/types.h>	
#include <sched.h>	<sched.h>	
#include <features.h>	<features.h>	
#define POSIX_SPAWN_SETSID 0x80	POSIX_SPAWN_SETSID	0x80
#define POSIX_SPAWN_USEVFORK 0x40	POSIX_SPAWN_USEVFORK	0x40
#define POSIX_SPAWN_SETSCHEDULER 0x20	POSIX_SPAWN_SETSCHEDULER	0x20
#define POSIX_SPAWN_SETSCHEDPARAM 0x10	POSIX_SPAWN_SETSCHEDPARAM	0x10
#define POSIX_SPAWN_SETSIGMASK 0x08	POSIX_SPAWN_SETSIGMASK	0x08
#define POSIX_SPAWN_SETSIGDEF 0x04	POSIX_SPAWN_SETSIGDEF	0x04
#define POSIX_SPAWN_SETPGROUP 0x02	POSIX_SPAWN_SETPGROUP	0x02
#define POSIX_SPAWN_RESETIDS 0x01	POSIX_SPAWN_RESETIDS	0x01
#define _SPAWN_H 1	_SPAWN_H	1
#ifndef _SPAWN_H	_SPAWN_H	
#ifdef __USE_GNU	__USE_GNU	
#ifdef __USE_GNU	__USE_GNU	
#include <bits/uses_allocator.h>	<bits/uses_allocator.h>	
#include <debug/debug.h>	<debug/debug.h>	
#include <bits/concept_check.h>	<bits/concept_check.h>	
#define _STL_STACK_H 1	_STL_STACK_H	1
#ifndef _STL_STACK_H	_STL_STACK_H	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_CONCEPT_CHECKS	_GLIBCXX_CONCEPT_CHECKS	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201703L	__cplusplus >= 201703L	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201402L	__cplusplus > 201402L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201402L || !defined(__STRICT_ANSI__)	__cplusplus > 201402L || !defined(__STRICT_ANSI__)	
#if __cpp_deduction_guides >= 201606	__cpp_deduction_guides >= 201606	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus > 201402L || !defined(__STRICT_ANSI__)	__cplusplus > 201402L || !defined(__STRICT_ANSI__)	
#include <bits/stl_stack.h>	<bits/stl_stack.h>	
#include <deque>	<deque>	
#define _GLIBCXX_STACK 1	_GLIBCXX_STACK	1
#ifndef _GLIBCXX_STACK	_GLIBCXX_STACK	
#pragma GCC system_header	GCC system_header	
#include <spawn.h>	<spawn.h>	
"#include ""maybe.h"""	"""maybe.h"""	
#include <unistd.h>	<unistd.h>	
#include <stddef.h>	<stddef.h>	
"#include ""config.h"""	"""config.h"""	
#define FISH_USE_POSIX_SPAWN HAVE_SPAWN_H	FISH_USE_POSIX_SPAWN	HAVE_SPAWN_H
#define FISH_POSTFORK_H	FISH_POSTFORK_H	
#ifndef FISH_POSTFORK_H	FISH_POSTFORK_H	
#if HAVE_SPAWN_H	HAVE_SPAWN_H	
#ifndef FISH_USE_POSIX_SPAWN	FISH_USE_POSIX_SPAWN	
#ifdef FISH_USE_POSIX_SPAWN	FISH_USE_POSIX_SPAWN	
"#include ""common.h"""	"""common.h"""	
#include <chrono>	<chrono>	
#include <sys/types.h>	<sys/types.h>	
#include <sys/time.h>	<sys/time.h>	
#include <sys/resource.h>	<sys/resource.h>	
#define FISH_TIMER_H	FISH_TIMER_H	
#ifndef FISH_TIMER_H	FISH_TIMER_H	
"#include ""common.h"""	"""common.h"""	
"#include ""config.h"""	"""config.h"""	
#define FISH_TRACE_H	FISH_TRACE_H	
#ifndef FISH_TRACE_H	FISH_TRACE_H	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""trace.h"""	"""trace.h"""	
"#include ""timer.h"""	"""timer.h"""	
"#include ""signal.h"""	"""signal.h"""	
"#include ""redirection.h"""	"""redirection.h"""	
"#include ""reader.h"""	"""reader.h"""	
"#include ""proc.h"""	"""proc.h"""	
"#include ""postfork.h"""	"""postfork.h"""	
"#include ""path.h"""	"""path.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""parse_tree.h"""	"""parse_tree.h"""	
"#include ""null_terminated_array.h"""	"""null_terminated_array.h"""	
"#include ""iothread.h"""	"""iothread.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""function.h"""	"""function.h"""	
"#include ""flog.h"""	"""flog.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""exec.h"""	"""exec.h"""	
"#include ""env.h"""	"""env.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
#include <vector>	<vector>	
#include <type_traits>	<type_traits>	
#include <string>	<string>	
#include <stack>	<stack>	
#include <memory>	<memory>	
#include <map>	<map>	
#include <functional>	<functional>	
#include <cstring>	<cstring>	
#include <algorithm>	<algorithm>	
#include <unistd.h>	<unistd.h>	
#include <sys/wait.h>	<sys/wait.h>	
#include <stdio.h>	<stdio.h>	
#include <spawn.h>	<spawn.h>	
#include <signal.h>	<signal.h>	
#include <fcntl.h>	<fcntl.h>	
#include <errno.h>	<errno.h>	
"#include ""config.h"""	"""config.h"""	
#ifdef HAVE_SIGINFO_H	HAVE_SIGINFO_H	
#ifdef HAVE_SPAWN_H	HAVE_SPAWN_H	
#if FISH_USE_POSIX_SPAWN	FISH_USE_POSIX_SPAWN	
#define __uid_t_defined	__uid_t_defined	
#define __gid_t_defined	__gid_t_defined	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wildcard.h"""	"""wildcard.h"""	
"#include ""wcstringutil.h"""	"""wcstringutil.h"""	
"#include ""util.h"""	"""util.h"""	
"#include ""reader.h"""	"""reader.h"""	
"#include ""proc.h"""	"""proc.h"""	
"#include ""path.h"""	"""path.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""parse_util.h"""	"""parse_util.h"""	
"#include ""parse_constants.h"""	"""parse_constants.h"""	
"#include ""iothread.h"""	"""iothread.h"""	
"#include ""history.h"""	"""history.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""expand.h"""	"""expand.h"""	
"#include ""exec.h"""	"""exec.h"""	
"#include ""env.h"""	"""env.h"""	
"#include ""complete.h"""	"""complete.h"""	
"#include ""common.h"""	"""common.h"""	
#include <vector>	<vector>	
#include <utility>	<utility>	
#include <type_traits>	<type_traits>	
#include <memory>	<memory>	
#include <map>	<map>	
#include <functional>	<functional>	
#include <algorithm>	<algorithm>	
#include <sys/stat.h>	<sys/stat.h>	
#include <dirent.h>	<dirent.h>	
#include <cwchar>	<cwchar>	
#include <cstring>	<cstring>	
#include <wctype.h>	<wctype.h>	
#include <unistd.h>	<unistd.h>	
#include <stdlib.h>	<stdlib.h>	
#include <stddef.h>	<stddef.h>	
#include <stdarg.h>	<stdarg.h>	
#include <pwd.h>	<pwd.h>	
#include <errno.h>	<errno.h>	
"#include ""config.h"""	"""config.h"""	
"#define UNCLEAN_FIRST L""~%"""	UNCLEAN_FIRST	"L""~%"""
"#define UNCLEAN L""$*?\\\""'({})"""	UNCLEAN	"L""$*?\\\""'({})"""
#ifdef SunOS	SunOS	
#ifdef __APPLE__	__APPLE__	
#define __ino64_t_defined	__ino64_t_defined	
#define __ino_t_defined	__ino_t_defined	
#include <features.h>	<features.h>	
#define __GNU_GETTEXT_SUPPORTED_REVISION(major) ((major) == 0 ? 1 : -1)	__GNU_GETTEXT_SUPPORTED_REVISION(major)	((major) == 0 ? 1 : -1)
#define __USE_GNU_GETTEXT 1	__USE_GNU_GETTEXT	1
#define _LIBINTL_H 1	_LIBINTL_H	1
#ifndef _LIBINTL_H	_LIBINTL_H	
#if defined __OPTIMIZE__ && !defined __cplusplus	defined __OPTIMIZE__ && !defined __cplusplus	
#include <cstdint>	<cstdint>	
#include <cstddef>	<cstddef>	
#include <iterator>	<iterator>	
#include <algorithm>	<algorithm>	
#define WIDECHAR_WIDTH_H	WIDECHAR_WIDTH_H	
#ifndef WIDECHAR_WIDTH_H	WIDECHAR_WIDTH_H	
"#include ""widecharwidth/widechar_width.h"""	"""widecharwidth/widechar_width.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""common.h"""	"""common.h"""	
#include <cwchar>	<cwchar>	
#include <signal.h>	<signal.h>	
#include <term.h>	<term.h>	
#include <curses.h>	<curses.h>	
#include <libintl.h>	<libintl.h>	
#include <cwchar>	<cwchar>	
#include <cstring>	<cstring>	
#include <algorithm>	<algorithm>	
#include <wctype.h>	<wctype.h>	
#include <unistd.h>	<unistd.h>	
#include <sys/types.h>	<sys/types.h>	
#include <sys/stat.h>	<sys/stat.h>	
#include <stdlib.h>	<stdlib.h>	
#include <stdio.h>	<stdio.h>	
#include <stdarg.h>	<stdarg.h>	
#include <limits.h>	<limits.h>	
#include <fcntl.h>	<fcntl.h>	
#include <errno.h>	<errno.h>	
#include <dirent.h>	<dirent.h>	
"#include ""config.h"""	"""config.h"""	
#if HAVE_GETTEXT	HAVE_GETTEXT	
#if HAVE_CURSES_H	HAVE_CURSES_H	
#elif HAVE_NCURSES_H	HAVE_NCURSES_H	
#elif HAVE_NCURSES_CURSES_H	HAVE_NCURSES_CURSES_H	
#if HAVE_TERM_H	HAVE_TERM_H	
#elif HAVE_NCURSES_TERM_H	HAVE_NCURSES_TERM_H	
#if defined(TPARM_SOLARIS_KLUDGE)	defined(TPARM_SOLARIS_KLUDGE)	
#if HAVE_MKOSTEMP	HAVE_MKOSTEMP	
#ifndef HAVE_WCSDUP	HAVE_WCSDUP	
#ifndef HAVE_STD__WCSDUP	HAVE_STD__WCSDUP	
#ifndef HAVE_WCSCASECMP	HAVE_WCSCASECMP	
#ifndef HAVE_STD__WCSCASECMP	HAVE_STD__WCSCASECMP	
#ifndef HAVE_WCSNCASECMP	HAVE_WCSNCASECMP	
#ifndef HAVE_STD__WCSNCASECMP	HAVE_STD__WCSNCASECMP	
#ifndef HAVE_WCSNDUP	HAVE_WCSNDUP	
#ifndef HAVE_WCSLCPY	HAVE_WCSLCPY	
#ifndef HAVE_FUTIMES	HAVE_FUTIMES	
#if HAVE_GETTEXT	HAVE_GETTEXT	
#ifndef HAVE_KILLPG	HAVE_KILLPG	
#ifndef HAVE_FLOCK	HAVE_FLOCK	
#if !defined(HAVE_WCSTOD_L) && !defined(__NetBSD__)	!defined(HAVE_WCSTOD_L) && !defined(__NetBSD__)	
#define __pid_t_defined	__pid_t_defined	
"#include ""maybe.h"""	"""maybe.h"""	
"#include ""common.h"""	"""common.h"""	
#include <sys/select.h>	<sys/select.h>	
#include <functional>	<functional>	
#include <cstdint>	<cstdint>	
#include <chrono>	<chrono>	
#define FISH_FD_MONITOR_H	FISH_FD_MONITOR_H	
#ifndef FISH_FD_MONITOR_H	FISH_FD_MONITOR_H	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""iothread.h"""	"""iothread.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""flog.h"""	"""flog.h"""	
"#include ""fd_monitor.h"""	"""fd_monitor.h"""	
"#include ""config.h"""	"""config.h"""	
#define optional_argument 2	optional_argument	2
#define required_argument 1	required_argument	1
#define no_argument 0	no_argument	0
#define _GETOPT_EXT_H 1	_GETOPT_EXT_H	1
#ifndef _GETOPT_EXT_H	_GETOPT_EXT_H	
#define __getopt_argv_const const	__getopt_argv_const	const
#include <bits/getopt_ext.h>	<bits/getopt_ext.h>	
#include <bits/getopt_core.h>	<bits/getopt_core.h>	
#include <features.h>	<features.h>	
#define _GETOPT_H 1	_GETOPT_H	1
#ifndef _GETOPT_H	_GETOPT_H	
#ifndef __getopt_argv_const	__getopt_argv_const	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wcstringutil.h"""	"""wcstringutil.h"""	
"#include ""signal.h"""	"""signal.h"""	
"#include ""reader.h"""	"""reader.h"""	
"#include ""proc.h"""	"""proc.h"""	
"#include ""path.h"""	"""path.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""intern.h"""	"""intern.h"""	
"#include ""history.h"""	"""history.h"""	
"#include ""future_feature_flags.h"""	"""future_feature_flags.h"""	
"#include ""function.h"""	"""function.h"""	
"#include ""flog.h"""	"""flog.h"""	
"#include ""fish_version.h"""	"""fish_version.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""expand.h"""	"""expand.h"""	
"#include ""event.h"""	"""event.h"""	
"#include ""env.h"""	"""env.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
#include <vector>	<vector>	
#include <string>	<string>	
#include <memory>	<memory>	
#include <cwchar>	<cwchar>	
#include <cstring>	<cstring>	
#include <unistd.h>	<unistd.h>	
#include <sys/stat.h>	<sys/stat.h>	
#include <sys/resource.h>	<sys/resource.h>	
#include <stdlib.h>	<stdlib.h>	
#include <stdio.h>	<stdio.h>	
#include <stdint.h>	<stdint.h>	
#include <stddef.h>	<stddef.h>	
#include <locale.h>	<locale.h>	
#include <limits.h>	<limits.h>	
#include <getopt.h>	<getopt.h>	
#include <fcntl.h>	<fcntl.h>	
#include <errno.h>	<errno.h>	
"#include ""config.h"""	"""config.h"""	
#ifndef HAVE_GETRUSAGE	HAVE_GETRUSAGE	
#if defined(__APPLE__) && defined(__MACH__)	defined(__APPLE__) && defined(__MACH__)	
#ifdef CMAKE_BINARY_DIR	CMAKE_BINARY_DIR	
"#define BINDIR L""/usr/local/bin"""	BINDIR	"L""/usr/local/bin"""
"#define DOCDIR L""/usr/local/share/doc/fish"""	DOCDIR	"L""/usr/local/share/doc/fish"""
"#define SYSCONFDIR L""/usr/local/etc"""	SYSCONFDIR	"L""/usr/local/etc"""
"#define DATADIR L""/usr/local/share"""	DATADIR	"L""/usr/local/share"""
"#define CMAKE_BINARY_DIR ""/opt/src/_lgtm_build_dir"""	CMAKE_BINARY_DIR	"""/opt/src/_lgtm_build_dir"""
"#define CMAKE_SOURCE_DIR ""/opt/src"""	CMAKE_SOURCE_DIR	"""/opt/src"""
#define FISH_PRINT_HELP_H	FISH_PRINT_HELP_H	
#ifndef FISH_PRINT_HELP_H	FISH_PRINT_HELP_H	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""print_help.h"""	"""print_help.h"""	
"#include ""parse_util.h"""	"""parse_util.h"""	
"#include ""parse_constants.h"""	"""parse_constants.h"""	
"#include ""output.h"""	"""output.h"""	
"#include ""operation_context.h"""	"""operation_context.h"""	
"#include ""highlight.h"""	"""highlight.h"""	
"#include ""flog.h"""	"""flog.h"""	
"#include ""fish_version.h"""	"""fish_version.h"""	
"#include ""expand.h"""	"""expand.h"""	
"#include ""env.h"""	"""env.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""color.h"""	"""color.h"""	
"#include ""ast.h"""	"""ast.h"""	
#include <vector>	<vector>	
#include <tuple>	<tuple>	
#include <string>	<string>	
#include <stack>	<stack>	
#include <memory>	<memory>	
#include <cwchar>	<cwchar>	
#include <cstring>	<cstring>	
#include <wctype.h>	<wctype.h>	
#include <stdlib.h>	<stdlib.h>	
#include <stdio.h>	<stdio.h>	
#include <stddef.h>	<stddef.h>	
#include <locale.h>	<locale.h>	
#include <getopt.h>	<getopt.h>	
#include <errno.h>	<errno.h>	
"#include ""config.h"""	"""config.h"""	
"#define P(x) L""fish_color_"" #x"	P(x)	"L""fish_color_"" #x"
#define TEST_ROLE(x) case highlight_role_t::x: return #x;	TEST_ROLE(x)	case highlight_role_t::x: return #x;
#define SPACES_PER_INDENT 4	SPACES_PER_INDENT	4
#undef TEST_ROLE	TEST_ROLE	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""signal.h"""	"""signal.h"""	
"#include ""reader.h"""	"""reader.h"""	
"#include ""proc.h"""	"""proc.h"""	
"#include ""print_help.h"""	"""print_help.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""input_common.h"""	"""input_common.h"""	
"#include ""input.h"""	"""input.h"""	
"#include ""fish_version.h"""	"""fish_version.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""env.h"""	"""env.h"""	
"#include ""common.h"""	"""common.h"""	
#include <vector>	<vector>	
#include <string>	<string>	
#include <memory>	<memory>	
#include <cwchar>	<cwchar>	
#include <cstring>	<cstring>	
#include <unistd.h>	<unistd.h>	
#include <termios.h>	<termios.h>	
#include <stdlib.h>	<stdlib.h>	
#include <stdio.h>	<stdio.h>	
#include <stddef.h>	<stddef.h>	
#include <signal.h>	<signal.h>	
#include <getopt.h>	<getopt.h>	
#include <errno.h>	<errno.h>	
"#include ""config.h"""	"""config.h"""	
#include <iterator>	<iterator>	
#include <cstring>	<cstring>	
#include <cstdlib>	<cstdlib>	
#include <cstdio>	<cstdio>	
#include <csignal>	<csignal>	
#include <algorithm>	<algorithm>	
#include <unistd.h>	<unistd.h>	
#include <fcntl.h>	<fcntl.h>	
"#include ""FISH-BUILD-VERSION-FILE"""	"""FISH-BUILD-VERSION-FILE"""	
"#include ""fish_version.h"""	"""fish_version.h"""	
#ifndef FISH_BUILD_VERSION	FISH_BUILD_VERSION	
"#include ""wildcard.h"""	"""wildcard.h"""	
"#include ""wcstringutil.h"""	"""wcstringutil.h"""	
"#include ""parse_util.h"""	"""parse_util.h"""	
"#include ""global_safety.h"""	"""global_safety.h"""	
"#include ""enum_set.h"""	"""enum_set.h"""	
"#include ""common.h"""	"""common.h"""	
#include <vector>	<vector>	
"#include ""flog.h"""	"""flog.h"""	
"#include ""config.h"""	"""config.h"""	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""reader.h"""	"""reader.h"""	
"#include ""parser_keywords.h"""	"""parser_keywords.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""intern.h"""	"""intern.h"""	
"#include ""function.h"""	"""function.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""exec.h"""	"""exec.h"""	
"#include ""event.h"""	"""event.h"""	
"#include ""env.h"""	"""env.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""autoload.h"""	"""autoload.h"""	
#include <utility>	<utility>	
#include <unordered_set>	<unordered_set>	
#include <unordered_map>	<unordered_map>	
#include <string>	<string>	
#include <memory>	<memory>	
#include <map>	<map>	
#include <cwchar>	<cwchar>	
#include <algorithm>	<algorithm>	
#include <stddef.h>	<stddef.h>	
#include <pthread.h>	<pthread.h>	
#include <dirent.h>	<dirent.h>	
"#include ""config.h"""	"""config.h"""	
"#include ""wcstringutil.h"""	"""wcstringutil.h"""	
#include <cwchar>	<cwchar>	
"#include ""future_feature_flags.h"""	"""future_feature_flags.h"""	
"#include ""config.h"""	"""config.h"""	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wildcard.h"""	"""wildcard.h"""	
"#include ""wcstringutil.h"""	"""wcstringutil.h"""	
"#include ""tokenizer.h"""	"""tokenizer.h"""	
"#include ""path.h"""	"""path.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""parse_util.h"""	"""parse_util.h"""	
"#include ""parse_constants.h"""	"""parse_constants.h"""	
"#include ""output.h"""	"""output.h"""	
"#include ""history.h"""	"""history.h"""	
"#include ""highlight.h"""	"""highlight.h"""	
"#include ""future_feature_flags.h"""	"""future_feature_flags.h"""	
"#include ""function.h"""	"""function.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""expand.h"""	"""expand.h"""	
"#include ""env.h"""	"""env.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""color.h"""	"""color.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
"#include ""ast.h"""	"""ast.h"""	
#include <utility>	<utility>	
#include <unordered_set>	<unordered_set>	
#include <unordered_map>	<unordered_map>	
#include <type_traits>	<type_traits>	
#include <string>	<string>	
#include <memory>	<memory>	
#include <cwchar>	<cwchar>	
#include <algorithm>	<algorithm>	
#include <unistd.h>	<unistd.h>	
#include <sys/stat.h>	<sys/stat.h>	
#include <errno.h>	<errno.h>	
#include <dirent.h>	<dirent.h>	
"#include ""config.h"""	"""config.h"""	
#define CURSOR_POSITION_INVALID static_cast<size_t>(-1)	CURSOR_POSITION_INVALID	static_cast<size_t>(-1)
#ifdef _PC_CASE_SENSITIVE	_PC_CASE_SENSITIVE	
#define toascii_l(c,l) __toascii_l ((c), (l))	toascii_l(c,l)	__toascii_l ((c), (l))
#define isascii_l(c,l) __isascii_l ((c), (l))	isascii_l(c,l)	__isascii_l ((c), (l))
#define isblank_l(c,l) __isblank_l ((c), (l))	isblank_l(c,l)	__isblank_l ((c), (l))
#define isxdigit_l(c,l) __isxdigit_l ((c), (l))	isxdigit_l(c,l)	__isxdigit_l ((c), (l))
#define isupper_l(c,l) __isupper_l ((c), (l))	isupper_l(c,l)	__isupper_l ((c), (l))
#define isspace_l(c,l) __isspace_l ((c), (l))	isspace_l(c,l)	__isspace_l ((c), (l))
#define ispunct_l(c,l) __ispunct_l ((c), (l))	ispunct_l(c,l)	__ispunct_l ((c), (l))
#define isprint_l(c,l) __isprint_l ((c), (l))	isprint_l(c,l)	__isprint_l ((c), (l))
#define isgraph_l(c,l) __isgraph_l ((c), (l))	isgraph_l(c,l)	__isgraph_l ((c), (l))
#define islower_l(c,l) __islower_l ((c), (l))	islower_l(c,l)	__islower_l ((c), (l))
#define isdigit_l(c,l) __isdigit_l ((c), (l))	isdigit_l(c,l)	__isdigit_l ((c), (l))
#define iscntrl_l(c,l) __iscntrl_l ((c), (l))	iscntrl_l(c,l)	__iscntrl_l ((c), (l))
#define isalpha_l(c,l) __isalpha_l ((c), (l))	isalpha_l(c,l)	__isalpha_l ((c), (l))
#define isalnum_l(c,l) __isalnum_l ((c), (l))	isalnum_l(c,l)	__isalnum_l ((c), (l))
#define __toascii_l(c,l) ((l), __toascii (c))	__toascii_l(c,l)	((l), __toascii (c))
#define __isascii_l(c,l) ((l), __isascii (c))	__isascii_l(c,l)	((l), __isascii (c))
#define __isblank_l(c,l) __isctype_l((c), _ISblank, (l))	__isblank_l(c,l)	__isctype_l((c), _ISblank, (l))
#define __isxdigit_l(c,l) __isctype_l((c), _ISxdigit, (l))	__isxdigit_l(c,l)	__isctype_l((c), _ISxdigit, (l))
#define __isupper_l(c,l) __isctype_l((c), _ISupper, (l))	__isupper_l(c,l)	__isctype_l((c), _ISupper, (l))
#define __isspace_l(c,l) __isctype_l((c), _ISspace, (l))	__isspace_l(c,l)	__isctype_l((c), _ISspace, (l))
#define __ispunct_l(c,l) __isctype_l((c), _ISpunct, (l))	__ispunct_l(c,l)	__isctype_l((c), _ISpunct, (l))
#define __isprint_l(c,l) __isctype_l((c), _ISprint, (l))	__isprint_l(c,l)	__isctype_l((c), _ISprint, (l))
#define __isgraph_l(c,l) __isctype_l((c), _ISgraph, (l))	__isgraph_l(c,l)	__isctype_l((c), _ISgraph, (l))
#define __islower_l(c,l) __isctype_l((c), _ISlower, (l))	__islower_l(c,l)	__isctype_l((c), _ISlower, (l))
#define __isdigit_l(c,l) __isctype_l((c), _ISdigit, (l))	__isdigit_l(c,l)	__isctype_l((c), _ISdigit, (l))
#define __iscntrl_l(c,l) __isctype_l((c), _IScntrl, (l))	__iscntrl_l(c,l)	__isctype_l((c), _IScntrl, (l))
#define __isalpha_l(c,l) __isctype_l((c), _ISalpha, (l))	__isalpha_l(c,l)	__isctype_l((c), _ISalpha, (l))
#define __isalnum_l(c,l) __isctype_l((c), _ISalnum, (l))	__isalnum_l(c,l)	__isctype_l((c), _ISalnum, (l))
#define _toupper(c) ((int) (*__ctype_toupper_loc ())[(int) (c)])	_toupper(c)	((int) (*__ctype_toupper_loc ())[(int) (c)])
#define _tolower(c) ((int) (*__ctype_tolower_loc ())[(int) (c)])	_tolower(c)	((int) (*__ctype_tolower_loc ())[(int) (c)])
#define toascii(c) __toascii (c)	toascii(c)	__toascii (c)
#define isascii(c) __isascii (c)	isascii(c)	__isascii (c)
#define __need_size_t	__need_size_t	
#define MAP_FIXED_NOREPLACE 0x100000	MAP_FIXED_NOREPLACE	0x100000
#define MAP_SYNC 0x80000	MAP_SYNC	0x80000
#define MAP_HUGETLB 0x40000	MAP_HUGETLB	0x40000
#define MAP_STACK 0x20000	MAP_STACK	0x20000
#define MAP_NONBLOCK 0x10000	MAP_NONBLOCK	0x10000
#define MAP_POPULATE 0x08000	MAP_POPULATE	0x08000
#define MAP_NORESERVE 0x04000	MAP_NORESERVE	0x04000
#define MAP_LOCKED 0x02000	MAP_LOCKED	0x02000
#define MAP_EXECUTABLE 0x01000	MAP_EXECUTABLE	0x01000
#define MAP_DENYWRITE 0x00800	MAP_DENYWRITE	0x00800
#define MAP_GROWSDOWN 0x00100	MAP_GROWSDOWN	0x00100
#ifndef _SYS_MMAN_H	_SYS_MMAN_H	
#ifdef __USE_MISC	__USE_MISC	
#define _SYS_MMAN_H 1	_SYS_MMAN_H	1
#define PKEY_DISABLE_WRITE 0x2	PKEY_DISABLE_WRITE	0x2
#define PKEY_DISABLE_ACCESS 0x1	PKEY_DISABLE_ACCESS	0x1
#define MLOCK_ONFAULT 1U	MLOCK_ONFAULT	1U
#define MFD_HUGETLB 4U	MFD_HUGETLB	4U
#define MFD_ALLOW_SEALING 2U	MFD_ALLOW_SEALING	2U
#define MFD_CLOEXEC 1U	MFD_CLOEXEC	1U
#define MREMAP_FIXED 2	MREMAP_FIXED	2
#define MREMAP_MAYMOVE 1	MREMAP_MAYMOVE	1
#ifndef _SYS_MMAN_H	_SYS_MMAN_H	
#ifdef __USE_GNU	__USE_GNU	
#ifndef MFD_CLOEXEC	MFD_CLOEXEC	
#ifndef MLOCK_ONFAULT	MLOCK_ONFAULT	
#ifndef PKEY_DISABLE_ACCESS	PKEY_DISABLE_ACCESS	
#include <bits/mman-shared.h>	<bits/mman-shared.h>	
#define MCL_ONFAULT 4	MCL_ONFAULT	4
#define MCL_FUTURE 2	MCL_FUTURE	2
#define MCL_CURRENT 1	MCL_CURRENT	1
#define POSIX_MADV_DONTNEED 4	POSIX_MADV_DONTNEED	4
#define POSIX_MADV_WILLNEED 3	POSIX_MADV_WILLNEED	3
#define POSIX_MADV_SEQUENTIAL 2	POSIX_MADV_SEQUENTIAL	2
#define POSIX_MADV_RANDOM 1	POSIX_MADV_RANDOM	1
#define POSIX_MADV_NORMAL 0	POSIX_MADV_NORMAL	0
#define MADV_HWPOISON 100	MADV_HWPOISON	100
#define MADV_KEEPONFORK 19	MADV_KEEPONFORK	19
#define MADV_WIPEONFORK 18	MADV_WIPEONFORK	18
#define MADV_DODUMP 17	MADV_DODUMP	17
#define MADV_DONTDUMP 16	MADV_DONTDUMP	16
#define MADV_NOHUGEPAGE 15	MADV_NOHUGEPAGE	15
#define MADV_HUGEPAGE 14	MADV_HUGEPAGE	14
#define MADV_UNMERGEABLE 13	MADV_UNMERGEABLE	13
#define MADV_MERGEABLE 12	MADV_MERGEABLE	12
#define MADV_DOFORK 11	MADV_DOFORK	11
#define MADV_DONTFORK 10	MADV_DONTFORK	10
#define MADV_REMOVE 9	MADV_REMOVE	9
#define MADV_FREE 8	MADV_FREE	8
#define MADV_DONTNEED 4	MADV_DONTNEED	4
#define MADV_WILLNEED 3	MADV_WILLNEED	3
#define MADV_SEQUENTIAL 2	MADV_SEQUENTIAL	2
#define MADV_RANDOM 1	MADV_RANDOM	1
#define MADV_NORMAL 0	MADV_NORMAL	0
#define MS_INVALIDATE 2	MS_INVALIDATE	2
#define MS_SYNC 4	MS_SYNC	4
#define MS_ASYNC 1	MS_ASYNC	1
#define MAP_HUGE_MASK 0x3f	MAP_HUGE_MASK	0x3f
#define MAP_HUGE_SHIFT 26	MAP_HUGE_SHIFT	26
#define MAP_ANON MAP_ANONYMOUS	MAP_ANON	MAP_ANONYMOUS
#define MAP_ANONYMOUS 0x20	MAP_ANONYMOUS	0x20
#define MAP_FILE 0	MAP_FILE	0
#define MAP_FIXED 0x10	MAP_FIXED	0x10
#define MAP_TYPE 0x0f	MAP_TYPE	0x0f
#define MAP_SHARED_VALIDATE 0x03	MAP_SHARED_VALIDATE	0x03
#define MAP_PRIVATE 0x02	MAP_PRIVATE	0x02
#define MAP_SHARED 0x01	MAP_SHARED	0x01
#define PROT_GROWSUP 0x02000000	PROT_GROWSUP	0x02000000
#define PROT_GROWSDOWN 0x01000000	PROT_GROWSDOWN	0x01000000
#define PROT_NONE 0x0	PROT_NONE	0x0
#define PROT_EXEC 0x4	PROT_EXEC	0x4
#define PROT_WRITE 0x2	PROT_WRITE	0x2
#define PROT_READ 0x1	PROT_READ	0x1
#ifndef _SYS_MMAN_H	_SYS_MMAN_H	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __MAP_ANONYMOUS	__MAP_ANONYMOUS	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_XOPEN2K	__USE_XOPEN2K	
#ifndef MCL_CURRENT	MCL_CURRENT	
#include <bits/mman-linux.h>	<bits/mman-linux.h>	
#include <bits/mman-map-flags-generic.h>	<bits/mman-map-flags-generic.h>	
#define MAP_32BIT 0x40	MAP_32BIT	0x40
#ifndef _SYS_MMAN_H	_SYS_MMAN_H	
#ifdef __USE_MISC	__USE_MISC	
#include <bits/mman.h>	<bits/mman.h>	
#include <stddef.h>	<stddef.h>	
#include <bits/types.h>	<bits/types.h>	
#include <features.h>	<features.h>	
#define MAP_FAILED ((void *) -1)	MAP_FAILED	((void *) -1)
#ifndef _SYS_MMAN_H	_SYS_MMAN_H	
#ifndef __off_t_defined	__off_t_defined	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifndef __mode_t_defined	__mode_t_defined	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT_NTH	__REDIRECT_NTH	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_XOPEN2K	__USE_XOPEN2K	
#ifdef __USE_MISC	__USE_MISC	
#ifdef __USE_GNU	__USE_GNU	
"#include ""maybe.h"""	"""maybe.h"""	
#include <memory>	<memory>	
#include <ctime>	<ctime>	
#include <cassert>	<cassert>	
#include <sys/mman.h>	<sys/mman.h>	
"#include ""config.h"""	"""config.h"""	
#define FISH_HISTORY_FILE_H	FISH_HISTORY_FILE_H	
#ifndef FISH_HISTORY_FILE_H	FISH_HISTORY_FILE_H	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wildcard.h"""	"""wildcard.h"""	
"#include ""wcstringutil.h"""	"""wcstringutil.h"""	
"#include ""reader.h"""	"""reader.h"""	
"#include ""path.h"""	"""path.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""parse_util.h"""	"""parse_util.h"""	
"#include ""parse_constants.h"""	"""parse_constants.h"""	
"#include ""lru.h"""	"""lru.h"""	
"#include ""iothread.h"""	"""iothread.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""history_file.h"""	"""history_file.h"""	
"#include ""history.h"""	"""history.h"""	
"#include ""global_safety.h"""	"""global_safety.h"""	
"#include ""flog.h"""	"""flog.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""env.h"""	"""env.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""ast.h"""	"""ast.h"""	
#include <unordered_set>	<unordered_set>	
#include <type_traits>	<type_traits>	
#include <random>	<random>	
#include <numeric>	<numeric>	
#include <map>	<map>	
#include <iterator>	<iterator>	
#include <functional>	<functional>	
#include <cwchar>	<cwchar>	
#include <chrono>	<chrono>	
#include <atomic>	<atomic>	
#include <algorithm>	<algorithm>	
#include <wctype.h>	<wctype.h>	
#include <unistd.h>	<unistd.h>	
#include <sys/stat.h>	<sys/stat.h>	
#include <sys/file.h>	<sys/file.h>	
#include <cstring>	<cstring>	
#include <cstdint>	<cstdint>	
#include <stdlib.h>	<stdlib.h>	
#include <stdio.h>	<stdio.h>	
#include <stddef.h>	<stddef.h>	
#include <pthread.h>	<pthread.h>	
#include <fcntl.h>	<fcntl.h>	
#include <errno.h>	<errno.h>	
#include <ctype.h>	<ctype.h>	
"#include ""config.h"""	"""config.h"""	
"#define DFLT_FISH_HISTORY_SESSION_ID L""fish"""	DFLT_FISH_HISTORY_SESSION_ID	"L""fish"""
#define HISTORY_OUTPUT_BUFFER_SIZE (64 * 1024)	HISTORY_OUTPUT_BUFFER_SIZE	(64 * 1024)
#define HISTORY_SAVE_MAX (1024 * 256)	HISTORY_SAVE_MAX	(1024 * 256)
#define __mode_t_defined	__mode_t_defined	
#define __off_t_defined	__off_t_defined	
"#include ""history.h"""	"""history.h"""	
#include <cstring>	<cstring>	
"#include ""history_file.h"""	"""history_file.h"""	
"#include ""config.h"""	"""config.h"""	
#ifdef MAP_ANON	MAP_ANON	
#define __pid_t_defined	__pid_t_defined	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""signal.h"""	"""signal.h"""	
"#include ""reader.h"""	"""reader.h"""	
"#include ""proc.h"""	"""proc.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""input_common.h"""	"""input_common.h"""	
"#include ""input.h"""	"""input.h"""	
"#include ""global_safety.h"""	"""global_safety.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""event.h"""	"""event.h"""	
"#include ""env.h"""	"""env.h"""	
"#include ""common.h"""	"""common.h"""	
#include <vector>	<vector>	
#include <utility>	<utility>	
#include <string>	<string>	
#include <memory>	<memory>	
#include <atomic>	<atomic>	
#include <algorithm>	<algorithm>	
#include <termios.h>	<termios.h>	
#include <term.h>	<term.h>	
#include <curses.h>	<curses.h>	
#include <cwchar>	<cwchar>	
#include <wctype.h>	<wctype.h>	
#include <errno.h>	<errno.h>	
"#include ""config.h"""	"""config.h"""	
#define TERMINFO_ADD(key) { (L ## #key) + 4, key }	TERMINFO_ADD(key)	{ (L ## #key) + 4, key }
#undef TERMINFO_ADD	TERMINFO_ADD	
#if HAVE_TERM_H	HAVE_TERM_H	
#elif HAVE_NCURSES_TERM_H	HAVE_NCURSES_TERM_H	
#if 0	0	
#define __suseconds_t_defined	__suseconds_t_defined	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""iothread.h"""	"""iothread.h"""	
"#include ""input_common.h"""	"""input_common.h"""	
"#include ""global_safety.h"""	"""global_safety.h"""	
"#include ""flog.h"""	"""flog.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""env_universal_common.h"""	"""env_universal_common.h"""	
"#include ""env.h"""	"""env.h"""	
"#include ""common.h"""	"""common.h"""	
#include <utility>	<utility>	
#include <type_traits>	<type_traits>	
#include <memory>	<memory>	
#include <list>	<list>	
#include <deque>	<deque>	
#include <cwchar>	<cwchar>	
#include <sys/types.h>	<sys/types.h>	
#include <sys/time.h>	<sys/time.h>	
#include <stdlib.h>	<stdlib.h>	
#include <stdio.h>	<stdio.h>	
#include <sys/select.h>	<sys/select.h>	
#include <cstring>	<cstring>	
#include <unistd.h>	<unistd.h>	
#include <errno.h>	<errno.h>	
"#include ""config.h"""	"""config.h"""	
#define WAIT_ON_ESCAPE_DEFAULT 30	WAIT_ON_ESCAPE_DEFAULT	30
#ifdef HAVE_SYS_SELECT_H	HAVE_SYS_SELECT_H	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""common.h"""	"""common.h"""	
#include <vector>	<vector>	
#include <memory>	<memory>	
#include <cwchar>	<cwchar>	
#include <algorithm>	<algorithm>	
#include <stddef.h>	<stddef.h>	
"#include ""intern.h"""	"""intern.h"""	
"#include ""config.h"""	"""config.h"""	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""redirection.h"""	"""redirection.h"""	
"#include ""path.h"""	"""path.h"""	
"#include ""iothread.h"""	"""iothread.h"""	
"#include ""fd_monitor.h"""	"""fd_monitor.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""exec.h"""	"""exec.h"""	
"#include ""common.h"""	"""common.h"""	
#include <cwchar>	<cwchar>	
#include <cstring>	<cstring>	
#include <unistd.h>	<unistd.h>	
#include <stdio.h>	<stdio.h>	
#include <stddef.h>	<stddef.h>	
#include <fcntl.h>	<fcntl.h>	
#include <errno.h>	<errno.h>	
"#include ""io.h"""	"""io.h"""	
"#include ""config.h"""	"""config.h"""	
#define OPEN_MASK 0666	OPEN_MASK	0666
"#define NOCLOB_ERROR _(L""The file '%ls' already exists"")"	NOCLOB_ERROR	"_(L""The file '%ls' already exists"")"
"#define FILE_ERROR _(L""An error occurred while redirecting file '%ls'"")"	FILE_ERROR	"_(L""An error occurred while redirecting file '%ls'"")"
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""global_safety.h"""	"""global_safety.h"""	
"#include ""flog.h"""	"""flog.h"""	
"#include ""common.h"""	"""common.h"""	
#include <thread>	<thread>	
#include <queue>	<queue>	
#include <functional>	<functional>	
#include <condition_variable>	<condition_variable>	
#include <atomic>	<atomic>	
#include <unistd.h>	<unistd.h>	
#include <sys/types.h>	<sys/types.h>	
#include <sys/time.h>	<sys/time.h>	
#include <sys/select.h>	<sys/select.h>	
#include <string.h>	<string.h>	
#include <stdio.h>	<stdio.h>	
#include <signal.h>	<signal.h>	
#include <pthread.h>	<pthread.h>	
#include <limits.h>	<limits.h>	
"#include ""iothread.h"""	"""iothread.h"""	
"#include ""config.h"""	"""config.h"""	
#define IO_SERVICE_MAIN_THREAD_REQUEST_QUEUE 99	IO_SERVICE_MAIN_THREAD_REQUEST_QUEUE	99
#define IO_SERVICE_RESULT_QUEUE 100	IO_SERVICE_RESULT_QUEUE	100
#define IO_WAIT_FOR_WORK_DURATION_MS 500	IO_WAIT_FOR_WORK_DURATION_MS	500
#define IO_MAX_THREADS 1024	IO_MAX_THREADS	1024
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""common.h"""	"""common.h"""	
#include <string>	<string>	
#include <memory>	<memory>	
#include <list>	<list>	
#include <algorithm>	<algorithm>	
#include <stddef.h>	<stddef.h>	
"#include ""config.h"""	"""config.h"""	
"#include ""null_terminated_array.h"""	"""null_terminated_array.h"""	
"#include ""env.h"""	"""env.h"""	
"#include ""operation_context.h"""	"""operation_context.h"""	
"#include ""config.h"""	"""config.h"""	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wcstringutil.h"""	"""wcstringutil.h"""	
"#include ""output.h"""	"""output.h"""	
"#include ""flog.h"""	"""flog.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""env.h"""	"""env.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""color.h"""	"""color.h"""	
#include <vector>	<vector>	
#include <string>	<string>	
#include <memory>	<memory>	
#include <cwchar>	<cwchar>	
#include <limits.h>	<limits.h>	
#include <term.h>	<term.h>	
#include <curses.h>	<curses.h>	
#include <cstring>	<cstring>	
#include <stdlib.h>	<stdlib.h>	
#include <stdio.h>	<stdio.h>	
"#include ""config.h"""	"""config.h"""	
#if HAVE_CURSES_H	HAVE_CURSES_H	
#elif HAVE_NCURSES_H	HAVE_NCURSES_H	
#elif HAVE_NCURSES_CURSES_H	HAVE_NCURSES_CURSES_H	
#if HAVE_TERM_H	HAVE_TERM_H	
#elif HAVE_NCURSES_TERM_H	HAVE_NCURSES_TERM_H	
#if 0	0	
"#include ""termsize.h"""	"""termsize.h"""	
"#include ""screen.h"""	"""screen.h"""	
"#include ""reader.h"""	"""reader.h"""	
"#include ""complete.h"""	"""complete.h"""	
"#include ""common.h"""	"""common.h"""	
#include <vector>	<vector>	
#include <string>	<string>	
#include <memory>	<memory>	
#include <stddef.h>	<stddef.h>	
#define PAGER_UNDISCLOSED_MAX_ROWS 4	PAGER_UNDISCLOSED_MAX_ROWS	4
#define PAGER_SPACER_STRING_WIDTH 2	PAGER_SPACER_STRING_WIDTH	2
"#define PAGER_SPACER_STRING L""  """	PAGER_SPACER_STRING	"L""  """
#define PAGER_SELECTION_NONE static_cast<size_t>(-1)	PAGER_SELECTION_NONE	static_cast<size_t>(-1)
#define FISH_PAGER_H	FISH_PAGER_H	
#ifndef FISH_PAGER_H	FISH_PAGER_H	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""screen.h"""	"""screen.h"""	
"#include ""reader.h"""	"""reader.h"""	
"#include ""pager.h"""	"""pager.h"""	
"#include ""highlight.h"""	"""highlight.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""complete.h"""	"""complete.h"""	
"#include ""common.h"""	"""common.h"""	
#include <vector>	<vector>	
#include <unordered_map>	<unordered_map>	
#include <type_traits>	<type_traits>	
#include <numeric>	<numeric>	
#include <cwchar>	<cwchar>	
#include <algorithm>	<algorithm>	
#include <wctype.h>	<wctype.h>	
#include <stddef.h>	<stddef.h>	
"#include ""config.h"""	"""config.h"""	
"#define SEARCH_FIELD_PROMPT _(L""search: "")"	SEARCH_FIELD_PROMPT	"_(L""search: "")"
#define PAGER_MAX_COLS 6	PAGER_MAX_COLS	6
#define PAGER_MIN_WIDTH 16	PAGER_MIN_WIDTH	16
#define PAGER_MIN_HEIGHT 4	PAGER_MIN_HEIGHT	4
#define PAGER_SEARCH_FIELD_WIDTH 12	PAGER_SEARCH_FIELD_WIDTH	12
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wildcard.h"""	"""wildcard.h"""	
"#include ""util.h"""	"""util.h"""	
"#include ""trace.h"""	"""trace.h"""	
"#include ""tokenizer.h"""	"""tokenizer.h"""	
"#include ""timer.h"""	"""timer.h"""	
"#include ""reader.h"""	"""reader.h"""	
"#include ""proc.h"""	"""proc.h"""	
"#include ""path.h"""	"""path.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""parse_util.h"""	"""parse_util.h"""	
"#include ""parse_constants.h"""	"""parse_constants.h"""	
"#include ""maybe.h"""	"""maybe.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""function.h"""	"""function.h"""	
"#include ""flog.h"""	"""flog.h"""	
"#include ""expand.h"""	"""expand.h"""	
"#include ""exec.h"""	"""exec.h"""	
"#include ""event.h"""	"""event.h"""	
"#include ""env.h"""	"""env.h"""	
"#include ""complete.h"""	"""complete.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin_function.h"""	"""builtin_function.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
"#include ""ast.h"""	"""ast.h"""	
#include <vector>	<vector>	
#include <type_traits>	<type_traits>	
#include <string>	<string>	
#include <memory>	<memory>	
#include <cwchar>	<cwchar>	
#include <algorithm>	<algorithm>	
#include <wctype.h>	<wctype.h>	
#include <unistd.h>	<unistd.h>	
#include <termios.h>	<termios.h>	
#include <stdlib.h>	<stdlib.h>	
#include <stdio.h>	<stdio.h>	
#include <stdarg.h>	<stdarg.h>	
#include <errno.h>	<errno.h>	
"#include ""parse_execution.h"""	"""parse_execution.h"""	
"#include ""config.h"""	"""config.h"""	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""tokenizer.h"""	"""tokenizer.h"""	
"#include ""proc.h"""	"""proc.h"""	
"#include ""parse_tree.h"""	"""parse_tree.h"""	
"#include ""parse_constants.h"""	"""parse_constants.h"""	
"#include ""flog.h"""	"""flog.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""ast.h"""	"""ast.h"""	
#include <vector>	<vector>	
#include <type_traits>	<type_traits>	
#include <string>	<string>	
#include <cwchar>	<cwchar>	
#include <algorithm>	<algorithm>	
#include <stdio.h>	<stdio.h>	
#include <stddef.h>	<stddef.h>	
#include <stdarg.h>	<stdarg.h>	
"#include ""parse_tree.h"""	"""parse_tree.h"""	
"#include ""config.h"""	"""config.h"""	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wildcard.h"""	"""wildcard.h"""	
"#include ""wcstringutil.h"""	"""wcstringutil.h"""	
"#include ""tokenizer.h"""	"""tokenizer.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""parse_util.h"""	"""parse_util.h"""	
"#include ""parse_constants.h"""	"""parse_constants.h"""	
"#include ""future_feature_flags.h"""	"""future_feature_flags.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""expand.h"""	"""expand.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
"#include ""ast.h"""	"""ast.h"""	
#include <type_traits>	<type_traits>	
#include <string>	<string>	
#include <memory>	<memory>	
#include <cwchar>	<cwchar>	
#include <stdlib.h>	<stdlib.h>	
#include <stdarg.h>	<stdarg.h>	
"#include ""parse_util.h"""	"""parse_util.h"""	
"#include ""config.h"""	"""config.h"""	
"#define BACKGROUND_IN_CONDITIONAL_ERROR_MSG _(L""Backgrounded commands can not be used as conditionals"")"	BACKGROUND_IN_CONDITIONAL_ERROR_MSG	"_(L""Backgrounded commands can not be used as conditionals"")"
"#define BOOL_AFTER_BACKGROUND_ERROR_MSG _(L""The '%ls' command can not be used immediately after a backgrounded job"")"	BOOL_AFTER_BACKGROUND_ERROR_MSG	"_(L""The '%ls' command can not be used immediately after a backgrounded job"")"
"#define END_ARG_ERR_MSG _(L""'end' does not take arguments. Did you forget a ';'?"")"	END_ARG_ERR_MSG	"_(L""'end' does not take arguments. Did you forget a ';'?"")"
#define FISH_SANITY_H	FISH_SANITY_H	
#ifndef FISH_SANITY_H	FISH_SANITY_H	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""signal.h"""	"""signal.h"""	
"#include ""sanity.h"""	"""sanity.h"""	
"#include ""reader.h"""	"""reader.h"""	
"#include ""proc.h"""	"""proc.h"""	
"#include ""parse_util.h"""	"""parse_util.h"""	
"#include ""parse_execution.h"""	"""parse_execution.h"""	
"#include ""parse_constants.h"""	"""parse_constants.h"""	
"#include ""intern.h"""	"""intern.h"""	
"#include ""function.h"""	"""function.h"""	
"#include ""flog.h"""	"""flog.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""expand.h"""	"""expand.h"""	
"#include ""event.h"""	"""event.h"""	
"#include ""env.h"""	"""env.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""ast.h"""	"""ast.h"""	
#include <utility>	<utility>	
#include <memory>	<memory>	
#include <cwchar>	<cwchar>	
#include <algorithm>	<algorithm>	
#include <stdio.h>	<stdio.h>	
#include <fcntl.h>	<fcntl.h>	
"#include ""parser.h"""	"""parser.h"""	
"#include ""config.h"""	"""config.h"""	
"#define WHILE_BLOCK N_(L""'while' block"")"	WHILE_BLOCK	"N_(L""'while' block"")"
"#define FOR_BLOCK N_(L""'for' block"")"	FOR_BLOCK	"N_(L""'for' block"")"
"#define IF_BLOCK N_(L""'if' conditional block"")"	IF_BLOCK	"N_(L""'if' conditional block"")"
"#define FUNCTION_CALL_BLOCK N_(L""function invocation block"")"	FUNCTION_CALL_BLOCK	"N_(L""function invocation block"")"
"#define FUNCTION_CALL_NO_SHADOW_BLOCK N_(L""function invocation block with no variable shadowing"")"	FUNCTION_CALL_NO_SHADOW_BLOCK	"N_(L""function invocation block with no variable shadowing"")"
"#define SWITCH_BLOCK N_(L""'switch' block"")"	SWITCH_BLOCK	"N_(L""'switch' block"")"
"#define SUBST_BLOCK N_(L""command substitution block"")"	SUBST_BLOCK	"N_(L""command substitution block"")"
"#define TOP_BLOCK N_(L""global root block"")"	TOP_BLOCK	"N_(L""global root block"")"
"#define BEGIN_BLOCK N_(L""'begin' unconditional block"")"	BEGIN_BLOCK	"N_(L""'begin' unconditional block"")"
"#define SOURCE_BLOCK N_(L""block created by the . builtin"")"	SOURCE_BLOCK	"N_(L""block created by the . builtin"")"
"#define EVENT_BLOCK N_(L""event handler block"")"	EVENT_BLOCK	"N_(L""event handler block"")"
"#define BREAKPOINT_BLOCK N_(L""block created by breakpoint"")"	BREAKPOINT_BLOCK	"N_(L""block created by breakpoint"")"
"#define VARIABLE_ASSIGNMENT_BLOCK N_(L""block created by variable assignment prefixing a command"")"	VARIABLE_ASSIGNMENT_BLOCK	"N_(L""block created by variable assignment prefixing a command"")"
"#define UNKNOWN_BLOCK N_(L""unknown/invalid block"")"	UNKNOWN_BLOCK	"N_(L""unknown/invalid block"")"
"#define INVALID_SCOPE_ERR_MSG _(L""Tried to evaluate commands using invalid block type '%ls'"")"	INVALID_SCOPE_ERR_MSG	"_(L""Tried to evaluate commands using invalid block type '%ls'"")"
#if 0	0	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""common.h"""	"""common.h"""	
#include <unordered_set>	<unordered_set>	
#include <string>	<string>	
"#include ""parser_keywords.h"""	"""parser_keywords.h"""	
"#include ""config.h"""	"""config.h"""	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""flog.h"""	"""flog.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""expand.h"""	"""expand.h"""	
"#include ""env.h"""	"""env.h"""	
"#include ""common.h"""	"""common.h"""	
#include <vector>	<vector>	
#include <type_traits>	<type_traits>	
#include <string>	<string>	
#include <memory>	<memory>	
#include <cwchar>	<cwchar>	
#include <cstring>	<cstring>	
#include <unistd.h>	<unistd.h>	
#include <sys/stat.h>	<sys/stat.h>	
#include <errno.h>	<errno.h>	
"#include ""path.h"""	"""path.h"""	
"#include ""config.h"""	"""config.h"""	
"#define MISSING_COMMAND_ERR_MSG _(L""Error while searching for command '%ls'"")"	MISSING_COMMAND_ERR_MSG	"_(L""Error while searching for command '%ls'"")"
#ifdef __sun	__sun	
"#define PREFIX L""/usr/local"""	PREFIX	"L""/usr/local"""
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""signal.h"""	"""signal.h"""	
"#include ""redirection.h"""	"""redirection.h"""	
"#include ""proc.h"""	"""proc.h"""	
"#include ""postfork.h"""	"""postfork.h"""	
"#include ""iothread.h"""	"""iothread.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""flog.h"""	"""flog.h"""	
"#include ""exec.h"""	"""exec.h"""	
"#include ""common.h"""	"""common.h"""	
#include <cwchar>	<cwchar>	
#include <memory>	<memory>	
#include <cstring>	<cstring>	
#include <time.h>	<time.h>	
#include <stdio.h>	<stdio.h>	
#include <signal.h>	<signal.h>	
#include <fcntl.h>	<fcntl.h>	
#include <errno.h>	<errno.h>	
"#include ""config.h"""	"""config.h"""	
#define JOIN_THREADS_BEFORE_FORK 0	JOIN_THREADS_BEFORE_FORK	0
#define FORK_LAPS 5	FORK_LAPS	5
#define FORK_SLEEP_TIME 1000000	FORK_SLEEP_TIME	1000000
"#define FORK_ERROR ""Could not create child process - exiting"""	FORK_ERROR	"""Could not create child process - exiting"""
#ifdef FISH_USE_POSIX_SPAWN	FISH_USE_POSIX_SPAWN	
#ifndef JOIN_THREADS_BEFORE_FORK	JOIN_THREADS_BEFORE_FORK	
#if FISH_USE_POSIX_SPAWN	FISH_USE_POSIX_SPAWN	
"#include ""common.h"""	"""common.h"""	
#include <cstring>	<cstring>	
#include <stdlib.h>	<stdlib.h>	
#include <stdio.h>	<stdio.h>	
"#include ""print_help.h"""	"""print_help.h"""	
"#include ""config.h"""	"""config.h"""	
#define CMD_LEN 1024	CMD_LEN	1024
"#define HELP_ERR ""Could not show help message\n"""	HELP_ERR	"""Could not show help message\n"""
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""signal.h"""	"""signal.h"""	
"#include ""sanity.h"""	"""sanity.h"""	
"#include ""reader.h"""	"""reader.h"""	
"#include ""proc.h"""	"""proc.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""parse_tree.h"""	"""parse_tree.h"""	
"#include ""output.h"""	"""output.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""global_safety.h"""	"""global_safety.h"""	
"#include ""flog.h"""	"""flog.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""event.h"""	"""event.h"""	
"#include ""common.h"""	"""common.h"""	
#include <vector>	<vector>	
#include <utility>	<utility>	
#include <memory>	<memory>	
#include <algorithm>	<algorithm>	
#include <sys/types.h>	<sys/types.h>	
#include <sys/time.h>	<sys/time.h>	
#include <sys/select.h>	<sys/select.h>	
#include <termios.h>	<termios.h>	
#include <term.h>	<term.h>	
#include <curses.h>	<curses.h>	
#include <cwchar>	<cwchar>	
#include <atomic>	<atomic>	
#include <wctype.h>	<wctype.h>	
#include <unistd.h>	<unistd.h>	
#include <stdio.h>	<stdio.h>	
#include <signal.h>	<signal.h>	
#include <fcntl.h>	<fcntl.h>	
#include <errno.h>	<errno.h>	
"#include ""config.h"""	"""config.h"""	
#if HAVE_TERM_H	HAVE_TERM_H	
#elif HAVE_NCURSES_TERM_H	HAVE_NCURSES_TERM_H	
#ifdef HAVE_SIGINFO_H	HAVE_SIGINFO_H	
#ifdef HAVE_SYS_SELECT_H	HAVE_SYS_SELECT_H	
"#include ""common.h"""	"""common.h"""	
#define FISH_KILL_H	FISH_KILL_H	
#ifndef FISH_KILL_H	FISH_KILL_H	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""tokenizer.h"""	"""tokenizer.h"""	
"#include ""termsize.h"""	"""termsize.h"""	
"#include ""signal.h"""	"""signal.h"""	
"#include ""screen.h"""	"""screen.h"""	
"#include ""sanity.h"""	"""sanity.h"""	
"#include ""reader.h"""	"""reader.h"""	
"#include ""proc.h"""	"""proc.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""parse_util.h"""	"""parse_util.h"""	
"#include ""parse_constants.h"""	"""parse_constants.h"""	
"#include ""pager.h"""	"""pager.h"""	
"#include ""output.h"""	"""output.h"""	
"#include ""kill.h"""	"""kill.h"""	
"#include ""iothread.h"""	"""iothread.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""intern.h"""	"""intern.h"""	
"#include ""input_common.h"""	"""input_common.h"""	
"#include ""input.h"""	"""input.h"""	
"#include ""history.h"""	"""history.h"""	
"#include ""highlight.h"""	"""highlight.h"""	
"#include ""global_safety.h"""	"""global_safety.h"""	
"#include ""function.h"""	"""function.h"""	
"#include ""flog.h"""	"""flog.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""expand.h"""	"""expand.h"""	
"#include ""exec.h"""	"""exec.h"""	
"#include ""event.h"""	"""event.h"""	
"#include ""env.h"""	"""env.h"""	
"#include ""complete.h"""	"""complete.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""color.h"""	"""color.h"""	
"#include ""ast.h"""	"""ast.h"""	
#include <stack>	<stack>	
#include <set>	<set>	
#include <memory>	<memory>	
#include <functional>	<functional>	
#include <cwchar>	<cwchar>	
#include <csignal>	<csignal>	
#include <atomic>	<atomic>	
#include <algorithm>	<algorithm>	
#include <wctype.h>	<wctype.h>	
#include <unistd.h>	<unistd.h>	
#include <time.h>	<time.h>	
#include <termios.h>	<termios.h>	
#include <sys/types.h>	<sys/types.h>	
#include <sys/time.h>	<sys/time.h>	
#include <sys/select.h>	<sys/select.h>	
#include <cstring>	<cstring>	
#include <stdlib.h>	<stdlib.h>	
#include <stdio.h>	<stdio.h>	
#include <signal.h>	<signal.h>	
#include <pthread.h>	<pthread.h>	
#include <fcntl.h>	<fcntl.h>	
#include <errno.h>	<errno.h>	
"#include ""config.h"""	"""config.h"""	
"#define DEBUG_PROMPT_FUNCTION_NAME L""fish_breakpoint_prompt"""	DEBUG_PROMPT_FUNCTION_NAME	"L""fish_breakpoint_prompt"""
"#define LEFT_PROMPT_FUNCTION_NAME L""fish_prompt"""	LEFT_PROMPT_FUNCTION_NAME	"L""fish_prompt"""
"#define DEFAULT_PROMPT L""echo -n \""$USER@$hostname $PWD \""'> '"""	DEFAULT_PROMPT	"L""echo -n \""$USER@$hostname $PWD \""'> '"""
"#define RIGHT_PROMPT_FUNCTION_NAME L""fish_right_prompt"""	RIGHT_PROMPT_FUNCTION_NAME	"L""fish_right_prompt"""
"#define ENV_CMD_DURATION L""CMD_DURATION"""	ENV_CMD_DURATION	"L""CMD_DURATION"""
"#define REPLACE_UNCLEAN L""$*?({})"""	REPLACE_UNCLEAN	"L""$*?({})"""
"#define DEFAULT_TITLE L""echo (status current-command) \"" \"" $PWD"""	DEFAULT_TITLE	"L""echo (status current-command) \"" \"" $PWD"""
#define PREFIX_MAX_LEN 9	PREFIX_MAX_LEN	9
"#define MODE_PROMPT_FUNCTION_NAME L""fish_mode_prompt"""	MODE_PROMPT_FUNCTION_NAME	"L""fish_mode_prompt"""
#define KILL_APPEND 0	KILL_APPEND	0
#define KILL_PREPEND 1	KILL_PREPEND	1
#ifdef HAVE_SIGINFO_H	HAVE_SIGINFO_H	
#ifdef HAVE_SYS_SELECT_H	HAVE_SYS_SELECT_H	
#ifdef _POSIX_VDISABLE	_POSIX_VDISABLE	
#ifdef HAVE_CTERMID_R	HAVE_CTERMID_R	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""io.h"""	"""io.h"""	
#include <fcntl.h>	<fcntl.h>	
"#include ""redirection.h"""	"""redirection.h"""	
"#include ""config.h"""	"""config.h"""	
"#include ""reader.h"""	"""reader.h"""	
"#include ""proc.h"""	"""proc.h"""	
"#include ""kill.h"""	"""kill.h"""	
"#include ""history.h"""	"""history.h"""	
"#include ""global_safety.h"""	"""global_safety.h"""	
"#include ""flog.h"""	"""flog.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""common.h"""	"""common.h"""	
#include <unistd.h>	<unistd.h>	
"#include ""sanity.h"""	"""sanity.h"""	
"#include ""config.h"""	"""config.h"""	
"#include ""screen.h"""	"""screen.h"""	
"#include ""pager.h"""	"""pager.h"""	
"#include ""output.h"""	"""output.h"""	
"#include ""highlight.h"""	"""highlight.h"""	
"#include ""flog.h"""	"""flog.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""env.h"""	"""env.h"""	
"#include ""common.h"""	"""common.h"""	
#include <vector>	<vector>	
#include <string>	<string>	
#include <algorithm>	<algorithm>	
#include <term.h>	<term.h>	
#include <curses.h>	<curses.h>	
#include <cwchar>	<cwchar>	
#include <cstring>	<cstring>	
#include <unistd.h>	<unistd.h>	
#include <time.h>	<time.h>	
#include <termios.h>	<termios.h>	
#include <stdlib.h>	<stdlib.h>	
#include <stdio.h>	<stdio.h>	
#include <stddef.h>	<stddef.h>	
"#include ""config.h"""	"""config.h"""	
#define INDENT_STEP 4u	INDENT_STEP	4u
#if HAVE_CURSES_H	HAVE_CURSES_H	
#elif HAVE_NCURSES_H	HAVE_NCURSES_H	
#elif HAVE_NCURSES_CURSES_H	HAVE_NCURSES_CURSES_H	
#if HAVE_TERM_H	HAVE_TERM_H	
#elif HAVE_NCURSES_TERM_H	HAVE_NCURSES_TERM_H	
#if defined HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC	defined HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC	
#elif defined HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC	defined HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""topic_monitor.h"""	"""topic_monitor.h"""	
"#include ""termsize.h"""	"""termsize.h"""	
"#include ""signal.h"""	"""signal.h"""	
"#include ""reader.h"""	"""reader.h"""	
"#include ""proc.h"""	"""proc.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""event.h"""	"""event.h"""	
"#include ""common.h"""	"""common.h"""	
#include <pthread.h>	<pthread.h>	
#include <stdio.h>	<stdio.h>	
#include <signal.h>	<signal.h>	
#include <errno.h>	<errno.h>	
"#include ""config.h"""	"""config.h"""	
#ifdef HAVE_SIGINFO_H	HAVE_SIGINFO_H	
#ifdef SIGHUP	SIGHUP	
#ifdef SIGINT	SIGINT	
#ifdef SIGQUIT	SIGQUIT	
#ifdef SIGILL	SIGILL	
#ifdef SIGTRAP	SIGTRAP	
#ifdef SIGABRT	SIGABRT	
#ifdef SIGBUS	SIGBUS	
#ifdef SIGFPE	SIGFPE	
#ifdef SIGKILL	SIGKILL	
#ifdef SIGUSR1	SIGUSR1	
#ifdef SIGUSR2	SIGUSR2	
#ifdef SIGSEGV	SIGSEGV	
#ifdef SIGPIPE	SIGPIPE	
#ifdef SIGALRM	SIGALRM	
#ifdef SIGTERM	SIGTERM	
#ifdef SIGCHLD	SIGCHLD	
#ifdef SIGCONT	SIGCONT	
#ifdef SIGSTOP	SIGSTOP	
#ifdef SIGTSTP	SIGTSTP	
#ifdef SIGTTIN	SIGTTIN	
#ifdef SIGTTOU	SIGTTOU	
#ifdef SIGURG	SIGURG	
#ifdef SIGXCPU	SIGXCPU	
#ifdef SIGXFSZ	SIGXFSZ	
#ifdef SIGVTALRM	SIGVTALRM	
#ifdef SIGPROF	SIGPROF	
#ifdef SIGWINCH	SIGWINCH	
#ifdef SIGWIND	SIGWIND	
#ifdef SIGIO	SIGIO	
#ifdef SIGPWR	SIGPWR	
#ifdef SIGSYS	SIGSYS	
#ifdef SIGINFO	SIGINFO	
#ifdef SIGSTKFLT	SIGSTKFLT	
#ifdef SIGEMT	SIGEMT	
#ifdef SIGIOT	SIGIOT	
#ifdef SIGUNUSED	SIGUNUSED	
#ifdef SIGWINCH	SIGWINCH	
#ifdef SIGWINCH	SIGWINCH	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""maybe.h"""	"""maybe.h"""	
"#include ""termsize.h"""	"""termsize.h"""	
#ifdef HAVE_WINSIZE	HAVE_WINSIZE	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wgetopt.h"""	"""wgetopt.h"""	
"#include ""proc.h"""	"""proc.h"""	
"#include ""parser.h"""	"""parser.h"""	
"#include ""io.h"""	"""io.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""exec.h"""	"""exec.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""builtin.h"""	"""builtin.h"""	
#include <ctime>	<ctime>	
#include <cstddef>	<cstddef>	
#include <chrono>	<chrono>	
#include <cerrno>	<cerrno>	
#include <algorithm>	<algorithm>	
#include <string.h>	<string.h>	
"#include ""timer.h"""	"""timer.h"""	
"#include ""config.h"""	"""config.h"""	
#include <cmath>	<cmath>	
#define _GLIBCXX_MATH_H 1	_GLIBCXX_MATH_H	1
#if !defined __cplusplus || defined _GLIBCXX_INCLUDE_NEXT_C_HEADERS	!defined __cplusplus || defined _GLIBCXX_INCLUDE_NEXT_C_HEADERS	
#ifndef _GLIBCXX_MATH_H	_GLIBCXX_MATH_H	
#if _GLIBCXX_USE_C99_MATH	_GLIBCXX_USE_C99_MATH	
#if __cplusplus >= 201103L && defined(_GLIBCXX_USE_C99_MATH_TR1)	__cplusplus >= 201103L && defined(_GLIBCXX_USE_C99_MATH_TR1)	
#if __cplusplus >= 201103L && __STDCPP_WANT_MATH_SPEC_FUNCS__ != 0	__cplusplus >= 201103L && __STDCPP_WANT_MATH_SPEC_FUNCS__ != 0	
#if __cplusplus > 201703L	__cplusplus > 201703L	
#include <utility>	<utility>	
#include <iterator>	<iterator>	
#include <cstring>	<cstring>	
#include <algorithm>	<algorithm>	
#include <stdlib.h>	<stdlib.h>	
#include <stdio.h>	<stdio.h>	
#include <math.h>	<math.h>	
#include <limits.h>	<limits.h>	
#include <ctype.h>	<ctype.h>	
"#include ""tinyexpr.h"""	"""tinyexpr.h"""	
#define TE_FUN(__VA_ARGS__...) ((double (*)(__VA_ARGS__))n->function)	TE_FUN(__VA_ARGS__...)	((double (*)(__VA_ARGS__))n->function)
#define M(e) te_eval(n->parameters[e])	M(e)	te_eval(n->parameters[e])
#define NEW_EXPR(type,__VA_ARGS__...) new_expr((type), std::move((const te_expr *[]){__VA_ARGS__}))	NEW_EXPR(type,__VA_ARGS__...)	new_expr((type), std::move((const te_expr *[]){__VA_ARGS__}))
#undef M	M	
#undef TE_FUN	TE_FUN	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""tokenizer.h"""	"""tokenizer.h"""	
"#include ""future_feature_flags.h"""	"""future_feature_flags.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""common.h"""	"""common.h"""	
#include <type_traits>	<type_traits>	
#include <string>	<string>	
#include <cwchar>	<cwchar>	
#include <wctype.h>	<wctype.h>	
#include <unistd.h>	<unistd.h>	
#include <limits.h>	<limits.h>	
#include <fcntl.h>	<fcntl.h>	
"#include ""tokenizer.h"""	"""tokenizer.h"""	
"#include ""config.h"""	"""config.h"""	
#if false	false	
#if false	false	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""iothread.h"""	"""iothread.h"""	
"#include ""flog.h"""	"""flog.h"""	
#include <unistd.h>	<unistd.h>	
#include <limits.h>	<limits.h>	
"#include ""topic_monitor.h"""	"""topic_monitor.h"""	
"#include ""config.h"""	"""config.h"""	
#if defined(__has_feature)	defined(__has_feature)	
#if __has_feature(thread_sanitizer)	__has_feature(thread_sanitizer)	
#ifdef __SANITIZE_THREAD__	__SANITIZE_THREAD__	
#ifdef TOPIC_MONITOR_TSAN_WORKAROUND	TOPIC_MONITOR_TSAN_WORKAROUND	
#ifdef TOPIC_MONITOR_TSAN_WORKAROUND	TOPIC_MONITOR_TSAN_WORKAROUND	
"#include ""parser.h"""	"""parser.h"""	
"#include ""flog.h"""	"""flog.h"""	
"#include ""common.h"""	"""common.h"""	
"#include ""trace.h"""	"""trace.h"""	
"#include ""config.h"""	"""config.h"""	
"#include ""common.h"""	"""common.h"""	
#include <string>	<string>	
#include <limits>	<limits>	
#include <sys/types.h>	<sys/types.h>	
#include <stdint.h>	<stdint.h>	
"#include ""utf8.h"""	"""utf8.h"""	
"#include ""config.h"""	"""config.h"""	
#define _BOM 0xfeff	_BOM	0xfeff
#define _NXT 0x80	_NXT	0x80
#define _SEQ2 0xc0	_SEQ2	0xc0
#define _SEQ3 0xe0	_SEQ3	0xe0
#define _SEQ4 0xf0	_SEQ4	0xf0
#define UTF8_WCHAR_MAX static_cast<wchar_t>(std::numeric_limits<utf8_wchar_t>::max())	UTF8_WCHAR_MAX	static_cast<wchar_t>(std::numeric_limits<utf8_wchar_t>::max())
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""common.h"""	"""common.h"""	
#include <cwchar>	<cwchar>	
#include <wctype.h>	<wctype.h>	
#include <sys/time.h>	<sys/time.h>	
#include <stddef.h>	<stddef.h>	
#include <errno.h>	<errno.h>	
"#include ""util.h"""	"""util.h"""	
"#include ""config.h"""	"""config.h"""	
#include <libintl.h>	<libintl.h>	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#define _CODECVT_H 1	_CODECVT_H	1
#ifndef _CODECVT_H	_CODECVT_H	
#pragma GCC system_header	GCC system_header	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_USE_CHAR8_T	_GLIBCXX_USE_CHAR8_T	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if defined(_GLIBCXX_USE_CHAR8_T)	defined(_GLIBCXX_USE_CHAR8_T)	
#if _GLIBCXX_EXTERN_TEMPLATE	_GLIBCXX_EXTERN_TEMPLATE	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if defined(_GLIBCXX_USE_CHAR8_T)	defined(_GLIBCXX_USE_CHAR8_T)	
#define _LOCALE_FACETS_NONIO_TCC 1	_LOCALE_FACETS_NONIO_TCC	1
#ifndef _LOCALE_FACETS_NONIO_TCC	_LOCALE_FACETS_NONIO_TCC	
#pragma GCC system_header	GCC system_header	
#if defined _GLIBCXX_LONG_DOUBLE_COMPAT && defined __LONG_DOUBLE_128__ \	defined _GLIBCXX_LONG_DOUBLE_COMPAT && defined __LONG_DOUBLE_128__ \	
#if defined _GLIBCXX_LONG_DOUBLE_COMPAT && defined __LONG_DOUBLE_128__ \	defined _GLIBCXX_LONG_DOUBLE_COMPAT && defined __LONG_DOUBLE_128__ \	
#if _GLIBCXX_USE_C99_STDIO	_GLIBCXX_USE_C99_STDIO	
#if _GLIBCXX_USE_C99	_GLIBCXX_USE_C99	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if _GLIBCXX_EXTERN_TEMPLATE	_GLIBCXX_EXTERN_TEMPLATE	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#include <bits/locale_facets_nonio.tcc>	<bits/locale_facets_nonio.tcc>	
#include <bits/codecvt.h>	<bits/codecvt.h>	
#include <bits/messages_members.h>	<bits/messages_members.h>	
#include <bits/time_members.h>	<bits/time_members.h>	
#include <ctime>	<ctime>	
#define _LOCALE_FACETS_NONIO_H 1	_LOCALE_FACETS_NONIO_H	1
#ifndef _LOCALE_FACETS_NONIO_H	_LOCALE_FACETS_NONIO_H	
#pragma GCC system_header	GCC system_header	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#if !_GLIBCXX_INLINE_VERSION	!_GLIBCXX_INLINE_VERSION	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if _GLIBCXX_USE_CXX11_ABI	_GLIBCXX_USE_CXX11_ABI	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#if defined _GLIBCXX_LONG_DOUBLE_COMPAT && defined __LONG_DOUBLE_128__ \	defined _GLIBCXX_LONG_DOUBLE_COMPAT && defined __LONG_DOUBLE_128__ \	
#if defined _GLIBCXX_LONG_DOUBLE_COMPAT && defined __LONG_DOUBLE_128__ \	defined _GLIBCXX_LONG_DOUBLE_COMPAT && defined __LONG_DOUBLE_128__ \	
#if defined _GLIBCXX_LONG_DOUBLE_COMPAT && defined __LONG_DOUBLE_128__ \	defined _GLIBCXX_LONG_DOUBLE_COMPAT && defined __LONG_DOUBLE_128__ \	
#if defined _GLIBCXX_LONG_DOUBLE_COMPAT && defined __LONG_DOUBLE_128__ \	defined _GLIBCXX_LONG_DOUBLE_COMPAT && defined __LONG_DOUBLE_128__ \	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
#include <bits/unique_ptr.h>	<bits/unique_ptr.h>	
#include <bits/codecvt.h>	<bits/codecvt.h>	
#include <bits/allocator.h>	<bits/allocator.h>	
#include <bits/stringfwd.h>	<bits/stringfwd.h>	
#include <streambuf>	<streambuf>	
#define _LOCALE_CONV_H 1	_LOCALE_CONV_H	1
#ifndef _LOCALE_CONV_H	_LOCALE_CONV_H	
#if __cplusplus < 201103L	__cplusplus < 201103L	
#ifdef _GLIBCXX_USE_CHAR8_T	_GLIBCXX_USE_CHAR8_T	
#ifdef _GLIBCXX_USE_WCHAR_T	_GLIBCXX_USE_WCHAR_T	
#include <bits/locale_conv.h>	<bits/locale_conv.h>	
#include <bits/locale_facets_nonio.h>	<bits/locale_facets_nonio.h>	
#include <bits/locale_facets.h>	<bits/locale_facets.h>	
#include <bits/locale_classes.h>	<bits/locale_classes.h>	
#include <bits/localefwd.h>	<bits/localefwd.h>	
#define _GLIBCXX_LOCALE 1	_GLIBCXX_LOCALE	1
#ifndef _GLIBCXX_LOCALE	_GLIBCXX_LOCALE	
#pragma GCC system_header	GCC system_header	
#if __cplusplus >= 201103L	__cplusplus >= 201103L	
"#include ""common.h"""	"""common.h"""	
#include <locale>	<locale>	
#include <wctype.h>	<wctype.h>	
"#include ""wcstringutil.h"""	"""wcstringutil.h"""	
"#include ""config.h"""	"""config.h"""	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wgetopt.h"""	"""wgetopt.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""common.h"""	"""common.h"""	
#include <cwchar>	<cwchar>	
#include <cstring>	<cstring>	
#include <stdio.h>	<stdio.h>	
"#include ""config.h"""	"""config.h"""	
#if 0	0	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""wcstringutil.h"""	"""wcstringutil.h"""	
"#include ""reader.h"""	"""reader.h"""	
"#include ""path.h"""	"""path.h"""	
"#include ""future_feature_flags.h"""	"""future_feature_flags.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""expand.h"""	"""expand.h"""	
"#include ""complete.h"""	"""complete.h"""	
"#include ""common.h"""	"""common.h"""	
#include <utility>	<utility>	
#include <unordered_set>	<unordered_set>	
#include <string>	<string>	
#include <memory>	<memory>	
#include <cwchar>	<cwchar>	
#include <unistd.h>	<unistd.h>	
#include <sys/types.h>	<sys/types.h>	
#include <sys/stat.h>	<sys/stat.h>	
#include <stddef.h>	<stddef.h>	
#include <errno.h>	<errno.h>	
#include <dirent.h>	<dirent.h>	
"#include ""wildcard.h"""	"""wildcard.h"""	
"#include ""config.h"""	"""config.h"""	
"#define COMPLETE_FILE_DESC _(L""File"")"	COMPLETE_FILE_DESC	"_(L""File"")"
"#define COMPLETE_DIRECTORY_SYMLINK_DESC _(L""Symbolic link to directory"")"	COMPLETE_DIRECTORY_SYMLINK_DESC	"_(L""Symbolic link to directory"")"
"#define COMPLETE_EXEC_LINK_DESC _(L""Executable link"")"	COMPLETE_EXEC_LINK_DESC	"_(L""Executable link"")"
"#define COMPLETE_SYMLINK_DESC _(L""Symbolic link"")"	COMPLETE_SYMLINK_DESC	"_(L""Symbolic link"")"
"#define COMPLETE_ROTTEN_SYMLINK_DESC _(L""Rotten symbolic link"")"	COMPLETE_ROTTEN_SYMLINK_DESC	"_(L""Rotten symbolic link"")"
"#define COMPLETE_LOOP_SYMLINK_DESC _(L""Symbolic link loop"")"	COMPLETE_LOOP_SYMLINK_DESC	"_(L""Symbolic link loop"")"
"#define COMPLETE_CHAR_DESC _(L""Character device"")"	COMPLETE_CHAR_DESC	"_(L""Character device"")"
"#define COMPLETE_BLOCK_DESC _(L""Block device"")"	COMPLETE_BLOCK_DESC	"_(L""Block device"")"
"#define COMPLETE_FIFO_DESC _(L""Fifo"")"	COMPLETE_FIFO_DESC	"_(L""Fifo"")"
"#define COMPLETE_SOCKET_DESC _(L""Socket"")"	COMPLETE_SOCKET_DESC	"_(L""Socket"")"
"#define COMPLETE_DIRECTORY_DESC _(L""Directory"")"	COMPLETE_DIRECTORY_DESC	"_(L""Directory"")"
"#define COMPLETE_EXEC_DESC _(L""Executable"")"	COMPLETE_EXEC_DESC	"_(L""Executable"")"
#include <features.h>	<features.h>	
#define basename __xpg_basename	basename	__xpg_basename
#define _LIBGEN_H 1	_LIBGEN_H	1
#ifndef _LIBGEN_H	_LIBGEN_H	
#include <bits/types.h>	<bits/types.h>	
#define _STATFS_F_FLAGS	_STATFS_F_FLAGS	
#define _STATFS_F_FRSIZE	_STATFS_F_FRSIZE	
#define _STATFS_F_NAMELEN	_STATFS_F_NAMELEN	
#ifndef _SYS_STATFS_H	_SYS_STATFS_H	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#define _SYS_STATFS_H 1	_SYS_STATFS_H	1
#include <bits/statfs.h>	<bits/statfs.h>	
#include <features.h>	<features.h>	
#ifndef _SYS_STATFS_H	_SYS_STATFS_H	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT_NTH	__REDIRECT_NTH	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT_NTH	__REDIRECT_NTH	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#include <sys/ioctl.h>	<sys/ioctl.h>	
#include <features.h>	<features.h>	
#define UMOUNT_NOFOLLOW UMOUNT_NOFOLLOW	UMOUNT_NOFOLLOW	UMOUNT_NOFOLLOW
#define MNT_EXPIRE MNT_EXPIRE	MNT_EXPIRE	MNT_EXPIRE
#define MNT_DETACH MNT_DETACH	MNT_DETACH	MNT_DETACH
#define MNT_FORCE MNT_FORCE	MNT_FORCE	MNT_FORCE
#define BLKGETSIZE64 _IOR(0x12,114,size_t)	BLKGETSIZE64	_IOR(0x12,114,size_t)
#define BLKBSZSET _IOW(0x12,113,size_t)	BLKBSZSET	_IOW(0x12,113,size_t)
#define BLKBSZGET _IOR(0x12,112,size_t)	BLKBSZGET	_IOR(0x12,112,size_t)
#define BLKSSZGET _IO(0x12,104)	BLKSSZGET	_IO(0x12,104)
#define BLKSECTGET _IO(0x12,103)	BLKSECTGET	_IO(0x12,103)
#define BLKSECTSET _IO(0x12,102)	BLKSECTSET	_IO(0x12,102)
#define BLKFRAGET _IO(0x12,101)	BLKFRAGET	_IO(0x12,101)
#define BLKFRASET _IO(0x12,100)	BLKFRASET	_IO(0x12,100)
#define BLKRAGET _IO(0x12, 99)	BLKRAGET	_IO(0x12, 99)
#define BLKRASET _IO(0x12, 98)	BLKRASET	_IO(0x12, 98)
#define BLKFLSBUF _IO(0x12, 97)	BLKFLSBUF	_IO(0x12, 97)
#define BLKGETSIZE _IO(0x12, 96)	BLKGETSIZE	_IO(0x12, 96)
#define BLKRRPART _IO(0x12, 95)	BLKRRPART	_IO(0x12, 95)
#define BLKROGET _IO(0x12, 94)	BLKROGET	_IO(0x12, 94)
#define BLKROSET _IO(0x12, 93)	BLKROSET	_IO(0x12, 93)
#define MS_MGC_MSK 0xffff0000	MS_MGC_MSK	0xffff0000
#define MS_MGC_VAL 0xc0ed0000	MS_MGC_VAL	0xc0ed0000
#define MS_RMT_MASK (MS_RDONLY|MS_SYNCHRONOUS|MS_MANDLOCK|MS_I_VERSION |MS_LAZYTIME)	MS_RMT_MASK	(MS_RDONLY|MS_SYNCHRONOUS|MS_MANDLOCK|MS_I_VERSION |MS_LAZYTIME)
#define MS_NOUSER MS_NOUSER	MS_NOUSER	MS_NOUSER
#define MS_ACTIVE MS_ACTIVE	MS_ACTIVE	MS_ACTIVE
#define MS_LAZYTIME MS_LAZYTIME	MS_LAZYTIME	MS_LAZYTIME
#define MS_STRICTATIME MS_STRICTATIME	MS_STRICTATIME	MS_STRICTATIME
#define MS_I_VERSION MS_I_VERSION	MS_I_VERSION	MS_I_VERSION
#define MS_KERNMOUNT MS_KERNMOUNT	MS_KERNMOUNT	MS_KERNMOUNT
#define MS_RELATIME MS_RELATIME	MS_RELATIME	MS_RELATIME
#define MS_SHARED MS_SHARED	MS_SHARED	MS_SHARED
#define MS_SLAVE MS_SLAVE	MS_SLAVE	MS_SLAVE
#define MS_PRIVATE MS_PRIVATE	MS_PRIVATE	MS_PRIVATE
#define MS_UNBINDABLE MS_UNBINDABLE	MS_UNBINDABLE	MS_UNBINDABLE
#define MS_POSIXACL MS_POSIXACL	MS_POSIXACL	MS_POSIXACL
#define MS_SILENT MS_SILENT	MS_SILENT	MS_SILENT
#define MS_REC MS_REC	MS_REC	MS_REC
#define MS_MOVE MS_MOVE	MS_MOVE	MS_MOVE
#define MS_BIND MS_BIND	MS_BIND	MS_BIND
#define MS_NODIRATIME MS_NODIRATIME	MS_NODIRATIME	MS_NODIRATIME
#define MS_NOATIME MS_NOATIME	MS_NOATIME	MS_NOATIME
#define MS_DIRSYNC MS_DIRSYNC	MS_DIRSYNC	MS_DIRSYNC
#define MS_MANDLOCK MS_MANDLOCK	MS_MANDLOCK	MS_MANDLOCK
#define MS_REMOUNT MS_REMOUNT	MS_REMOUNT	MS_REMOUNT
#define MS_SYNCHRONOUS MS_SYNCHRONOUS	MS_SYNCHRONOUS	MS_SYNCHRONOUS
#define MS_NOEXEC MS_NOEXEC	MS_NOEXEC	MS_NOEXEC
#define MS_NODEV MS_NODEV	MS_NODEV	MS_NODEV
#define MS_NOSUID MS_NOSUID	MS_NOSUID	MS_NOSUID
#define MS_RDONLY MS_RDONLY	MS_RDONLY	MS_RDONLY
#define BLOCK_SIZE_BITS 10	BLOCK_SIZE_BITS	10
#define BLOCK_SIZE 1024	BLOCK_SIZE	1024
#define _SYS_MOUNT_H 1	_SYS_MOUNT_H	1
#ifndef _SYS_MOUNT_H	_SYS_MOUNT_H	
#include <bits/types.h>	<bits/types.h>	
#define ST_RELATIME ST_RELATIME	ST_RELATIME	ST_RELATIME
#define ST_NODIRATIME ST_NODIRATIME	ST_NODIRATIME	ST_NODIRATIME
#define ST_NOATIME ST_NOATIME	ST_NOATIME	ST_NOATIME
#define ST_IMMUTABLE ST_IMMUTABLE	ST_IMMUTABLE	ST_IMMUTABLE
#define ST_APPEND ST_APPEND	ST_APPEND	ST_APPEND
#define ST_WRITE ST_WRITE	ST_WRITE	ST_WRITE
#define ST_MANDLOCK ST_MANDLOCK	ST_MANDLOCK	ST_MANDLOCK
#define ST_SYNCHRONOUS ST_SYNCHRONOUS	ST_SYNCHRONOUS	ST_SYNCHRONOUS
#define ST_NOEXEC ST_NOEXEC	ST_NOEXEC	ST_NOEXEC
#define ST_NODEV ST_NODEV	ST_NODEV	ST_NODEV
#define ST_NOSUID ST_NOSUID	ST_NOSUID	ST_NOSUID
#define ST_RDONLY ST_RDONLY	ST_RDONLY	ST_RDONLY
#ifndef _SYS_STATVFS_H	_SYS_STATVFS_H	
#if (__WORDSIZE == 32 \	(__WORDSIZE == 32 \	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef _STATVFSBUF_F_UNUSED	_STATVFSBUF_F_UNUSED	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifdef _STATVFSBUF_F_UNUSED	_STATVFSBUF_F_UNUSED	
#ifdef __USE_GNU	__USE_GNU	
#define _SYS_STATVFS_H 1	_SYS_STATVFS_H	1
#include <bits/statvfs.h>	<bits/statvfs.h>	
#include <features.h>	<features.h>	
#ifndef _SYS_STATVFS_H	_SYS_STATVFS_H	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifndef __fsblkcnt_t_defined	__fsblkcnt_t_defined	
#ifndef __fsfilcnt_t_defined	__fsfilcnt_t_defined	
#ifndef __fsblkcnt_t_defined	__fsblkcnt_t_defined	
#ifndef __fsfilcnt_t_defined	__fsfilcnt_t_defined	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT_NTH	__REDIRECT_NTH	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#ifndef __USE_FILE_OFFSET64	__USE_FILE_OFFSET64	
#ifdef __REDIRECT_NTH	__REDIRECT_NTH	
#ifdef __USE_LARGEFILE64	__USE_LARGEFILE64	
#define FISH_NO_ISW_WRAPPERS	FISH_NO_ISW_WRAPPERS	
"#include ""wutil.h"""	"""wutil.h"""	
"#include ""flog.h"""	"""flog.h"""	
"#include ""fallback.h"""	"""fallback.h"""	
"#include ""common.h"""	"""common.h"""	
#include <unordered_map>	<unordered_map>	
#include <string>	<string>	
#include <cwchar>	<cwchar>	
#include <atomic>	<atomic>	
#include <wctype.h>	<wctype.h>	
#include <unistd.h>	<unistd.h>	
#include <sys/types.h>	<sys/types.h>	
#include <sys/statvfs.h>	<sys/statvfs.h>	
#include <sys/mount.h>	<sys/mount.h>	
#include <sys/statfs.h>	<sys/statfs.h>	
#include <cstring>	<cstring>	
#include <sys/stat.h>	<sys/stat.h>	
#include <stdlib.h>	<stdlib.h>	
#include <stdio.h>	<stdio.h>	
#include <limits.h>	<limits.h>	
#include <libgen.h>	<libgen.h>	
#include <fcntl.h>	<fcntl.h>	
#include <errno.h>	<errno.h>	
#include <dirent.h>	<dirent.h>	
"#include ""config.h"""	"""config.h"""	
#if defined(__linux__)	defined(__linux__)	
#ifdef HAVE_STRUCT_DIRENT_D_TYPE	HAVE_STRUCT_DIRENT_D_TYPE	
#if HAVE_STRUCT_DIRENT_D_TYPE	HAVE_STRUCT_DIRENT_D_TYPE	
#ifdef O_CLOEXEC	O_CLOEXEC	
#if defined(__linux__)	defined(__linux__)	
#elif defined(ST_LOCAL)	defined(ST_LOCAL)	
#elif defined(MNT_LOCAL)	defined(MNT_LOCAL)	
#if defined(__UCLIBC__)	defined(__UCLIBC__)	
#elif defined(HAVE__SYS__ERRS) || defined(HAVE_SYS_ERRLIST)	defined(HAVE__SYS__ERRS) || defined(HAVE_SYS_ERRLIST)	
#ifdef HAVE_SYS_ERRLIST	HAVE_SYS_ERRLIST	
#elif defined(HAVE__SYS__ERRS)	defined(HAVE__SYS__ERRS)	
#if 0	0	
#ifdef HAVE_STRUCT_STAT_ST_CTIME_NSEC	HAVE_STRUCT_STAT_ST_CTIME_NSEC	
#elif defined(__APPLE__)	defined(__APPLE__)	
#elif defined(_BSD_SOURCE) || defined(_SVID_SOURCE) || defined(_XOPEN_SOURCE)	defined(_BSD_SOURCE) || defined(_SVID_SOURCE) || defined(_XOPEN_SOURCE)	
"#define LOCALEDIR ""/usr/local/share/locale"""	LOCALEDIR	"""/usr/local/share/locale"""
