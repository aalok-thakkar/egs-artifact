decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	... - ...	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	... - ...	unknown	false
decltype(...)	... - ...	unknown	false
decltype(...)	0	decltype(nullptr)	false
decltype(...)	... , ...	unknown	false
decltype(...)	call to __helper	void	false
decltype(...)	call to __miter_base	source_range_t *	false
decltype(...)	call to __declval	source_range_t *&&	false
decltype(...)	call to __declval	allocator<source_range_t> &	false
decltype(...)	call to __declval	unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>> *&&	false
decltype(...)	call to __declval	allocator<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>>> &	false
decltype(...)	call to __declval	unique_ptr<argument_t, default_delete<argument_t>> *&&	false
decltype(...)	call to __declval	allocator<unique_ptr<argument_t, default_delete<argument_t>>> &	false
decltype(...)	call to __declval	unique_ptr<case_item_t, default_delete<case_item_t>> *&&	false
decltype(...)	call to __declval	allocator<unique_ptr<case_item_t, default_delete<case_item_t>>> &	false
decltype(...)	call to __declval	unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>> *&&	false
decltype(...)	call to __declval	allocator<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>>> &	false
decltype(...)	call to __declval	unique_ptr<andor_job_t, default_delete<andor_job_t>> *&&	false
decltype(...)	call to __declval	allocator<unique_ptr<andor_job_t, default_delete<andor_job_t>>> &	false
decltype(...)	call to __declval	unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>> *&&	false
decltype(...)	call to __declval	allocator<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>>> &	false
decltype(...)	call to __declval	unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>> *&&	false
decltype(...)	call to __declval	allocator<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>>> &	false
decltype(...)	call to __declval	unique_ptr<job_continuation_t, default_delete<job_continuation_t>> *&&	false
decltype(...)	call to __declval	allocator<unique_ptr<job_continuation_t, default_delete<job_continuation_t>>> &	false
decltype(...)	call to __declval	unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>> *&&	false
decltype(...)	call to __declval	allocator<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>>> &	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	0	decltype(nullptr)	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to expression	unknown	false
decltype(...)	__callable	auto	true
decltype(...)	call to __is_convertible_to_basic_istream_test	basic_istream<wchar_t, char_traits<wchar_t>> &	false
decltype(...)	call to __declval	basic_istream<wchar_t, char_traits<wchar_t>> *&&	false
decltype(...)	call to __is_convertible_to_basic_istream_test	basic_istream<char, char_traits<char>> &	false
decltype(...)	call to __declval	basic_istream<char, char_traits<char>> *&&	false
decltype(...)	call to __declval	const __shared_count<_S_atomic> &	false
decltype(...)	__callable	decltype([...](...){...})	true
decltype(...)	__callable	decltype([...](...){...})	true
decltype(...)	call to get	type &	false
decltype(...)	call to get	type &	false
decltype(...)	call to _S_test	__success_type<signed long>	false
decltype(...)	call to _S_test	__result_of_success<void, __invoke_memfun_deref>	false
decltype(...)	call to __test	true_type	false
decltype(...)	call to __miter_base	const node_t **	false
decltype(...)	call to __miter_base	action_t *	false
decltype(...)	call to __miter_base	int *	false
decltype(...)	call to __declval	basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *&&	false
decltype(...)	call to __declval	allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> &	false
decltype(...)	... - ...	long	false
decltype(...)	call to __declval	int *&&	false
decltype(...)	call to __declval	allocator<int> &	false
decltype(...)	call to __declval	const node_t **&&	false
decltype(...)	call to __declval	allocator<const node_t *> &	false
decltype(...)	call to __declval	element_t *&&	false
decltype(...)	call to __declval	allocator<element_t> &	false
decltype(...)	call to __declval	element_t *&&	false
decltype(...)	call to __declval	allocator<element_t> &	false
decltype(...)	call to __declval	action_t *&&	false
decltype(...)	call to __declval	allocator<action_t> &	false
decltype(...)	call to __iter_comp_val	_Iter_less_val	false
decltype(...)	call to __declval	completion_t *&&	false
decltype(...)	call to __declval	allocator<completion_t> &	false
decltype(...)	call to get	type &	false
decltype(...)	call to get	type &	false
decltype(...)	call to _S_test	__result_of_success<unsigned long, __invoke_other>	false
decltype(...)	call to __miter_base	woption *	false
decltype(...)	call to __miter_base	wchar_t *	false
decltype(...)	call to __declval	wchar_t *&&	false
decltype(...)	call to __declval	allocator<wchar_t> &	false
decltype(...)	call to __declval	vector<wchar_t, allocator<wchar_t>> *&&	false
decltype(...)	call to __declval	allocator<vector<wchar_t, allocator<wchar_t>>> &	false
decltype(...)	call to __declval	woption *&&	false
decltype(...)	call to __declval	allocator<woption> &	false
decltype(...)	call to begin	const_iterator	false
decltype(...)	call to end	const_iterator	false
decltype(...)	... , ...	bool	false
decltype(...)	call to __declval	event_description_t *&&	false
decltype(...)	call to __declval	allocator<event_description_t> &	false
decltype(...)	call to expression	unknown	false
decltype(...)	call to generate	void	false
decltype(...)	call to __declval	seed_seq &	false
decltype(...)	call to __declval	unsigned int *&&	false
decltype(...)	call to __miter_base	unsigned int *	false
decltype(...)	call to __test	false_type	false
decltype(...)	call to __declval	allocator<unsigned int> &	false
decltype(...)	call to __miter_base	long *	false
decltype(...)	call to __declval	long *&&	false
decltype(...)	call to __declval	allocator<long> &	false
decltype(...)	call to __declval	rgb_color_t *&&	false
decltype(...)	call to __declval	allocator<rgb_color_t> &	false
decltype(...)	call to get	type &	false
decltype(...)	call to operator-	difference_type	false
decltype(...)	call to __declval	vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> *&&	false
decltype(...)	call to __declval	allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>> &	false
decltype(...)	call to __miter_base	token_t *	false
decltype(...)	call to __declval	token_t *&&	false
decltype(...)	call to __declval	allocator<token_t> &	false
decltype(...)	call to __declval	unique_ptr<expression, default_delete<expression>> *&&	false
decltype(...)	call to __declval	allocator<unique_ptr<expression, default_delete<expression>>> &	false
decltype(...)	__callable	decltype([...](...){...})	true
decltype(...)	call to _S_test	__result_of_success<void, __invoke_other>	false
decltype(...)	call to __miter_base	unsigned long *	false
decltype(...)	call to __declval	unsigned long *&&	false
decltype(...)	call to __declval	allocator<unsigned long> &	false
decltype(...)	call to get	type &	false
decltype(...)	call to get	type &	false
decltype(...)	call to get	type &	false
decltype(...)	call to __declval	list<complete_entry_opt, allocator<complete_entry_opt>> *&&	false
decltype(...)	call to __declval	allocator<list<complete_entry_opt, allocator<complete_entry_opt>>> &	false
decltype(...)	call to __miter_base	__normal_iterator<completion_t *, vector<completion_t, allocator<completion_t>>>	false
decltype(...)	call to operator-	difference_type	false
decltype(...)	call to __iter_comp_val	_Iter_comp_val<..(*)(..)>	false
decltype(...)	call to get	type &	false
decltype(...)	call to __declval	basic_string<char, char_traits<char>, allocator<char>> *&&	false
decltype(...)	call to __declval	allocator<basic_string<char, char_traits<char>, allocator<char>>> &	false
decltype(...)	call to __declval	shared_ptr<env_node_t> *&&	false
decltype(...)	call to __declval	allocator<shared_ptr<env_node_t>> &	false
decltype(...)	call to __declval	event_t *&&	false
decltype(...)	call to __declval	allocator<event_t> &	false
decltype(...)	call to __miter_base	__normal_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	false
decltype(...)	call to operator-	difference_type	false
decltype(...)	call to get	type &	false
decltype(...)	call to get	type &	false
decltype(...)	call to __declval	line_t *&&	false
decltype(...)	call to __declval	allocator<line_t> &	false
decltype(...)	call to __declval	highlighted_char_t *&&	false
decltype(...)	call to __declval	allocator<highlighted_char_t> &	false
decltype(...)	call to __declval	callback_data_t *&&	false
decltype(...)	call to __declval	allocator<callback_data_t> &	false
decltype(...)	call to __iter_comp_val	_Iter_comp_val<lambda [] type at line 116589, col. 45>	false
decltype(...)	call to __declval	shared_ptr<event_t> *&&	false
decltype(...)	call to __declval	allocator<shared_ptr<event_t>> &	false
decltype(...)	call to __declval	shared_ptr<event_handler_t> *&&	false
decltype(...)	call to __declval	allocator<shared_ptr<event_handler_t>> &	false
decltype(...)	call to __iter_comp_val	_Iter_comp_val<lambda [] type at line 142220, col. 15>	false
decltype(...)	call to get	type &	false
decltype(...)	call to __declval	parse_error_t *&&	false
decltype(...)	call to __declval	allocator<parse_error_t> &	false
decltype(...)	call to __iter_comp_val	_Iter_comp_val<lambda [] type at line 151265, col. 19>	false
decltype(...)	call to __miter_base	__normal_iterator<fd_monitor_item_t *, vector<fd_monitor_item_t, allocator<fd_monitor_item_t>>>	false
decltype(...)	call to operator-	difference_type	false
decltype(...)	call to __declval	fd_monitor_item_t *&&	false
decltype(...)	call to __declval	allocator<fd_monitor_item_t> &	false
decltype(...)	... + ...	unknown	false
decltype(...)	call to __miter_base	token_range_t *	false
decltype(...)	call to __declval	token_range_t *&&	false
decltype(...)	call to __declval	allocator<token_range_t> &	false
decltype(...)	call to __iter_comp_val	_Iter_comp_val<lambda [] type at line 80678, col. 15>	false
decltype(...)	call to __miter_base	category_t **	false
decltype(...)	call to __declval	category_t **&&	false
decltype(...)	call to __declval	allocator<category_t *> &	false
decltype(...)	call to __iter_comp_val	_Iter_comp_val<lambda [] type at line 116496, col. 45>	false
decltype(...)	call to get	type &	false
decltype(...)	... + ...	unknown	false
decltype(...)	... + ...	unsigned long	false
decltype(...)	... + ...	unsigned int	false
decltype(...)	call to __declval	highlight_spec_t *&&	false
decltype(...)	call to __declval	allocator<highlight_spec_t> &	false
decltype(...)	call to __declval	input_mapping_name_t *&&	false
decltype(...)	call to __declval	allocator<input_mapping_name_t> &	false
decltype(...)	call to __declval	char_event_t *&&	false
decltype(...)	call to __declval	allocator<char_event_t> &	false
decltype(...)	call to __declval	input_mapping_t *&&	false
decltype(...)	call to __declval	allocator<input_mapping_t> &	false
decltype(...)	call to __iter_comp_val	_Iter_comp_val<..(*)(..)>	false
decltype(...)	call to __miter_base	const wchar_t **	false
decltype(...)	call to __declval	const wchar_t **&&	false
decltype(...)	call to __declval	allocator<const wchar_t *> &	false
decltype(...)	call to __declval	shared_ptr<const io_data_t> *&&	false
decltype(...)	call to __declval	allocator<shared_ptr<const io_data_t>> &	false
decltype(...)	call to get	type &	false
decltype(...)	call to __declval	comp_t *&&	false
decltype(...)	call to __declval	allocator<comp_t> &	false
decltype(...)	call to __miter_base	const argument_t **	false
decltype(...)	call to __declval	unique_ptr<process_t, default_delete<process_t>> *&&	false
decltype(...)	call to __declval	allocator<unique_ptr<process_t, default_delete<process_t>>> &	false
decltype(...)	call to __declval	concrete_assignment *&&	false
decltype(...)	call to __declval	allocator<concrete_assignment> &	false
decltype(...)	call to __declval	const argument_t **&&	false
decltype(...)	call to __declval	allocator<const argument_t *> &	false
decltype(...)	call to __declval	redirection_spec_t *&&	false
decltype(...)	call to __declval	allocator<redirection_spec_t> &	false
decltype(...)	... + ...	unsigned long	false
decltype(...)	call to __declval	tok_t *&&	false
decltype(...)	call to __declval	allocator<tok_t> &	false
decltype(...)	call to __miter_base	__normal_iterator<parse_error_t *, vector<parse_error_t, allocator<parse_error_t>>>	false
decltype(...)	call to operator-	difference_type	false
decltype(...)	call to __declval	unique_ptr<profile_item_t, default_delete<profile_item_t>> *&&	false
decltype(...)	call to __declval	allocator<unique_ptr<profile_item_t, default_delete<profile_item_t>>> &	false
decltype(...)	call to begin	const_iterator	false
decltype(...)	call to end	const_iterator	false
decltype(...)	call to __declval	edit_t *&&	false
decltype(...)	call to __declval	allocator<edit_t> &	false
decltype(...)	call to __declval	shared_ptr<reader_data_t> *&&	false
decltype(...)	call to __declval	allocator<shared_ptr<reader_data_t>> &	false
decltype(...)	__callable	decltype([...](...){...})	true
decltype(...)	__callable	decltype([...](...){...})	true
decltype(...)	call to __declval	timer_snapshot_t *&&	false
decltype(...)	call to __declval	allocator<timer_snapshot_t> &	false
decltype(...)	call to __miter_base	char *	false
decltype(...)	call to __declval	char *&&	false
decltype(...)	call to __declval	allocator<char> &	false
