first	_T1	first
second	_T2	second
_M_current	_Iterator	_M_current
_M_current	_Iterator	_M_current
iter	iterator	iter
container	_Container *	container
container	_Container *	container
container	_Container *	container
current	_Iterator	current
__max_exponent10	const int	__max_exponent10
__max_exponent10	const int	__max_exponent10
__max_exponent10	const int	__max_exponent10
_M_allocated_capacity	size_type	_M_allocated_capacity
_M_string_length	size_type	_M_string_length
_M_local_buf	_CharT[]	_M_local_buf
_M_dataplus	_Alloc_hider	_M_dataplus
npos	const size_type	npos
_M_p	pointer	_M_p
(unknown field)	union <unnamed>	(unknown field)
_M_elems	_Type	_M_elems
_M_t	__uniq_ptr_impl<_Tp, _Dp>	_M_t
_M_t	tuple<type, _Dp>	_M_t
_M_t	__uniq_ptr_impl<_Tp, _Dp>	_M_t
_M_impl	_Vector_impl	_M_impl
_M_start	pointer	_M_start
_M_finish	pointer	_M_finish
_M_end_of_storage	pointer	_M_end_of_storage
__max	const long	__max
__buf	type	__buf
_M_this	vector<_Tp, _Alloc> *	_M_this
_M_impl	_Vector_impl	_M_impl
_M_impl	_Vector_impl	_M_impl
_M_impl	_Vector_impl	_M_impl
_M_impl	_Vector_impl	_M_impl
_M_impl	_Vector_impl	_M_impl
_M_impl	_Vector_impl	_M_impl
_M_impl	_Vector_impl	_M_impl
_M_impl	_Vector_impl	_M_impl
_M_impl	_Vector_impl	_M_impl
_M_impl	_Vector_impl	_M_impl
_M_impl	_Vector_impl	_M_impl
_M_impl	_Vector_impl	_M_impl
_M_impl	_Vector_impl	_M_impl
filled	bool	filled
storage	char[]	storage
impl_	maybe_impl_t<T>	impl_
cleanup	const function<..(..)>	cleanup
fd_	int	fd_
lock	mutex	lock
data	Data	data
value	Data *	value
lock	unique_lock<mutex>	lock
str	const wchar_t *const	str
val	T	val
restored	bool	restored
saved_value	T	saved_value
ref	T *const	ref
match_distance_second	size_t	match_distance_second
match_distance_first	size_t	match_distance_first
type	fuzzy_match_type_t	type
value_	atomic<T>	value_
value_	T *	value_
value_	T	value_
v_	NodeVisitor &	v_
type	const type_t	type
reverse_	const bool	reverse_
Category	category_t	Category
Category	category_t	Category
contents	unique_ptr<AstNode, default_delete<AstNode>>	contents
contents	node_unique_ptr_t	contents
contents	const contents_ptr_t *	contents
Category	category_t	Category
length	uint32_t	length
ptr	unique_ptr<ContentsNode, default_delete<ContentsNode>>	ptr
type	parse_token_type_t	type
semi_nl	optional_t<token_t<end>>	semi_nl
contents	unique_ptr<token_t<end>, default_delete<token_t<end>>>	contents
continuations	job_conjunction_continuation_list_t	continuations
job	job_t	job
bg	optional_t<token_t<background>>	bg
contents	unique_ptr<token_t<background>, default_delete<token_t<background>>>	contents
continuation	job_continuation_list_t	continuation
statement	statement_t	statement
contents	contents_ptr_t	contents
contents	node_unique_ptr_t	contents
variables	variable_assignment_list_t	variables
time	optional_t<keyword_t<kw_time>>	time
contents	unique_ptr<keyword_t<kw_time>, default_delete<keyword_t<kw_time>>>	contents
decorator	optional_t<keyword_t<kw_and, kw_or>>	decorator
contents	unique_ptr<keyword_t<kw_and, kw_or>, default_delete<keyword_t<kw_and, kw_or>>>	contents
extras_	extras_t	extras_
errors	source_range_list_t	errors
semis	source_range_list_t	semis
comments	source_range_list_t	comments
top_	node_unique_ptr_t	top_
any_error_	bool	any_error_
args_or_redirs	argument_or_redirection_list_t	args_or_redirs
cases	case_item_list_t	cases
kw_switch	keyword_t<kw_switch>	kw_switch
argument	argument_t	argument
semi_nl	semi_nl_t	semi_nl
end	keyword_t<kw_end>	end
args_or_redirs	argument_or_redirection_list_t	args_or_redirs
else_clause	optional_t<else_clause_t>	else_clause
contents	unique_ptr<else_clause_t, default_delete<else_clause_t>>	contents
elseif_clauses	elseif_clause_list_t	elseif_clauses
if_clause	if_clause_t	if_clause
body	job_list_t	body
andor_tail	andor_job_list_t	andor_tail
condition	job_conjunction_t	condition
kw_if	keyword_t<kw_if>	kw_if
end	keyword_t<kw_end>	end
args_or_redirs	argument_or_redirection_list_t	args_or_redirs
jobs	job_list_t	jobs
header	header_ptr_t	header
contents	node_unique_ptr_t	contents
end	keyword_t<kw_end>	end
semi_nl	optional_t<token_t<end>>	semi_nl
kw_begin	keyword_t<kw_begin>	kw_begin
args	argument_list_t	args
kw_function	keyword_t<kw_function>	kw_function
first_arg	argument_t	first_arg
semi_nl	semi_nl_t	semi_nl
andor_tail	andor_job_list_t	andor_tail
condition	job_conjunction_t	condition
kw_while	keyword_t<kw_while>	kw_while
args	argument_list_t	args
kw_for	keyword_t<kw_for>	kw_for
var_name	string_t	var_name
kw_in	keyword_t<kw_in>	kw_in
semi_nl	semi_nl_t	semi_nl
arguments	argument_list_t	arguments
args_or_redirs	argument_or_redirection_list_t	args_or_redirs
opt_decoration	optional_t<keyword_t<kw_command, kw_builtin, kw_exec>>	opt_decoration
contents	unique_ptr<keyword_t<kw_command, kw_builtin, kw_exec>, default_delete<keyword_t<kw_command, kw_builtin, kw_exec>>>	contents
command	string_t	command
body	job_list_t	body
kw_else	keyword_t<kw_else>	kw_else
semi_nl	semi_nl_t	semi_nl
body	job_list_t	body
arguments	argument_list_t	arguments
kw_case	keyword_t<kw_case>	kw_case
semi_nl	semi_nl_t	semi_nl
if_clause	if_clause_t	if_clause
kw_else	keyword_t<kw_else>	kw_else
job	job_conjunction_t	job
contents	contents_ptr_t	contents
contents	node_unique_ptr_t	contents
job	job_t	job
conjunction	token_t<andand, oror>	conjunction
statement	statement_t	statement
variables	variable_assignment_list_t	variables
pipe	token_t<pipe>	pipe
newlines	maybe_newlines_t	newlines
v_	traversal_t	v_
stack_	vector<const node_t *, allocator<const node_t *>>	stack_
current_	const node_t *	current_
contents	statement_t	contents
time	optional_t<keyword_t<kw_time>>	time
variables	variable_assignment_list_t	variables
kw	keyword_t<kw_not, kw_exclam>	kw
oper	token_t<redirection>	oper
target	string_t	target
start	uint32_t	start
length	uint32_t	length
parent	const node_t *	parent
category	const category_t	category
range	source_range_t	range
unsourced	bool	unsourced
AstType	type_t	AstType
AstType	type_t	AstType
AstType	type_t	AstType
kw	parse_keyword_t	kw
parent_	const node_t *	parent_
(captured this)	populator_t *const	(captured this)
unwinding_	bool	unwinding_
g_instance	category_list_t *const	g_instance
error	category_t	error
enabled	relaxed_atomic_bool_t	enabled
range	source_range_t	range
visit_stack_	vector<const node_t *, allocator<const node_t *>>	visit_stack_
tokens_	token_stream_t	tokens_
storage_	wcstring	storage_
storage_	wcstring	storage_
comment_ranges	vector<source_range_t, allocator<source_range_t>>	comment_ranges
ast_construction	category_t	ast_construction
unsourced	bool	unsourced
range	source_range_t	range
is_newline	bool	is_newline
keyword	parse_keyword_t	keyword
first	source_range_t	first
second	const wchar_t *	second
type	parse_token_type_t	type
unsourced	bool	unsourced
may_be_variable_assignment	bool	may_be_variable_assignment
range	source_range_t	range
unsourced	bool	unsourced
range	source_range_t	range
is_help_argument	bool	is_help_argument
has_dash_prefix	bool	has_dash_prefix
ast_	ast_t *const	ast_
source_start	source_offset_t	source_start
source_length	source_offset_t	source_length
top_type_	const type_t	top_type_
tok_error	tokenizer_error_t	tok_error
out_errors_	parse_error_list_t *	out_errors_
text	wcstring	text
text	wcstring	text
code	parse_error_code_t	code
source_start	size_t	source_start
source_length	size_t	source_length
flags_	parse_tree_flags_t	flags_
debug	category_t	debug
tok_	tokenizer_t	tok_
type	token_type_t	type
error	tokenizer_error_t	error
offset	size_t	offset
length	size_t	length
kMaxLookahead	size_t	kMaxLookahead
src_	const wcstring &	src_
count_	size_t	count_
lookahead_	array<parse_token_t, 2UL>	lookahead_
start_	size_t	start_
total	source_range_t	total
any_unsourced	bool	any_unsourced
_M_t	__uniq_ptr_impl<decorated_statement_t, default_delete<decorated_statement_t>>	_M_t
_M_t	__uniq_ptr_impl<not_statement_t, default_delete<not_statement_t>>	_M_t
_M_t	__uniq_ptr_impl<block_statement_t, default_delete<block_statement_t>>	_M_t
_M_t	__uniq_ptr_impl<if_statement_t, default_delete<if_statement_t>>	_M_t
_M_t	__uniq_ptr_impl<switch_statement_t, default_delete<switch_statement_t>>	_M_t
_M_t	__uniq_ptr_impl<for_header_t, default_delete<for_header_t>>	_M_t
_M_t	__uniq_ptr_impl<while_header_t, default_delete<while_header_t>>	_M_t
_M_t	__uniq_ptr_impl<function_header_t, default_delete<function_header_t>>	_M_t
_M_t	__uniq_ptr_impl<begin_header_t, default_delete<begin_header_t>>	_M_t
reverse_	const bool	reverse_
v_	source_range_visitor_t &	v_
_M_t	__uniq_ptr_impl<freestanding_argument_list_t, default_delete<freestanding_argument_list_t>>	_M_t
_M_t	__uniq_ptr_impl<job_list_t, default_delete<job_list_t>>	_M_t
value	const bool	value
_M_t	__uniq_ptr_impl<redirection_t, default_delete<redirection_t>>	_M_t
second	decltype(nullptr)	second
first	source_range_t	first
reverse_	const bool	reverse_
v_	parent_setter_t &	v_
_M_elems	_Type	_M_elems
_M_len	size_type	_M_len
_M_array	iterator	_M_array
_M_len	size_type	_M_len
_M_array	iterator	_M_array
AstType	const type_t	AstType
AstType	const type_t	AstType
unsourced	bool	unsourced
_M_elems	_Type	_M_elems
_M_elems	_Type	_M_elems
contents	const contents_ptr_t *	contents
ptr	unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>>	ptr
length	uint32_t	length
AstType	const type_t	AstType
contents	const contents_ptr_t *	contents
ptr	unique_ptr<job_continuation_t, default_delete<job_continuation_t>>	ptr
length	uint32_t	length
AstType	const type_t	AstType
AstType	const type_t	AstType
unsourced	bool	unsourced
range	source_range_t	range
contents	const contents_ptr_t *	contents
ptr	unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>>	ptr
length	uint32_t	length
AstType	const type_t	AstType
AstType	const type_t	AstType
_M_elems	_Type	_M_elems
contents	const contents_ptr_t *	contents
ptr	unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>>	ptr
length	uint32_t	length
AstType	const type_t	AstType
AstType	const type_t	AstType
AstType	const type_t	AstType
AstType	const type_t	AstType
contents	const contents_ptr_t *	contents
ptr	unique_ptr<andor_job_t, default_delete<andor_job_t>>	ptr
length	uint32_t	length
AstType	const type_t	AstType
contents	const contents_ptr_t *	contents
ptr	unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>>	ptr
length	uint32_t	length
AstType	const type_t	AstType
AstType	const type_t	AstType
AstType	const type_t	AstType
contents	const contents_ptr_t *	contents
ptr	unique_ptr<case_item_t, default_delete<case_item_t>>	ptr
length	uint32_t	length
AstType	const type_t	AstType
AstType	const type_t	AstType
AstType	const type_t	AstType
AstType	const type_t	AstType
AstType	const type_t	AstType
AstType	const type_t	AstType
AstType	const type_t	AstType
impl_	maybe_impl_t<source_range_t>	impl_
contents	const contents_ptr_t *	contents
ptr	unique_ptr<argument_t, default_delete<argument_t>>	ptr
length	uint32_t	length
AstType	const type_t	AstType
contents	const contents_ptr_t *	contents
ptr	unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>>	ptr
length	uint32_t	length
AstType	const type_t	AstType
_M_finish	pointer	_M_finish
_M_end_of_storage	pointer	_M_end_of_storage
_M_t	__uniq_ptr_impl<argument_t, default_delete<argument_t>>	_M_t
str	const wchar_t *const	str
val	parse_keyword_t	val
Category	const category_t	Category
Category	const category_t	Category
Category	const category_t	Category
Category	const category_t	Category
Category	const category_t	Category
Category	const category_t	Category
Category	const category_t	Category
Category	const category_t	Category
Category	const category_t	Category
Category	const category_t	Category
Category	const category_t	Category
Category	const category_t	Category
_M_t	__uniq_ptr_impl<keyword_t<kw_command, kw_builtin, kw_exec>, default_delete<keyword_t<kw_command, kw_builtin, kw_exec>>>	_M_t
Category	const category_t	Category
Category	const category_t	Category
Category	const category_t	Category
Category	const category_t	Category
Category	const category_t	Category
Category	const category_t	Category
Category	const category_t	Category
Category	const category_t	Category
_M_t	__uniq_ptr_impl<else_clause_t, default_delete<else_clause_t>>	_M_t
Category	const category_t	Category
_M_t	__uniq_ptr_impl<keyword_t<kw_and, kw_or>, default_delete<keyword_t<kw_and, kw_or>>>	_M_t
_M_t	__uniq_ptr_impl<keyword_t<kw_time>, default_delete<keyword_t<kw_time>>>	_M_t
_M_t	__uniq_ptr_impl<token_t<background>, default_delete<token_t<background>>>	_M_t
_M_t	__uniq_ptr_impl<token_t<end>, default_delete<token_t<end>>>	_M_t
Category	const category_t	Category
Category	const category_t	Category
Category	const category_t	Category
_M_t	__uniq_ptr_impl<node_t, node_deleter_t>	_M_t
Category	const category_t	Category
Category	const category_t	Category
Category	const category_t	Category
Category	const category_t	Category
Category	const category_t	Category
name	const wchar_t *const	name
_M_current	source_range_t *	_M_current
_M_current	unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>> *	_M_current
_M_current	unique_ptr<argument_t, default_delete<argument_t>> *	_M_current
_M_current	unique_ptr<case_item_t, default_delete<case_item_t>> *	_M_current
_M_current	unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>> *	_M_current
_M_current	unique_ptr<andor_job_t, default_delete<andor_job_t>> *	_M_current
_M_current	unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>> *	_M_current
_M_current	unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>> *	_M_current
_M_current	unique_ptr<job_continuation_t, default_delete<job_continuation_t>> *	_M_current
_M_current	unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>> *	_M_current
_M_end_of_storage	pointer	_M_end_of_storage
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
_M_end_of_storage	pointer	_M_end_of_storage
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
_M_end_of_storage	pointer	_M_end_of_storage
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
_M_end_of_storage	pointer	_M_end_of_storage
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
_M_end_of_storage	pointer	_M_end_of_storage
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
_M_end_of_storage	pointer	_M_end_of_storage
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
_M_end_of_storage	pointer	_M_end_of_storage
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
_M_end_of_storage	pointer	_M_end_of_storage
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
_M_end_of_storage	pointer	_M_end_of_storage
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
_M_current	source_range_t *	_M_current
_M_t	tuple<redirection_t *, default_delete<redirection_t>>	_M_t
_M_t	tuple<job_list_t *, default_delete<job_list_t>>	_M_t
_M_t	tuple<freestanding_argument_list_t *, default_delete<freestanding_argument_list_t>>	_M_t
_M_t	tuple<begin_header_t *, default_delete<begin_header_t>>	_M_t
_M_t	tuple<function_header_t *, default_delete<function_header_t>>	_M_t
_M_t	tuple<while_header_t *, default_delete<while_header_t>>	_M_t
_M_t	tuple<for_header_t *, default_delete<for_header_t>>	_M_t
_M_t	tuple<switch_statement_t *, default_delete<switch_statement_t>>	_M_t
_M_t	tuple<if_statement_t *, default_delete<if_statement_t>>	_M_t
_M_t	tuple<block_statement_t *, default_delete<block_statement_t>>	_M_t
_M_t	tuple<not_statement_t *, default_delete<not_statement_t>>	_M_t
_M_t	tuple<decorated_statement_t *, default_delete<decorated_statement_t>>	_M_t
_M_t	tuple<token_t<end> *, default_delete<token_t<end>>>	_M_t
_M_t	tuple<token_t<background> *, default_delete<token_t<background>>>	_M_t
_M_t	tuple<keyword_t<kw_time> *, default_delete<keyword_t<kw_time>>>	_M_t
_M_t	tuple<keyword_t<kw_and, kw_or> *, default_delete<keyword_t<kw_and, kw_or>>>	_M_t
_M_t	tuple<else_clause_t *, default_delete<else_clause_t>>	_M_t
_M_t	tuple<keyword_t<kw_command, kw_builtin, kw_exec> *, default_delete<keyword_t<kw_command, kw_builtin, kw_exec>>>	_M_t
_M_finish	pointer	_M_finish
_M_end_of_storage	pointer	_M_end_of_storage
_M_t	tuple<argument_t *, default_delete<argument_t>>	_M_t
_M_start	pointer	_M_start
filled	bool	filled
storage	char[8]	storage
_M_t	__uniq_ptr_impl<case_item_t, default_delete<case_item_t>>	_M_t
_M_t	__uniq_ptr_impl<elseif_clause_t, default_delete<elseif_clause_t>>	_M_t
_M_t	__uniq_ptr_impl<andor_job_t, default_delete<andor_job_t>>	_M_t
_M_t	__uniq_ptr_impl<argument_or_redirection_t, default_delete<argument_or_redirection_t>>	_M_t
_M_t	__uniq_ptr_impl<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>>	_M_t
_M_t	__uniq_ptr_impl<job_continuation_t, default_delete<job_continuation_t>>	_M_t
_M_t	__uniq_ptr_impl<variable_assignment_t, default_delete<variable_assignment_t>>	_M_t
_M_t	__uniq_ptr_impl<job_conjunction_t, default_delete<job_conjunction_t>>	_M_t
_M_current	const unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>> *	_M_current
_M_current	const unique_ptr<job_continuation_t, default_delete<job_continuation_t>> *	_M_current
_M_current	const unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>> *	_M_current
_M_current	const unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>> *	_M_current
_M_current	const unique_ptr<andor_job_t, default_delete<andor_job_t>> *	_M_current
_M_current	const unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>> *	_M_current
_M_current	const unique_ptr<case_item_t, default_delete<case_item_t>> *	_M_current
_M_current	const unique_ptr<argument_t, default_delete<argument_t>> *	_M_current
_M_current	const unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>> *	_M_current
_M_t	tuple<job_conjunction_t *, default_delete<job_conjunction_t>>	_M_t
_M_t	tuple<variable_assignment_t *, default_delete<variable_assignment_t>>	_M_t
_M_t	tuple<job_continuation_t *, default_delete<job_continuation_t>>	_M_t
_M_t	tuple<job_conjunction_continuation_t *, default_delete<job_conjunction_continuation_t>>	_M_t
_M_t	tuple<argument_or_redirection_t *, default_delete<argument_or_redirection_t>>	_M_t
_M_t	tuple<andor_job_t *, default_delete<andor_job_t>>	_M_t
_M_t	tuple<elseif_clause_t *, default_delete<elseif_clause_t>>	_M_t
_M_t	tuple<case_item_t *, default_delete<case_item_t>>	_M_t
_M_t	tuple<node_t *, node_deleter_t>	_M_t
_M_start	pointer	_M_start
_M_head_impl	redirection_t *	_M_head_impl
value	const bool	value
_M_head_impl	begin_header_t *	_M_head_impl
_M_head_impl	function_header_t *	_M_head_impl
_M_head_impl	while_header_t *	_M_head_impl
_M_head_impl	for_header_t *	_M_head_impl
_M_head_impl	switch_statement_t *	_M_head_impl
_M_head_impl	if_statement_t *	_M_head_impl
_M_head_impl	block_statement_t *	_M_head_impl
_M_head_impl	not_statement_t *	_M_head_impl
_M_head_impl	decorated_statement_t *	_M_head_impl
_M_head_impl	freestanding_argument_list_t *	_M_head_impl
_M_head_impl	job_list_t *	_M_head_impl
_M_head_impl	argument_t *	_M_head_impl
_M_current	unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>> *	_M_current
_M_current	unique_ptr<argument_t, default_delete<argument_t>> *	_M_current
_M_current	unique_ptr<case_item_t, default_delete<case_item_t>> *	_M_current
_M_current	unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>> *	_M_current
_M_current	unique_ptr<andor_job_t, default_delete<andor_job_t>> *	_M_current
_M_current	unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>> *	_M_current
_M_current	unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>> *	_M_current
_M_current	unique_ptr<job_continuation_t, default_delete<job_continuation_t>> *	_M_current
_M_current	unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>> *	_M_current
_M_head_impl	token_t<end> *	_M_head_impl
_M_head_impl	token_t<background> *	_M_head_impl
_M_head_impl	keyword_t<kw_time> *	_M_head_impl
_M_head_impl	keyword_t<kw_and, kw_or> *	_M_head_impl
_M_head_impl	else_clause_t *	_M_head_impl
_M_head_impl	keyword_t<kw_command, kw_builtin, kw_exec> *	_M_head_impl
_M_head_impl	node_t *	_M_head_impl
_M_head_impl	case_item_t *	_M_head_impl
_M_head_impl	elseif_clause_t *	_M_head_impl
_M_head_impl	andor_job_t *	_M_head_impl
_M_head_impl	argument_or_redirection_t *	_M_head_impl
_M_head_impl	job_conjunction_continuation_t *	_M_head_impl
_M_head_impl	job_continuation_t *	_M_head_impl
_M_head_impl	variable_assignment_t *	_M_head_impl
_M_head_impl	job_conjunction_t *	_M_head_impl
gp_offset	unsigned int	gp_offset
fp_offset	unsigned int	fp_offset
overflow_arg_area	void *	overflow_arg_area
reg_save_area	void *	reg_save_area
__max_exponent10	const int	__max_exponent10
__digits10	const int	__digits10
__is_signed	const bool	__is_signed
__max_digits10	const int	__max_digits10
__digits	const int	__digits
__is_signed	const bool	__is_signed
__max	const _Value	__max
__min	const _Value	__min
value	_Tp	value
__stop	const bool	__stop
alignment_value	const size_t	alignment_value
_S_len	const size_t	_S_len
_S_size	const size_t	_S_size
_S_alignment	const size_t	_S_alignment
_S_size	const size_t	_S_size
_S_alignment	const size_t	_S_alignment
__align	struct <unnamed>	__align
__data	unsigned char[]	__data
__align	struct <unnamed>	__align
__data	unsigned char[]	__data
__size	size_t	__size
_M_pred	_Predicate	_M_pred
_M_it1	_Iterator1	_M_it1
_M_comp	_Compare	_M_comp
_M_value	_Value &	_M_value
_M_comp	_Compare	_M_comp
_M_pred	_Predicate	_M_pred
_M_it1	_Iterator1	_M_it1
_M_value	_Value &	_M_value
_M_comp	_Compare	_M_comp
_M_comp	_Compare	_M_comp
_M_comp	_Compare	_M_comp
__max_align_ld	long double	__max_align_ld
__max_align_ll	long long	__max_align_ll
__name	const char *	__name
_M_exception_object	void *	_M_exception_object
_M_ptr	exception_ptr	_M_ptr
_M_buffer	pointer	_M_buffer
_M_len	size_type	_M_len
_M_original_len	size_type	_M_original_len
_M_iter	_OutputIterator	_M_iter
__value	union <unnamed>	__value
__count	int	__count
__wchb	char[4]	__wchb
__wch	unsigned int	__wch
__names	const char *[13]	__names
__ctype_toupper	const int *	__ctype_toupper
__ctype_tolower	const int *	__ctype_tolower
__ctype_b	const unsigned short *	__ctype_b
__locales	__locale_data *[13]	__locales
_M_state	_StateT	_M_state
_M_off	streamoff	_M_off
__val	int[2]	__val
tv_nsec	__syscall_slong_t	tv_nsec
tv_sec	__time_t	tv_sec
sched_priority	int	sched_priority
__bits	__cpu_mask[16]	__bits
tv_usec	__suseconds_t	tv_usec
tv_sec	__time_t	tv_sec
(unnamed bitfield)	int	(unnamed bitfield)
(unnamed bitfield)	int	(unnamed bitfield)
(unnamed bitfield)	int	(unnamed bitfield)
(unnamed bitfield)	int	(unnamed bitfield)
(unnamed bitfield)	int	(unnamed bitfield)
(unnamed bitfield)	int	(unnamed bitfield)
(unnamed bitfield)	int	(unnamed bitfield)
(unnamed bitfield)	int	(unnamed bitfield)
(unnamed bitfield)	int	(unnamed bitfield)
(unnamed bitfield)	int	(unnamed bitfield)
(unnamed bitfield)	int	(unnamed bitfield)
tai	int	tai
stbcnt	__syscall_slong_t	stbcnt
errcnt	__syscall_slong_t	errcnt
calcnt	__syscall_slong_t	calcnt
jitcnt	__syscall_slong_t	jitcnt
stabil	__syscall_slong_t	stabil
shift	int	shift
jitter	__syscall_slong_t	jitter
ppsfreq	__syscall_slong_t	ppsfreq
tick	__syscall_slong_t	tick
time	timeval	time
tolerance	__syscall_slong_t	tolerance
precision	__syscall_slong_t	precision
constant	__syscall_slong_t	constant
status	int	status
esterror	__syscall_slong_t	esterror
maxerror	__syscall_slong_t	maxerror
freq	__syscall_slong_t	freq
offset	__syscall_slong_t	offset
modes	unsigned int	modes
tm_zone	const char *	tm_zone
tm_gmtoff	long	tm_gmtoff
tm_isdst	int	tm_isdst
tm_yday	int	tm_yday
tm_wday	int	tm_wday
tm_year	int	tm_year
tm_mon	int	tm_mon
tm_mday	int	tm_mday
tm_hour	int	tm_hour
tm_min	int	tm_min
tm_sec	int	tm_sec
it_value	timespec	it_value
it_interval	timespec	it_interval
__flags	unsigned int	__flags
__pad2	unsigned long	__pad2
__pad1	unsigned char[7]	__pad1
__rwelision	signed char	__rwelision
__shared	int	__shared
__cur_writer	int	__cur_writer
__pad4	unsigned int	__pad4
__pad3	unsigned int	__pad3
__writers_futex	unsigned int	__writers_futex
__wrphase_futex	unsigned int	__wrphase_futex
__writers	unsigned int	__writers
__readers	unsigned int	__readers
__g_signals	unsigned int[2]	__g_signals
__wrefs	unsigned int	__wrefs
__g1_orig_size	unsigned int	__g1_orig_size
__g_size	unsigned int[2]	__g_size
__g_refs	unsigned int[2]	__g_refs
(unknown field)	union <unnamed>	(unknown field)
(unknown field)	union <unnamed>	(unknown field)
__g1_start32	struct <unnamed>	__g1_start32
__g1_start	unsigned long long	__g1_start
__high	unsigned int	__high
__low	unsigned int	__low
__wseq32	struct <unnamed>	__wseq32
__wseq	unsigned long long	__wseq
__high	unsigned int	__high
__low	unsigned int	__low
__list	__pthread_list_t	__list
__elision	short	__elision
__spins	short	__spins
__kind	int	__kind
__nusers	unsigned int	__nusers
__owner	int	__owner
__count	unsigned int	__count
__lock	int	__lock
__next	__pthread_internal_list *	__next
__prev	__pthread_internal_list *	__prev
__align	int	__align
__size	char[4]	__size
__align	long	__align
__size	char[32]	__size
__align	long	__align
__size	char[8]	__size
__align	long	__align
__size	char[56]	__size
__data	__pthread_rwlock_arch_t	__data
__align	long	__align
__size	char[56]	__size
__align	int	__align
__size	char[4]	__size
__align	int	__align
__size	char[4]	__size
__align	long long	__align
__size	char[48]	__size
__data	__pthread_cond_s	__data
__align	long	__align
__size	char[40]	__size
__data	__pthread_mutex_s	__data
__cancel_type	int	__cancel_type
__do_it	int	__do_it
__cancel_arg	void *	__cancel_arg
__cancel_routine	..(*)(..)	__cancel_routine
__pad	void *[4]	__pad
__cancel_jmp_buf	struct <unnamed>[1]	__cancel_jmp_buf
__mask_was_saved	int	__mask_was_saved
__cancel_jmp_buf	__jmp_buf	__cancel_jmp_buf
__prev	_pthread_cleanup_buffer *	__prev
__canceltype	int	__canceltype
__arg	void *	__arg
__routine	..(*)(..)	__routine
_M_cond	__gthread_cond_t	_M_cond
_M_device	__mutex_type &	_M_device
_M_mutex	__gthread_recursive_mutex_t	_M_mutex
_M_mutex	__gthread_mutex_t	_M_mutex
value	second_argument_type	value
op	_Operation	op
value	first_argument_type	value
op	_Operation	op
_M_f	..:: *	_M_f
_M_f	..:: *	_M_f
_M_f	..:: *	_M_f
_M_f	..:: *	_M_f
_M_f	..:: *	_M_f
_M_f	..:: *	_M_f
_M_f	..:: *	_M_f
_M_f	..:: *	_M_f
_M_ptr	..(*)(..)	_M_ptr
_M_ptr	..(*)(..)	_M_ptr
_M_pred	_Predicate	_M_pred
_M_pred	_Predicate	_M_pred
_M_a	const _Alloc *	_M_a
_M_a	const _Alloc *	_M_a
_M_a	_Sink	_M_a
_M_array	iterator	_M_array
_M_len	size_type	_M_len
int_n_sign_posn	char	int_n_sign_posn
int_p_sign_posn	char	int_p_sign_posn
int_n_sep_by_space	char	int_n_sep_by_space
int_n_cs_precedes	char	int_n_cs_precedes
int_p_sep_by_space	char	int_p_sep_by_space
int_p_cs_precedes	char	int_p_cs_precedes
n_sign_posn	char	n_sign_posn
p_sign_posn	char	p_sign_posn
n_sep_by_space	char	n_sep_by_space
n_cs_precedes	char	n_cs_precedes
p_sep_by_space	char	p_sep_by_space
p_cs_precedes	char	p_cs_precedes
frac_digits	char	frac_digits
int_frac_digits	char	int_frac_digits
negative_sign	char *	negative_sign
positive_sign	char *	positive_sign
mon_grouping	char *	mon_grouping
mon_thousands_sep	char *	mon_thousands_sep
mon_decimal_point	char *	mon_decimal_point
currency_symbol	char *	currency_symbol
int_curr_symbol	char *	int_curr_symbol
grouping	char *	grouping
thousands_sep	char *	thousands_sep
decimal_point	char *	decimal_point
__val	unsigned long[16]	__val
fds_bits	__fd_mask[16]	fds_bits
__a	unsigned long long	__a
__init	unsigned short	__init
__c	unsigned short	__c
__old_x	unsigned short[3]	__old_x
__x	unsigned short[3]	__x
end_ptr	int32_t *	end_ptr
rand_sep	int	rand_sep
rand_deg	int	rand_deg
rand_type	int	rand_type
state	int32_t *	state
rptr	int32_t *	rptr
fptr	int32_t *	fptr
rem	int	rem
quot	int	quot
rem	long	rem
quot	long	quot
rem	long long	rem
quot	long long	quot
__state	__mbstate_t	__state
__pos	__off_t	__pos
__state	__mbstate_t	__state
__pos	__off64_t	__pos
_unused2	char[20]	_unused2
_mode	int	_mode
__pad5	size_t	__pad5
_freeres_buf	void *	_freeres_buf
_freeres_list	_IO_FILE *	_freeres_list
_wide_data	_IO_wide_data *	_wide_data
_codecvt	_IO_codecvt *	_codecvt
_offset	__off64_t	_offset
_lock	_IO_lock_t *	_lock
_shortbuf	char[1]	_shortbuf
_vtable_offset	signed char	_vtable_offset
_cur_column	unsigned short	_cur_column
_old_offset	__off_t	_old_offset
_flags2	int	_flags2
_fileno	int	_fileno
_chain	_IO_FILE *	_chain
_markers	_IO_marker *	_markers
_IO_save_end	char *	_IO_save_end
_IO_backup_base	char *	_IO_backup_base
_IO_save_base	char *	_IO_save_base
_IO_buf_end	char *	_IO_buf_end
_IO_buf_base	char *	_IO_buf_base
_IO_write_end	char *	_IO_write_end
_IO_write_ptr	char *	_IO_write_ptr
_IO_write_base	char *	_IO_write_base
_IO_read_base	char *	_IO_read_base
_IO_read_end	char *	_IO_read_end
_IO_read_ptr	char *	_IO_read_ptr
_flags	int	_flags
close	cookie_close_function_t *	close
seek	cookie_seek_function_t *	seek
write	cookie_write_function_t *	write
read	cookie_read_function_t *	read
__min	const int	__min
__max	const int	__max
_M_errno	int	_M_errno
__enable_hash_call	bool	__enable_hash_call
__enable_hash_call	bool	__enable_hash_call
_M_msg	__cow_string	_M_msg
_M_msg	__cow_string	_M_msg
(unknown field)	union <unnamed>	(unknown field)
_M_bytes	char[8]	_M_bytes
_M_p	const char *	_M_p
_M_head_impl	_Head	_M_head_impl
value	const unsigned long	value
_M_ptr	pointer	_M_ptr
_M_alloc	_Alloc *	_M_alloc
_M_data	_Tp *	_M_data
_M_storage	type	_M_storage
_M_storage	unsigned char[]	_M_storage
_M_t	_Tp	_M_t
_M_pi	_Sp_counted_base<_Lp> *	_M_pi
_M_pi	_Sp_counted_base<_Lp> *	_M_pi
_M_ptr	element_type *	_M_ptr
_M_refcount	__weak_count<_Lp>	_M_refcount
_M_ptr	element_type *	_M_ptr
_M_refcount	__shared_count<_Lp>	_M_refcount
_M_use_count	_Atomic_word	_M_use_count
_M_use_count	_Atomic_word	_M_use_count
_M_weak_count	_Atomic_word	_M_weak_count
_M_use_count	_Atomic_word	_M_use_count
_M_weak_count	_Atomic_word	_M_weak_count
_M_impl	_Impl	_M_impl
_M_use_count	_Atomic_word	_M_use_count
_M_a	const _Alloc &	_M_a
_M_tp	_Tp	_M_tp
_M_ptr	_Ptr	_M_ptr
_M_weak_this	__weak_ptr<_Tp, _Lp>	_M_weak_this
_M_storage	__aligned_buffer<_Tp>	_M_storage
_M_impl	_Impl	_M_impl
_M_ptr	_Ptr	_M_ptr
_M_weak_this	weak_ptr<_Tp>	_M_weak_this
_M_i	__int_type	_M_i
_S_alignment	int	_S_alignment
_M_i	__atomic_flag_data_type	_M_i
_M_p	__pointer_type	_M_p
_M_key2	unsigned char	_M_key2
_M_key1	unsigned char	_M_key1
_M_ptr	_Tp1 *	_M_ptr
_M_ptr	_Tp *	_M_ptr
round_style	float_round_style	round_style
tinyness_before	bool	tinyness_before
traps	bool	traps
is_modulo	bool	is_modulo
is_bounded	bool	is_bounded
is_iec559	bool	is_iec559
has_denorm_loss	bool	has_denorm_loss
has_denorm	float_denorm_style	has_denorm
has_signaling_NaN	bool	has_signaling_NaN
has_quiet_NaN	bool	has_quiet_NaN
has_infinity	bool	has_infinity
max_exponent10	int	max_exponent10
max_exponent	int	max_exponent
min_exponent10	int	min_exponent10
min_exponent	int	min_exponent
radix	int	radix
is_exact	bool	is_exact
is_integer	bool	is_integer
is_signed	bool	is_signed
max_digits10	int	max_digits10
digits10	int	digits10
digits	int	digits
is_specialized	bool	is_specialized
round_style	float_round_style	round_style
tinyness_before	bool	tinyness_before
traps	bool	traps
is_modulo	bool	is_modulo
is_bounded	bool	is_bounded
is_iec559	bool	is_iec559
has_denorm_loss	bool	has_denorm_loss
has_denorm	float_denorm_style	has_denorm
has_signaling_NaN	bool	has_signaling_NaN
has_quiet_NaN	bool	has_quiet_NaN
has_infinity	bool	has_infinity
max_exponent10	int	max_exponent10
max_exponent	int	max_exponent
min_exponent10	int	min_exponent10
min_exponent	int	min_exponent
radix	int	radix
is_exact	bool	is_exact
is_integer	bool	is_integer
is_signed	bool	is_signed
max_digits10	int	max_digits10
digits10	int	digits10
digits	int	digits
is_specialized	bool	is_specialized
round_style	float_round_style	round_style
tinyness_before	bool	tinyness_before
traps	bool	traps
is_modulo	bool	is_modulo
is_bounded	bool	is_bounded
is_iec559	bool	is_iec559
has_denorm_loss	bool	has_denorm_loss
has_denorm	float_denorm_style	has_denorm
has_signaling_NaN	bool	has_signaling_NaN
has_quiet_NaN	bool	has_quiet_NaN
has_infinity	bool	has_infinity
max_exponent10	int	max_exponent10
max_exponent	int	max_exponent
min_exponent10	int	min_exponent10
min_exponent	int	min_exponent
radix	int	radix
is_exact	bool	is_exact
is_integer	bool	is_integer
is_signed	bool	is_signed
max_digits10	int	max_digits10
digits10	int	digits10
digits	int	digits
is_specialized	bool	is_specialized
round_style	float_round_style	round_style
tinyness_before	bool	tinyness_before
traps	bool	traps
is_modulo	bool	is_modulo
is_bounded	bool	is_bounded
is_iec559	bool	is_iec559
has_denorm_loss	bool	has_denorm_loss
has_denorm	float_denorm_style	has_denorm
has_signaling_NaN	bool	has_signaling_NaN
has_quiet_NaN	bool	has_quiet_NaN
has_infinity	bool	has_infinity
max_exponent10	int	max_exponent10
max_exponent	int	max_exponent
min_exponent10	int	min_exponent10
min_exponent	int	min_exponent
radix	int	radix
is_exact	bool	is_exact
is_integer	bool	is_integer
is_signed	bool	is_signed
digits10	int	digits10
digits	int	digits
max_digits10	int	max_digits10
is_specialized	bool	is_specialized
round_style	float_round_style	round_style
tinyness_before	bool	tinyness_before
traps	bool	traps
is_modulo	bool	is_modulo
is_bounded	bool	is_bounded
is_iec559	bool	is_iec559
has_denorm_loss	bool	has_denorm_loss
has_denorm	float_denorm_style	has_denorm
has_signaling_NaN	bool	has_signaling_NaN
has_quiet_NaN	bool	has_quiet_NaN
has_infinity	bool	has_infinity
max_exponent10	int	max_exponent10
max_exponent	int	max_exponent
min_exponent10	int	min_exponent10
min_exponent	int	min_exponent
max_digits10	int	max_digits10
radix	int	radix
is_exact	bool	is_exact
is_integer	bool	is_integer
is_signed	bool	is_signed
digits10	int	digits10
digits	int	digits
is_specialized	bool	is_specialized
round_style	float_round_style	round_style
tinyness_before	bool	tinyness_before
traps	bool	traps
is_modulo	bool	is_modulo
is_bounded	bool	is_bounded
is_iec559	bool	is_iec559
has_denorm_loss	bool	has_denorm_loss
has_denorm	float_denorm_style	has_denorm
has_signaling_NaN	bool	has_signaling_NaN
has_quiet_NaN	bool	has_quiet_NaN
has_infinity	bool	has_infinity
max_exponent10	int	max_exponent10
max_exponent	int	max_exponent
min_exponent10	int	min_exponent10
min_exponent	int	min_exponent
radix	int	radix
is_exact	bool	is_exact
is_integer	bool	is_integer
is_signed	bool	is_signed
max_digits10	int	max_digits10
digits10	int	digits10
digits	int	digits
is_specialized	bool	is_specialized
round_style	float_round_style	round_style
tinyness_before	bool	tinyness_before
traps	bool	traps
is_modulo	bool	is_modulo
is_bounded	bool	is_bounded
is_iec559	bool	is_iec559
has_denorm_loss	bool	has_denorm_loss
has_denorm	float_denorm_style	has_denorm
has_signaling_NaN	bool	has_signaling_NaN
has_quiet_NaN	bool	has_quiet_NaN
has_infinity	bool	has_infinity
max_exponent10	int	max_exponent10
max_exponent	int	max_exponent
min_exponent10	int	min_exponent10
min_exponent	int	min_exponent
radix	int	radix
is_exact	bool	is_exact
is_integer	bool	is_integer
is_signed	bool	is_signed
max_digits10	int	max_digits10
digits10	int	digits10
digits	int	digits
is_specialized	bool	is_specialized
round_style	float_round_style	round_style
tinyness_before	bool	tinyness_before
traps	bool	traps
is_modulo	bool	is_modulo
is_bounded	bool	is_bounded
is_iec559	bool	is_iec559
has_denorm_loss	bool	has_denorm_loss
has_denorm	float_denorm_style	has_denorm
has_signaling_NaN	bool	has_signaling_NaN
has_quiet_NaN	bool	has_quiet_NaN
has_infinity	bool	has_infinity
max_exponent10	int	max_exponent10
max_exponent	int	max_exponent
min_exponent10	int	min_exponent10
min_exponent	int	min_exponent
radix	int	radix
is_exact	bool	is_exact
is_integer	bool	is_integer
is_signed	bool	is_signed
max_digits10	int	max_digits10
digits10	int	digits10
digits	int	digits
is_specialized	bool	is_specialized
round_style	float_round_style	round_style
tinyness_before	bool	tinyness_before
traps	bool	traps
is_modulo	bool	is_modulo
is_bounded	bool	is_bounded
is_iec559	bool	is_iec559
has_denorm_loss	bool	has_denorm_loss
has_denorm	float_denorm_style	has_denorm
has_signaling_NaN	bool	has_signaling_NaN
has_quiet_NaN	bool	has_quiet_NaN
has_infinity	bool	has_infinity
max_exponent10	int	max_exponent10
max_exponent	int	max_exponent
min_exponent10	int	min_exponent10
min_exponent	int	min_exponent
radix	int	radix
is_exact	bool	is_exact
is_integer	bool	is_integer
is_signed	bool	is_signed
max_digits10	int	max_digits10
digits10	int	digits10
digits	int	digits
is_specialized	bool	is_specialized
round_style	float_round_style	round_style
tinyness_before	bool	tinyness_before
traps	bool	traps
is_modulo	bool	is_modulo
is_bounded	bool	is_bounded
is_iec559	bool	is_iec559
has_denorm_loss	bool	has_denorm_loss
has_denorm	float_denorm_style	has_denorm
has_signaling_NaN	bool	has_signaling_NaN
has_quiet_NaN	bool	has_quiet_NaN
has_infinity	bool	has_infinity
max_exponent10	int	max_exponent10
max_exponent	int	max_exponent
min_exponent10	int	min_exponent10
min_exponent	int	min_exponent
radix	int	radix
is_exact	bool	is_exact
is_integer	bool	is_integer
is_signed	bool	is_signed
max_digits10	int	max_digits10
digits10	int	digits10
digits	int	digits
is_specialized	bool	is_specialized
round_style	float_round_style	round_style
tinyness_before	bool	tinyness_before
traps	bool	traps
is_modulo	bool	is_modulo
is_bounded	bool	is_bounded
is_iec559	bool	is_iec559
has_denorm_loss	bool	has_denorm_loss
has_denorm	float_denorm_style	has_denorm
has_signaling_NaN	bool	has_signaling_NaN
has_quiet_NaN	bool	has_quiet_NaN
has_infinity	bool	has_infinity
max_exponent10	int	max_exponent10
max_exponent	int	max_exponent
min_exponent10	int	min_exponent10
min_exponent	int	min_exponent
radix	int	radix
is_exact	bool	is_exact
is_integer	bool	is_integer
is_signed	bool	is_signed
max_digits10	int	max_digits10
digits10	int	digits10
digits	int	digits
is_specialized	bool	is_specialized
round_style	float_round_style	round_style
tinyness_before	bool	tinyness_before
traps	bool	traps
is_modulo	bool	is_modulo
is_bounded	bool	is_bounded
is_iec559	bool	is_iec559
has_denorm_loss	bool	has_denorm_loss
has_denorm	float_denorm_style	has_denorm
has_signaling_NaN	bool	has_signaling_NaN
has_quiet_NaN	bool	has_quiet_NaN
has_infinity	bool	has_infinity
max_exponent10	int	max_exponent10
max_exponent	int	max_exponent
min_exponent10	int	min_exponent10
min_exponent	int	min_exponent
radix	int	radix
is_exact	bool	is_exact
is_integer	bool	is_integer
is_signed	bool	is_signed
max_digits10	int	max_digits10
digits10	int	digits10
digits	int	digits
is_specialized	bool	is_specialized
round_style	float_round_style	round_style
tinyness_before	bool	tinyness_before
traps	bool	traps
is_modulo	bool	is_modulo
is_bounded	bool	is_bounded
is_iec559	bool	is_iec559
has_denorm_loss	bool	has_denorm_loss
has_denorm	float_denorm_style	has_denorm
has_signaling_NaN	bool	has_signaling_NaN
has_quiet_NaN	bool	has_quiet_NaN
has_infinity	bool	has_infinity
max_exponent10	int	max_exponent10
max_exponent	int	max_exponent
min_exponent10	int	min_exponent10
min_exponent	int	min_exponent
radix	int	radix
is_exact	bool	is_exact
is_integer	bool	is_integer
is_signed	bool	is_signed
max_digits10	int	max_digits10
digits10	int	digits10
digits	int	digits
is_specialized	bool	is_specialized
round_style	float_round_style	round_style
tinyness_before	bool	tinyness_before
traps	bool	traps
is_modulo	bool	is_modulo
is_bounded	bool	is_bounded
is_iec559	bool	is_iec559
has_denorm_loss	bool	has_denorm_loss
has_denorm	float_denorm_style	has_denorm
has_signaling_NaN	bool	has_signaling_NaN
has_quiet_NaN	bool	has_quiet_NaN
has_infinity	bool	has_infinity
max_exponent10	int	max_exponent10
max_exponent	int	max_exponent
min_exponent10	int	min_exponent10
min_exponent	int	min_exponent
radix	int	radix
is_exact	bool	is_exact
is_integer	bool	is_integer
is_signed	bool	is_signed
max_digits10	int	max_digits10
digits10	int	digits10
digits	int	digits
is_specialized	bool	is_specialized
round_style	float_round_style	round_style
tinyness_before	bool	tinyness_before
traps	bool	traps
is_modulo	bool	is_modulo
is_bounded	bool	is_bounded
is_iec559	bool	is_iec559
has_denorm_loss	bool	has_denorm_loss
has_denorm	float_denorm_style	has_denorm
has_signaling_NaN	bool	has_signaling_NaN
has_quiet_NaN	bool	has_quiet_NaN
has_infinity	bool	has_infinity
max_exponent10	int	max_exponent10
max_exponent	int	max_exponent
min_exponent10	int	min_exponent10
min_exponent	int	min_exponent
radix	int	radix
is_exact	bool	is_exact
is_integer	bool	is_integer
is_signed	bool	is_signed
max_digits10	int	max_digits10
digits10	int	digits10
digits	int	digits
is_specialized	bool	is_specialized
round_style	float_round_style	round_style
tinyness_before	bool	tinyness_before
traps	bool	traps
is_modulo	bool	is_modulo
is_bounded	bool	is_bounded
is_iec559	bool	is_iec559
has_denorm_loss	bool	has_denorm_loss
has_denorm	float_denorm_style	has_denorm
has_signaling_NaN	bool	has_signaling_NaN
has_quiet_NaN	bool	has_quiet_NaN
has_infinity	bool	has_infinity
max_exponent10	int	max_exponent10
max_exponent	int	max_exponent
min_exponent10	int	min_exponent10
min_exponent	int	min_exponent
radix	int	radix
is_exact	bool	is_exact
is_integer	bool	is_integer
is_signed	bool	is_signed
max_digits10	int	max_digits10
digits10	int	digits10
digits	int	digits
is_specialized	bool	is_specialized
round_style	float_round_style	round_style
tinyness_before	bool	tinyness_before
traps	bool	traps
is_modulo	bool	is_modulo
is_bounded	bool	is_bounded
is_iec559	bool	is_iec559
has_denorm_loss	bool	has_denorm_loss
has_denorm	float_denorm_style	has_denorm
has_signaling_NaN	bool	has_signaling_NaN
has_quiet_NaN	bool	has_quiet_NaN
has_infinity	bool	has_infinity
max_exponent10	int	max_exponent10
max_exponent	int	max_exponent
min_exponent10	int	min_exponent10
min_exponent	int	min_exponent
radix	int	radix
is_exact	bool	is_exact
is_integer	bool	is_integer
is_signed	bool	is_signed
max_digits10	int	max_digits10
digits10	int	digits10
digits	int	digits
is_specialized	bool	is_specialized
round_style	float_round_style	round_style
tinyness_before	bool	tinyness_before
traps	bool	traps
is_modulo	bool	is_modulo
is_bounded	bool	is_bounded
is_iec559	bool	is_iec559
has_denorm_loss	bool	has_denorm_loss
has_denorm	float_denorm_style	has_denorm
has_signaling_NaN	bool	has_signaling_NaN
has_quiet_NaN	bool	has_quiet_NaN
has_infinity	bool	has_infinity
max_exponent10	int	max_exponent10
max_exponent	int	max_exponent
min_exponent10	int	min_exponent10
min_exponent	int	min_exponent
radix	int	radix
is_exact	bool	is_exact
is_integer	bool	is_integer
is_signed	bool	is_signed
max_digits10	int	max_digits10
digits10	int	digits10
digits	int	digits
is_specialized	bool	is_specialized
round_style	float_round_style	round_style
tinyness_before	bool	tinyness_before
traps	bool	traps
is_modulo	bool	is_modulo
is_bounded	bool	is_bounded
is_iec559	bool	is_iec559
has_denorm_loss	bool	has_denorm_loss
has_denorm	float_denorm_style	has_denorm
has_signaling_NaN	bool	has_signaling_NaN
has_quiet_NaN	bool	has_quiet_NaN
has_infinity	bool	has_infinity
max_exponent10	int	max_exponent10
max_exponent	int	max_exponent
min_exponent10	int	min_exponent10
min_exponent	int	min_exponent
radix	int	radix
is_exact	bool	is_exact
is_integer	bool	is_integer
is_signed	bool	is_signed
max_digits10	int	max_digits10
digits10	int	digits10
digits	int	digits
is_specialized	bool	is_specialized
round_style	float_round_style	round_style
tinyness_before	bool	tinyness_before
traps	bool	traps
is_modulo	bool	is_modulo
is_bounded	bool	is_bounded
is_iec559	bool	is_iec559
has_denorm_loss	bool	has_denorm_loss
has_denorm	float_denorm_style	has_denorm
has_signaling_NaN	bool	has_signaling_NaN
has_quiet_NaN	bool	has_quiet_NaN
has_infinity	bool	has_infinity
max_exponent10	int	max_exponent10
max_exponent	int	max_exponent
min_exponent10	int	min_exponent10
min_exponent	int	min_exponent
radix	int	radix
is_exact	bool	is_exact
is_integer	bool	is_integer
is_signed	bool	is_signed
max_digits10	int	max_digits10
digits10	int	digits10
digits	int	digits
is_specialized	bool	is_specialized
round_style	float_round_style	round_style
tinyness_before	bool	tinyness_before
traps	bool	traps
is_modulo	bool	is_modulo
is_bounded	bool	is_bounded
is_iec559	bool	is_iec559
has_denorm_loss	bool	has_denorm_loss
has_denorm	float_denorm_style	has_denorm
has_signaling_NaN	bool	has_signaling_NaN
has_quiet_NaN	bool	has_quiet_NaN
has_infinity	bool	has_infinity
max_exponent10	int	max_exponent10
max_exponent	int	max_exponent
min_exponent10	int	min_exponent10
min_exponent	int	min_exponent
radix	int	radix
is_exact	bool	is_exact
is_integer	bool	is_integer
is_signed	bool	is_signed
max_digits10	int	max_digits10
digits10	int	digits10
digits	int	digits
is_specialized	bool	is_specialized
_M_next_resize	size_t	_M_next_resize
_M_max_load_factor	float	_M_max_load_factor
_S_growth_factor	const size_t	_S_growth_factor
_M_cur	__node_type *	_M_cur
_M_storage	__aligned_buffer<_Value>	_M_storage
_M_h	__hashtable_alloc &	_M_h
_M_next_resize	size_t	_M_next_resize
_M_max_load_factor	float	_M_max_load_factor
_M_nxt	_Hash_node_base *	_M_nxt
_M_bucket_count	size_t	_M_bucket_count
_M_bucket	size_t	_M_bucket
_M_cur	_Hash_node<_Value, false> *	_M_cur
_M_storage	__aligned_buffer<_Tp>	_M_storage
_M_bucket_count	size_t	_M_bucket_count
_M_bucket	size_t	_M_bucket
_M_cur	_Hash_node<_Value, true> *	_M_cur
_M_tp	_Tp	_M_tp
_M_hash_code	size_t	_M_hash_code
_M_h	__hashtable_alloc &	_M_h
_M_nodes	__node_type *	_M_nodes
_S_growth_factor	const size_t	_S_growth_factor
_M_rehash_policy	_RehashPolicy	_M_rehash_policy
_M_before_begin	__node_base	_M_before_begin
_M_bucket_count	size_type	_M_bucket_count
_M_buckets	__bucket_type *	_M_buckets
_M_element_count	size_type	_M_element_count
first	bool	first
second	unsigned long	second
_M_single_bucket	__bucket_type	_M_single_bucket
_M_h	_Hashtable	_M_h
_M_h	_Hashtable	_M_h
_M_h	_Hashtable	_M_h
_M_h	_Hashtable	_M_h
c_cc	unsigned char[8]	c_cc
c_line	unsigned char	c_line
c_lflag	unsigned short	c_lflag
c_cflag	unsigned short	c_cflag
c_oflag	unsigned short	c_oflag
c_iflag	unsigned short	c_iflag
ws_ypixel	unsigned short	ws_ypixel
ws_xpixel	unsigned short	ws_xpixel
ws_col	unsigned short	ws_col
ws_row	unsigned short	ws_row
_M_param	param_type	_M_param
_M_a	_IntType	_M_a
_M_b	_IntType	_M_b
_M_i	_Tp	_M_i
_M_base	__atomic_base<bool>	_M_base
_M_b	__base_type	_M_b
_S_alignment	int	_S_alignment
_S_min_alignment	int	_S_min_alignment
_M_invoker	_Invoker_type	_M_invoker
_M_functor	_Any_data	_M_functor
_M_manager	_Manager_type	_M_manager
__stored_locally	const bool	__stored_locally
_M_pod_data	char[16]	_M_pod_data
__value	_Tp	__value
_M_max_align	const size_t	_M_max_align
_M_max_size	const size_t	_M_max_size
_M_unused	_Nocopy_types	_M_unused
_M_member_pointer	..:: *	_M_member_pointer
_M_function_pointer	..(*)(..)	_M_function_pointer
_M_const_object	const void *	_M_const_object
_M_object	void *	_M_object
_M_pm	_MemObjPtr	_M_pm
_M_pmf	_MemFunPtr	_M_pmf
_M_bound_args	tuple<_Bound_args...>	_M_bound_args
_M_f	_Functor	_M_f
_M_bound_args	tuple<_Bound_args...>	_M_bound_args
_M_f	_Functor	_M_f
den	intmax_t	den
num	intmax_t	num
den	intmax_t	den
num	intmax_t	num
__g2	uintmax_t	__g2
__d2	uintmax_t	__d2
__g	uintmax_t	__g
__g2	uintmax_t	__g2
__d2	uintmax_t	__d2
__g	uintmax_t	__g
den	intmax_t	den
num	intmax_t	num
den	intmax_t	den
num	intmax_t	num
__gcd2	const intmax_t	__gcd2
__gcd1	const intmax_t	__gcd1
den	intmax_t	den
num	intmax_t	num
__rem	uintmax_t	__rem
__quot_lo	uintmax_t	__quot_lo
__quot_hi	uintmax_t	__quot_hi
__new_n1	uintmax_t	__new_n1
__n0_top	uintmax_t	__n0_top
__n1_shifted	uintmax_t	__n1_shifted
__new_n0	uintmax_t	__new_n0
__new_d	uintmax_t	__new_d
__c2	uintmax_t	__c2
__c1	uintmax_t	__c1
__coshift	int	__coshift
__coshift_	int	__coshift_
__shift	int	__shift
__rem	uintmax_t	__rem
__quot	uintmax_t	__quot
__q0	uintmax_t	__q0
__r0	uintmax_t	__r0
__r0z	uintmax_t	__r0z
__r0y	uintmax_t	__r0y
__n	uintmax_t	__n
__r0x	uintmax_t	__r0x
__q0x	uintmax_t	__q0x
__q1	uintmax_t	__q1
__r1	uintmax_t	__r1
__r1z	uintmax_t	__r1z
__r1y	uintmax_t	__r1y
__m	uintmax_t	__m
__r1x	uintmax_t	__r1x
__q1x	uintmax_t	__q1x
__d0	uintmax_t	__d0
__d1	uintmax_t	__d1
__c	uintmax_t	__c
__lo	uintmax_t	__lo
__hi	uintmax_t	__hi
__mix_hi	uintmax_t	__mix_hi
__mix_lo	uintmax_t	__mix_lo
__mix	uintmax_t	__mix
__x1y1	uintmax_t	__x1y1
__x1y0	uintmax_t	__x1y0
__x0y1	uintmax_t	__x0y1
__x0y0	uintmax_t	__x0y0
__y1	uintmax_t	__y1
__y0	uintmax_t	__y0
__x1	uintmax_t	__x1
__x0	uintmax_t	__x0
__c	uintmax_t	__c
__hi	uintmax_t	__hi
__lo	uintmax_t	__lo
__hi	uintmax_t	__hi
__lo	uintmax_t	__lo
value	const intmax_t	value
__b1	const uintmax_t	__b1
__b0	const uintmax_t	__b0
__a1	const uintmax_t	__a1
__a0	const uintmax_t	__a0
__c	const uintmax_t	__c
__d	duration	__d
__r	rep	__r
is_steady	bool	is_steady
is_steady	bool	is_steady
_M_value	int	_M_value
_M_cat	const error_category *	_M_cat
_M_code	error_code	_M_code
_M_value	int	_M_value
_M_cat	const error_category *	_M_cat
_M_device	mutex_type &	_M_device
_M_mutex	__native_type	_M_mutex
_M_owns	bool	_M_owns
_M_device	mutex_type *	_M_device
__args	_Args &	__args
__f	_Callable &	__f
_M_once	__native_type	_M_once
_M_mutex	__native_type	_M_mutex
_M_impl	_Vector_impl	_M_impl
_M_impl	_Vector_impl	_M_impl
_M_impl	_Vector_impl	_M_impl
_M_impl	_Vector_impl	_M_impl
_M_impl	_Vector_impl	_M_impl
_M_impl	_Vector_impl	_M_impl
_M_impl	_Vector_impl	_M_impl
_M_impl	_Vector_impl	_M_impl
_M_impl	_Vector_impl	_M_impl
_M_impl	_Vector_impl	_M_impl
_M_impl	_Vector_impl	_M_impl
_M_p	_Bit_type *	_M_p
_M_offset	unsigned int	_M_offset
_M_impl	_Bvector_impl	_M_impl
_M_start	_Bit_iterator	_M_start
_M_finish	_Bit_iterator	_M_finish
_M_end_of_storage	_Bit_pointer	_M_end_of_storage
_M_p	_Bit_type *	_M_p
_M_mask	_Bit_type	_M_mask
array	CharT **	array
pipestatus	vector<int, allocator<int>>	pipestatus
status	int	status
kill_signal	int	kill_signal
vals_	shared_ptr<const vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	vals_
flags_	env_var_flags_t	flags_
bin	wcstring	bin
bin	wcstring	bin
doc	wcstring	doc
doc	wcstring	doc
sysconf	wcstring	sysconf
sysconf	wcstring	sysconf
data	wcstring	data
data	wcstring	data
impl_	const unique_ptr<env_stack_impl_t, default_delete<env_stack_impl_t>>	impl_
impl_	const unique_ptr<env_stack_impl_t, default_delete<env_stack_impl_t>>	impl_
d_name	char[256]	d_name
d_type	unsigned char	d_type
d_reclen	unsigned short	d_reclen
d_off	__off64_t	d_off
d_ino	__ino64_t	d_ino
d_name	char[256]	d_name
d_type	unsigned char	d_type
d_reclen	unsigned short	d_reclen
d_off	__off_t	d_off
d_ino	__ino_t	d_ino
device	dev_t	device
device	dev_t	device
inode	ino_t	inode
inode	ino_t	inode
inode	ino_t	inode
dir	DIR *	dir
mod_nanoseconds	long	mod_nanoseconds
mod_seconds	time_t	mod_seconds
change_nanoseconds	long	change_nanoseconds
change_seconds	time_t	change_seconds
size	uint64_t	size
autoloaded_files_	unordered_map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>>>	autoloaded_files_
current_autoloading_	unordered_set<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	current_autoloading_
cache_	unique_ptr<autoload_file_cache_t, default_delete<autoload_file_cache_t>>	cache_
cache_	unique_ptr<autoload_file_cache_t, default_delete<autoload_file_cache_t>>	cache_
env_var_name_	const wcstring	env_var_name_
sival_ptr	void *	sival_ptr
sival_int	int	sival_int
_sifields	union <unnamed>	_sifields
__pad0	int	__pad0
si_code	int	si_code
si_errno	int	si_errno
si_signo	int	si_signo
_sigsys	struct <unnamed>	_sigsys
_sigpoll	struct <unnamed>	_sigpoll
_sigfault	struct <unnamed>	_sigfault
_sigchld	struct <unnamed>	_sigchld
_rt	struct <unnamed>	_rt
_timer	struct <unnamed>	_timer
_kill	struct <unnamed>	_kill
_pad	int[28]	_pad
_arch	unsigned int	_arch
_syscall	int	_syscall
_call_addr	void *	_call_addr
si_fd	int	si_fd
si_band	long	si_band
_bounds	union <unnamed>	_bounds
si_addr_lsb	short	si_addr_lsb
si_addr	void *	si_addr
_pkey	__uint32_t	_pkey
_addr_bnd	struct <unnamed>	_addr_bnd
_upper	void *	_upper
_lower	void *	_lower
si_stime	__clock_t	si_stime
si_utime	__clock_t	si_utime
si_status	int	si_status
si_uid	__uid_t	si_uid
si_pid	__pid_t	si_pid
si_sigval	__sigval_t	si_sigval
si_uid	__uid_t	si_uid
si_pid	__pid_t	si_pid
si_sigval	__sigval_t	si_sigval
si_overrun	int	si_overrun
si_tid	int	si_tid
si_uid	__uid_t	si_uid
si_pid	__pid_t	si_pid
_sigev_un	union <unnamed>	_sigev_un
sigev_notify	int	sigev_notify
sigev_signo	int	sigev_signo
sigev_value	__sigval_t	sigev_value
_sigev_thread	struct <unnamed>	_sigev_thread
_tid	__pid_t	_tid
_pad	int[12]	_pad
_attribute	pthread_attr_t *	_attribute
_function	..(*)(..)	_function
sa_restorer	..(*)(..)	sa_restorer
sa_flags	int	sa_flags
sa_mask	__sigset_t	sa_mask
__sigaction_handler	union <unnamed>	__sigaction_handler
sa_sigaction	..(*)(..)	sa_sigaction
sa_handler	__sighandler_t	sa_handler
ymmh	_ymmh_state	ymmh
xstate_hdr	_xsave_hdr	xstate_hdr
fpstate	_fpstate	fpstate
ymmh_space	__uint32_t[64]	ymmh_space
__glibc_reserved2	__uint64_t[5]	__glibc_reserved2
__glibc_reserved1	__uint64_t[2]	__glibc_reserved1
xstate_bv	__uint64_t	xstate_bv
__reserved1	__uint64_t[8]	__reserved1
(unknown field)	union <unnamed>	(unknown field)
cr2	__uint64_t	cr2
oldmask	__uint64_t	oldmask
trapno	__uint64_t	trapno
err	__uint64_t	err
__pad0	unsigned short	__pad0
fs	unsigned short	fs
gs	unsigned short	gs
cs	unsigned short	cs
eflags	__uint64_t	eflags
rip	__uint64_t	rip
rsp	__uint64_t	rsp
rcx	__uint64_t	rcx
rax	__uint64_t	rax
rdx	__uint64_t	rdx
rbx	__uint64_t	rbx
rbp	__uint64_t	rbp
rsi	__uint64_t	rsi
rdi	__uint64_t	rdi
r15	__uint64_t	r15
r14	__uint64_t	r14
r13	__uint64_t	r13
r12	__uint64_t	r12
r11	__uint64_t	r11
r10	__uint64_t	r10
r9	__uint64_t	r9
r8	__uint64_t	r8
__fpstate_word	__uint64_t	__fpstate_word
fpstate	_fpstate *	fpstate
__glibc_reserved1	__uint32_t[24]	__glibc_reserved1
_xmm	_xmmreg[16]	_xmm
_st	_fpxreg[8]	_st
mxcr_mask	__uint32_t	mxcr_mask
mxcsr	__uint32_t	mxcsr
rdp	__uint64_t	rdp
rip	__uint64_t	rip
fop	__uint16_t	fop
ftw	__uint16_t	ftw
swd	__uint16_t	swd
cwd	__uint16_t	cwd
element	__uint32_t[4]	element
__glibc_reserved1	unsigned short[3]	__glibc_reserved1
exponent	unsigned short	exponent
significand	unsigned short[4]	significand
exponent	unsigned short	exponent
significand	unsigned short[4]	significand
__glibc_reserved1	__uint32_t[7]	__glibc_reserved1
xstate_size	__uint32_t	xstate_size
xstate_bv	__uint64_t	xstate_bv
extended_size	__uint32_t	extended_size
magic1	__uint32_t	magic1
ss_size	size_t	ss_size
ss_flags	int	ss_flags
ss_sp	void *	ss_sp
__ssp	unsigned long long[4]	__ssp
__fpregs_mem	_libc_fpstate	__fpregs_mem
uc_sigmask	sigset_t	uc_sigmask
uc_mcontext	mcontext_t	uc_mcontext
uc_stack	stack_t	uc_stack
uc_link	ucontext_t *	uc_link
uc_flags	unsigned long	uc_flags
__reserved1	unsigned long long[8]	__reserved1
fpregs	fpregset_t	fpregs
gregs	gregset_t	gregs
__glibc_reserved1	__uint32_t[24]	__glibc_reserved1
_xmm	_libc_xmmreg[16]	_xmm
_st	_libc_fpxreg[8]	_st
mxcr_mask	__uint32_t	mxcr_mask
mxcsr	__uint32_t	mxcsr
rdp	__uint64_t	rdp
rip	__uint64_t	rip
fop	__uint16_t	fop
ftw	__uint16_t	ftw
swd	__uint16_t	swd
cwd	__uint16_t	cwd
element	__uint32_t[4]	element
__glibc_reserved1	unsigned short[3]	__glibc_reserved1
exponent	unsigned short	exponent
significand	unsigned short[4]	significand
ss_onstack	int	ss_onstack
ss_sp	void *	ss_sp
it_value	timeval	it_value
it_interval	timeval	it_interval
tz_dsttime	int	tz_dsttime
tz_minuteswest	int	tz_minuteswest
c_ospeed	speed_t	c_ospeed
c_ispeed	speed_t	c_ispeed
c_cc	cc_t[32]	c_cc
c_line	cc_t	c_line
c_lflag	tcflag_t	c_lflag
c_cflag	tcflag_t	c_cflag
c_oflag	tcflag_t	c_oflag
c_iflag	tcflag_t	c_iflag
_M_impl	_Deque_impl	_M_impl
_M_finish	iterator	_M_finish
_M_start	iterator	_M_start
_M_map_size	size_t	_M_map_size
_M_map	_Map_pointer	_M_map
_M_node	_Map_pointer	_M_node
_M_last	_Elt_pointer	_M_last
_M_first	_Elt_pointer	_M_first
_M_cur	_Elt_pointer	_M_cur
_M_impl	_Deque_impl	_M_impl
_M_impl	_Deque_impl	_M_impl
_M_node	_Base_ptr	_M_node
_M_node	_Base_ptr	_M_node
_M_node	_Base_ptr	_M_node
_M_impl	_Rb_tree_impl<_Compare, <expression>>	_M_impl
_M_right	_Base_ptr	_M_right
_M_left	_Base_ptr	_M_left
_M_storage	__aligned_membuf<_Val>	_M_storage
_M_key_compare	_Key_compare	_M_key_compare
_M_header	_Rb_tree_node_base	_M_header
_M_parent	_Base_ptr	_M_parent
_M_node_count	size_t	_M_node_count
_M_color	_Rb_tree_color	_M_color
_M_t	_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc> &	_M_t
_M_t	_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc> &	_M_t
_M_nodes	_Base_ptr	_M_nodes
_M_root	_Base_ptr	_M_root
_M_t	_Rep_type	_M_t
comp	_Compare	comp
_M_t	_Rep_type	_M_t
comp	_Compare	comp
_M_thread	native_handle_type	_M_thread
_M_id	id	_M_id
_M_t	_Tuple	_M_t
_M_func	_Callable	_M_func
_M_mutex	shared_ptr<mutex>	_M_mutex
_M_cond	condition_variable	_M_cond
_M_cond	__native_type	_M_cond
_M_lock	_Lock &	_M_lock
_M_cb	..(*)(..)	_M_cb
_M_next	__at_thread_exit_elt *	_M_next
_M_data	atomic<unsigned int>	_M_data
_M_state	__state_type	_M_state
_M_error	exception_ptr	_M_error
_M_fut	__basic_future<_Res> &	_M_fut
_M_code	error_code	_M_code
_M_shared_state	weak_ptr<_State_baseV2>	_M_shared_state
_M_result	_Ptr_type	_M_result
_M_retrieved	atomic_flag	_M_retrieved
_M_status	__atomic_futex_unsigned<2147483648U>	_M_status
_M_once	once_flag	_M_once
_M_future	shared_ptr<_State_baseV2>	_M_future
_M_state	__state_type	_M_state
_M_once	once_flag	_M_once
_M_thread	thread	_M_thread
_M_storage	_Ptr_type	_M_storage
_M_promise	promise<_Res> *	_M_promise
_M_ex	exception_ptr *	_M_ex
_M_promise	promise<_Res> *	_M_promise
_M_state	shared_ptr<_Task_state_base<..(..)>>	_M_state
_M_storage	_Ptr_type	_M_storage
_M_future	shared_ptr<_State_baseV2>	_M_future
_M_storage	_Ptr_type	_M_storage
_M_future	shared_ptr<_State_baseV2>	_M_future
_M_impl	_Impl	_M_impl
_M_fn	_Fn	_M_fn
_M_result	_Ptr_type	_M_result
_M_fn	_Fn *	_M_fn
_M_result	_Ptr_type *	_M_result
_M_value_ptr	_Res *	_M_value_ptr
_M_fn	_Fn *	_M_fn
_M_result	_Ptr_type *	_M_result
_M_fn	_BoundFn	_M_fn
_M_result	_Ptr_type	_M_result
_M_fn	_BoundFn	_M_fn
_M_result	_Ptr_type	_M_result
_M_initialized	bool	_M_initialized
_M_storage	__aligned_buffer<_Res>	_M_storage
_M_arg	_Res *	_M_arg
_M_promise	promise<_Res> *	_M_promise
_M_arg	_Arg *	_M_arg
_M_promise	promise<_Res> *	_M_promise
current	const_iterator	current
coll	const Collection &	coll
storage	Collection	storage
file_	FILE *	file_
screen	category_t	screen
path	category_t	path
complete	category_t	complete
reader	category_t	reader
term_support	category_t	term_support
fd_monitor	category_t	fd_monitor
iothread	category_t	iothread
profile_history	category_t	profile_history
history_file	category_t	history_file
history	category_t	history
char_encoding	category_t	char_encoding
topic_monitor	category_t	topic_monitor
uvar_file	category_t	uvar_file
env_dispatch	category_t	env_dispatch
env_export	category_t	env_export
env_locale	category_t	env_locale
proc_pgroup	category_t	proc_pgroup
proc_reap_external	category_t	proc_reap_external
proc_reap_internal	category_t	proc_reap_internal
proc_internal_proc	category_t	proc_internal_proc
proc_termowner	category_t	proc_termowner
proc_job_run	category_t	proc_job_run
output_invalid	category_t	output_invalid
exec_fork	category_t	exec_fork
exec_job_exec	category_t	exec_job_exec
exec_job_status	category_t	exec_job_status
config	category_t	config
warning_path	category_t	warning_path
warning	category_t	warning
description	const wchar_t *const	description
actions_	vector<action_t, allocator<action_t>>	actions_
src	int	src
target	int	target
target	wcstring	target
target	wcstring	target
fd	int	fd
mode	redirection_mode_t	mode
out	output_stream_t	out
err	output_stream_t	err
stdin_fd	int	stdin_fd
stdin_is_directly_redirected	bool	stdin_is_directly_redirected
out_is_piped	bool	out_is_piped
err_is_piped	bool	err_is_piped
out_is_redirected	bool	out_is_redirected
err_is_redirected	bool	err_is_redirected
io_chain	const io_chain_t *	io_chain
job_group	shared_ptr<job_group_t>	job_group
job_group	shared_ptr<job_group_t>	job_group
read	autoclose_fd_t	read
write	autoclose_fd_t	write
pipe_fd_	autoclose_fd_t	pipe_fd_
is_input_	const bool	is_input_
file_fd_	autoclose_fd_t	file_fd_
buffer_	const shared_ptr<io_buffer_t>	buffer_
write_fd_	const autoclose_fd_t	write_fd_
buffer_	separated_buffer_t<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	buffer_
append_lock_	mutex	append_lock_
buffer_	separated_buffer_t<basic_string<char, char_traits<char>, allocator<char>>>	buffer_
shutdown_fillthread_	relaxed_atomic_bool_t	shutdown_fillthread_
fillthread_waiter_	future<void>	fillthread_waiter_
elements_	vector<element_t, allocator<element_t>>	elements_
contents_size_	size_t	contents_size_
discard	bool	discard
buffer_limit_	size_t	buffer_limit_
separation	separation_type_t	separation
contents	StringType	contents
fds	vector<bool, allocator<bool>>	fds
io_mode	const io_mode_t	io_mode
fd	const int	fd
source_fd	const int	source_fd
desc	event_description_t	desc
type	event_type_t	type
param1	union <unnamed>	param1
str_param1	wcstring	str_param1
str_param1	wcstring	str_param1
function_name	wcstring	function_name
function_name	wcstring	function_name
desc	event_description_t	desc
arguments	wcstring_list_t	arguments
arguments	wcstring_list_t	arguments
pid	pid_t	pid
pid	pid_t	pid
pid	pid_t	pid
pid	pid_t	pid
pid	pid_t	pid
pid	pid_t	pid
pid	pid_t	pid
pid	pid_t	pid
caller_id	uint64_t	caller_id
signal	int	signal
val	parse_token_type_t	val
str	const wchar_t *const	str
start	const wchar_t *const	start
is_pipe	bool	is_pipe
fd	int	fd
style	move_word_style_t	style
state	int	state
continue_line_after_comment	bool	continue_line_after_comment
continue_after_error	bool	continue_after_error
show_blank_lines	bool	show_blank_lines
show_comments	bool	show_comments
accept_unfinished	bool	accept_unfinished
has_next	bool	has_next
token_cursor	const wchar_t *	token_cursor
error_offset_within_token	size_t	error_offset_within_token
consumed	size_t	consumed
stderr_merge	bool	stderr_merge
mode	redirection_mode_t	mode
ast	ast_t	ast
src	wcstring	src
src	wcstring	src
_M_w	_WordT	_M_w
_M_bpos	size_t	_M_bpos
_M_wp	_WordT *	_M_wp
_M_w	_WordT[]	_M_w
_M_names	char **	_M_names
_M_refcount	_Atomic_word	_M_refcount
_M_refcount	_Atomic_word	_M_refcount
id	id	id
_M_c_locale_collate	__c_locale	_M_c_locale_collate
_S_twinned_facets	const id *const[]	_S_twinned_facets
_S_once	__gthread_once_t	_S_once
_S_categories	const char *const *const	_S_categories
_S_global	_Impl *	_S_global
_S_classic	_Impl *	_S_classic
_M_impl	_Impl *	_M_impl
all	const category	all
messages	const category	messages
monetary	const category	monetary
time	const category	time
collate	const category	collate
numeric	const category	numeric
ctype	const category	ctype
none	const category	none
_S_facet_categories	const id *const *const[]	_S_facet_categories
_S_id_messages	const id *const[]	_S_id_messages
_S_id_monetary	const id *const[]	_S_id_monetary
_S_id_time	const id *const[]	_S_id_time
_S_id_collate	const id *const[]	_S_id_collate
_S_id_numeric	const id *const[]	_S_id_numeric
_S_id_ctype	const id *const[]	_S_id_ctype
_M_caches	const facet **	_M_caches
_M_facets_size	size_t	_M_facets_size
_M_facets	const facet **	_M_facets
_S_once	__gthread_once_t	_S_once
_S_c_name	const char[2]	_S_c_name
_S_c_locale	__c_locale	_S_c_locale
_S_refcount	_Atomic_word	_S_refcount
_M_index	size_t	_M_index
floatfield	const fmtflags	floatfield
fixed	const fmtflags	fixed
scientific	const fmtflags	scientific
oct	const fmtflags	oct
basefield	const fmtflags	basefield
hex	const fmtflags	hex
dec	const fmtflags	dec
right	const fmtflags	right
adjustfield	const fmtflags	adjustfield
left	const fmtflags	left
internal	const fmtflags	internal
unitbuf	const fmtflags	unitbuf
uppercase	const fmtflags	uppercase
skipws	const fmtflags	skipws
showpos	const fmtflags	showpos
showpoint	const fmtflags	showpoint
showbase	const fmtflags	showbase
boolalpha	const fmtflags	boolalpha
_M_refcount	_Atomic_word	_M_refcount
_M_next	_Callback_list *	_M_next
_M_fn	event_callback	_M_fn
_M_index	int	_M_index
_M_word_size	int	_M_word_size
_M_word	_Words *	_M_word
_M_pword	void *	_M_pword
_M_iword	long	_M_iword
_M_ios_locale	locale	_M_ios_locale
_M_width	streamsize	_M_width
_M_precision	streamsize	_M_precision
_M_flags	fmtflags	_M_flags
_M_local_word	_Words[8]	_M_local_word
_M_word_zero	_Words	_M_word_zero
_M_callbacks	_Callback_list *	_M_callbacks
_M_streambuf_state	iostate	_M_streambuf_state
_M_exception	iostate	_M_exception
end	const seekdir	end
cur	const seekdir	cur
beg	const seekdir	beg
trunc	const openmode	trunc
out	const openmode	out
in	const openmode	in
binary	const openmode	binary
ate	const openmode	ate
app	const openmode	app
goodbit	const iostate	goodbit
failbit	const iostate	failbit
eofbit	const iostate	eofbit
badbit	const iostate	badbit
_S_synced_with_stdio	bool	_S_synced_with_stdio
_S_refcount	_Atomic_word	_S_refcount
_M_buf_locale	locale	_M_buf_locale
_M_out_end	char_type *	_M_out_end
_M_out_cur	char_type *	_M_out_cur
_M_out_beg	char_type *	_M_out_beg
_M_in_end	char_type *	_M_in_end
_M_in_cur	char_type *	_M_in_cur
_M_in_beg	char_type *	_M_in_beg
blank	const mask	blank
alnum	const mask	alnum
punct	const mask	punct
cntrl	const mask	cntrl
graph	const mask	graph
print	const mask	print
space	const mask	space
xdigit	const mask	xdigit
digit	const mask	digit
alpha	const mask	alpha
lower	const mask	lower
upper	const mask	upper
_M_failed	bool	_M_failed
_M_sbuf	streambuf_type *	_M_sbuf
_M_c	int_type	_M_c
_M_sbuf	streambuf_type *	_M_sbuf
_M_table	const mask *	_M_table
_M_narrow_ok	char	_M_narrow_ok
_M_narrow	char[256]	_M_narrow
_M_widen_ok	char	_M_widen_ok
_M_widen	char[256]	_M_widen
id	id	id
_M_data	__cache_type *	_M_data
_M_allocated	bool	_M_allocated
_M_atoms_in	_CharT[26]	_M_atoms_in
_M_atoms_out	_CharT[36]	_M_atoms_out
_M_thousands_sep	_CharT	_M_thousands_sep
_M_decimal_point	_CharT	_M_decimal_point
_M_falsename_size	size_t	_M_falsename_size
_M_falsename	const _CharT *	_M_falsename
_M_truename_size	size_t	_M_truename_size
_M_truename	const _CharT *	_M_truename
_M_use_grouping	bool	_M_use_grouping
_M_grouping_size	size_t	_M_grouping_size
_M_grouping	const char *	_M_grouping
_S_atoms_in	const char *	_S_atoms_in
_S_atoms_out	const char *	_S_atoms_out
id	id	id
id	id	id
id	id	id
id	id	id
_M_wmask	__wmask_type[16]	_M_wmask
_M_bit	mask[16]	_M_bit
_M_widen	wint_t[256]	_M_widen
_M_narrow	char[128]	_M_narrow
_M_narrow_ok	bool	_M_narrow_ok
_M_c_locale_ctype	__c_locale	_M_c_locale_ctype
table_size	const size_t	table_size
id	id	id
_M_tolower	__to_type	_M_tolower
_M_toupper	__to_type	_M_toupper
_M_del	bool	_M_del
_M_c_locale_ctype	__c_locale	_M_c_locale_ctype
_M_num_get	const __num_get_type *	_M_num_get
_M_num_put	const __num_put_type *	_M_num_put
_M_ctype	const __ctype_type *	_M_ctype
_M_streambuf	basic_streambuf<_CharT, _Traits> *	_M_streambuf
_M_fill_init	bool	_M_fill_init
_M_fill	char_type	_M_fill
_M_tie	basic_ostream<_CharT, _Traits> *	_M_tie
value	bool	value
_M_os	basic_ostream<_CharT, _Traits> &	_M_os
_M_ok	bool	_M_ok
value	bool	value
_M_gcount	streamsize	_M_gcount
_M_ok	bool	_M_ok
_M_string	const _CharT *	_M_string
_M_stream	ostream_type *	_M_stream
_M_ok	bool	_M_ok
_M_value	_Tp	_M_value
_M_stream	istream_type *	_M_stream
v_	base_type_t	v_
current_gens	generation_list_t	current_gens
has_reader	bool	has_reader
pipes_	autoclose_pipes_t	pipes_
pending_updates_	atomic<unsigned char>	pending_updates_
data_notifier_	condition_variable	data_notifier_
data_	owning_lock<data_t>	data_
count	const topic_t	count
tmodes	maybe_t<termios>	tmodes
pgid_	maybe_t<int>	pgid_
props_	const properties_t	props_
command_	const wcstring	command_
is_foreground_	relaxed_atomic_bool_t	is_foreground_
root_constructed_	relaxed_atomic_bool_t	root_constructed_
cancel_signal_	int	cancel_signal_
job_id	job_id_t	job_id
job_id	job_id_t	job_id
is_internal	bool	is_internal
wants_terminal	bool	wants_terminal
job_control	bool	job_control
group	job_group_ref_t	group
properties	const properties_t	properties
from_event_handler	bool	from_event_handler
skip_notification	bool	skip_notification
disown_requested	bool	disown_requested
constructed	bool	constructed
initial_background	bool	initial_background
job_control	bool	job_control
job_flags	flags_t	job_flags
processes	process_list_t	processes
completed	bool	completed
internal_proc_	shared_ptr<internal_proc_t>	internal_proc_
pid	pid_t	pid
pid	pid_t	pid
pid	pid_t	pid
pid	pid_t	pid
pid	pid_t	pid
pid	pid_t	pid
pid	pid_t	pid
pid	pid_t	pid
command_str	const wcstring	command_str
notified	bool	notified
negate	bool	negate
has_time_prefix	bool	has_time_prefix
is_group_root	bool	is_group_root
proc_redirection_specs	redirection_spec_list_t	proc_redirection_specs
argv_array	null_terminated_array_t<wchar_t>	argv_array
internal_proc_id_	const uint64_t	internal_proc_id_
status_	atomic<proc_status_t>	status_
exited_	atomic<bool>	exited_
status_	int	status_
internal_job_id	const internal_job_id_t	internal_job_id
last_jiffies	unsigned long	last_jiffies
last_time	timeval	last_time
status	proc_status_t	status
stopped	bool	stopped
pipe_write_fd	int	pipe_write_fd
gens_	generation_list_t	gens_
actual_cmd	wcstring	actual_cmd
actual_cmd	wcstring	actual_cmd
variable_assignments	vector<concrete_assignment, allocator<concrete_assignment>>	variable_assignments
internal_block_node	const statement_t *	internal_block_node
block_node_source	parsed_source_ref_t	block_node_source
type	process_type_t	type
is_last_in_job	bool	is_last_in_job
is_first_in_job	bool	is_first_in_job
values	wcstring_list_t	values
values	wcstring_list_t	values
variable_name	wcstring	variable_name
variable_name	wcstring	variable_name
node_map	map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t, less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>>	node_map
mouth	lru_link_t	mouth
max_node_count	const size_t	max_node_count
value	Contents	value
node	const lru_link_t *	node
next	lru_link_t *	next
prev	lru_link_t *	prev
key	const wcstring *	key
_M_node	const _List_node_base *	_M_node
_M_node	_List_node_base *	_M_node
_M_next	_List_node_base *	_M_next
_M_prev	_List_node_base *	_M_prev
_M_size	size_t	_M_size
_M_impl	_List_impl	_M_impl
_M_node	_List_node_header	_M_node
_M_storage	__aligned_membuf<_Tp>	_M_storage
_M_impl	_List_impl	_M_impl
result	result_t	result
status	int	status
count	const expand_flag	count
cancel_checker	cancel_checker_t	cancel_checker
job_group	shared_ptr<job_group_t>	job_group
job_group	shared_ptr<job_group_t>	job_group
vars	const environment_t &	vars
parser	shared_ptr<parser_t>	parser
parser	shared_ptr<parser_t>	parser
pstree	parsed_source_ref_t	pstree
block_io	io_chain_t	block_io
cached_lineno_count	int	cached_lineno_count
cached_lineno_offset	size_t	cached_lineno_offset
executing_job_node	const job_t *	executing_job_node
ctx	const operation_context_t &	ctx
parser	parser_t *const	parser
is_interactive	bool	is_interactive
library_data	library_data_t	library_data
variables	const shared_ptr<env_stack_t>	variables
job_list	job_list_t	job_list
job_list	job_list_t	job_list
block_list	deque<block_t, allocator<block_t>>	block_list
status	proc_status_t	status
break_expand	bool	break_expand
was_empty	bool	was_empty
exec_count	uint64_t	exec_count
last_exec_run_counter	uint64_t	last_exec_run_counter
builtin_complete_recursion_level	uint32_t	builtin_complete_recursion_level
builtin_complete_current_commandline	bool	builtin_complete_current_commandline
is_cleaning_procs	bool	is_cleaning_procs
caller_id	internal_job_id_t	caller_id
is_subshell	bool	is_subshell
is_block	bool	is_block
is_breakpoint	bool	is_breakpoint
is_event	int	is_event
suppress_fish_trace	bool	suppress_fish_trace
loop_status	loop_status_t	loop_status
returning	bool	returning
read_limit	size_t	read_limit
current_filename	const wchar_t *	current_filename
blocked_events	vector<shared_ptr<event_t>, allocator<shared_ptr<event_t>>>	blocked_events
blocked_events	vector<shared_ptr<event_t>, allocator<shared_ptr<event_t>>>	blocked_events
transient_commandlines	wcstring_list_t	transient_commandlines
transient_commandlines	wcstring_list_t	transient_commandlines
cwd_fd	shared_ptr<const autoclose_fd_t>	cwd_fd
block_type	const block_type_t	block_type
global_event_blocks	event_blockage_list_t	global_event_blocks
principal	shared_ptr<parser_t>	principal
profile_items	vector<unique_ptr<profile_item_t, default_delete<profile_item_t>>, allocator<unique_ptr<profile_item_t, default_delete<profile_item_t>>>>	profile_items
profile_items	vector<unique_ptr<profile_item_t, default_delete<profile_item_t>>, allocator<unique_ptr<profile_item_t, default_delete<profile_item_t>>>>	profile_items
eval_level	int	eval_level
execution_context	unique_ptr<parse_execution_context_t, default_delete<parse_execution_context_t>>	execution_context
cmd	wcstring	cmd
cmd	wcstring	cmd
skipped	bool	skipped
level	size_t	level
parse	int	parse
exec	int	exec
event	maybe_t<event_t>	event
sourced_file	const wchar_t *	sourced_file
function_args	wcstring_list_t	function_args
function_args	wcstring_list_t	function_args
function_name	wcstring	function_name
function_name	wcstring	function_name
event_blocks	event_blockage_list_t	event_blocks
wants_pop_env	bool	wants_pop_env
src_lineno	int	src_lineno
src_filename	const wchar_t *	src_filename
first	const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	first
_M_h	_Hashtable	_M_h
_M_h	_Hashtable	_M_h
second	file_id_t	second
file_id	file_id_t	file_id
path	wcstring	path
path	wcstring	path
file	autoloadable_file_t	file
last_checked	timestamp_t	last_checked
known_files_	unordered_map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>>>	known_files_
_M_h	_Hashtable	_M_h
misses_cache_	misses_lru_cache_t	misses_cache_
node_map	map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t, less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>>	node_map
dirs_	const wcstring_list_t	dirs_
second	known_file_t	second
second	bool	second
_M_current	const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *	_M_current
first	_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, false, true>	first
first	const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	first
_M_cur	__node_type *	_M_cur
_M_t	_Rep_type	_M_t
second	bool	second
first	_Node_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true, true>	first
_M_current	basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *	_M_current
_M_cur	__node_type *	_M_cur
mouth	lru_link_t	mouth
max_node_count	const size_t	max_node_count
impl_	maybe_impl_t<autoloadable_file_t>	impl_
impl_	maybe_impl_t<event_t>	impl_
_M_t	__uniq_ptr_impl<parse_execution_context_t, default_delete<parse_execution_context_t>>	_M_t
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
_M_i	proc_status_t	_M_i
_S_alignment	const int	_S_alignment
_S_min_alignment	const int	_S_min_alignment
impl_	maybe_impl_t<termios>	impl_
_M_t	__uniq_ptr_impl<process_t, default_delete<process_t>>	_M_t
impl_	maybe_impl_t<topic_t>	impl_
data	data_t	data
lock	mutex	lock
id	id	id
_M_data	__cache_type *	_M_data
id	id	id
id	id	id
id	id	id
_M_data	__cache_type *	_M_data
id	id	id
id	id	id
id	id	id
_M_c_locale_collate	__c_locale	_M_c_locale_collate
id	id	id
_M_c_locale_collate	__c_locale	_M_c_locale_collate
reverse_	const bool	reverse_
v_	traversal_t &	v_
AstType	const type_t	AstType
Category	const category_t	Category
AstType	const type_t	AstType
Category	const category_t	Category
AstType	const type_t	AstType
Category	const category_t	Category
AstType	const type_t	AstType
AstType	const type_t	AstType
AstType	const type_t	AstType
AstType	const type_t	AstType
AstType	const type_t	AstType
Category	const category_t	Category
AstType	const type_t	AstType
Category	const category_t	Category
AstType	const type_t	AstType
Category	const category_t	Category
AstType	const type_t	AstType
Category	const category_t	Category
AstType	const type_t	AstType
impl_	maybe_impl_t<pipe_or_redir_t>	impl_
_M_current	const wchar_t *	_M_current
_M_current	const wchar_t *	_M_current
discard	bool	discard
elements_	vector<element_t, allocator<element_t>>	elements_
contents_size_	size_t	contents_size_
buffer_limit_	size_t	buffer_limit_
discard	bool	discard
elements_	vector<element_t, allocator<element_t>>	elements_
contents_size_	size_t	contents_size_
buffer_limit_	size_t	buffer_limit_
impl_	maybe_impl_t<int>	impl_
second	unsigned long	second
first	unsigned long	first
value_	atomic<bool>	value_
_M_t	__uniq_ptr_impl<_Result<void>, _Deleter>	_M_t
_M_promise	promise<void> *	_M_promise
_M_ex	exception_ptr *	_M_ex
_M_promise	promise<void> *	_M_promise
_M_refcount	__weak_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
_M_data	atomic<unsigned int>	_M_data
_M_invoker	_Invoker_type	_M_invoker
_M_t	__uniq_ptr_impl<_Make_ready, default_delete<_Make_ready>>	_M_t
_M_fut	__basic_future<void> &	_M_fut
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
_M_impl	_Rb_tree_impl<less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>	_M_impl
_M_node	_Base_ptr	_M_node
second	_Rb_tree_node_base *	second
first	_Rb_tree_node_base *	first
_M_t	__uniq_ptr_impl<autoload_file_cache_t, default_delete<autoload_file_cache_t>>	_M_t
impl_	maybe_impl_t<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	impl_
_M_len	size_type	_M_len
_M_array	iterator	_M_array
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
_M_t	__uniq_ptr_impl<env_stack_impl_t, default_delete<env_stack_impl_t>>	_M_t
impl_	maybe_impl_t<env_var_t>	impl_
array	wchar_t **	array
_M_owns	bool	_M_owns
_M_device	mutex_type *	_M_device
_M_invoker	_Invoker_type	_M_invoker
_M_device	mutex_type &	_M_device
impl_	maybe_impl_t<unsigned long>	impl_
_M_invoker	_Invoker_type	_M_invoker
__digits	const int	__digits
__is_signed	const bool	__is_signed
__min	const long	__min
den	const intmax_t	den
num	const intmax_t	num
value	const long	value
__r	rep	__r
__d	duration	__d
__d	duration	__d
__r	rep	__r
__d	duration	__d
den	const intmax_t	den
num	const intmax_t	num
den	const intmax_t	den
num	const intmax_t	num
den	const intmax_t	den
num	const intmax_t	num
value	const long	value
den	const intmax_t	den
num	const intmax_t	num
value	const int	value
__stored_locally	const bool	__stored_locally
__stored_locally	const bool	__stored_locally
__stored_locally	const bool	__stored_locally
_M_i	__int_type	_M_i
_S_alignment	const int	_S_alignment
_M_i	__int_type	_M_i
_S_alignment	const int	_S_alignment
_M_i	__int_type	_M_i
_S_alignment	const int	_S_alignment
_M_i	__int_type	_M_i
_S_alignment	const int	_S_alignment
_M_i	__int_type	_M_i
_S_alignment	const int	_S_alignment
_M_i	__int_type	_M_i
_S_alignment	const int	_S_alignment
_M_i	__int_type	_M_i
_S_alignment	const int	_S_alignment
_M_i	__int_type	_M_i
_S_alignment	const int	_S_alignment
_M_i	__int_type	_M_i
_S_alignment	const int	_S_alignment
_M_i	__int_type	_M_i
_S_alignment	const int	_S_alignment
_M_i	__int_type	_M_i
_S_alignment	const int	_S_alignment
_M_i	__int_type	_M_i
_S_alignment	const int	_S_alignment
_M_i	__int_type	_M_i
_S_alignment	const int	_S_alignment
_M_i	__int_type	_M_i
_S_alignment	const int	_S_alignment
_M_i	__int_type	_M_i
_S_alignment	const int	_S_alignment
_M_single_bucket	__bucket_type	_M_single_bucket
_M_rehash_policy	_Prime_rehash_policy	_M_rehash_policy
_M_element_count	size_type	_M_element_count
_M_before_begin	__node_base	_M_before_begin
_M_bucket_count	size_type	_M_bucket_count
_M_buckets	__bucket_type *	_M_buckets
_M_single_bucket	__bucket_type	_M_single_bucket
_M_rehash_policy	_Prime_rehash_policy	_M_rehash_policy
_M_element_count	size_type	_M_element_count
_M_before_begin	__node_base	_M_before_begin
_M_bucket_count	size_type	_M_bucket_count
_M_buckets	__bucket_type *	_M_buckets
_M_single_bucket	__bucket_type	_M_single_bucket
_M_rehash_policy	_Prime_rehash_policy	_M_rehash_policy
_M_element_count	size_type	_M_element_count
_M_before_begin	__node_base	_M_before_begin
_M_bucket_count	size_type	_M_bucket_count
_M_buckets	__bucket_type *	_M_buckets
second	int	second
first	bool	first
_M_weak_this	weak_ptr<parser_t>	_M_weak_this
_M_pi	_Sp_counted_base<_S_atomic> *	_M_pi
_M_pi	_Sp_counted_base<_S_atomic> *	_M_pi
_M_weak_count	_Atomic_word	_M_weak_count
_M_weak_count	_Atomic_word	_M_weak_count
_M_ptr	decltype(nullptr)	_M_ptr
_M_ptr	decltype(nullptr)	_M_ptr
_M_ptr	decltype(nullptr)	_M_ptr
__digits10	const int	__digits10
__is_signed	const bool	__is_signed
__max_digits10	const int	__max_digits10
__digits10	const int	__digits10
__is_signed	const bool	__is_signed
__max_digits10	const int	__max_digits10
__digits10	const int	__digits10
__is_signed	const bool	__is_signed
__max_digits10	const int	__max_digits10
__digits	const int	__digits
__is_signed	const bool	__is_signed
value	const unsigned long	value
_M_num_get	const __num_get_type *	_M_num_get
_M_num_put	const __num_put_type *	_M_num_put
_M_ctype	const __ctype_type *	_M_ctype
_M_streambuf	basic_streambuf<char, char_traits<char>> *	_M_streambuf
_M_fill_init	bool	_M_fill_init
_M_fill	char_type	_M_fill
_M_tie	basic_ostream<char, char_traits<char>> *	_M_tie
_M_buf_locale	locale	_M_buf_locale
_M_out_end	char_type *	_M_out_end
_M_out_cur	char_type *	_M_out_cur
_M_out_beg	char_type *	_M_out_beg
_M_in_end	char_type *	_M_in_end
_M_in_cur	char_type *	_M_in_cur
_M_in_beg	char_type *	_M_in_beg
_M_gcount	streamsize	_M_gcount
_M_num_get	const __num_get_type *	_M_num_get
_M_num_put	const __num_put_type *	_M_num_put
_M_ctype	const __ctype_type *	_M_ctype
_M_streambuf	basic_streambuf<wchar_t, char_traits<wchar_t>> *	_M_streambuf
_M_fill_init	bool	_M_fill_init
_M_fill	char_type	_M_fill
_M_tie	basic_ostream<wchar_t, char_traits<wchar_t>> *	_M_tie
_M_buf_locale	locale	_M_buf_locale
_M_out_end	char_type *	_M_out_end
_M_out_cur	char_type *	_M_out_cur
_M_out_beg	char_type *	_M_out_beg
_M_in_end	char_type *	_M_in_end
_M_in_cur	char_type *	_M_in_cur
_M_in_beg	char_type *	_M_in_beg
_M_gcount	streamsize	_M_gcount
(unknown field)	union <unnamed>	(unknown field)
(unknown field)	union <unnamed>	(unknown field)
_M_string_length	size_type	_M_string_length
_M_string_length	size_type	_M_string_length
_M_dataplus	_Alloc_hider	_M_dataplus
_M_dataplus	_Alloc_hider	_M_dataplus
npos	const size_type	npos
npos	const size_type	npos
(unknown field)	union <unnamed>	(unknown field)
(unknown field)	union <unnamed>	(unknown field)
_M_string_length	size_type	_M_string_length
_M_string_length	size_type	_M_string_length
_M_dataplus	_Alloc_hider	_M_dataplus
_M_dataplus	_Alloc_hider	_M_dataplus
npos	const size_type	npos
npos	const size_type	npos
(unknown field)	union <unnamed>	(unknown field)
(unknown field)	union <unnamed>	(unknown field)
_M_string_length	size_type	_M_string_length
_M_string_length	size_type	_M_string_length
_M_dataplus	_Alloc_hider	_M_dataplus
_M_dataplus	_Alloc_hider	_M_dataplus
npos	const size_type	npos
npos	const size_type	npos
_M_impl	_Impl	_M_impl
_M_hash_code	size_t	_M_hash_code
_M_hash_code	size_t	_M_hash_code
_M_hash_code	size_t	_M_hash_code
_M_impl	_Impl	_M_impl
_M_impl	_Impl	_M_impl
__size	const size_t	__size
__size	const size_t	__size
__size	const size_t	__size
__size	const size_t	__size
__size	const size_t	__size
_M_t	tuple<_Result_base *, _Deleter>	_M_t
_M_t	__uniq_ptr_impl<_Result_base, _Deleter>	_M_t
_M_t	tuple<_Result<void> *, _Deleter>	_M_t
(unknown field)	union <unnamed>	(unknown field)
(unknown field)	union <unnamed>	(unknown field)
_M_string_length	size_type	_M_string_length
_M_string_length	size_type	_M_string_length
_M_dataplus	_Alloc_hider	_M_dataplus
_M_dataplus	_Alloc_hider	_M_dataplus
npos	const size_type	npos
npos	const size_type	npos
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_a	const allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>> &	_M_a
_M_a	const allocator<mutex> &	_M_a
_M_a	const allocator<_State_baseV2> &	_M_a
_M_allocated_capacity	size_type	_M_allocated_capacity
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
next	lru_link_t *	next
prev	lru_link_t *	prev
second	lru_node_t	second
value	time_point<steady_clock, duration<signed long, ratio<1L, 1000000000L>>>	value
filled	bool	filled
filled	bool	filled
_M_end_of_storage	pointer	_M_end_of_storage
_M_node	_List_node_header	_M_node
filled	bool	filled
_M_local_buf	wchar_t[4]	_M_local_buf
filled	bool	filled
_M_impl	_Bvector_impl	_M_impl
_M_start	_Bit_iterator	_M_start
contents	basic_string<char, char_traits<char>, allocator<char>>	contents
contents	basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	contents
__f	..(*&)(..)	__f
__args	thread *&	__args
__f	..(*&)(..)	__f
__args	_State_baseV2 *&	__args
__args	function<..(..)> *&	__args
__args	bool *&	__args
_M_finish	pointer	_M_finish
_M_end_of_storage	pointer	_M_end_of_storage
_M_start	pointer	_M_start
_M_end_of_storage	_Bit_pointer	_M_end_of_storage
_M_errno	int	_M_errno
_M_errno	int	_M_errno
_M_errno	int	_M_errno
_M_errno	int	_M_errno
_M_errno	int	_M_errno
_M_errno	int	_M_errno
_M_errno	int	_M_errno
_M_errno	int	_M_errno
_M_errno	int	_M_errno
_M_errno	int	_M_errno
_M_errno	int	_M_errno
_M_errno	int	_M_errno
_M_errno	int	_M_errno
_M_errno	int	_M_errno
_M_errno	int	_M_errno
_M_errno	int	_M_errno
_M_current	const node_t **	_M_current
_M_current	action_t *	_M_current
_M_current	int *	_M_current
_M_current	const element_t *	_M_current
_M_finish	_Bit_iterator	_M_finish
_M_current	basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *	_M_current
_M_ptr	pointer	_M_ptr
_M_alloc	allocator<_Sp_counted_ptr_inplace<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _S_atomic>> *	_M_alloc
_M_ptr	pointer	_M_ptr
_M_alloc	allocator<_Sp_counted_ptr_inplace<mutex, allocator<mutex>, _S_atomic>> *	_M_alloc
_M_ptr	pointer	_M_ptr
_M_alloc	allocator<_Sp_counted_ptr_inplace<_State_baseV2, allocator<_State_baseV2>, _S_atomic>> *	_M_alloc
_M_current	wchar_t *	_M_current
_M_current	wchar_t *	_M_current
_M_allocated_capacity	size_type	_M_allocated_capacity
_M_local_buf	wchar_t[4]	_M_local_buf
_M_p	pointer	_M_p
_M_p	pointer	_M_p
_M_storage	__aligned_buffer<_State_baseV2>	_M_storage
_M_storage	__aligned_buffer<mutex>	_M_storage
_M_storage	__aligned_buffer<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>>	_M_storage
_M_storage	__aligned_buffer<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	_M_storage
_M_storage	__aligned_buffer<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>>	_M_storage
_M_storage	__aligned_buffer<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	_M_storage
_M_allocated_capacity	size_type	_M_allocated_capacity
_M_allocated_capacity	size_type	_M_allocated_capacity
_M_local_buf	char32_t[4]	_M_local_buf
_M_local_buf	char32_t[4]	_M_local_buf
_M_p	pointer	_M_p
_M_p	pointer	_M_p
_M_allocated_capacity	size_type	_M_allocated_capacity
_M_allocated_capacity	size_type	_M_allocated_capacity
_M_local_buf	char16_t[8]	_M_local_buf
_M_local_buf	char16_t[8]	_M_local_buf
_M_p	pointer	_M_p
_M_p	pointer	_M_p
_M_current	char *	_M_current
_M_current	char *	_M_current
_M_current	const char *	_M_current
_M_current	const char *	_M_current
_M_allocated_capacity	size_type	_M_allocated_capacity
_M_allocated_capacity	size_type	_M_allocated_capacity
_M_local_buf	char[16]	_M_local_buf
_M_local_buf	char[16]	_M_local_buf
_M_p	pointer	_M_p
_M_p	pointer	_M_p
_M_os	basic_ostream<wchar_t, char_traits<wchar_t>> &	_M_os
_M_ok	bool	_M_ok
_M_ok	bool	_M_ok
_M_os	basic_ostream<char, char_traits<char>> &	_M_os
_M_ok	bool	_M_ok
_M_ok	bool	_M_ok
_M_h	__hashtable_alloc &	_M_h
den	const intmax_t	den
num	const intmax_t	num
__gcd2	const intmax_t	__gcd2
__gcd1	const intmax_t	__gcd1
den	const intmax_t	den
num	const intmax_t	num
__gcd2	const intmax_t	__gcd2
__gcd1	const intmax_t	__gcd1
_M_end_of_storage	pointer	_M_end_of_storage
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
_M_end_of_storage	pointer	_M_end_of_storage
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
_M_end_of_storage	pointer	_M_end_of_storage
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
_M_end_of_storage	pointer	_M_end_of_storage
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
_M_end_of_storage	pointer	_M_end_of_storage
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
_M_end_of_storage	pointer	_M_end_of_storage
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
_M_end_of_storage	pointer	_M_end_of_storage
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
_M_end_of_storage	pointer	_M_end_of_storage
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
_M_end_of_storage	pointer	_M_end_of_storage
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
_M_end_of_storage	pointer	_M_end_of_storage
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
filled	bool	filled
storage	char[8]	storage
storage	char[24]	storage
_M_t	tuple<env_stack_impl_t *, default_delete<env_stack_impl_t>>	_M_t
_M_current	int *	_M_current
storage	char[32]	storage
_M_t	tuple<autoload_file_cache_t *, default_delete<autoload_file_cache_t>>	_M_t
_M_finish	iterator	_M_finish
_M_start	iterator	_M_start
_M_map_size	size_t	_M_map_size
_M_map	_Map_pointer	_M_map
_M_finish	iterator	_M_finish
_M_start	iterator	_M_start
_M_map_size	size_t	_M_map_size
_M_map	_Map_pointer	_M_map
_M_storage	__aligned_membuf<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>	_M_storage
_M_t	tuple<_Make_ready *, default_delete<_Make_ready>>	_M_t
_M_current	action_t *	_M_current
storage	char[4]	storage
separation	separation_type_t	separation
separation	separation_type_t	separation
filled	bool	filled
storage	char[24]	storage
_M_current	const node_t **	_M_current
_M_current	const node_t *const *	_M_current
_M_elems	_Type	_M_elems
_M_node	_Map_pointer	_M_node
_M_last	_Elt_pointer	_M_last
_M_first	_Elt_pointer	_M_first
_M_cur	_Elt_pointer	_M_cur
filled	bool	filled
storage	char[1]	storage
_M_current	const unique_ptr<process_t, default_delete<process_t>> *	_M_current
_M_t	tuple<process_t *, default_delete<process_t>>	_M_t
filled	bool	filled
storage	char[60]	storage
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
_M_ptr	element_type *	_M_ptr
_M_refcount	__weak_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
_M_ptr	element_type *	_M_ptr
_M_refcount	__weak_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
_M_node	_Map_pointer	_M_node
_M_last	_Elt_pointer	_M_last
_M_first	_Elt_pointer	_M_first
_M_cur	_Elt_pointer	_M_cur
_M_t	tuple<parse_execution_context_t *, default_delete<parse_execution_context_t>>	_M_t
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
filled	bool	filled
storage	char[72]	storage
storage	char[88]	storage
first	const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	first
second	bool	second
first	_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>	first
key	const wcstring *	key
_M_current	element_t *	_M_current
_M_current	element_t *	_M_current
_M_current	const element_t *	_M_current
_M_key_compare	less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	_M_key_compare
_M_storage	unsigned char[64]	_M_storage
_M_cur	__node_type *	_M_cur
_M_storage	type	_M_storage
_M_storage	type	_M_storage
_M_storage	type	_M_storage
_M_storage	type	_M_storage
_M_storage	type	_M_storage
_M_storage	type	_M_storage
_M_head_impl	const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &	_M_head_impl
_M_head_impl	_Result<void> *	_M_head_impl
_M_head_impl	_Result_base *	_M_head_impl
_M_head_impl	parse_execution_context_t *	_M_head_impl
_M_head_impl	process_t *	_M_head_impl
_M_head_impl	_Make_ready *	_M_head_impl
_M_head_impl	env_stack_impl_t *	_M_head_impl
_M_head_impl	autoload_file_cache_t *	_M_head_impl
__align	struct <unnamed>	__align
__data	unsigned char[40]	__data
__align	struct <unnamed>	__align
__data	unsigned char[128]	__data
__align	struct <unnamed>	__align
__data	unsigned char[32]	__data
__align	struct <unnamed>	__align
__data	unsigned char[88]	__data
__align	struct <unnamed>	__align
__data	unsigned char[24]	__data
_M_t	pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>	_M_t
_M_current	element_t *	_M_current
_M_current	element_t *	_M_current
_M_impl	_Vector_impl	_M_impl
_M_impl	_Vector_impl	_M_impl
_M_impl	_Vector_impl	_M_impl
_M_impl	_Vector_impl	_M_impl
_M_impl	_Vector_impl	_M_impl
print_help	bool	print_help
desc	const wchar_t *	desc
func	..(*)(..)	func
func	..(*)(..)	func
name	const wchar_t *	name
_M_impl	_Deque_impl	_M_impl
comp	_Compare	comp
c	_Sequence	c
c	_Sequence	c
queue_	deque<char_event_t, allocator<char_event_t>>	queue_
v_	union <unnamed>	v_
type	char_event_type_t	type
input_style	char_input_style_t	input_style
seq	wcstring	seq
seq	wcstring	seq
rl	readline_cmd_t	rl
c	wchar_t	c
function_status_	bool	function_status_
all_mappings_cache_	shared_ptr<const vector<input_mapping_t, allocator<input_mapping_t>>>	all_mappings_cache_
all_mappings_cache_	shared_ptr<const vector<input_mapping_t, allocator<input_mapping_t>>>	all_mappings_cache_
preset_mapping_list_	mapping_list_t	preset_mapping_list_
preset_mapping_list_	mapping_list_t	preset_mapping_list_
mapping_list_	mapping_list_t	mapping_list_
mapping_list_	mapping_list_t	mapping_list_
parser_	const shared_ptr<parser_t>	parser_
parser_	const shared_ptr<parser_t>	parser_
input_function_args_	vector<wchar_t, allocator<wchar_t>>	input_function_args_
event_queue_	input_event_queue_t	event_queue_
mode	wcstring	mode
mode	wcstring	mode
seq	wcstring	seq
seq	wcstring	seq
input_mappings_	acquired_lock<input_mapping_set_t>	input_mappings_
lock	unique_lock<mutex>	lock
opts	bind_cmd_opts_t *	opts
opts	bind_cmd_opts_t *	opts
count	const completion_request_t	count
requires_param	bool	requires_param
force_files	bool	force_files
no_files	bool	no_files
flags	complete_flags_t	flags
match	string_fuzzy_match_t	match
description	wcstring	description
description	wcstring	description
completion	wcstring	completion
completion	wcstring	completion
type	unsigned char	type
data	union <unnamed>	data
flags	unsigned char	flags
color	color24_t	color
name_idx	unsigned char	name_idx
rgb	unsigned char[3]	rgb
foreground	highlight_role_t	foreground
background	highlight_role_t	background
valid_path	bool	valid_path
force_underline	bool	force_underline
undo_history	undo_history_t	undo_history
position_	size_t	position_
text_	wcstring	text_
text_	wcstring	text_
cursor_position_before_edit	size_t	cursor_position_before_edit
offset	size_t	offset
length	size_t	length
old	wcstring	old
old	wcstring	old
replacement	wcstring	replacement
replacement	wcstring	replacement
may_coalesce	bool	may_coalesce
edits_applied	size_t	edits_applied
edits	vector<edit_t, allocator<edit_t>>	edits
initialized	bool	initialized
missing_arg_return_colon	bool	missing_arg_return_colon
woptarg	wchar_t *	woptarg
shortopts	const wchar_t *	shortopts
nextchar	wchar_t *	nextchar
woptind	int	woptind
wopterr	int	wopterr
woptopt	int	woptopt
ordering	(unnamed enum)	ordering
first_nonopt	int	first_nonopt
last_nonopt	int	last_nonopt
val	wchar_t	val
flag	int *	flag
has_arg	int	has_arg
name	const wchar_t *	name
_M_node	_Map_pointer	_M_node
_M_last	_Elt_pointer	_M_last
_M_first	_Elt_pointer	_M_first
_M_cur	_Elt_pointer	_M_cur
value	logger_t *	value
lock	unique_lock<mutex>	lock
data	logger_t	data
lock	mutex	lock
value	input_mapping_set_t *	value
_M_impl	_Impl	_M_impl
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_a	const allocator<io_fd_t> &	_M_a
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
_M_end_of_storage	pointer	_M_end_of_storage
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
_M_finish	iterator	_M_finish
_M_start	iterator	_M_start
_M_map_size	size_t	_M_map_size
_M_map	_Map_pointer	_M_map
_M_cur	_Elt_pointer	_M_cur
_M_first	_Elt_pointer	_M_first
_M_current	completion_t *	_M_current
_M_ptr	pointer	_M_ptr
_M_alloc	allocator<_Sp_counted_ptr_inplace<io_fd_t, allocator<io_fd_t>, _S_atomic>> *	_M_alloc
_M_storage	__aligned_buffer<io_fd_t>	_M_storage
_M_end_of_storage	pointer	_M_end_of_storage
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
_M_end_of_storage	pointer	_M_end_of_storage
_M_end_of_storage	pointer	_M_end_of_storage
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
_M_end_of_storage	pointer	_M_end_of_storage
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
_M_node	_Map_pointer	_M_node
_M_last	_Elt_pointer	_M_last
_M_current	const shared_ptr<const io_data_t> *	_M_current
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
_M_ptr	element_type *	_M_ptr
_M_ptr	element_type *	_M_ptr
_M_value	const wchar_t *const &	_M_value
_M_storage	type	_M_storage
_M_impl	_Vector_impl	_M_impl
_M_impl	_Vector_impl	_M_impl
ignore_unknown	bool	ignore_unknown
print_help	bool	print_help
stop_nonopt	bool	stop_nonopt
min_args	size_t	min_args
max_args	size_t	max_args
implicit_int_flag	wchar_t	implicit_int_flag
name	wcstring	name
name	wcstring	name
raw_exclusive_flags	wcstring_list_t	raw_exclusive_flags
raw_exclusive_flags	wcstring_list_t	raw_exclusive_flags
argv	wcstring_list_t	argv
argv	wcstring_list_t	argv
options	unordered_map<wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>, hash<wchar_t>, equal_to<wchar_t>, allocator<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>>>	options
long_to_short_flag	unordered_map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>>>	long_to_short_flag
exclusive_flag_sets	vector<vector<wchar_t, allocator<wchar_t>>, allocator<vector<wchar_t, allocator<wchar_t>>>>	exclusive_flag_sets
_M_h	_Hashtable	_M_h
_M_h	_Hashtable	_M_h
second	unique_ptr<option_spec_t, default_delete<option_spec_t>>	second
num_seen	int	num_seen
short_flag_valid	bool	short_flag_valid
short_flag	const wchar_t	short_flag
vals	wcstring_list_t	vals
vals	wcstring_list_t	vals
long_flag	wcstring	long_flag
long_flag	wcstring	long_flag
num_allowed	int	num_allowed
validation_command	wcstring	validation_command
validation_command	wcstring	validation_command
second	bool	second
second	wchar_t	second
_M_current	const wchar_t *	_M_current
_M_current	const vector<wchar_t, allocator<wchar_t>> *	_M_current
first	const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	first
_M_cur	__node_type *	_M_cur
first	_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, false, true>	first
_M_cur	__node_type *	_M_cur
first	const wchar_t	first
_M_t	__uniq_ptr_impl<option_spec_t, default_delete<option_spec_t>>	_M_t
_M_single_bucket	__bucket_type	_M_single_bucket
_M_rehash_policy	_Prime_rehash_policy	_M_rehash_policy
_M_element_count	size_type	_M_element_count
_M_before_begin	__node_base	_M_before_begin
_M_bucket_count	size_type	_M_bucket_count
_M_buckets	__bucket_type *	_M_buckets
_M_single_bucket	__bucket_type	_M_single_bucket
_M_rehash_policy	_Prime_rehash_policy	_M_rehash_policy
_M_element_count	size_type	_M_element_count
_M_before_begin	__node_base	_M_before_begin
_M_bucket_count	size_type	_M_bucket_count
_M_buckets	__bucket_type *	_M_buckets
_M_hash_code	size_t	_M_hash_code
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
_M_end_of_storage	pointer	_M_end_of_storage
_M_start	pointer	_M_start
_M_finish	pointer	_M_finish
_M_current	woption *	_M_current
_M_current	wchar_t *	_M_current
_M_storage	__aligned_buffer<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>>	_M_storage
_M_storage	__aligned_buffer<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>>	_M_storage
_M_end_of_storage	pointer	_M_end_of_storage
_M_current	woption *	_M_current
_M_current	const woption *	_M_current
_M_t	tuple<option_spec_t *, default_delete<option_spec_t>>	_M_t
_M_current	wchar_t *	_M_current
_M_current	vector<wchar_t, allocator<wchar_t>> *	_M_current
_M_value	const wchar_t &	_M_value
_M_storage	type	_M_storage
_M_storage	type	_M_storage
_M_head_impl	const wchar_t &	_M_head_impl
_M_current	vector<wchar_t, allocator<wchar_t>> *	_M_current
_M_head_impl	option_spec_t *	_M_head_impl
__align	struct <unnamed>	__align
__data	unsigned char[16]	__data
_M_impl	_Deque_impl	_M_impl
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
_M_node	_Map_pointer	_M_node
_M_last	_Elt_pointer	_M_last
_M_first	_Elt_pointer	_M_first
_M_cur	_Elt_pointer	_M_cur
_M_finish	iterator	_M_finish
_M_start	iterator	_M_start
_M_map_size	size_t	_M_map_size
_M_map	_Map_pointer	_M_map
_M_impl	_Vector_impl	_M_impl
_M_node	_Base_ptr	_M_node
_M_node	_Base_ptr	_M_node
_M_t	_Rep_type	_M_t
_M_t	_Rep_type	_M_t
all	bool	all
mode	int	mode
print_help	bool	print_help
use_terminfo	bool	use_terminfo
list_modes	bool	list_modes
bind_mode	const wchar_t *	bind_mode
bind_mode_given	bool	bind_mode_given
sets_bind_mode	const wchar_t *	sets_bind_mode
have_preset	bool	have_preset
preset	bool	preset
silent	bool	silent
have_user	bool	have_user
user	bool	user
second	bool	second
first	_Rb_tree_const_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	first
_M_current	const input_mapping_name_t *	_M_current
_M_t	_Rep_type	_M_t
_M_impl	_Rb_tree_impl<less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>	_M_impl
_M_start	pointer	_M_start
_M_finish	pointer	_M_finish
first	_Rb_tree_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	first
second	bool	second
_M_end_of_storage	pointer	_M_end_of_storage
_M_storage	__aligned_membuf<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	_M_storage
_M_t	_Rb_tree<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, _Identity<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> &	_M_t
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
_M_storage	unsigned char[32]	_M_storage
_M_t	basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	_M_t
scope	int	scope
erase	bool	erase
print_help	bool	print_help
_M_node	_List_node_base *	_M_node
_M_storage	__aligned_membuf<event_blockage_t>	_M_storage
_M_storage	unsigned char[1]	_M_storage
_M_ptr	pointer	_M_ptr
_M_alloc	allocator<_List_node<event_blockage_t>> *	_M_alloc
_M_t	event_blockage_t	_M_t
print_help	bool	print_help
list_names	bool	list_names
query	bool	query
_M_value	wchar_t *const &	_M_value
iov_len	size_t	iov_len
iov_base	void *	iov_base
f_handle	unsigned char[0]	f_handle
handle_type	int	handle_type
handle_bytes	unsigned int	handle_bytes
pid	__pid_t	pid
type	__pid_type	type
l_pid	__pid_t	l_pid
l_len	__off64_t	l_len
l_start	__off64_t	l_start
l_whence	short	l_whence
l_type	short	l_type
l_pid	__pid_t	l_pid
l_len	__off_t	l_len
l_start	__off_t	l_start
l_whence	short	l_whence
l_type	short	l_type
__glibc_reserved	__syscall_slong_t[3]	__glibc_reserved
st_ctim	timespec	st_ctim
st_mtim	timespec	st_mtim
st_atim	timespec	st_atim
st_blocks	__blkcnt64_t	st_blocks
st_blksize	__blksize_t	st_blksize
st_size	__off_t	st_size
st_rdev	__dev_t	st_rdev
__pad0	int	__pad0
st_gid	__gid_t	st_gid
st_uid	__uid_t	st_uid
st_mode	__mode_t	st_mode
st_nlink	__nlink_t	st_nlink
st_ino	__ino64_t	st_ino
st_dev	__dev_t	st_dev
__glibc_reserved	__syscall_slong_t[3]	__glibc_reserved
st_ctim	timespec	st_ctim
st_mtim	timespec	st_mtim
st_atim	timespec	st_atim
st_blocks	__blkcnt_t	st_blocks
st_blksize	__blksize_t	st_blksize
st_size	__off_t	st_size
st_rdev	__dev_t	st_rdev
__pad0	int	__pad0
st_gid	__gid_t	st_gid
st_uid	__uid_t	st_uid
st_mode	__mode_t	st_mode
st_nlink	__nlink_t	st_nlink
st_ino	__ino_t	st_ino
st_dev	__dev_t	st_dev
__statx_timestamp_pad1	__int32_t[1]	__statx_timestamp_pad1
tv_nsec	__uint32_t	tv_nsec
tv_sec	__int64_t	tv_sec
__statx_pad2	__uint64_t[14]	__statx_pad2
stx_dev_minor	__uint32_t	stx_dev_minor
stx_dev_major	__uint32_t	stx_dev_major
stx_rdev_minor	__uint32_t	stx_rdev_minor
stx_rdev_major	__uint32_t	stx_rdev_major
stx_mtime	statx_timestamp	stx_mtime
stx_ctime	statx_timestamp	stx_ctime
stx_btime	statx_timestamp	stx_btime
stx_atime	statx_timestamp	stx_atime
stx_attributes_mask	__uint64_t	stx_attributes_mask
stx_blocks	__uint64_t	stx_blocks
stx_size	__uint64_t	stx_size
stx_ino	__uint64_t	stx_ino
__statx_pad1	__uint16_t[1]	__statx_pad1
stx_mode	__uint16_t	stx_mode
stx_gid	__uint32_t	stx_gid
stx_uid	__uint32_t	stx_uid
stx_nlink	__uint32_t	stx_nlink
stx_attributes	__uint64_t	stx_attributes
stx_blksize	__uint32_t	stx_blksize
stx_mask	__uint32_t	stx_mask
_M_current	event_t *	_M_current
_M_impl	_Vector_impl	_M_impl
_M_impl	_Impl	_M_impl
_M_a	const allocator<autoclose_fd_t> &	_M_a
_M_start	pointer	_M_start
_M_finish	pointer	_M_finish
_M_ptr	pointer	_M_ptr
_M_alloc	allocator<_Sp_counted_ptr_inplace<const autoclose_fd_t, allocator<autoclose_fd_t>, _S_atomic>> *	_M_alloc
_M_storage	__aligned_buffer<const autoclose_fd_t>	_M_storage
_M_end_of_storage	pointer	_M_end_of_storage
_M_refcount	__weak_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
_M_storage	type	_M_storage
__align	struct <unnamed>	__align
__data	unsigned char[4]	__data
print_help	bool	print_help
find_path	bool	find_path
quiet	bool	quiet
all_paths	bool	all_paths
impl_	maybe_impl_t<tok_t>	impl_
impl_	maybe_impl_t<readline_cmd_t>	impl_
filled	bool	filled
filled	bool	filled
storage	char[4]	storage
storage	char[40]	storage
parser	parser_t &	parser
_M_len	size_type	_M_len
_M_array	iterator	_M_array
_M_current	completion_t *	_M_current
_M_current	parse_error_t *	_M_current
__stored_locally	const bool	__stored_locally
_M_impl	_Vector_impl	_M_impl
_M_start	pointer	_M_start
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
_M_finish	pointer	_M_finish
_M_end_of_storage	pointer	_M_end_of_storage
_M_end_of_storage	pointer	_M_end_of_storage
print_help	bool	print_help
print_index	bool	print_index
second	bool	second
first	_Rb_tree_const_iterator<job_t *>	first
_M_t	_Rep_type	_M_t
_M_impl	_Rb_tree_impl<less<job_t *>, true>	_M_impl
_M_node	_Base_ptr	_M_node
_M_node	_Base_ptr	_M_node
first	_Rb_tree_iterator<job_t *>	first
second	bool	second
_M_storage	__aligned_membuf<job_t *>	_M_storage
_M_t	_Rb_tree<job_t *, job_t *, _Identity<job_t *>, less<job_t *>, allocator<job_t *>> &	_M_t
_M_key_compare	less<job_t *>	_M_key_compare
_M_storage	unsigned char[8]	_M_storage
_M_t	job_t *	_M_t
print_newline	bool	print_newline
print_spaces	bool	print_spaces
interpret_special_chars	bool	interpret_special_chars
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
_M_len	size_type	_M_len
_M_array	iterator	_M_array
print_help	bool	print_help
_M_impl	_Vector_impl	_M_impl
_M_node	_Base_ptr	_M_node
inherit_vars	map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	inherit_vars
named_arguments	wcstring_list_t	named_arguments
named_arguments	wcstring_list_t	named_arguments
parsed_source	parsed_source_ref_t	parsed_source
shadow_scope	bool	shadow_scope
func_node	const block_statement_t *	func_node
gen_	uint64_t	gen_
topic_	topic_t	topic_
print_help	bool	print_help
shadow_scope	bool	shadow_scope
description	wcstring	description
description	wcstring	description
events	vector<event_description_t, allocator<event_description_t>>	events
named_arguments	wcstring_list_t	named_arguments
named_arguments	wcstring_list_t	named_arguments
inherit_vars	wcstring_list_t	inherit_vars
inherit_vars	wcstring_list_t	inherit_vars
wrap_targets	wcstring_list_t	wrap_targets
wrap_targets	wcstring_list_t	wrap_targets
_M_current	event_description_t *	_M_current
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
_M_t	_Rep_type	_M_t
_M_impl	_Rb_tree_impl<less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>	_M_impl
_M_node	_Base_ptr	_M_node
_M_impl	_Impl	_M_impl
_M_impl	_Impl	_M_impl
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_a	const allocator<function_properties_t> &	_M_a
_M_a	const allocator<event_handler_t> &	_M_a
_M_finish	pointer	_M_finish
_M_end_of_storage	pointer	_M_end_of_storage
_M_start	pointer	_M_start
first	const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	first
second	vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	second
_M_ptr	pointer	_M_ptr
_M_alloc	allocator<_Sp_counted_ptr_inplace<function_properties_t, allocator<function_properties_t>, _S_atomic>> *	_M_alloc
_M_ptr	pointer	_M_ptr
_M_alloc	allocator<_Sp_counted_ptr_inplace<event_handler_t, allocator<event_handler_t>, _S_atomic>> *	_M_alloc
_M_storage	__aligned_buffer<event_handler_t>	_M_storage
_M_storage	__aligned_buffer<function_properties_t>	_M_storage
_M_storage	__aligned_membuf<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	_M_storage
_M_ptr	element_type *	_M_ptr
_M_ptr	element_type *	_M_ptr
_M_storage	unsigned char[56]	_M_storage
_M_storage	type	_M_storage
_M_storage	type	_M_storage
_M_current	event_description_t *	_M_current
__align	struct <unnamed>	__align
__data	unsigned char[80]	__data
__align	struct <unnamed>	__align
__data	unsigned char[104]	__data
_M_t	pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	_M_t
data_	owning_lock<data_t>	data_
setting_env_vars_	relaxed_atomic_bool_t	setting_env_vars_
tty_size_reader_	const tty_size_reader_func_t	tty_size_reader_
last_from_tty	maybe_t<termsize_t>	last_from_tty
last_from_env	maybe_t<termsize_t>	last_from_env
last_tty_gen_count	uint32_t	last_tty_gen_count
width	int	width
height	int	height
DEFAULT_WIDTH	int	DEFAULT_WIDTH
DEFAULT_HEIGHT	int	DEFAULT_HEIGHT
print_help	bool	print_help
erase	bool	erase
list	bool	list
show_hidden	bool	show_hidden
query	bool	query
copy	bool	copy
report_metadata	bool	report_metadata
verbose	bool	verbose
handlers	bool	handlers
handlers_type	wchar_t *	handlers_type
description	wchar_t *	description
_M_current	shared_ptr<event_handler_t> *	_M_current
impl_	maybe_impl_t<termsize_t>	impl_
data	data_t	data
lock	mutex	lock
impl_	maybe_impl_t<event_type_t>	impl_
_M_impl	_Vector_impl	_M_impl
_M_impl	_Rb_tree_impl<less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>	_M_impl
_M_start	pointer	_M_start
_M_finish	pointer	_M_finish
filled	bool	filled
_M_end_of_storage	pointer	_M_end_of_storage
storage	char[4]	storage
filled	bool	filled
storage	char[8]	storage
canon_term_	wcstring	canon_term_
canon_term_	wcstring	canon_term_
history_	history_t *	history_
orig_term_	wcstring	orig_term_
orig_term_	wcstring	orig_term_
search_type_	history_search_type_t	search_type_
flags_	history_search_flags_t	flags_
current_item_	maybe_t<history_item_t>	current_item_
current_index_	size_t	current_index_
deduper_	unordered_set<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	deduper_
contents	wcstring	contents
contents	wcstring	contents
creation_timestamp	time_t	creation_timestamp
required_paths	path_list_t	required_paths
never_mmap	bool	never_mmap
chaos_mode	bool	chaos_mode
wrap_	const unique_ptr<impl_wrapper_t, default_delete<impl_wrapper_t>>	wrap_
wrap_	const unique_ptr<impl_wrapper_t, default_delete<impl_wrapper_t>>	wrap_
identifier	history_identifier_t	identifier
hist_cmd	hist_cmd_t	hist_cmd
search_type	history_search_type_t	search_type
show_time_format	const wchar_t *	show_time_format
max_items	size_t	max_items
print_help	bool	print_help
history_search_type_defined	bool	history_search_type_defined
case_sensitive	bool	case_sensitive
null_terminate	bool	null_terminate
reverse	bool	reverse
val	hist_cmd_t	val
str	const wchar_t *const	str
_M_t	__uniq_ptr_impl<impl_wrapper_t, default_delete<impl_wrapper_t>>	_M_t
impl_	maybe_impl_t<history_item_t>	impl_
filled	bool	filled
storage	char[72]	storage
_M_t	tuple<impl_wrapper_t *, default_delete<impl_wrapper_t>>	_M_t
_M_head_impl	impl_wrapper_t *	_M_head_impl
position	int	position
type	te_error_type_t	type
print_help	bool	print_help
scale	int	scale
early_exit	bool	early_exit
exit_code	int	exit_code
streams	io_streams_t &	streams
_M_impl	_Vector_impl	_M_impl
_M_impl	_Vector_impl	_M_impl
_M_param	param_type	_M_param
_M_int	vector<_RealType, allocator<_RealType>>	_M_int
_M_den	vector<double, allocator<double>>	_M_den
_M_param	param_type	_M_param
_M_int	vector<_RealType, allocator<_RealType>>	_M_int
_M_den	vector<double, allocator<double>>	_M_den
_M_param	param_type	_M_param
_M_prob	vector<double, allocator<double>>	_M_prob
_M_param	param_type	_M_param
_M_a	_RealType	_M_a
_M_b	_RealType	_M_b
_M_param	param_type	_M_param
_M_a	_RealType	_M_a
_M_b	_RealType	_M_b
_M_param	param_type	_M_param
_M_lambda	_RealType	_M_lambda
_M_param	param_type	_M_param
_M_nd	normal_distribution<double>	_M_nd
_M_mean	double	_M_mean
_M_alpha	double	_M_alpha
_M_beta	double	_M_beta
_M_param	param_type	_M_param
_M_nd	normal_distribution<double>	_M_nd
_M_param	param_type	_M_param
_M_gd	gamma_distribution<double>	_M_gd
_M_k	_IntType	_M_k
_M_p	double	_M_p
_M_param	param_type	_M_param
_M_p	double	_M_p
_M_mean	double	_M_mean
_M_stddev	double	_M_stddev
_M_param	param_type	_M_param
_M_nd	normal_distribution<double>	_M_nd
_M_t	_IntType	_M_t
_M_p	double	_M_p
_M_param	param_type	_M_param
_M_p	double	_M_p
_M_param	param_type	_M_param
_M_nd	normal_distribution<_RealType>	_M_nd
_M_gd	gamma_distribution<_RealType>	_M_gd
_M_n	_RealType	_M_n
_M_param	param_type	_M_param
_M_gd_x	gamma_distribution<_RealType>	_M_gd_x
_M_gd_y	gamma_distribution<_RealType>	_M_gd_y
_M_m	_RealType	_M_m
_M_n	_RealType	_M_n
_M_param	param_type	_M_param
_M_a	_RealType	_M_a
_M_b	_RealType	_M_b
_M_param	param_type	_M_param
_M_gd	gamma_distribution<result_type>	_M_gd
_M_n	_RealType	_M_n
_M_param	param_type	_M_param
_M_nd	normal_distribution<_RealType>	_M_nd
_M_alpha	_RealType	_M_alpha
_M_beta	_RealType	_M_beta
_M_param	param_type	_M_param
_M_nd	normal_distribution<_RealType>	_M_nd
_M_m	_RealType	_M_m
_M_s	_RealType	_M_s
_M_mean	_RealType	_M_mean
_M_stddev	_RealType	_M_stddev
_M_param	param_type	_M_param
_M_a	_RealType	_M_a
_M_b	_RealType	_M_b
_M_b	_RandomNumberEngine	_M_b
_M_v	result_type[]	_M_v
_M_y	result_type	_M_y
_M_b	_RandomNumberEngine	_M_b
_M_b	_RandomNumberEngine	_M_b
_M_n	size_t	_M_n
_M_x	_UIntType[]	_M_x
long_lag	size_t	long_lag
_M_carry	_UIntType	_M_carry
_M_p	size_t	_M_p
_M_x	_UIntType[]	_M_x
state_size	size_t	state_size
_M_p	size_t	_M_p
_M_x	_UIntType	_M_x
_M_v	vector<unsigned int, allocator<unsigned int>>	_M_v
default_seed	result_type	default_seed
_M_m	vector<double, allocator<double>>	_M_m
_M_cp	vector<double, allocator<double>>	_M_cp
_M_cp	vector<double, allocator<double>>	_M_cp
_M_cp	vector<double, allocator<double>>	_M_cp
_M_cb	double	_M_cb
_M_c2b	double	_M_c2b
_M_1cx	double	_M_1cx
_M_scx	double	_M_scx
_M_d	double	_M_d
_M_sm	double	_M_sm
_M_lfm	double	_M_lfm
_M_lm_thr	double	_M_lm_thr
_M_log_1_p	double	_M_log_1_p
_M_easy	bool	_M_easy
_M_lp1p	double	_M_lp1p
_M_lf	double	_M_lf
_M_s	double	_M_s
_M_a123	double	_M_a123
_M_a1	double	_M_a1
_M_c	double	_M_c
_M_s2	double	_M_s2
_M_s1	double	_M_s1
_M_d2	double	_M_d2
_M_d1	double	_M_d1
_M_q	double	_M_q
_M_a2	_RealType	_M_a2
_M_malpha	_RealType	_M_malpha
_M_saved_available	bool	_M_saved_available
_M_saved	result_type	_M_saved
_M_param	param_type	_M_param
(unknown field)	union <unnamed>	(unknown field)
_M_mt	mt19937	_M_mt
_M_file	void *	_M_file
table_size	size_t	table_size
used_block	size_t	used_block
block_size	size_t	block_size
default_seed	result_type	default_seed
short_lag	size_t	short_lag
word_size	size_t	word_size
default_seed	result_type	default_seed
initialization_multiplier	result_type	initialization_multiplier
tempering_l	size_t	tempering_l
tempering_c	result_type	tempering_c
tempering_t	size_t	tempering_t
tempering_b	result_type	tempering_b
tempering_s	size_t	tempering_s
tempering_d	result_type	tempering_d
tempering_u	size_t	tempering_u
xor_mask	result_type	xor_mask
mask_bits	size_t	mask_bits
shift_size	size_t	shift_size
word_size	size_t	word_size
_M_g	_Engine &	_M_g
__value	const _UIntType	__value
__value	const _UIntType	__value
modulus	result_type	modulus
increment	result_type	increment
multiplier	result_type	multiplier
streams	io_streams_t &	streams
cmd	wchar_t *&	cmd
parse_error	bool &	parse_error
streams	io_streams_t &	streams
cmd	wchar_t *&	cmd
parse_error	bool &	parse_error
lock	unique_lock<mutex>	lock
_M_len	size_type	_M_len
_M_array	iterator	_M_array
value	linear_congruential_engine<unsigned long, 48271UL, 0UL, 2147483647UL> *	value
data	linear_congruential_engine<unsigned long, 48271UL, 0UL, 2147483647UL>	data
lock	mutex	lock
_M_a2	double	_M_a2
_M_malpha	double	_M_malpha
_M_saved_available	bool	_M_saved_available
_M_saved	result_type	_M_saved
_M_param	param_type	_M_param
_M_x	unsigned long	_M_x
default_seed	const result_type	default_seed
modulus	const result_type	modulus
increment	const result_type	increment
multiplier	const result_type	multiplier
_M_p	size_t	_M_p
_M_x	unsigned long[624]	_M_x
default_seed	const result_type	default_seed
initialization_multiplier	const result_type	initialization_multiplier
tempering_l	const size_t	tempering_l
tempering_c	const result_type	tempering_c
tempering_t	const size_t	tempering_t
tempering_b	const result_type	tempering_b
tempering_s	const size_t	tempering_s
tempering_d	const result_type	tempering_d
tempering_u	const size_t	tempering_u
xor_mask	const result_type	xor_mask
mask_bits	const size_t	mask_bits
shift_size	const size_t	shift_size
state_size	const size_t	state_size
word_size	const size_t	word_size
_M_param	param_type	_M_param
_M_b	long long	_M_b
_M_a	long long	_M_a
__value	const unsigned long	__value
_M_start	pointer	_M_start
_M_finish	pointer	_M_finish
_M_current	unsigned int *	_M_current
_M_end_of_storage	pointer	_M_end_of_storage
_M_end_of_storage	pointer	_M_end_of_storage
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
_M_current	unsigned int *	_M_current
argv	wchar_t **&	argv
argc	int &	argc
var_ptr	wchar_t *const *&	var_ptr
vars_left	lambda [] type at line 149574, col. 22 &	vars_left
parser	parser_t &	parser
var_ptr	wchar_t *const *&	var_ptr
opts	read_cmd_opts_t &	opts
place	int	place
print_help	bool	print_help
prompt_cmd	wcstring	prompt_cmd
prompt_cmd	wcstring	prompt_cmd
prompt	const wchar_t *	prompt
prompt_str	const wchar_t *	prompt_str
right_prompt	const wchar_t *	right_prompt
commandline	const wchar_t *	commandline
have_delimiter	bool	have_delimiter
delimiter	wcstring	delimiter
delimiter	wcstring	delimiter
tokenize	bool	tokenize
shell	bool	shell
array	bool	array
silent	bool	silent
split_null	bool	split_null
to_stdout	bool	to_stdout
nchars	int	nchars
one_line	bool	one_line
restored	bool	restored
saved_value	bool	saved_value
ref	bool *const	ref
_M_it1	__normal_iterator<wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	_M_it1
print_help	bool	print_help
_M_node	_Base_ptr	_M_node
_M_node	_Base_ptr	_M_node
_M_impl	_Vector_impl	_M_impl
print_help	bool	print_help
show	bool	show
local	bool	local
global	bool	global
exportv	bool	exportv
erase	bool	erase
list	bool	list
unexport	bool	unexport
pathvar	bool	pathvar
unpathvar	bool	unpathvar
universal	bool	universal
query	bool	query
shorten_ok	bool	shorten_ok
append	bool	append
prepend	bool	prepend
preserve_failure_exit_status	bool	preserve_failure_exit_status
current	_Rb_tree_const_iterator<long>	current
_M_current	long *	_M_current
_M_t	_Rep_type	_M_t
_M_impl	_Rb_tree_impl<less<long>, true>	_M_impl
_M_finish	pointer	_M_finish
_M_end_of_storage	pointer	_M_end_of_storage
_M_start	pointer	_M_start
_M_current	long *	_M_current
_M_storage	__aligned_membuf<long>	_M_storage
_M_t	_Rb_tree<long, long, _Identity<long>, less<long>, allocator<long>> &	_M_t
_M_current	const long *	_M_current
_M_value	const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &	_M_value
_M_key_compare	less<long>	_M_key_compare
_M_storage	unsigned char[8]	_M_storage
_M_t	long	_M_t
bstate	mmask_t	bstate
z	int	z
y	int	y
x	int	x
id	short	id
_color	int	_color
_bkgrnd	cchar_t	_bkgrnd
_yoffset	short	_yoffset
_pad	pdat	_pad
_parent	WINDOW *	_parent
_pary	int	_pary
_parx	int	_parx
_regbottom	short	_regbottom
_regtop	short	_regtop
_line	ldat *	_line
_delay	int	_delay
_use_keypad	bool	_use_keypad
_sync	bool	_sync
_immed	bool	_immed
_idcok	bool	_idcok
_idlok	bool	_idlok
_scroll	bool	_scroll
_leaveok	bool	_leaveok
_clear	bool	_clear
_notimeout	bool	_notimeout
_bkgd	chtype	_bkgd
_attrs	attr_t	_attrs
_flags	short	_flags
_begx	short	_begx
_begy	short	_begy
_maxx	short	_maxx
_maxy	short	_maxy
_curx	short	_curx
_cury	short	_cury
ext_color	int	ext_color
chars	wchar_t[5]	chars
attr	attr_t	attr
_pad_right	short	_pad_right
_pad_bottom	short	_pad_bottom
_pad_left	short	_pad_left
_pad_top	short	_pad_top
_pad_x	short	_pad_x
_pad_y	short	_pad_y
ext_Strings	unsigned short	ext_Strings
ext_Numbers	unsigned short	ext_Numbers
ext_Booleans	unsigned short	ext_Booleans
num_Strings	unsigned short	num_Strings
num_Numbers	unsigned short	num_Numbers
num_Booleans	unsigned short	num_Booleans
ext_Names	char **	ext_Names
ext_str_table	char *	ext_str_table
Strings	char **	Strings
Numbers	short *	Numbers
Booleans	char *	Booleans
str_table	char *	str_table
term_names	char *	term_names
contents_	string	contents_
bufferCount_	uint32_t	bufferCount_
fd_	int	fd_
last_color	rgb_color_t	last_color
last_color2	rgb_color_t	last_color2
was_bold	bool	was_bold
was_underline	bool	was_underline
was_italics	bool	was_italics
was_dim	bool	was_dim
was_reverse	bool	was_reverse
_M_impl	_Vector_impl	_M_impl
_M_start	pointer	_M_start
_M_finish	pointer	_M_finish
_M_end_of_storage	pointer	_M_end_of_storage
_M_current	rgb_color_t *	_M_current
_M_current	const rgb_color_t *	_M_current
_M_current	rgb_color_t *	_M_current
restored	bool	restored
saved_value	const wchar_t *	saved_value
ref	const wchar_t **const	ref
values	bool[3]	values
metadata	const metadata_t[3]	metadata
description	const wchar_t *	description
groups	const wchar_t *	groups
name	const wchar_t *	name
flag	flag_t	flag
level	int	level
new_job_control_mode	maybe_t<job_control_t>	new_job_control_mode
feature_name	const wchar_t *	feature_name
status_cmd	status_cmd_t	status_cmd
print_help	bool	print_help
val	status_cmd_t	val
str	const wchar_t *const	str
impl_	maybe_impl_t<job_control_t>	impl_
filled	bool	filled
storage	char[4]	storage
_M_impl	_Vector_impl	_M_impl
callout_string	PCRE2_SPTR32	callout_string
callout_string_length	size_t	callout_string_length
callout_string_offset	size_t	callout_string_offset
callout_number	uint32_t	callout_number
next_item_length	size_t	next_item_length
pattern_position	size_t	pattern_position
version	uint32_t	version
callout_flags	uint32_t	callout_flags
callout_string	PCRE2_SPTR32	callout_string
callout_string_length	size_t	callout_string_length
callout_string_offset	size_t	callout_string_offset
next_item_length	size_t	next_item_length
pattern_position	size_t	pattern_position
current_position	size_t	current_position
start_match	size_t	start_match
subject_length	size_t	subject_length
subject	PCRE2_SPTR32	subject
mark	PCRE2_SPTR32	mark
offset_vector	size_t *	offset_vector
capture_last	uint32_t	capture_last
capture_top	uint32_t	capture_top
callout_number	uint32_t	callout_number
version	uint32_t	version
callout_string	PCRE2_SPTR16	callout_string
callout_string_length	size_t	callout_string_length
callout_string_offset	size_t	callout_string_offset
callout_number	uint32_t	callout_number
next_item_length	size_t	next_item_length
pattern_position	size_t	pattern_position
version	uint32_t	version
callout_flags	uint32_t	callout_flags
callout_string	PCRE2_SPTR16	callout_string
callout_string_length	size_t	callout_string_length
callout_string_offset	size_t	callout_string_offset
next_item_length	size_t	next_item_length
pattern_position	size_t	pattern_position
current_position	size_t	current_position
start_match	size_t	start_match
subject_length	size_t	subject_length
subject	PCRE2_SPTR16	subject
mark	PCRE2_SPTR16	mark
offset_vector	size_t *	offset_vector
capture_last	uint32_t	capture_last
capture_top	uint32_t	capture_top
callout_number	uint32_t	callout_number
version	uint32_t	version
callout_string	PCRE2_SPTR8	callout_string
callout_string_length	size_t	callout_string_length
callout_string_offset	size_t	callout_string_offset
callout_number	uint32_t	callout_number
next_item_length	size_t	next_item_length
pattern_position	size_t	pattern_position
version	uint32_t	version
callout_flags	uint32_t	callout_flags
callout_string	PCRE2_SPTR8	callout_string
callout_string_length	size_t	callout_string_length
callout_string_offset	size_t	callout_string_offset
next_item_length	size_t	next_item_length
pattern_position	size_t	pattern_position
current_position	size_t	current_position
start_match	size_t	start_match
subject_length	size_t	subject_length
subject	PCRE2_SPTR8	subject
mark	PCRE2_SPTR8	mark
offset_vector	size_t *	offset_vector
capture_last	uint32_t	capture_last
capture_top	uint32_t	capture_top
callout_number	uint32_t	callout_number
version	uint32_t	version
storage_	wcstring	storage_
storage_	wcstring	storage_
buffer_	string	buffer_
streams_	const io_streams_t &	streams_
argidx_	int	argidx_
argv_	const wchar_t *const *	argv_
split_	const bool	split_
name	const wchar_t *	name
handler	..(*)(..)	handler
all_valid	bool	all_valid
chars_valid	bool	chars_valid
count_valid	bool	count_valid
entire_valid	bool	entire_valid
filter_valid	bool	filter_valid
ignore_case_valid	bool	ignore_case_valid
index_valid	bool	index_valid
invert_valid	bool	invert_valid
left_valid	bool	left_valid
length_valid	bool	length_valid
max_valid	bool	max_valid
no_newline_valid	bool	no_newline_valid
no_quoted_valid	bool	no_quoted_valid
quiet_valid	bool	quiet_valid
regex_valid	bool	regex_valid
right_valid	bool	right_valid
start_valid	bool	start_valid
end_valid	bool	end_valid
style_valid	bool	style_valid
no_empty_valid	bool	no_empty_valid
no_trim_newlines_valid	bool	no_trim_newlines_valid
fields_valid	bool	fields_valid
allow_empty_valid	bool	allow_empty_valid
all	bool	all
entire	bool	entire
filter	bool	filter
ignore_case	bool	ignore_case
index	bool	index
invert_match	bool	invert_match
left	bool	left
no_newline	bool	no_newline
no_quoted	bool	no_quoted
quiet	bool	quiet
regex	bool	regex
right	bool	right
no_empty	bool	no_empty
no_trim_newlines	bool	no_trim_newlines
allow_empty	bool	allow_empty
count	long	count
length	long	length
max	long	max
start	long	start
end	long	end
fields	vector<int, allocator<int>>	fields
chars_to_trim	const wchar_t *	chars_to_trim
arg1	const wchar_t *	arg1
arg2	const wchar_t *	arg2
escape_style	escape_string_style_t	escape_style
patlen	size_t	patlen
opts	options_t	opts
pattern	const wcstring	pattern
replacement	const wcstring	replacement
total_replaced	int	total_replaced
streams	io_streams_t &	streams
replacement	maybe_t<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	replacement
regex	compiled_regex_t	regex
code	pcre2_code_32 *	code
match	pcre2_match_data_32 *	match
argv0	const wchar_t *	argv0
opts	options_t	opts
wcpattern	wcstring	wcpattern
wcpattern	wcstring	wcpattern
total_matched	int	total_matched
streams	io_streams_t &	streams
regex	compiled_regex_t	regex
argv0	const wchar_t *	argv0
_M_cur	__node_type *	_M_cur
_M_t	__uniq_ptr_impl<wildcard_matcher_t, default_delete<wildcard_matcher_t>>	_M_t
_M_t	__uniq_ptr_impl<pcre2_matcher_t, default_delete<pcre2_matcher_t>>	_M_t
_M_t	__uniq_ptr_impl<literal_replacer_t, default_delete<literal_replacer_t>>	_M_t
_M_t	__uniq_ptr_impl<regex_replacer_t, default_delete<regex_replacer_t>>	_M_t
_M_current	vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> *	_M_current
current	__normal_iterator<const wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	current
_M_h	_Hashtable	_M_h
_M_t	__uniq_ptr_impl<string_matcher_t, default_delete<string_matcher_t>>	_M_t
_M_t	__uniq_ptr_impl<string_replacer_t, default_delete<string_replacer_t>>	_M_t
_M_single_bucket	__bucket_type	_M_single_bucket
_M_rehash_policy	_Prime_rehash_policy	_M_rehash_policy
_M_element_count	size_type	_M_element_count
_M_before_begin	__node_base	_M_before_begin
_M_bucket_count	size_type	_M_bucket_count
_M_buckets	__bucket_type *	_M_buckets
_M_start	pointer	_M_start
_M_finish	pointer	_M_finish
_M_end_of_storage	pointer	_M_end_of_storage
first	const char	first
_M_len	size_type	_M_len
_M_array	iterator	_M_array
_M_storage	__aligned_buffer<pair<const char, ..(..)>>	_M_storage
_M_current	const int *	_M_current
_M_t	tuple<string_replacer_t *, default_delete<string_replacer_t>>	_M_t
_M_t	tuple<string_matcher_t *, default_delete<string_matcher_t>>	_M_t
_M_t	tuple<regex_replacer_t *, default_delete<regex_replacer_t>>	_M_t
_M_t	tuple<literal_replacer_t *, default_delete<literal_replacer_t>>	_M_t
_M_t	tuple<pcre2_matcher_t *, default_delete<pcre2_matcher_t>>	_M_t
_M_t	tuple<wildcard_matcher_t *, default_delete<wildcard_matcher_t>>	_M_t
_M_storage	type	_M_storage
_M_it1	reverse_iterator<__normal_iterator<const wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	_M_it1
_M_it1	__normal_iterator<const wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	_M_it1
_M_current	vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> *	_M_current
__align	struct <unnamed>	__align
__data	unsigned char[1]	__data
_M_head_impl	literal_replacer_t *	_M_head_impl
_M_head_impl	regex_replacer_t *	_M_head_impl
_M_head_impl	string_replacer_t *	_M_head_impl
_M_head_impl	wildcard_matcher_t *	_M_head_impl
_M_head_impl	pcre2_matcher_t *	_M_head_impl
_M_head_impl	string_matcher_t *	_M_head_impl
_M_impl	_Vector_impl	_M_impl
_M_impl	_Vector_impl	_M_impl
_M_node	_Base_ptr	_M_node
_M_node	_Base_ptr	_M_node
token	const token_t	token
range	range_t	range
second	const token_info_t	second
tok	token_t	tok
flags	unsigned int	flags
contents	unique_ptr<expression, default_delete<expression>>	contents
subjects	const vector<unique_ptr<expression, default_delete<expression>>, allocator<unique_ptr<expression, default_delete<expression>>>>	subjects
combiners	const vector<token_t, allocator<token_t>>	combiners
subject	unique_ptr<expression, default_delete<expression>>	subject
arg_right	wcstring	arg_right
arg_right	wcstring	arg_right
arg_left	wcstring	arg_left
arg_left	wcstring	arg_left
arg	wcstring	arg
arg	wcstring	arg
start	unsigned int	start
end	unsigned int	end
errors	wcstring_list_t	errors
errors	wcstring_list_t	errors
strings	wcstring_list_t	strings
strings	wcstring_list_t	strings
error_idx	int	error_idx
base	long long	base
delta	double	delta
_M_len	size_type	_M_len
_M_array	iterator	_M_array
_M_t	__uniq_ptr_impl<combining_expression, default_delete<combining_expression>>	_M_t
_M_t	__uniq_ptr_impl<unary_operator, default_delete<unary_operator>>	_M_t
_M_t	__uniq_ptr_impl<parenthetical_expression, default_delete<parenthetical_expression>>	_M_t
_M_t	__uniq_ptr_impl<binary_primary, default_delete<binary_primary>>	_M_t
_M_t	__uniq_ptr_impl<unary_primary, default_delete<unary_primary>>	_M_t
_M_len	size_type	_M_len
_M_array	iterator	_M_array
first	const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	first
_M_t	_Rep_type	_M_t
_M_t	__uniq_ptr_impl<expression, default_delete<expression>>	_M_t
_M_impl	_Rb_tree_impl<less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>	_M_impl
_M_finish	pointer	_M_finish
_M_end_of_storage	pointer	_M_end_of_storage
_M_start	pointer	_M_start
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
_M_current	token_t *	_M_current
_M_end_of_storage	pointer	_M_end_of_storage
_M_storage	__aligned_membuf<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>>	_M_storage
_M_t	_Rb_tree<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>, _Select1st<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>>, less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>>> &	_M_t
_M_t	tuple<expression *, default_delete<expression>>	_M_t
_M_current	unique_ptr<expression, default_delete<expression>> *	_M_current
_M_current	const unique_ptr<expression, default_delete<expression>> *	_M_current
_M_current	token_t *	_M_current
_M_t	tuple<unary_primary *, default_delete<unary_primary>>	_M_t
_M_t	tuple<binary_primary *, default_delete<binary_primary>>	_M_t
_M_t	tuple<parenthetical_expression *, default_delete<parenthetical_expression>>	_M_t
_M_t	tuple<unary_operator *, default_delete<unary_operator>>	_M_t
_M_t	tuple<combining_expression *, default_delete<combining_expression>>	_M_t
_M_storage	unsigned char[40]	_M_storage
_M_head_impl	parenthetical_expression *	_M_head_impl
_M_head_impl	binary_primary *	_M_head_impl
_M_head_impl	unary_primary *	_M_head_impl
_M_head_impl	combining_expression *	_M_head_impl
_M_head_impl	unary_operator *	_M_head_impl
_M_head_impl	expression *	_M_head_impl
_M_t	pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>	_M_t
_M_current	unique_ptr<expression, default_delete<expression>> *	_M_current
(unknown field)	union <unnamed>	(unknown field)
(unknown field)	union <unnamed>	(unknown field)
(unknown field)	union <unnamed>	(unknown field)
(unknown field)	union <unnamed>	(unknown field)
(unknown field)	union <unnamed>	(unknown field)
(unknown field)	union <unnamed>	(unknown field)
(unknown field)	union <unnamed>	(unknown field)
(unknown field)	union <unnamed>	(unknown field)
(unknown field)	union <unnamed>	(unknown field)
(unknown field)	union <unnamed>	(unknown field)
(unknown field)	union <unnamed>	(unknown field)
(unknown field)	union <unnamed>	(unknown field)
(unknown field)	union <unnamed>	(unknown field)
(unknown field)	union <unnamed>	(unknown field)
ru_stime	timeval	ru_stime
ru_utime	timeval	ru_utime
__ru_nivcsw_word	__syscall_slong_t	__ru_nivcsw_word
ru_nivcsw	long	ru_nivcsw
__ru_nvcsw_word	__syscall_slong_t	__ru_nvcsw_word
ru_nvcsw	long	ru_nvcsw
__ru_nsignals_word	__syscall_slong_t	__ru_nsignals_word
ru_nsignals	long	ru_nsignals
__ru_msgrcv_word	__syscall_slong_t	__ru_msgrcv_word
ru_msgrcv	long	ru_msgrcv
__ru_msgsnd_word	__syscall_slong_t	__ru_msgsnd_word
ru_msgsnd	long	ru_msgsnd
__ru_oublock_word	__syscall_slong_t	__ru_oublock_word
ru_oublock	long	ru_oublock
__ru_inblock_word	__syscall_slong_t	__ru_inblock_word
ru_inblock	long	ru_inblock
__ru_nswap_word	__syscall_slong_t	__ru_nswap_word
ru_nswap	long	ru_nswap
__ru_majflt_word	__syscall_slong_t	__ru_majflt_word
ru_majflt	long	ru_majflt
__ru_minflt_word	__syscall_slong_t	__ru_minflt_word
ru_minflt	long	ru_minflt
__ru_isrss_word	__syscall_slong_t	__ru_isrss_word
ru_isrss	long	ru_isrss
__ru_idrss_word	__syscall_slong_t	__ru_idrss_word
ru_idrss	long	ru_idrss
__ru_ixrss_word	__syscall_slong_t	__ru_ixrss_word
ru_ixrss	long	ru_ixrss
__ru_maxrss_word	__syscall_slong_t	__ru_maxrss_word
ru_maxrss	long	ru_maxrss
rlim_max	rlim64_t	rlim_max
rlim_cur	rlim64_t	rlim_cur
rlim_max	rlim_t	rlim_max
rlim_cur	rlim_t	rlim_cur
desc	const wchar_t *	desc
resource	int	resource
switch_char	wchar_t	switch_char
multiplier	int	multiplier
_M_current	unique_ptr<process_t, default_delete<process_t>> *	_M_current
_M_node	_Map_pointer	_M_node
_M_last	_Elt_pointer	_M_last
_M_first	_Elt_pointer	_M_first
_M_cur	_Elt_pointer	_M_cur
_M_value	const int &	_M_value
_M_impl	_Vector_impl	_M_impl
idx	uint8_t	idx
name	const wchar_t *	name
hidden	bool	hidden
rgb	unsigned char[3]	rgb
_M_len	size_type	_M_len
_M_array	iterator	_M_array
_M_current	const named_color_t *	_M_current
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
_M_comp	decltype([...](...){...})	_M_comp
_M_end_of_storage	pointer	_M_end_of_storage
__flags	unsigned int	__flags
__base_count	unsigned int	__base_count
__base_type	const __class_type_info *	__base_type
__context	__class_type_info *	__context
__pointee	const type_info *	__pointee
__flags	unsigned int	__flags
__offset_flags	long	__offset_flags
__base_info	__base_class_type_info[1]	__base_info
__base_type	const __class_type_info *	__base_type
(unknown field)	union <unnamed>	(unknown field)
dls_cnt	unsigned int	dls_cnt
dls_size	size_t	dls_size
__dls_serpath_pad	Dl_serpath[1]	__dls_serpath_pad
dls_serpath	Dl_serpath[0]	dls_serpath
dls_flags	unsigned int	dls_flags
dls_name	char *	dls_name
dli_saddr	void *	dli_saddr
dli_sname	const char *	dli_sname
dli_fbase	void *	dli_fbase
dli_fname	const char *	dli_fname
domainname	char[65]	domainname
machine	char[65]	machine
version	char[65]	version
release	char[65]	release
nodename	char[65]	nodename
sysname	char[65]	sysname
impl_	const shared_ptr<impl_t>	impl_
impl_	const shared_ptr<impl_t>	impl_
timeout_msec_	const long	timeout_msec_
completion	function<..(..)>	completion
handler	function<..(..)>	handler
completion	function<..(..)>	completion
handler	function<..(..)>	handler
value_	atomic<const wchar_t *>	value_
value_	atomic<wchar_t>	value_
value_	atomic<int>	value_
impl_	maybe_impl_t<wchar_t>	impl_
_M_impl	_Vector_impl	_M_impl
_M_start	pointer	_M_start
_M_finish	pointer	_M_finish
filled	bool	filled
_M_end_of_storage	pointer	_M_end_of_storage
__f	lambda [] type at line 150586, col. 20 &	__f
_M_current	unsigned long *	_M_current
_M_pred	..(*)(..)	_M_pred
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
storage	char[4]	storage
_M_current	unsigned long *	_M_current
_M_current	const unsigned long *	_M_current
_M_b	__base_type	_M_b
_M_pred	..(*)(..)	_M_pred
_M_p	__pointer_type	_M_p
_M_impl	_Vector_impl	_M_impl
_M_impl	_Vector_impl	_M_impl
_M_impl	_Vector_impl	_M_impl
pw_shell	char *	pw_shell
pw_dir	char *	pw_dir
pw_gecos	char *	pw_gecos
pw_gid	__gid_t	pw_gid
pw_uid	__uid_t	pw_uid
pw_passwd	char *	pw_passwd
pw_name	char *	pw_name
_M_node	const _List_node_base *	_M_node
_M_node	_List_node_base *	_M_node
_M_impl	_List_impl	_M_impl
_M_node	_Base_ptr	_M_node
_M_node	_Base_ptr	_M_node
(captured this)	completer_t *const	(captured this)
func	function<..(..)> &	func
lock	unique_lock<mutex>	lock
flags	complete_flags_t	flags
result_mode	completion_mode_t	result_mode
cmd_is_path	const bool	cmd_is_path
cmd	const wcstring	cmd
type	complete_option_type_t	type
option	wcstring	option
option	wcstring	option
desc	wcstring	desc
desc	wcstring	desc
comp	wcstring	comp
comp	wcstring	comp
condition	wcstring	condition
condition	wcstring	condition
lock	unique_lock<mutex>	lock
condition_cache	condition_cache_t	condition_cache
_M_h	_Hashtable	_M_h
completions	completion_list_t	completions
completions	completion_list_t	completions
completions	completion_list_t	completions
completions	completion_list_t	completions
cmd	const wcstring	cmd
second	bool	second
options	option_list_t	options
first	_Node_iterator<completion_entry_t, true, false>	first
best_type	fuzzy_match_type_t &	best_type
seen	unordered_set<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> &	seen
s	const wcstring	s
order	const unsigned int	order
(captured this)	completer_t *const	(captured this)
do_file	bool &	do_file
previous_argument_unescape	wcstring &	previous_argument_unescape
current_argument_unescape	wcstring &	current_argument_unescape
had_ddash	bool &	had_ddash
flags	const completion_request_flags_t	flags
ctx	const operation_context_t &	ctx
block	const block_t *&	block
(captured this)	completer_t *const	(captured this)
(captured this)	completer_t *const	(captured this)
second	bool	second
second	basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	second
_M_h	_Hashtable	_M_h
first	const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	first
abbrs	map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>> &	abbrs
cmd	wcstring &	cmd
_M_current	list<complete_entry_opt, allocator<complete_entry_opt>> *	_M_current
_M_len	size_type	_M_len
_M_array	iterator	_M_array
_M_cur	__node_type *	_M_cur
first	const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	first
_M_cur	__node_type *	_M_cur
_M_current	const completion_t *	_M_current
_M_current	const tok_t *	_M_current
_M_current	tok_t *	_M_current
second	bool	second
_M_cur	__node_type *	_M_cur
first	_Rb_tree_const_iterator<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	first
_M_current	reference_wrapper<const completion_entry_t> *	_M_current
value	unordered_set<completion_entry_t, hash<completion_entry_t>, equal_to<completion_entry_t>, allocator<completion_entry_t>> *	value
value	autoload_t *	value
lock	unique_lock<mutex>	lock
_M_cur	__node_type *	_M_cur
value	unordered_map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>> *	value
_M_h	_Hashtable	_M_h
data	unordered_set<completion_entry_t, hash<completion_entry_t>, equal_to<completion_entry_t>, allocator<completion_entry_t>>	data
lock	mutex	lock
_M_h	_Hashtable	_M_h
data	unordered_map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	data
lock	mutex	lock
data	autoload_t	data
lock	mutex	lock
_M_invoker	_Invoker_type	_M_invoker
second	basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	second
first	basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	first
_M_t	_Rep_type	_M_t
_M_t	_Rep_type	_M_t
_M_t	__uniq_ptr_impl<autoload_file_cache_t, default_delete<autoload_file_cache_t>>	_M_t
_M_single_bucket	__bucket_type	_M_single_bucket
_M_rehash_policy	_Prime_rehash_policy	_M_rehash_policy
_M_element_count	size_type	_M_element_count
_M_before_begin	__node_base	_M_before_begin
_M_bucket_count	size_type	_M_bucket_count
_M_buckets	__bucket_type *	_M_buckets
_M_single_bucket	__bucket_type	_M_single_bucket
_M_rehash_policy	_Prime_rehash_policy	_M_rehash_policy
_M_element_count	size_type	_M_element_count
_M_before_begin	__node_base	_M_before_begin
_M_bucket_count	size_type	_M_bucket_count
_M_buckets	__bucket_type *	_M_buckets
_M_single_bucket	__bucket_type	_M_single_bucket
_M_rehash_policy	_Prime_rehash_policy	_M_rehash_policy
_M_element_count	size_type	_M_element_count
_M_before_begin	__node_base	_M_before_begin
_M_bucket_count	size_type	_M_bucket_count
_M_buckets	__bucket_type *	_M_buckets
_M_single_bucket	__bucket_type	_M_single_bucket
_M_rehash_policy	_Prime_rehash_policy	_M_rehash_policy
_M_element_count	size_type	_M_element_count
_M_before_begin	__node_base	_M_before_begin
_M_bucket_count	size_type	_M_bucket_count
_M_buckets	__bucket_type *	_M_buckets
_M_impl	_Rb_tree_impl<less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>	_M_impl
_M_impl	_Rb_tree_impl<less<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, true>	_M_impl
_M_node	_Base_ptr	_M_node
_M_invoker	_Invoker_type	_M_invoker
__stored_locally	const bool	__stored_locally
__stored_locally	const bool	__stored_locally
__stored_locally	const bool	__stored_locally
__stored_locally	const bool	__stored_locally
__stored_locally	const bool	__stored_locally
__stored_locally	const bool	__stored_locally
__stored_locally	const bool	__stored_locally
__stored_locally	const bool	__stored_locally
__stored_locally	const bool	__stored_locally
_M_hash_code	size_t	_M_hash_code
_M_hash_code	size_t	_M_hash_code
_M_hash_code	size_t	_M_hash_code
second	bool	second
first	_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, true>	first
_M_data	const completion_entry_t *	_M_data
_M_node	_List_node_header	_M_node
_M_start	pointer	_M_start
_M_finish	pointer	_M_finish
_M_end_of_storage	pointer	_M_end_of_storage
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
first	_Rb_tree_iterator<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	first
second	bool	second
_M_start	pointer	_M_start
_M_finish	pointer	_M_finish
_M_current	const reference_wrapper<const completion_entry_t> *	_M_current
_M_len	size_type	_M_len
_M_array	iterator	_M_array
_M_comp	..(*)(..)	_M_comp
_M_pred	decltype([...](...){...})	_M_pred
_M_comp	decltype([...](...){...})	_M_comp
_M_comp	decltype([...](...){...})	_M_comp
_M_pred	decltype([...](...){...})	_M_pred
_M_current	__normal_iterator<completion_t *, vector<completion_t, allocator<completion_t>>>	_M_current
_M_storage	__aligned_buffer<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	_M_storage
_M_storage	__aligned_buffer<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>>	_M_storage
_M_storage	__aligned_buffer<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	_M_storage
_M_storage	__aligned_buffer<completion_entry_t>	_M_storage
_M_end_of_storage	pointer	_M_end_of_storage
_M_end_of_storage	pointer	_M_end_of_storage
_M_storage	__aligned_membuf<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	_M_storage
_M_t	_Rb_tree<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Identity<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, less<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, allocator<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>> &	_M_t
_M_storage	__aligned_membuf<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	_M_storage
_M_t	tuple<autoload_file_cache_t *, default_delete<autoload_file_cache_t>>	_M_t
_M_storage	__aligned_membuf<complete_entry_opt>	_M_storage
_M_buffer	pointer	_M_buffer
_M_len	size_type	_M_len
_M_original_len	size_type	_M_original_len
_M_storage	unsigned char[144]	_M_storage
_M_storage	unsigned char[64]	_M_storage
_M_key_compare	less<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	_M_key_compare
_M_storage	unsigned char[64]	_M_storage
_M_storage	type	_M_storage
_M_storage	type	_M_storage
_M_storage	type	_M_storage
_M_storage	type	_M_storage
second	long	second
first	completion_t *	first
_M_current	list<complete_entry_opt, allocator<complete_entry_opt>> *	_M_current
_M_ptr	pointer	_M_ptr
_M_alloc	allocator<_List_node<complete_entry_opt>> *	_M_alloc
_M_head_impl	autoload_file_cache_t *	_M_head_impl
__align	struct <unnamed>	__align
__data	unsigned char[56]	__data
__align	struct <unnamed>	__align
__data	unsigned char[64]	__data
_M_t	pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	_M_t
_M_t	pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	_M_t
_M_t	complete_entry_opt	_M_t
_M_comp	decltype([...](...){...})	_M_comp
_M_comp	decltype([...](...){...})	_M_comp
_M_comp	decltype([...](...){...})	_M_comp
_M_comp	decltype([...](...){...})	_M_comp
_M_comp	..(*)(..)	_M_comp
_M_current	reference_wrapper<const completion_entry_t> *	_M_current
_M_comp	..(*)(..)	_M_comp
__roan	__reuse_or_alloc_node_type &	__roan
__node_gen	const _NodeGenerator &	__node_gen
(captured this)	_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits> *const	(captured this)
_M_impl	_Vector_impl	_M_impl
_M_impl	_Vector_impl	_M_impl
_M_impl	_Vector_impl	_M_impl
explicit_vars_path	wcstring	explicit_vars_path
explicit_vars_path	wcstring	explicit_vars_path
narrow_vars_path	string	narrow_vars_path
modified	unordered_set<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	modified
vars	var_table_t	vars
_M_h	_Hashtable	_M_h
ok_to_save	bool	ok_to_save
val	maybe_t<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	val
key	wcstring	key
key	wcstring	key
last_read_file	file_id_t	last_read_file
lock	mutex	lock
export_generation	uint64_t	export_generation
key	const wcstring &	key
query	const query_t &	query
names	set<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> &	names
second	env_var_t	second
first	const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	first
next	const shared_ptr<env_node_t>	next
new_scope	const bool	new_scope
export_gen	export_generation_t	export_gen
env	var_table_t	env
lock	unique_lock<mutex>	lock
name	const wchar_t *	name
flags	uint32_t	flags
pwd	wcstring	pwd
pwd	wcstring	pwd
statuses	statuses_t	statuses
lock	unique_lock<mutex>	lock
status	int	status
global_modified	bool	global_modified
uvar_modified	bool	uvar_modified
shadowed_locals_	vector<shared_ptr<env_node_t>, allocator<shared_ptr<env_node_t>>>	shadowed_locals_
locals_	env_node_ref_t	locals_
globals_	env_node_ref_t	globals_
exports	maybe_t<bool>	exports
pathvar	maybe_t<bool>	pathvar
parent_exports	bool	parent_exports
has_export_unexport	bool	has_export_unexport
exports	bool	exports
has_pathvar_unpathvar	bool	has_pathvar_unpathvar
pathvar	bool	pathvar
has_scope	bool	has_scope
global	bool	global
user	bool	user
unexports	bool	unexports
local	bool	local
universal	bool	universal
unpathvar	bool	unpathvar
(captured this)	env_scoped_impl_t *const	(captured this)
export_array_generations_	vector<unsigned long, allocator<unsigned long>>	export_array_generations_
mismatch	bool &	mismatch
end	const_iterator &	end
cursor	const_iterator &	cursor
export_array_	shared_ptr<const null_terminated_array_t<char>>	export_array_
perproc_data_	perproc_data_t	perproc_data_
value_	env_universal_t *	value_
_M_len	size_type	_M_len
_M_array	iterator	_M_array
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
second	env_var_t	second
first	basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	first
_M_current	const electric_var_t *	_M_current
value	unsigned long *	value
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
_M_cur	__node_type *	_M_cur
data	unsigned long	data
lock	mutex	lock
impl_	maybe_impl_t<bool>	impl_
value	env_stack_impl_t *	value
value	const env_stack_impl_t *	value
lock	unique_lock<mutex>	lock
_M_t	__uniq_ptr_impl<env_stack_impl_t, default_delete<env_stack_impl_t>>	_M_t
_M_single_bucket	__bucket_type	_M_single_bucket
_M_rehash_policy	_Prime_rehash_policy	_M_rehash_policy
_M_element_count	size_type	_M_element_count
_M_before_begin	__node_base	_M_before_begin
_M_bucket_count	size_type	_M_bucket_count
_M_buckets	__bucket_type *	_M_buckets
_M_hash_code	size_t	_M_hash_code
_M_impl	_Impl	_M_impl
_M_impl	_Impl	_M_impl
_M_impl	_Impl	_M_impl
_M_impl	_Impl	_M_impl
second	bool	second
first	_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, false, true>	first
array	char **	array
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_a	const allocator<null_terminated_array_t<char>> &	_M_a
_M_a	const allocator<env_node_t> &	_M_a
_M_a	const allocator<env_scoped_impl_t> &	_M_a
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
filled	bool	filled
_M_start	pointer	_M_start
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
_M_finish	pointer	_M_finish
_M_len	size_type	_M_len
_M_array	iterator	_M_array
_M_current	__normal_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	_M_current
_M_t	__uniq_ptr_impl<env_universal_t, default_delete<env_universal_t>>	_M_t
_M_comp	decltype([...](...){...})	_M_comp
_M_current	basic_string<char, char_traits<char>, allocator<char>> *	_M_current
_M_ptr	pointer	_M_ptr
_M_alloc	allocator<_Sp_counted_ptr_inplace<const vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _S_atomic>> *	_M_alloc
_M_ptr	pointer	_M_ptr
_M_alloc	allocator<_Sp_counted_ptr_inplace<null_terminated_array_t<char>, allocator<null_terminated_array_t<char>>, _S_atomic>> *	_M_alloc
_M_ptr	pointer	_M_ptr
_M_alloc	allocator<_Sp_counted_ptr_inplace<env_node_t, allocator<env_node_t>, _S_atomic>> *	_M_alloc
_M_ptr	pointer	_M_ptr
_M_alloc	allocator<_Sp_counted_ptr_inplace<env_scoped_impl_t, allocator<env_scoped_impl_t>, _S_atomic>> *	_M_alloc
_M_storage	__aligned_buffer<env_scoped_impl_t>	_M_storage
_M_storage	__aligned_buffer<env_node_t>	_M_storage
_M_storage	__aligned_buffer<null_terminated_array_t<char>>	_M_storage
_M_storage	__aligned_buffer<const vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	_M_storage
_M_storage	__aligned_buffer<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>>	_M_storage
_M_h	__hashtable_alloc &	_M_h
_M_h	__hashtable_alloc &	_M_h
_M_nodes	__node_type *	_M_nodes
_M_end_of_storage	pointer	_M_end_of_storage
_M_end_of_storage	pointer	_M_end_of_storage
_M_end_of_storage	pointer	_M_end_of_storage
_M_current	basic_string<char, char_traits<char>, allocator<char>> *	_M_current
_M_t	tuple<env_stack_impl_t *, default_delete<env_stack_impl_t>>	_M_t
_M_current	const callback_data_t *	_M_current
storage	char[1]	storage
_M_current	shared_ptr<env_node_t> *	_M_current
_M_current	const shared_ptr<env_node_t> *	_M_current
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
_M_ptr	element_type *	_M_ptr
_M_refcount	__weak_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
(captured this)	_Hashtable<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>> *const	(captured this)
_M_storage	type	_M_storage
_M_storage	type	_M_storage
_M_storage	type	_M_storage
_M_storage	type	_M_storage
_M_storage	type	_M_storage
_M_head_impl	basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &&	_M_head_impl
_M_t	tuple<env_universal_t *, default_delete<env_universal_t>>	_M_t
__roan	__reuse_or_alloc_node_type &	__roan
__node_gen	const lambda [] type at line 62826, col. 2 &	__node_gen
_M_head_impl	env_universal_t *	_M_head_impl
_M_head_impl	env_stack_impl_t *	_M_head_impl
__align	struct <unnamed>	__align
__data	unsigned char[144]	__data
__align	struct <unnamed>	__align
__data	unsigned char[8]	__data
_M_current	shared_ptr<env_node_t> *	_M_current
_M_current	event_t *	_M_current
_M_ptr	env_stack_t *	_M_ptr
_M_impl	_Vector_impl	_M_impl
_M_impl	_Vector_impl	_M_impl
_M_impl	_List_impl	_M_impl
esc_cache_	wcstring_list_t	esc_cache_
esc_cache_	wcstring_list_t	esc_cache_
prompt_cache_	list<prompt_cache_entry_t, allocator<prompt_cache_entry_t>>	prompt_cache_
outp_	outputter_t &	outp_
outp_	outputter_t &	outp_
line_datas	vector<line_t, allocator<line_t>>	line_datas
screen_width	int	screen_width
cursor	cursor_t	cursor
x	int	x
y	int	y
trunc_text	wcstring	trunc_text
trunc_text	wcstring	trunc_text
text	wcstring	text
text	wcstring	text
text	vector<highlighted_char_t, allocator<highlighted_char_t>>	text
is_soft_wrapped	bool	is_soft_wrapped
indentation	size_t	indentation
highlight	highlight_spec_t	highlight
character	wchar_t	character
shared	layout_cache_t	shared
prompt_cache_max_size	size_t	prompt_cache_max_size
prev_buff_2	stat	prev_buff_2
prev_buff_1	stat	prev_buff_1
actual_lines_before_reset	size_t	actual_lines_before_reset
need_clear_screen	bool	need_clear_screen
need_clear_lines	bool	need_clear_lines
autosuggestion_is_truncated	bool	autosuggestion_is_truncated
soft_wrap_location	maybe_t<cursor_t>	soft_wrap_location
last_right_prompt_width	size_t	last_right_prompt_width
actual_left_prompt	wcstring	actual_left_prompt
actual_left_prompt	wcstring	actual_left_prompt
actual	screen_data_t	actual
desired	screen_data_t	desired
layout	prompt_layout_t	layout
max_line_width	size_t	max_line_width
last_line_width	size_t	last_line_width
max_line_width	size_t	max_line_width
line_count	size_t	line_count
anon_table_	unordered_map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>>>	anon_table_
_M_h	_Hashtable	_M_h
named_table_	unordered_map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>>>	named_table_
_M_h	_Hashtable	_M_h
second	function<..(..)>	second
second	function<..(..)>	second
value_	const var_dispatch_table_t *	value_
second	bool	second
first	_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>	first
second	bool	second
first	_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>	first
first	const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	first
_M_cur	__node_type *	_M_cur
first	const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	first
_M_cur	__node_type *	_M_cur
_M_t	__uniq_ptr_impl<var_dispatch_table_t, default_delete<var_dispatch_table_t>>	_M_t
_M_invoker	_Invoker_type	_M_invoker
_M_invoker	_Invoker_type	_M_invoker
_M_t	__uniq_ptr_impl<const var_dispatch_table_t, default_delete<const var_dispatch_table_t>>	_M_t
_M_current	highlighted_char_t *	_M_current
_M_current	const highlighted_char_t *	_M_current
_M_current	line_t *	_M_current
_M_current	const line_t *	_M_current
impl_	maybe_impl_t<cursor_t>	impl_
_M_t	_Rep_type	_M_t
_M_impl	_Rb_tree_impl<less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>	_M_impl
_M_single_bucket	__bucket_type	_M_single_bucket
_M_rehash_policy	_Prime_rehash_policy	_M_rehash_policy
_M_element_count	size_type	_M_element_count
_M_before_begin	__node_base	_M_before_begin
_M_bucket_count	size_type	_M_bucket_count
_M_buckets	__bucket_type *	_M_buckets
_M_single_bucket	__bucket_type	_M_single_bucket
_M_rehash_policy	_Prime_rehash_policy	_M_rehash_policy
_M_element_count	size_type	_M_element_count
_M_before_begin	__node_base	_M_before_begin
_M_bucket_count	size_type	_M_bucket_count
_M_buckets	__bucket_type *	_M_buckets
__stored_locally	const bool	__stored_locally
__stored_locally	const bool	__stored_locally
__stored_locally	const bool	__stored_locally
_M_hash_code	size_t	_M_hash_code
_M_hash_code	size_t	_M_hash_code
_M_start	pointer	_M_start
_M_finish	pointer	_M_finish
_M_end_of_storage	pointer	_M_end_of_storage
_M_start	pointer	_M_start
_M_finish	pointer	_M_finish
_M_storage	__aligned_buffer<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>>	_M_storage
_M_storage	__aligned_buffer<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>>	_M_storage
_M_end_of_storage	pointer	_M_end_of_storage
_M_node	_List_node_header	_M_node
_M_storage	__aligned_membuf<prompt_cache_entry_t>	_M_storage
filled	bool	filled
storage	char[8]	storage
_M_t	tuple<const var_dispatch_table_t *, default_delete<const var_dispatch_table_t>>	_M_t
_M_t	tuple<var_dispatch_table_t *, default_delete<var_dispatch_table_t>>	_M_t
_M_storage	unsigned char[96]	_M_storage
_M_storage	type	_M_storage
_M_storage	type	_M_storage
_M_current	line_t *	_M_current
_M_head_impl	var_dispatch_table_t *	_M_head_impl
_M_head_impl	const var_dispatch_table_t *	_M_head_impl
_M_t	prompt_cache_entry_t	_M_t
_M_current	highlighted_char_t *	_M_current
val	int[2]	val
fds_bits	unsigned long[16]	fds_bits
cmsg_len	size_t	cmsg_len
msg_control	void *	msg_control
msg_controllen	size_t	msg_controllen
l_linger	int	l_linger
l_onoff	int	l_onoff
gid	gid_t	gid
gid	gid_t	gid
gid	gid_t	gid
gid	gid_t	gid
uid	uid_t	uid
uid	uid_t	uid
uid	uid_t	uid
uid	uid_t	uid
uid	uid_t	uid
pid	pid_t	pid
pid	pid_t	pid
pid	pid_t	pid
pid	pid_t	pid
pid	pid_t	pid
pid	pid_t	pid
pid	pid_t	pid
pid	pid_t	pid
__cmsg_data	unsigned char[0]	__cmsg_data
cmsg_type	int	cmsg_type
cmsg_level	int	cmsg_level
msg_flags	int	msg_flags
msg_iovlen	size_t	msg_iovlen
msg_iov	iovec *	msg_iov
msg_namelen	socklen_t	msg_namelen
msg_namelen	socklen_t	msg_namelen
msg_name	void *	msg_name
__ss_align	unsigned long	__ss_align
__ss_padding	char[118]	__ss_padding
ss_family	sa_family_t	ss_family
sa_data	char[14]	sa_data
sa_family	sa_family_t	sa_family
sa_data	unsigned char[14]	sa_data
sa_family	unsigned short	sa_family
msg_len	unsigned int	msg_len
msg_hdr	msghdr	msg_hdr
ipi_addr	in_addr	ipi_addr
ipi_spec_dst	in_addr	ipi_spec_dst
ipi_ifindex	int	ipi_ifindex
imr_ifindex	int	imr_ifindex
imr_address	in_addr	imr_address
imr_multiaddr	in_addr	imr_multiaddr
ip_opts	char[40]	ip_opts
ip_dst	in_addr	ip_dst
ip6m_mtu	uint32_t	ip6m_mtu
ip6m_addr	sockaddr_in6	ip6m_addr
ipi6_ifindex	unsigned int	ipi6_ifindex
ipi6_addr	in6_addr	ipi6_addr
gf_slist	sockaddr_storage[1]	gf_slist
gf_numsrc	uint32_t	gf_numsrc
gf_fmode	uint32_t	gf_fmode
gf_group	sockaddr_storage	gf_group
gf_interface	uint32_t	gf_interface
imsf_slist	in_addr[1]	imsf_slist
imsf_numsrc	uint32_t	imsf_numsrc
imsf_fmode	uint32_t	imsf_fmode
imsf_interface	in_addr	imsf_interface
imsf_multiaddr	in_addr	imsf_multiaddr
gsr_source	sockaddr_storage	gsr_source
gsr_group	sockaddr_storage	gsr_group
gsr_interface	uint32_t	gsr_interface
gr_group	sockaddr_storage	gr_group
gr_interface	uint32_t	gr_interface
ipv6mr_interface	unsigned int	ipv6mr_interface
ipv6mr_multiaddr	in6_addr	ipv6mr_multiaddr
imr_sourceaddr	in_addr	imr_sourceaddr
imr_interface	in_addr	imr_interface
imr_multiaddr	in_addr	imr_multiaddr
imr_interface	in_addr	imr_interface
imr_multiaddr	in_addr	imr_multiaddr
sin6_scope_id	uint32_t	sin6_scope_id
sin6_addr	in6_addr	sin6_addr
sin6_flowinfo	uint32_t	sin6_flowinfo
sin6_port	in_port_t	sin6_port
sin6_family	sa_family_t	sin6_family
sin_zero	unsigned char[8]	sin_zero
sin_addr	in_addr	sin_addr
sin_port	in_port_t	sin_port
sin_family	sa_family_t	sin_family
__in6_u	union <unnamed>	__in6_u
__u6_addr32	uint32_t[4]	__u6_addr32
__u6_addr16	uint16_t[8]	__u6_addr16
__u6_addr8	uint8_t[16]	__u6_addr8
s_addr	in_addr_t	s_addr
_M_impl	_Vector_impl	_M_impl
ifc_ifcu	union <unnamed>	ifc_ifcu
ifc_len	int	ifc_len
ifcu_req	ifreq *	ifcu_req
ifcu_buf	__caddr_t	ifcu_buf
ifr_ifru	union <unnamed>	ifr_ifru
ifr_ifrn	union <unnamed>	ifr_ifrn
ifru_data	__caddr_t	ifru_data
ifru_newname	char[16]	ifru_newname
ifru_slave	char[16]	ifru_slave
ifru_map	ifmap	ifru_map
ifru_mtu	int	ifru_mtu
ifru_ivalue	int	ifru_ivalue
ifru_flags	short	ifru_flags
ifru_hwaddr	sockaddr	ifru_hwaddr
ifru_netmask	sockaddr	ifru_netmask
ifru_broadaddr	sockaddr	ifru_broadaddr
ifru_dstaddr	sockaddr	ifru_dstaddr
ifru_addr	sockaddr	ifru_addr
ifrn_name	char[16]	ifrn_name
port	unsigned char	port
dma	unsigned char	dma
irq	unsigned char	irq
base_addr	unsigned short	base_addr
mem_end	unsigned long	mem_end
mem_start	unsigned long	mem_start
ifa_next	ifaddr *	ifa_next
ifa_ifp	iface *	ifa_ifp
ifa_ifu	union <unnamed>	ifa_ifu
ifa_addr	sockaddr	ifa_addr
ifu_dstaddr	sockaddr	ifu_dstaddr
ifu_broadaddr	sockaddr	ifu_broadaddr
if_name	char *	if_name
if_index	unsigned int	if_index
first	reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	first
second	reference_wrapper<const env_var_t>	second
storage	basic_string<char, char_traits<char>, allocator<char>>	storage
readback_time_usec	long long	readback_time_usec
readback_amount	size_t	readback_amount
pipe_fd	int	pipe_fd
polling_due_to_readable_fd	bool	polling_due_to_readable_fd
drain_if_still_readable_time_usec	long long	drain_if_still_readable_time_usec
_M_t	__uniq_ptr_impl<universal_notifier_named_pipe_t, default_delete<universal_notifier_named_pipe_t>>	_M_t
_M_t	__uniq_ptr_impl<universal_notifier_shmem_poller_t, default_delete<universal_notifier_shmem_poller_t>>	_M_t
_M_t	__uniq_ptr_impl<universal_notifier_notifyd_t, default_delete<universal_notifier_notifyd_t>>	_M_t
_M_current	pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>> *	_M_current
current	const_iterator	current
coll	const basic_string<char, char_traits<char>, allocator<char>> &	coll
impl_	maybe_impl_t<unsigned char>	impl_
_M_t	__uniq_ptr_impl<universal_notifier_t, default_delete<universal_notifier_t>>	_M_t
_M_data	const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *	_M_data
_M_data	const env_var_t *	_M_data
_M_start	pointer	_M_start
_M_finish	pointer	_M_finish
_M_comp	decltype([...](...){...})	_M_comp
_M_end_of_storage	pointer	_M_end_of_storage
_M_t	tuple<universal_notifier_t *, default_delete<universal_notifier_t>>	_M_t
filled	bool	filled
storage	char[1]	storage
_M_current	callback_data_t *	_M_current
_M_t	tuple<universal_notifier_notifyd_t *, default_delete<universal_notifier_notifyd_t>>	_M_t
_M_t	tuple<universal_notifier_shmem_poller_t *, default_delete<universal_notifier_shmem_poller_t>>	_M_t
_M_t	tuple<universal_notifier_named_pipe_t *, default_delete<universal_notifier_named_pipe_t>>	_M_t
_M_value	const char &	_M_value
_M_head_impl	universal_notifier_t *	_M_head_impl
_M_head_impl	universal_notifier_notifyd_t *	_M_head_impl
_M_head_impl	universal_notifier_shmem_poller_t *	_M_head_impl
_M_head_impl	universal_notifier_named_pipe_t *	_M_head_impl
_M_current	callback_data_t *	_M_current
_M_comp	decltype([...](...){...})	_M_comp
_M_comp	decltype([...](...){...})	_M_comp
_M_impl	_Vector_impl	_M_impl
type	event_type_t	type
name	const wchar_t *	name
lock	unique_lock<mutex>	lock
name	const wcstring &	name
last_counter_	owning_lock<unsigned int>	last_counter_
counter_	atomic<unsigned int>	counter_
received_	array<atomic<bool>, 65UL>	received_
lock	unique_lock<mutex>	lock
SIGNAL_COUNT	size_t	SIGNAL_COUNT
value	unsigned int *	value
_M_current	shared_ptr<event_t> *	_M_current
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
value	vector<shared_ptr<event_handler_t>, allocator<shared_ptr<event_handler_t>>> *	value
_M_elems	_Type	_M_elems
data	unsigned int	data
lock	mutex	lock
data	vector<shared_ptr<event_handler_t>, allocator<shared_ptr<event_handler_t>>>	data
lock	mutex	lock
restored	bool	restored
saved_value	int	saved_value
ref	int *const	ref
_M_impl	_Impl	_M_impl
_M_a	const allocator<event_t> &	_M_a
_M_current	const shared_ptr<event_handler_t> *	_M_current
_M_start	pointer	_M_start
_M_finish	pointer	_M_finish
_M_end_of_storage	pointer	_M_end_of_storage
_M_comp	decltype([...](...){...})	_M_comp
_M_pred	decltype([...](...){...})	_M_pred
_M_ptr	pointer	_M_ptr
_M_alloc	allocator<_Sp_counted_ptr_inplace<event_t, allocator<event_t>, _S_atomic>> *	_M_alloc
_M_storage	__aligned_buffer<event_t>	_M_storage
_M_current	const shared_ptr<event_t> *	_M_current
_M_w	_WordT[2]	_M_w
_M_refcount	__weak_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
_M_value	const shared_ptr<event_handler_t> &	_M_value
_M_storage	type	_M_storage
_M_current	shared_ptr<event_t> *	_M_current
_M_current	shared_ptr<event_handler_t> *	_M_current
__align	struct <unnamed>	__align
__data	unsigned char[72]	__data
_M_comp	decltype([...](...){...})	_M_comp
_M_comp	decltype([...](...){...})	_M_comp
__pad	int[16]	__pad
__actions	__spawn_action *	__actions
__used	int	__used
__allocated	int	__allocated
__pad	int[16]	__pad
__policy	int	__policy
__sp	sched_param	__sp
__ss	sigset_t	__ss
__sd	sigset_t	__sd
__pgrp	pid_t	__pgrp
__pgrp	pid_t	__pgrp
__pgrp	pid_t	__pgrp
__pgrp	pid_t	__pgrp
__pgrp	pid_t	__pgrp
__pgrp	pid_t	__pgrp
__pgrp	pid_t	__pgrp
__pgrp	pid_t	__pgrp
__flags	short	__flags
c	_Sequence	c
actions_	maybe_t<posix_spawn_file_actions_t>	actions_
attr_	maybe_t<posix_spawnattr_t>	attr_
error_	int	error_
wall	time_point<steady_clock, duration<signed long, ratio<1L, 1000000000L>>>	wall
cpu_children	rusage	cpu_children
cpu_fish	rusage	cpu_fish
internal_proc	shared_ptr<internal_proc_t>	internal_proc
dup2s	maybe_t<dup2_list_t>	dup2s
ios	io_chain_t	ios
errdata	string	errdata
outdata	string	outdata
src_outfd	int	src_outfd
src_errfd	int	src_errfd
success_status	proc_status_t	success_status
apply_exit_status	bool &	apply_exit_status
parser	parser_t &	parser
prev_statuses	statuses_t &	prev_statuses
block	const block_t *&	block
parser	parser_t &	parser
job_group	job_group_ref_t	job_group
io_chain	const io_chain_t	io_chain
source	const parsed_source_ref_t	source
node	const statement_t *	node
job_group	job_group_ref_t	job_group
io_chain	const io_chain_t	io_chain
argv	shared_ptr<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	argv
props	function_properties_ref_t	props
p	process_t *&	p
actual_cmd	const char *&	actual_cmd
argv	const char *const *&	argv
envv	const char *const *&	envv
f	shared_ptr<write_fields_t>	f
_M_current	const action_t *	_M_current
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
_M_current	concrete_assignment *	_M_current
_M_len	size_type	_M_len
_M_array	iterator	_M_array
current	__normal_iterator<unique_ptr<process_t, default_delete<process_t>> *, vector<unique_ptr<process_t, default_delete<process_t>>, allocator<unique_ptr<process_t, default_delete<process_t>>>>>	current
_M_current	const redirection_spec_t *	_M_current
impl_	maybe_impl_t<dup2_list_t>	impl_
_M_invoker	_Invoker_type	_M_invoker
restored	bool	restored
saved_value	unsigned long	saved_value
ref	unsigned long *const	ref
impl_	maybe_impl_t<posix_spawnattr_t>	impl_
impl_	maybe_impl_t<posix_spawn_file_actions_t>	impl_
impl_	maybe_impl_t<autoclose_pipes_t>	impl_
__stored_locally	const bool	__stored_locally
__stored_locally	const bool	__stored_locally
__stored_locally	const bool	__stored_locally
__stored_locally	const bool	__stored_locally
__stored_locally	const bool	__stored_locally
__stored_locally	const bool	__stored_locally
_M_impl	_Impl	_M_impl
_M_impl	_Impl	_M_impl
_M_impl	_Impl	_M_impl
_M_impl	_Impl	_M_impl
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_a	const allocator<write_fields_t> &	_M_a
_M_a	const allocator<internal_proc_t> &	_M_a
_M_a	const allocator<io_pipe_t> &	_M_a
_M_a	const allocator<io_close_t> &	_M_a
filled	bool	filled
_M_ptr	pointer	_M_ptr
_M_alloc	allocator<_Sp_counted_ptr_inplace<write_fields_t, allocator<write_fields_t>, _S_atomic>> *	_M_alloc
_M_ptr	pointer	_M_ptr
_M_alloc	allocator<_Sp_counted_ptr_inplace<internal_proc_t, allocator<internal_proc_t>, _S_atomic>> *	_M_alloc
_M_ptr	pointer	_M_ptr
_M_alloc	allocator<_Sp_counted_ptr_inplace<io_pipe_t, allocator<io_pipe_t>, _S_atomic>> *	_M_alloc
_M_ptr	pointer	_M_ptr
_M_alloc	allocator<_Sp_counted_ptr_inplace<io_close_t, allocator<io_close_t>, _S_atomic>> *	_M_alloc
_M_storage	__aligned_buffer<io_close_t>	_M_storage
_M_storage	__aligned_buffer<io_pipe_t>	_M_storage
_M_storage	__aligned_buffer<internal_proc_t>	_M_storage
_M_storage	__aligned_buffer<write_fields_t>	_M_storage
storage	char[8]	storage
_M_current	shared_ptr<const io_data_t> *	_M_current
_M_current	const concrete_assignment *	_M_current
filled	bool	filled
storage	char[80]	storage
filled	bool	filled
storage	char[336]	storage
filled	bool	filled
storage	char[24]	storage
_M_ptr	element_type *	_M_ptr
_M_refcount	__weak_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
_M_storage	type	_M_storage
_M_storage	type	_M_storage
_M_storage	type	_M_storage
_M_storage	type	_M_storage
__align	struct <unnamed>	__align
__data	unsigned char[160]	__data
ctx	const operation_context_t &	ctx
flags	const expand_flags_t	flags
errors	parse_error_list_t *const	errors
second	basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	second
_M_h	_Hashtable	_M_h
first	const long	first
_M_cur	__node_type *	_M_cur
container	vector<completion_t, allocator<completion_t>> *	container
_M_single_bucket	__bucket_type	_M_single_bucket
_M_rehash_policy	_Prime_rehash_policy	_M_rehash_policy
_M_element_count	size_type	_M_element_count
_M_before_begin	__node_base	_M_before_begin
_M_bucket_count	size_type	_M_bucket_count
_M_buckets	__bucket_type *	_M_buckets
_M_node	_Base_ptr	_M_node
_M_len	size_type	_M_len
_M_array	iterator	_M_array
_M_comp	decltype([...](...){...})	_M_comp
_M_storage	__aligned_buffer<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	_M_storage
_M_storage	type	_M_storage
_M_current	parse_error_t *	_M_current
_M_comp	decltype([...](...){...})	_M_comp
_M_comp	decltype([...](...){...})	_M_comp
hi	uint32_t	hi
lo	uint32_t	lo
_M_comp	decltype([...](...){...})	_M_comp
_M_comp	decltype([...](...){...})	_M_comp
_M_comp	decltype([...](...){...})	_M_comp
_M_comp	decltype([...](...){...})	_M_comp
_M_comp	decltype([...](...){...})	_M_comp
_M_comp	decltype([...](...){...})	_M_comp
_M_comp	decltype([...](...){...})	_M_comp
_M_comp	decltype([...](...){...})	_M_comp
_M_impl	_Vector_impl	_M_impl
fd	autoclose_fd_t	fd
callback	callback_t	callback
timeout_usec	uint64_t	timeout_usec
last_time	maybe_t<time_point<steady_clock, duration<signed long, ratio<1L, 1000000000L>>>>	last_time
kNoTimeout	uint64_t	kNoTimeout
pending	item_list_t	pending
running	bool	running
notify_write_fd_	autoclose_fd_t	notify_write_fd_
data_	owning_lock<data_t>	data_
terminate_	bool	terminate_
has_pending_	bool	has_pending_
items_	item_list_t	items_
(captured this)	fd_monitor_t *const	(captured this)
lock	unique_lock<mutex>	lock
fds	fd_set &	fds
now	time_point &	now
data	data_t	data
_M_current	__normal_iterator<fd_monitor_item_t *, vector<fd_monitor_item_t, allocator<fd_monitor_item_t>>>	_M_current
_M_current	fd_monitor_item_t *	_M_current
value	data_t *	value
__stored_locally	const bool	__stored_locally
den	const intmax_t	den
num	const intmax_t	num
den	const intmax_t	den
num	const intmax_t	num
den	const intmax_t	den
num	const intmax_t	num
lock	mutex	lock
_M_invoker	_Invoker_type	_M_invoker
_M_start	pointer	_M_start
_M_current	const fd_monitor_item_t *	_M_current
_M_finish	pointer	_M_finish
impl_	maybe_impl_t<time_point<steady_clock, duration<signed long, ratio<1L, 1000000000L>>>>	impl_
filled	bool	filled
_M_pred	decltype([...](...){...})	_M_pred
den	const intmax_t	den
num	const intmax_t	num
__gcd2	const intmax_t	__gcd2
__gcd1	const intmax_t	__gcd1
den	const intmax_t	den
num	const intmax_t	num
__gcd2	const intmax_t	__gcd2
__gcd1	const intmax_t	__gcd1
storage	char[8]	storage
_M_end_of_storage	pointer	_M_end_of_storage
den	const intmax_t	den
__r	rep	__r
_M_current	fd_monitor_item_t *	_M_current
val	int	val
flag	int *	flag
has_arg	int	has_arg
name	const char *	name
features	wcstring	features
features	wcstring	features
debug_output	string	debug_output
batch_cmds	vector<basic_string<char, char_traits<char>, allocator<char>>, allocator<basic_string<char, char_traits<char>, allocator<char>>>>	batch_cmds
postconfig_cmds	vector<basic_string<char, char_traits<char>, allocator<char>>, allocator<basic_string<char, char_traits<char>, allocator<char>>>>	postconfig_cmds
print_rusage_self	bool	print_rusage_self
no_exec	bool	no_exec
is_login	bool	is_login
is_interactive_session	bool	is_interactive_session
enable_private_mode	bool	enable_private_mode
_M_current	const basic_string<char, char_traits<char>, allocator<char>> *	_M_current
_M_impl	_Vector_impl	_M_impl
role	highlight_role_t	role
end	unsigned long	end
start	unsigned long	start
result	vector<unsigned int, allocator<unsigned int>> &	result
preferred_semi_locations	const vector<unsigned int, allocator<unsigned int>>	preferred_semi_locations
gaps	const vector<source_range_t, allocator<source_range_t>>	gaps
output	wcstring	output
output	wcstring	output
ast	const ast_t	ast
indents	const vector<int, allocator<int>>	indents
source	const wcstring &	source
current_indent	int	current_indent
gap_text_mask_newline	bool	gap_text_mask_newline
do_indent	const bool	do_indent
reverse_	const bool	reverse_
v_	pretty_printer_t &	v_
_M_current	token_range_t *	_M_current
_M_current	const source_range_t *	_M_current
_M_start	pointer	_M_start
_M_finish	pointer	_M_finish
_M_current	token_range_t *	_M_current
_M_pred	decltype([...](...){...})	_M_pred
_M_pred	decltype([...](...){...})	_M_pred
_M_comp	decltype([...](...){...})	_M_comp
_M_comp	decltype([...](...){...})	_M_comp
_M_end_of_storage	pointer	_M_end_of_storage
_M_current	const token_range_t *	_M_current
_M_comp	decltype([...](...){...})	_M_comp
_M_comp	decltype([...](...){...})	_M_comp
_M_pred	decltype([...](...){...})	_M_pred
arg	const char *	arg
func	..(*)(..)	func
desc	const char *	desc
_M_comp	decltype([...](...){...})	_M_comp
_M_comp	decltype([...](...){...})	_M_comp
_M_comp	decltype([...](...){...})	_M_comp
_M_impl	_Vector_impl	_M_impl
_M_impl	_Vector_impl	_M_impl
_M_current	category_t **	_M_current
_M_current	const category_t **	_M_current
_M_t	__uniq_ptr_impl<char, default_delete<char[]>>	_M_t
_M_start	pointer	_M_start
_M_finish	pointer	_M_finish
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
_M_current	category_t **	_M_current
_M_comp	decltype([...](...){...})	_M_comp
_M_end_of_storage	pointer	_M_end_of_storage
_M_end_of_storage	pointer	_M_end_of_storage
_M_t	tuple<char *, default_delete<char[]>>	_M_t
_M_head_impl	char *	_M_head_impl
_M_comp	decltype([...](...){...})	_M_comp
_M_comp	decltype([...](...){...})	_M_comp
funcs	unordered_map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>>>	funcs
second	function_info_t	second
is_autoload	const bool	is_autoload
first	const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	first
autoloader	autoload_t	autoloader
lock	unique_lock<mutex>	lock
props	function_properties_ref_t	props
definition_file	const wchar_t *const	definition_file
description	wcstring	description
description	wcstring	description
autoload_tombstones	unordered_set<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	autoload_tombstones
second	bool	second
_M_h	_Hashtable	_M_h
first	_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, false, true>	first
_M_cur	__node_type *	_M_cur
value	function_set_t *	value
data	function_set_t	data
lock	mutex	lock
_M_single_bucket	__bucket_type	_M_single_bucket
_M_rehash_policy	_Prime_rehash_policy	_M_rehash_policy
_M_element_count	size_type	_M_element_count
_M_before_begin	__node_base	_M_before_begin
_M_bucket_count	size_type	_M_bucket_count
_M_buckets	__bucket_type *	_M_buckets
_M_hash_code	size_t	_M_hash_code
_M_storage	__aligned_buffer<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>>	_M_storage
_M_storage	type	_M_storage
__align	struct <unnamed>	__align
__data	unsigned char[96]	__data
color_array	color_array_t	color_array
ast	ast_t	ast
working_directory	const wcstring	working_directory
dir	DIR *&	dir
io_ok	const bool	io_ok
buff	const wcstring &	buff
ctx	const operation_context_t &	ctx
cursor_pos	const size_t	cursor_pos
ast_flags	parse_tree_flags_t	ast_flags
_M_current	const highlight_spec_t *	_M_current
reverse_	const bool	reverse_
v_	highlighter_t &	v_
_M_current	highlight_spec_t *	_M_current
impl_	maybe_impl_t<highlight_role_t>	impl_
__stored_locally	const bool	__stored_locally
filled	bool	filled
storage	char[1]	storage
_M_current	highlight_spec_t *	_M_current
_M_node	_Base_ptr	_M_node
_M_node	_Base_ptr	_M_node
_M_impl	_Deque_impl	_M_impl
_M_impl	_Deque_impl	_M_impl
length_	const size_t	length_
start_	const char *	start_
type_	const history_file_type_t	type_
right_len	size_t &	right_len
right	lru_link_t *&	right
left_len	size_t &	left_len
left	lru_link_t *&	left
what	const char *	what
start	double	start
second	unique_ptr<history_t, default_delete<history_t>>	second
lock	unique_lock<mutex>	lock
node_map	map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t, less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>>	node_map
remaining	size_t &	remaining
show_time_format	const wchar_t *&	show_time_format
null_terminate	bool &	null_terminate
formatted_record	wcstring &	formatted_record
reverse	bool &	reverse
collected	wcstring_list_t &	collected
streams	io_streams_t &	streams
potential_paths	path_list_t	potential_paths
working_dir_slash	const wcstring	working_dir_slash
(captured this)	history_t *const	(captured this)
identifier	history_identifier_t	identifier
lock	unique_lock<mutex>	lock
impl	owning_lock<history_impl_t>	impl
data	history_impl_t	data
new_items	history_item_list_t	new_items
has_pending_item	bool	has_pending_item
old_item_offsets	deque<unsigned long, allocator<unsigned long>>	old_item_offsets
file_contents	unique_ptr<history_file_contents_t, default_delete<history_file_contents_t>>	file_contents
second	bool	second
first	_Node_iterator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, false>	first
boundary_timestamp	time_t	boundary_timestamp
first_unwritten_new_item_index	size_t	first_unwritten_new_item_index
name	const wcstring	name
deleted_items	unordered_set<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	deleted_items
disable_automatic_save_counter	uint32_t	disable_automatic_save_counter
loaded_old	bool	loaded_old
history_file_id	file_id_t	history_file_id
countdown_to_vacuum	int	countdown_to_vacuum
second	const history_item_t &	second
first	const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &	first
node	const lru_link_t *	node
_M_node	_Map_pointer	_M_node
_M_last	_Elt_pointer	_M_last
_M_first	_Elt_pointer	_M_first
_M_cur	_Elt_pointer	_M_cur
current	_Deque_iterator<unsigned long, const unsigned long &, const unsigned long *>	current
current	_Deque_iterator<history_item_t, const history_item_t &, const history_item_t *>	current
current	_Deque_iterator<history_item_t, history_item_t &, history_item_t *>	current
current	__normal_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	current
_M_t	_Rep_type	_M_t
first	const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	first
value	map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>, less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>>> *	value
mouth	lru_link_t	mouth
max_node_count	const size_t	max_node_count
lock	mutex	lock
value_	atomic<unsigned long>	value_
_M_invoker	_Invoker_type	_M_invoker
_M_t	_Rep_type	_M_t
data	map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>, less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>>>	data
lock	mutex	lock
_M_t	__uniq_ptr_impl<history_t, default_delete<history_t>>	_M_t
_M_t	__uniq_ptr_impl<history_file_contents_t, default_delete<history_file_contents_t>>	_M_t
_M_t	__uniq_ptr_impl<impl_wrapper_t, default_delete<impl_wrapper_t>>	_M_t
value	history_impl_t *	value
value	const history_impl_t *	value
lock	unique_lock<mutex>	lock
_M_impl	_Rb_tree_impl<less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>	_M_impl
_M_impl	_Rb_tree_impl<less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>	_M_impl
_M_node	_Base_ptr	_M_node
_M_node	_Base_ptr	_M_node
__stored_locally	const bool	__stored_locally
__stored_locally	const bool	__stored_locally
_M_param	param_type	_M_param
_M_b	unsigned int	_M_b
_M_a	unsigned int	_M_a
_M_node	_Map_pointer	_M_node
_M_last	_Elt_pointer	_M_last
_M_first	_Elt_pointer	_M_first
_M_cur	_Elt_pointer	_M_cur
_M_node	_Map_pointer	_M_node
_M_last	_Elt_pointer	_M_last
_M_first	_Elt_pointer	_M_first
_M_cur	_Elt_pointer	_M_cur
_M_finish	iterator	_M_finish
_M_finish	iterator	_M_finish
_M_start	iterator	_M_start
prev	lru_link_t *	prev
key	const wcstring *	key
value	history_item_t	value
next	lru_link_t *	next
_M_start	iterator	_M_start
second	lru_node_t	second
_M_map_size	size_t	_M_map_size
_M_map	_Map_pointer	_M_map
_M_map_size	size_t	_M_map_size
_M_map	_Map_pointer	_M_map
_M_storage	__aligned_membuf<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>>	_M_storage
_M_storage	__aligned_membuf<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>	_M_storage
_M_current	const parse_error_t *	_M_current
_M_t	tuple<impl_wrapper_t *, default_delete<impl_wrapper_t>>	_M_t
_M_t	tuple<history_file_contents_t *, default_delete<history_file_contents_t>>	_M_t
_M_t	tuple<history_t *, default_delete<history_t>>	_M_t
first	const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	first
second	bool	second
first	_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>	first
_M_node	_Map_pointer	_M_node
_M_last	_Elt_pointer	_M_last
_M_first	_Elt_pointer	_M_first
_M_cur	_Elt_pointer	_M_cur
_M_storage	unsigned char[128]	_M_storage
_M_storage	unsigned char[40]	_M_storage
left	lru_link_t *&	left
left_len	size_t &	left_len
right	lru_link_t *&	right
right_len	size_t &	right_len
_M_head_impl	history_t *	_M_head_impl
_M_head_impl	history_file_contents_t *	_M_head_impl
_M_head_impl	impl_wrapper_t *	_M_head_impl
_M_t	pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>	_M_t
_M_t	pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>	_M_t
buffer	string *	buffer
impl_	maybe_impl_t<history_file_type_t>	impl_
filled	bool	filled
storage	char[4]	storage
_M_impl	_Vector_impl	_M_impl
_M_impl	_Vector_impl	_M_impl
_M_impl	_Vector_impl	_M_impl
name	const wchar_t *	name
code	readline_cmd_t	code
seq	maybe_t<basic_string<char, char_traits<char>, allocator<char>>>	seq
name	const wchar_t *	name
specification_order	unsigned int	specification_order
seq	wcstring	seq
seq	wcstring	seq
data	input_mapping_set_t	data
mode	wcstring	mode
mode	wcstring	mode
commands	wcstring_list_t	commands
commands	wcstring_list_t	commands
sets_mode	wcstring	sets_mode
sets_mode	wcstring	sets_mode
mode	const wchar_t *	mode
value_	vector<terminfo_mapping_t, allocator<terminfo_mapping_t>> *	value_
current	__normal_iterator<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	current
_M_current	const input_mapping_t *	_M_current
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
current	__normal_iterator<char_event_t *, vector<char_event_t, allocator<char_event_t>>>	current
_M_current	input_mapping_t *	_M_current
_M_len	size_type	_M_len
_M_array	iterator	_M_array
_M_current	terminfo_mapping_t *	_M_current
_M_current	const terminfo_mapping_t *	_M_current
impl_	maybe_impl_t<basic_string<char, char_traits<char>, allocator<char>>>	impl_
lock	mutex	lock
impl_	maybe_impl_t<input_mapping_t>	impl_
impl_	maybe_impl_t<char_event_t>	impl_
_M_impl	_Impl	_M_impl
_M_a	const allocator<vector<input_mapping_t, allocator<input_mapping_t>>> &	_M_a
filled	bool	filled
storage	char[32]	storage
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
filled	bool	filled
_M_end_of_storage	pointer	_M_end_of_storage
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
_M_t	__uniq_ptr_impl<vector<terminfo_mapping_t, allocator<terminfo_mapping_t>>, default_delete<vector<terminfo_mapping_t, allocator<terminfo_mapping_t>>>>	_M_t
_M_comp	..(*)(..)	_M_comp
_M_comp	..(*)(..)	_M_comp
_M_current	input_mapping_name_t *	_M_current
_M_pred	decltype([...](...){...})	_M_pred
_M_ptr	pointer	_M_ptr
_M_alloc	allocator<_Sp_counted_ptr_inplace<const vector<input_mapping_t, allocator<input_mapping_t>>, allocator<vector<input_mapping_t, allocator<input_mapping_t>>>, _S_atomic>> *	_M_alloc
_M_storage	__aligned_buffer<const vector<input_mapping_t, allocator<input_mapping_t>>>	_M_storage
_M_end_of_storage	pointer	_M_end_of_storage
_M_end_of_storage	pointer	_M_end_of_storage
filled	bool	filled
storage	char[40]	storage
_M_current	input_mapping_name_t *	_M_current
storage	char[128]	storage
_M_current	char_event_t *	_M_current
_M_refcount	__weak_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
_M_storage	type	_M_storage
_M_t	tuple<vector<terminfo_mapping_t, allocator<terminfo_mapping_t>> *, default_delete<vector<terminfo_mapping_t, allocator<terminfo_mapping_t>>>>	_M_t
_M_current	char_event_t *	_M_current
_M_head_impl	vector<terminfo_mapping_t, allocator<terminfo_mapping_t>> *	_M_head_impl
_M_comp	..(*)(..)	_M_comp
_M_current	input_mapping_t *	_M_current
_M_impl	_Vector_impl	_M_impl
lock	unique_lock<mutex>	lock
_M_current	const wchar_t **	_M_current
value	vector<const wchar_t *, allocator<const wchar_t *>> *	value
data	vector<const wchar_t *, allocator<const wchar_t *>>	data
lock	mutex	lock
_M_start	pointer	_M_start
_M_finish	pointer	_M_finish
_M_current	const wchar_t *const *	_M_current
_M_end_of_storage	pointer	_M_end_of_storage
_M_current	const wchar_t **	_M_current
_M_comp	..(*)(..)	_M_comp
__buf	type	__buf
_M_this	vector<const wchar_t *, allocator<const wchar_t *>> *	_M_this
(captured this)	io_buffer_t *const	(captured this)
promise	shared_ptr<promise<void>>	promise
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
current	__normal_iterator<const shared_ptr<const io_data_t> *, vector<shared_ptr<const io_data_t>, allocator<shared_ptr<const io_data_t>>>>	current
_M_t	__uniq_ptr_impl<io_fd_t, default_delete<io_fd_t>>	_M_t
_M_t	__uniq_ptr_impl<io_close_t, default_delete<io_close_t>>	_M_t
__stored_locally	const bool	__stored_locally
_M_impl	_Impl	_M_impl
_M_impl	_Impl	_M_impl
_M_impl	_Impl	_M_impl
_M_impl	_Impl	_M_impl
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_a	const allocator<promise<void>> &	_M_a
_M_a	const allocator<io_buffer_t> &	_M_a
_M_a	const allocator<io_bufferfill_t> &	_M_a
_M_a	const allocator<io_file_t> &	_M_a
_M_ptr	pointer	_M_ptr
_M_alloc	allocator<_Sp_counted_ptr_inplace<promise<void>, allocator<promise<void>>, _S_atomic>> *	_M_alloc
_M_ptr	pointer	_M_ptr
_M_alloc	allocator<_Sp_counted_ptr_inplace<io_buffer_t, allocator<io_buffer_t>, _S_atomic>> *	_M_alloc
_M_ptr	pointer	_M_ptr
_M_alloc	allocator<_Sp_counted_ptr_inplace<io_bufferfill_t, allocator<io_bufferfill_t>, _S_atomic>> *	_M_alloc
_M_ptr	pointer	_M_ptr
_M_alloc	allocator<_Sp_counted_ptr_inplace<io_file_t, allocator<io_file_t>, _S_atomic>> *	_M_alloc
_M_storage	__aligned_buffer<io_file_t>	_M_storage
_M_storage	__aligned_buffer<io_bufferfill_t>	_M_storage
_M_storage	__aligned_buffer<io_buffer_t>	_M_storage
_M_storage	__aligned_buffer<promise<void>>	_M_storage
_M_impl	_Impl	_M_impl
_M_impl	_Impl	_M_impl
_M_t	tuple<io_close_t *, default_delete<io_close_t>>	_M_t
_M_t	tuple<io_fd_t *, default_delete<io_fd_t>>	_M_t
_M_refcount	__weak_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
_M_refcount	__weak_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
_M_ptr	element_type *	_M_ptr
_M_ptr	io_fd_t *	_M_ptr
_M_ptr	io_close_t *	_M_ptr
_M_ptr	pointer	_M_ptr
_M_alloc	allocator<_Sp_counted_deleter<io_close_t *, default_delete<io_close_t>, allocator<void>, _S_atomic>> *	_M_alloc
_M_ptr	pointer	_M_ptr
_M_alloc	allocator<_Sp_counted_deleter<io_fd_t *, default_delete<io_fd_t>, allocator<void>, _S_atomic>> *	_M_alloc
_M_storage	type	_M_storage
_M_storage	type	_M_storage
_M_storage	type	_M_storage
_M_storage	type	_M_storage
_M_head_impl	io_fd_t *	_M_head_impl
_M_head_impl	io_close_t *	_M_head_impl
__align	struct <unnamed>	__align
__data	unsigned char[112]	__data
_M_current	shared_ptr<const io_data_t> *	_M_current
_M_impl	_Deque_impl	_M_impl
_M_impl	_Deque_impl	_M_impl
_M_impl	_Deque_impl	_M_impl
read	int	read
write	int	write
done	relaxed_atomic_bool_t	done
func	void_function_t	func
c	deque<function<..(..)>, allocator<function<..(..)>>>	c
c	deque<main_thread_request_t *, allocator<main_thread_request_t *>>	c
req_data	owning_lock<data_t>	req_data
drain	bool	drain
total_threads	size_t	total_threads
queue_cond	condition_variable	queue_cond
lock	unique_lock<mutex>	lock
data	data_t	data
request_queue	queue<work_request_t, deque<work_request_t, allocator<work_request_t>>>	request_queue
c	deque<work_request_t, allocator<work_request_t>>	c
soft_min_threads	const size_t	soft_min_threads
waiting_threads	size_t	waiting_threads
handler	void_function_t	handler
completion	void_function_t	completion
max_threads	const size_t	max_threads
data	owning_lock<data_t>	data
next_req	maybe_t<work_request_t>	next_req
active_token	uint64_t	active_token
start_time	time_point<steady_clock, duration<signed long, ratio<1L, 1000000000L>>>	start_time
next_token	uint64_t	next_token
impl	shared_ptr<impl_t>	impl
active_token	uint64_t	active_token
lock	unique_lock<mutex>	lock
data	data_t	data
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
value	data_t *	value
value	data_t *	value
value	queue<function<..(..)>, deque<function<..(..)>, allocator<function<..(..)>>>> *	value
lock	unique_lock<mutex>	lock
value	queue<main_thread_request_t *, deque<main_thread_request_t *, allocator<main_thread_request_t *>>> *	value
lock	unique_lock<mutex>	lock
lock	mutex	lock
data	queue<function<..(..)>, deque<function<..(..)>, allocator<function<..(..)>>>>	data
lock	mutex	lock
data	queue<main_thread_request_t *, deque<main_thread_request_t *, allocator<main_thread_request_t *>>>	data
lock	mutex	lock
lock	mutex	lock
impl_	maybe_impl_t<work_request_t>	impl_
den	const intmax_t	den
num	const intmax_t	num
den	const intmax_t	den
num	const intmax_t	num
num	const intmax_t	num
value	const long	value
den	const intmax_t	den
num	const intmax_t	num
__stored_locally	const bool	__stored_locally
_M_impl	_Impl	_M_impl
_M_node	_Map_pointer	_M_node
_M_last	_Elt_pointer	_M_last
_M_first	_Elt_pointer	_M_first
_M_cur	_Elt_pointer	_M_cur
_M_node	_Map_pointer	_M_node
_M_last	_Elt_pointer	_M_last
_M_first	_Elt_pointer	_M_first
_M_cur	_Elt_pointer	_M_cur
_M_a	const allocator<impl_t> &	_M_a
filled	bool	filled
_M_map_size	size_t	_M_map_size
_M_map	_Map_pointer	_M_map
_M_start	iterator	_M_start
_M_finish	iterator	_M_finish
_M_map_size	size_t	_M_map_size
_M_map	_Map_pointer	_M_map
_M_start	iterator	_M_start
_M_finish	iterator	_M_finish
_M_map_size	size_t	_M_map_size
_M_map	_Map_pointer	_M_map
_M_start	iterator	_M_start
_M_finish	iterator	_M_finish
_M_cur	_Elt_pointer	_M_cur
_M_first	_Elt_pointer	_M_first
_M_ptr	pointer	_M_ptr
_M_alloc	allocator<_Sp_counted_ptr_inplace<impl_t, allocator<impl_t>, _S_atomic>> *	_M_alloc
_M_storage	__aligned_buffer<impl_t>	_M_storage
den	const intmax_t	den
num	const intmax_t	num
__gcd2	const intmax_t	__gcd2
__gcd1	const intmax_t	__gcd1
den	const intmax_t	den
num	const intmax_t	num
__gcd2	const intmax_t	__gcd2
__gcd1	const intmax_t	__gcd1
storage	char[64]	storage
_M_node	_Map_pointer	_M_node
_M_last	_Elt_pointer	_M_last
_M_storage	type	_M_storage
__align	struct <unnamed>	__align
__data	unsigned char[136]	__data
_M_node	const _List_node_base *	_M_node
_M_node	_List_node_base *	_M_node
_M_impl	_List_impl	_M_impl
_M_node	_List_node_header	_M_node
_M_storage	__aligned_membuf<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	_M_storage
_M_ptr	pointer	_M_ptr
_M_alloc	allocator<_List_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> *	_M_alloc
restored	bool	restored
saved_value	outputter_t *	saved_value
ref	outputter_t **const	ref
_M_impl	_Vector_impl	_M_impl
term_width	size_t	term_width
term_height	size_t	term_height
rows	size_t	rows
cols	size_t	cols
row_start	size_t	row_start
row_end	size_t	row_end
selected_completion_idx	size_t	selected_completion_idx
screen_data	screen_data_t	screen_data
remaining_to_disclose	size_t	remaining_to_disclose
search_field_shown	bool	search_field_shown
search_field_line	editable_line_t	search_field_line
comp	wcstring_list_t	comp
comp	wcstring_list_t	comp
desc	wcstring	desc
desc	wcstring	desc
representative	completion_t	representative
comp_width	size_t	comp_width
desc_width	size_t	desc_width
search_field_line	editable_line_t	search_field_line
prefix	wcstring	prefix
prefix	wcstring	prefix
unfiltered_completion_infos	comp_info_list_t	unfiltered_completion_infos
completion_infos	comp_info_list_t	completion_infos
search_field_shown	bool	search_field_shown
fully_disclosed	bool	fully_disclosed
suggested_row_start	size_t	suggested_row_start
selected_completion_idx	size_t	selected_completion_idx
available_term_height	size_t	available_term_height
available_term_width	size_t	available_term_width
selected	bool	selected
secondary	bool	secondary
_M_h	_Hashtable	_M_h
_M_current	comp_t *	_M_current
_M_single_bucket	__bucket_type	_M_single_bucket
_M_rehash_policy	_Prime_rehash_policy	_M_rehash_policy
_M_element_count	size_type	_M_element_count
_M_before_begin	__node_base	_M_before_begin
_M_bucket_count	size_type	_M_bucket_count
_M_buckets	__bucket_type *	_M_buckets
_M_hash_code	size_t	_M_hash_code
_M_finish	pointer	_M_finish
_M_end_of_storage	pointer	_M_end_of_storage
_M_start	pointer	_M_start
_M_current	const comp_t *	_M_current
first	const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	first
_M_storage	__aligned_buffer<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>>	_M_storage
_M_current	edit_t *	_M_current
_M_current	const edit_t *	_M_current
second	unsigned long	second
_M_cur	__node_type *	_M_cur
_M_storage	type	_M_storage
_M_current	comp_t *	_M_current
_M_impl	_Vector_impl	_M_impl
(captured this)	const parse_execution_context_t *const	(captured this)
forbidden_function_name	const wcstring &	forbidden_function_name
block	const block_t *&	block
(captured this)	parse_execution_context_t *const	(captured this)
block	const block_t *&	block
(captured this)	parse_execution_context_t *const	(captured this)
_M_current	const argument_t **	_M_current
_M_current	const argument_t *const *	_M_current
restored	bool	restored
saved_value	const job_t *	saved_value
ref	const job_t **const	ref
impl_	maybe_impl_t<end_execution_reason_t>	impl_
_M_len	size_type	_M_len
_M_array	iterator	_M_array
__stored_locally	const bool	__stored_locally
__stored_locally	const bool	__stored_locally
_M_impl	_Impl	_M_impl
_M_a	const allocator<job_t> &	_M_a
_M_start	pointer	_M_start
_M_finish	pointer	_M_finish
filled	bool	filled
_M_current	const argument_t **	_M_current
_M_ptr	pointer	_M_ptr
_M_alloc	allocator<_Sp_counted_ptr_inplace<job_t, allocator<job_t>, _S_atomic>> *	_M_alloc
_M_storage	__aligned_buffer<job_t>	_M_storage
_M_end_of_storage	pointer	_M_end_of_storage
__buf	type	__buf
_M_this	vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> *	_M_this
_M_current	redirection_spec_t *	_M_current
storage	char[4]	storage
_M_storage	type	_M_storage
_M_current	unique_ptr<process_t, default_delete<process_t>> *	_M_current
_M_current	concrete_assignment *	_M_current
_M_current	redirection_spec_t *	_M_current
_M_impl	_Impl	_M_impl
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_a	const allocator<parsed_source_t> &	_M_a
_M_ptr	pointer	_M_ptr
_M_alloc	allocator<_Sp_counted_ptr_inplace<parsed_source_t, allocator<parsed_source_t>, _S_atomic>> *	_M_alloc
_M_storage	__aligned_buffer<parsed_source_t>	_M_storage
_M_ptr	element_type *	_M_ptr
_M_storage	type	_M_storage
__align	struct <unnamed>	__align
__data	unsigned char[120]	__data
indent	int	indent
indents	vector<int, allocator<int>> &	indents
last_indent	int	last_indent
last_leaf_end	size_t	last_leaf_end
arg_list_src	const wcstring &	arg_list_src
prefix	const wcstring &	prefix
reverse_	const bool	reverse_
v_	indent_visitor_t &	v_
_M_current	__normal_iterator<parse_error_t *, vector<parse_error_t, allocator<parse_error_t>>>	_M_current
_M_current	tok_t *	_M_current
_M_node	const _List_node_base *	_M_node
_M_impl	_Vector_impl	_M_impl
check_cancel_signal	auto	check_cancel_signal
job_group	const job_group_ref_t	job_group
restored	bool	restored
saved_value	unique_ptr<parse_execution_context_t, default_delete<parse_execution_context_t>>	saved_value
ref	unique_ptr<parse_execution_context_t, default_delete<parse_execution_context_t>> *const	ref
_M_t	__uniq_ptr_impl<profile_item_t, default_delete<profile_item_t>>	_M_t
__stored_locally	const bool	__stored_locally
job_group	const job_group_ref_t	job_group
check_cancel_signal	decltype([...](...){...})	check_cancel_signal
__stored_locally	const bool	__stored_locally
job_group	const job_group_ref_t	job_group
check_cancel_signal	decltype([...](...){...})	check_cancel_signal
__stored_locally	const bool	__stored_locally
_M_start	pointer	_M_start
_M_finish	pointer	_M_finish
_M_end_of_storage	pointer	_M_end_of_storage
_M_current	unique_ptr<profile_item_t, default_delete<profile_item_t>> *	_M_current
_M_t	tuple<profile_item_t *, default_delete<profile_item_t>>	_M_t
_M_head_impl	profile_item_t *	_M_head_impl
_M_ptr	parser_t *	_M_ptr
_M_current	unique_ptr<profile_item_t, default_delete<profile_item_t>> *	_M_current
success	bool	success
path	wcstring	path
path	wcstring	path
used_xdg	bool	used_xdg
err	int	err
parser	parser_t &	parser
interactive	const bool	interactive
should_process_job	lambda [] type at line 152921, col. 31 &	should_process_job
lock	unique_lock<mutex>	lock
term_transferred	bool &	term_transferred
reclaim_foreground_pgrp	bool &	reclaim_foreground_pgrp
(captured this)	job_t *const	(captured this)
send_sigcont	bool &	send_sigcont
value	vector<int, allocator<int>> *	value
value_	atomic<session_interactivity_t>	value_
value_	atomic<job_control_t>	value_
data	vector<int, allocator<int>>	data
lock	mutex	lock
__stored_locally	const bool	__stored_locally
__stored_locally	const bool	__stored_locally
_M_pred	decltype([...](...){...})	_M_pred
_M_pred	decltype([...](...){...})	_M_pred
_M_i	job_control_t	_M_i
_S_alignment	const int	_S_alignment
_S_min_alignment	const int	_S_min_alignment
_M_i	session_interactivity_t	_M_i
_S_alignment	const int	_S_alignment
_S_min_alignment	const int	_S_min_alignment
_M_ptr	job_group_t *	_M_ptr
_M_impl	_Vector_impl	_M_impl
result	auto	result
comp	const Completion	comp
hand	const Handler	hand
result	auto	result
sel_active	bool	sel_active
sel_start_pos	size_t	sel_start_pos
sel_stop_pos	size_t	sel_stop_pos
command_line	editable_line_t	command_line
history	history_t *	history
repaint_needed	bool	repaint_needed
screen_reset_needed	bool	screen_reset_needed
inputter	inputter_t	inputter
exit_on_interrupt	bool	exit_on_interrupt
current_page_rendering	page_rendering_t	current_page_rendering
history_search	reader_history_search_t	history_search
prev_end_loop	bool	prev_end_loop
pager	pager_t	pager
silent	bool	silent
test_func	test_function_t	test_func
highlight_func	highlight_function_t	highlight_func
complete_ok	bool	complete_ok
expand_abbreviations	bool	expand_abbreviations
allow_autosuggestion	bool	allow_autosuggestion
right_prompt	wcstring	right_prompt
right_prompt	wcstring	right_prompt
left_prompt	wcstring	left_prompt
left_prompt	wcstring	left_prompt
screen	screen_t	screen
vars	shared_ptr<environment_t>	vars
text	const wcstring	text
generation_count	unsigned int	generation_count
highlight_func	highlight_function_t	highlight_func
match_highlight_pos	long	match_highlight_pos
working_directory	const wcstring	working_directory
search_string	const wcstring	search_string
vars	shared_ptr<environment_t>	vars
generation_count	const unsigned int	generation_count
history	history_t *	history
cursor_pos	size_t	cursor_pos
generation_count	unsigned int	generation_count
shared_this	shared_ptr<reader_data_t>	shared_this
colors	vector<highlight_spec_t, allocator<highlight_spec_t>>	colors
text	wcstring	text
text	wcstring	text
shared_this	shared_ptr<reader_data_t>	shared_this
suggestion	wcstring	suggestion
suggestion	wcstring	suggestion
search_string	wcstring	search_string
search_string	wcstring	search_string
kill_item	wcstring	kill_item
kill_item	wcstring	kill_item
indents	vector<int, allocator<int>>	indents
colors	vector<highlight_spec_t, allocator<highlight_spec_t>>	colors
cycle_command_line	wcstring	cycle_command_line
cycle_command_line	wcstring	cycle_command_line
right_prompt_buff	wcstring	right_prompt_buff
right_prompt_buff	wcstring	right_prompt_buff
mode_prompt_buff	wcstring	mode_prompt_buff
mode_prompt_buff	wcstring	mode_prompt_buff
left_prompt_buff	wcstring	left_prompt_buff
left_prompt_buff	wcstring	left_prompt_buff
autosuggestion	wcstring	autosuggestion
autosuggestion	wcstring	autosuggestion
parser_ref	shared_ptr<parser_t>	parser_ref
suppress_autosuggestion	bool	suppress_autosuggestion
command_line_has_transient_edit	bool	command_line_has_transient_edit
cycle_cursor_pos	size_t	cycle_cursor_pos
last_jump_target	wchar_t	last_jump_target
last_jump_direction	jump_direction_t	last_jump_direction
last_jump_precision	jump_precision_t	last_jump_precision
coalescing_repaints	bool	coalescing_repaints
complete_did_insert	bool	complete_did_insert
last_cmd	maybe_t<readline_cmd_t>	last_cmd
comp	completion_list_t	comp
comp	completion_list_t	comp
comp	completion_list_t	comp
comp	completion_list_t	comp
yank_len	size_t	yank_len
finished	bool	finished
sel_begin_pos	size_t	sel_begin_pos
nchars	size_t	nchars
matches_	vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	matches_
skips_	set<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	skips_
match_index_	size_t	match_index_
mode_	mode_t	mode_
search_	history_search_t	search_
_M_len	size_type	_M_len
_M_array	iterator	_M_array
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
_M_invoker	_Invoker_type	_M_invoker
_M_invoker	_Invoker_type	_M_invoker
impl_	maybe_impl_t<edit_t>	impl_
_M_weak_this	weak_ptr<reader_data_t>	_M_weak_this
__stored_locally	const bool	__stored_locally
result	shared_ptr<maybe_t<highlight_result_t>>	result
comp	const lambda [] type at line 161861, col. 41	comp
__stored_locally	const bool	__stored_locally
hand	const function<..(..)>	hand
result	shared_ptr<maybe_t<highlight_result_t>>	result
__stored_locally	const bool	__stored_locally
__stored_locally	const bool	__stored_locally
__stored_locally	const bool	__stored_locally
result	shared_ptr<maybe_t<autosuggestion_result_t>>	result
comp	const lambda [] type at line 161116, col. 24	comp
__stored_locally	const bool	__stored_locally
hand	const function<..(..)>	hand
result	shared_ptr<maybe_t<autosuggestion_result_t>>	result
__stored_locally	const bool	__stored_locally
__stored_locally	const bool	__stored_locally
_M_impl	_Impl	_M_impl
_M_impl	_Impl	_M_impl
_M_impl	_Impl	_M_impl
_M_refcount	__shared_count<_S_atomic>	_M_refcount
_M_refcount	__shared_count<_S_atomic>	_M_refcount
handler	function<..(..)>	handler
completion	function<..(..)>	completion
handler	function<..(..)>	handler
completion	function<..(..)>	completion
_M_a	const allocator<maybe_t<autosuggestion_result_t>> &	_M_a
_M_a	const allocator<maybe_t<highlight_result_t>> &	_M_a
_M_a	const allocator<reader_data_t> &	_M_a
filled	bool	filled
_M_finish	pointer	_M_finish
_M_start	pointer	_M_start
_M_pred	..(*)(..)	_M_pred
_M_ptr	pointer	_M_ptr
_M_alloc	allocator<_Sp_counted_ptr_inplace<maybe_t<autosuggestion_result_t>, allocator<maybe_t<autosuggestion_result_t>>, _S_atomic>> *	_M_alloc
_M_ptr	pointer	_M_ptr
_M_alloc	allocator<_Sp_counted_ptr_inplace<maybe_t<highlight_result_t>, allocator<maybe_t<highlight_result_t>>, _S_atomic>> *	_M_alloc
_M_ptr	pointer	_M_ptr
_M_alloc	allocator<_Sp_counted_ptr_inplace<reader_data_t, allocator<reader_data_t>, _S_atomic>> *	_M_alloc
_M_storage	__aligned_buffer<reader_data_t>	_M_storage
_M_storage	__aligned_buffer<maybe_t<highlight_result_t>>	_M_storage
_M_storage	__aligned_buffer<maybe_t<autosuggestion_result_t>>	_M_storage
impl_	maybe_impl_t<highlight_result_t>	impl_
impl_	maybe_impl_t<autosuggestion_result_t>	impl_
_M_t	_Rb_tree<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, _Identity<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> &	_M_t
_M_nodes	_Base_ptr	_M_nodes
_M_root	_Base_ptr	_M_root
_M_end_of_storage	pointer	_M_end_of_storage
__buf	type	__buf
_M_this	vector<highlight_spec_t, allocator<highlight_spec_t>> *	_M_this
storage	char[88]	storage
_M_current	shared_ptr<reader_data_t> *	_M_current
_M_current	const shared_ptr<reader_data_t> *	_M_current
_M_refcount	__weak_count<_S_atomic>	_M_refcount
_M_ptr	element_type *	_M_ptr
_M_ptr	element_type *	_M_ptr
_M_ptr	element_type *	_M_ptr
__align	struct <unnamed>	__align
__data	unsigned char[4]	__data
filled	bool	filled
storage	char[64]	storage
filled	bool	filled
storage	char[56]	storage
_M_storage	type	_M_storage
_M_storage	type	_M_storage
_M_storage	type	_M_storage
_M_current	edit_t *	_M_current
__align	struct <unnamed>	__align
__data	unsigned char[1800]	__data
_M_current	shared_ptr<reader_data_t> *	_M_current
current	__normal_iterator<const action_t *, vector<action_t, allocator<action_t>>>	current
_M_node	const _List_node_base *	_M_node
_M_node	_List_node_base *	_M_node
autosuggestion	wcstring	autosuggestion
autosuggestion	wcstring	autosuggestion
left_prompt_space	size_t	left_prompt_space
prompts_get_own_line	bool	prompts_get_own_line
left_prompt	wcstring	left_prompt
left_prompt	wcstring	left_prompt
right_prompt	wcstring	right_prompt
right_prompt	wcstring	right_prompt
screen_	screen_t &	screen_
value_	atomic<unsigned int>	value_
_M_ptr	pointer	_M_ptr
_M_alloc	allocator<_List_node<prompt_cache_entry_t>> *	_M_alloc
signal	int	signal
desc	const wchar_t *	desc
name	const wchar_t *	name
_M_len	size_type	_M_len
_M_array	iterator	_M_array
__f	..(&)(..)	__f
__f	..(&)(..)	__f
__args	bool &	__args
lock	unique_lock<mutex>	lock
value	data_t *	value
_M_impl	_Vector_impl	_M_impl
__stored_locally	const bool	__stored_locally
__stored_locally	const bool	__stored_locally
__r	rep	__r
den	const intmax_t	den
num	const intmax_t	num
den	const intmax_t	den
num	const intmax_t	num
value	const long	value
_M_finish	pointer	_M_finish
_M_end_of_storage	pointer	_M_end_of_storage
den	const intmax_t	den
num	const intmax_t	num
__gcd2	const intmax_t	__gcd2
__gcd1	const intmax_t	__gcd1
_M_start	pointer	_M_start
_M_current	timer_snapshot_t *	_M_current
_M_current	timer_snapshot_t *	_M_current
start	const char *	start
next	const char *	next
error	te_error_type_t	error
type	int	type
type	int	type
parameters	te_expr *[0]	parameters
value	double	value
function	const void *	function
function	const void *	function
value	double	value
type	int	type
address	const void *	address
len	int	len
name	const char *	name
(unknown field)	union <unnamed>	(unknown field)
(unknown field)	union <unnamed>	(unknown field)
_M_comp	decltype([...](...){...})	_M_comp
_M_impl	_Vector_impl	_M_impl
cursor	const wchar_t *&	cursor
cursor	const wchar_t *&	cursor
_M_start	pointer	_M_start
_M_finish	pointer	_M_finish
_M_current	char *	_M_current
_M_end_of_storage	pointer	_M_end_of_storage
_M_current	char *	_M_current
_M_current	const char *	_M_current
lock	unique_lock<mutex>	lock
v_	base_type_t	v_
value	data_t *	value
id	id	id
id	id	id
id	id	id
_M_c_locale_codecvt	__c_locale	_M_c_locale_codecvt
id	id	id
_M_c_locale_codecvt	__c_locale	_M_c_locale_codecvt
id	id	id
_M_c_locale_codecvt	__c_locale	_M_c_locale_codecvt
id	id	id
_M_name_messages	const char *	_M_name_messages
_M_c_locale_messages	__c_locale	_M_c_locale_messages
intl	const bool	intl
id	id	id
intl	const bool	intl
_M_data	__cache_type *	_M_data
id	id	id
id	id	id
id	id	id
_M_allocated	bool	_M_allocated
_M_atoms	_CharT[11]	_M_atoms
_M_neg_format	pattern	_M_neg_format
_M_pos_format	pattern	_M_pos_format
_M_frac_digits	int	_M_frac_digits
_M_negative_sign_size	size_t	_M_negative_sign_size
_M_negative_sign	const _CharT *	_M_negative_sign
_M_positive_sign_size	size_t	_M_positive_sign_size
_M_positive_sign	const _CharT *	_M_positive_sign
_M_curr_symbol_size	size_t	_M_curr_symbol_size
_M_curr_symbol	const _CharT *	_M_curr_symbol
_M_thousands_sep	_CharT	_M_thousands_sep
_M_decimal_point	_CharT	_M_decimal_point
_M_use_grouping	bool	_M_use_grouping
_M_grouping_size	size_t	_M_grouping_size
_M_grouping	const char *	_M_grouping
_S_atoms	const char *	_S_atoms
_S_default_pattern	const pattern	_S_default_pattern
field	char[4]	field
id	id	id
_M_name_timepunct	const char *	_M_name_timepunct
_M_c_locale_timepunct	__c_locale	_M_c_locale_timepunct
_M_data	__cache_type *	_M_data
_M_allocated	bool	_M_allocated
_M_amonth12	const _CharT *	_M_amonth12
_M_amonth11	const _CharT *	_M_amonth11
_M_amonth10	const _CharT *	_M_amonth10
_M_amonth09	const _CharT *	_M_amonth09
_M_amonth08	const _CharT *	_M_amonth08
_M_amonth07	const _CharT *	_M_amonth07
_M_amonth06	const _CharT *	_M_amonth06
_M_amonth05	const _CharT *	_M_amonth05
_M_amonth04	const _CharT *	_M_amonth04
_M_amonth03	const _CharT *	_M_amonth03
_M_amonth02	const _CharT *	_M_amonth02
_M_amonth01	const _CharT *	_M_amonth01
_M_month12	const _CharT *	_M_month12
_M_month11	const _CharT *	_M_month11
_M_month10	const _CharT *	_M_month10
_M_month09	const _CharT *	_M_month09
_M_month08	const _CharT *	_M_month08
_M_month07	const _CharT *	_M_month07
_M_month06	const _CharT *	_M_month06
_M_month05	const _CharT *	_M_month05
_M_month04	const _CharT *	_M_month04
_M_month03	const _CharT *	_M_month03
_M_month02	const _CharT *	_M_month02
_M_month01	const _CharT *	_M_month01
_M_aday7	const _CharT *	_M_aday7
_M_aday6	const _CharT *	_M_aday6
_M_aday5	const _CharT *	_M_aday5
_M_aday4	const _CharT *	_M_aday4
_M_aday3	const _CharT *	_M_aday3
_M_aday2	const _CharT *	_M_aday2
_M_aday1	const _CharT *	_M_aday1
_M_day7	const _CharT *	_M_day7
_M_day6	const _CharT *	_M_day6
_M_day5	const _CharT *	_M_day5
_M_day4	const _CharT *	_M_day4
_M_day3	const _CharT *	_M_day3
_M_day2	const _CharT *	_M_day2
_M_day1	const _CharT *	_M_day1
_M_am_pm_format	const _CharT *	_M_am_pm_format
_M_pm	const _CharT *	_M_pm
_M_am	const _CharT *	_M_am
_M_date_time_era_format	const _CharT *	_M_date_time_era_format
_M_date_time_format	const _CharT *	_M_date_time_format
_M_time_era_format	const _CharT *	_M_time_era_format
_M_time_format	const _CharT *	_M_time_format
_M_date_era_format	const _CharT *	_M_date_era_format
_M_date_format	const _CharT *	_M_date_format
_S_timezones	const _CharT *[14]	_S_timezones
id	id	id
_S_timezones	const wchar_t *[14]	_S_timezones
_S_timezones	const char *[14]	_S_timezones
_M_with_strings	bool	_M_with_strings
_M_with_cvtstate	bool	_M_with_cvtstate
_M_count	size_t	_M_count
_M_state	state_type	_M_state
_M_wide_err_string	wide_string	_M_wide_err_string
_M_byte_err_string	byte_string	_M_byte_err_string
_M_cvt	unique_ptr<_Codecvt, default_delete<_Codecvt>>	_M_cvt
_M_always_noconv	bool	_M_always_noconv
_M_get_buf	char[29]	_M_get_buf
_M_unconv	streamsize	_M_unconv
_M_get_area	_Elem[32]	_M_get_area
_M_put_area	_Elem[32]	_M_put_area
_S_putback_length	const streamsize	_S_putback_length
_S_buffer_length	const streamsize	_S_buffer_length
_M_state	state_type	_M_state
_M_cvt	unique_ptr<_Codecvt, default_delete<_Codecvt>>	_M_cvt
_M_buf	streambuf *	_M_buf
locale	locale &	locale
_M_allocated	bool	_M_allocated
_M_amonth12	const char *	_M_amonth12
_M_amonth11	const char *	_M_amonth11
_M_amonth10	const char *	_M_amonth10
_M_amonth09	const char *	_M_amonth09
_M_amonth08	const char *	_M_amonth08
_M_amonth07	const char *	_M_amonth07
_M_amonth06	const char *	_M_amonth06
_M_amonth05	const char *	_M_amonth05
_M_amonth04	const char *	_M_amonth04
_M_amonth03	const char *	_M_amonth03
_M_amonth02	const char *	_M_amonth02
_M_amonth01	const char *	_M_amonth01
_M_month12	const char *	_M_month12
_M_month11	const char *	_M_month11
_M_month10	const char *	_M_month10
_M_month09	const char *	_M_month09
_M_month08	const char *	_M_month08
_M_month07	const char *	_M_month07
_M_month06	const char *	_M_month06
_M_month05	const char *	_M_month05
_M_month04	const char *	_M_month04
_M_month03	const char *	_M_month03
_M_month02	const char *	_M_month02
_M_month01	const char *	_M_month01
_M_aday7	const char *	_M_aday7
_M_aday6	const char *	_M_aday6
_M_aday5	const char *	_M_aday5
_M_aday4	const char *	_M_aday4
_M_aday3	const char *	_M_aday3
_M_aday2	const char *	_M_aday2
_M_aday1	const char *	_M_aday1
_M_day7	const char *	_M_day7
_M_day6	const char *	_M_day6
_M_day5	const char *	_M_day5
_M_day4	const char *	_M_day4
_M_day3	const char *	_M_day3
_M_day2	const char *	_M_day2
_M_day1	const char *	_M_day1
_M_am_pm_format	const char *	_M_am_pm_format
_M_pm	const char *	_M_pm
_M_am	const char *	_M_am
_M_date_time_era_format	const char *	_M_date_time_era_format
_M_date_time_format	const char *	_M_date_time_format
_M_time_era_format	const char *	_M_time_era_format
_M_time_format	const char *	_M_time_format
_M_date_era_format	const char *	_M_date_era_format
_M_date_format	const char *	_M_date_format
_M_allocated	bool	_M_allocated
_M_amonth12	const wchar_t *	_M_amonth12
_M_amonth11	const wchar_t *	_M_amonth11
_M_amonth10	const wchar_t *	_M_amonth10
_M_amonth09	const wchar_t *	_M_amonth09
_M_amonth08	const wchar_t *	_M_amonth08
_M_amonth07	const wchar_t *	_M_amonth07
_M_amonth06	const wchar_t *	_M_amonth06
_M_amonth05	const wchar_t *	_M_amonth05
_M_amonth04	const wchar_t *	_M_amonth04
_M_amonth03	const wchar_t *	_M_amonth03
_M_amonth02	const wchar_t *	_M_amonth02
_M_amonth01	const wchar_t *	_M_amonth01
_M_month12	const wchar_t *	_M_month12
_M_month11	const wchar_t *	_M_month11
_M_month10	const wchar_t *	_M_month10
_M_month09	const wchar_t *	_M_month09
_M_month08	const wchar_t *	_M_month08
_M_month07	const wchar_t *	_M_month07
_M_month06	const wchar_t *	_M_month06
_M_month05	const wchar_t *	_M_month05
_M_month04	const wchar_t *	_M_month04
_M_month03	const wchar_t *	_M_month03
_M_month02	const wchar_t *	_M_month02
_M_month01	const wchar_t *	_M_month01
_M_aday7	const wchar_t *	_M_aday7
_M_aday6	const wchar_t *	_M_aday6
_M_aday5	const wchar_t *	_M_aday5
_M_aday4	const wchar_t *	_M_aday4
_M_aday3	const wchar_t *	_M_aday3
_M_aday2	const wchar_t *	_M_aday2
_M_aday1	const wchar_t *	_M_aday1
_M_day7	const wchar_t *	_M_day7
_M_day6	const wchar_t *	_M_day6
_M_day5	const wchar_t *	_M_day5
_M_day4	const wchar_t *	_M_day4
_M_day3	const wchar_t *	_M_day3
_M_day2	const wchar_t *	_M_day2
_M_day1	const wchar_t *	_M_day1
_M_am_pm_format	const wchar_t *	_M_am_pm_format
_M_pm	const wchar_t *	_M_pm
_M_am	const wchar_t *	_M_am
_M_date_time_era_format	const wchar_t *	_M_date_time_era_format
_M_date_time_format	const wchar_t *	_M_date_time_format
_M_time_era_format	const wchar_t *	_M_time_era_format
_M_time_format	const wchar_t *	_M_time_format
_M_date_era_format	const wchar_t *	_M_date_era_format
_M_date_format	const wchar_t *	_M_date_format
intl	const bool	intl
intl	const bool	intl
id	id	id
intl	const bool	intl
_M_data	__cache_type *	_M_data
id	id	id
intl	const bool	intl
_M_data	__cache_type *	_M_data
id	id	id
id	id	id
id	id	id
_M_name_timepunct	const char *	_M_name_timepunct
_M_c_locale_timepunct	__c_locale	_M_c_locale_timepunct
_M_data	__cache_type *	_M_data
id	id	id
id	id	id
intl	const bool	intl
intl	const bool	intl
id	id	id
intl	const bool	intl
_M_data	__cache_type *	_M_data
id	id	id
intl	const bool	intl
_M_data	__cache_type *	_M_data
id	id	id
id	id	id
id	id	id
_M_name_timepunct	const char *	_M_name_timepunct
_M_c_locale_timepunct	__c_locale	_M_c_locale_timepunct
_M_data	__cache_type *	_M_data
id	id	id
id	id	id
id	id	id
_M_name_messages	const char *	_M_name_messages
_M_c_locale_messages	__c_locale	_M_c_locale_messages
id	id	id
_M_name_messages	const char *	_M_name_messages
_M_c_locale_messages	__c_locale	_M_c_locale_messages
locale	locale &	locale
locale	locale &	locale
locale	locale &	locale
locale	locale &	locale
_M_comp	decltype([...](...){...})	_M_comp
_M_comp	decltype([...](...){...})	_M_comp
_M_comp	decltype([...](...){...})	_M_comp
_M_comp	decltype([...](...){...})	_M_comp
_M_it1	__normal_iterator<const char *, basic_string<char, char_traits<char>, allocator<char>>>	_M_it1
_M_comp	decltype([...](...){...})	_M_comp
_M_it1	__normal_iterator<const char *, basic_string<char, char_traits<char>, allocator<char>>>	_M_it1
_M_comp	decltype([...](...){...})	_M_comp
_M_it1	__normal_iterator<const wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	_M_it1
_M_comp	decltype([...](...){...})	_M_comp
_M_it1	__normal_iterator<const wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	_M_it1
_M_comp	decltype([...](...){...})	_M_comp
visited_files	unordered_set<file_id_t, hash<file_id_t>, equal_to<file_id_t>, allocator<file_id_t>>	visited_files
_M_h	_Hashtable	_M_h
completion_set	unordered_set<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	completion_set
working_directory	const wcstring	working_directory
cancel_checker	cancel_checker_t	cancel_checker
orig	const wcstring &	orig
expand_flags	expand_flags_t	expand_flags
desc_func	const description_func_t &	desc_func
did_interrupt	bool	did_interrupt
did_add	bool	did_add
resolved_completions	completion_list_t *	resolved_completions
flags	const expand_flags_t	flags
has_fuzzy_ancestor	bool	has_fuzzy_ancestor
second	bool	second
first	_Node_iterator<file_id_t, true, false>	first
_M_current	const unsigned int *	_M_current
_M_single_bucket	__bucket_type	_M_single_bucket
_M_rehash_policy	_Prime_rehash_policy	_M_rehash_policy
_M_element_count	size_type	_M_element_count
_M_before_begin	__node_base	_M_before_begin
_M_bucket_count	size_type	_M_bucket_count
_M_buckets	__bucket_type *	_M_buckets
_M_len	size_type	_M_len
_M_array	iterator	_M_array
_M_storage	__aligned_buffer<file_id_t>	_M_storage
_M_h	__hashtable_alloc &	_M_h
__buf	type	__buf
_M_this	vector<unsigned int, allocator<unsigned int>> *	_M_this
_M_cur	__node_type *	_M_cur
_M_storage	type	_M_storage
f_spare	__fsword_t[4]	f_spare
f_flags	__fsword_t	f_flags
f_frsize	__fsword_t	f_frsize
f_namelen	__fsword_t	f_namelen
f_fsid	__fsid_t	f_fsid
f_ffree	__fsfilcnt64_t	f_ffree
f_files	__fsfilcnt64_t	f_files
f_bavail	__fsblkcnt64_t	f_bavail
f_bfree	__fsblkcnt64_t	f_bfree
f_blocks	__fsblkcnt64_t	f_blocks
f_bsize	__fsword_t	f_bsize
f_type	__fsword_t	f_type
f_spare	__fsword_t[4]	f_spare
f_flags	__fsword_t	f_flags
f_frsize	__fsword_t	f_frsize
f_namelen	__fsword_t	f_namelen
f_fsid	__fsid_t	f_fsid
f_ffree	__fsfilcnt_t	f_ffree
f_files	__fsfilcnt_t	f_files
f_bavail	__fsblkcnt_t	f_bavail
f_bfree	__fsblkcnt_t	f_bfree
f_blocks	__fsblkcnt_t	f_blocks
f_bsize	__fsword_t	f_bsize
f_type	__fsword_t	f_type
__f_spare	int[6]	__f_spare
f_namemax	unsigned long	f_namemax
f_flag	unsigned long	f_flag
f_fsid	unsigned long	f_fsid
f_favail	__fsfilcnt64_t	f_favail
f_ffree	__fsfilcnt64_t	f_ffree
f_files	__fsfilcnt64_t	f_files
f_bavail	__fsblkcnt64_t	f_bavail
f_bfree	__fsblkcnt64_t	f_bfree
f_blocks	__fsblkcnt64_t	f_blocks
f_frsize	unsigned long	f_frsize
f_bsize	unsigned long	f_bsize
__f_spare	int[6]	__f_spare
f_namemax	unsigned long	f_namemax
f_flag	unsigned long	f_flag
f_fsid	unsigned long	f_fsid
f_favail	__fsfilcnt_t	f_favail
f_ffree	__fsfilcnt_t	f_ffree
f_files	__fsfilcnt_t	f_files
f_bavail	__fsblkcnt_t	f_bavail
f_bfree	__fsblkcnt_t	f_bfree
f_blocks	__fsblkcnt_t	f_blocks
f_frsize	unsigned long	f_frsize
f_bsize	unsigned long	f_bsize
lock	unique_lock<mutex>	lock
container	vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> *	container
value	unordered_map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>> *	value
data	unordered_map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	data
lock	mutex	lock
_M_value	const wchar_t(&)[1]	_M_value
_M_pred	decltype([...](...){...})	_M_pred
_M_pred	decltype([...](...){...})	_M_pred
