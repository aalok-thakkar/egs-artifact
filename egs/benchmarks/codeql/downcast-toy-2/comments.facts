/* We do not support C11 <threads.h>.  */	/* We do not support C11 <threads.h>.  */	file:///usr/include/stdc-predef.h:60:1:60:41
"/* wchar_t uses Unicode 10.0.0.  Version 10.0 of the Unicode Standard is
   synchronized with ISO/IEC 10646:2017, fifth edition, plus
   the following additions from Amendment 1 to the fifth edition:
   - 56 emoji characters
   - 285 hentaigana
   - 3 additional Zanabazar Square characters */"	"/* wchar_t uses Unicode 10.0.0.  Version 10.0 of the Unicode Standard is
   synchronized with ISO/IEC 10646:2017, fifth edition, plus
   the following additions from Amendment 1 to the fifth edition:
   - 56 emoji characters
   - 285 hentaigana
   - 3 additional Zanabazar Square characters */"	file:///usr/include/stdc-predef.h:52:1:57:48
"/* glibc's intent is to support the IEC 559 math functionality, real
   and complex.  If the GCC (4.9 and later) predefined macros
   specifying compiler intent are available, use them to determine
   whether the overall intent is to support these features; otherwise,
   presume an older compiler has intent to support these features and
   define these macros by default.  */"	"/* glibc's intent is to support the IEC 559 math functionality, real
   and complex.  If the GCC (4.9 and later) predefined macros
   specifying compiler intent are available, use them to determine
   whether the overall intent is to support these features; otherwise,
   presume an older compiler has intent to support these features and
   define these macros by default.  */"	file:///usr/include/stdc-predef.h:29:1:34:38
"/* This header is separate from features.h so that the compiler can
   include it implicitly at the start of every compilation.  It must
   not itself include <features.h> or any other header that includes
   <features.h> because the implicit include comes before any feature
   test macros that may be defined in a source file before it first
   explicitly includes a system header.  GCC knows the name of this
   header in order to preinclude it.  */"	"/* This header is separate from features.h so that the compiler can
   include it implicitly at the start of every compilation.  It must
   not itself include <features.h> or any other header that includes
   <features.h> because the implicit include comes before any feature
   test macros that may be defined in a source file before it first
   explicitly includes a system header.  GCC knows the name of this
   header in order to preinclude it.  */"	file:///usr/include/stdc-predef.h:21:1:27:40
"/* Copyright (C) 1991-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	"/* Copyright (C) 1991-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	file:///usr/include/stdc-predef.h:1:1:16:38
/* Both x86-64 and x32 use the 64-bit system call interface.  */	/* Both x86-64 and x32 use the 64-bit system call interface.  */	file:///usr/include/x86_64-linux-gnu/bits/wordsize.h:13:1:13:64
/* Determine the wordsize from the preprocessor defines.  */	/* Determine the wordsize from the preprocessor defines.  */	file:///usr/include/x86_64-linux-gnu/bits/wordsize.h:1:1:1:60
"/* long double is distinct from double, so there is nothing to
   define here.  */"	"/* long double is distinct from double, so there is nothing to
   define here.  */"	file:///usr/include/x86_64-linux-gnu/bits/long-double.h:19:1:20:19
"/* Properties of long double type.  ldbl-96 version.
   Copyright (C) 2016-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License  published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	"/* Properties of long double type.  ldbl-96 version.
   Copyright (C) 2016-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License  published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	file:///usr/include/x86_64-linux-gnu/bits/long-double.h:1:1:17:38
/* sys/cdefs.h */	/* sys/cdefs.h */	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:492:9:492:25
"/* Generic selection (ISO C11) is a C-only feature, available in GCC
   since version 4.9.  Previous versions do not provide generic
   selection, even though they might set __STDC_VERSION__ to 201112L,
   when in -std=c11 mode.  Thus, we must check for !defined __GNUC__
   when testing __STDC_VERSION__ for generic selection support.
   On the other hand, Clang also defines __GNUC__, so a clang-specific
   check is required to enable the use of generic selection.  */"	"/* Generic selection (ISO C11) is a C-only feature, available in GCC
   since version 4.9.  Previous versions do not provide generic
   selection, even though they might set __STDC_VERSION__ to 201112L,
   when in -std=c11 mode.  Thus, we must check for !defined __GNUC__
   when testing __STDC_VERSION__ for generic selection support.
   On the other hand, Clang also defines __GNUC__, so a clang-specific
   check is required to enable the use of generic selection.  */"	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:475:1:481:64
"/* __glibc_macro_warning (MESSAGE) issues warning MESSAGE.  This is
   intended for use in preprocessor macros.

   Note: MESSAGE must be a _single_ string; concatenation of string
   literals is not supported.  */"	"/* __glibc_macro_warning (MESSAGE) issues warning MESSAGE.  This is
   intended for use in preprocessor macros.

   Note: MESSAGE must be a _single_ string; concatenation of string
   literals is not supported.  */"	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:462:1:466:33
"/* Describes a char array whose address can safely be passed as the first
   argument to strncpy and strncat, as the char array is not necessarily
   a NUL-terminated string.  */"	"/* Describes a char array whose address can safely be passed as the first
   argument to strncpy and strncat, as the char array is not necessarily
   a NUL-terminated string.  */"	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:411:1:413:31
/* Not supported.  */	/* Not supported.  */	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:387:27:387:47
/* Some other non-C99 compiler.  */	/* Some other non-C99 compiler.  */	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:386:1:386:35
/* Not supported in old GCC.  */	/* Not supported in old GCC.  */	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:381:26:381:57
"/* ISO C99 also allows to declare arrays as non-overlapping.  The syntax is
     array_name[restrict]
   GCC 3.1 supports this.  */"	"/* ISO C99 also allows to declare arrays as non-overlapping.  The syntax is
     array_name[restrict]
   GCC 3.1 supports this.  */"	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:374:1:376:29
/* Ignore */	/* Ignore */	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:371:21:371:32
/* __restrict is known in EGCS 1.2 and above. */	/* __restrict is known in EGCS 1.2 and above. */	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:369:1:369:48
/* Ignore */	/* Ignore */	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:366:25:366:36
"/* It is possible to compile containing GCC extensions even if GCC is
   run in pedantic mode if the uses are carefully marked using the
   `__extension__' keyword.  But this is not generally available before
   version 2.8.  */"	"/* It is possible to compile containing GCC extensions even if GCC is
   run in pedantic mode if the uses are carefully marked using the
   `__extension__' keyword.  But this is not generally available before
   version 2.8.  */"	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:361:1:364:19
"/* GCC 4.3 and above allow passing all anonymous arguments of an
   __extern_always_inline function to some other vararg function.  */"	"/* GCC 4.3 and above allow passing all anonymous arguments of an
   __extern_always_inline function to some other vararg function.  */"	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:354:1:355:69
"/* GCC 4.3 and above with -std=c99 or -std=gnu99 implements ISO C99
   inline semantics, unless -fgnu89-inline is used.  Using __GNUC_STDC_INLINE__
   or __GNUC_GNU_INLINE is not a good enough check for gcc because gcc versions
   older than 4.3 may define these macros and still not guarantee GNU inlining
   semantics.

   clang++ identifies itself as gcc-4.2, but has support for GNU inlining
   semantics, that can be checked fot by using the __GNUC_STDC_INLINE_ and
   __GNUC_GNU_INLINE__ macro definitions.  */"	"/* GCC 4.3 and above with -std=c99 or -std=gnu99 implements ISO C99
   inline semantics, unless -fgnu89-inline is used.  Using __GNUC_STDC_INLINE__
   or __GNUC_GNU_INLINE is not a good enough check for gcc because gcc versions
   older than 4.3 may define these macros and still not guarantee GNU inlining
   semantics.

   clang++ identifies itself as gcc-4.2, but has support for GNU inlining
   semantics, that can be checked fot by using the __GNUC_STDC_INLINE_ and
   __GNUC_GNU_INLINE__ macro definitions.  */"	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:328:1:336:45
/* Ignore */	/* Ignore */	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:325:35:325:46
"/* Associate error messages with the source location of the call site rather
   than with the source location inside the function.  */"	"/* Associate error messages with the source location of the call site rather
   than with the source location inside the function.  */"	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:320:1:321:57
"/* The Linux kernel defines __always_inline in stddef.h (283d7573), and
   it conflicts with this definition.  Therefore undefine it first to
   allow either header to be included first.  */"	"/* The Linux kernel defines __always_inline in stddef.h (283d7573), and
   it conflicts with this definition.  Therefore undefine it first to
   allow either header to be included first.  */"	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:310:1:312:48
/* Forces a function to be always inlined.  */	/* Forces a function to be always inlined.  */	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:308:1:308:46
/* Ignore */	/* Ignore */	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:305:16:305:27
/* empty */	/* empty */	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:302:43:302:53
"/* If fortification mode, we warn about unused results of certain
   function calls which can lead to problems.  */"	"/* If fortification mode, we warn about unused results of certain
   function calls which can lead to problems.  */"	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:293:1:294:49
"/* The nonull function attribute allows to mark pointer parameters which
   must not be NULL.  */"	"/* The nonull function attribute allows to mark pointer parameters which
   must not be NULL.  */"	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:285:1:286:24
/* Ignore */	/* Ignore */	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:282:44:282:55
"/* At some point during the gcc 2.97 development the `strfmon' format
   attribute for functions was introduced.  We don't want to use it
   unconditionally (although this would be possible) since it
   generates warnings.  */"	"/* At some point during the gcc 2.97 development the `strfmon' format
   attribute for functions was introduced.  We don't want to use it
   unconditionally (although this would be possible) since it
   generates warnings.  */"	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:274:1:277:26
/* Ignore */	/* Ignore */	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:271:38:271:49
"/* At some point during the gcc 2.8 development the `format_arg' attribute
   for functions was introduced.  We don't want to use it unconditionally
   (although this would be possible) since it generates warnings.
   If several `format_arg' attributes are given for the same function, in
   gcc-3.0 and older, all but the last one are ignored.  In newer gccs,
   all designated arguments are considered.  */"	"/* At some point during the gcc 2.8 development the `format_arg' attribute
   for functions was introduced.  We don't want to use it unconditionally
   (although this would be possible) since it generates warnings.
   If several `format_arg' attributes are given for the same function, in
   gcc-3.0 and older, all but the last one are ignored.  In newer gccs,
   all designated arguments are considered.  */"	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:262:1:267:47
"/* Since version 4.5, gcc also allows one to specify the message printed
   when a deprecated function is used.  clang claims to be gcc 4.2, but
   may also support this feature.  */"	"/* Since version 4.5, gcc also allows one to specify the message printed
   when a deprecated function is used.  clang claims to be gcc 4.2, but
   may also support this feature.  */"	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:251:1:253:37
/* Ignore */	/* Ignore */	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:248:35:248:46
/* Since version 3.2, gcc allows marking deprecated functions.  */	/* Since version 3.2, gcc allows marking deprecated functions.  */	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:244:1:244:66
/* Ignore */	/* Ignore */	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:241:33:241:44
"/* At some point during the gcc 3.1 development the `used' attribute
   for functions was introduced.  We don't want to use it unconditionally
   (although this would be possible) since it generates warnings.  */"	"/* At some point during the gcc 3.1 development the `used' attribute
   for functions was introduced.  We don't want to use it unconditionally
   (although this would be possible) since it generates warnings.  */"	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:233:1:235:69
/* Ignore */	/* Ignore */	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:230:30:230:41
/* This declaration tells the compiler that the value is constant.  */	/* This declaration tells the compiler that the value is constant.  */	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:226:1:226:70
/* Ignore */	/* Ignore */	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:223:29:223:40
"/* At some point during the gcc 2.96 development the `pure' attribute
   for functions was introduced.  We don't want to use it unconditionally
   (although this would be possible) since it generates warnings.  */"	"/* At some point during the gcc 2.96 development the `pure' attribute
   for functions was introduced.  We don't want to use it unconditionally
   (although this would be possible) since it generates warnings.  */"	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:217:1:219:69
/* Ignore.  */	/* Ignore.  */	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:214:43:214:56
"/* Tell the compiler which arguments to an allocation function
   indicate the size of the allocation.  */"	"/* Tell the compiler which arguments to an allocation function
   indicate the size of the allocation.  */"	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:208:1:209:43
/* Ignore */	/* Ignore */	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:205:31:205:42
"/* At some point during the gcc 2.96 development the `malloc' attribute
   for functions was introduced.  We don't want to use it unconditionally
   (although this would be possible) since it generates warnings.  */"	"/* At some point during the gcc 2.96 development the `malloc' attribute
   for functions was introduced.  We don't want to use it unconditionally
   (although this would be possible) since it generates warnings.  */"	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:199:1:201:69
/* Ignore */	/* Ignore */	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:196:29:196:40
"/* GCC has various useful declarations that can be made with the
   `__attribute__' syntax.  All of the ways we use this do fine if
   they are omitted for compilers that don't understand it. */"	"/* GCC has various useful declarations that can be made with the
   `__attribute__' syntax.  All of the ways we use this do fine if
   they are omitted for compilers that don't understand it. */"	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:192:1:194:62
"/*
#elif __SOME_OTHER_COMPILER__

# define __REDIRECT(name, proto, alias) name proto; \
	_Pragma(""let "" #name "" = "" #alias)
*/"	"/*
#elif __SOME_OTHER_COMPILER__

# define __REDIRECT(name, proto, alias) name proto; \
	_Pragma(""let "" #name "" = "" #alias)
*/"	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:184:1:189:2
"/* __asm__ (""xyz"") is used throughout the headers to rename functions
   at the assembly language level.  This is wrapped by the __REDIRECT
   macro, in order to support compilers that can do this some other
   way.  When compilers don't support asm-names at all, we have to do
   preprocessor tricks instead (which don't have exactly the right
   semantics, but it's the best we can do).

   Example:
   int __REDIRECT(setpgrp, (__pid_t pid, __pid_t pgrp), setpgid); */"	"/* __asm__ (""xyz"") is used throughout the headers to rename functions
   at the assembly language level.  This is wrapped by the __REDIRECT
   macro, in order to support compilers that can do this some other
   way.  When compilers don't support asm-names at all, we have to do
   preprocessor tricks instead (which don't have exactly the right
   semantics, but it's the best we can do).

   Example:
   int __REDIRECT(setpgrp, (__pid_t pid, __pid_t pgrp), setpgid); */"	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:157:1:165:68
/* Some other non-C99 compiler.  Approximate with [1].  */	/* Some other non-C99 compiler.  Approximate with [1].  */	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:151:1:151:58
"/* Pre-2.97 GCC did not support C99 flexible arrays but did have
   an equivalent extension with slightly different notation.  */"	"/* Pre-2.97 GCC did not support C99 flexible arrays but did have
   an equivalent extension with slightly different notation.  */"	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:146:1:147:64
"/* GCC 2.97 supports C99 flexible array members as an extension,
   even when in C89 mode or compiling C++ (any version).  */"	"/* GCC 2.97 supports C99 flexible array members as an extension,
   even when in C89 mode or compiling C++ (any version).  */"	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:141:1:142:60
"/* Support for flexible arrays.
   Headers that should use flexible arrays only if they're ""real""
   (e.g. only if they won't affect sizeof()) should test
   #if __glibc_c99_flexarr_available.  */"	"/* Support for flexible arrays.
   Headers that should use flexible arrays only if they're ""real""
   (e.g. only if they won't affect sizeof()) should test
   #if __glibc_c99_flexarr_available.  */"	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:133:1:136:41
/* Fortify support.  */	/* Fortify support.  */	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:117:1:117:23
/* C++ needs to know that types and declarations are C, not C++.  */	/* C++ needs to know that types and declarations are C, not C++.  */	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:107:1:107:68
/* This is not a typedef so `const __ptr_t' does the right thing.  */	/* This is not a typedef so `const __ptr_t' does the right thing.  */	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:103:1:103:69
"/* For these things, GCC behaves the ANSI way normally,
   and the non-ANSI way under -traditional.  */"	"/* For these things, GCC behaves the ANSI way normally,
   and the non-ANSI way under -traditional.  */"	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:97:1:98:47
"/* These two macros are not used in glibc anymore.  They are kept here
   only because some other projects expect the macros to be defined.  */"	"/* These two macros are not used in glibc anymore.  They are kept here
   only because some other projects expect the macros to be defined.  */"	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:92:1:93:72
"/* Compilers that are not clang may object to
       #if defined __clang__ && __has_extension(...)
   even though they do not need to evaluate the right-hand side of the &&.  */"	"/* Compilers that are not clang may object to
       #if defined __clang__ && __has_extension(...)
   even though they do not need to evaluate the right-hand side of the &&.  */"	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:83:1:85:78
/* GCC.  */	/* GCC.  */	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:81:8:81:18
/* No inline functions.  */	/* No inline functions.  */	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:75:20:75:46
/* Not GCC.  */	/* Not GCC.  */	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:73:7:73:21
"/* GCC can always grok prototypes.  For C++ programs we add throw()
   to help it optimize the function calls.  But this works only with
   gcc 2.8.x and egcs.  For gcc 3.2 and up we even mark C functions
   as non-throwing using a function attribute since programs can use
   the -fexceptions options for C code as well.  */"	"/* GCC can always grok prototypes.  For C++ programs we add throw()
   to help it optimize the function calls.  But this works only with
   gcc 2.8.x and egcs.  For gcc 3.2 and up we even mark C functions
   as non-throwing using a function attribute since programs can use
   the -fexceptions options for C code as well.  */"	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:49:1:53:51
"/* All functions, except those with callbacks or those that
   synchronize memory, are leaf functions.  */"	"/* All functions, except those with callbacks or those that
   synchronize memory, are leaf functions.  */"	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:39:1:40:46
/* Some user header file might have defined this before.  */	/* Some user header file might have defined this before.  */	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:33:1:33:60
"/* The GNU libc does not support any K&R compilers or the traditional mode
   of ISO C compilers anymore.  Check for some of the combinations not
   anymore supported.  */"	"/* The GNU libc does not support any K&R compilers or the traditional mode
   of ISO C compilers anymore.  Check for some of the combinations not
   anymore supported.  */"	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:26:1:28:25
/* We are almost always included from features.h. */	/* We are almost always included from features.h. */	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:21:1:21:52
"/* Copyright (C) 1992-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	"/* Copyright (C) 1992-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	file:///usr/include/x86_64-linux-gnu/sys/cdefs.h:1:1:16:38
"/* This file is automatically generated.
   It defines a symbol `__stub_FUNCTION' for each function
   in the C library which is a stub, meaning it will fail
   every time called, usually setting errno to ENOSYS.  */"	"/* This file is automatically generated.
   It defines a symbol `__stub_FUNCTION' for each function
   in the C library which is a stub, meaning it will fail
   every time called, usually setting errno to ENOSYS.  */"	file:///usr/include/x86_64-linux-gnu/gnu/stubs-64.h:1:1:4:58
"/* This file is automatically generated.
   This file selects the right generated file of `__stub_FUNCTION' macros
   based on the architecture being compiled for.  */"	"/* This file is automatically generated.
   This file selects the right generated file of `__stub_FUNCTION' macros
   based on the architecture being compiled for.  */"	file:///usr/include/x86_64-linux-gnu/gnu/stubs.h:1:1:3:52
/* features.h  */	/* features.h  */	file:///usr/include/features.h:451:8:451:24
"/* This is here only because every header file already includes this one.
   Get the definitions of all the appropriate `__stub_FUNCTION' symbols.
   <gnu/stubs.h> contains `#define __stub_FUNCTION' when FUNCTION is a stub
   that will always return failure (and set errno to ENOSYS).  */"	"/* This is here only because every header file already includes this one.
   Get the definitions of all the appropriate `__stub_FUNCTION' symbols.
   <gnu/stubs.h> contains `#define __stub_FUNCTION' when FUNCTION is a stub
   that will always return failure (and set errno to ENOSYS).  */"	file:///usr/include/features.h:444:1:447:65
/* Decide whether we can define 'extern inline' functions in headers.  */	/* Decide whether we can define 'extern inline' functions in headers.  */	file:///usr/include/features.h:436:1:436:73
/* !ASSEMBLER */	/* !ASSEMBLER */	file:///usr/include/features.h:434:8:434:23
"/* If we don't have __REDIRECT, prototypes will be missing if
   __USE_FILE_OFFSET64 but not __USE_LARGEFILE[64]. */"	"/* If we don't have __REDIRECT, prototypes will be missing if
   __USE_FILE_OFFSET64 but not __USE_LARGEFILE[64]. */"	file:///usr/include/features.h:427:1:428:54
/* This is here only because every header file already includes this one.  */	/* This is here only because every header file already includes this one.  */	file:///usr/include/features.h:421:1:421:77
"/* Major and minor version number of the GNU C library package.  Use
   these macros to test for features in specific releases.  */"	"/* Major and minor version number of the GNU C library package.  Use
   these macros to test for features in specific releases.  */"	file:///usr/include/features.h:413:1:414:62
"/* This macro indicates that the installed library is the GNU C Library.
   For historic reasons the value now is 6 and this will stay from now
   on.  The use of this variable is deprecated.  Use __GLIBC__ and
   __GLIBC_MINOR__ now (see below) when you want to test for a specific
   GNU C library version and use the values in <gnu/lib-names.h> to get
   the sonames of the shared libraries.  */"	"/* This macro indicates that the installed library is the GNU C Library.
   For historic reasons the value now is 6 and this will stay from now
   on.  The use of this variable is deprecated.  Use __GLIBC__ and
   __GLIBC_MINOR__ now (see below) when you want to test for a specific
   GNU C library version and use the values in <gnu/lib-names.h> to get
   the sonames of the shared libraries.  */"	file:///usr/include/features.h:404:1:409:43
"/* Get definitions of __STDC_* predefined macros, if the compiler has
   not preincluded this header automatically.  */"	"/* Get definitions of __STDC_* predefined macros, if the compiler has
   not preincluded this header automatically.  */"	file:///usr/include/features.h:400:1:401:49
"/* The function 'gets' existed in C89, but is impossible to use
   safely.  It has been removed from ISO C11 and ISO C++14.  Note: for
   compatibility with various implementations of <cstdio>, this test
   must consider only the value of __cplusplus when compiling C++.  */"	"/* The function 'gets' existed in C89, but is impossible to use
   safely.  It has been removed from ISO C11 and ISO C++14.  Note: for
   compatibility with various implementations of <cstdio>, this test
   must consider only the value of __cplusplus when compiling C++.  */"	file:///usr/include/features.h:390:1:393:70
"/* Some C libraries once required _REENTRANT and/or _THREAD_SAFE to be
   defined in all multithreaded code.  GNU libc has not required this
   for many years.  We now treat them as compatibility synonyms for
   _POSIX_C_SOURCE=199506L, which is the earliest level of POSIX with
   comprehensive support for multithreaded code.  Using them never
   lowers the selected level of POSIX conformance, only raises it.  */"	"/* Some C libraries once required _REENTRANT and/or _THREAD_SAFE to be
   defined in all multithreaded code.  GNU libc has not required this
   for many years.  We now treat them as compatibility synonyms for
   _POSIX_C_SOURCE=199506L, which is the earliest level of POSIX with
   comprehensive support for multithreaded code.  Using them never
   lowers the selected level of POSIX conformance, only raises it.  */"	file:///usr/include/features.h:284:1:289:70
"/* If none of the ANSI/POSIX macros are defined, or if _DEFAULT_SOURCE
   is defined, use POSIX.1-2008 (or another version depending on
   _XOPEN_SOURCE).  */"	"/* If none of the ANSI/POSIX macros are defined, or if _DEFAULT_SOURCE
   is defined, use POSIX.1-2008 (or another version depending on
   _XOPEN_SOURCE).  */"	file:///usr/include/features.h:255:1:257:22
"/* This is to enable compatibility for ISO C++11.
   Check the temporary macro for now, too.  */"	"/* This is to enable compatibility for ISO C++11.
   Check the temporary macro for now, too.  */"	file:///usr/include/features.h:247:1:248:46
/* This is to enable compatibility for ISO C++17.  */	/* This is to enable compatibility for ISO C++17.  */	file:///usr/include/features.h:243:1:243:53
/* This is to enable the ISO C90 Amendment 1:1995 extension.  */	/* This is to enable the ISO C90 Amendment 1:1995 extension.  */	file:///usr/include/features.h:236:1:236:64
/* This is to enable the ISO C99 extension.  */	/* This is to enable the ISO C99 extension.  */	file:///usr/include/features.h:230:1:230:47
/* This is to enable the ISO C11 extension.  */	/* This is to enable the ISO C11 extension.  */	file:///usr/include/features.h:224:1:224:47
"/* If nothing (other than _GNU_SOURCE and _DEFAULT_SOURCE) is defined,
   define _DEFAULT_SOURCE.  */"	"/* If nothing (other than _GNU_SOURCE and _DEFAULT_SOURCE) is defined,
   define _DEFAULT_SOURCE.  */"	file:///usr/include/features.h:213:1:214:30
/* If _GNU_SOURCE was defined by the user, turn on all the other features.  */	/* If _GNU_SOURCE was defined by the user, turn on all the other features.  */	file:///usr/include/features.h:189:1:189:78
"/* _BSD_SOURCE and _SVID_SOURCE are deprecated aliases for
   _DEFAULT_SOURCE.  If _DEFAULT_SOURCE is present we do not
   issue a warning; the expectation is that the source is being
   transitioned to use the new macro.  */"	"/* _BSD_SOURCE and _SVID_SOURCE are deprecated aliases for
   _DEFAULT_SOURCE.  If _DEFAULT_SOURCE is present we do not
   issue a warning; the expectation is that the source is being
   transitioned to use the new macro.  */"	file:///usr/include/features.h:178:1:181:41
/* Whether to use feature set F.  */	/* Whether to use feature set F.  */	file:///usr/include/features.h:175:1:175:36
"/* Similarly for clang.  Features added to GCC after version 4.2 may
   or may not also be available in clang, and clang's definitions of
   __GNUC(_MINOR)__ are fixed at 4 and 2 respectively.  Not all such
   features can be queried via __has_extension/__has_feature.  */"	"/* Similarly for clang.  Features added to GCC after version 4.2 may
   or may not also be available in clang, and clang's definitions of
   __GNUC(_MINOR)__ are fixed at 4 and 2 respectively.  Not all such
   features can be queried via __has_extension/__has_feature.  */"	file:///usr/include/features.h:164:1:167:65
"/* Convenience macro to test the version of gcc.
   Use like this:
   #if __GNUC_PREREQ (2,8)
   ... code requiring gcc 2.8 or later ...
   #endif
   Note: only works for GCC 2.0 and later, because __GNUC_MINOR__ was
   added in 2.0.  */"	"/* Convenience macro to test the version of gcc.
   Use like this:
   #if __GNUC_PREREQ (2,8)
   ... code requiring gcc 2.8 or later ...
   #endif
   Note: only works for GCC 2.0 and later, because __GNUC_MINOR__ was
   added in 2.0.  */"	file:///usr/include/features.h:150:1:156:20
"/* Suppress kernel-name space pollution unless user expressedly asks
   for it.  */"	"/* Suppress kernel-name space pollution unless user expressedly asks
   for it.  */"	file:///usr/include/features.h:144:1:145:14
/* Undefine everything, so we get a clean slate.  */	/* Undefine everything, so we get a clean slate.  */	file:///usr/include/features.h:118:1:118:52
"/* These are defined by the user (or the compiler)
   to specify the desired environment:

   __STRICT_ANSI__	ISO Standard C.
   _ISOC99_SOURCE	Extensions to ISO C89 from ISO C99.
   _ISOC11_SOURCE	Extensions to ISO C99 from ISO C11.
   __STDC_WANT_LIB_EXT2__
			Extensions to ISO C99 from TR 27431-2:2010.
   __STDC_WANT_IEC_60559_BFP_EXT__
			Extensions to ISO C11 from TS 18661-1:2014.
   __STDC_WANT_IEC_60559_FUNCS_EXT__
			Extensions to ISO C11 from TS 18661-4:2015.
   __STDC_WANT_IEC_60559_TYPES_EXT__
			Extensions to ISO C11 from TS 18661-3:2015.

   _POSIX_SOURCE	IEEE Std 1003.1.
   _POSIX_C_SOURCE	If ==1, like _POSIX_SOURCE; if >=2 add IEEE Std 1003.2;
			if >=199309L, add IEEE Std 1003.1b-1993;
			if >=199506L, add IEEE Std 1003.1c-1995;
			if >=200112L, all of IEEE 1003.1-2004
			if >=200809L, all of IEEE 1003.1-2008
   _XOPEN_SOURCE	Includes POSIX and XPG things.  Set to 500 if
			Single Unix conformance is wanted, to 600 for the
			sixth revision, to 700 for the seventh revision.
   _XOPEN_SOURCE_EXTENDED XPG things and X/Open Unix extensions.
   _LARGEFILE_SOURCE	Some more functions for correct standard I/O.
   _LARGEFILE64_SOURCE	Additional functionality from LFS for large files.
   _FILE_OFFSET_BITS=N	Select default filesystem interface.
   _ATFILE_SOURCE	Additional *at interfaces.
   _GNU_SOURCE		All of the above, plus GNU extensions.
   _DEFAULT_SOURCE	The default set of features (taking precedence over
			__STRICT_ANSI__).

   _FORTIFY_SOURCE	Add security hardening to many library functions.
			Set to 1 or 2; 2 performs stricter checks than 1.

   _REENTRANT, _THREAD_SAFE
			Obsolete; equivalent to _POSIX_C_SOURCE=199506L.

   The `-ansi' switch to the GNU C compiler, and standards conformance
   options such as `-std=c99', define __STRICT_ANSI__.  If none of
   these are defined, or if _DEFAULT_SOURCE is defined, the default is
   to have _POSIX_SOURCE set to one and _POSIX_C_SOURCE set to
   200809L, as well as enabling miscellaneous functions from BSD and
   SVID.  If more than one of these are defined, they accumulate.  For
   example __STRICT_ANSI__, _POSIX_SOURCE and _POSIX_C_SOURCE together
   give you ISO C, 1003.1, and 1003.2, but nothing else.

   These are defined by this file and are used by the
   header files to decide what to declare or define:

   __GLIBC_USE (F)	Define things from feature set F.  This is defined
			to 1 or 0; the subsequent macros are either defined
			or undefined, and those tests should be moved to
			__GLIBC_USE.
   __USE_ISOC11		Define ISO C11 things.
   __USE_ISOC99		Define ISO C99 things.
   __USE_ISOC95		Define ISO C90 AMD1 (C95) things.
   __USE_ISOCXX11	Define ISO C++11 things.
   __USE_POSIX		Define IEEE Std 1003.1 things.
   __USE_POSIX2		Define IEEE Std 1003.2 things.
   __USE_POSIX199309	Define IEEE Std 1003.1, and .1b things.
   __USE_POSIX199506	Define IEEE Std 1003.1, .1b, .1c and .1i things.
   __USE_XOPEN		Define XPG things.
   __USE_XOPEN_EXTENDED	Define X/Open Unix things.
   __USE_UNIX98		Define Single Unix V2 things.
   __USE_XOPEN2K        Define XPG6 things.
   __USE_XOPEN2KXSI     Define XPG6 XSI things.
   __USE_XOPEN2K8       Define XPG7 things.
   __USE_XOPEN2K8XSI    Define XPG7 XSI things.
   __USE_LARGEFILE	Define correct standard I/O things.
   __USE_LARGEFILE64	Define LFS things with separate names.
   __USE_FILE_OFFSET64	Define 64bit interface as default.
   __USE_MISC		Define things from 4.3BSD or System V Unix.
   __USE_ATFILE		Define *at interfaces and AT_* constants for them.
   __USE_GNU		Define GNU extensions.
   __USE_FORTIFY_LEVEL	Additional security measures used, according to level.

   The macros `__GNU_LIBRARY__', `__GLIBC__', and `__GLIBC_MINOR__' are
   defined by this file unconditionally.  `__GNU_LIBRARY__' is provided
   only for compatibility.  All new code should use the other symbols
   to test for features.

   All macros listed above as possibly being defined by this file are
   explicitly undefined if they are not explicitly defined.
   Feature-test macros that are not defined by the user or compiler
   but are implied by the other feature-test macros defined (or by the
   lack of any definitions) are defined by the file.

   ISO C feature test macros depend on the definition of the macro
   when an affected header is included, not when the first system
   header is included, and so they are handled in
   <bits/libc-header-start.h>, which does not have a multiple include
   guard.  Feature test macros that can be handled from the first
   system header included are handled here.  */"	"/* These are defined by the user (or the compiler)
   to specify the desired environment:

   __STRICT_ANSI__	ISO Standard C.
   _ISOC99_SOURCE	Extensions to ISO C89 from ISO C99.
   _ISOC11_SOURCE	Extensions to ISO C99 from ISO C11.
   __STDC_WANT_LIB_EXT2__
			Extensions to ISO C99 from TR 27431-2:2010.
   __STDC_WANT_IEC_60559_BFP_EXT__
			Extensions to ISO C11 from TS 18661-1:2014.
   __STDC_WANT_IEC_60559_FUNCS_EXT__
			Extensions to ISO C11 from TS 18661-4:2015.
   __STDC_WANT_IEC_60559_TYPES_EXT__
			Extensions to ISO C11 from TS 18661-3:2015.

   _POSIX_SOURCE	IEEE Std 1003.1.
   _POSIX_C_SOURCE	If ==1, like _POSIX_SOURCE; if >=2 add IEEE Std 1003.2;
			if >=199309L, add IEEE Std 1003.1b-1993;
			if >=199506L, add IEEE Std 1003.1c-1995;
			if >=200112L, all of IEEE 1003.1-2004
			if >=200809L, all of IEEE 1003.1-2008
   _XOPEN_SOURCE	Includes POSIX and XPG things.  Set to 500 if
			Single Unix conformance is wanted, to 600 for the
			sixth revision, to 700 for the seventh revision.
   _XOPEN_SOURCE_EXTENDED XPG things and X/Open Unix extensions.
   _LARGEFILE_SOURCE	Some more functions for correct standard I/O.
   _LARGEFILE64_SOURCE	Additional functionality from LFS for large files.
   _FILE_OFFSET_BITS=N	Select default filesystem interface.
   _ATFILE_SOURCE	Additional *at interfaces.
   _GNU_SOURCE		All of the above, plus GNU extensions.
   _DEFAULT_SOURCE	The default set of features (taking precedence over
			__STRICT_ANSI__).

   _FORTIFY_SOURCE	Add security hardening to many library functions.
			Set to 1 or 2; 2 performs stricter checks than 1.

   _REENTRANT, _THREAD_SAFE
			Obsolete; equivalent to _POSIX_C_SOURCE=199506L.

   The `-ansi' switch to the GNU C compiler, and standards conformance
   options such as `-std=c99', define __STRICT_ANSI__.  If none of
   these are defined, or if _DEFAULT_SOURCE is defined, the default is
   to have _POSIX_SOURCE set to one and _POSIX_C_SOURCE set to
   200809L, as well as enabling miscellaneous functions from BSD and
   SVID.  If more than one of these are defined, they accumulate.  For
   example __STRICT_ANSI__, _POSIX_SOURCE and _POSIX_C_SOURCE together
   give you ISO C, 1003.1, and 1003.2, but nothing else.

   These are defined by this file and are used by the
   header files to decide what to declare or define:

   __GLIBC_USE (F)	Define things from feature set F.  This is defined
			to 1 or 0; the subsequent macros are either defined
			or undefined, and those tests should be moved to
			__GLIBC_USE.
   __USE_ISOC11		Define ISO C11 things.
   __USE_ISOC99		Define ISO C99 things.
   __USE_ISOC95		Define ISO C90 AMD1 (C95) things.
   __USE_ISOCXX11	Define ISO C++11 things.
   __USE_POSIX		Define IEEE Std 1003.1 things.
   __USE_POSIX2		Define IEEE Std 1003.2 things.
   __USE_POSIX199309	Define IEEE Std 1003.1, and .1b things.
   __USE_POSIX199506	Define IEEE Std 1003.1, .1b, .1c and .1i things.
   __USE_XOPEN		Define XPG things.
   __USE_XOPEN_EXTENDED	Define X/Open Unix things.
   __USE_UNIX98		Define Single Unix V2 things.
   __USE_XOPEN2K        Define XPG6 things.
   __USE_XOPEN2KXSI     Define XPG6 XSI things.
   __USE_XOPEN2K8       Define XPG7 things.
   __USE_XOPEN2K8XSI    Define XPG7 XSI things.
   __USE_LARGEFILE	Define correct standard I/O things.
   __USE_LARGEFILE64	Define LFS things with separate names.
   __USE_FILE_OFFSET64	Define 64bit interface as default.
   __USE_MISC		Define things from 4.3BSD or System V Unix.
   __USE_ATFILE		Define *at interfaces and AT_* constants for them.
   __USE_GNU		Define GNU extensions.
   __USE_FORTIFY_LEVEL	Additional security measures used, according to level.

   The macros `__GNU_LIBRARY__', `__GLIBC__', and `__GLIBC_MINOR__' are
   defined by this file unconditionally.  `__GNU_LIBRARY__' is provided
   only for compatibility.  All new code should use the other symbols
   to test for features.

   All macros listed above as possibly being defined by this file are
   explicitly undefined if they are not explicitly defined.
   Feature-test macros that are not defined by the user or compiler
   but are implied by the other feature-test macros defined (or by the
   lack of any definitions) are defined by the file.

   ISO C feature test macros depend on the definition of the macro
   when an affected header is included, not when the first system
   header is included, and so they are handled in
   <bits/libc-header-start.h>, which does not have a multiple include
   guard.  Feature test macros that can be handled from the first
   system header included are handled here.  */"	file:///usr/include/features.h:21:1:115:47
"/* Copyright (C) 1991-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	"/* Copyright (C) 1991-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	file:///usr/include/features.h:1:1:16:38
"/* ISO/IEC TS 18661-3:2015 defines the
   __STDC_WANT_IEC_60559_TYPES_EXT__ macro.  */"	"/* ISO/IEC TS 18661-3:2015 defines the
   __STDC_WANT_IEC_60559_TYPES_EXT__ macro.  */"	file:///usr/include/x86_64-linux-gnu/bits/libc-header-start.h:63:1:64:47
"/* ISO/IEC TS 18661-4:2015 defines the
   __STDC_WANT_IEC_60559_FUNCS_EXT__ macro.  */"	"/* ISO/IEC TS 18661-4:2015 defines the
   __STDC_WANT_IEC_60559_FUNCS_EXT__ macro.  */"	file:///usr/include/x86_64-linux-gnu/bits/libc-header-start.h:54:1:55:47
"/* ISO/IEC TS 18661-1:2014 defines the __STDC_WANT_IEC_60559_BFP_EXT__
   macro.  */"	"/* ISO/IEC TS 18661-1:2014 defines the __STDC_WANT_IEC_60559_BFP_EXT__
   macro.  */"	file:///usr/include/x86_64-linux-gnu/bits/libc-header-start.h:45:1:46:13
"/* ISO/IEC TR 24731-2:2010 defines the __STDC_WANT_LIB_EXT2__
   macro.  */"	"/* ISO/IEC TR 24731-2:2010 defines the __STDC_WANT_LIB_EXT2__
   macro.  */"	file:///usr/include/x86_64-linux-gnu/bits/libc-header-start.h:35:1:36:13
"/* This header is internal to glibc and should not be included outside
   of glibc headers.  Headers including it must define
   __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION first.  This header
   cannot have multiple include guards because ISO C feature test
   macros depend on the definition of the macro when an affected
   header is included, not when the first system header is
   included.  */"	"/* This header is internal to glibc and should not be included outside
   of glibc headers.  Headers including it must define
   __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION first.  This header
   cannot have multiple include guards because ISO C feature test
   macros depend on the definition of the macro when an affected
   header is included, not when the first system header is
   included.  */"	file:///usr/include/x86_64-linux-gnu/bits/libc-header-start.h:19:1:25:16
"/* Handle feature test macros at the start of a header.
   Copyright (C) 2016-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	"/* Handle feature test macros at the start of a header.
   Copyright (C) 2016-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	file:///usr/include/x86_64-linux-gnu/bits/libc-header-start.h:1:1:17:38
"/* !_STDDEF_H && !_STDDEF_H_ && !_ANSI_STDDEF_H && !__STDDEF_H__
	  || __need_XXX was not defined before */"	"/* !_STDDEF_H && !_STDDEF_H_ && !_ANSI_STDDEF_H && !__STDDEF_H__
	  || __need_XXX was not defined before */"	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:450:8:451:42
/* _STDDEF_H was defined this time */	/* _STDDEF_H was defined this time */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:448:8:448:44
/* C++11.  */	/* C++11.  */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:446:8:446:20
/* C11 or C++11.  */	/* C11 or C++11.  */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:439:8:439:27
"/* _Float128 is defined as a basic type, so max_align_t must be
     sufficiently aligned for it.  This code must work in C++, so we
     use __float128 here; that is only available on some
     architectures, but only on i386 is extra alignment needed for
     __float128.  */"	"/* _Float128 is defined as a basic type, so max_align_t must be
     sufficiently aligned for it.  This code must work in C++, so we
     use __float128 here; that is only available on some
     architectures, but only on i386 is extra alignment needed for
     __float128.  */"	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:429:3:433:20
"/* Type whose alignment is supported in every context and is at least
   as great as that of any standard type not using alignment
   specifiers.  */"	"/* Type whose alignment is supported in every context and is at least
   as great as that of any standard type not using alignment
   specifiers.  */"	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:423:1:425:18
/* Offset of member MEMBER in a struct of type TYPE. */	/* Offset of member MEMBER in a struct of type TYPE. */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:416:1:416:55
/* NULL not defined and <stddef.h> or need NULL.  */	/* NULL not defined and <stddef.h> or need NULL.  */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:411:8:411:59
/* G++ */	/* G++ */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:410:9:410:17
/* C++ */	/* C++ */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:409:9:409:17
/* C++ */	/* C++ */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:407:9:407:17
/* G++ */	/* G++ */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:404:9:404:17
/* in case <stdio.h> has defined it. */	/* in case <stdio.h> has defined it. */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:401:14:401:52
/* A null pointer constant.  */	/* A null pointer constant.  */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:398:1:398:31
/* __sys_stdtypes_h */	/* __sys_stdtypes_h */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:396:8:396:29
/* _ANSI_H_ || _MACHINE_ANSI_H_ || _X86_64_ANSI_H_ || _I386_ANSI_H_ */	/* _ANSI_H_ || _MACHINE_ANSI_H_ || _X86_64_ANSI_H_ || _I386_ANSI_H_ */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:394:8:394:77
/*  The following ones are the real ones.  */	/*  The following ones are the real ones.  */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:381:1:381:45
"/*  The references to _GCC_PTRDIFF_T_, _GCC_SIZE_T_, and _GCC_WCHAR_T_
    are probably typos and should be removed before 2.8 is released.  */"	"/*  The references to _GCC_PTRDIFF_T_, _GCC_SIZE_T_, and _GCC_WCHAR_T_
    are probably typos and should be removed before 2.8 is released.  */"	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:367:1:368:72
/*  NetBSD 5 requires the I386_ANSI_H and X86_64_ANSI_H checks here.  */	/*  NetBSD 5 requires the I386_ANSI_H and X86_64_ANSI_H checks here.  */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:365:1:365:72
/*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */	/*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:364:1:364:76
"/*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */"	"/*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */"	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:362:1:363:28
/* _STDDEF_H or __need_wchar_t.  */	/* _STDDEF_H or __need_wchar_t.  */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:348:8:348:42
/* __wchar_t__ */	/* __wchar_t__ */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:346:8:346:24
/* __WCHAR_T__ */	/* __WCHAR_T__ */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:345:8:345:24
/* _BSD_RUNE_T_DEFINED_ */	/* _BSD_RUNE_T_DEFINED_ */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:337:8:337:33
/* _WCHAR_T_DECLARED */	/* _WCHAR_T_DECLARED */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:336:8:336:30
"/* FreeBSD 5 can't be handled well using ""traditional"" logic above
   since it no longer defines _BSD_RUNE_T_ yet still desires to export
   rune_t in some cases... */"	"/* FreeBSD 5 can't be handled well using ""traditional"" logic above
   since it no longer defines _BSD_RUNE_T_ yet still desires to export
   rune_t in some cases... */"	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:310:1:312:29
"/* Why is this file so hard to maintain properly?  In contrast to
   the comment above regarding BSD/386 1.1, on FreeBSD for as long
   as the symbol has existed, _BSD_RUNE_T_ must not stay defined or
   redundant typedefs will occur when stdlib.h is included after this file. */"	"/* Why is this file so hard to maintain properly?  In contrast to
   the comment above regarding BSD/386 1.1, on FreeBSD for as long
   as the symbol has existed, _BSD_RUNE_T_ must not stay defined or
   redundant typedefs will occur when stdlib.h is included after this file. */"	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:301:1:304:78
/* Darwin */	/* Darwin */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:299:30:299:41
"/* On BSD/386 1.1, at least, machine/ansi.h defines _BSD_WCHAR_T_
   instead of _WCHAR_T_, and _BSD_RUNE_T_ (which, unlike the other
   symbols in the _FOO_T_ family, stays defined even after its
   corresponding type is defined).  If we define wchar_t, then we
   must undef _WCHAR_T_; for BSD/386 1.1 (and perhaps others), if
   we undef _WCHAR_T_, then we must also define rune_t, since 
   headers like runetype.h assume that if machine/ansi.h is included,
   and _BSD_WCHAR_T_ is not defined, then rune_t is available.
   machine/ansi.h says, ""Note that _WCHAR_T_ and _RUNE_T_ must be of
   the same type."" */"	"/* On BSD/386 1.1, at least, machine/ansi.h defines _BSD_WCHAR_T_
   instead of _WCHAR_T_, and _BSD_RUNE_T_ (which, unlike the other
   symbols in the _FOO_T_ family, stays defined even after its
   corresponding type is defined).  If we define wchar_t, then we
   must undef _WCHAR_T_; for BSD/386 1.1 (and perhaps others), if
   we undef _WCHAR_T_, then we must also define rune_t, since 
   headers like runetype.h assume that if machine/ansi.h is included,
   and _BSD_WCHAR_T_ is not defined, then rune_t is available.
   machine/ansi.h says, ""Note that _WCHAR_T_ and _RUNE_T_ must be of
   the same type."" */"	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:283:1:292:21
/* Cray Unicos/Mk */	/* Cray Unicos/Mk */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:268:21:268:40
/* BeOS */	/* BeOS */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:267:21:267:30
/* FreeBSD 5 */	/* FreeBSD 5 */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:260:27:260:41
/* Darwin */	/* Darwin */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:259:30:259:41
/* Darwin */	/* Darwin */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:258:34:258:45
/* Cray Unicos/Mk */	/* Cray Unicos/Mk */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:251:21:251:40
/* BeOS */	/* BeOS */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:250:21:250:30
"/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */"	"/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */"	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:247:1:248:45
"/* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */"	"/* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */"	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:242:1:245:66
/* _STDDEF_H or __need_size_t.  */	/* _STDDEF_H or __need_size_t.  */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:239:8:239:41
/* __size_t__ */	/* __size_t__ */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:237:8:237:23
/* __SIZE_T__ */	/* __SIZE_T__ */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:236:8:236:23
/* _SIZE_T */	/* _SIZE_T */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:235:8:235:20
/* _SYS_SIZE_T_H */	/* _SYS_SIZE_T_H */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:234:8:234:26
/* _T_SIZE_ */	/* _T_SIZE_ */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:233:8:233:21
/* _T_SIZE */	/* _T_SIZE */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:232:8:232:20
/* __SIZE_T */	/* __SIZE_T */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:231:8:231:21
/* _SIZE_T_ */	/* _SIZE_T_ */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:230:8:230:21
/* _BSD_SIZE_T_ */	/* _BSD_SIZE_T_ */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:229:8:229:25
/* _SIZE_T_DEFINED_ */	/* _SIZE_T_DEFINED_ */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:228:8:228:29
/* _SIZE_T_DEFINED */	/* _SIZE_T_DEFINED */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:227:8:227:28
/* _BSD_SIZE_T_DEFINED_ */	/* _BSD_SIZE_T_DEFINED_ */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:226:8:226:33
/* _SIZE_T_DECLARED */	/* _SIZE_T_DECLARED */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:225:8:225:29
/* ___int_size_t_h */	/* ___int_size_t_h */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:224:8:224:28
/* _GCC_SIZE_T */	/* _GCC_SIZE_T */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:223:8:223:24
/* _SIZET_ */	/* _SIZET_ */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:222:8:222:20
/* __size_t */	/* __size_t */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:221:8:221:21
/* !(defined (__GNUG__) && defined (size_t)) */	/* !(defined (__GNUG__) && defined (size_t)) */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:220:8:220:54
/* __BEOS__ */	/* __BEOS__ */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:219:8:219:21
/* __size_t is also a typedef on VMS.  */	/* __size_t is also a typedef on VMS.  */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:208:1:208:41
/* __size_t is a typedef on FreeBSD 5, must not trash it. */	/* __size_t is a typedef on FreeBSD 5, must not trash it. */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:206:1:206:60
/* FreeBSD 5 */	/* FreeBSD 5 */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:199:26:199:40
/* Darwin */	/* Darwin */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:198:30:198:41
/* Cray Unicos/Mk */	/* Cray Unicos/Mk */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:188:20:188:39
/* BeOS */	/* BeOS */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:187:20:187:29
/* FreeBSD 5 */	/* FreeBSD 5 */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:182:26:182:40
/* Darwin */	/* Darwin */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:181:30:181:41
/* in case <sys/types.h> has defined it. */	/* in case <sys/types.h> has defined it. */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:172:17:172:59
/* Cray Unicos/Mk */	/* Cray Unicos/Mk */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:171:20:171:39
/* BeOS */	/* BeOS */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:170:20:170:29
"/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */"	"/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */"	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:167:1:168:45
/* Unsigned type of `sizeof' something.  */	/* Unsigned type of `sizeof' something.  */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:165:1:165:43
/* _STDDEF_H or __need_ptrdiff_t.  */	/* _STDDEF_H or __need_ptrdiff_t.  */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:163:8:163:44
/* If this symbol has done its job, get rid of it.  */	/* If this symbol has done its job, get rid of it.  */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:160:1:160:54
/* _PTRDIFF_T */	/* _PTRDIFF_T */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:158:8:158:23
/* _T_PTRDIFF_ */	/* _T_PTRDIFF_ */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:157:8:157:24
/* _T_PTRDIFF */	/* _T_PTRDIFF */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:156:8:156:23
/* __PTRDIFF_T */	/* __PTRDIFF_T */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:155:8:155:24
/* _PTRDIFF_T_ */	/* _PTRDIFF_T_ */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:154:8:154:24
/* _BSD_PTRDIFF_T_ */	/* _BSD_PTRDIFF_T_ */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:153:8:153:28
/* ___int_ptrdiff_t_h */	/* ___int_ptrdiff_t_h */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:152:8:152:31
/* _GCC_PTRDIFF_T */	/* _GCC_PTRDIFF_T */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:151:8:151:27
/* _PTRDIFF_T_DECLARED */	/* _PTRDIFF_T_DECLARED */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:150:8:150:32
/* DragonFly */	/* DragonFly */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:136:29:136:43
/* in case <sys/types.h> has defined it. */	/* in case <sys/types.h> has defined it. */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:128:20:128:62
"/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */"	"/* Define this type if we are doing the whole job,
   or if we want this type in particular.  */"	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:125:1:126:45
/* Signed type of difference of two pointers.  */	/* Signed type of difference of two pointers.  */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:123:1:123:49
"/* In case nobody has defined these types, but we aren't running under
   GCC 2.00, make sure that __PTRDIFF_TYPE__, __SIZE_TYPE__, and
   __WCHAR_TYPE__ have reasonable values.  This can happen if the
   parts of GCC is compiled by an older compiler, that actually
   include gstddef.h, such as collect2.  */"	"/* In case nobody has defined these types, but we aren't running under
   GCC 2.00, make sure that __PTRDIFF_TYPE__, __SIZE_TYPE__, and
   __WCHAR_TYPE__ have reasonable values.  This can happen if the
   parts of GCC is compiled by an older compiler, that actually
   include gstddef.h, such as collect2.  */"	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:117:1:121:43
"/* On VxWorks, <type/vxTypesBase.h> may have defined macros like
   _TYPE_size_t which will typedef size_t.  fixincludes patched the
   vxTypesBase.h so that this macro is only defined if _GCC_SIZE_T is
   not defined, and so that defining this macro defines _GCC_SIZE_T.
   If we find that the macros are still defined at this point, we must
   invoke them so that the type is defined as expected.  */"	"/* On VxWorks, <type/vxTypesBase.h> may have defined macros like
   _TYPE_size_t which will typedef size_t.  fixincludes patched the
   vxTypesBase.h so that this macro is only defined if _GCC_SIZE_T is
   not defined, and so that defining this macro defines _GCC_SIZE_T.
   If we find that the macros are still defined at this point, we must
   invoke them so that the type is defined as expected.  */"	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:98:1:103:59
"/* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
   Just ignore it.  */"	"/* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
   Just ignore it.  */"	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:92:1:93:22
/* defined(_ANSI_H_) || defined(_MACHINE_ANSI_H_) || defined(_X86_64_ANSI_H_) || defined(_I386_ANSI_H_) */	/* defined(_ANSI_H_) || defined(_MACHINE_ANSI_H_) || defined(_X86_64_ANSI_H_) || defined(_I386_ANSI_H_) */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:90:8:90:113
/* Undef _FOO_T_ if we are supposed to define foo_t.  */	/* Undef _FOO_T_ if we are supposed to define foo_t.  */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:77:1:77:56
"/* On BSD/386 1.1, at least, machine/ansi.h defines _BSD_WCHAR_T_
   instead of _WCHAR_T_. */"	"/* On BSD/386 1.1, at least, machine/ansi.h defines _BSD_WCHAR_T_
   instead of _WCHAR_T_. */"	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:70:1:71:27
"/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which are
   defined if the corresponding type is *not* defined.
   FreeBSD-2.1 defines _MACHINE_ANSI_H_ instead of _ANSI_H_.
   NetBSD defines _I386_ANSI_H_ and _X86_64_ANSI_H_ instead of _ANSI_H_ */"	"/* In 4.3bsd-net2, machine/ansi.h defines these symbols, which are
   defined if the corresponding type is *not* defined.
   FreeBSD-2.1 defines _MACHINE_ANSI_H_ instead of _ANSI_H_.
   NetBSD defines _I386_ANSI_H_ and _X86_64_ANSI_H_ instead of _ANSI_H_ */"	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:59:1:62:74
/* On FreeBSD 5, machine/ansi.h does not exist anymore... */	/* On FreeBSD 5, machine/ansi.h does not exist anymore... */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:54:1:54:60
"/* On 4.3bsd-net2, make sure ansi.h is included, so we have
   one less case to deal with in the following.  */"	"/* On 4.3bsd-net2, make sure ansi.h is included, so we have
   one less case to deal with in the following.  */"	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:49:1:50:51
"/* This avoids lossage on SunOS but only if stdtypes.h comes first.
   There's no way to win with the other order!  Sun lossage.  */"	"/* This avoids lossage on SunOS but only if stdtypes.h comes first.
   There's no way to win with the other order!  Sun lossage.  */"	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:46:1:47:64
/* snaroff@next.com says the NeXT needs this.  */	/* snaroff@next.com says the NeXT needs this.  */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:41:1:41:49
"/* Any one of these symbols __need_* means that GNU libc
   wants us just to define one data type.  So don't define
   the symbols that indicate this file's entire job has been done.  */"	"/* Any one of these symbols __need_* means that GNU libc
   wants us just to define one data type.  So don't define
   the symbols that indicate this file's entire job has been done.  */"	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:33:1:35:70
"/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */"	"/*
 * ISO C Standard:  7.17  Common definitions  <stddef.h>
 */"	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:24:1:26:3
"/* Copyright (C) 1989-2017 Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */"	"/* Copyright (C) 1989-2017 Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */"	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stddef.h:1:1:22:35
/* bits/typesizes.h */	/* bits/typesizes.h */	file:///usr/include/x86_64-linux-gnu/bits/typesizes.h:95:8:95:29
/* Number of descriptors that can fit in an `fd_set'.  */	/* Number of descriptors that can fit in an `fd_set'.  */	file:///usr/include/x86_64-linux-gnu/bits/typesizes.h:91:1:91:57
/* And for __rlim_t and __rlim64_t.  */	/* And for __rlim_t and __rlim64_t.  */	file:///usr/include/x86_64-linux-gnu/bits/typesizes.h:85:1:85:39
/* Same for ino_t and ino64_t.  */	/* Same for ino_t and ino64_t.  */	file:///usr/include/x86_64-linux-gnu/bits/typesizes.h:82:1:82:34
"/* Tell the libc code that off_t and off64_t are actually the same type
   for all ABI purposes, even if possibly expressed as different base types
   for C type-checking purposes.  */"	"/* Tell the libc code that off_t and off64_t are actually the same type
   for all ABI purposes, even if possibly expressed as different base types
   for C type-checking purposes.  */"	file:///usr/include/x86_64-linux-gnu/bits/typesizes.h:77:1:79:36
/* X32 kernel interface is 64-bit.  */	/* X32 kernel interface is 64-bit.  */	file:///usr/include/x86_64-linux-gnu/bits/typesizes.h:29:1:29:38
"/* See <bits/types.h> for the meaning of these macros.  This file exists so
   that <bits/types.h> need not vary across different GNU platforms.  */"	"/* See <bits/types.h> for the meaning of these macros.  This file exists so
   that <bits/types.h> need not vary across different GNU platforms.  */"	file:///usr/include/x86_64-linux-gnu/bits/typesizes.h:26:1:27:72
"/* bits/typesizes.h -- underlying types for *_t.  Linux/x86-64 version.
   Copyright (C) 2012-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	"/* bits/typesizes.h -- underlying types for *_t.  Linux/x86-64 version.
   Copyright (C) 2012-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	file:///usr/include/x86_64-linux-gnu/bits/typesizes.h:1:1:17:38
/* bits/types.h */	/* bits/types.h */	file:///usr/include/x86_64-linux-gnu/bits/types.h:206:8:206:25
"/* C99: An integer type that can be accessed as an atomic entity,
   even in the presence of asynchronous interrupts.
   It is not currently necessary for this to be machine-specific.  */"	"/* C99: An integer type that can be accessed as an atomic entity,
   even in the presence of asynchronous interrupts.
   It is not currently necessary for this to be machine-specific.  */"	file:///usr/include/x86_64-linux-gnu/bits/types.h:199:1:201:69
/* Duplicate info from sys/socket.h.  */	/* Duplicate info from sys/socket.h.  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:196:1:196:40
/* Duplicates info from stdint.h but this is used in unistd.h.  */	/* Duplicates info from stdint.h but this is used in unistd.h.  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:193:1:193:66
/* Type of file sizes and offsets (LFS).  */	/* Type of file sizes and offsets (LFS).  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:190:29:190:72
"/* These few don't really vary by system, they always correspond
   to one of the other defined types.  */"	"/* These few don't really vary by system, they always correspond
   to one of the other defined types.  */"	file:///usr/include/x86_64-linux-gnu/bits/types.h:188:1:189:41
/* Unsigned long type used in system calls.  */	/* Unsigned long type used in system calls.  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:185:1:185:47
/* Signed long type used in system calls.  */	/* Signed long type used in system calls.  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:183:1:183:45
/* Type of a byte count, or error.  */	/* Type of a byte count, or error.  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:181:38:181:75
/* Type of miscellaneous file system fields.  */	/* Type of miscellaneous file system fields.  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:178:1:178:48
/* Type to count file system nodes.  */	/* Type to count file system nodes.  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:174:1:174:39
/* Type to count file system blocks.  */	/* Type to count file system blocks.  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:170:1:170:40
/* Type to count number of disk blocks.  */	/* Type to count number of disk blocks.  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:166:1:166:43
/* Types from the Large File Support interface.  */	/* Types from the Large File Support interface.  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:164:1:164:51
/* Type to represent block size.  */	/* Type to represent block size.  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:161:1:161:36
/* Timer ID returned by `timer_create'.  */	/* Timer ID returned by `timer_create'.  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:158:1:158:43
/* Clock ID used in clock and timer functions.  */	/* Clock ID used in clock and timer functions.  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:155:1:155:50
/* Type of an IPC key.  */	/* Type of an IPC key.  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:153:34:153:59
/* The type of a disk address.  */	/* The type of a disk address.  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:152:38:152:71
/* Signed count of microseconds.  */	/* Signed count of microseconds.  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:150:46:150:81
/* Count of microseconds.  */	/* Count of microseconds.  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:149:44:149:72
/* Seconds since the Epoch.  */	/* Seconds since the Epoch.  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:148:36:148:66
/* General type for IDs.  */	/* General type for IDs.  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:147:33:147:60
/* Type for resource measurement (LFS).  */	/* Type for resource measurement (LFS).  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:146:40:146:82
/* Type for resource measurement.  */	/* Type for resource measurement.  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:145:36:145:72
/* Type of CPU usage counts.  */	/* Type of CPU usage counts.  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:144:38:144:69
/* Type of file system IDs.  */	/* Type of file system IDs.  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:143:36:143:66
/* Type of process identifications.  */	/* Type of process identifications.  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:142:34:142:72
/* Type of file sizes and offsets (LFS).  */	/* Type of file sizes and offsets (LFS).  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:141:38:141:81
/* Type of file sizes and offsets.  */	/* Type of file sizes and offsets.  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:140:34:140:71
/* Type of file link counts.  */	/* Type of file link counts.  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:139:38:139:69
/* Type of file attribute bitmasks.  */	/* Type of file attribute bitmasks.  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:138:36:138:74
/* Type of file serial numbers (LFS).*/	/* Type of file serial numbers (LFS).*/	file:///usr/include/x86_64-linux-gnu/bits/types.h:137:38:137:76
/* Type of file serial numbers.  */	/* Type of file serial numbers.  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:136:34:136:68
/* Type of group identifications.  */	/* Type of group identifications.  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:135:34:135:70
/* Type of user identifications.  */	/* Type of user identifications.  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:134:34:134:69
/* Type of device numbers.  */	/* Type of device numbers.  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:133:34:133:63
/* Defines __*_T_TYPE macros.  */	/* Defines __*_T_TYPE macros.  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:130:29:130:61
/* No need to mark the typedef with __extension__.   */	/* No need to mark the typedef with __extension__.   */	file:///usr/include/x86_64-linux-gnu/bits/types.h:125:1:125:55
"/* We want __extension__ before typedef's that use nonstandard base types
   such as `long long' in C89 mode.  */"	"/* We want __extension__ before typedef's that use nonstandard base types
   such as `long long' in C89 mode.  */"	file:///usr/include/x86_64-linux-gnu/bits/types.h:113:1:114:39
"/* The machine-dependent file <bits/typesizes.h> defines __*_T_TYPE
   macros for each of the OS types we define below.  The definitions
   of those macros must use the following macros for underlying types.
   We define __S<SIZE>_TYPE and __U<SIZE>_TYPE for the signed and unsigned
   variants of each of the following integer types on this machine.

	16		-- ""natural"" 16-bit type (always short)
	32		-- ""natural"" 32-bit type (always int)
	64		-- ""natural"" 64-bit type (long or long long)
	LONG32		-- 32-bit type, traditionally long
	QUAD		-- 64-bit type, always long long
	WORD		-- natural type of __WORDSIZE bits (int or long)
	LONGWORD	-- type of __WORDSIZE bits, traditionally long

   We distinguish WORD/LONGWORD, 32/LONG32, and 64/QUAD so that the
   conventional uses of `long' or `long long' type modifiers match the
   types we define, even when a less-adorned type would be the same size.
   This matters for (somewhat) portably writing printf/scanf formats for
   these types, where using the appropriate l or ll format modifiers can
   make the typedefs and the formats match up across all GNU platforms.  If
   we used `long' when it's 64 bits where `long long' is expected, then the
   compiler would warn about the formats not matching the argument types,
   and the programmer changing them to shut up the compiler would break the
   program's portability.

   Here we assume what is presently the case in all the GCC configurations
   we support: long long is always 64 bits, long is always word/address size,
   and int is always 32 bits.  */"	"/* The machine-dependent file <bits/typesizes.h> defines __*_T_TYPE
   macros for each of the OS types we define below.  The definitions
   of those macros must use the following macros for underlying types.
   We define __S<SIZE>_TYPE and __U<SIZE>_TYPE for the signed and unsigned
   variants of each of the following integer types on this machine.

	16		-- ""natural"" 16-bit type (always short)
	32		-- ""natural"" 32-bit type (always int)
	64		-- ""natural"" 64-bit type (long or long long)
	LONG32		-- 32-bit type, traditionally long
	QUAD		-- 64-bit type, always long long
	WORD		-- natural type of __WORDSIZE bits (int or long)
	LONGWORD	-- type of __WORDSIZE bits, traditionally long

   We distinguish WORD/LONGWORD, 32/LONG32, and 64/QUAD so that the
   conventional uses of `long' or `long long' type modifiers match the
   types we define, even when a less-adorned type would be the same size.
   This matters for (somewhat) portably writing printf/scanf formats for
   these types, where using the appropriate l or ll format modifiers can
   make the typedefs and the formats match up across all GNU platforms.  If
   we used `long' when it's 64 bits where `long long' is expected, then the
   compiler would warn about the formats not matching the argument types,
   and the programmer changing them to shut up the compiler would break the
   program's portability.

   Here we assume what is presently the case in all the GCC configurations
   we support: long long is always 64 bits, long is always word/address size,
   and int is always 32 bits.  */"	file:///usr/include/x86_64-linux-gnu/bits/types.h:69:1:96:33
/* Largest integral types.  */	/* Largest integral types.  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:59:1:59:30
/* quad_t is also 64 bits.  */	/* quad_t is also 64 bits.  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:50:1:50:30
/* Fixed-size types, underlying types depend on word size and compiler.  */	/* Fixed-size types, underlying types depend on word size and compiler.  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:35:1:35:75
/* Convenience types.  */	/* Convenience types.  */	file:///usr/include/x86_64-linux-gnu/bits/types.h:29:1:29:25
"/*
 * Never include this file directly; use <sys/types.h> instead.
 */"	"/*
 * Never include this file directly; use <sys/types.h> instead.
 */"	file:///usr/include/x86_64-linux-gnu/bits/types.h:19:1:21:3
"/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	"/* bits/types.h -- definitions of __*_t types underlying *_t types.
   Copyright (C) 2002-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	file:///usr/include/x86_64-linux-gnu/bits/types.h:1:1:17:38
/* The opaque type of streams.  This is the definition used elsewhere.  */	/* The opaque type of streams.  This is the definition used elsewhere.  */	file:///usr/include/x86_64-linux-gnu/bits/types/FILE.h:6:1:6:74
/* Value so far.  */	/* Value so far.  */	file:///usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:20:15:20:34
/* Conversion state information.  */	/* Conversion state information.  */	file:///usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:12:1:12:36
"/* Integral type unchanged by default argument promotions that can
   hold any value corresponding to members of the extended character
   set, as well as at least one value that does not correspond to any
   member of the extended character set.  */"	"/* Integral type unchanged by default argument promotions that can
   hold any value corresponding to members of the extended character
   set, as well as at least one value that does not correspond to any
   member of the extended character set.  */"	file:///usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h:4:1:7:44
/* bits/_G_config.h */	/* bits/_G_config.h */	file:///usr/include/x86_64-linux-gnu/bits/_G_config.h:63:8:63:29
/* This is defined by <bits/stat.h> if `st_blksize' exists.  */	/* This is defined by <bits/stat.h> if `st_blksize' exists.  */	file:///usr/include/x86_64-linux-gnu/bits/_G_config.h:58:1:58:63
/* These library features are always available in the GNU C library.  */	/* These library features are always available in the GNU C library.  */	file:///usr/include/x86_64-linux-gnu/bits/_G_config.h:50:1:50:72
/* Define types for libio in terms of the standard internal type names.  */	/* Define types for libio in terms of the standard internal type names.  */	file:///usr/include/x86_64-linux-gnu/bits/_G_config.h:11:1:11:75
"/* This file is needed by libio to define various configuration parameters.
   These are always the same in the GNU C library.  */"	"/* This file is needed by libio to define various configuration parameters.
   These are always the same in the GNU C library.  */"	file:///usr/include/x86_64-linux-gnu/bits/_G_config.h:1:1:2:54
/* not _STDARG_H */	/* not _STDARG_H */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h:127:8:127:26
/* not _ANSI_STDARG_H_ */	/* not _ANSI_STDARG_H_ */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h:126:8:126:32
/* _STDARG_H */	/* _STDARG_H */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h:124:8:124:22
/* not __svr4__ */	/* not __svr4__ */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h:122:8:122:25
/* not _VA_LIST_, except on certain systems */	/* not _VA_LIST_, except on certain systems */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h:120:8:120:53
/* not _VA_LIST_DEFINED */	/* not _VA_LIST_DEFINED */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h:103:8:103:33
/* not _VA_LIST */	/* not _VA_LIST */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h:102:8:102:25
/* not _VA_LIST_T_H */	/* not _VA_LIST_T_H */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h:101:8:101:29
/* not __va_list__ */	/* not __va_list__ */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h:100:8:100:28
/* The macro __va_list__ is used by BeOS.  */	/* The macro __va_list__ is used by BeOS.  */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h:97:1:97:45
/* The macro _VA_LIST_T_H is used in the Bull dpx2  */	/* The macro _VA_LIST_T_H is used in the Bull dpx2  */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h:95:1:95:54
/* The macro _VA_LIST is used in SCO Unix 3.2.  */	/* The macro _VA_LIST is used in SCO Unix 3.2.  */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h:93:1:93:50
/* The macro _VA_LIST_DEFINED is used in Windows NT 3.5  */	/* The macro _VA_LIST_DEFINED is used in Windows NT 3.5  */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h:91:1:91:59
"/* The macro _VA_LIST_ is the same thing used by this file in Ultrix.
   But on BSD NET2 we must not test or define or undef it.
   (Note that the comments in NET 2's ansi.h
   are incorrect for _VA_LIST_--see stdio.h!)  */"	"/* The macro _VA_LIST_ is the same thing used by this file in Ultrix.
   But on BSD NET2 we must not test or define or undef it.
   (Note that the comments in NET 2's ansi.h
   are incorrect for _VA_LIST_--see stdio.h!)  */"	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h:86:1:89:49
/* not __svr4__ || _SCO_DS */	/* not __svr4__ || _SCO_DS */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h:84:7:84:35
/* _VA_LIST_ */	/* _VA_LIST_ */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h:83:8:83:22
/* __i860__ */	/* __i860__ */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h:78:8:78:21
"/* SVR4.2 uses _VA_LIST for an internal alias for va_list,
   so we must avoid testing it and setting it here.
   SVR4 uses _VA_LIST as a flag in stdarg.h, but we should
   have no conflict with that.  */"	"/* SVR4.2 uses _VA_LIST for an internal alias for va_list,
   so we must avoid testing it and setting it here.
   SVR4 uses _VA_LIST as a flag in stdarg.h, but we should
   have no conflict with that.  */"	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h:68:1:71:34
"/* We deliberately do not define va_list when called from
   stdio.h, because ANSI C says that stdio.h is not supposed to define
   va_list.  stdio.h needs to have access to that data type, 
   but must not use that name.  It should use the name __gnuc_va_list,
   which is safe because it is reserved for the implementation.  */"	"/* We deliberately do not define va_list when called from
   stdio.h, because ANSI C says that stdio.h is not supposed to define
   va_list.  stdio.h needs to have access to that data type, 
   but must not use that name.  It should use the name __gnuc_va_list,
   which is safe because it is reserved for the implementation.  */"	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h:57:1:61:67
/* Define va_list, if desired, from __gnuc_va_list. */	/* Define va_list, if desired, from __gnuc_va_list. */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h:56:1:56:54
"/* Define the standard macros for the user,
   if this invocation was from the user program.  */"	"/* Define the standard macros for the user,
   if this invocation was from the user program.  */"	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h:43:1:44:52
/* Define __gnuc_va_list.  */	/* Define __gnuc_va_list.  */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h:36:1:36:29
/* not __need___va_list */	/* not __need___va_list */	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h:33:8:33:33
"/*
 * ISO C Standard:  7.15  Variable arguments  <stdarg.h>
 */"	"/*
 * ISO C Standard:  7.15  Variable arguments  <stdarg.h>
 */"	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h:24:1:26:3
"/* Copyright (C) 1989-2017 Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */"	"/* Copyright (C) 1989-2017 Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */"	file:///usr/lib/gcc/x86_64-linux-gnu/7/include/stdarg.h:1:1:22:35
/* _BITS_LIBIO_H */	/* _BITS_LIBIO_H */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:527:8:527:26
/* We know that all we have to do is to set the flag.  */	/* We know that all we have to do is to set the flag.  */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:500:5:500:61
"/* A special optimized version of the function above.  It optimizes the
   case of initializing an unoriented byte stream.  */"	"/* A special optimized version of the function above.  It optimizes the
   case of initializing an unoriented byte stream.  */"	file:///usr/include/x86_64-linux-gnu/bits/libio.h:493:1:494:54
"/* While compiling glibc we have to handle compatibility with very old
   versions.  */"	"/* While compiling glibc we have to handle compatibility with very old
   versions.  */"	file:///usr/include/x86_64-linux-gnu/bits/libio.h:479:1:480:16
/**/	/**/	file:///usr/include/x86_64-linux-gnu/bits/libio.h:456:39:456:42
/**/	/**/	file:///usr/include/x86_64-linux-gnu/bits/libio.h:453:45:453:48
/**/	/**/	file:///usr/include/x86_64-linux-gnu/bits/libio.h:451:31:451:34
/**/	/**/	file:///usr/include/x86_64-linux-gnu/bits/libio.h:450:30:450:33
/**/	/**/	file:///usr/include/x86_64-linux-gnu/bits/libio.h:449:28:449:31
/* This one is for Emacs. */	/* This one is for Emacs. */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:440:1:440:28
/* Initialize one of those.  */	/* Initialize one of those.  */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:379:1:379:31
/* Close file.  */	/* Close file.  */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:373:26:373:43
/* Seek/tell file position.  */	/* Seek/tell file position.  */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:372:24:372:54
/* Write bytes.  */	/* Write bytes.  */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:371:26:371:44
/* Read bytes.  */	/* Read bytes.  */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:370:24:370:41
/* The structure with the cookie function pointers.  */	/* The structure with the cookie function pointers.  */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:367:1:367:55
/* User-visible names for the above.  */	/* User-visible names for the above.  */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:361:1:361:40
/* Close COOKIE.  */	/* Close COOKIE.  */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:356:1:356:20
"/* Move COOKIE's file position to *POS bytes from the
   beginning of the file (if W is SEEK_SET),
   the current position (if W is SEEK_CUR),
   or the end of the file (if W is SEEK_END).
   Set *POS to the new file position.
   Returns zero if successful, nonzero if not.  */"	"/* Move COOKIE's file position to *POS bytes from the
   beginning of the file (if W is SEEK_SET),
   the current position (if W is SEEK_CUR),
   or the end of the file (if W is SEEK_END).
   Set *POS to the new file position.
   Returns zero if successful, nonzero if not.  */"	file:///usr/include/x86_64-linux-gnu/bits/libio.h:348:1:353:50
"/* Write N bytes pointed to by BUF to COOKIE.  Write all N bytes
   unless there is an error.  Return number of bytes written.  If
   there is an error, return 0 and do not write anything.  If the file
   has been opened for append (__mode.__append set), then set the file
   pointer to the end of the file and then do the write; if not, just
   write at the current file pointer.  */"	"/* Write N bytes pointed to by BUF to COOKIE.  Write all N bytes
   unless there is an error.  Return number of bytes written.  If
   there is an error, return 0 and do not write anything.  If the file
   has been opened for append (__mode.__append set), then set the file
   pointer to the end of the file and then do the write; if not, just
   write at the current file pointer.  */"	file:///usr/include/x86_64-linux-gnu/bits/libio.h:339:1:344:41
"/* Read NBYTES bytes from COOKIE into a buffer pointed to by BUF.
   Return number of bytes read.  */"	"/* Read NBYTES bytes from COOKIE into a buffer pointed to by BUF.
   Return number of bytes read.  */"	file:///usr/include/x86_64-linux-gnu/bits/libio.h:335:1:336:35
/* Functions to do I/O and file management for a stream.  */	/* Functions to do I/O and file management for a stream.  */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:333:1:333:60
/* Make sure we don't get into trouble again.  */	/* Make sure we don't get into trouble again.  */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:308:3:308:51
/* Wide character stream stuff.  */	/* Wide character stream stuff.  */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:295:3:295:37
/*  char* _save_gptr;  char* _save_egptr; */	/*  char* _save_gptr;  char* _save_egptr; */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:282:3:282:46
/* 1+column number of pbase(); 0 is unknown. */	/* 1+column number of pbase(); 0 is unknown. */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:277:3:277:49
/* temporary */	/* temporary */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:276:23:276:37
/* This used to be _offset but it's too small.  */	/* This used to be _offset but it's too small.  */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:274:26:274:75
/* Pointer to end of non-current get area. */	/* Pointer to end of non-current get area. */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:262:23:262:67
/* Pointer to first valid character of backup area */	/* Pointer to first valid character of backup area */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:261:27:261:79
/* Pointer to start of non-current get area. */	/* Pointer to start of non-current get area. */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:260:24:260:70
/* The following fields are used to support backing up and undo. */	/* The following fields are used to support backing up and undo. */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:259:3:259:69
/* End of reserve area. */	/* End of reserve area. */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:258:22:258:47
/* Start of reserve area. */	/* Start of reserve area. */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:257:23:257:50
/* End of put area. */	/* End of put area. */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:256:24:256:45
/* Current put pointer. */	/* Current put pointer. */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:255:24:255:49
/* Start of put area. */	/* Start of put area. */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:254:25:254:48
/* Start of putback+get area. */	/* Start of putback+get area. */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:253:24:253:55
/* End of get area. */	/* End of get area. */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:252:23:252:44
/* Current read pointer */	/* Current read pointer */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:251:23:251:48
/* Note:  Tk uses the _IO_read_ptr and _IO_read_end fields directly. */	/* Note:  Tk uses the _IO_read_ptr and _IO_read_end fields directly. */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:250:3:250:73
/* The following pointers correspond to the C++ streambuf protocol. */	/* The following pointers correspond to the C++ streambuf protocol. */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:249:3:249:72
/* High-order word is _IO_MAGIC; rest is flags. */	/* High-order word is _IO_MAGIC; rest is flags. */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:246:16:246:65
/* Pointer to end of non-current get area. */	/* Pointer to end of non-current get area. */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:233:26:233:70
"/* Pointer to first valid character of
				   backup area */"	"/* Pointer to first valid character of
				   backup area */"	file:///usr/include/x86_64-linux-gnu/bits/libio.h:231:29:232:21
/* Pointer to start of non-current get area. */	/* Pointer to start of non-current get area. */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:230:27:230:73
/* The following fields are used to support backing up and undo. */	/* The following fields are used to support backing up and undo. */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:229:3:229:69
/* End of reserve area. */	/* End of reserve area. */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:228:26:228:51
/* Start of reserve area. */	/* Start of reserve area. */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:227:26:227:53
/* End of put area. */	/* End of put area. */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:226:27:226:48
/* Current put pointer. */	/* Current put pointer. */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:225:27:225:52
/* Start of put area. */	/* Start of put area. */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:224:28:224:51
/* Start of putback+get area. */	/* Start of putback+get area. */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:223:27:223:58
/* End of get area. */	/* End of get area. */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:222:26:222:47
/* Current read pointer */	/* Current read pointer */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:221:26:221:51
/* Extra data for wide character streams.  */	/* Extra data for wide character streams.  */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:218:1:218:45
"/* The order of the elements in the following struct must match the order
   of the virtual functions in the libstdc++ codecvt class.  */"	"/* The order of the elements in the following struct must match the order
   of the virtual functions in the libstdc++ codecvt class.  */"	file:///usr/include/x86_64-linux-gnu/bits/libio.h:189:1:190:63
/* This is the structure from the libstdc++ codecvt class.  */	/* This is the structure from the libstdc++ codecvt class.  */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:179:1:179:62
/* if _pos < 0, it points to _buf->eBptr()+_pos. FIXME comment */	/* if _pos < 0, it points to _buf->eBptr()+_pos. FIXME comment */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:165:3:165:67
"/* If _pos >= 0
 it points to _buf->Gbase()+_pos. FIXME comment */"	"/* If _pos >= 0
 it points to _buf->Gbase()+_pos. FIXME comment */"	file:///usr/include/x86_64-linux-gnu/bits/libio.h:163:3:164:50
/* A streammarker remembers a position in a buffer. */	/* A streammarker remembers a position in a buffer. */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:158:1:158:54
"/* During the build of glibc itself, _IO_lock_t will already have been
   defined by internal headers.  */"	"/* During the build of glibc itself, _IO_lock_t will already have been
   defined by internal headers.  */"	file:///usr/include/x86_64-linux-gnu/bits/libio.h:151:1:152:35
"/* These are ""formatting flags"" matching the iostream fmtflags enum values. */"	"/* These are ""formatting flags"" matching the iostream fmtflags enum values. */"	file:///usr/include/x86_64-linux-gnu/bits/libio.h:129:1:129:78
/* Set if put and get pointer logicly tied. */	/* Set if put and get pointer logicly tied. */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:109:32:109:77
/* Set if linked (using _chain) to streambuf::_list_all.*/	/* Set if linked (using _chain) to streambuf::_list_all.*/	file:///usr/include/x86_64-linux-gnu/bits/libio.h:106:25:106:82
/* Don't call close(_fileno) on cleanup. */	/* Don't call close(_fileno) on cleanup. */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:105:36:105:78
/* Writing not allowd */	/* Writing not allowd */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:102:25:102:48
/* Reading not allowed */	/* Reading not allowed */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:101:24:101:48
/* User owns buffer; don't delete it on close. */	/* User owns buffer; don't delete it on close. */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:99:24:99:72
/* Emulate old stdio. */	/* Emulate old stdio. */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:97:37:97:60
/* Magic number */	/* Magic number */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:96:30:96:47
"/* Magic numbers and bits for the _flags field.
   The magic numbers use the high-order bits of _flags;
   the remaining bits are available for variable flags.
   Note: The magic numbers must all be negative if stdio
   emulation is desired. */"	"/* Magic numbers and bits for the _flags field.
   The magic numbers use the high-order bits of _flags;
   the remaining bits are available for variable flags.
   Note: The magic numbers must all be negative if stdio
   emulation is desired. */"	file:///usr/include/x86_64-linux-gnu/bits/libio.h:90:1:94:27
/*!__P*/	/*!__P*/	file:///usr/include/x86_64-linux-gnu/bits/libio.h:61:8:61:15
/* __GNUC_VA_LIST */	/* __GNUC_VA_LIST */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:57:8:57:27
/* This define avoids name pollution if we're using GNU stdarg.h */	/* This define avoids name pollution if we're using GNU stdarg.h */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:51:1:51:67
/* ALL of these should be defined in _G_config.h */	/* ALL of these should be defined in _G_config.h */	file:///usr/include/x86_64-linux-gnu/bits/libio.h:36:1:36:51
"/* Copyright (C) 1991-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.
   Written by Per Bothner <bothner@cygnus.com>.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.

   As a special exception, if you link the code in this file with
   files compiled with a GNU compiler to produce an executable,
   that does not cause the resulting executable to be covered by
   the GNU Lesser General Public License.  This exception does not
   however invalidate any other reasons why the executable file
   might be covered by the GNU Lesser General Public License.
   This exception applies to code released by its copyright holders
   in files containing the exception.  */"	"/* Copyright (C) 1991-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.
   Written by Per Bothner <bothner@cygnus.com>.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.

   As a special exception, if you link the code in this file with
   files compiled with a GNU compiler to produce an executable,
   that does not cause the resulting executable to be covered by
   the GNU Lesser General Public License.  This exception does not
   however invalidate any other reasons why the executable file
   might be covered by the GNU Lesser General Public License.
   This exception applies to code released by its copyright holders
   in files containing the exception.  */"	file:///usr/include/x86_64-linux-gnu/bits/libio.h:1:1:26:41
/* bits/stdio_lim.h */	/* bits/stdio_lim.h */	file:///usr/include/x86_64-linux-gnu/bits/stdio_lim.h:39:8:39:29
"/* Copyright (C) 1994-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	"/* Copyright (C) 1994-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	file:///usr/include/x86_64-linux-gnu/bits/stdio_lim.h:1:1:16:38
/* sys_errlist and sys_nerr are deprecated.  Use strerror instead.  */	/* sys_errlist and sys_nerr are deprecated.  Use strerror instead.  */	file:///usr/include/x86_64-linux-gnu/bits/sys_errlist.h:23:1:23:70
"/* Declare sys_errlist and sys_nerr, or don't.  Compatibility (do) version.
   Copyright (C) 2002-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	"/* Declare sys_errlist and sys_nerr, or don't.  Compatibility (do) version.
   Copyright (C) 2002-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	file:///usr/include/x86_64-linux-gnu/bits/sys_errlist.h:1:1:17:38
/* <stdio.h> included.  */	/* <stdio.h> included.  */	file:///usr/include/stdio.h:870:8:870:33
"/* If we are compiling with optimizing read this file.  It contains
   several optimizing inline functions and macros.  */"	"/* If we are compiling with optimizing read this file.  It contains
   several optimizing inline functions and macros.  */"	file:///usr/include/stdio.h:856:1:857:54
"/*  X/Open Issues 1-5 required getopt to be declared in this
   header.  It was removed in Issue 6.  GNU follows Issue 6.  */"	"/*  X/Open Issues 1-5 required getopt to be declared in this
   header.  It was removed in Issue 6.  GNU follows Issue 6.  */"	file:///usr/include/stdio.h:851:1:852:64
/* POSIX */	/* POSIX */	file:///usr/include/stdio.h:848:8:848:18
/* Relinquish the ownership granted for STREAM.  */	/* Relinquish the ownership granted for STREAM.  */	file:///usr/include/stdio.h:846:1:846:51
"/* Try to acquire ownership of STREAM but do not block if it is not
   possible.  */"	"/* Try to acquire ownership of STREAM but do not block if it is not
   possible.  */"	file:///usr/include/stdio.h:842:1:843:16
/* Acquire ownership of STREAM.  */	/* Acquire ownership of STREAM.  */	file:///usr/include/stdio.h:839:1:839:35
/* These are defined in POSIX.1:1996.  */	/* These are defined in POSIX.1:1996.  */	file:///usr/include/stdio.h:837:1:837:41
/* Use GNU.  */	/* Use GNU.  */	file:///usr/include/stdio.h:833:8:833:22
/* Write formatted output to an obstack.  */	/* Write formatted output to an obstack.  */	file:///usr/include/stdio.h:825:1:825:44
/* See <obstack.h>.  */	/* See <obstack.h>.  */	file:///usr/include/stdio.h:823:19:823:41
/* Use X/Open, but not issue 6.  */	/* Use X/Open, but not issue 6.  */	file:///usr/include/stdio.h:819:8:819:42
/* Return the name of the current user.  */	/* Return the name of the current user.  */	file:///usr/include/stdio.h:817:1:817:43
/* Use POSIX.  */	/* Use POSIX.  */	file:///usr/include/stdio.h:813:8:813:24
/* Return the name of the controlling terminal.  */	/* Return the name of the controlling terminal.  */	file:///usr/include/stdio.h:811:1:811:51
"/* Close a stream opened by popen and return the status of its child.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	"/* Close a stream opened by popen and return the status of its child.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	file:///usr/include/stdio.h:802:1:805:27
"/* Create a new stream connected to a pipe running the given command.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	"/* Create a new stream connected to a pipe running the given command.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	file:///usr/include/stdio.h:796:1:799:27
/* Faster version when locking is not required.  */	/* Faster version when locking is not required.  */	file:///usr/include/stdio.h:790:1:790:51
/* Use POSIX.  */	/* Use POSIX.  */	file:///usr/include/stdio.h:787:8:787:24
/* Return the system file descriptor for STREAM.  */	/* Return the system file descriptor for STREAM.  */	file:///usr/include/stdio.h:785:1:785:52
"/* Provide the declarations for `sys_errlist' and `sys_nerr' if they
   are available on this system.  Even if available, these variables
   should not be used directly.  The `strerror' function provides
   all the necessary functionality.  */"	"/* Provide the declarations for `sys_errlist' and `sys_nerr' if they
   are available on this system.  Even if available, these variables
   should not be used directly.  The `strerror' function provides
   all the necessary functionality.  */"	file:///usr/include/stdio.h:777:1:780:39
"/* Print a message describing the meaning of the value of errno.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	"/* Print a message describing the meaning of the value of errno.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	file:///usr/include/stdio.h:771:1:774:27
/* Faster versions when locking is not required.  */	/* Faster versions when locking is not required.  */	file:///usr/include/stdio.h:764:1:764:52
/* Return the error indicator for STREAM.  */	/* Return the error indicator for STREAM.  */	file:///usr/include/stdio.h:760:1:760:45
/* Return the EOF indicator for STREAM.  */	/* Return the EOF indicator for STREAM.  */	file:///usr/include/stdio.h:758:1:758:43
/* Clear the error and EOF indicators for STREAM.  */	/* Clear the error and EOF indicators for STREAM.  */	file:///usr/include/stdio.h:756:1:756:53
"/* Set STREAM's position.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	"/* Set STREAM's position.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	file:///usr/include/stdio.h:732:1:735:27
"/* Get STREAM's position.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	"/* Get STREAM's position.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	file:///usr/include/stdio.h:727:1:730:27
"/* Return the current position of STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	"/* Return the current position of STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	file:///usr/include/stdio.h:708:1:711:27
"/* Seek to a certain position on STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	"/* Seek to a certain position on STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	file:///usr/include/stdio.h:703:1:706:27
"/* The Single Unix Specification, Version 2, specifies an alternative,
   more adequate interface for the two functions above which deal with
   file offset.  `long int' is not the right type.  These definitions
   are originally defined in the Large File Support API.  */"	"/* The Single Unix Specification, Version 2, specifies an alternative,
   more adequate interface for the two functions above which deal with
   file offset.  `long int' is not the right type.  These definitions
   are originally defined in the Large File Support API.  */"	file:///usr/include/stdio.h:696:1:699:60
"/* Rewind to the beginning of STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	"/* Rewind to the beginning of STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	file:///usr/include/stdio.h:690:1:693:27
"/* Return the current position of STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	"/* Return the current position of STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	file:///usr/include/stdio.h:685:1:688:27
"/* Seek to a certain position on STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	"/* Seek to a certain position on STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	file:///usr/include/stdio.h:680:1:683:27
"/* Faster versions when locking is not necessary.

   These functions are not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation they are cancellation points and
   therefore not marked with __THROW.  */"	"/* Faster versions when locking is not necessary.

   These functions are not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation they are cancellation points and
   therefore not marked with __THROW.  */"	file:///usr/include/stdio.h:667:1:672:41
"/* This function does the same as `fputs' but does not lock the stream.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */"	"/* This function does the same as `fputs' but does not lock the stream.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */"	file:///usr/include/stdio.h:656:1:661:41
"/* Write chunks of generic data to STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	"/* Write chunks of generic data to STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	file:///usr/include/stdio.h:648:1:651:27
"/* Read chunks of generic data from STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	"/* Read chunks of generic data from STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	file:///usr/include/stdio.h:642:1:645:27
"/* Push a character back onto the input buffer of STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	"/* Push a character back onto the input buffer of STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	file:///usr/include/stdio.h:635:1:638:27
"/* Write a string, followed by a newline, to stdout.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	"/* Write a string, followed by a newline, to stdout.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	file:///usr/include/stdio.h:628:1:631:27
"/* Write a string to STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	"/* Write a string to STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	file:///usr/include/stdio.h:622:1:625:27
"/* Like `getdelim', but reads up to a newline.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */"	"/* Like `getdelim', but reads up to a newline.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */"	file:///usr/include/stdio.h:610:1:615:41
"/* Read up to (and including) a DELIMITER from STREAM into *LINEPTR
   (and null-terminate it). *LINEPTR is a pointer returned from malloc (or
   NULL), pointing to *N characters of space.  It is realloc'd as
   necessary.  Returns the number of characters read (not including the
   null terminator), or -1 on error or EOF.

   These functions are not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation they are cancellation points and
   therefore not marked with __THROW.  */"	"/* Read up to (and including) a DELIMITER from STREAM into *LINEPTR
   (and null-terminate it). *LINEPTR is a pointer returned from malloc (or
   NULL), pointing to *N characters of space.  It is realloc'd as
   necessary.  Returns the number of characters read (not including the
   null terminator), or -1 on error or EOF.

   These functions are not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation they are cancellation points and
   therefore not marked with __THROW.  */"	file:///usr/include/stdio.h:593:1:602:41
"/* This function does the same as `fgets' but does not lock the stream.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */"	"/* This function does the same as `fgets' but does not lock the stream.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */"	file:///usr/include/stdio.h:581:1:586:41
"/* Get a newline-terminated string from stdin, removing the newline.

   This function is impossible to use safely.  It has been officially
   removed from ISO C11 and ISO C++14, and we have also removed it
   from the _GNU_SOURCE feature list.  It remains available when
   explicitly using an old ISO C, Unix, or POSIX standard.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	"/* Get a newline-terminated string from stdin, removing the newline.

   This function is impossible to use safely.  It has been officially
   removed from ISO C11 and ISO C++14, and we have also removed it
   from the _GNU_SOURCE feature list.  It remains available when
   explicitly using an old ISO C, Unix, or POSIX standard.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	file:///usr/include/stdio.h:568:1:576:27
"/* Get a newline-terminated string of finite length from STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	"/* Get a newline-terminated string of finite length from STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	file:///usr/include/stdio.h:560:1:563:27
/* Write a word (int) to STREAM.  */	/* Write a word (int) to STREAM.  */	file:///usr/include/stdio.h:555:1:555:36
/* Get a word (int) from STREAM.  */	/* Get a word (int) from STREAM.  */	file:///usr/include/stdio.h:552:1:552:36
/* Use POSIX.  */	/* Use POSIX.  */	file:///usr/include/stdio.h:547:8:547:24
"/* These are defined in POSIX.1:1996.

   These functions are possible cancellation points and therefore not
   marked with __THROW.  */"	"/* These are defined in POSIX.1:1996.

   These functions are possible cancellation points and therefore not
   marked with __THROW.  */"	file:///usr/include/stdio.h:541:1:544:27
/* Use MISC.  */	/* Use MISC.  */	file:///usr/include/stdio.h:538:8:538:23
"/* Faster version when locking is not necessary.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */"	"/* Faster version when locking is not necessary.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */"	file:///usr/include/stdio.h:531:1:536:41
"/* The C standard explicitly says this can be a macro,
   so we always do the optimization for it.  */"	"/* The C standard explicitly says this can be a macro,
   so we always do the optimization for it.  */"	file:///usr/include/stdio.h:526:1:527:47
"/* Write a character to stdout.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	"/* Write a character to stdout.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	file:///usr/include/stdio.h:520:1:523:27
"/* Write a character to STREAM.

   These functions are possible cancellation points and therefore not
   marked with __THROW.

   These functions is a possible cancellation point and therefore not
   marked with __THROW.  */"	"/* Write a character to STREAM.

   These functions are possible cancellation points and therefore not
   marked with __THROW.

   These functions is a possible cancellation point and therefore not
   marked with __THROW.  */"	file:///usr/include/stdio.h:510:1:516:27
/* Use MISC.  */	/* Use MISC.  */	file:///usr/include/stdio.h:507:8:507:23
"/* Faster version when locking is not necessary.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */"	"/* Faster version when locking is not necessary.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */"	file:///usr/include/stdio.h:500:1:505:41
/* Use POSIX.  */	/* Use POSIX.  */	file:///usr/include/stdio.h:497:8:497:24
"/* These are defined in POSIX.1:1996.

   These functions are possible cancellation points and therefore not
   marked with __THROW.  */"	"/* These are defined in POSIX.1:1996.

   These functions are possible cancellation points and therefore not
   marked with __THROW.  */"	file:///usr/include/stdio.h:491:1:494:27
"/* The C standard explicitly says this is a macro, so we always do the
   optimization for it.  */"	"/* The C standard explicitly says this is a macro, so we always do the
   optimization for it.  */"	file:///usr/include/stdio.h:486:1:487:27
"/* Read a character from stdin.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	"/* Read a character from stdin.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	file:///usr/include/stdio.h:480:1:483:27
"/* Read a character from STREAM.

   These functions are possible cancellation points and therefore not
   marked with __THROW.  */"	"/* Read a character from STREAM.

   These functions are possible cancellation points and therefore not
   marked with __THROW.  */"	file:///usr/include/stdio.h:473:1:476:27
/* Use ISO C9x.  */	/* Use ISO C9x.  */	file:///usr/include/stdio.h:470:8:470:26
"/* For strict ISO C99 or POSIX compliance disallow %as, %aS and %a[
   GNU extension which conflicts with valid %a followed by letter
   s, S or [.  */"	"/* For strict ISO C99 or POSIX compliance disallow %as, %aS and %a[
   GNU extension which conflicts with valid %a followed by letter
   s, S or [.  */"	file:///usr/include/stdio.h:440:1:442:17
/* Read formatted input from S into argument list ARG.  */	/* Read formatted input from S into argument list ARG.  */	file:///usr/include/stdio.h:431:1:431:58
"/* Read formatted input from stdin into argument list ARG.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	"/* Read formatted input from stdin into argument list ARG.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	file:///usr/include/stdio.h:424:1:427:27
"/* Read formatted input from S into argument list ARG.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	"/* Read formatted input from S into argument list ARG.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	file:///usr/include/stdio.h:416:1:419:27
"/* For strict ISO C99 or POSIX compliance disallow %as, %aS and %a[
   GNU extension which conflicts with valid %a followed by letter
   s, S or [.  */"	"/* For strict ISO C99 or POSIX compliance disallow %as, %aS and %a[
   GNU extension which conflicts with valid %a followed by letter
   s, S or [.  */"	file:///usr/include/stdio.h:392:1:394:17
/* Read formatted input from S.  */	/* Read formatted input from S.  */	file:///usr/include/stdio.h:384:1:384:35
"/* Read formatted input from stdin.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	"/* Read formatted input from stdin.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	file:///usr/include/stdio.h:379:1:382:27
"/* Read formatted input from STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	"/* Read formatted input from STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	file:///usr/include/stdio.h:373:1:376:27
/* Write formatted output to a file descriptor.  */	/* Write formatted output to a file descriptor.  */	file:///usr/include/stdio.h:364:1:364:51
"/* Write formatted output to a string dynamically allocated with `malloc'.
   Store the address of the string in *PTR.  */"	"/* Write formatted output to a string dynamically allocated with `malloc'.
   Store the address of the string in *PTR.  */"	file:///usr/include/stdio.h:350:1:351:47
/* Maximum chars of output to write in MAXLEN.  */	/* Maximum chars of output to write in MAXLEN.  */	file:///usr/include/stdio.h:339:1:339:50
/* Write formatted output to S from argument list ARG.  */	/* Write formatted output to S from argument list ARG.  */	file:///usr/include/stdio.h:334:1:334:58
"/* Write formatted output to stdout from argument list ARG.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	"/* Write formatted output to stdout from argument list ARG.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	file:///usr/include/stdio.h:329:1:332:27
"/* Write formatted output to S from argument list ARG.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	"/* Write formatted output to S from argument list ARG.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	file:///usr/include/stdio.h:323:1:326:27
/* Write formatted output to S.  */	/* Write formatted output to S.  */	file:///usr/include/stdio.h:319:1:319:35
"/* Write formatted output to stdout.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	"/* Write formatted output to stdout.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	file:///usr/include/stdio.h:314:1:317:27
"/* Write formatted output to STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	"/* Write formatted output to STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	file:///usr/include/stdio.h:308:1:311:27
/* Make STREAM line-buffered.  */	/* Make STREAM line-buffered.  */	file:///usr/include/stdio.h:303:1:303:33
"/* If BUF is NULL, make STREAM unbuffered.
   Else make it use SIZE bytes of BUF for buffering.  */"	"/* If BUF is NULL, make STREAM unbuffered.
   Else make it use SIZE bytes of BUF for buffering.  */"	file:///usr/include/stdio.h:298:1:299:56
"/* Make STREAM use buffering mode MODE.
   If BUF is not NULL, use N bytes of it for buffering;
   else allocate an internal buffer N bytes long.  */"	"/* Make STREAM use buffering mode MODE.
   If BUF is not NULL, use N bytes of it for buffering;
   else allocate an internal buffer N bytes long.  */"	file:///usr/include/stdio.h:291:1:293:53
"/* If BUF is NULL, make STREAM unbuffered.
   Else make it use buffer BUF, of size BUFSIZ.  */"	"/* If BUF is NULL, make STREAM unbuffered.
   Else make it use buffer BUF, of size BUFSIZ.  */"	file:///usr/include/stdio.h:288:1:289:51
"/* Open a stream that writes into a malloc'd buffer that is expanded as
   necessary.  *BUFLOC and *SIZELOC are updated with the buffer's location
   and the number of characters written on fflush or fclose.  */"	"/* Open a stream that writes into a malloc'd buffer that is expanded as
   necessary.  *BUFLOC and *SIZELOC are updated with the buffer's location
   and the number of characters written on fflush or fclose.  */"	file:///usr/include/stdio.h:281:1:283:64
/* Create a new stream that refers to a memory buffer.  */	/* Create a new stream that refers to a memory buffer.  */	file:///usr/include/stdio.h:277:1:277:58
"/* Create a new stream that refers to the given magic cookie,
   and uses the given functions for input and output.  */"	"/* Create a new stream that refers to the given magic cookie,
   and uses the given functions for input and output.  */"	file:///usr/include/stdio.h:269:1:270:57
/* Create a new stream that refers to an existing system file descriptor.  */	/* Create a new stream that refers to an existing system file descriptor.  */	file:///usr/include/stdio.h:264:1:264:77
"/* Open a file, replacing an existing stream with it.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	"/* Open a file, replacing an existing stream with it.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	file:///usr/include/stdio.h:234:1:237:27
"/* Open a file and create a new stream for it.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	"/* Open a file and create a new stream for it.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	file:///usr/include/stdio.h:228:1:231:27
"/* Close all streams.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */"	"/* Close all streams.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */"	file:///usr/include/stdio.h:217:1:222:41
"/* Faster versions when locking is not required.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */"	"/* Faster versions when locking is not required.

   This function is not part of POSIX and therefore no official
   cancellation point.  But due to similarity with an POSIX interface
   or due to the implementation it is a cancellation point and
   therefore not marked with __THROW.  */"	file:///usr/include/stdio.h:207:1:212:41
"/* Flush STREAM, or all streams if STREAM is NULL.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	"/* Flush STREAM, or all streams if STREAM is NULL.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	file:///usr/include/stdio.h:200:1:203:27
"/* Close STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	"/* Close STREAM.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	file:///usr/include/stdio.h:195:1:198:27
"/* Generate a unique temporary filename using up to five characters of PFX
   if it is not NULL.  The directory to put this file in is searched for
   as follows: First the environment variable ""TMPDIR"" is checked.
   If it contains the name of a writable directory, that directory is used.
   If not and if DIR is not NULL, that value is checked.  If that fails,
   P_tmpdir is tried and finally ""/tmp"".  The storage for the filename
   is allocated by `malloc'.  */"	"/* Generate a unique temporary filename using up to five characters of PFX
   if it is not NULL.  The directory to put this file in is searched for
   as follows: First the environment variable ""TMPDIR"" is checked.
   If it contains the name of a writable directory, that directory is used.
   If not and if DIR is not NULL, that value is checked.  If that fails,
   P_tmpdir is tried and finally ""/tmp"".  The storage for the filename
   is allocated by `malloc'.  */"	file:///usr/include/stdio.h:183:1:189:32
"/* This is the reentrant variant of `tmpnam'.  The only difference is
   that it does not allow S to be NULL.  */"	"/* This is the reentrant variant of `tmpnam'.  The only difference is
   that it does not allow S to be NULL.  */"	file:///usr/include/stdio.h:176:1:177:43
/* Generate a temporary filename.  */	/* Generate a temporary filename.  */	file:///usr/include/stdio.h:172:1:172:37
"/* Create a temporary file and open it read/write.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	"/* Create a temporary file and open it read/write.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	file:///usr/include/stdio.h:154:1:157:27
/* Rename file OLD relative to OLDFD to NEW relative to NEWFD.  */	/* Rename file OLD relative to OLDFD to NEW relative to NEWFD.  */	file:///usr/include/stdio.h:149:1:149:66
/* Rename file OLD to NEW.  */	/* Rename file OLD to NEW.  */	file:///usr/include/stdio.h:145:1:145:30
/* Remove file FILENAME.  */	/* Remove file FILENAME.  */	file:///usr/include/stdio.h:143:1:143:28
/* C89/C99 say they're macros.  Make them happy.  */	/* C89/C99 say they're macros.  Make them happy.  */	file:///usr/include/stdio.h:138:1:138:52
/* Standard error output stream.  */	/* Standard error output stream.  */	file:///usr/include/stdio.h:137:34:137:69
/* Standard output stream.  */	/* Standard output stream.  */	file:///usr/include/stdio.h:136:34:136:63
/* Standard input stream.  */	/* Standard input stream.  */	file:///usr/include/stdio.h:135:33:135:61
/* Standard streams.  */	/* Standard streams.  */	file:///usr/include/stdio.h:134:1:134:24
"/* Get the values:
   L_tmpnam	How long an array of chars must be to be passed to `tmpnam'.
   TMP_MAX	The minimum number of unique filenames generated by tmpnam
		(and tempnam when it uses tmpnam's name space),
		or tempnam (the two are separate).
   L_ctermid	How long an array to pass to `ctermid'.
   L_cuserid	How long an array to pass to `cuserid'.
   FOPEN_MAX	Minimum number of files that can be open at once.
   FILENAME_MAX	Maximum length of a filename.  */"	"/* Get the values:
   L_tmpnam	How long an array of chars must be to be passed to `tmpnam'.
   TMP_MAX	The minimum number of unique filenames generated by tmpnam
		(and tempnam when it uses tmpnam's name space),
		or tempnam (the two are separate).
   L_ctermid	How long an array to pass to `ctermid'.
   L_cuserid	How long an array to pass to `cuserid'.
   FOPEN_MAX	Minimum number of files that can be open at once.
   FILENAME_MAX	Maximum length of a filename.  */"	file:///usr/include/stdio.h:122:1:130:49
/* Default path prefix for `tempnam' and `tmpnam'.  */	/* Default path prefix for `tempnam' and `tmpnam'.  */	file:///usr/include/stdio.h:117:1:117:54
/* Seek to next hole.  */	/* Seek to next hole.  */	file:///usr/include/stdio.h:112:22:112:46
/* Seek to next data.  */	/* Seek to next data.  */	file:///usr/include/stdio.h:111:22:111:46
/* Seek from end of file.  */	/* Seek from end of file.  */	file:///usr/include/stdio.h:109:20:109:48
/* Seek from current position.  */	/* Seek from current position.  */	file:///usr/include/stdio.h:108:20:108:53
/* Seek from beginning of file.  */	/* Seek from beginning of file.  */	file:///usr/include/stdio.h:107:20:107:54
"/* The possibilities for the third argument to `fseek'.
   These values should not be changed.  */"	"/* The possibilities for the third argument to `fseek'.
   These values should not be changed.  */"	file:///usr/include/stdio.h:105:1:106:42
"/* End of file character.
   Some things throughout the library rely on this being -1.  */"	"/* End of file character.
   Some things throughout the library rely on this being -1.  */"	file:///usr/include/stdio.h:98:1:99:64
/* Default buffer size.  */	/* Default buffer size.  */	file:///usr/include/stdio.h:92:1:92:27
/* No buffering.  */	/* No buffering.  */	file:///usr/include/stdio.h:89:19:89:38
/* Line buffered.  */	/* Line buffered.  */	file:///usr/include/stdio.h:88:19:88:39
/* Fully buffered.  */	/* Fully buffered.  */	file:///usr/include/stdio.h:87:19:87:40
/* The possibilities for the third argument to `setvbuf'.  */	/* The possibilities for the third argument to `setvbuf'.  */	file:///usr/include/stdio.h:86:1:86:61
/* The type of the second argument to `fgetpos' and `fsetpos'.  */	/* The type of the second argument to `fgetpos' and `fsetpos'.  */	file:///usr/include/stdio.h:76:1:76:66
"/*
 *	ISO C99 Standard: 7.19 Input/output	<stdio.h>
 */"	"/*
 *	ISO C99 Standard: 7.19 Input/output	<stdio.h>
 */"	file:///usr/include/stdio.h:19:1:21:3
"/* Define ISO C stdio on top of C++ iostreams.
   Copyright (C) 1991-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	"/* Define ISO C stdio on top of C++ iostreams.
   Copyright (C) 1991-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	file:///usr/include/stdio.h:1:1:17:38
/* Wait for members of process group.  */	/* Wait for members of process group.  */	file:///usr/include/x86_64-linux-gnu/bits/waitflags.h:56:11:56:51
/* Wait for specified process.  */	/* Wait for specified process.  */	file:///usr/include/x86_64-linux-gnu/bits/waitflags.h:55:11:55:44
/* Wait for any child.  */	/* Wait for any child.  */	file:///usr/include/x86_64-linux-gnu/bits/waitflags.h:54:11:54:36
"/* The Linux kernel defines these bare, rather than an enum,
   which causes a conflict if the include order is reversed. */"	"/* The Linux kernel defines these bare, rather than an enum,
   which causes a conflict if the include order is reversed. */"	file:///usr/include/x86_64-linux-gnu/bits/waitflags.h:46:1:47:63
/* The following values are used by the `waitid' function.  */	/* The following values are used by the `waitid' function.  */	file:///usr/include/x86_64-linux-gnu/bits/waitflags.h:41:1:41:62
/* Wait for cloned process.  */	/* Wait for cloned process.  */	file:///usr/include/x86_64-linux-gnu/bits/waitflags.h:39:29:39:59
/* Wait for any child.  */	/* Wait for any child.  */	file:///usr/include/x86_64-linux-gnu/bits/waitflags.h:38:28:38:53
"/* Don't wait on children of other threads
				      in this group */"	"/* Don't wait on children of other threads
				      in this group */"	file:///usr/include/x86_64-linux-gnu/bits/waitflags.h:36:36:37:26
/* Don't reap, just poll status.  */	/* Don't reap, just poll status.  */	file:///usr/include/x86_64-linux-gnu/bits/waitflags.h:33:29:33:64
/* Report continued child.  */	/* Report continued child.  */	file:///usr/include/x86_64-linux-gnu/bits/waitflags.h:32:23:32:52
/* Report dead child.  */	/* Report dead child.  */	file:///usr/include/x86_64-linux-gnu/bits/waitflags.h:31:20:31:44
/* Report stopped child (same as WUNTRACED). */	/* Report stopped child (same as WUNTRACED). */	file:///usr/include/x86_64-linux-gnu/bits/waitflags.h:30:21:30:67
/* Bits in the fourth argument to `waitid'.  */	/* Bits in the fourth argument to `waitid'.  */	file:///usr/include/x86_64-linux-gnu/bits/waitflags.h:28:1:28:47
/* Report status of stopped children.  */	/* Report status of stopped children.  */	file:///usr/include/x86_64-linux-gnu/bits/waitflags.h:26:21:26:61
/* Don't block waiting.  */	/* Don't block waiting.  */	file:///usr/include/x86_64-linux-gnu/bits/waitflags.h:25:20:25:46
/* Bits in the third argument to `waitpid'.  */	/* Bits in the third argument to `waitpid'.  */	file:///usr/include/x86_64-linux-gnu/bits/waitflags.h:24:1:24:47
"/* Definitions of flag bits for `waitpid' et al.
   Copyright (C) 1992-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	"/* Definitions of flag bits for `waitpid' et al.
   Copyright (C) 1992-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	file:///usr/include/x86_64-linux-gnu/bits/waitflags.h:1:1:17:38
/* Macros for constructing status values.  */	/* Macros for constructing status values.  */	file:///usr/include/x86_64-linux-gnu/bits/waitstatus.h:55:1:55:45
/* Nonzero if STATUS indicates the child dumped core.  */	/* Nonzero if STATUS indicates the child dumped core.  */	file:///usr/include/x86_64-linux-gnu/bits/waitstatus.h:52:1:52:57
"/* Nonzero if STATUS indicates the child continued after a stop.  We only
   define this if <bits/waitflags.h> provides the WCONTINUED flag bit.  */"	"/* Nonzero if STATUS indicates the child continued after a stop.  We only
   define this if <bits/waitflags.h> provides the WCONTINUED flag bit.  */"	file:///usr/include/x86_64-linux-gnu/bits/waitstatus.h:46:1:47:74
/* Nonzero if STATUS indicates the child is stopped.  */	/* Nonzero if STATUS indicates the child is stopped.  */	file:///usr/include/x86_64-linux-gnu/bits/waitstatus.h:43:1:43:56
/* Nonzero if STATUS indicates termination by a signal.  */	/* Nonzero if STATUS indicates termination by a signal.  */	file:///usr/include/x86_64-linux-gnu/bits/waitstatus.h:39:1:39:59
/* Nonzero if STATUS indicates normal termination.  */	/* Nonzero if STATUS indicates normal termination.  */	file:///usr/include/x86_64-linux-gnu/bits/waitstatus.h:36:1:36:54
/* If WIFSTOPPED(STATUS), the signal that stopped the child.  */	/* If WIFSTOPPED(STATUS), the signal that stopped the child.  */	file:///usr/include/x86_64-linux-gnu/bits/waitstatus.h:33:1:33:64
/* If WIFSIGNALED(STATUS), the terminating signal.  */	/* If WIFSIGNALED(STATUS), the terminating signal.  */	file:///usr/include/x86_64-linux-gnu/bits/waitstatus.h:30:1:30:54
/* If WIFEXITED(STATUS), the low-order 8 bits of the status.  */	/* If WIFEXITED(STATUS), the low-order 8 bits of the status.  */	file:///usr/include/x86_64-linux-gnu/bits/waitstatus.h:27:1:27:64
/* Everything extant so far uses these same bits.  */	/* Everything extant so far uses these same bits.  */	file:///usr/include/x86_64-linux-gnu/bits/waitstatus.h:24:1:24:53
"/* Definitions of status bits for `wait' et al.
   Copyright (C) 1992-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	"/* Definitions of status bits for `wait' et al.
   Copyright (C) 1992-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	file:///usr/include/x86_64-linux-gnu/bits/waitstatus.h:1:1:17:38
/* _BITS_FLOATN_COMMON_H */	/* _BITS_FLOATN_COMMON_H */	file:///usr/include/x86_64-linux-gnu/bits/floatn-common.h:322:8:322:34
/* !__ASSEMBLER__.  */	/* !__ASSEMBLER__.  */	file:///usr/include/x86_64-linux-gnu/bits/floatn-common.h:320:8:320:29
"/* If double, long double and _Float64 all have the same set of
   values, TS 18661-3 requires the usual arithmetic conversions on
   long double and _Float64 to produce _Float64.  For this to be the
   case when building with a compiler without a distinct _Float64
   type, _Float64 must be a typedef for long double, not for
   double.  */"	"/* If double, long double and _Float64 all have the same set of
   values, TS 18661-3 requires the usual arithmetic conversions on
   long double and _Float64 to produce _Float64.  For this to be the
   case when building with a compiler without a distinct _Float64
   type, _Float64 must be a typedef for long double, not for
   double.  */"	file:///usr/include/x86_64-linux-gnu/bits/floatn-common.h:221:1:226:14
/* The remaining of this file provides support for older compilers.  */	/* The remaining of this file provides support for older compilers.  */	file:///usr/include/x86_64-linux-gnu/bits/floatn-common.h:188:1:188:71
/* Defined to a complex type if __HAVE_<type> is 1.  */	/* Defined to a complex type if __HAVE_<type> is 1.  */	file:///usr/include/x86_64-linux-gnu/bits/floatn-common.h:130:1:130:55
/* No corresponding suffix available for this type.  */	/* No corresponding suffix available for this type.  */	file:///usr/include/x86_64-linux-gnu/bits/floatn-common.h:75:1:75:55
"/* Defined to concatenate the literal suffix to be used with _FloatN
   or _FloatNx types, if __HAVE_<type> is 1.  The corresponding
   literal suffixes exist since GCC 7, for C only.  */"	"/* Defined to concatenate the literal suffix to be used with _FloatN
   or _FloatNx types, if __HAVE_<type> is 1.  The corresponding
   literal suffixes exist since GCC 7, for C only.  */"	file:///usr/include/x86_64-linux-gnu/bits/floatn-common.h:70:1:72:54
"/* Defined to 1 if any _FloatN or _FloatNx types that are not
   ABI-distinct are however distinct types at the C language level (so
   for the purposes of __builtin_types_compatible_p and _Generic).  */"	"/* Defined to 1 if any _FloatN or _FloatNx types that are not
   ABI-distinct are however distinct types at the C language level (so
   for the purposes of __builtin_types_compatible_p and _Generic).  */"	file:///usr/include/x86_64-linux-gnu/bits/floatn-common.h:59:1:61:70
"/* Defined to 1 if the corresponding __HAVE_<type> macro is 1 and the
   type is the first with its format in the sequence of (the default
   choices for) float, double, long double, _Float16, _Float32,
   _Float64, _Float128, _Float32x, _Float64x, _Float128x for this
   glibc; that is, if functions present once per floating-point format
   rather than once per type are present for this type.

   All configurations supported by glibc have _Float32 the same format
   as float, _Float64 and _Float32x the same format as double, the
   _Float64x the same format as either long double or _Float128.  No
   configurations support _Float128x or, as of GCC 7, have compiler
   support for a type meeting the requirements for _Float128x.  */"	"/* Defined to 1 if the corresponding __HAVE_<type> macro is 1 and the
   type is the first with its format in the sequence of (the default
   choices for) float, double, long double, _Float16, _Float32,
   _Float64, _Float128, _Float32x, _Float64x, _Float128x for this
   glibc; that is, if functions present once per floating-point format
   rather than once per type are present for this type.

   All configurations supported by glibc have _Float32 the same format
   as float, _Float64 and _Float32x the same format as double, the
   _Float64x the same format as either long double or _Float128.  No
   configurations support _Float128x or, as of GCC 7, have compiler
   support for a type meeting the requirements for _Float128x.  */"	file:///usr/include/x86_64-linux-gnu/bits/floatn-common.h:40:1:51:66
"/* Defined to 1 if the current compiler invocation provides a
   floating-point type with the right format for this type, and this
   glibc includes corresponding *fN or *fNx interfaces for it.  */"	"/* Defined to 1 if the current compiler invocation provides a
   floating-point type with the right format for this type, and this
   glibc includes corresponding *fN or *fNx interfaces for it.  */"	file:///usr/include/x86_64-linux-gnu/bits/floatn-common.h:31:1:33:66
"/* This header should be included at the bottom of each bits/floatn.h.
   It defines the following macros for each _FloatN and _FloatNx type,
   where the same definitions, or definitions based only on the macros
   in bits/floatn.h, are appropriate for all glibc configurations.  */"	"/* This header should be included at the bottom of each bits/floatn.h.
   It defines the following macros for each _FloatN and _FloatNx type,
   where the same definitions, or definitions based only on the macros
   in bits/floatn.h, are appropriate for all glibc configurations.  */"	file:///usr/include/x86_64-linux-gnu/bits/floatn-common.h:26:1:29:70
"/* Macros to control TS 18661-3 glibc features where the same
   definitions are appropriate for all platforms.
   Copyright (C) 2017-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	"/* Macros to control TS 18661-3 glibc features where the same
   definitions are appropriate for all platforms.
   Copyright (C) 2017-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	file:///usr/include/x86_64-linux-gnu/bits/floatn-common.h:1:1:18:38
/* _BITS_FLOATN_H */	/* _BITS_FLOATN_H */	file:///usr/include/x86_64-linux-gnu/bits/floatn.h:122:8:122:27
/* !__ASSEMBLER__.  */	/* !__ASSEMBLER__.  */	file:///usr/include/x86_64-linux-gnu/bits/floatn.h:118:8:118:29
"/* In math/math.h, __MATH_TG will expand signbit to __builtin_signbit*,
   e.g.: __builtin_signbitf128, before GCC 6.  However, there has never
   been a __builtin_signbitf128 in GCC and the type-generic builtin is
   only available since GCC 6.  */"	"/* In math/math.h, __MATH_TG will expand signbit to __builtin_signbit*,
   e.g.: __builtin_signbitf128, before GCC 6.  However, there has never
   been a __builtin_signbitf128 in GCC and the type-generic builtin is
   only available since GCC 6.  */"	file:///usr/include/x86_64-linux-gnu/bits/floatn.h:108:1:111:34
"/* Older GCC has only a subset of built-in functions for _Float128 on
   x86, and __builtin_infq is not usable in static initializers.
   Converting a narrower sNaN to _Float128 produces a quiet NaN, so
   attempts to use _Float128 sNaNs will not work properly with older
   compilers.  */"	"/* Older GCC has only a subset of built-in functions for _Float128 on
   x86, and __builtin_infq is not usable in static initializers.
   Converting a narrower sNaN to _Float128 produces a quiet NaN, so
   attempts to use _Float128 sNaNs will not work properly with older
   compilers.  */"	file:///usr/include/x86_64-linux-gnu/bits/floatn.h:95:1:99:17
/* __builtin_huge_valf128 doesn't exist before GCC 7.0.  */	/* __builtin_huge_valf128 doesn't exist before GCC 7.0.  */	file:///usr/include/x86_64-linux-gnu/bits/floatn.h:90:1:90:59
/* The type _Float128 exists only since GCC 7.0.  */	/* The type _Float128 exists only since GCC 7.0.  */	file:///usr/include/x86_64-linux-gnu/bits/floatn.h:85:1:85:52
/* The remaining of this file provides support for older compilers.  */	/* The remaining of this file provides support for older compilers.  */	file:///usr/include/x86_64-linux-gnu/bits/floatn.h:82:1:82:71
"/* Add a typedef for older GCC compilers which don't natively support
   _Complex _Float128.  */"	"/* Add a typedef for older GCC compilers which don't natively support
   _Complex _Float128.  */"	file:///usr/include/x86_64-linux-gnu/bits/floatn.h:73:1:74:26
/* Defined to a complex binary128 type if __HAVE_FLOAT128 is 1.  */	/* Defined to a complex binary128 type if __HAVE_FLOAT128 is 1.  */	file:///usr/include/x86_64-linux-gnu/bits/floatn.h:70:1:70:67
/* The literal suffix f128 exists only since GCC 7.0.  */	/* The literal suffix f128 exists only since GCC 7.0.  */	file:///usr/include/x86_64-linux-gnu/bits/floatn.h:63:1:63:57
"/* Defined to concatenate the literal suffix to be used with _Float128
   types, if __HAVE_FLOAT128 is 1. */"	"/* Defined to concatenate the literal suffix to be used with _Float128
   types, if __HAVE_FLOAT128 is 1. */"	file:///usr/include/x86_64-linux-gnu/bits/floatn.h:59:1:60:37
"/* Defined to 1 if __HAVE_FLOAT64X is 1 and _Float64x has the format
   of long double.  Otherwise, if __HAVE_FLOAT64X is 1, _Float64x has
   the format of _Float128, which must be different from that of long
   double.  */"	"/* Defined to 1 if __HAVE_FLOAT64X is 1 and _Float64x has the format
   of long double.  Otherwise, if __HAVE_FLOAT64X is 1, _Float64x has
   the format of _Float128, which must be different from that of long
   double.  */"	file:///usr/include/x86_64-linux-gnu/bits/floatn.h:51:1:54:14
"/* Defined to 1 if the current compiler invocation provides a
   floating-point type with the right format for _Float64x, and this
   glibc includes corresponding *f64x interfaces for it.  */"	"/* Defined to 1 if the current compiler invocation provides a
   floating-point type with the right format for _Float64x, and this
   glibc includes corresponding *f64x interfaces for it.  */"	file:///usr/include/x86_64-linux-gnu/bits/floatn.h:46:1:48:60
"/* Defined to 1 if __HAVE_FLOAT128 is 1 and the type is ABI-distinct
   from the default float, double and long double types in this glibc.  */"	"/* Defined to 1 if __HAVE_FLOAT128 is 1 and the type is ABI-distinct
   from the default float, double and long double types in this glibc.  */"	file:///usr/include/x86_64-linux-gnu/bits/floatn.h:38:1:39:74
"/* Defined to 1 if the current compiler invocation provides a
   floating-point type with the IEEE 754 binary128 format, and this
   glibc includes corresponding *f128 interfaces for it.  The required
   libgcc support was added some time after the basic compiler
   support, for x86_64 and x86.  */"	"/* Defined to 1 if the current compiler invocation provides a
   floating-point type with the IEEE 754 binary128 format, and this
   glibc includes corresponding *f128 interfaces for it.  The required
   libgcc support was added some time after the basic compiler
   support, for x86_64 and x86.  */"	file:///usr/include/x86_64-linux-gnu/bits/floatn.h:24:1:28:35
"/* Macros to control TS 18661-3 glibc features on x86.
   Copyright (C) 2017-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	"/* Macros to control TS 18661-3 glibc features on x86.
   Copyright (C) 2017-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	file:///usr/include/x86_64-linux-gnu/bits/floatn.h:1:1:17:38
/* Returned by `clock'.  */	/* Returned by `clock'.  */	file:///usr/include/x86_64-linux-gnu/bits/types/clock_t.h:6:1:6:27
/* Clock ID used in clock and timer functions.  */	/* Clock ID used in clock and timer functions.  */	file:///usr/include/x86_64-linux-gnu/bits/types/clockid_t.h:6:1:6:50
/* Returned by `time'.  */	/* Returned by `time'.  */	file:///usr/include/x86_64-linux-gnu/bits/types/time_t.h:6:1:6:26
/* Timer ID returned by `timer_create'.  */	/* Timer ID returned by `timer_create'.  */	file:///usr/include/x86_64-linux-gnu/bits/types/timer_t.h:6:1:6:43
/* bits/stdint-intn.h */	/* bits/stdint-intn.h */	file:///usr/include/x86_64-linux-gnu/bits/stdint-intn.h:29:8:29:31
"/* Define intN_t types.
   Copyright (C) 2017-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	"/* Define intN_t types.
   Copyright (C) 2017-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	file:///usr/include/x86_64-linux-gnu/bits/stdint-intn.h:1:1:17:38
/* i386/x86_64 are little-endian.  */	/* i386/x86_64 are little-endian.  */	file:///usr/include/x86_64-linux-gnu/bits/endian.h:1:1:1:37
/* This is better than nothing.  */	/* This is better than nothing.  */	file:///usr/include/x86_64-linux-gnu/bits/byteswap-16.h:37:1:37:35
"/* Macros to swap the order of bytes in 16-bit integer values.
   Copyright (C) 2012-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	"/* Macros to swap the order of bytes in 16-bit integer values.
   Copyright (C) 2012-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	file:///usr/include/x86_64-linux-gnu/bits/byteswap-16.h:1:1:17:38
/* _BITS_BYTESWAP_H */	/* _BITS_BYTESWAP_H */	file:///usr/include/x86_64-linux-gnu/bits/byteswap.h:155:8:155:29
/* Swap bytes in 64 bit value.  */	/* Swap bytes in 64 bit value.  */	file:///usr/include/x86_64-linux-gnu/bits/byteswap.h:96:1:96:34
"/* To swap the bytes in a word the i486 processors and up provide the
   `bswap' opcode.  On i386 we have to use three instructions.  */"	"/* To swap the bytes in a word the i486 processors and up provide the
   `bswap' opcode.  On i386 we have to use three instructions.  */"	file:///usr/include/x86_64-linux-gnu/bits/byteswap.h:56:1:57:66
/* Swap bytes in 32 bit value.  */	/* Swap bytes in 32 bit value.  */	file:///usr/include/x86_64-linux-gnu/bits/byteswap.h:37:1:37:34
/* Get __bswap_16.  */	/* Get __bswap_16.  */	file:///usr/include/x86_64-linux-gnu/bits/byteswap.h:34:1:34:22
/* Swap bytes in 16 bit value.  */	/* Swap bytes in 16 bit value.  */	file:///usr/include/x86_64-linux-gnu/bits/byteswap.h:30:1:30:34
"/* Macros to swap the order of bytes in integer values.
   Copyright (C) 1997-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	"/* Macros to swap the order of bytes in integer values.
   Copyright (C) 1997-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	file:///usr/include/x86_64-linux-gnu/bits/byteswap.h:1:1:17:38
/* _BITS_UINTN_IDENTITY_H.  */	/* _BITS_UINTN_IDENTITY_H.  */	file:///usr/include/x86_64-linux-gnu/bits/uintn-identity.h:50:8:50:37
"/* These inline functions are to ensure the appropriate type
   conversions and associated diagnostics from macros that convert to
   a given endianness.  */"	"/* These inline functions are to ensure the appropriate type
   conversions and associated diagnostics from macros that convert to
   a given endianness.  */"	file:///usr/include/x86_64-linux-gnu/bits/uintn-identity.h:28:1:30:26
"/* Inline functions to return unsigned integer values unchanged.
   Copyright (C) 2017-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	"/* Inline functions to return unsigned integer values unchanged.
   Copyright (C) 2017-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	file:///usr/include/x86_64-linux-gnu/bits/uintn-identity.h:1:1:17:38
/* endian.h */	/* endian.h */	file:///usr/include/endian.h:97:8:97:21
/* Conversion interfaces.  */	/* Conversion interfaces.  */	file:///usr/include/endian.h:59:1:59:29
"/* Some machines may need to use a different endianness for floating point
   values.  */"	"/* Some machines may need to use a different endianness for floating point
   values.  */"	file:///usr/include/endian.h:38:1:39:14
/* This file defines `__BYTE_ORDER' for the particular machine.  */	/* This file defines `__BYTE_ORDER' for the particular machine.  */	file:///usr/include/endian.h:35:1:35:67
"/* Definitions for byte order, according to significance of bytes,
   from low addresses to high addresses.  The value is what you get by
   putting '4' in the most significant byte, '3' in the second most
   significant byte, '2' in the second least significant byte, and '1'
   in the least significant byte, and then writing down one digit for
   each byte, starting with the byte at the lowest address at the left,
   and proceeding to the byte with the highest address at the right.  */"	"/* Definitions for byte order, according to significance of bytes,
   from low addresses to high addresses.  The value is what you get by
   putting '4' in the most significant byte, '3' in the second most
   significant byte, '2' in the second least significant byte, and '1'
   in the least significant byte, and then writing down one digit for
   each byte, starting with the byte at the lowest address at the left,
   and proceeding to the byte with the highest address at the right.  */"	file:///usr/include/endian.h:23:1:29:72
"/* Copyright (C) 1992-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	"/* Copyright (C) 1992-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	file:///usr/include/endian.h:1:1:16:38
/* GNU CC */	/* GNU CC */	file:///usr/include/x86_64-linux-gnu/bits/select.h:56:8:56:19
"/* We don't use `memset' because this would require a prototype and
   the array isn't too big.  */"	"/* We don't use `memset' because this would require a prototype and
   the array isn't too big.  */"	file:///usr/include/x86_64-linux-gnu/bits/select.h:46:1:47:31
/* ! GNU CC */	/* ! GNU CC */	file:///usr/include/x86_64-linux-gnu/bits/select.h:44:7:44:20
"/* Copyright (C) 1997-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	"/* Copyright (C) 1997-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	file:///usr/include/x86_64-linux-gnu/bits/select.h:1:1:16:38
/* A set of signals to be blocked, unblocked, or waited for.  */	/* A set of signals to be blocked, unblocked, or waited for.  */	file:///usr/include/x86_64-linux-gnu/bits/types/sigset_t.h:6:1:6:64
/* Microseconds.  */	/* Microseconds.  */	file:///usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h:11:26:11:45
/* Seconds.  */	/* Seconds.  */	file:///usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h:10:21:10:35
"/* A time value that is accurate to the nearest
   microsecond but also has a range of years.  */"	"/* A time value that is accurate to the nearest
   microsecond but also has a range of years.  */"	file:///usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h:6:1:7:49
/* Nanoseconds.  */	/* Nanoseconds.  */	file:///usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h:11:30:11:48
/* Seconds.  */	/* Seconds.  */	file:///usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h:10:21:10:35
"/* POSIX.1b structure for a time value.  This is like a `struct timeval' but
   has nanoseconds instead of microseconds.  */"	"/* POSIX.1b structure for a time value.  This is like a `struct timeval' but
   has nanoseconds instead of microseconds.  */"	file:///usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h:6:1:7:47
/* sys/select.h */	/* sys/select.h */	file:///usr/include/x86_64-linux-gnu/sys/select.h:128:8:128:25
/* Define some inlines helping to catch common problems.  */	/* Define some inlines helping to catch common problems.  */	file:///usr/include/x86_64-linux-gnu/sys/select.h:121:1:121:60
"/* Same as above only that the TIMEOUT value is given with higher
   resolution and a sigmask which is been set temporarily.  This version
   should be used.

   This function is a cancellation point and therefore not marked with
   __THROW.  */"	"/* Same as above only that the TIMEOUT value is given with higher
   resolution and a sigmask which is been set temporarily.  This version
   should be used.

   This function is a cancellation point and therefore not marked with
   __THROW.  */"	file:///usr/include/x86_64-linux-gnu/sys/select.h:107:1:112:15
"/* Check the first NFDS descriptors each in READFDS (if not NULL) for read
   readiness, in WRITEFDS (if not NULL) for write readiness, and in EXCEPTFDS
   (if not NULL) for exceptional conditions.  If TIMEOUT is not NULL, time out
   after waiting the interval specified therein.  Returns the number of ready
   descriptors, or -1 for errors.

   This function is a cancellation point and therefore not marked with
   __THROW.  */"	"/* Check the first NFDS descriptors each in READFDS (if not NULL) for read
   readiness, in WRITEFDS (if not NULL) for write readiness, and in EXCEPTFDS
   (if not NULL) for exceptional conditions.  If TIMEOUT is not NULL, time out
   after waiting the interval specified therein.  Returns the number of ready
   descriptors, or -1 for errors.

   This function is a cancellation point and therefore not marked with
   __THROW.  */"	file:///usr/include/x86_64-linux-gnu/sys/select.h:93:1:100:15
/* Access macros for `fd_set'.  */	/* Access macros for `fd_set'.  */	file:///usr/include/x86_64-linux-gnu/sys/select.h:84:1:84:34
/* Number of bits per word of `fd_set' (some code assumes this is 32).  */	/* Number of bits per word of `fd_set' (some code assumes this is 32).  */	file:///usr/include/x86_64-linux-gnu/sys/select.h:79:1:79:74
/* Sometimes the fd_set member is assumed to have this type.  */	/* Sometimes the fd_set member is assumed to have this type.  */	file:///usr/include/x86_64-linux-gnu/sys/select.h:76:1:76:64
/* Maximum number of file descriptors in `fd_set'.  */	/* Maximum number of file descriptors in `fd_set'.  */	file:///usr/include/x86_64-linux-gnu/sys/select.h:72:1:72:54
"/* XPG4.2 requires this member name.  Otherwise avoid the name
       from the global namespace.  */"	"/* XPG4.2 requires this member name.  Otherwise avoid the name
       from the global namespace.  */"	file:///usr/include/x86_64-linux-gnu/sys/select.h:61:5:62:37
/* fd_set for select and pselect.  */	/* fd_set for select and pselect.  */	file:///usr/include/x86_64-linux-gnu/sys/select.h:58:1:58:37
/* It's easier to assume 8-bit bytes than to get CHAR_BIT.  */	/* It's easier to assume 8-bit bytes than to get CHAR_BIT.  */	file:///usr/include/x86_64-linux-gnu/sys/select.h:53:1:53:62
/* Some versions of <linux/posix_types.h> define this macros.  */	/* Some versions of <linux/posix_types.h> define this macros.  */	file:///usr/include/x86_64-linux-gnu/sys/select.h:51:1:51:65
/* The fd_set member is required to be an array of longs.  */	/* The fd_set member is required to be an array of longs.  */	file:///usr/include/x86_64-linux-gnu/sys/select.h:48:1:48:61
/* Get definition of timer specification structures.  */	/* Get definition of timer specification structures.  */	file:///usr/include/x86_64-linux-gnu/sys/select.h:35:1:35:56
/* Get sigset_t.  */	/* Get sigset_t.  */	file:///usr/include/x86_64-linux-gnu/sys/select.h:32:1:32:20
/* Get __FD_* definitions.  */	/* Get __FD_* definitions.  */	file:///usr/include/x86_64-linux-gnu/sys/select.h:29:1:29:30
/* Get definition of needed basic types.  */	/* Get definition of needed basic types.  */	file:///usr/include/x86_64-linux-gnu/sys/select.h:26:1:26:44
"/*	POSIX 1003.1g: 6.2 Select from File Descriptor Sets <sys/select.h>  */"	"/*	POSIX 1003.1g: 6.2 Select from File Descriptor Sets <sys/select.h>  */"	file:///usr/include/x86_64-linux-gnu/sys/select.h:19:1:19:73
"/* `fd_set' type and related macros, and `select'/`pselect' declarations.
   Copyright (C) 1996-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	"/* `fd_set' type and related macros, and `select'/`pselect' declarations.
   Copyright (C) 1996-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	file:///usr/include/x86_64-linux-gnu/sys/select.h:1:1:17:38
/* bits/sysmacros.h */	/* bits/sysmacros.h */	file:///usr/include/x86_64-linux-gnu/bits/sysmacros.h:74:8:74:29
"/* dev_t in glibc is a 64-bit quantity, with 32-bit major and minor numbers.
   Our default encoding is MMMM Mmmm mmmM MMmm, where M is a hex digit of
   the major number and m is a hex digit of the minor number.  This is
   downward compatible with legacy systems where dev_t is 16 bits wide,
   encoded as MMmm.  It is also downward compatible with the Linux kernel,
   which (as of 2016) uses 32-bit dev_t, encoded as mmmM MMmm.

   Systems that use an incompatible encoding for dev_t should override this
   file in the appropriate sysdeps subdirectory.  */"	"/* dev_t in glibc is a 64-bit quantity, with 32-bit major and minor numbers.
   Our default encoding is MMMM Mmmm mmmM MMmm, where M is a hex digit of
   the major number and m is a hex digit of the minor number.  This is
   downward compatible with legacy systems where dev_t is 16 bits wide,
   encoded as MMmm.  It is also downward compatible with the Linux kernel,
   which (as of 2016) uses 32-bit dev_t, encoded as mmmM MMmm.

   Systems that use an incompatible encoding for dev_t should override this
   file in the appropriate sysdeps subdirectory.  */"	file:///usr/include/x86_64-linux-gnu/bits/sysmacros.h:26:1:34:52
"/* Definitions of macros to access `dev_t' values.
   Copyright (C) 1996-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	"/* Definitions of macros to access `dev_t' values.
   Copyright (C) 1996-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	file:///usr/include/x86_64-linux-gnu/bits/sysmacros.h:1:1:17:38
/* sys/sysmacros.h */	/* sys/sysmacros.h */	file:///usr/include/x86_64-linux-gnu/sys/sysmacros.h:110:8:110:28
/* _SYS_SYSMACROS_H */	/* _SYS_SYSMACROS_H */	file:///usr/include/x86_64-linux-gnu/sys/sysmacros.h:87:8:87:29
"/* This macro is variadic because the deprecation message above
   contains commas.  */"	"/* This macro is variadic because the deprecation message above
   contains commas.  */"	file:///usr/include/x86_64-linux-gnu/sys/sysmacros.h:60:1:61:23
"/* Caution: The text of this deprecation message is unquoted, so that
   #symbol can be substituted.  (It is converted to a string by
   __SYSMACROS_DM1.)  This means the message must be a sequence of
   complete pp-tokens; in particular, English contractions (it's,
   can't) cannot be used.

   The message has been manually word-wrapped to fit in 80 columns
   when output by GCC 5 and 6.  The first line is shorter to leave
   some room for the ""foo.c:23: warning:"" annotation.  */"	"/* Caution: The text of this deprecation message is unquoted, so that
   #symbol can be substituted.  (It is converted to a string by
   __SYSMACROS_DM1.)  This means the message must be a sequence of
   complete pp-tokens; in particular, English contractions (it's,
   can't) cannot be used.

   The message has been manually word-wrapped to fit in 80 columns
   when output by GCC 5 and 6.  The first line is shorter to leave
   some room for the ""foo.c:23: warning:"" annotation.  */"	file:///usr/include/x86_64-linux-gnu/sys/sysmacros.h:43:1:51:57
"/* This is the macro that must be defined to satisfy the misuse check
   in bits/sysmacros.h. */"	"/* This is the macro that must be defined to satisfy the misuse check
   in bits/sysmacros.h. */"	file:///usr/include/x86_64-linux-gnu/sys/sysmacros.h:34:1:35:26
"/* If <sys/sysmacros.h> is included after <sys/types.h>, these macros
   will already be defined, and we need to redefine them without the
   deprecation warnings.  (If they are included in the opposite order,
   the outer #ifndef will suppress this entire file and the macros
   will be usable without warnings.)  */"	"/* If <sys/sysmacros.h> is included after <sys/types.h>, these macros
   will already be defined, and we need to redefine them without the
   deprecation warnings.  (If they are included in the opposite order,
   the outer #ifndef will suppress this entire file and the macros
   will be usable without warnings.)  */"	file:///usr/include/x86_64-linux-gnu/sys/sysmacros.h:25:1:29:40
"/* Definitions of macros to access `dev_t' values.
   Copyright (C) 1996-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	"/* Definitions of macros to access `dev_t' values.
   Copyright (C) 1996-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	file:///usr/include/x86_64-linux-gnu/sys/sysmacros.h:1:1:17:38
/* bits/pthreadtypes.h */	/* bits/pthreadtypes.h */	file:///usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h:106:8:106:32
/* Extra attributes for the cleanup functions.  */	/* Extra attributes for the cleanup functions.  */	file:///usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h:102:1:102:50
"/* FLAGS must stay at this position in the structure to maintain
     binary compatibility.  */"	"/* FLAGS must stay at this position in the structure to maintain
     binary compatibility.  */"	file:///usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h:90:3:91:30
"/* FLAGS must stay at this position in the structure to maintain
     binary compatibility.  */"	"/* FLAGS must stay at this position in the structure to maintain
     binary compatibility.  */"	file:///usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h:85:3:86:30
/* Definitions for internal mutex struct.  */	/* Definitions for internal mutex struct.  */	file:///usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h:50:1:50:45
"/* Copyright (C) 2002-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	"/* Copyright (C) 2002-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	file:///usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h:1:1:16:38
/* _THREAD_SHARED_TYPES_H  */	/* _THREAD_SHARED_TYPES_H  */	file:///usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:178:8:178:36
/* Common definition of pthread_cond_t. */	/* Common definition of pthread_cond_t. */	file:///usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:149:1:149:42
"/* KIND must stay at this position in the structure to maintain
     binary compatibility with static initializers.  */"	"/* KIND must stay at this position in the structure to maintain
     binary compatibility with static initializers.  */"	file:///usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:126:3:127:55
/* Mutex __spins initializer used by PTHREAD_MUTEX_INITIALIZER.  */	/* Mutex __spins initializer used by PTHREAD_MUTEX_INITIALIZER.  */	file:///usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:114:1:114:67
/* Lock elision support.  */	/* Lock elision support.  */	file:///usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:94:1:94:28
/* Common definition of pthread_mutex_t. */	/* Common definition of pthread_mutex_t. */	file:///usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:79:1:79:43
"/* Arch-specific definitions.  Each architecture must define the following
   macros to define the expected sizes of pthread data types:

   __SIZEOF_PTHREAD_ATTR_T        - size of pthread_attr_t.
   __SIZEOF_PTHREAD_MUTEX_T       - size of pthread_mutex_t.
   __SIZEOF_PTHREAD_MUTEXATTR_T   - size of pthread_mutexattr_t.
   __SIZEOF_PTHREAD_COND_T        - size of pthread_cond_t.
   __SIZEOF_PTHREAD_CONDATTR_T    - size of pthread_condattr_t.
   __SIZEOF_PTHREAD_RWLOCK_T      - size of pthread_rwlock_t.
   __SIZEOF_PTHREAD_RWLOCKATTR_T  - size of pthread_rwlockattr_t.
   __SIZEOF_PTHREAD_BARRIER_T     - size of pthread_barrier_t.
   __SIZEOF_PTHREAD_BARRIERATTR_T - size of pthread_barrierattr_t.

   Also, the following macros must be define for internal pthread_mutex_t
   struct definitions (struct __pthread_mutex_s):

   __PTHREAD_COMPAT_PADDING_MID   - any additional members after 'kind'
				    and before '__spin' (for 64 bits) or
				    '__nusers' (for 32 bits).
   __PTHREAD_COMPAT_PADDING_END   - any additional members at the end of
				    the internal structure.
   __PTHREAD_MUTEX_LOCK_ELISION   - 1 if the architecture supports lock
				    elision or 0 otherwise.
   __PTHREAD_MUTEX_NUSERS_AFTER_KIND - control where to put __nusers.  The
				       preferred value for new architectures
				       is 0.
   __PTHREAD_MUTEX_USE_UNION      - control whether internal __spins and
				    __list will be place inside a union for
				    linuxthreads compatibility.
				    The preferred value for new architectures
				    is 0.

   For a new port the preferred values for the required defines are:

   #define __PTHREAD_COMPAT_PADDING_MID
   #define __PTHREAD_COMPAT_PADDING_END
   #define __PTHREAD_MUTEX_LOCK_ELISION         0
   #define __PTHREAD_MUTEX_NUSERS_AFTER_KIND    0
   #define __PTHREAD_MUTEX_USE_UNION            0

   __PTHREAD_MUTEX_LOCK_ELISION can be set to 1 if the hardware plans to
   eventually support lock elision using transactional memory.

   The additional macro defines any constraint for the lock alignment
   inside the thread structures:

   __LOCK_ALIGNMENT - for internal lock/futex usage.

   Same idea but for the once locking primitive:

   __ONCE_ALIGNMENT - for pthread_once_t/once_flag definition.

   And finally the internal pthread_rwlock_t (struct __pthread_rwlock_arch_t)
   must be defined.
 */"	"/* Arch-specific definitions.  Each architecture must define the following
   macros to define the expected sizes of pthread data types:

   __SIZEOF_PTHREAD_ATTR_T        - size of pthread_attr_t.
   __SIZEOF_PTHREAD_MUTEX_T       - size of pthread_mutex_t.
   __SIZEOF_PTHREAD_MUTEXATTR_T   - size of pthread_mutexattr_t.
   __SIZEOF_PTHREAD_COND_T        - size of pthread_cond_t.
   __SIZEOF_PTHREAD_CONDATTR_T    - size of pthread_condattr_t.
   __SIZEOF_PTHREAD_RWLOCK_T      - size of pthread_rwlock_t.
   __SIZEOF_PTHREAD_RWLOCKATTR_T  - size of pthread_rwlockattr_t.
   __SIZEOF_PTHREAD_BARRIER_T     - size of pthread_barrier_t.
   __SIZEOF_PTHREAD_BARRIERATTR_T - size of pthread_barrierattr_t.

   Also, the following macros must be define for internal pthread_mutex_t
   struct definitions (struct __pthread_mutex_s):

   __PTHREAD_COMPAT_PADDING_MID   - any additional members after 'kind'
				    and before '__spin' (for 64 bits) or
				    '__nusers' (for 32 bits).
   __PTHREAD_COMPAT_PADDING_END   - any additional members at the end of
				    the internal structure.
   __PTHREAD_MUTEX_LOCK_ELISION   - 1 if the architecture supports lock
				    elision or 0 otherwise.
   __PTHREAD_MUTEX_NUSERS_AFTER_KIND - control where to put __nusers.  The
				       preferred value for new architectures
				       is 0.
   __PTHREAD_MUTEX_USE_UNION      - control whether internal __spins and
				    __list will be place inside a union for
				    linuxthreads compatibility.
				    The preferred value for new architectures
				    is 0.

   For a new port the preferred values for the required defines are:

   #define __PTHREAD_COMPAT_PADDING_MID
   #define __PTHREAD_COMPAT_PADDING_END
   #define __PTHREAD_MUTEX_LOCK_ELISION         0
   #define __PTHREAD_MUTEX_NUSERS_AFTER_KIND    0
   #define __PTHREAD_MUTEX_USE_UNION            0

   __PTHREAD_MUTEX_LOCK_ELISION can be set to 1 if the hardware plans to
   eventually support lock elision using transactional memory.

   The additional macro defines any constraint for the lock alignment
   inside the thread structures:

   __LOCK_ALIGNMENT - for internal lock/futex usage.

   Same idea but for the once locking primitive:

   __ONCE_ALIGNMENT - for pthread_once_t/once_flag definition.

   And finally the internal pthread_rwlock_t (struct __pthread_rwlock_arch_t)
   must be defined.
 */"	file:///usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:22:1:76:3
"/* Common threading primitives definitions for both POSIX and C11.
   Copyright (C) 2017-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	"/* Common threading primitives definitions for both POSIX and C11.
   Copyright (C) 2017-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	file:///usr/include/x86_64-linux-gnu/bits/thread-shared-types.h:1:1:17:38
"/* POSIX barriers data type.  The structure of the type is
   deliberately not exposed.  */"	"/* POSIX barriers data type.  The structure of the type is
   deliberately not exposed.  */"	file:///usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:106:1:107:32
/* POSIX spinlock data type.  */	/* POSIX spinlock data type.  */	file:///usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:102:1:102:32
"/* Data structure for reader-writer lock variable handling.  The
   structure of the attribute type is deliberately not exposed.  */"	"/* Data structure for reader-writer lock variable handling.  The
   structure of the attribute type is deliberately not exposed.  */"	file:///usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:84:1:85:67
/* Once-only execution */	/* Once-only execution */	file:///usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:52:1:52:25
/* Keys for thread-specific data */	/* Keys for thread-specific data */	file:///usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:48:1:48:35
"/* Data structure for condition variable handling.  The structure of
   the attribute type is not exposed on purpose.  */"	"/* Data structure for condition variable handling.  The structure of
   the attribute type is not exposed on purpose.  */"	file:///usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:39:1:40:52
"/* Data structures for mutex handling.  The structure of the attribute
   type is not exposed on purpose.  */"	"/* Data structures for mutex handling.  The structure of the attribute
   type is not exposed on purpose.  */"	file:///usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:30:1:31:38
"/* Thread identifiers.  The structure of the attribute type is not
   exposed on purpose.  */"	"/* Thread identifiers.  The structure of the attribute type is not
   exposed on purpose.  */"	file:///usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:25:1:26:26
/* For internal mutex and condition variable definitions.  */	/* For internal mutex and condition variable definitions.  */	file:///usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:22:1:22:61
"/* Declaration of common pthread types for all architectures.
   Copyright (C) 2017-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	"/* Declaration of common pthread types for all architectures.
   Copyright (C) 2017-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	file:///usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:1:1:17:38
/* sys/types.h */	/* sys/types.h */	file:///usr/include/x86_64-linux-gnu/sys/types.h:259:8:259:24
/* Now add the thread types.  */	/* Now add the thread types.  */	file:///usr/include/x86_64-linux-gnu/sys/types.h:252:1:252:32
/* Type to count file system inodes.  */	/* Type to count file system inodes.  */	file:///usr/include/x86_64-linux-gnu/sys/types.h:248:38:248:77
/* Type to count file system blocks.  */	/* Type to count file system blocks.  */	file:///usr/include/x86_64-linux-gnu/sys/types.h:247:38:247:77
/* Type to count number of disk blocks. */	/* Type to count number of disk blocks. */	file:///usr/include/x86_64-linux-gnu/sys/types.h:246:38:246:79
/* Type to count file system inodes.  */	/* Type to count file system inodes.  */	file:///usr/include/x86_64-linux-gnu/sys/types.h:240:36:240:75
/* Type to count file system blocks.  */	/* Type to count file system blocks.  */	file:///usr/include/x86_64-linux-gnu/sys/types.h:236:36:236:75
/* Type to count number of disk blocks.  */	/* Type to count number of disk blocks.  */	file:///usr/include/x86_64-linux-gnu/sys/types.h:232:35:232:77
/* Type to count file system inodes.  */	/* Type to count file system inodes.  */	file:///usr/include/x86_64-linux-gnu/sys/types.h:227:34:227:73
/* Type to count file system blocks.  */	/* Type to count file system blocks.  */	file:///usr/include/x86_64-linux-gnu/sys/types.h:223:34:223:73
/* Type to count number of disk blocks.  */	/* Type to count number of disk blocks.  */	file:///usr/include/x86_64-linux-gnu/sys/types.h:219:31:219:73
/* Types from the Large File Support interface.  */	/* Types from the Large File Support interface.  */	file:///usr/include/x86_64-linux-gnu/sys/types.h:216:1:216:51
/* Use misc.  */	/* Use misc.  */	file:///usr/include/x86_64-linux-gnu/sys/types.h:207:8:207:23
"/* BSD defines `major', `minor', and `makedev' in this header.
   However, these symbols are likely to collide with user code, so we are
   going to stop defining them here in an upcoming release.  Code that needs
   these macros should include <sys/sysmacros.h> directly.  Code that does
   not need these macros should #undef them after including this header.  */"	"/* BSD defines `major', `minor', and `makedev' in this header.
   However, these symbols are likely to collide with user code, so we are
   going to stop defining them here in an upcoming release.  Code that needs
   these macros should include <sys/sysmacros.h> directly.  Code that does
   not need these macros should #undef them after including this header.  */"	file:///usr/include/x86_64-linux-gnu/sys/types.h:199:1:203:76
/* It also defines `fd_set' and the FD_* macros for `select'.  */	/* It also defines `fd_set' and the FD_* macros for `select'.  */	file:///usr/include/x86_64-linux-gnu/sys/types.h:196:1:196:65
/* In BSD <sys/types.h> is expected to define BYTE_ORDER.  */	/* In BSD <sys/types.h> is expected to define BYTE_ORDER.  */	file:///usr/include/x86_64-linux-gnu/sys/types.h:193:1:193:61
"/* Some code from BIND tests this macro to see if the types above are
   defined.  */"	"/* Some code from BIND tests this macro to see if the types above are
   defined.  */"	file:///usr/include/x86_64-linux-gnu/sys/types.h:186:1:187:15
/* For GCC 2.7 and later, we can use specific type-size attributes.  */	/* For GCC 2.7 and later, we can use specific type-size attributes.  */	file:///usr/include/x86_64-linux-gnu/sys/types.h:174:1:174:71
/* These were defined by ISO C without the first `_'.  */	/* These were defined by ISO C without the first `_'.  */	file:///usr/include/x86_64-linux-gnu/sys/types.h:160:1:160:57
/* These size-specific names are used by some of the inet code.  */	/* These size-specific names are used by some of the inet code.  */	file:///usr/include/x86_64-linux-gnu/sys/types.h:154:1:154:67
/* Old compatibility names for C types.  */	/* Old compatibility names for C types.  */	file:///usr/include/x86_64-linux-gnu/sys/types.h:148:1:148:43
"/*
 *	POSIX Standard: 2.6 Primitive System Data Types	<sys/types.h>
 */"	"/*
 *	POSIX Standard: 2.6 Primitive System Data Types	<sys/types.h>
 */"	file:///usr/include/x86_64-linux-gnu/sys/types.h:18:1:20:3
"/* Copyright (C) 1991-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	"/* Copyright (C) 1991-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	file:///usr/include/x86_64-linux-gnu/sys/types.h:1:1:16:38
/* alloca.h */	/* alloca.h */	file:///usr/include/alloca.h:40:8:40:21
/* GCC.  */	/* GCC.  */	file:///usr/include/alloca.h:36:8:36:18
/* Allocate a block that will be freed when the calling function exits.  */	/* Allocate a block that will be freed when the calling function exits.  */	file:///usr/include/alloca.h:31:1:31:75
/* Remove any previous definitions.  */	/* Remove any previous definitions.  */	file:///usr/include/alloca.h:28:1:28:39
"/* Copyright (C) 1992-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	"/* Copyright (C) 1992-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	file:///usr/include/alloca.h:1:1:16:38
/* Optimizing and Inlining.  */	/* Optimizing and Inlining.  */	file:///usr/include/x86_64-linux-gnu/bits/stdlib-float.h:29:8:29:38
"/* Floating-point inline functions for stdlib.h.
   Copyright (C) 2012-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	"/* Floating-point inline functions for stdlib.h.
   Copyright (C) 2012-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	file:///usr/include/x86_64-linux-gnu/bits/stdlib-float.h:1:1:17:38
/* stdlib.h  */	/* stdlib.h  */	file:///usr/include/stdlib.h:1028:8:1028:22
/* Define some macros helping to catch buffer overflows.  */	/* Define some macros helping to catch buffer overflows.  */	file:///usr/include/stdlib.h:1018:1:1018:60
"/* Return the index into the active-logins file (utmp) for
   the controlling terminal.  */"	"/* Return the index into the active-logins file (utmp) for
   the controlling terminal.  */"	file:///usr/include/stdlib.h:1011:1:1012:32
"/* Put the 1 minute, 5 minute and 15 minute load averages into the first
   NELEM elements of LOADAVG.  Return the number written (never more than
   three, but may be less than NELEM), or -1 if an error occurred.  */"	"/* Put the 1 minute, 5 minute and 15 minute load averages into the first
   NELEM elements of LOADAVG.  Return the number written (never more than
   three, but may be less than NELEM), or -1 if an error occurred.  */"	file:///usr/include/stdlib.h:1003:1:1005:70
/* Open a master pseudo terminal and return its file descriptor.  */	/* Open a master pseudo terminal and return its file descriptor.  */	file:///usr/include/stdlib.h:998:1:998:68
"/* Store at most BUFLEN characters of the pathname of the slave pseudo
   terminal associated with the master FD is open on in BUF.
   Return 0 on success, otherwise an error number.  */"	"/* Store at most BUFLEN characters of the pathname of the slave pseudo
   terminal associated with the master FD is open on in BUF.
   Return 0 on success, otherwise an error number.  */"	file:///usr/include/stdlib.h:992:1:994:54
"/* Return the pathname of the pseudo terminal slave associated with
   the master FD is open on, or NULL on errors.
   The returned storage is good until the next call to this function.  */"	"/* Return the pathname of the pseudo terminal slave associated with
   the master FD is open on, or NULL on errors.
   The returned storage is good until the next call to this function.  */"	file:///usr/include/stdlib.h:985:1:987:73
"/* Release an internal lock so the slave can be opened.
   Call after grantpt().  */"	"/* Release an internal lock so the slave can be opened.
   Call after grantpt().  */"	file:///usr/include/stdlib.h:981:1:982:28
/* Chown the slave to the calling user.  */	/* Chown the slave to the calling user.  */	file:///usr/include/stdlib.h:978:1:978:43
"/* The next four functions all take a master pseudo-tty fd and
   perform an operation on the associated slave:  */"	"/* The next four functions all take a master pseudo-tty fd and
   perform an operation on the associated slave:  */"	file:///usr/include/stdlib.h:975:1:976:52
/* Return a master pseudo-terminal handle.  */	/* Return a master pseudo-terminal handle.  */	file:///usr/include/stdlib.h:970:1:970:46
/* X/Open pseudo terminal handling.  */	/* X/Open pseudo terminal handling.  */	file:///usr/include/stdlib.h:967:1:967:39
/* Setup DES tables according KEY.  */	/* Setup DES tables according KEY.  */	file:///usr/include/stdlib.h:962:1:962:38
"/* Parse comma separated suboption from *OPTIONP and match against
   strings in TOKENS.  If found return index and set *VALUEP to
   optional value introduced by an equal sign.  If the suboption is
   not part of TOKENS return in *VALUEP beginning of unknown
   suboption.  On exit *OPTIONP is set to the beginning of the next
   token or at the terminating NUL character.  */"	"/* Parse comma separated suboption from *OPTIONP and match against
   strings in TOKENS.  If found return index and set *VALUEP to
   optional value introduced by an equal sign.  If the suboption is
   not part of TOKENS return in *VALUEP beginning of unknown
   suboption.  On exit *OPTIONP is set to the beginning of the next
   token or at the terminating NUL character.  */"	file:///usr/include/stdlib.h:948:1:953:49
"/* Determine whether the string value of RESPONSE matches the affirmation
   or negative response expression as specified by the LC_MESSAGES category
   in the program's current locale.  Returns 1 if affirmative, 0 if
   negative, and -1 if not matching.  */"	"/* Determine whether the string value of RESPONSE matches the affirmation
   or negative response expression as specified by the LC_MESSAGES category
   in the program's current locale.  Returns 1 if affirmative, 0 if
   negative, and -1 if not matching.  */"	file:///usr/include/stdlib.h:939:1:942:40
/* Convert a wide char string to multibyte string.  */	/* Convert a wide char string to multibyte string.  */	file:///usr/include/stdlib.h:932:1:932:54
/* Convert a multibyte string to a wide char string.  */	/* Convert a multibyte string to a wide char string.  */	file:///usr/include/stdlib.h:929:1:929:56
"/* Put the multibyte character represented
   by WCHAR in S, returning its length.  */"	"/* Put the multibyte character represented
   by WCHAR in S, returning its length.  */"	file:///usr/include/stdlib.h:924:1:925:43
"/* Return the length of the given multibyte character,
   putting its `wchar_t' representation in *PWC.  */"	"/* Return the length of the given multibyte character,
   putting its `wchar_t' representation in *PWC.  */"	file:///usr/include/stdlib.h:920:1:921:52
"/* Return the length of the multibyte character
   in S, which is no longer than N.  */"	"/* Return the length of the multibyte character
   in S, which is no longer than N.  */"	file:///usr/include/stdlib.h:917:1:918:39
/* misc */	/* misc */	file:///usr/include/stdlib.h:914:8:914:17
"/* Reentrant version of the functions above which provide their own
   buffers.  */"	"/* Reentrant version of the functions above which provide their own
   buffers.  */"	file:///usr/include/stdlib.h:897:1:898:15
/* Long double versions of above functions.  */	/* Long double versions of above functions.  */	file:///usr/include/stdlib.h:886:1:886:47
"/* If possible convert VALUE to a string with NDIGIT significant digits.
   Otherwise use exponential representation.  The resulting string will
   be written to BUF.  */"	"/* If possible convert VALUE to a string with NDIGIT significant digits.
   Otherwise use exponential representation.  The resulting string will
   be written to BUF.  */"	file:///usr/include/stdlib.h:878:1:880:25
"/* Convert VALUE to a string rounded to NDIGIT decimal digits.  Set *DECPT
   with the position of the decimal character and *SIGN with the sign of
   the number.  */"	"/* Convert VALUE to a string rounded to NDIGIT decimal digits.  Set *DECPT
   with the position of the decimal character and *SIGN with the sign of
   the number.  */"	file:///usr/include/stdlib.h:872:1:874:18
"/* Convert VALUE to a string with NDIGIT digits and return a pointer to
   this.  Set *DECPT with the position of the decimal character and *SIGN
   with the sign of the number.  */"	"/* Convert VALUE to a string with NDIGIT digits and return a pointer to
   this.  Set *DECPT with the position of the decimal character and *SIGN
   with the sign of the number.  */"	file:///usr/include/stdlib.h:866:1:868:35
"/* Convert floating point numbers to strings.  The returned values are
   valid only until another call to the same function.  */"	"/* Convert floating point numbers to strings.  The returned values are
   valid only until another call to the same function.  */"	file:///usr/include/stdlib.h:863:1:864:58
/* GCC may have built-ins for these someday.  */	/* GCC may have built-ins for these someday.  */	file:///usr/include/stdlib.h:848:1:848:48
"/* Return the `div_t', `ldiv_t' or `lldiv_t' representation
   of the value of NUMER over DENOM. */"	"/* Return the `div_t', `ldiv_t' or `lldiv_t' representation
   of the value of NUMER over DENOM. */"	file:///usr/include/stdlib.h:846:1:847:39
/* Return the absolute value of X.  */	/* Return the absolute value of X.  */	file:///usr/include/stdlib.h:836:1:836:38
"/* Sort NMEMB elements of BASE, of SIZE bytes each,
   using COMPAR to perform the comparisons.  */"	"/* Sort NMEMB elements of BASE, of SIZE bytes each,
   using COMPAR to perform the comparisons.  */"	file:///usr/include/stdlib.h:825:1:826:47
"/* Do a binary search for KEY in BASE, which consists of NMEMB elements
   of SIZE bytes each, using COMPAR to perform the comparisons.  */"	"/* Do a binary search for KEY in BASE, which consists of NMEMB elements
   of SIZE bytes each, using COMPAR to perform the comparisons.  */"	file:///usr/include/stdlib.h:815:1:816:67
/* Shorthand for type of comparison functions.  */	/* Shorthand for type of comparison functions.  */	file:///usr/include/stdlib.h:802:1:802:50
"/* Return the canonical absolute name of file NAME.  If RESOLVED is
   null, the result is malloc'd; otherwise, if the canonical name is
   PATH_MAX chars or more, returns null with `errno' set to
   ENAMETOOLONG; if the name fits in fewer than PATH_MAX chars,
   returns the name in RESOLVED.  */"	"/* Return the canonical absolute name of file NAME.  If RESOLVED is
   null, the result is malloc'd; otherwise, if the canonical name is
   PATH_MAX chars or more, returns null with `errno' set to
   ENAMETOOLONG; if the name fits in fewer than PATH_MAX chars,
   returns the name in RESOLVED.  */"	file:///usr/include/stdlib.h:792:1:796:36
"/* Return a malloc'd string containing the canonical absolute name of the
   existing named file.  */"	"/* Return a malloc'd string containing the canonical absolute name of the
   existing named file.  */"	file:///usr/include/stdlib.h:785:1:786:27
"/* Execute the given line as a shell command.

   This function is a cancellation point and therefore not marked with
   __THROW.  */"	"/* Execute the given line as a shell command.

   This function is a cancellation point and therefore not marked with
   __THROW.  */"	file:///usr/include/stdlib.h:777:1:780:15
"/* Similar to mkostemp, but the template can have a suffix after the
   XXXXXX.  The length of the suffix is specified in the second
   parameter.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	"/* Similar to mkostemp, but the template can have a suffix after the
   XXXXXX.  The length of the suffix is specified in the second
   parameter.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	file:///usr/include/stdlib.h:752:1:757:27
"/* Generate a unique temporary file name from TEMPLATE similar to
   mkstemp.  But allow the caller to pass additional flags which are
   used in the open call to create the file..

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	"/* Generate a unique temporary file name from TEMPLATE similar to
   mkstemp.  But allow the caller to pass additional flags which are
   used in the open call to create the file..

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	file:///usr/include/stdlib.h:732:1:737:27
"/* Create a unique temporary directory from TEMPLATE.
   The last six characters of TEMPLATE must be ""XXXXXX"";
   they are replaced with a string that makes the directory name unique.
   Returns TEMPLATE, or a null pointer if it cannot get a unique name.
   The directory is created mode 700.  */"	"/* Create a unique temporary directory from TEMPLATE.
   The last six characters of TEMPLATE must be ""XXXXXX"";
   they are replaced with a string that makes the directory name unique.
   Returns TEMPLATE, or a null pointer if it cannot get a unique name.
   The directory is created mode 700.  */"	file:///usr/include/stdlib.h:723:1:727:41
"/* Similar to mkstemp, but the template can have a suffix after the
   XXXXXX.  The length of the suffix is specified in the second
   parameter.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	"/* Similar to mkstemp, but the template can have a suffix after the
   XXXXXX.  The length of the suffix is specified in the second
   parameter.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	file:///usr/include/stdlib.h:700:1:705:27
"/* Generate a unique temporary file name from TEMPLATE.
   The last six characters of TEMPLATE must be ""XXXXXX"";
   they are replaced with a string that makes the filename unique.
   Returns a file descriptor open on the file for reading and writing,
   or -1 if it cannot create a uniquely-named file.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	"/* Generate a unique temporary file name from TEMPLATE.
   The last six characters of TEMPLATE must be ""XXXXXX"";
   they are replaced with a string that makes the filename unique.
   Returns a file descriptor open on the file for reading and writing,
   or -1 if it cannot create a uniquely-named file.

   This function is a possible cancellation point and therefore not
   marked with __THROW.  */"	file:///usr/include/stdlib.h:676:1:683:27
"/* Generate a unique temporary file name from TEMPLATE.
   The last six characters of TEMPLATE must be ""XXXXXX"";
   they are replaced with a string that makes the file name unique.
   Always returns TEMPLATE, it's either a temporary file name or a null
   string if it cannot get a unique file name.  */"	"/* Generate a unique temporary file name from TEMPLATE.
   The last six characters of TEMPLATE must be ""XXXXXX"";
   they are replaced with a string that makes the file name unique.
   Always returns TEMPLATE, it's either a temporary file name or a null
   string if it cannot get a unique file name.  */"	file:///usr/include/stdlib.h:667:1:671:50
"/* The `clearenv' was planned to be added to POSIX.1 but probably
   never made it.  Nevertheless the POSIX.9 standard (POSIX bindings
   for Fortran 77) requires this function.  */"	"/* The `clearenv' was planned to be added to POSIX.1 but probably
   never made it.  Nevertheless the POSIX.9 standard (POSIX bindings
   for Fortran 77) requires this function.  */"	file:///usr/include/stdlib.h:658:1:660:46
/* Remove the variable NAME from the environment.  */	/* Remove the variable NAME from the environment.  */	file:///usr/include/stdlib.h:653:1:653:53
"/* Set NAME to VALUE in the environment.
   If REPLACE is nonzero, overwrite an existing value.  */"	"/* Set NAME to VALUE in the environment.
   If REPLACE is nonzero, overwrite an existing value.  */"	file:///usr/include/stdlib.h:648:1:649:58
"/* Put STRING, which is of the form ""NAME=VALUE"", in the environment.
   If there is no `=', remove NAME from the environment.  */"	"/* Put STRING, which is of the form ""NAME=VALUE"", in the environment.
   If there is no `=', remove NAME from the environment.  */"	file:///usr/include/stdlib.h:642:1:643:60
"/* The SVID says this is in <stdio.h>, but this seems a better place.	*/"	"/* The SVID says this is in <stdio.h>, but this seems a better place.	*/"	file:///usr/include/stdlib.h:641:1:641:72
"/* This function is similar to the above but returns NULL if the
   programs is running with SUID or SGID enabled.  */"	"/* This function is similar to the above but returns NULL if the
   programs is running with SUID or SGID enabled.  */"	file:///usr/include/stdlib.h:634:1:635:53
/* Return the value of envariable NAME, or NULL if it doesn't exist.  */	/* Return the value of envariable NAME, or NULL if it doesn't exist.  */	file:///usr/include/stdlib.h:630:1:630:72
"/* Terminate the program with STATUS without calling any of the
   functions registered with `atexit' or `on_exit'.  */"	"/* Terminate the program with STATUS without calling any of the
   functions registered with `atexit' or `on_exit'.  */"	file:///usr/include/stdlib.h:624:1:625:55
"/* Call all functions registered with `at_quick_exit' in the reverse
   of the order in which they were registered and terminate program
   execution with STATUS.  */"	"/* Call all functions registered with `at_quick_exit' in the reverse
   of the order in which they were registered and terminate program
   execution with STATUS.  */"	file:///usr/include/stdlib.h:617:1:619:29
"/* Call all functions registered with `atexit' and `on_exit',
   in the reverse of the order in which they were registered,
   perform stdio cleanup, and terminate program execution with STATUS.  */"	"/* Call all functions registered with `atexit' and `on_exit',
   in the reverse of the order in which they were registered,
   perform stdio cleanup, and terminate program execution with STATUS.  */"	file:///usr/include/stdlib.h:611:1:613:74
"/* Register a function to be called with the status
   given to `exit' and the given argument.  */"	"/* Register a function to be called with the status
   given to `exit' and the given argument.  */"	file:///usr/include/stdlib.h:605:1:606:46
/* Register a function to be called when `quick_exit' is called.  */	/* Register a function to be called when `quick_exit' is called.  */	file:///usr/include/stdlib.h:595:1:595:68
/* Register a function to be called when `exit' is called.  */	/* Register a function to be called when `exit' is called.  */	file:///usr/include/stdlib.h:591:1:591:62
/* Abort execution and generate a core-dump.  */	/* Abort execution and generate a core-dump.  */	file:///usr/include/stdlib.h:587:1:587:48
/* ISO C variant of aligned allocation.  */	/* ISO C variant of aligned allocation.  */	file:///usr/include/stdlib.h:582:1:582:43
/* Allocate memory of SIZE bytes with an alignment of ALIGNMENT.  */	/* Allocate memory of SIZE bytes with an alignment of ALIGNMENT.  */	file:///usr/include/stdlib.h:576:1:576:68
/* Allocate SIZE bytes on a page boundary.  The storage cannot be freed.  */	/* Allocate SIZE bytes on a page boundary.  The storage cannot be freed.  */	file:///usr/include/stdlib.h:571:1:571:76
/* Use misc.  */	/* Use misc.  */	file:///usr/include/stdlib.h:567:8:567:23
/* Free a block allocated by `malloc', `realloc' or `calloc'.  */	/* Free a block allocated by `malloc', `realloc' or `calloc'.  */	file:///usr/include/stdlib.h:562:1:562:65
"/* __attribute_malloc__ is not used, because if reallocarray returns
   the same pointer that was passed to it, aliasing needs to be allowed
   between objects pointed by the old and new pointers.  */"	"/* __attribute_malloc__ is not used, because if reallocarray returns
   the same pointer that was passed to it, aliasing needs to be allowed
   between objects pointed by the old and new pointers.  */"	file:///usr/include/stdlib.h:555:1:557:59
"/* Re-allocate the previously allocated block in PTR, making the new
   block large enough for NMEMB elements of SIZE bytes each.  */"	"/* Re-allocate the previously allocated block in PTR, making the new
   block large enough for NMEMB elements of SIZE bytes each.  */"	file:///usr/include/stdlib.h:553:1:554:64
"/* __attribute_malloc__ is not used, because if realloc returns
   the same pointer that was passed to it, aliasing needs to be allowed
   between objects pointed by the old and new pointers.  */"	"/* __attribute_malloc__ is not used, because if realloc returns
   the same pointer that was passed to it, aliasing needs to be allowed
   between objects pointed by the old and new pointers.  */"	file:///usr/include/stdlib.h:546:1:548:59
"/* Re-allocate the previously allocated block
   in PTR, making the new block SIZE bytes long.  */"	"/* Re-allocate the previously allocated block
   in PTR, making the new block SIZE bytes long.  */"	file:///usr/include/stdlib.h:544:1:545:52
/* Allocate NMEMB elements of SIZE bytes each, all initialized to 0.  */	/* Allocate NMEMB elements of SIZE bytes each, all initialized to 0.  */	file:///usr/include/stdlib.h:540:1:540:72
/* Allocate SIZE bytes of memory.  */	/* Allocate SIZE bytes of memory.  */	file:///usr/include/stdlib.h:538:1:538:37
/* Use misc or X/Open.  */	/* Use misc or X/Open.  */	file:///usr/include/stdlib.h:536:8:536:33
/* Use misc.  */	/* Use misc.  */	file:///usr/include/stdlib.h:535:9:535:24
/* Seed random number generator.  */	/* Seed random number generator.  */	file:///usr/include/stdlib.h:525:1:525:36
/* Return signed, long integers in [-2^31,2^31).  */	/* Return signed, long integers in [-2^31,2^31).  */	file:///usr/include/stdlib.h:516:1:516:52
/* Return non-negative, long integer in [0,2^31).  */	/* Return non-negative, long integer in [0,2^31).  */	file:///usr/include/stdlib.h:507:1:507:53
/* Return non-negative, double-precision floating-point value in [0.0,1.0).  */	/* Return non-negative, double-precision floating-point value in [0.0,1.0).  */	file:///usr/include/stdlib.h:500:1:500:79
"/* Factor in congruential
						   formula.  */"	"/* Factor in congruential
						   formula.  */"	file:///usr/include/stdlib.h:496:47:497:21
/* Flag for initializing.  */	/* Flag for initializing.  */	file:///usr/include/stdlib.h:495:32:495:60
/* Additive const. in congruential formula.  */	/* Additive const. in congruential formula.  */	file:///usr/include/stdlib.h:494:29:494:75
/* Old state.  */	/* Old state.  */	file:///usr/include/stdlib.h:493:36:493:52
/* Current state.  */	/* Current state.  */	file:///usr/include/stdlib.h:492:32:492:52
"/* Data structure for communication with thread safe versions.  This
   type is to be regarded as opaque.  It's only exported because users
   have to allocate objects of this type.  */"	"/* Data structure for communication with thread safe versions.  This
   type is to be regarded as opaque.  It's only exported because users
   have to allocate objects of this type.  */"	file:///usr/include/stdlib.h:487:1:489:45
/* Seed random number generator.  */	/* Seed random number generator.  */	file:///usr/include/stdlib.h:480:1:480:36
/* Return signed, long integers in [-2^31,2^31).  */	/* Return signed, long integers in [-2^31,2^31).  */	file:///usr/include/stdlib.h:475:1:475:52
/* Return non-negative, long integer in [0,2^31).  */	/* Return non-negative, long integer in [0,2^31).  */	file:///usr/include/stdlib.h:470:1:470:53
/* Return non-negative, double-precision floating-point value in [0.0,1.0).  */	/* Return non-negative, double-precision floating-point value in [0.0,1.0).  */	file:///usr/include/stdlib.h:466:1:466:79
/* System V style 48-bit random number generator functions.  */	/* System V style 48-bit random number generator functions.  */	file:///usr/include/stdlib.h:464:1:464:63
/* Reentrant interface according to POSIX.1.  */	/* Reentrant interface according to POSIX.1.  */	file:///usr/include/stdlib.h:458:1:458:48
/* Seed the random number generator with the given number.  */	/* Seed the random number generator with the given number.  */	file:///usr/include/stdlib.h:454:1:454:62
/* Return a random integer between 0 and RAND_MAX inclusive.  */	/* Return a random integer between 0 and RAND_MAX inclusive.  */	file:///usr/include/stdlib.h:452:1:452:64
/* Use extended X/Open || misc. */	/* Use extended X/Open || misc. */	file:///usr/include/stdlib.h:449:8:449:41
/* Use misc.  */	/* Use misc.  */	file:///usr/include/stdlib.h:448:9:448:24
/* Pointer behind state table.  */	/* Pointer behind state table.  */	file:///usr/include/stdlib.h:431:24:431:57
/* Distance between front and rear.  */	/* Distance between front and rear.  */	file:///usr/include/stdlib.h:430:20:430:58
/* Degree of random number generator.  */	/* Degree of random number generator.  */	file:///usr/include/stdlib.h:429:20:429:60
/* Type of random number generator.  */	/* Type of random number generator.  */	file:///usr/include/stdlib.h:428:21:428:59
/* Array of state values.  */	/* Array of state values.  */	file:///usr/include/stdlib.h:427:22:427:50
/* Rear pointer.  */	/* Rear pointer.  */	file:///usr/include/stdlib.h:426:21:426:40
/* Front pointer.  */	/* Front pointer.  */	file:///usr/include/stdlib.h:425:21:425:41
"/* Reentrant versions of the `random' family of functions.
   These functions all use the following data structure to contain
   state, rather than global state variables.  */"	"/* Reentrant versions of the `random' family of functions.
   These functions all use the following data structure to contain
   state, rather than global state variables.  */"	file:///usr/include/stdlib.h:419:1:421:49
"/* Switch the random number generator to state buffer STATEBUF,
   which should have been previously initialized by `initstate'.  */"	"/* Switch the random number generator to state buffer STATEBUF,
   which should have been previously initialized by `initstate'.  */"	file:///usr/include/stdlib.h:413:1:414:68
"/* Initialize the random number generator to use state buffer STATEBUF,
   of length STATELEN, and seed it with SEED.  Optimal lengths are 8, 16,
   32, 64, 128 and 256, the bigger the better; values less than 8 will
   cause an error and values greater than 256 will be rounded down.  */"	"/* Initialize the random number generator to use state buffer STATEBUF,
   of length STATELEN, and seed it with SEED.  Optimal lengths are 8, 16,
   32, 64, 128 and 256, the bigger the better; values less than 8 will
   cause an error and values greater than 256 will be rounded down.  */"	file:///usr/include/stdlib.h:406:1:409:71
/* Seed the random number generator with the given number.  */	/* Seed the random number generator with the given number.  */	file:///usr/include/stdlib.h:403:1:403:62
/* Return a random long integer between 0 and RAND_MAX inclusive.  */	/* Return a random long integer between 0 and RAND_MAX inclusive.  */	file:///usr/include/stdlib.h:400:1:400:69
"/* These are the functions that actually do things.  The `random', `srandom',
   `initstate' and `setstate' functions are those from BSD Unices.
   The `rand' and `srand' functions are required by the ANSI standard.
   We provide both interfaces to the same random number generator.  */"	"/* These are the functions that actually do things.  The `random', `srandom',
   `initstate' and `setstate' functions are those from BSD Unices.
   The `rand' and `srand' functions are required by the ANSI standard.
   We provide both interfaces to the same random number generator.  */"	file:///usr/include/stdlib.h:396:1:399:70
/* we need int32_t... */	/* we need int32_t... */	file:///usr/include/stdlib.h:394:25:394:48
/* Use misc || extended X/Open.  */	/* Use misc || extended X/Open.  */	file:///usr/include/stdlib.h:391:8:391:42
/* Read a number from a string S in base 64 as above.  */	/* Read a number from a string S in base 64 as above.  */	file:///usr/include/stdlib.h:387:1:387:57
"/* Convert N to base 64 using the digits ""./0-9A-Za-z"", least-significant
   digit first.  Returns a pointer to static storage overwritten by the
   next call.  */"	"/* Convert N to base 64 using the digits ""./0-9A-Za-z"", least-significant
   digit first.  Returns a pointer to static storage overwritten by the
   next call.  */"	file:///usr/include/stdlib.h:382:1:384:17
/* Optimizing and Inlining.  */	/* Optimizing and Inlining.  */	file:///usr/include/stdlib.h:378:8:378:38
/* GNU */	/* GNU */	file:///usr/include/stdlib.h:356:8:356:16
"/* Parallel versions of the functions above which take the locale to
   use as an additional parameter.  These are GNU extensions inspired
   by the POSIX.1-2008 extended locale API.  */"	"/* Parallel versions of the functions above which take the locale to
   use as an additional parameter.  These are GNU extensions inspired
   by the POSIX.1-2008 extended locale API.  */"	file:///usr/include/stdlib.h:269:1:271:47
/* Convert a floating-point number to a string.  */	/* Convert a floating-point number to a string.  */	file:///usr/include/stdlib.h:210:1:210:51
/* ISO C99 or use MISC.  */	/* ISO C99 or use MISC.  */	file:///usr/include/stdlib.h:208:8:208:34
/* Convert a string to an unsigned quadword integer.  */	/* Convert a string to an unsigned quadword integer.  */	file:///usr/include/stdlib.h:203:1:203:56
/* Convert a string to a quadword integer.  */	/* Convert a string to a quadword integer.  */	file:///usr/include/stdlib.h:198:1:198:46
/* Use misc.  */	/* Use misc.  */	file:///usr/include/stdlib.h:195:8:195:23
/* Convert a string to an unsigned quadword integer.  */	/* Convert a string to an unsigned quadword integer.  */	file:///usr/include/stdlib.h:190:1:190:56
/* Convert a string to a quadword integer.  */	/* Convert a string to a quadword integer.  */	file:///usr/include/stdlib.h:185:1:185:46
/* Convert a string to an unsigned long integer.  */	/* Convert a string to an unsigned long integer.  */	file:///usr/include/stdlib.h:179:1:179:52
/* Convert a string to a long integer.  */	/* Convert a string to a long integer.  */	file:///usr/include/stdlib.h:175:1:175:42
/* Likewise for '_FloatN' and '_FloatNx'.  */	/* Likewise for '_FloatN' and '_FloatNx'.  */	file:///usr/include/stdlib.h:131:1:131:45
/* Likewise for `float' and `long double' sizes of floating-point numbers.  */	/* Likewise for `float' and `long double' sizes of floating-point numbers.  */	file:///usr/include/stdlib.h:122:1:122:78
/* Convert a string to a floating-point number.  */	/* Convert a string to a floating-point number.  */	file:///usr/include/stdlib.h:116:1:116:51
/* Convert a string to a long long integer.  */	/* Convert a string to a long long integer.  */	file:///usr/include/stdlib.h:111:1:111:47
/* Convert a string to a long integer.  */	/* Convert a string to a long integer.  */	file:///usr/include/stdlib.h:106:1:106:42
/* Convert a string to an integer.  */	/* Convert a string to an integer.  */	file:///usr/include/stdlib.h:103:1:103:38
/* Convert a string to a floating-point number.  */	/* Convert a string to a floating-point number.  */	file:///usr/include/stdlib.h:100:1:100:51
/* Maximum length of a multibyte character in the current locale.  */	/* Maximum length of a multibyte character in the current locale.  */	file:///usr/include/stdlib.h:95:1:95:69
/* Successful exit status.  */	/* Successful exit status.  */	file:///usr/include/stdlib.h:92:24:92:53
/* Failing exit status.  */	/* Failing exit status.  */	file:///usr/include/stdlib.h:91:24:91:50
"/* We define these the same for all machines.
   Changes from this to the outside world should be done in `_exit'.  */"	"/* We define these the same for all machines.
   Changes from this to the outside world should be done in `_exit'.  */"	file:///usr/include/stdlib.h:89:1:90:72
/* The largest number rand will return (same as INT_MAX).  */	/* The largest number rand will return (same as INT_MAX).  */	file:///usr/include/stdlib.h:85:1:85:61
/* Remainder.  */	/* Remainder.  */	file:///usr/include/stdlib.h:79:25:79:41
/* Quotient.  */	/* Quotient.  */	file:///usr/include/stdlib.h:78:26:78:41
/* Returned by `lldiv'.  */	/* Returned by `lldiv'.  */	file:///usr/include/stdlib.h:75:1:75:27
/* Remainder.  */	/* Remainder.  */	file:///usr/include/stdlib.h:69:20:69:36
/* Quotient.  */	/* Quotient.  */	file:///usr/include/stdlib.h:68:21:68:36
/* Returned by `ldiv'.  */	/* Returned by `ldiv'.  */	file:///usr/include/stdlib.h:64:1:64:26
/* Remainder.  */	/* Remainder.  */	file:///usr/include/stdlib.h:61:16:61:32
/* Quotient.  */	/* Quotient.  */	file:///usr/include/stdlib.h:60:17:60:32
/* Returned by `div'.  */	/* Returned by `div'.  */	file:///usr/include/stdlib.h:57:1:57:25
/* _FloatN API tests for enablement.  */	/* _FloatN API tests for enablement.  */	file:///usr/include/stdlib.h:54:1:54:40
/* X/Open or XPG7 and <sys/wait.h> not included.  */	/* X/Open or XPG7 and <sys/wait.h> not included.  */	file:///usr/include/stdlib.h:52:8:52:59
/* Define the macros <sys/wait.h> also would define this way.  */	/* Define the macros <sys/wait.h> also would define this way.  */	file:///usr/include/stdlib.h:42:1:42:65
/* XPG requires a few symbols from <sys/wait.h> being defined.  */	/* XPG requires a few symbols from <sys/wait.h> being defined.  */	file:///usr/include/stdlib.h:38:1:38:66
/* Get size_t, wchar_t and NULL from <stddef.h>.  */	/* Get size_t, wchar_t and NULL from <stddef.h>.  */	file:///usr/include/stdlib.h:27:1:27:52
"/*
 *	ISO C99 Standard: 7.20 General utilities	<stdlib.h>
 */"	"/*
 *	ISO C99 Standard: 7.20 General utilities	<stdlib.h>
 */"	file:///usr/include/stdlib.h:18:1:20:3
"/* Copyright (C) 1991-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	"/* Copyright (C) 1991-2018 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */"	file:///usr/include/stdlib.h:1:1:16:38
// }	// }	file:///home/aadityanaik/codeql-exploration/sample-code/good_casts.h:35:1:35:4
// void good_cast7() {	// void good_cast7() {	file:///home/aadityanaik/codeql-exploration/sample-code/good_casts.h:33:1:33:22
// }	// }	file:///home/aadityanaik/codeql-exploration/sample-code/good_casts.h:31:1:31:4
// void good_cast6() {	// void good_cast6() {	file:///home/aadityanaik/codeql-exploration/sample-code/good_casts.h:29:1:29:22
