*stmt_decl_entry_bind(EXPR, LOC, NUM, EXPR)
*attribute_arg_value(EXPR, STR)
*fileannotations(PATH, NUM, STR, STR)
*inmacroexpansion(EXPR, EXPR)
*usertypes(TYPE, STR, NUM)
*initialisers(EXPR, EXPR, EXPR, LOC)
*stmt_decl_bind(EXPR, LOC, NUM, EXPR)
*type_mentions(EXPR, TYPE, LOC, KIND)
*var_decls(EXPR, EXPR, TYPE, STR, LOC)
*comments(COMMENT, STR, LOC)
*type_decls(EXPR, TYPE, LOC)
*for_update(EXPR, LOC, EXPR, LOC)
*folders(PATH, STR, STR)
*macroparent(EXPR, EXPR)
*affectedbymacroexpansion(EXPR, EXPR)
*mangled_name(TYPE)
*type_def(EXPR, STR, LOC)
*numlines(EXPR, NUM, NUM, NUM)
*fun_def(EXPR)
*is_pod_class(EXPR)
*for_body(EXPR, LOC, EXPR, LOC)
*routinetypes(EXPR, LOC, TYPE)
*globalvariables(EXPR, TYPE, STR)
*derivedtypes(EXPR, STR, NUM, TYPE)
*membervariables(EXPR, TYPE, STR)
*exprparents(EXPR, LOC, NUM, EXPR)
*specialnamequalifyingelements(EXPR, STR)
*is_standard_layout_class(EXPR)
*attributes(EXPR, NUM, STR, STR, LOC)
*successors(EXPR, LOC, EXPR, LOC)
*macro_argument_expanded(EXPR, NUM, STR)
*for_initialization(EXPR, LOC, EXPR, LOC)
*is_complete(EXPR)
*macrolocationbind(EXPR, LOC)
*locations_expr(LOC, PATH, NUM, NUM, NUM, NUM)
*funspecifiers(EXPR, EXPR)
*link_parent(EXPR, STR)
*fun_decls(EXPR, LOC, EXPR, TYPE, STR, LOC)
*blockscope(EXPR, LOC, EXPR)
*macroinvocations(EXPR, EXPR, LOC, NUM)
*sizeof_bind(EXPR, TYPE)
*valuebind(EXPR)
*preproctrue(EXPR)
*specifiers(EXPR,STR)
*commentbinding(COMMENT, EXPR)
*valuetext(EXPR)
*compgenerated(TYPE)
*var_def(EXPR)
*function_entry_point(EXPR, EXPR, LOC)
*macro_argument_unexpanded(EXPR, NUM, STR)
*varspecifiers(EXPR, STR)
*localvariables(EXPR, LOC, TYPE, STR)
*locations_stmt(LOC, PATH, NUM, NUM, NUM, NUM)
*namespaces(EXPR, EXPR)
*usertypesize(TYPE, NUM, NUM)
*functions(EXPR, LOC, STR, NUM)
*var_decl_specifiers(EXPR, LOC,STR)
*funbind(EXPR, LOC, EXPR)
*containerparent(EXPR, EXPR)
*typeattributes(TYPE, EXPR)
*typespecifiers(TYPE, STR)
*link_targets(STR, STR)
*fun_decl_specifiers(EXPR, LOC, STR)
*preproctext(EXPR, EXPR, EXPR)
*function_return_type(EXPR, LOC, TYPE)
*params(EXPR, LOC, EXPR, NUM, TYPE)
*varbind(EXPR, EXPR)
*values(EXPR, LOC, STR, STR)
*includes(EXPR, PATH)
*falsecond(EXPR, LOC, EXPR, LOC)
*iscall(EXPR, LOC, NUM)
*if_then(EXPR, LOC, EXPR, LOC)
*preprocdirects(EXPR, NUM, LOC)
*unspecifiedtype(TYPE, TYPE)
*param_decl_bind(EXPR, LOC, NUM, EXPR, LOC)
*pointerishsize(EXPR, NUM, NUM)
*typedefbase(TYPE, TYPE)
*funcattributes(EXPR, STR)
*type_decl_top(EXPR)
*arraysizes(EXPR, NUM, NUM, NUM)
*locations_default(LOC, PATH, NUM, NUM, NUM, NUM)
*truecond(EXPR, LOC, EXPR, LOC)
*stmts(EXPR, NUM, LOC)
*fieldoffsets(EXPR, NUM, NUM)
*builtintypes(EXPR, STR, NUM, NUM, NUM, NUM)
*files(PATH, STR, STR, STR, NUM)
*preprocfalse(EXPR)
*expr_isload(EXPR, LOC)
*enumconstants(EXPR, EXPR, NUM, TYPE, STR, LOC)
*attribute_args(EXPR, NUM, STR, NUM, LOC)
*routinetypeargs(EXPR, LOC, NUM, TYPE)
*preprocpair(EXPR, EXPR)
*stmtparents(EXPR, LOC, NUM, EXPR, LOC)
*for_condition(EXPR, LOC, EXPR, LOC)
*exprconv(EXPR, LOC, EXPR, LOC)
*expr_types(EXPR, LOC, TYPE, NUM)
*exprs(EXPR, NUM, LOC)
*conversionkinds(EXPR, LOC, NUM)
*float_types(TYPE)
*integral_types(TYPE)
dangerous_downcasts(LOC, TYPE, TYPE)