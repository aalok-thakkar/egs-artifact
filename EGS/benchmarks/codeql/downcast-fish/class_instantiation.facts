allocator<char32_t>	allocator<_Tp>
allocator<char16_t>	allocator<_Tp>
allocator<wchar_t>	allocator<_Tp>
allocator<char>	allocator<_Tp>
char_traits<_CharT>	char_traits<_CharT>
allocator<_CharT>	allocator<_Tp>
treat_as_floating_point<signed long>	treat_as_floating_point<_Rep>
allocator<_Tp>	allocator<_Tp>
allocator<_Tp>	allocator<_Tp>
allocator<_Tp>	allocator<_Tp>
allocator<_Up>	allocator<_Tp>
pair<_Tp1, _Tp2>	pair<_T1, _T2>
pair<_Tp1, _Tp2>	pair<_T1, _T2>
pair<_Tp1, _Tp2>	pair<_T1, _T2>
pair<_Tp1, _Tp2>	pair<_T1, _T2>
pair<_Tp1, _Tp2>	pair<_T1, _T2>
pair<_Tp1, _Tp2>	pair<_T1, _T2>
pair<_Tp1, _Tp2>	pair<_T1, _T2>
pair<_T1, _T2>	pair<_T1, _T2>
_Index_tuple<>	_Index_tuple<_Indexes...>
_Index_tuple<_Is...>	_Index_tuple<_Indexes...>
tuple<_El0, _El...>	tuple<_Elements...>
default_delete<env_stack_impl_t>	default_delete<_Tp>
reference_wrapper<_Tp>	reference_wrapper<_Tp>
ratio<value, <expression>>	ratio<_Num, _Den>
ratio<_Num, _Den>	ratio<_Num, _Den>
vector<bool, _Alloc>	vector<_Tp, _Alloc>
allocator<_Tp>	allocator<_Tp>
tuple<type, type...>	tuple<_Elements...>
tuple<_Fn, _Args...>	tuple<_Elements...>
bitset<0UL>	bitset<_Nb>
char_traits<_CharT>	char_traits<_CharT>
char_traits<_CharT>	char_traits<_CharT>
char_traits<_CharT>	char_traits<_CharT>
char_traits<_CharT>	char_traits<_CharT>
char_traits<_CharT>	char_traits<_CharT>
char_traits<_CharT>	char_traits<_CharT>
char_traits<_CharT2>	char_traits<_CharT>
char_traits<_CharT2>	char_traits<_CharT>
char_traits<_CharT2>	char_traits<_CharT>
char_traits<_CharT2>	char_traits<_CharT>
char_traits<_CharT2>	char_traits<_CharT>
__numpunct_cache<_CharT>	__numpunct_cache<_CharT>
allocator<input_mapping_t>	allocator<_Tp>
tuple<const wchar_t &>	tuple<_Elements...>
equal_to<wchar_t>	equal_to<_Tp>
allocator<unsigned int>	allocator<_Tp>
allocator<double>	allocator<_Tp>
_Identity<long>	_Identity<_Tp>
less<long>	less<_Tp>
allocator<long>	allocator<_Tp>
equal_to<char>	equal_to<_Tp>
allocator<token_t>	allocator<_Tp>
equal_to<long>	equal_to<_Tp>
default_delete<char[]>	default_delete<_Tp[]>
allocator<const wchar_t *>	allocator<_Tp>
function<..(..)>	function<..(..)>
allocator<function<..(..)> *>	allocator<_Tp>
allocator<function<..(..)>>	allocator<_Tp>
__moneypunct_cache<_CharT, _Intl>	__moneypunct_cache<_CharT, _Intl>
pair<__type, __type>	pair<_T1, _T2>
__decay_and_strip<_T2>	__decay_and_strip<_Tp>
__decay_and_strip<_T1>	__decay_and_strip<_Tp>
pair<_T1, _T2>	pair<_T1, _T2>
enable_if<<expression>, void>	enable_if<<unnamed>, _Tp>
__is_swappable<_T1>	__is_swappable<_Tp>
__is_swappable<_T2>	__is_swappable<_Tp>
__and_<__is_swappable<_T1>, __is_swappable<_T2>>	__and_<<unnamed>...>
pair<_T1, _T2>	pair<_T1, _T2>
enable_if<value, void>	enable_if<<unnamed>, _Tp>
__is_swappable<_T1>	__is_swappable<_Tp>
__is_swappable<_T2>	__is_swappable<_Tp>
__and_<__is_swappable<_T1>, __is_swappable<_T2>>	__and_<<unnamed>...>
pair<_T1, _T2>	pair<_T1, _T2>
pair<_T1, _T2>	pair<_T1, _T2>
pair<_T1, _T2>	pair<_T1, _T2>
pair<_T1, _T2>	pair<_T1, _T2>
pair<_T1, _T2>	pair<_T1, _T2>
pair<_T1, _T2>	pair<_T1, _T2>
pair<_U1, _U2>	pair<_T1, _T2>
pair<_U1, _U2>	pair<_T1, _T2>
pair<_U1, _U2>	pair<_T1, _T2>
pair<_U1, _U2>	pair<_T1, _T2>
pair<_U1, _U2>	pair<_T1, _T2>
pair<_U1, _U2>	pair<_T1, _T2>
is_convertible<_U1 &&, _T1>	is_convertible<_From, _To>
is_convertible<const _U2 &, _T2>	is_convertible<_From, _To>
__and_<is_convertible<_U1 &&, _T1>, is_convertible<const _U2 &, _T2>>	__and_<<unnamed>...>
is_constructible<_T1, _U1 &&>	is_constructible<_Tp, _Args...>
is_constructible<_T2, const _U2 &&>	is_constructible<_Tp, _Args...>
__and_<is_constructible<_T1, _U1 &&>, is_constructible<_T2, const _U2 &&>, type>	__and_<<unnamed>...>
is_convertible<const _U1 &, _T1>	is_convertible<_From, _To>
is_convertible<_U2 &&, _T2>	is_convertible<_From, _To>
__and_<is_convertible<const _U1 &, _T1>, is_convertible<_U2 &&, _T2>>	__and_<<unnamed>...>
is_constructible<_T1, const _U1 &>	is_constructible<_Tp, _Args...>
is_constructible<_T2, _U2 &&>	is_constructible<_Tp, _Args...>
__and_<is_constructible<_T1, const _U1 &>, is_constructible<_T2, _U2 &&>, type>	__and_<<unnamed>...>
is_convertible<_U1 &&, _T1>	is_convertible<_From, _To>
is_convertible<_U2 &&, _T2>	is_convertible<_From, _To>
__and_<is_convertible<_U1 &&, _T1>, is_convertible<_U2 &&, _T2>>	__and_<<unnamed>...>
is_constructible<_T1, _U1 &&>	is_constructible<_Tp, _Args...>
is_constructible<_T2, _U2 &&>	is_constructible<_Tp, _Args...>
__and_<is_constructible<_T1, _U1 &&>, is_constructible<_T2, _U2 &&>>	__and_<<unnamed>...>
is_convertible<const _U1 &, _T1>	is_convertible<_From, _To>
is_convertible<const _U2 &, _T2>	is_convertible<_From, _To>
__and_<is_convertible<const _U1 &, _T1>, is_convertible<const _U2 &, _T2>>	__and_<<unnamed>...>
is_constructible<_T1, const _U1 &>	is_constructible<_Tp, _Args...>
is_constructible<_T2, const _U2 &>	is_constructible<_Tp, _Args...>
__and_<is_constructible<_T1, const _U1 &>, is_constructible<_T2, const _U2 &>>	__and_<<unnamed>...>
_PCC<<expression>, _T1, _T2>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, _T1, _T2>	_PCC<<unnamed>, _T1, _T2>
__pair_base<_T1, _T2>	__pair_base<_U1, _U2>
tuple<_Args1...>	tuple<_Elements...>
tuple<_Args2...>	tuple<_Elements...>
_Index_tuple<_Indexes1...>	_Index_tuple<_Indexes...>
_Index_tuple<_Indexes2...>	_Index_tuple<_Indexes...>
tuple<_Args1...>	tuple<_Elements...>
tuple<_Args2...>	tuple<_Elements...>
tuple<_Args1...>	tuple<_Elements...>
tuple<_Args2...>	tuple<_Elements...>
tuple<_Args1...>	tuple<_Elements...>
tuple<_Args2...>	tuple<_Elements...>
move_iterator<_Iterator>	move_iterator<_Iterator>
move_iterator<_Iterator>	move_iterator<_Iterator>
move_iterator<_Iterator>	move_iterator<_Iterator>
move_iterator<_Tp *>	move_iterator<_Iterator>
conditional<value, const _Tp *, move_iterator<_Tp *>>	conditional<_Cond, _Iftrue, _Iffalse>
__move_if_noexcept_cond<_Tp>	__move_if_noexcept_cond<_Tp>
move_iterator<_Iterator>	move_iterator<_Iterator>
conditional<value, _Iterator, move_iterator<_Iterator>>	conditional<_Cond, _Iftrue, _Iffalse>
__move_if_noexcept_cond<value_type>	__move_if_noexcept_cond<_Tp>
iterator_traits<_Iterator>	iterator_traits<_Iterator>
move_iterator<_Iterator>	move_iterator<_Iterator>
move_iterator<_Iterator>	move_iterator<_Iterator>
move_iterator<_IteratorR>	move_iterator<_Iterator>
move_iterator<_IteratorL>	move_iterator<_Iterator>
move_iterator<_Iterator>	move_iterator<_Iterator>
move_iterator<_IteratorR>	move_iterator<_Iterator>
move_iterator<_IteratorL>	move_iterator<_Iterator>
move_iterator<_Iterator>	move_iterator<_Iterator>
move_iterator<_IteratorR>	move_iterator<_Iterator>
move_iterator<_IteratorL>	move_iterator<_Iterator>
move_iterator<_Iterator>	move_iterator<_Iterator>
move_iterator<_IteratorR>	move_iterator<_Iterator>
move_iterator<_IteratorL>	move_iterator<_Iterator>
move_iterator<_Iterator>	move_iterator<_Iterator>
move_iterator<_IteratorR>	move_iterator<_Iterator>
move_iterator<_IteratorL>	move_iterator<_Iterator>
move_iterator<_Iterator>	move_iterator<_Iterator>
move_iterator<_IteratorR>	move_iterator<_Iterator>
move_iterator<_IteratorL>	move_iterator<_Iterator>
move_iterator<_Iterator>	move_iterator<_Iterator>
move_iterator<_IteratorR>	move_iterator<_Iterator>
move_iterator<_IteratorL>	move_iterator<_Iterator>
__normal_iterator<_Iterator, _Container>	__normal_iterator<_Iterator, _Container>
__normal_iterator<_Iterator, _Container>	__normal_iterator<_Iterator, _Container>
__normal_iterator<_Iterator, _Container>	__normal_iterator<_Iterator, _Container>
__normal_iterator<_IteratorR, _Container>	__normal_iterator<_Iterator, _Container>
__normal_iterator<_IteratorL, _Container>	__normal_iterator<_Iterator, _Container>
__normal_iterator<_Iterator, _Container>	__normal_iterator<_Iterator, _Container>
__normal_iterator<_IteratorR, _Container>	__normal_iterator<_Iterator, _Container>
__normal_iterator<_IteratorL, _Container>	__normal_iterator<_Iterator, _Container>
__normal_iterator<_Iterator, _Container>	__normal_iterator<_Iterator, _Container>
__normal_iterator<_IteratorR, _Container>	__normal_iterator<_Iterator, _Container>
__normal_iterator<_IteratorL, _Container>	__normal_iterator<_Iterator, _Container>
__normal_iterator<_Iterator, _Container>	__normal_iterator<_Iterator, _Container>
__normal_iterator<_IteratorR, _Container>	__normal_iterator<_Iterator, _Container>
__normal_iterator<_IteratorL, _Container>	__normal_iterator<_Iterator, _Container>
__normal_iterator<_Iterator, _Container>	__normal_iterator<_Iterator, _Container>
__normal_iterator<_IteratorR, _Container>	__normal_iterator<_Iterator, _Container>
__normal_iterator<_IteratorL, _Container>	__normal_iterator<_Iterator, _Container>
__normal_iterator<_Iterator, _Container>	__normal_iterator<_Iterator, _Container>
__normal_iterator<_IteratorR, _Container>	__normal_iterator<_Iterator, _Container>
__normal_iterator<_IteratorL, _Container>	__normal_iterator<_Iterator, _Container>
__normal_iterator<_Iterator, _Container>	__normal_iterator<_Iterator, _Container>
__normal_iterator<_IteratorR, _Container>	__normal_iterator<_Iterator, _Container>
__normal_iterator<_IteratorL, _Container>	__normal_iterator<_Iterator, _Container>
insert_iterator<_Container>	insert_iterator<_Container>
front_insert_iterator<_Container>	front_insert_iterator<_Container>
back_insert_iterator<_Container>	back_insert_iterator<_Container>
reverse_iterator<_Iterator>	reverse_iterator<_Iterator>
reverse_iterator<_Iterator>	reverse_iterator<_Iterator>
reverse_iterator<_Iterator>	reverse_iterator<_Iterator>
reverse_iterator<_Iterator>	reverse_iterator<_Iterator>
reverse_iterator<_Iterator>	reverse_iterator<_Iterator>
reverse_iterator<_IteratorR>	reverse_iterator<_Iterator>
reverse_iterator<_IteratorL>	reverse_iterator<_Iterator>
reverse_iterator<_IteratorR>	reverse_iterator<_Iterator>
reverse_iterator<_IteratorL>	reverse_iterator<_Iterator>
reverse_iterator<_IteratorR>	reverse_iterator<_Iterator>
reverse_iterator<_IteratorL>	reverse_iterator<_Iterator>
reverse_iterator<_IteratorR>	reverse_iterator<_Iterator>
reverse_iterator<_IteratorL>	reverse_iterator<_Iterator>
reverse_iterator<_IteratorR>	reverse_iterator<_Iterator>
reverse_iterator<_IteratorL>	reverse_iterator<_Iterator>
reverse_iterator<_IteratorR>	reverse_iterator<_Iterator>
reverse_iterator<_IteratorL>	reverse_iterator<_Iterator>
reverse_iterator<_IteratorR>	reverse_iterator<_Iterator>
reverse_iterator<_IteratorL>	reverse_iterator<_Iterator>
reverse_iterator<_Iterator>	reverse_iterator<_Iterator>
reverse_iterator<_Iterator>	reverse_iterator<_Iterator>
reverse_iterator<_Iterator>	reverse_iterator<_Iterator>
reverse_iterator<_Iterator>	reverse_iterator<_Iterator>
reverse_iterator<_Iterator>	reverse_iterator<_Iterator>
reverse_iterator<_Iterator>	reverse_iterator<_Iterator>
__normal_iterator<_Iter, __type>	__normal_iterator<_Iterator, _Container>
move_iterator<_Iter>	move_iterator<_Iterator>
reverse_iterator<_Iter>	reverse_iterator<_Iterator>
iterator_traits<_Iterator>	iterator_traits<_Iterator>
iterator_traits<_Iterator>	iterator_traits<_Iterator>
iterator<output_iterator_tag, void, void, void, void>	iterator<_Category, _Tp, _Distance, _Pointer, _Reference>
__is_move_iterator<_Iterator>	__is_move_iterator<_Tp>
iterator_traits<_Iterator>	iterator_traits<_Iterator>
iterator<iterator_category, value_type, difference_type, pointer, reference>	iterator<_Category, _Tp, _Distance, _Pointer, _Reference>
pair<_InputIterator1, _InputIterator2>	pair<_T1, _T2>
pair<_InputIterator1, _InputIterator2>	pair<_T1, _T2>
pair<_InputIterator1, _InputIterator2>	pair<_T1, _T2>
__enable_if<__value, _Tp *>	__enable_if<<unnamed>, <unnamed>>
__is_byte<_Tp>	__is_byte<_Tp>
__enable_if<__value, _OutputIterator>	__enable_if<<unnamed>, <unnamed>>
__is_scalar<_Tp>	__is_scalar<_Tp>
__enable_if<<expression>, _OutputIterator>	__enable_if<<unnamed>, <unnamed>>
__is_scalar<_Tp>	__is_scalar<_Tp>
__enable_if<__value, void>	__enable_if<<unnamed>, <unnamed>>
__is_byte<_Tp>	__is_byte<_Tp>
__enable_if<__value, void>	__enable_if<<unnamed>, <unnamed>>
__is_scalar<_Tp>	__is_scalar<_Tp>
__enable_if<<expression>, void>	__enable_if<<unnamed>, <unnamed>>
__is_scalar<_Tp>	__is_scalar<_Tp>
char_traits<_CharT>	char_traits<_CharT>
istreambuf_iterator<_CharT, char_traits<_CharT>>	istreambuf_iterator<_CharT, _Traits>
__enable_if<__value, _CharT *>	__enable_if<<unnamed>, <unnamed>>
__is_char<_CharT>	__is_char<_Tp>
char_traits<_CharT>	char_traits<_CharT>
ostreambuf_iterator<_CharT, char_traits<_CharT>>	ostreambuf_iterator<_CharT, _Traits>
__enable_if<__value, ostreambuf_iterator<_CharT, char_traits<_CharT>>>	__enable_if<<unnamed>, <unnamed>>
__is_char<_CharT>	__is_char<_Tp>
char_traits<_CharT>	char_traits<_CharT>
ostreambuf_iterator<_CharT, char_traits<_CharT>>	ostreambuf_iterator<_CharT, _Traits>
__enable_if<__value, ostreambuf_iterator<_CharT, char_traits<_CharT>>>	__enable_if<<unnamed>, <unnamed>>
__is_char<_CharT>	__is_char<_Tp>
__is_pointer<_II>	__is_pointer<_Tp>
__is_pointer<_OI>	__is_pointer<_Tp>
__are_same<value_type, value_type>	__are_same<<unnamed>, <unnamed>>
__copy_move<_IsMove, __simple, iterator_category>	__copy_move<<unnamed>, <unnamed>, <unnamed>>
is_move_assignable<_Tp>	is_move_assignable<_Tp>
is_copy_assignable<_Tp>	is_copy_assignable<_Tp>
conditional<_IsMove, is_move_assignable<_Tp>, is_copy_assignable<_Tp>>	conditional<_Cond, _Iftrue, _Iffalse>
integral_constant<bool, false>	integral_constant<_Tp, __v>
allocator<char32_t>	allocator<_Tp>
basic_string<char32_t, char_traits<char32_t>, allocator<char32_t>>	basic_string<_CharT, _Traits, _Alloc>
__hash_base<unsigned long, basic_string<char32_t, char_traits<char32_t>, allocator<char32_t>>>	__hash_base<_Result, _Arg>
allocator<char16_t>	allocator<_Tp>
basic_string<char16_t, char_traits<char16_t>, allocator<char16_t>>	basic_string<_CharT, _Traits, _Alloc>
__hash_base<unsigned long, basic_string<char16_t, char_traits<char16_t>, allocator<char16_t>>>	__hash_base<_Result, _Arg>
allocator<wchar_t>	allocator<_Tp>
basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	basic_string<_CharT, _Traits, _Alloc>
__hash_base<unsigned long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	__hash_base<_Result, _Arg>
allocator<char>	allocator<_Tp>
basic_string<char, char_traits<char>, allocator<char>>	basic_string<_CharT, _Traits, _Alloc>
__hash_base<unsigned long, basic_string<char, char_traits<char>, allocator<char>>>	__hash_base<_Result, _Arg>
__numeric_traits<long double>	__numeric_traits<_Value>
__numeric_traits<double>	__numeric_traits<_Value>
__numeric_traits<float>	__numeric_traits<_Value>
basic_istream<wchar_t, char_traits<wchar_t>>	basic_istream<_CharT, _Traits>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, char_traits<_CharT>, allocator<_CharT>>	basic_string<_CharT, _Traits, _Alloc>
__enable_if<__value, bool>	__enable_if<<unnamed>, <unnamed>>
__is_char<_CharT>	__is_char<_Tp>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
__numeric_traits_floating<long double>	__numeric_traits_floating<_Value>
__numeric_traits_floating<double>	__numeric_traits_floating<_Value>
__numeric_traits_floating<float>	__numeric_traits_floating<_Value>
allocator_traits<allocator<char32_t>>	allocator_traits<allocator<_Tp>>
allocator_traits<allocator<char32_t>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<char32_t>, char32_t>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<char16_t>>	allocator_traits<allocator<_Tp>>
allocator_traits<allocator<char16_t>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<char16_t>, char16_t>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<wchar_t>>	allocator_traits<allocator<_Tp>>
allocator_traits<allocator<wchar_t>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<wchar_t>, wchar_t>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<char>>	allocator_traits<allocator<_Tp>>
allocator_traits<allocator<char>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<char>, char>	__alloc_traits<_Alloc, <unnamed>>
__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc>>	__normal_iterator<_Iterator, _Container>
initializer_list<_CharT>	initializer_list<_E>
__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc>>	__normal_iterator<_Iterator, _Container>
__alloc_traits<other, value_type>	__alloc_traits<_Alloc, <unnamed>>
reverse_iterator<__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc>>>	reverse_iterator<_Iterator>
pointer_traits<const_pointer>	pointer_traits<_Ptr>
pointer_traits<pointer>	pointer_traits<_Ptr>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
array<_Tp, _Nm>	array<_Tp, _Nm>
array<_Tp, _Nm>	array<_Tp, _Nm>
array<_Tp, _Nm>	array<_Tp, _Nm>
array<_Tp, _Nm>	array<_Tp, _Nm>
array<_Tp, _Nm>	array<_Tp, _Nm>
array<_Tp, _Nm>	array<_Tp, _Nm>
array<_Tp, _Nm>	array<_Tp, _Nm>
array<_Tp, _Nm>	array<_Tp, _Nm>
__array_traits<_Tp, _Nm>	__array_traits<_Tp, _Nm>
array<_Tp, _Nm>	array<_Tp, _Nm>
enable_if<value, void>	enable_if<<unnamed>, _Tp>
__array_traits<_Tp, _Nm>	__array_traits<_Tp, _Nm>
array<_Tp, _Nm>	array<_Tp, _Nm>
array<_Tp, _Nm>	array<_Tp, _Nm>
array<_Tp, _Nm>	array<_Tp, _Nm>
array<_Tp, _Nm>	array<_Tp, _Nm>
array<_Tp, _Nm>	array<_Tp, _Nm>
array<_Tp, _Nm>	array<_Tp, _Nm>
__array_traits<_Tp, _Nm>	__array_traits<_Tp, _Nm>
reverse_iterator<const _Tp *>	reverse_iterator<_Iterator>
reverse_iterator<_Tp *>	reverse_iterator<_Iterator>
integral_constant<bool, true>	integral_constant<_Tp, __v>
integral_constant<unsigned long, _Nm>	integral_constant<_Tp, __v>
__is_nothrow_swappable<_Tp>	__is_nothrow_swappable<_Tp>
__is_swappable<_Tp>	__is_swappable<_Tp>
unique_ptr<_Tp, _Dp>	unique_ptr<_Tp, _Dp>
unique_ptr<_Tp, _Dp>	unique_ptr<_Tp, _Dp>
unique_ptr<_Tp, _Dp>	unique_ptr<_Tp, _Dp>
unique_ptr<_Up, _Ep>	unique_ptr<_Tp, _Dp>
unique_ptr<_Tp, _Dp>	unique_ptr<_Tp, _Dp>
unique_ptr<_Tp, _Dp>	unique_ptr<_Tp, _Dp>
unique_ptr<_Tp, _Dp>	unique_ptr<_Tp, _Dp>
unique_ptr<_Up, _Ep>	unique_ptr<_Tp, _Dp>
unique_ptr<_Tp, _Dp>	unique_ptr<_Tp, _Dp>
unique_ptr<_Tp, _Dp>	unique_ptr<_Tp, _Dp>
unique_ptr<_Tp, _Dp>	unique_ptr<_Tp, _Dp>
unique_ptr<_Up, _Ep>	unique_ptr<_Tp, _Dp>
unique_ptr<_Tp, _Dp>	unique_ptr<_Tp, _Dp>
unique_ptr<_Tp, _Dp>	unique_ptr<_Tp, _Dp>
unique_ptr<_Tp, _Dp>	unique_ptr<_Tp, _Dp>
unique_ptr<_Up, _Ep>	unique_ptr<_Tp, _Dp>
unique_ptr<_Tp, _Dp>	unique_ptr<_Tp, _Dp>
unique_ptr<_Tp, _Dp>	unique_ptr<_Tp, _Dp>
unique_ptr<_Tp, _Dp>	unique_ptr<_Tp, _Dp>
unique_ptr<_Up, _Ep>	unique_ptr<_Tp, _Dp>
unique_ptr<_Tp, _Dp>	unique_ptr<_Tp, _Dp>
unique_ptr<_Tp, _Dp>	unique_ptr<_Tp, _Dp>
unique_ptr<_Tp, _Dp>	unique_ptr<_Tp, _Dp>
unique_ptr<_Up, _Ep>	unique_ptr<_Tp, _Dp>
unique_ptr<_Tp, _Dp>	unique_ptr<_Tp, _Dp>
unique_ptr<_Tp, _Dp>	unique_ptr<_Tp, _Dp>
__is_swappable<_Dp>	__is_swappable<_Tp>
unique_ptr<_Tp, _Dp>	unique_ptr<_Tp, _Dp>
enable_if<value, void>	enable_if<<unnamed>, _Tp>
__is_swappable<_Dp>	__is_swappable<_Tp>
default_delete<_Tp>	default_delete<_Tp>
unique_ptr<_Up, _Ep>	unique_ptr<_Tp, _Dp>
unique_ptr<_Up, _Ep>	unique_ptr<_Tp, _Dp>
__uniq_ptr_impl<_Tp, _Dp>	__uniq_ptr_impl<_Tp, _Dp>
unique_ptr<_Up, _Ep>	unique_ptr<_Tp, _Dp>
unique_ptr<_Up, _Ep>	unique_ptr<_Tp, _Dp>
tuple<type, _Dp>	tuple<_Elements...>
default_delete<_Up[]>	default_delete<_Tp>
default_delete<_Up>	default_delete<_Tp>
__hash_base<unsigned long, unique_ptr<_Tp, _Dp>>	__hash_base<_Result, _Arg>
__poison_hash<pointer, void>	__poison_hash<_Tp, <unnamed>>
is_array<_Up>	is_array<<unnamed>>
is_same<pointer, _Tp *>	is_same<<unnamed>, <unnamed>>
is_same<pointer, element_type *>	is_same<<unnamed>, <unnamed>>
is_convertible<element_type(*)[], _Tp(*)[]>	is_convertible<_From, _To>
__and_<is_array<_Up>, is_same<pointer, _Tp *>, is_same<pointer, element_type *>, is_convertible<element_type(*)[], _Tp(*)[]>>	__and_<<unnamed>...>
is_array<_Up>	is_array<<unnamed>>
__and_<is_array<_Up>, is_same<pointer, _Tp *>, is_same<pointer, element_type *>, is_convertible<element_type(*)[], _Tp(*)[]>>	__and_<<unnamed>...>
is_same<_Up, pointer>	is_same<<unnamed>, <unnamed>>
is_same<_Up, std::nullptr_t>	is_same<<unnamed>, <unnamed>>
__or_<is_same<_Up, pointer>, is_same<_Up, std::nullptr_t>>	__or_<<unnamed>...>
is_pointer<_Up>	is_pointer<_Tp>
is_convertible<type(*)[], _Tp(*)[]>	is_convertible<_From, _To>
__and_<is_pointer<_Up>, is_same<pointer, _Tp *>, is_convertible<type(*)[], _Tp(*)[]>>	__and_<<unnamed>...>
__or_<__or_<is_same<_Up, pointer>, is_same<_Up, std::nullptr_t>>, __and_<is_pointer<_Up>, is_same<pointer, _Tp *>, is_convertible<type(*)[], _Tp(*)[]>>>	__or_<<unnamed>...>
__and_<__or_<__or_<is_same<_Up, pointer>, is_same<_Up, std::nullptr_t>>, __and_<is_pointer<_Up>, is_same<pointer, _Tp *>, is_convertible<type(*)[], _Tp(*)[]>>>>	__and_<<unnamed>...>
is_same<_Up, pointer>	is_same<<unnamed>, <unnamed>>
is_same<_Up, std::nullptr_t>	is_same<<unnamed>, <unnamed>>
__or_<is_same<_Up, pointer>, is_same<_Up, std::nullptr_t>>	__or_<<unnamed>...>
is_pointer<_Up>	is_pointer<_Tp>
__and_<is_pointer<_Up>, is_same<pointer, _Tp *>, is_convertible<type(*)[], _Tp(*)[]>>	__and_<<unnamed>...>
__or_<__or_<is_same<_Up, pointer>, is_same<_Up, std::nullptr_t>>, __and_<is_pointer<_Up>, is_same<pointer, _Tp *>, is_convertible<type(*)[], _Tp(*)[]>>>	__or_<<unnamed>...>
__and_<__or_<__or_<is_same<_Up, pointer>, is_same<_Up, std::nullptr_t>>, __and_<is_pointer<_Up>, is_same<pointer, _Tp *>, is_convertible<type(*)[], _Tp(*)[]>>>>	__and_<<unnamed>...>
is_same<_Up, pointer>	is_same<<unnamed>, <unnamed>>
is_same<_Up, std::nullptr_t>	is_same<<unnamed>, <unnamed>>
__or_<is_same<_Up, pointer>, is_same<_Up, std::nullptr_t>>	__or_<<unnamed>...>
is_pointer<_Up>	is_pointer<_Tp>
__and_<is_pointer<_Up>, is_same<pointer, _Tp *>, is_convertible<type(*)[], _Tp(*)[]>>	__and_<<unnamed>...>
__or_<__or_<is_same<_Up, pointer>, is_same<_Up, std::nullptr_t>>, __and_<is_pointer<_Up>, is_same<pointer, _Tp *>, is_convertible<type(*)[], _Tp(*)[]>>>	__or_<<unnamed>...>
__and_<__or_<__or_<is_same<_Up, pointer>, is_same<_Up, std::nullptr_t>>, __and_<is_pointer<_Up>, is_same<pointer, _Tp *>, is_convertible<type(*)[], _Tp(*)[]>>>>	__and_<<unnamed>...>
is_same<_Up, pointer>	is_same<<unnamed>, <unnamed>>
is_same<_Up, std::nullptr_t>	is_same<<unnamed>, <unnamed>>
__or_<is_same<_Up, pointer>, is_same<_Up, std::nullptr_t>>	__or_<<unnamed>...>
is_pointer<_Up>	is_pointer<_Tp>
__and_<is_pointer<_Up>, is_same<pointer, _Tp *>, is_convertible<type(*)[], _Tp(*)[]>>	__and_<<unnamed>...>
__or_<__or_<is_same<_Up, pointer>, is_same<_Up, std::nullptr_t>>, __and_<is_pointer<_Up>, is_same<pointer, _Tp *>, is_convertible<type(*)[], _Tp(*)[]>>>	__or_<<unnamed>...>
__and_<__or_<__or_<is_same<_Up, pointer>, is_same<_Up, std::nullptr_t>>, __and_<is_pointer<_Up>, is_same<pointer, _Tp *>, is_convertible<type(*)[], _Tp(*)[]>>>>	__and_<<unnamed>...>
is_same<_Up, pointer>	is_same<<unnamed>, <unnamed>>
is_same<_Up, std::nullptr_t>	is_same<<unnamed>, <unnamed>>
__or_<is_same<_Up, pointer>, is_same<_Up, std::nullptr_t>>	__or_<<unnamed>...>
is_pointer<_Up>	is_pointer<_Tp>
__and_<is_pointer<_Up>, is_same<pointer, _Tp *>, is_convertible<type(*)[], _Tp(*)[]>>	__and_<<unnamed>...>
__or_<__or_<is_same<_Up, pointer>, is_same<_Up, std::nullptr_t>>, __and_<is_pointer<_Up>, is_same<pointer, _Tp *>, is_convertible<type(*)[], _Tp(*)[]>>>	__or_<<unnamed>...>
__and_<__or_<__or_<is_same<_Up, pointer>, is_same<_Up, std::nullptr_t>>, __and_<is_pointer<_Up>, is_same<pointer, _Tp *>, is_convertible<type(*)[], _Tp(*)[]>>>>	__and_<<unnamed>...>
is_array<_Up>	is_array<<unnamed>>
is_same<_UP_pointer, _UP_element_type *>	is_same<<unnamed>, <unnamed>>
is_convertible<_UP_element_type(*)[], _Tp(*)[]>	is_convertible<_From, _To>
__and_<is_array<_Up>, is_same<pointer, _Tp *>, is_same<_UP_pointer, _UP_element_type *>, is_convertible<_UP_element_type(*)[], _Tp(*)[]>>	__and_<<unnamed>...>
is_base_of<_Tp, _Up>	is_base_of<_Base, _Derived>
is_same<type, type>	is_same<<unnamed>, <unnamed>>
__not_<is_same<type, type>>	__not_<_Pp>
__and_<is_base_of<_Tp, _Up>, __not_<is_same<type, type>>>	__and_<<unnamed>...>
is_convertible<pointer, pointer>	is_convertible<_From, _To>
is_array<_Up>	is_array<<unnamed>>
__not_<is_array<_Up>>	__not_<_Pp>
__and_<is_convertible<pointer, pointer>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
is_array<_Up>	is_array<<unnamed>>
__not_<is_array<_Up>>	__not_<_Pp>
__and_<is_convertible<pointer, pointer>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
is_array<_Up>	is_array<<unnamed>>
__not_<is_array<_Up>>	__not_<_Pp>
__and_<is_convertible<pointer, pointer>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
enable_if<value, void>	enable_if<<unnamed>, _Tp>
auto_ptr<_Up>	auto_ptr<_Tp>
auto_ptr<_Up>	auto_ptr<_Tp>
__uniq_ptr_impl<_Tp, _Dp>	__uniq_ptr_impl<_Tp, _Dp>
is_void<_Tp>	is_void<_Tp>
__is_invocable<_Dp &, pointer>	__is_invocable<_Fn, _ArgTypes...>
is_rvalue_reference<_Dp>	is_rvalue_reference<<unnamed>>
vector<_Tp, _Alloc>	vector<_Tp, _Alloc>
vector<_Tp, _Alloc>	vector<_Tp, _Alloc>
vector<_Tp, _Alloc>	vector<_Tp, _Alloc>
vector<_Tp, _Alloc>	vector<_Tp, _Alloc>
vector<_Tp, _Alloc>	vector<_Tp, _Alloc>
vector<_Tp, _Alloc>	vector<_Tp, _Alloc>
vector<_Tp, _Alloc>	vector<_Tp, _Alloc>
allocator<_Tp>	allocator<_Tp>
__alloc_traits<other, value_type>	__alloc_traits<_Alloc, <unnamed>>
__numeric_traits_integer<long>	__numeric_traits_integer<_Value>
__alloc_traits<_Tp_alloc_type, value_type>	__alloc_traits<_Alloc, <unnamed>>
__normal_iterator<pointer, vector<_Tp, _Alloc>>	__normal_iterator<_Iterator, _Container>
__normal_iterator<const_pointer, vector<_Tp, _Alloc>>	__normal_iterator<_Iterator, _Container>
initializer_list<_Tp>	initializer_list<_E>
reverse_iterator<__normal_iterator<const_pointer, vector<_Tp, _Alloc>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<pointer, vector<_Tp, _Alloc>>>	reverse_iterator<_Iterator>
integral_constant<bool, __move_storage>	integral_constant<_Tp, __v>
_Vector_base<_Tp, _Alloc>	_Vector_base<_Tp, _Alloc>
integral_constant<bool, <expression>>	integral_constant<_Tp, __v>
__is_move_insertable<_Tp_alloc_type>	__is_move_insertable<_Alloc>
is_same<type, _Tp>	is_same<<unnamed>, <unnamed>>
allocator<parse_error_t>	allocator<_Tp>
_Vector_base<parse_error_t, allocator<parse_error_t>>	_Vector_base<_Tp, _Alloc>
vector<parse_error_t, allocator<parse_error_t>>	vector<_Tp, _Alloc>
default_delete<case_item_t>	default_delete<_Tp>
unique_ptr<case_item_t, default_delete<case_item_t>>	unique_ptr<_Tp, _Dp>
allocator<unique_ptr<case_item_t, default_delete<case_item_t>>>	allocator<_Tp>
_Vector_base<unique_ptr<case_item_t, default_delete<case_item_t>>, allocator<unique_ptr<case_item_t, default_delete<case_item_t>>>>	_Vector_base<_Tp, _Alloc>
vector<unique_ptr<case_item_t, default_delete<case_item_t>>, allocator<unique_ptr<case_item_t, default_delete<case_item_t>>>>	vector<_Tp, _Alloc>
default_delete<elseif_clause_t>	default_delete<_Tp>
unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>>	unique_ptr<_Tp, _Dp>
allocator<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>>>	allocator<_Tp>
_Vector_base<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>>, allocator<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>>>>	_Vector_base<_Tp, _Alloc>
vector<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>>, allocator<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>>>>	vector<_Tp, _Alloc>
default_delete<andor_job_t>	default_delete<_Tp>
unique_ptr<andor_job_t, default_delete<andor_job_t>>	unique_ptr<_Tp, _Dp>
allocator<unique_ptr<andor_job_t, default_delete<andor_job_t>>>	allocator<_Tp>
_Vector_base<unique_ptr<andor_job_t, default_delete<andor_job_t>>, allocator<unique_ptr<andor_job_t, default_delete<andor_job_t>>>>	_Vector_base<_Tp, _Alloc>
vector<unique_ptr<andor_job_t, default_delete<andor_job_t>>, allocator<unique_ptr<andor_job_t, default_delete<andor_job_t>>>>	vector<_Tp, _Alloc>
default_delete<argument_or_redirection_t>	default_delete<_Tp>
unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>>	unique_ptr<_Tp, _Dp>
allocator<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>>>	allocator<_Tp>
_Vector_base<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>>, allocator<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>>>>	_Vector_base<_Tp, _Alloc>
vector<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>>, allocator<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>>>>	vector<_Tp, _Alloc>
default_delete<argument_t>	default_delete<_Tp>
unique_ptr<argument_t, default_delete<argument_t>>	unique_ptr<_Tp, _Dp>
allocator<unique_ptr<argument_t, default_delete<argument_t>>>	allocator<_Tp>
_Vector_base<unique_ptr<argument_t, default_delete<argument_t>>, allocator<unique_ptr<argument_t, default_delete<argument_t>>>>	_Vector_base<_Tp, _Alloc>
vector<unique_ptr<argument_t, default_delete<argument_t>>, allocator<unique_ptr<argument_t, default_delete<argument_t>>>>	vector<_Tp, _Alloc>
default_delete<job_conjunction_t>	default_delete<_Tp>
unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>>	unique_ptr<_Tp, _Dp>
allocator<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>>>	allocator<_Tp>
_Vector_base<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>>, allocator<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>>>>	_Vector_base<_Tp, _Alloc>
vector<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>>, allocator<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>>>>	vector<_Tp, _Alloc>
default_delete<job_conjunction_continuation_t>	default_delete<_Tp>
unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>>	unique_ptr<_Tp, _Dp>
allocator<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>>>	allocator<_Tp>
_Vector_base<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>>, allocator<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>>>>	_Vector_base<_Tp, _Alloc>
vector<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>>, allocator<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>>>>	vector<_Tp, _Alloc>
default_delete<job_continuation_t>	default_delete<_Tp>
unique_ptr<job_continuation_t, default_delete<job_continuation_t>>	unique_ptr<_Tp, _Dp>
allocator<unique_ptr<job_continuation_t, default_delete<job_continuation_t>>>	allocator<_Tp>
_Vector_base<unique_ptr<job_continuation_t, default_delete<job_continuation_t>>, allocator<unique_ptr<job_continuation_t, default_delete<job_continuation_t>>>>	_Vector_base<_Tp, _Alloc>
vector<unique_ptr<job_continuation_t, default_delete<job_continuation_t>>, allocator<unique_ptr<job_continuation_t, default_delete<job_continuation_t>>>>	vector<_Tp, _Alloc>
default_delete<variable_assignment_t>	default_delete<_Tp>
unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>>	unique_ptr<_Tp, _Dp>
allocator<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>>>	allocator<_Tp>
_Vector_base<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>>, allocator<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>>>>	_Vector_base<_Tp, _Alloc>
vector<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>>, allocator<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>>>>	vector<_Tp, _Alloc>
allocator<action_t>	allocator<_Tp>
_Vector_base<action_t, allocator<action_t>>	_Vector_base<_Tp, _Alloc>
vector<action_t, allocator<action_t>>	vector<_Tp, _Alloc>
allocator<source_range_t>	allocator<_Tp>
_Vector_base<source_range_t, allocator<source_range_t>>	_Vector_base<_Tp, _Alloc>
vector<source_range_t, allocator<source_range_t>>	vector<_Tp, _Alloc>
allocator<const node_t *>	allocator<_Tp>
_Vector_base<const node_t *, allocator<const node_t *>>	_Vector_base<_Tp, _Alloc>
vector<const node_t *, allocator<const node_t *>>	vector<_Tp, _Alloc>
maybe_impl_t<T>	maybe_impl_t<T>
conditional<true, copyable_t, noncopyable_t>	conditional<_Cond, _Iftrue, _Iffalse>
enum_map<T>	enum_map<T>
enum_map<T>	enum_map<T>
maybe_t<unsigned long>	maybe_t<T>
default_delete<T>	default_delete<_Tp>
unique_ptr<T, default_delete<T>>	unique_ptr<_Tp, _Dp>
lock_guard<recursive_mutex>	lock_guard<_Mutex>
lock_guard<mutex>	lock_guard<_Mutex>
function<..(..)>	function<_Signature>
shared_ptr<T>	shared_ptr<_Tp>
allocator<T>	allocator<_Tp>
vector<T, allocator<T>>	vector<_Tp, _Alloc>
allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	allocator<_Tp>
vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	vector<_Tp, _Alloc>
__atomic_base<int>	__atomic_base<_ITp>
remove_reference<function<..(..)> &>	remove_reference<_Tp &>
enable_if<true, void>	enable_if<true, _Tp>
acquired_lock<Data>	acquired_lock<Data>
unique_lock<mutex>	unique_lock<_Mutex>
acquired_lock<const Data>	acquired_lock<Data>
relaxed_atomic_t<bool>	relaxed_atomic_t<T>
atomic<T>	atomic<_Tp>
default_delete<T>	default_delete<_Tp>
unique_ptr<T, default_delete<T>>	unique_ptr<_Tp, _Dp>
unique_ptr<node_t, node_deleter_t>	unique_ptr<_Tp, _Dp>
node_visitation_t<NodeVisitor>	node_visitation_t<NodeVisitor>
default_delete<Node>	default_delete<_Tp>
unique_ptr<Node, default_delete<Node>>	unique_ptr<_Tp, _Dp>
default_delete<Node>	default_delete<_Tp>
unique_ptr<Node, default_delete<Node>>	unique_ptr<_Tp, _Dp>
branch_t<freestanding_argument_list>	branch_t<Type>
branch_t<andor_job>	branch_t<Type>
token_t<andand, oror>	token_t<Toks...>
branch_t<job_conjunction_continuation>	branch_t<Type>
token_t<pipe>	token_t<Toks...>
branch_t<job_continuation>	branch_t<Type>
keyword_t<kw_time>	keyword_t<KWs...>
optional_t<keyword_t<kw_time>>	optional_t<AstNode>
keyword_t<kw_not, kw_exclam>	keyword_t<KWs...>
branch_t<not_statement>	branch_t<Type>
token_t<string>	token_t<Toks...>
keyword_t<kw_command, kw_builtin, kw_exec>	keyword_t<KWs...>
optional_t<keyword_t<kw_command, kw_builtin, kw_exec>>	optional_t<AstNode>
branch_t<decorated_statement>	branch_t<Type>
keyword_t<kw_end>	keyword_t<KWs...>
token_t<end>	token_t<Toks...>
keyword_t<kw_switch>	keyword_t<KWs...>
branch_t<switch_statement>	branch_t<Type>
keyword_t<kw_case>	keyword_t<KWs...>
branch_t<case_item>	branch_t<Type>
optional_t<else_clause_t>	optional_t<AstNode>
branch_t<if_statement>	branch_t<Type>
keyword_t<kw_else>	keyword_t<KWs...>
branch_t<else_clause>	branch_t<Type>
branch_t<elseif_clause>	branch_t<Type>
keyword_t<kw_if>	keyword_t<KWs...>
branch_t<if_clause>	branch_t<Type>
union_ptr_t<for_header_t, while_header_t, function_header_t, begin_header_t>	union_ptr_t<Nodes...>
branch_t<block_statement>	branch_t<Type>
optional_t<token_t<end>>	optional_t<AstNode>
keyword_t<kw_begin>	keyword_t<KWs...>
branch_t<begin_header>	branch_t<Type>
keyword_t<kw_function>	keyword_t<KWs...>
branch_t<function_header>	branch_t<Type>
keyword_t<kw_while>	keyword_t<KWs...>
branch_t<while_header>	branch_t<Type>
keyword_t<kw_in>	keyword_t<KWs...>
keyword_t<kw_for>	keyword_t<KWs...>
branch_t<for_header>	branch_t<Type>
keyword_t<kw_and, kw_or>	keyword_t<KWs...>
optional_t<keyword_t<kw_and, kw_or>>	optional_t<AstNode>
branch_t<job_conjunction>	branch_t<Type>
token_t<background>	token_t<Toks...>
optional_t<token_t<background>>	optional_t<AstNode>
branch_t<job>	branch_t<Type>
union_ptr_t<not_statement_t, block_statement_t, if_statement_t, switch_statement_t, decorated_statement_t>	union_ptr_t<Nodes...>
branch_t<statement>	branch_t<Type>
union_ptr_t<argument_t, redirection_t>	union_ptr_t<Nodes...>
branch_t<argument_or_redirection>	branch_t<Type>
leaf_t<variable_assignment>	leaf_t<Type>
token_t<redirection>	token_t<Toks...>
branch_t<redirection>	branch_t<Type>
leaf_t<argument>	leaf_t<Type>
leaf_t<maybe_newlines>	leaf_t<Type>
leaf_t<token_base>	leaf_t<Type>
leaf_t<keyword_base>	leaf_t<Type>
maybe_t<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	maybe_t<T>
maybe_t<source_range_t>	maybe_t<T>
union_ptr_t<Nodes...>	union_ptr_t<Nodes...>
optional_t<Field>	optional_t<AstNode>
is_same<Type, Candidate>	is_same<<unnamed>, <unnamed>>
union_ptr_t<Types...>	union_ptr_t<Nodes...>
optional_t<Node>	optional_t<AstNode>
default_delete<AstNode>	default_delete<_Tp>
unique_ptr<AstNode, default_delete<AstNode>>	unique_ptr<_Tp, _Dp>
default_delete<Node>	default_delete<_Tp>
unique_ptr<Node, default_delete<Node>>	unique_ptr<_Tp, _Dp>
__uniq_ptr_impl<node_t, node_deleter_t>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<node_t, node_deleter_t, void>	_Ptr<_Up, _Ep, <unnamed>>
default_delete<Node>	default_delete<_Tp>
unique_ptr<Node, default_delete<Node>>	unique_ptr<_Tp, _Dp>
default_delete<ContentsNode>	default_delete<_Tp>
unique_ptr<ContentsNode, default_delete<ContentsNode>>	unique_ptr<_Tp, _Dp>
default_delete<token_t<end>>	default_delete<_Tp>
unique_ptr<token_t<end>, default_delete<token_t<end>>>	unique_ptr<_Tp, _Dp>
list_t<job_conjunction_continuation_list, job_conjunction_continuation_t>	list_t<ListType, ContentsNode>
default_delete<token_t<background>>	default_delete<_Tp>
unique_ptr<token_t<background>, default_delete<token_t<background>>>	unique_ptr<_Tp, _Dp>
list_t<job_continuation_list, job_continuation_t>	list_t<ListType, ContentsNode>
list_t<variable_assignment_list, variable_assignment_t>	list_t<ListType, ContentsNode>
default_delete<keyword_t<kw_time>>	default_delete<_Tp>
unique_ptr<keyword_t<kw_time>, default_delete<keyword_t<kw_time>>>	unique_ptr<_Tp, _Dp>
default_delete<keyword_t<kw_and, kw_or>>	default_delete<_Tp>
unique_ptr<keyword_t<kw_and, kw_or>, default_delete<keyword_t<kw_and, kw_or>>>	unique_ptr<_Tp, _Dp>
list_t<argument_or_redirection_list, argument_or_redirection_t>	list_t<ListType, ContentsNode>
list_t<case_item_list, case_item_t>	list_t<ListType, ContentsNode>
default_delete<else_clause_t>	default_delete<_Tp>
unique_ptr<else_clause_t, default_delete<else_clause_t>>	unique_ptr<_Tp, _Dp>
list_t<elseif_clause_list, elseif_clause_t>	list_t<ListType, ContentsNode>
list_t<job_list, job_conjunction_t>	list_t<ListType, ContentsNode>
list_t<andor_job_list, andor_job_t>	list_t<ListType, ContentsNode>
list_t<argument_list, argument_t>	list_t<ListType, ContentsNode>
default_delete<keyword_t<kw_command, kw_builtin, kw_exec>>	default_delete<_Tp>
unique_ptr<keyword_t<kw_command, kw_builtin, kw_exec>, default_delete<keyword_t<kw_command, kw_builtin, kw_exec>>>	unique_ptr<_Tp, _Dp>
allocator_traits<allocator<const node_t *>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<const node_t *>, const node_t *>	__alloc_traits<_Alloc, <unnamed>>
node_visitation_t<traversal_t>	node_visitation_t<NodeVisitor>
default_delete<freestanding_argument_list_t>	default_delete<_Tp>
unique_ptr<freestanding_argument_list_t, default_delete<freestanding_argument_list_t>>	unique_ptr<_Tp, _Dp>
default_delete<job_list_t>	default_delete<_Tp>
unique_ptr<job_list_t, default_delete<job_list_t>>	unique_ptr<_Tp, _Dp>
list_t<ListNodeType, ContentsNode>	list_t<ListType, ContentsNode>
optional_t<AstNode>	optional_t<AstNode>
keyword_t<KWs...>	keyword_t<KWs...>
token_t<TokTypes...>	token_t<Toks...>
default_delete<AstNode>	default_delete<_Tp>
unique_ptr<AstNode, default_delete<AstNode>>	unique_ptr<_Tp, _Dp>
list_t<ListType, ContentsNode>	list_t<ListType, ContentsNode>
token_t<Tok...>	token_t<Toks...>
default_delete<Node>	default_delete<_Tp>
unique_ptr<Node, default_delete<Node>>	unique_ptr<_Tp, _Dp>
default_delete<Node>	default_delete<_Tp>
unique_ptr<Node, default_delete<Node>>	unique_ptr<_Tp, _Dp>
initializer_list<parse_token_type_t>	initializer_list<_E>
initializer_list<parse_keyword_t>	initializer_list<_E>
pair<source_range_t, const wchar_t *>	pair<_T1, _T2>
array<parse_token_t, 2UL>	array<_Tp, _Nm>
default_delete<decorated_statement_t>	default_delete<_Tp>
unique_ptr<decorated_statement_t, default_delete<decorated_statement_t>>	unique_ptr<_Tp, _Dp>
acquired_lock<logger_t>	acquired_lock<Data>
owning_lock<logger_t>	owning_lock<Data>
enum_map<parse_keyword_t>	enum_map<T>
node_visitation_t<parent_setter_t>	node_visitation_t<NodeVisitor>
pair<source_range_t, std::nullptr_t>	pair<_T1, _T2>
remove_reference<unique_ptr<argument_t, default_delete<argument_t>> &>	remove_reference<_Tp &>
default_delete<redirection_t>	default_delete<_Tp>
unique_ptr<redirection_t, default_delete<redirection_t>>	unique_ptr<_Tp, _Dp>
remove_reference<unique_ptr<redirection_t, default_delete<redirection_t>> &>	remove_reference<_Tp &>
array<parse_keyword_t, <expression>>	array<_Tp, _Nm>
default_delete<for_header_t>	default_delete<_Tp>
unique_ptr<for_header_t, default_delete<for_header_t>>	unique_ptr<_Tp, _Dp>
default_delete<while_header_t>	default_delete<_Tp>
unique_ptr<while_header_t, default_delete<while_header_t>>	unique_ptr<_Tp, _Dp>
default_delete<function_header_t>	default_delete<_Tp>
unique_ptr<function_header_t, default_delete<function_header_t>>	unique_ptr<_Tp, _Dp>
default_delete<begin_header_t>	default_delete<_Tp>
unique_ptr<begin_header_t, default_delete<begin_header_t>>	unique_ptr<_Tp, _Dp>
default_delete<not_statement_t>	default_delete<_Tp>
unique_ptr<not_statement_t, default_delete<not_statement_t>>	unique_ptr<_Tp, _Dp>
default_delete<block_statement_t>	default_delete<_Tp>
unique_ptr<block_statement_t, default_delete<block_statement_t>>	unique_ptr<_Tp, _Dp>
default_delete<if_statement_t>	default_delete<_Tp>
unique_ptr<if_statement_t, default_delete<if_statement_t>>	unique_ptr<_Tp, _Dp>
default_delete<switch_statement_t>	default_delete<_Tp>
unique_ptr<switch_statement_t, default_delete<switch_statement_t>>	unique_ptr<_Tp, _Dp>
default_delete<ContentsNode>	default_delete<_Tp>
unique_ptr<ContentsNode, default_delete<ContentsNode>>	unique_ptr<_Tp, _Dp>
allocator<unique_ptr<ContentsNode, default_delete<ContentsNode>>>	allocator<_Tp>
vector<unique_ptr<ContentsNode, default_delete<ContentsNode>>, allocator<unique_ptr<ContentsNode, default_delete<ContentsNode>>>>	vector<_Tp, _Alloc>
remove_reference<parse_error_t &>	remove_reference<_Tp &>
__add_lvalue_reference_helper<job_list_t, true>	__add_lvalue_reference_helper<_Tp, true>
__uniq_ptr_impl<job_list_t, default_delete<job_list_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<job_list_t, default_delete<job_list_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
__uniq_ptr_impl<freestanding_argument_list_t, default_delete<freestanding_argument_list_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<freestanding_argument_list_t, default_delete<freestanding_argument_list_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
remove_reference<vector<source_range_t, allocator<source_range_t>> &>	remove_reference<_Tp &>
maybe_t<tok_t>	maybe_t<T>
remove_reference<parse_token_t &>	remove_reference<_Tp &>
node_visitation_t<source_range_visitor_t>	node_visitation_t<NodeVisitor>
default_delete<T>	default_delete<_Tp>
unique_ptr<T, default_delete<T>>	unique_ptr<_Tp, _Dp>
is_convertible<pointer, decorated_statement_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, decorated_statement_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, decorated_statement_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, decorated_statement_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__uniq_ptr_impl<decorated_statement_t, default_delete<decorated_statement_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<decorated_statement_t, default_delete<decorated_statement_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
is_convertible<pointer, not_statement_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, not_statement_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, not_statement_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, not_statement_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__uniq_ptr_impl<not_statement_t, default_delete<not_statement_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<not_statement_t, default_delete<not_statement_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
is_convertible<pointer, block_statement_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, block_statement_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, block_statement_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, block_statement_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__uniq_ptr_impl<block_statement_t, default_delete<block_statement_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<block_statement_t, default_delete<block_statement_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
is_convertible<pointer, if_statement_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, if_statement_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, if_statement_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, if_statement_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__uniq_ptr_impl<if_statement_t, default_delete<if_statement_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<if_statement_t, default_delete<if_statement_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
is_convertible<pointer, switch_statement_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, switch_statement_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, switch_statement_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, switch_statement_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__uniq_ptr_impl<switch_statement_t, default_delete<switch_statement_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<switch_statement_t, default_delete<switch_statement_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
is_convertible<pointer, for_header_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, for_header_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, for_header_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, for_header_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__uniq_ptr_impl<for_header_t, default_delete<for_header_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<for_header_t, default_delete<for_header_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
is_convertible<pointer, while_header_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, while_header_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, while_header_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, while_header_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__uniq_ptr_impl<while_header_t, default_delete<while_header_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<while_header_t, default_delete<while_header_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
is_convertible<pointer, function_header_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, function_header_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, function_header_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, function_header_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__uniq_ptr_impl<function_header_t, default_delete<function_header_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<function_header_t, default_delete<function_header_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
is_convertible<pointer, begin_header_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, begin_header_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, begin_header_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, begin_header_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__uniq_ptr_impl<begin_header_t, default_delete<begin_header_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<begin_header_t, default_delete<begin_header_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
is_convertible<pointer, freestanding_argument_list_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, freestanding_argument_list_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, freestanding_argument_list_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, freestanding_argument_list_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
is_convertible<pointer, job_list_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, job_list_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, job_list_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, job_list_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__is_referenceable<job_list_t>	__is_referenceable<_Tp>
is_convertible<pointer, redirection_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, redirection_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, redirection_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, redirection_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__uniq_ptr_impl<redirection_t, default_delete<redirection_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<redirection_t, default_delete<redirection_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
_PCC<<expression>, source_range_t, std::nullptr_t>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, source_range_t, std::nullptr_t>	_PCC<<unnamed>, _T1, _T2>
__pair_base<source_range_t, std::nullptr_t>	__pair_base<_U1, _U2>
__array_traits<parse_token_t, 2UL>	__array_traits<_Tp, _Nm>
reverse_iterator<const parse_token_t *>	reverse_iterator<_Iterator>
reverse_iterator<parse_token_t *>	reverse_iterator<_Iterator>
_PCC<<expression>, source_range_t, const wchar_t *>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, source_range_t, const wchar_t *>	_PCC<<unnamed>, _T1, _T2>
__pair_base<source_range_t, const wchar_t *>	__pair_base<_U1, _U2>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
allocator_traits<allocator<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>>>, unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>>>	__alloc_traits<_Alloc, <unnamed>>
rebind<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>>>	rebind<_Tp>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
allocator_traits<allocator<unique_ptr<job_continuation_t, default_delete<job_continuation_t>>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<unique_ptr<job_continuation_t, default_delete<job_continuation_t>>>, unique_ptr<job_continuation_t, default_delete<job_continuation_t>>>	__alloc_traits<_Alloc, <unnamed>>
rebind<unique_ptr<job_continuation_t, default_delete<job_continuation_t>>>	rebind<_Tp>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
allocator_traits<allocator<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>>>, unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>>>	__alloc_traits<_Alloc, <unnamed>>
rebind<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>>>	rebind<_Tp>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
allocator_traits<allocator<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>>>, unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>>>	__alloc_traits<_Alloc, <unnamed>>
rebind<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>>>	rebind<_Tp>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
allocator_traits<allocator<unique_ptr<argument_t, default_delete<argument_t>>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<unique_ptr<argument_t, default_delete<argument_t>>>, unique_ptr<argument_t, default_delete<argument_t>>>	__alloc_traits<_Alloc, <unnamed>>
rebind<unique_ptr<argument_t, default_delete<argument_t>>>	rebind<_Tp>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
allocator_traits<allocator<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>>>, unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>>>	__alloc_traits<_Alloc, <unnamed>>
rebind<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>>>	rebind<_Tp>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
allocator_traits<allocator<unique_ptr<andor_job_t, default_delete<andor_job_t>>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<unique_ptr<andor_job_t, default_delete<andor_job_t>>>, unique_ptr<andor_job_t, default_delete<andor_job_t>>>	__alloc_traits<_Alloc, <unnamed>>
rebind<unique_ptr<andor_job_t, default_delete<andor_job_t>>>	rebind<_Tp>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
allocator_traits<allocator<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>>>, unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>>>	__alloc_traits<_Alloc, <unnamed>>
rebind<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>>>	rebind<_Tp>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
allocator_traits<allocator<unique_ptr<case_item_t, default_delete<case_item_t>>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<unique_ptr<case_item_t, default_delete<case_item_t>>>, unique_ptr<case_item_t, default_delete<case_item_t>>>	__alloc_traits<_Alloc, <unnamed>>
rebind<unique_ptr<case_item_t, default_delete<case_item_t>>>	rebind<_Tp>
__is_empty_non_tuple<default_delete<for_header_t>>	__is_empty_non_tuple<_Tp>
is_empty<default_delete<for_header_t>>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<for_header_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<for_header_t *>	__is_empty_non_tuple<_Tp>
is_empty<for_header_t *>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<for_header_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<while_header_t>>	__is_empty_non_tuple<_Tp>
is_empty<default_delete<while_header_t>>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<while_header_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<while_header_t *>	__is_empty_non_tuple<_Tp>
is_empty<while_header_t *>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<while_header_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<function_header_t>>	__is_empty_non_tuple<_Tp>
is_empty<default_delete<function_header_t>>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<function_header_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<function_header_t *>	__is_empty_non_tuple<_Tp>
is_empty<function_header_t *>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<function_header_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<begin_header_t>>	__is_empty_non_tuple<_Tp>
is_empty<default_delete<begin_header_t>>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<begin_header_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<begin_header_t *>	__is_empty_non_tuple<_Tp>
is_empty<begin_header_t *>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<begin_header_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<job_list_t>>	__is_empty_non_tuple<_Tp>
is_empty<default_delete<job_list_t>>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<job_list_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<job_list_t *>	__is_empty_non_tuple<_Tp>
is_empty<job_list_t *>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<job_list_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<freestanding_argument_list_t>>	__is_empty_non_tuple<_Tp>
is_empty<default_delete<freestanding_argument_list_t>>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<freestanding_argument_list_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<freestanding_argument_list_t *>	__is_empty_non_tuple<_Tp>
is_empty<freestanding_argument_list_t *>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<freestanding_argument_list_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<decorated_statement_t>>	__is_empty_non_tuple<_Tp>
is_empty<default_delete<decorated_statement_t>>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<decorated_statement_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<decorated_statement_t *>	__is_empty_non_tuple<_Tp>
is_empty<decorated_statement_t *>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<decorated_statement_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<not_statement_t>>	__is_empty_non_tuple<_Tp>
is_empty<default_delete<not_statement_t>>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<not_statement_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<not_statement_t *>	__is_empty_non_tuple<_Tp>
is_empty<not_statement_t *>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<not_statement_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<block_statement_t>>	__is_empty_non_tuple<_Tp>
is_empty<default_delete<block_statement_t>>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<block_statement_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<block_statement_t *>	__is_empty_non_tuple<_Tp>
is_empty<block_statement_t *>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<block_statement_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<if_statement_t>>	__is_empty_non_tuple<_Tp>
is_empty<default_delete<if_statement_t>>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<if_statement_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<if_statement_t *>	__is_empty_non_tuple<_Tp>
is_empty<if_statement_t *>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<if_statement_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<switch_statement_t>>	__is_empty_non_tuple<_Tp>
is_empty<default_delete<switch_statement_t>>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<switch_statement_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<switch_statement_t *>	__is_empty_non_tuple<_Tp>
is_empty<switch_statement_t *>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<switch_statement_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<redirection_t>>	__is_empty_non_tuple<_Tp>
is_empty<default_delete<redirection_t>>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<redirection_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<redirection_t *>	__is_empty_non_tuple<_Tp>
is_empty<redirection_t *>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<redirection_t *>>	conditional<false, _Iftrue, _Iffalse>
allocator_traits<allocator<_Up>>	allocator_traits<_Alloc>
allocator<_Up>	allocator<_Tp>
new_allocator<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>>>	new_allocator<_Tp>
allocator<_Tp1>	allocator<_Tp>
new_allocator<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>>>	new_allocator<_Tp>
new_allocator<unique_ptr<job_continuation_t, default_delete<job_continuation_t>>>	new_allocator<_Tp>
new_allocator<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>>>	new_allocator<_Tp>
new_allocator<unique_ptr<argument_t, default_delete<argument_t>>>	new_allocator<_Tp>
new_allocator<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>>>	new_allocator<_Tp>
new_allocator<unique_ptr<andor_job_t, default_delete<andor_job_t>>>	new_allocator<_Tp>
new_allocator<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>>>	new_allocator<_Tp>
new_allocator<unique_ptr<case_item_t, default_delete<case_item_t>>>	new_allocator<_Tp>
new_allocator<_Tp1>	new_allocator<_Tp>
tuple<default_delete<argument_or_redirection_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<argument_or_redirection_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<_Head, _Tail...>	tuple<_Elements...>
tuple<default_delete<variable_assignment_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<variable_assignment_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<job_conjunction_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<job_conjunction_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<job_conjunction_continuation_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<job_conjunction_continuation_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<job_continuation_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<job_continuation_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<andor_job_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<andor_job_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<elseif_clause_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<elseif_clause_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<case_item_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<case_item_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<keyword_t<kw_time>>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<keyword_t<kw_time>>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<token_t<background>>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<token_t<background>>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<keyword_t<kw_and, kw_or>>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<keyword_t<kw_and, kw_or>>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<token_t<end>>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<token_t<end>>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<else_clause_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<else_clause_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<keyword_t<kw_command, kw_builtin, kw_exec>>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<keyword_t<kw_command, kw_builtin, kw_exec>>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<job_list_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<job_list_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<job_list_t *, default_delete<job_list_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<job_list_t *, default_delete<job_list_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<freestanding_argument_list_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<freestanding_argument_list_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<freestanding_argument_list_t *, default_delete<freestanding_argument_list_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<freestanding_argument_list_t *, default_delete<freestanding_argument_list_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<argument_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<argument_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<decorated_statement_t *, default_delete<decorated_statement_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<decorated_statement_t *, default_delete<decorated_statement_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<decorated_statement_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<decorated_statement_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<not_statement_t *, default_delete<not_statement_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<not_statement_t *, default_delete<not_statement_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<not_statement_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<not_statement_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<block_statement_t *, default_delete<block_statement_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<block_statement_t *, default_delete<block_statement_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<block_statement_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<block_statement_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<if_statement_t *, default_delete<if_statement_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<if_statement_t *, default_delete<if_statement_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<if_statement_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<if_statement_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<switch_statement_t *, default_delete<switch_statement_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<switch_statement_t *, default_delete<switch_statement_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<switch_statement_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<switch_statement_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<for_header_t *, default_delete<for_header_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<for_header_t *, default_delete<for_header_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<for_header_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<for_header_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<while_header_t *, default_delete<while_header_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<while_header_t *, default_delete<while_header_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<while_header_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<while_header_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<function_header_t *, default_delete<function_header_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<function_header_t *, default_delete<function_header_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<function_header_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<function_header_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<begin_header_t *, default_delete<begin_header_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<begin_header_t *, default_delete<begin_header_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<begin_header_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<begin_header_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<redirection_t *, default_delete<redirection_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<redirection_t *, default_delete<redirection_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<redirection_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<redirection_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
remove_cv<node_t *>	remove_cv<_Tp>
remove_const<node_t *>	remove_const<_Tp>
enable_if<true, source_range_t *>	enable_if<true, _Tp>
remove_cv<keyword_t<kw_and, kw_or> *>	remove_cv<_Tp>
remove_const<keyword_t<kw_and, kw_or> *>	remove_const<_Tp>
remove_cv<keyword_t<kw_time> *>	remove_cv<_Tp>
remove_const<keyword_t<kw_time> *>	remove_const<_Tp>
remove_cv<variable_assignment_t *>	remove_cv<_Tp>
remove_const<variable_assignment_t *>	remove_const<_Tp>
remove_cv<job_continuation_t *>	remove_cv<_Tp>
remove_const<job_continuation_t *>	remove_const<_Tp>
remove_cv<token_t<background> *>	remove_cv<_Tp>
remove_const<token_t<background> *>	remove_const<_Tp>
remove_cv<job_conjunction_continuation_t *>	remove_cv<_Tp>
remove_const<job_conjunction_continuation_t *>	remove_const<_Tp>
remove_cv<token_t<end> *>	remove_cv<_Tp>
remove_const<token_t<end> *>	remove_const<_Tp>
remove_cv<job_conjunction_t *>	remove_cv<_Tp>
remove_const<job_conjunction_t *>	remove_const<_Tp>
remove_cv<argument_t *>	remove_cv<_Tp>
remove_const<argument_t *>	remove_const<_Tp>
remove_cv<keyword_t<kw_command, kw_builtin, kw_exec> *>	remove_cv<_Tp>
remove_const<keyword_t<kw_command, kw_builtin, kw_exec> *>	remove_const<_Tp>
remove_cv<argument_or_redirection_t *>	remove_cv<_Tp>
remove_const<argument_or_redirection_t *>	remove_const<_Tp>
remove_cv<andor_job_t *>	remove_cv<_Tp>
remove_const<andor_job_t *>	remove_const<_Tp>
remove_cv<elseif_clause_t *>	remove_cv<_Tp>
remove_const<elseif_clause_t *>	remove_const<_Tp>
remove_cv<else_clause_t *>	remove_cv<_Tp>
remove_const<else_clause_t *>	remove_const<_Tp>
remove_cv<case_item_t *>	remove_cv<_Tp>
remove_const<case_item_t *>	remove_const<_Tp>
__add_lvalue_reference_helper<job_conjunction_t, true>	__add_lvalue_reference_helper<_Tp, true>
__uniq_ptr_impl<job_conjunction_t, default_delete<job_conjunction_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<job_conjunction_t, default_delete<job_conjunction_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
__add_lvalue_reference_helper<keyword_t<kw_and, kw_or>, true>	__add_lvalue_reference_helper<_Tp, true>
__uniq_ptr_impl<keyword_t<kw_and, kw_or>, default_delete<keyword_t<kw_and, kw_or>>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<keyword_t<kw_and, kw_or>, default_delete<keyword_t<kw_and, kw_or>>, void>	_Ptr<_Up, _Ep, <unnamed>>
array<parse_keyword_t, 2UL>	array<_Tp, _Nm>
__add_lvalue_reference_helper<keyword_t<kw_time>, true>	__add_lvalue_reference_helper<_Tp, true>
__uniq_ptr_impl<keyword_t<kw_time>, default_delete<keyword_t<kw_time>>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<keyword_t<kw_time>, default_delete<keyword_t<kw_time>>, void>	_Ptr<_Up, _Ep, <unnamed>>
array<parse_keyword_t, 1UL>	array<_Tp, _Nm>
contents_ptr_t	contents_ptr_t
remove_reference<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>> &>	remove_reference<_Tp &>
__normal_iterator<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>> *, vector<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>>, allocator<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>>>>>	__normal_iterator<_Iterator, _Container>
__add_lvalue_reference_helper<variable_assignment_t, true>	__add_lvalue_reference_helper<_Tp, true>
__uniq_ptr_impl<variable_assignment_t, default_delete<variable_assignment_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<variable_assignment_t, default_delete<variable_assignment_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
contents_ptr_t	contents_ptr_t
remove_reference<unique_ptr<job_continuation_t, default_delete<job_continuation_t>> &>	remove_reference<_Tp &>
__normal_iterator<unique_ptr<job_continuation_t, default_delete<job_continuation_t>> *, vector<unique_ptr<job_continuation_t, default_delete<job_continuation_t>>, allocator<unique_ptr<job_continuation_t, default_delete<job_continuation_t>>>>>	__normal_iterator<_Iterator, _Container>
__add_lvalue_reference_helper<job_continuation_t, true>	__add_lvalue_reference_helper<_Tp, true>
__uniq_ptr_impl<job_continuation_t, default_delete<job_continuation_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<job_continuation_t, default_delete<job_continuation_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
__add_lvalue_reference_helper<token_t<background>, true>	__add_lvalue_reference_helper<_Tp, true>
__uniq_ptr_impl<token_t<background>, default_delete<token_t<background>>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<token_t<background>, default_delete<token_t<background>>, void>	_Ptr<_Up, _Ep, <unnamed>>
contents_ptr_t	contents_ptr_t
remove_reference<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>> &>	remove_reference<_Tp &>
__normal_iterator<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>> *, vector<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>>, allocator<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>>>>>	__normal_iterator<_Iterator, _Container>
__add_lvalue_reference_helper<job_conjunction_continuation_t, true>	__add_lvalue_reference_helper<_Tp, true>
__uniq_ptr_impl<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
__add_lvalue_reference_helper<token_t<end>, true>	__add_lvalue_reference_helper<_Tp, true>
__uniq_ptr_impl<token_t<end>, default_delete<token_t<end>>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<token_t<end>, default_delete<token_t<end>>, void>	_Ptr<_Up, _Ep, <unnamed>>
__add_lvalue_reference_helper<keyword_t<kw_command, kw_builtin, kw_exec>, true>	__add_lvalue_reference_helper<_Tp, true>
__uniq_ptr_impl<keyword_t<kw_command, kw_builtin, kw_exec>, default_delete<keyword_t<kw_command, kw_builtin, kw_exec>>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<keyword_t<kw_command, kw_builtin, kw_exec>, default_delete<keyword_t<kw_command, kw_builtin, kw_exec>>, void>	_Ptr<_Up, _Ep, <unnamed>>
array<parse_keyword_t, 3UL>	array<_Tp, _Nm>
contents_ptr_t	contents_ptr_t
remove_reference<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>> &>	remove_reference<_Tp &>
__normal_iterator<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>> *, vector<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>>, allocator<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>>>>>	__normal_iterator<_Iterator, _Container>
__add_lvalue_reference_helper<argument_or_redirection_t, true>	__add_lvalue_reference_helper<_Tp, true>
__uniq_ptr_impl<argument_or_redirection_t, default_delete<argument_or_redirection_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
contents_ptr_t	contents_ptr_t
remove_reference<unique_ptr<andor_job_t, default_delete<andor_job_t>> &>	remove_reference<_Tp &>
__normal_iterator<unique_ptr<andor_job_t, default_delete<andor_job_t>> *, vector<unique_ptr<andor_job_t, default_delete<andor_job_t>>, allocator<unique_ptr<andor_job_t, default_delete<andor_job_t>>>>>	__normal_iterator<_Iterator, _Container>
__add_lvalue_reference_helper<andor_job_t, true>	__add_lvalue_reference_helper<_Tp, true>
__uniq_ptr_impl<andor_job_t, default_delete<andor_job_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<andor_job_t, default_delete<andor_job_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
contents_ptr_t	contents_ptr_t
remove_reference<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>> &>	remove_reference<_Tp &>
__normal_iterator<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>> *, vector<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>>, allocator<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>>>>>	__normal_iterator<_Iterator, _Container>
__add_lvalue_reference_helper<elseif_clause_t, true>	__add_lvalue_reference_helper<_Tp, true>
__uniq_ptr_impl<elseif_clause_t, default_delete<elseif_clause_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<elseif_clause_t, default_delete<elseif_clause_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
__add_lvalue_reference_helper<else_clause_t, true>	__add_lvalue_reference_helper<_Tp, true>
__uniq_ptr_impl<else_clause_t, default_delete<else_clause_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<else_clause_t, default_delete<else_clause_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
contents_ptr_t	contents_ptr_t
remove_reference<unique_ptr<case_item_t, default_delete<case_item_t>> &>	remove_reference<_Tp &>
__normal_iterator<unique_ptr<case_item_t, default_delete<case_item_t>> *, vector<unique_ptr<case_item_t, default_delete<case_item_t>>, allocator<unique_ptr<case_item_t, default_delete<case_item_t>>>>>	__normal_iterator<_Iterator, _Container>
__add_lvalue_reference_helper<case_item_t, true>	__add_lvalue_reference_helper<_Tp, true>
__uniq_ptr_impl<case_item_t, default_delete<case_item_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<case_item_t, default_delete<case_item_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
__add_lvalue_reference_helper<argument_t, true>	__add_lvalue_reference_helper<_Tp, true>
__uniq_ptr_impl<argument_t, default_delete<argument_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<argument_t, default_delete<argument_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
__add_lvalue_reference_helper<redirection_t, true>	__add_lvalue_reference_helper<_Tp, true>
maybe_impl_t<source_range_t>	maybe_impl_t<T>
remove_reference<freestanding_argument_list_t *&>	remove_reference<_Tp &>
remove_reference<job_list_t *&>	remove_reference<_Tp &>
__alloc_traits<allocator<source_range_t>, source_range_t>	__alloc_traits<_Alloc, <unnamed>>
contents_ptr_t	contents_ptr_t
__normal_iterator<unique_ptr<argument_t, default_delete<argument_t>> *, vector<unique_ptr<argument_t, default_delete<argument_t>>, allocator<unique_ptr<argument_t, default_delete<argument_t>>>>>	__normal_iterator<_Iterator, _Container>
contents_ptr_t	contents_ptr_t
remove_reference<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>> &>	remove_reference<_Tp &>
__normal_iterator<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>> *, vector<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>>, allocator<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>>>>>	__normal_iterator<_Iterator, _Container>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
allocator_traits<allocator<source_range_t>>	allocator_traits<allocator<_Tp>>
__normal_iterator<source_range_t *, vector<source_range_t, allocator<source_range_t>>>	__normal_iterator<_Iterator, _Container>
remove_reference<source_range_t &>	remove_reference<_Tp &>
__add_lvalue_reference_helper<switch_statement_t, true>	__add_lvalue_reference_helper<_Tp, true>
__add_lvalue_reference_helper<if_statement_t, true>	__add_lvalue_reference_helper<_Tp, true>
__add_lvalue_reference_helper<block_statement_t, true>	__add_lvalue_reference_helper<_Tp, true>
__add_lvalue_reference_helper<not_statement_t, true>	__add_lvalue_reference_helper<_Tp, true>
__add_lvalue_reference_helper<begin_header_t, true>	__add_lvalue_reference_helper<_Tp, true>
__add_lvalue_reference_helper<function_header_t, true>	__add_lvalue_reference_helper<_Tp, true>
__add_lvalue_reference_helper<while_header_t, true>	__add_lvalue_reference_helper<_Tp, true>
__add_lvalue_reference_helper<for_header_t, true>	__add_lvalue_reference_helper<_Tp, true>
remove_reference<redirection_t *&>	remove_reference<_Tp &>
remove_reference<argument_t *&>	remove_reference<_Tp &>
remove_reference<default_delete<redirection_t>>	remove_reference<_Tp>
remove_reference<default_delete<argument_t>>	remove_reference<_Tp>
remove_reference<node_deleter_t>	remove_reference<_Tp>
remove_reference<const node_t *&>	remove_reference<_Tp &>
__strip_reference_wrapper<source_range_t>	__strip_reference_wrapper<_Tp>
__decay_and_strip<source_range_t>	__decay_and_strip<_Tp>
__strip_reference_wrapper<std::nullptr_t>	__strip_reference_wrapper<_Tp>
__decay_and_strip<std::nullptr_t>	__decay_and_strip<_Tp>
remove_reference<source_range_t>	remove_reference<_Tp>
remove_reference<std::nullptr_t>	remove_reference<_Tp>
__decay_and_strip<const source_range_t &>	__decay_and_strip<_Tp>
__strip_reference_wrapper<const wchar_t *>	__strip_reference_wrapper<_Tp>
__decay_and_strip<const wchar_t(&)[17]>	__decay_and_strip<_Tp>
remove_reference<const source_range_t &>	remove_reference<_Tp &>
remove_reference<const wchar_t(&)[17]>	remove_reference<_Tp &>
__decay_and_strip<const wchar_t(&)[13]>	__decay_and_strip<_Tp>
remove_reference<const wchar_t(&)[13]>	remove_reference<_Tp &>
__decay_and_strip<const wchar_t(&)[6]>	__decay_and_strip<_Tp>
remove_reference<const wchar_t(&)[6]>	remove_reference<_Tp &>
__decay_and_strip<const wchar_t(&)[20]>	__decay_and_strip<_Tp>
remove_reference<const wchar_t(&)[20]>	remove_reference<_Tp &>
__decay_and_strip<const wchar_t(&)[11]>	__decay_and_strip<_Tp>
remove_reference<const wchar_t(&)[11]>	remove_reference<_Tp &>
__decay_and_strip<const wchar_t(&)[9]>	__decay_and_strip<_Tp>
remove_reference<const wchar_t(&)[9]>	remove_reference<_Tp &>
__add_lvalue_reference_helper<decorated_statement_t, true>	__add_lvalue_reference_helper<_Tp, true>
remove_reference<keyword_t<kw_command, kw_builtin, kw_exec> *&>	remove_reference<_Tp &>
remove_reference<else_clause_t *&>	remove_reference<_Tp &>
remove_reference<keyword_t<kw_and, kw_or> *&>	remove_reference<_Tp &>
remove_reference<keyword_t<kw_time> *&>	remove_reference<_Tp &>
remove_reference<token_t<background> *&>	remove_reference<_Tp &>
remove_reference<token_t<end> *&>	remove_reference<_Tp &>
remove_reference<node_t *&>	remove_reference<_Tp &>
rebind<source_range_t>	rebind<_Tp>
move_iterator<source_range_t *>	move_iterator<_Iterator>
new_allocator<source_range_t>	new_allocator<_Tp>
iterator_traits<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>> *>	iterator_traits<_Tp *>
iterator_traits<unique_ptr<job_continuation_t, default_delete<job_continuation_t>> *>	iterator_traits<_Tp *>
iterator_traits<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>> *>	iterator_traits<_Tp *>
iterator_traits<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>> *>	iterator_traits<_Tp *>
iterator_traits<unique_ptr<argument_t, default_delete<argument_t>> *>	iterator_traits<_Tp *>
iterator_traits<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>> *>	iterator_traits<_Tp *>
iterator_traits<unique_ptr<andor_job_t, default_delete<andor_job_t>> *>	iterator_traits<_Tp *>
iterator_traits<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>> *>	iterator_traits<_Tp *>
iterator_traits<unique_ptr<case_item_t, default_delete<case_item_t>> *>	iterator_traits<_Tp *>
__result_of_success<void, __invoke_other>	__result_of_success<_Tp, _Tag>
conditional<true, source_range_t &&, source_range_t &>	conditional<_Cond, _Iftrue, _Iffalse>
iterator_traits<source_range_t *>	iterator_traits<_Tp *>
__is_referenceable<decorated_statement_t>	__is_referenceable<_Tp>
__is_referenceable<for_header_t>	__is_referenceable<_Tp>
__is_referenceable<while_header_t>	__is_referenceable<_Tp>
__is_referenceable<function_header_t>	__is_referenceable<_Tp>
__is_referenceable<begin_header_t>	__is_referenceable<_Tp>
__is_referenceable<not_statement_t>	__is_referenceable<_Tp>
__is_referenceable<block_statement_t>	__is_referenceable<_Tp>
__is_referenceable<if_statement_t>	__is_referenceable<_Tp>
__is_referenceable<switch_statement_t>	__is_referenceable<_Tp>
_Temporary_value	_Temporary_value
reverse_iterator<__normal_iterator<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>> *, vector<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>>, allocator<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>>>>>>	reverse_iterator<_Iterator>
__normal_iterator<const unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>> *, vector<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>>, allocator<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>> *, vector<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>>, allocator<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>>>>>>	reverse_iterator<_Iterator>
_Temporary_value	_Temporary_value
reverse_iterator<__normal_iterator<unique_ptr<argument_t, default_delete<argument_t>> *, vector<unique_ptr<argument_t, default_delete<argument_t>>, allocator<unique_ptr<argument_t, default_delete<argument_t>>>>>>	reverse_iterator<_Iterator>
__normal_iterator<const unique_ptr<argument_t, default_delete<argument_t>> *, vector<unique_ptr<argument_t, default_delete<argument_t>>, allocator<unique_ptr<argument_t, default_delete<argument_t>>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const unique_ptr<argument_t, default_delete<argument_t>> *, vector<unique_ptr<argument_t, default_delete<argument_t>>, allocator<unique_ptr<argument_t, default_delete<argument_t>>>>>>	reverse_iterator<_Iterator>
__is_referenceable<redirection_t>	__is_referenceable<_Tp>
__is_referenceable<argument_t>	__is_referenceable<_Tp>
__is_referenceable<case_item_t>	__is_referenceable<_Tp>
_Temporary_value	_Temporary_value
reverse_iterator<__normal_iterator<unique_ptr<case_item_t, default_delete<case_item_t>> *, vector<unique_ptr<case_item_t, default_delete<case_item_t>>, allocator<unique_ptr<case_item_t, default_delete<case_item_t>>>>>>	reverse_iterator<_Iterator>
__normal_iterator<const unique_ptr<case_item_t, default_delete<case_item_t>> *, vector<unique_ptr<case_item_t, default_delete<case_item_t>>, allocator<unique_ptr<case_item_t, default_delete<case_item_t>>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const unique_ptr<case_item_t, default_delete<case_item_t>> *, vector<unique_ptr<case_item_t, default_delete<case_item_t>>, allocator<unique_ptr<case_item_t, default_delete<case_item_t>>>>>>	reverse_iterator<_Iterator>
__is_referenceable<elseif_clause_t>	__is_referenceable<_Tp>
_Temporary_value	_Temporary_value
reverse_iterator<__normal_iterator<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>> *, vector<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>>, allocator<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>>>>>>	reverse_iterator<_Iterator>
__normal_iterator<const unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>> *, vector<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>>, allocator<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>> *, vector<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>>, allocator<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>>>>>>	reverse_iterator<_Iterator>
__is_referenceable<andor_job_t>	__is_referenceable<_Tp>
_Temporary_value	_Temporary_value
reverse_iterator<__normal_iterator<unique_ptr<andor_job_t, default_delete<andor_job_t>> *, vector<unique_ptr<andor_job_t, default_delete<andor_job_t>>, allocator<unique_ptr<andor_job_t, default_delete<andor_job_t>>>>>>	reverse_iterator<_Iterator>
__normal_iterator<const unique_ptr<andor_job_t, default_delete<andor_job_t>> *, vector<unique_ptr<andor_job_t, default_delete<andor_job_t>>, allocator<unique_ptr<andor_job_t, default_delete<andor_job_t>>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const unique_ptr<andor_job_t, default_delete<andor_job_t>> *, vector<unique_ptr<andor_job_t, default_delete<andor_job_t>>, allocator<unique_ptr<andor_job_t, default_delete<andor_job_t>>>>>>	reverse_iterator<_Iterator>
__is_referenceable<argument_or_redirection_t>	__is_referenceable<_Tp>
_Temporary_value	_Temporary_value
reverse_iterator<__normal_iterator<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>> *, vector<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>>, allocator<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>>>>>>	reverse_iterator<_Iterator>
__normal_iterator<const unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>> *, vector<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>>, allocator<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>> *, vector<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>>, allocator<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>>>>>>	reverse_iterator<_Iterator>
__array_traits<parse_keyword_t, 3UL>	__array_traits<_Tp, _Nm>
reverse_iterator<const parse_keyword_t *>	reverse_iterator<_Iterator>
reverse_iterator<parse_keyword_t *>	reverse_iterator<_Iterator>
__is_referenceable<job_conjunction_continuation_t>	__is_referenceable<_Tp>
_Temporary_value	_Temporary_value
reverse_iterator<__normal_iterator<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>> *, vector<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>>, allocator<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>>>>>>	reverse_iterator<_Iterator>
__normal_iterator<const unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>> *, vector<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>>, allocator<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>> *, vector<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>>, allocator<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>>>>>>	reverse_iterator<_Iterator>
__is_referenceable<job_continuation_t>	__is_referenceable<_Tp>
_Temporary_value	_Temporary_value
reverse_iterator<__normal_iterator<unique_ptr<job_continuation_t, default_delete<job_continuation_t>> *, vector<unique_ptr<job_continuation_t, default_delete<job_continuation_t>>, allocator<unique_ptr<job_continuation_t, default_delete<job_continuation_t>>>>>>	reverse_iterator<_Iterator>
__normal_iterator<const unique_ptr<job_continuation_t, default_delete<job_continuation_t>> *, vector<unique_ptr<job_continuation_t, default_delete<job_continuation_t>>, allocator<unique_ptr<job_continuation_t, default_delete<job_continuation_t>>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const unique_ptr<job_continuation_t, default_delete<job_continuation_t>> *, vector<unique_ptr<job_continuation_t, default_delete<job_continuation_t>>, allocator<unique_ptr<job_continuation_t, default_delete<job_continuation_t>>>>>>	reverse_iterator<_Iterator>
__is_referenceable<variable_assignment_t>	__is_referenceable<_Tp>
_Temporary_value	_Temporary_value
reverse_iterator<__normal_iterator<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>> *, vector<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>>, allocator<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>>>>>>	reverse_iterator<_Iterator>
__normal_iterator<const unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>> *, vector<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>>, allocator<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>> *, vector<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>>, allocator<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>>>>>>	reverse_iterator<_Iterator>
__array_traits<parse_keyword_t, 1UL>	__array_traits<_Tp, _Nm>
__array_traits<parse_keyword_t, 2UL>	__array_traits<_Tp, _Nm>
__is_referenceable<job_conjunction_t>	__is_referenceable<_Tp>
_TC<value, redirection_t *, default_delete<redirection_t>>	_TC<<unnamed>, _Elements...>
_TC<true, redirection_t *, default_delete<redirection_t>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, redirection_t *, default_delete<redirection_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
pair<_U1, _U2>	pair<_T1, _T2>
pair<_U1, _U2>	pair<_T1, _T2>
tuple<_U1, _U2>	tuple<_Elements...>
tuple<_U1, _U2>	tuple<_Elements...>
pair<_U1, _U2>	pair<_T1, _T2>
pair<_U1, _U2>	pair<_T1, _T2>
pair<_U1, _U2>	pair<_T1, _T2>
pair<_U1, _U2>	pair<_T1, _T2>
tuple<_U1, _U2>	tuple<_Elements...>
tuple<_U1, _U2>	tuple<_Elements...>
tuple<_U1, _U2>	tuple<_Elements...>
tuple<_U1, _U2>	tuple<_Elements...>
pair<_U1, _U2>	pair<_T1, _T2>
pair<_U1, _U2>	pair<_T1, _T2>
pair<_U1, _U2>	pair<_T1, _T2>
pair<_U1, _U2>	pair<_T1, _T2>
tuple<_U1, _U2>	tuple<_Elements...>
tuple<_U1, _U2>	tuple<_Elements...>
tuple<_U1, _U2>	tuple<_Elements...>
tuple<_U1, _U2>	tuple<_Elements...>
_TC<value, begin_header_t *, default_delete<begin_header_t>>	_TC<<unnamed>, _Elements...>
_TC<true, begin_header_t *, default_delete<begin_header_t>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, begin_header_t *, default_delete<begin_header_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_TC<value, function_header_t *, default_delete<function_header_t>>	_TC<<unnamed>, _Elements...>
_TC<true, function_header_t *, default_delete<function_header_t>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, function_header_t *, default_delete<function_header_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_TC<value, while_header_t *, default_delete<while_header_t>>	_TC<<unnamed>, _Elements...>
_TC<true, while_header_t *, default_delete<while_header_t>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, while_header_t *, default_delete<while_header_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_TC<value, for_header_t *, default_delete<for_header_t>>	_TC<<unnamed>, _Elements...>
_TC<true, for_header_t *, default_delete<for_header_t>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, for_header_t *, default_delete<for_header_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_TC<value, switch_statement_t *, default_delete<switch_statement_t>>	_TC<<unnamed>, _Elements...>
_TC<true, switch_statement_t *, default_delete<switch_statement_t>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, switch_statement_t *, default_delete<switch_statement_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_TC<value, if_statement_t *, default_delete<if_statement_t>>	_TC<<unnamed>, _Elements...>
_TC<true, if_statement_t *, default_delete<if_statement_t>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, if_statement_t *, default_delete<if_statement_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_TC<value, block_statement_t *, default_delete<block_statement_t>>	_TC<<unnamed>, _Elements...>
_TC<true, block_statement_t *, default_delete<block_statement_t>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, block_statement_t *, default_delete<block_statement_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_TC<value, not_statement_t *, default_delete<not_statement_t>>	_TC<<unnamed>, _Elements...>
_TC<true, not_statement_t *, default_delete<not_statement_t>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, not_statement_t *, default_delete<not_statement_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_TC<value, decorated_statement_t *, default_delete<decorated_statement_t>>	_TC<<unnamed>, _Elements...>
_TC<true, decorated_statement_t *, default_delete<decorated_statement_t>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, decorated_statement_t *, default_delete<decorated_statement_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_TC<value, freestanding_argument_list_t *, default_delete<freestanding_argument_list_t>>	_TC<<unnamed>, _Elements...>
_TC<true, freestanding_argument_list_t *, default_delete<freestanding_argument_list_t>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, freestanding_argument_list_t *, default_delete<freestanding_argument_list_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_TC<value, job_list_t *, default_delete<job_list_t>>	_TC<<unnamed>, _Elements...>
_TC<true, job_list_t *, default_delete<job_list_t>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, job_list_t *, default_delete<job_list_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
is_same<unique_ptr<case_item_t, default_delete<case_item_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
is_pointer<_Ptr>	is_pointer<_Tp>
__not_<is_pointer<_Ptr>>	__not_<_Pp>
__and_<is_same<unique_ptr<case_item_t, default_delete<case_item_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unique_ptr<case_item_t, default_delete<case_item_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
is_pointer<_Ptr>	is_pointer<_Tp>
__not_<is_pointer<_Ptr>>	__not_<_Pp>
__and_<is_same<unique_ptr<case_item_t, default_delete<case_item_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unique_ptr<case_item_t, default_delete<case_item_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
is_pointer<_Ptr>	is_pointer<_Tp>
__not_<is_pointer<_Ptr>>	__not_<_Pp>
__and_<is_same<unique_ptr<case_item_t, default_delete<case_item_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unique_ptr<andor_job_t, default_delete<andor_job_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unique_ptr<andor_job_t, default_delete<andor_job_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unique_ptr<andor_job_t, default_delete<andor_job_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unique_ptr<andor_job_t, default_delete<andor_job_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unique_ptr<andor_job_t, default_delete<andor_job_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unique_ptr<andor_job_t, default_delete<andor_job_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unique_ptr<argument_t, default_delete<argument_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unique_ptr<argument_t, default_delete<argument_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unique_ptr<argument_t, default_delete<argument_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unique_ptr<argument_t, default_delete<argument_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unique_ptr<argument_t, default_delete<argument_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unique_ptr<argument_t, default_delete<argument_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unique_ptr<job_continuation_t, default_delete<job_continuation_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unique_ptr<job_continuation_t, default_delete<job_continuation_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unique_ptr<job_continuation_t, default_delete<job_continuation_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unique_ptr<job_continuation_t, default_delete<job_continuation_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unique_ptr<job_continuation_t, default_delete<job_continuation_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unique_ptr<job_continuation_t, default_delete<job_continuation_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
reverse_iterator<__normal_iterator<source_range_t *, vector<source_range_t, allocator<source_range_t>>>>	reverse_iterator<_Iterator>
is_same<source_range_t, _U1>	is_same<<unnamed>, <unnamed>>
is_same<const wchar_t *, _U2>	is_same<<unnamed>, <unnamed>>
pair<unsigned long, unsigned long>	pair<_T1, _T2>
is_same<std::nullptr_t, _U2>	is_same<<unnamed>, <unnamed>>
tuple<token_t<end> *, default_delete<token_t<end>>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<token_t<end> *, default_delete<token_t<end>>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<token_t<background> *, default_delete<token_t<background>>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<token_t<background> *, default_delete<token_t<background>>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<keyword_t<kw_time> *, default_delete<keyword_t<kw_time>>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<keyword_t<kw_time> *, default_delete<keyword_t<kw_time>>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<keyword_t<kw_and, kw_or> *, default_delete<keyword_t<kw_and, kw_or>>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<keyword_t<kw_and, kw_or> *, default_delete<keyword_t<kw_and, kw_or>>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<else_clause_t *, default_delete<else_clause_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<else_clause_t *, default_delete<else_clause_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<keyword_t<kw_command, kw_builtin, kw_exec> *, default_delete<keyword_t<kw_command, kw_builtin, kw_exec>>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<keyword_t<kw_command, kw_builtin, kw_exec> *, default_delete<keyword_t<kw_command, kw_builtin, kw_exec>>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
remove_reference<const node_t *>	remove_reference<_Tp>
__normal_iterator<const node_t **, vector<const node_t *, allocator<const node_t *>>>	__normal_iterator<_Iterator, _Container>
tuple<argument_t *, default_delete<argument_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<argument_t *, default_delete<argument_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
remove_reference<default_delete<job_list_t>>	remove_reference<_Tp>
remove_reference<default_delete<freestanding_argument_list_t>>	remove_reference<_Tp>
remove_reference<begin_header_t *&>	remove_reference<_Tp &>
remove_reference<default_delete<begin_header_t>>	remove_reference<_Tp>
remove_reference<function_header_t *&>	remove_reference<_Tp &>
remove_reference<default_delete<function_header_t>>	remove_reference<_Tp>
remove_reference<while_header_t *&>	remove_reference<_Tp &>
remove_reference<default_delete<while_header_t>>	remove_reference<_Tp>
remove_reference<for_header_t *&>	remove_reference<_Tp &>
remove_reference<default_delete<for_header_t>>	remove_reference<_Tp>
remove_reference<default_delete<case_item_t>>	remove_reference<_Tp>
remove_reference<case_item_t *&>	remove_reference<_Tp &>
remove_reference<switch_statement_t *&>	remove_reference<_Tp &>
remove_reference<default_delete<switch_statement_t>>	remove_reference<_Tp>
remove_reference<default_delete<else_clause_t>>	remove_reference<_Tp>
remove_reference<default_delete<elseif_clause_t>>	remove_reference<_Tp>
remove_reference<elseif_clause_t *&>	remove_reference<_Tp &>
remove_reference<default_delete<andor_job_t>>	remove_reference<_Tp>
remove_reference<andor_job_t *&>	remove_reference<_Tp &>
remove_reference<if_statement_t *&>	remove_reference<_Tp &>
remove_reference<default_delete<if_statement_t>>	remove_reference<_Tp>
remove_reference<block_statement_t *&>	remove_reference<_Tp &>
remove_reference<default_delete<block_statement_t>>	remove_reference<_Tp>
remove_reference<not_statement_t *&>	remove_reference<_Tp &>
remove_reference<default_delete<not_statement_t>>	remove_reference<_Tp>
remove_reference<default_delete<argument_or_redirection_t>>	remove_reference<_Tp>
remove_reference<argument_or_redirection_t *&>	remove_reference<_Tp &>
remove_reference<default_delete<keyword_t<kw_command, kw_builtin, kw_exec>>>	remove_reference<_Tp>
remove_reference<decorated_statement_t *&>	remove_reference<_Tp &>
remove_reference<default_delete<decorated_statement_t>>	remove_reference<_Tp>
remove_reference<default_delete<token_t<end>>>	remove_reference<_Tp>
remove_reference<default_delete<job_conjunction_continuation_t>>	remove_reference<_Tp>
remove_reference<job_conjunction_continuation_t *&>	remove_reference<_Tp &>
remove_reference<default_delete<token_t<background>>>	remove_reference<_Tp>
remove_reference<default_delete<job_continuation_t>>	remove_reference<_Tp>
remove_reference<job_continuation_t *&>	remove_reference<_Tp &>
remove_reference<default_delete<variable_assignment_t>>	remove_reference<_Tp>
remove_reference<variable_assignment_t *&>	remove_reference<_Tp &>
remove_reference<default_delete<keyword_t<kw_time>>>	remove_reference<_Tp>
remove_reference<default_delete<keyword_t<kw_and, kw_or>>>	remove_reference<_Tp>
remove_reference<job_conjunction_t *&>	remove_reference<_Tp &>
remove_reference<default_delete<job_conjunction_t>>	remove_reference<_Tp>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
is_same<std::nullptr_t, _U2>	is_same<<unnamed>, <unnamed>>
is_same<source_range_t, _U1>	is_same<<unnamed>, <unnamed>>
is_same<std::nullptr_t, _U2>	is_same<<unnamed>, <unnamed>>
is_same<source_range_t, _U1>	is_same<<unnamed>, <unnamed>>
is_same<std::nullptr_t, _U2>	is_same<<unnamed>, <unnamed>>
is_same<source_range_t, _U1>	is_same<<unnamed>, <unnamed>>
is_same<std::nullptr_t, _U2>	is_same<<unnamed>, <unnamed>>
is_same<source_range_t, _U1>	is_same<<unnamed>, <unnamed>>
is_same<const wchar_t *, _U2>	is_same<<unnamed>, <unnamed>>
is_same<const wchar_t *, _U2>	is_same<<unnamed>, <unnamed>>
is_same<const wchar_t *, _U2>	is_same<<unnamed>, <unnamed>>
is_same<const wchar_t *, _U2>	is_same<<unnamed>, <unnamed>>
is_same<_Dummy, void>	is_same<<unnamed>, <unnamed>>
_Head_base<0UL, job_list_t *, false>	_Head_base<_Idx, _Head, false>
_Tuple_impl<1UL, default_delete<job_list_t>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<1UL, default_delete<case_item_t>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<0UL, case_item_t *, default_delete<case_item_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_Tuple_impl<1UL, default_delete<elseif_clause_t>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<0UL, elseif_clause_t *, default_delete<elseif_clause_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_Tuple_impl<1UL, default_delete<andor_job_t>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<0UL, andor_job_t *, default_delete<andor_job_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_Tuple_impl<1UL, default_delete<job_continuation_t>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<0UL, job_continuation_t *, default_delete<job_continuation_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_Tuple_impl<1UL, default_delete<job_conjunction_continuation_t>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<0UL, job_conjunction_continuation_t *, default_delete<job_conjunction_continuation_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_Tuple_impl<1UL, default_delete<job_conjunction_t>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<0UL, job_conjunction_t *, default_delete<job_conjunction_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_Tuple_impl<1UL, default_delete<variable_assignment_t>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<0UL, variable_assignment_t *, default_delete<variable_assignment_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_Tuple_impl<1UL, default_delete<argument_or_redirection_t>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<0UL, argument_or_redirection_t *, default_delete<argument_or_redirection_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_Tuple_impl<1UL, default_delete<redirection_t>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<1UL, default_delete<argument_t>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<0UL, argument_t *, default_delete<argument_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_Tuple_impl<1UL, default_delete<begin_header_t>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<1UL, default_delete<function_header_t>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<1UL, default_delete<while_header_t>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<1UL, default_delete<for_header_t>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<1UL, default_delete<switch_statement_t>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<1UL, default_delete<if_statement_t>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<1UL, default_delete<block_statement_t>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<1UL, default_delete<not_statement_t>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<1UL, default_delete<decorated_statement_t>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<1UL, default_delete<freestanding_argument_list_t>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<0UL, node_t *, node_deleter_t>	_Tuple_impl<_Idx, _Head, _Tail...>
_Tuple_impl<1UL, node_deleter_t>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<0UL, keyword_t<kw_time> *, default_delete<keyword_t<kw_time>>>	_Tuple_impl<_Idx, _Head, _Tail...>
_Tuple_impl<1UL, default_delete<keyword_t<kw_time>>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<0UL, token_t<background> *, default_delete<token_t<background>>>	_Tuple_impl<_Idx, _Head, _Tail...>
_Tuple_impl<1UL, default_delete<token_t<background>>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<0UL, keyword_t<kw_and, kw_or> *, default_delete<keyword_t<kw_and, kw_or>>>	_Tuple_impl<_Idx, _Head, _Tail...>
_Tuple_impl<1UL, default_delete<keyword_t<kw_and, kw_or>>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<0UL, token_t<end> *, default_delete<token_t<end>>>	_Tuple_impl<_Idx, _Head, _Tail...>
_Tuple_impl<1UL, default_delete<token_t<end>>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<0UL, else_clause_t *, default_delete<else_clause_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_Tuple_impl<1UL, default_delete<else_clause_t>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<0UL, keyword_t<kw_command, kw_builtin, kw_exec> *, default_delete<keyword_t<kw_command, kw_builtin, kw_exec>>>	_Tuple_impl<_Idx, _Head, _Tail...>
_Tuple_impl<1UL, default_delete<keyword_t<kw_command, kw_builtin, kw_exec>>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<0UL, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Head_base<0UL, freestanding_argument_list_t *, false>	_Head_base<_Idx, _Head, false>
_Head_base<0UL, decorated_statement_t *, false>	_Head_base<_Idx, _Head, false>
_Head_base<0UL, not_statement_t *, false>	_Head_base<_Idx, _Head, false>
_Head_base<0UL, block_statement_t *, false>	_Head_base<_Idx, _Head, false>
_Head_base<0UL, if_statement_t *, false>	_Head_base<_Idx, _Head, false>
_Head_base<0UL, switch_statement_t *, false>	_Head_base<_Idx, _Head, false>
_Head_base<0UL, for_header_t *, false>	_Head_base<_Idx, _Head, false>
_Head_base<0UL, while_header_t *, false>	_Head_base<_Idx, _Head, false>
_Head_base<0UL, function_header_t *, false>	_Head_base<_Idx, _Head, false>
_Head_base<0UL, begin_header_t *, false>	_Head_base<_Idx, _Head, false>
_Head_base<0UL, redirection_t *, false>	_Head_base<_Idx, _Head, false>
iterator_traits<const unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>> *>	iterator_traits<const _Tp *>
iterator_traits<const unique_ptr<job_continuation_t, default_delete<job_continuation_t>> *>	iterator_traits<const _Tp *>
iterator_traits<const unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>> *>	iterator_traits<const _Tp *>
iterator_traits<const unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>> *>	iterator_traits<const _Tp *>
iterator_traits<const unique_ptr<andor_job_t, default_delete<andor_job_t>> *>	iterator_traits<const _Tp *>
iterator_traits<const unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>> *>	iterator_traits<const _Tp *>
iterator_traits<const unique_ptr<case_item_t, default_delete<case_item_t>> *>	iterator_traits<const _Tp *>
iterator_traits<const unique_ptr<argument_t, default_delete<argument_t>> *>	iterator_traits<const _Tp *>
iterator_traits<const unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>> *>	iterator_traits<const _Tp *>
is_reference<source_range_t &>	is_reference<_Tp>
tuple<job_conjunction_t *, default_delete<job_conjunction_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<job_conjunction_t *, default_delete<job_conjunction_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
remove_reference<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>>>	remove_reference<_Tp>
tuple<variable_assignment_t *, default_delete<variable_assignment_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<variable_assignment_t *, default_delete<variable_assignment_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
remove_reference<unique_ptr<job_continuation_t, default_delete<job_continuation_t>>>	remove_reference<_Tp>
tuple<job_continuation_t *, default_delete<job_continuation_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<job_continuation_t *, default_delete<job_continuation_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
remove_reference<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>>>	remove_reference<_Tp>
tuple<job_conjunction_continuation_t *, default_delete<job_conjunction_continuation_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<job_conjunction_continuation_t *, default_delete<job_conjunction_continuation_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
remove_reference<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>>>	remove_reference<_Tp>
tuple<argument_or_redirection_t *, default_delete<argument_or_redirection_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<argument_or_redirection_t *, default_delete<argument_or_redirection_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
remove_reference<unique_ptr<andor_job_t, default_delete<andor_job_t>>>	remove_reference<_Tp>
tuple<andor_job_t *, default_delete<andor_job_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<andor_job_t *, default_delete<andor_job_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
remove_reference<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>>>	remove_reference<_Tp>
tuple<elseif_clause_t *, default_delete<elseif_clause_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<elseif_clause_t *, default_delete<elseif_clause_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
remove_reference<unique_ptr<case_item_t, default_delete<case_item_t>>>	remove_reference<_Tp>
tuple<case_item_t *, default_delete<case_item_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<case_item_t *, default_delete<case_item_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
remove_reference<unique_ptr<argument_t, default_delete<argument_t>>>	remove_reference<_Tp>
remove_reference<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>>>	remove_reference<_Tp>
__is_move_insertable<allocator<source_range_t>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<source_range_t>	is_move_constructible<_Tp>
__is_move_constructible_impl<source_range_t, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<source_range_t, source_range_t &&>	is_constructible<_Tp, _Args...>
tuple<node_t *, node_deleter_t>	tuple<_T1, _T2>
iterator_traits<const node_t **>	iterator_traits<_Tp *>
rebind<const node_t *>	rebind<_Tp>
new_allocator<const node_t *>	new_allocator<_Tp>
__is_move_iterator<move_iterator<source_range_t *>>	__is_move_iterator<move_iterator<_Iterator>>
__uses_alloc2<_Alloc>	__uses_alloc2<_Alloc>
__uses_alloc1<_Alloc>	__uses_alloc1<_Alloc>
__uses_alloc2<_Alloc>	__uses_alloc2<_Alloc>
__uses_alloc1<_Alloc>	__uses_alloc1<_Alloc>
_Head_base<1UL, default_delete<job_list_t>, true>	_Head_base<_Idx, _Head, true>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<1UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Head_base<1UL, default_delete<freestanding_argument_list_t>, true>	_Head_base<_Idx, _Head, true>
_Head_base<1UL, default_delete<decorated_statement_t>, true>	_Head_base<_Idx, _Head, true>
_Head_base<1UL, default_delete<not_statement_t>, true>	_Head_base<_Idx, _Head, true>
_Head_base<1UL, default_delete<block_statement_t>, true>	_Head_base<_Idx, _Head, true>
_Head_base<1UL, default_delete<if_statement_t>, true>	_Head_base<_Idx, _Head, true>
_Head_base<1UL, default_delete<switch_statement_t>, true>	_Head_base<_Idx, _Head, true>
_Head_base<1UL, default_delete<for_header_t>, true>	_Head_base<_Idx, _Head, true>
_Head_base<1UL, default_delete<while_header_t>, true>	_Head_base<_Idx, _Head, true>
_Head_base<1UL, default_delete<function_header_t>, true>	_Head_base<_Idx, _Head, true>
_Head_base<1UL, default_delete<begin_header_t>, true>	_Head_base<_Idx, _Head, true>
_Head_base<1UL, default_delete<redirection_t>, true>	_Head_base<_Idx, _Head, true>
__is_pointer<source_range_t *>	__is_pointer<_Tp *>
__are_same<source_range_t, source_range_t>	__are_same<_Tp, _Tp>
__copy_move<true, true, random_access_iterator_tag>	__copy_move<_IsMove, true, random_access_iterator_tag>
_Head_base<0UL, argument_t *, false>	_Head_base<_Idx, _Head, false>
_Destroy_aux<false>	_Destroy_aux<<unnamed>>
iterator_traits<contents_ptr_t *>	iterator_traits<_Tp *>
__is_pointer<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>> *>	__is_pointer<_Tp *>
__is_pointer<contents_ptr_t *>	__is_pointer<_Tp *>
__are_same<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>>, contents_ptr_t>	__are_same<<unnamed>, <unnamed>>
iterator_traits<contents_ptr_t *>	iterator_traits<_Tp *>
__is_pointer<unique_ptr<argument_t, default_delete<argument_t>> *>	__is_pointer<_Tp *>
__is_pointer<contents_ptr_t *>	__is_pointer<_Tp *>
__are_same<unique_ptr<argument_t, default_delete<argument_t>>, contents_ptr_t>	__are_same<<unnamed>, <unnamed>>
remove_reference<allocator<source_range_t> &>	remove_reference<_Tp &>
iterator_traits<contents_ptr_t *>	iterator_traits<_Tp *>
__is_pointer<unique_ptr<case_item_t, default_delete<case_item_t>> *>	__is_pointer<_Tp *>
__is_pointer<contents_ptr_t *>	__is_pointer<_Tp *>
__are_same<unique_ptr<case_item_t, default_delete<case_item_t>>, contents_ptr_t>	__are_same<<unnamed>, <unnamed>>
iterator_traits<contents_ptr_t *>	iterator_traits<_Tp *>
__is_pointer<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>> *>	__is_pointer<_Tp *>
__is_pointer<contents_ptr_t *>	__is_pointer<_Tp *>
__are_same<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>>, contents_ptr_t>	__are_same<<unnamed>, <unnamed>>
iterator_traits<contents_ptr_t *>	iterator_traits<_Tp *>
__is_pointer<unique_ptr<andor_job_t, default_delete<andor_job_t>> *>	__is_pointer<_Tp *>
__is_pointer<contents_ptr_t *>	__is_pointer<_Tp *>
__are_same<unique_ptr<andor_job_t, default_delete<andor_job_t>>, contents_ptr_t>	__are_same<<unnamed>, <unnamed>>
iterator_traits<contents_ptr_t *>	iterator_traits<_Tp *>
__is_pointer<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>> *>	__is_pointer<_Tp *>
__is_pointer<contents_ptr_t *>	__is_pointer<_Tp *>
__are_same<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>>, contents_ptr_t>	__are_same<<unnamed>, <unnamed>>
iterator_traits<contents_ptr_t *>	iterator_traits<_Tp *>
__is_pointer<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>> *>	__is_pointer<_Tp *>
__is_pointer<contents_ptr_t *>	__is_pointer<_Tp *>
__are_same<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>>, contents_ptr_t>	__are_same<<unnamed>, <unnamed>>
iterator_traits<contents_ptr_t *>	iterator_traits<_Tp *>
__is_pointer<unique_ptr<job_continuation_t, default_delete<job_continuation_t>> *>	__is_pointer<_Tp *>
__is_pointer<contents_ptr_t *>	__is_pointer<_Tp *>
__are_same<unique_ptr<job_continuation_t, default_delete<job_continuation_t>>, contents_ptr_t>	__are_same<<unnamed>, <unnamed>>
iterator_traits<contents_ptr_t *>	iterator_traits<_Tp *>
__is_pointer<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>> *>	__is_pointer<_Tp *>
__is_pointer<contents_ptr_t *>	__is_pointer<_Tp *>
__are_same<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>>, contents_ptr_t>	__are_same<<unnamed>, <unnamed>>
__uses_alloc2<_Alloc>	__uses_alloc2<_Alloc>
__uses_alloc1<_Alloc>	__uses_alloc1<_Alloc>
__uses_alloc2<_Alloc>	__uses_alloc2<_Alloc>
__uses_alloc1<_Alloc>	__uses_alloc1<_Alloc>
_Head_base<0UL, job_conjunction_t *, false>	_Head_base<_Idx, _Head, false>
_Head_base<0UL, keyword_t<kw_and, kw_or> *, false>	_Head_base<_Idx, _Head, false>
_Head_base<0UL, keyword_t<kw_time> *, false>	_Head_base<_Idx, _Head, false>
move_iterator<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>> *>	move_iterator<_Iterator>
__is_move_insertable<allocator<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>>>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>>>	is_move_constructible<_Tp>
__is_move_constructible_impl<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>>, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>>, unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>> &&>	is_constructible<_Tp, _Args...>
_Head_base<0UL, variable_assignment_t *, false>	_Head_base<_Idx, _Head, false>
move_iterator<unique_ptr<job_continuation_t, default_delete<job_continuation_t>> *>	move_iterator<_Iterator>
__is_move_insertable<allocator<unique_ptr<job_continuation_t, default_delete<job_continuation_t>>>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<unique_ptr<job_continuation_t, default_delete<job_continuation_t>>>	is_move_constructible<_Tp>
__is_move_constructible_impl<unique_ptr<job_continuation_t, default_delete<job_continuation_t>>, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<unique_ptr<job_continuation_t, default_delete<job_continuation_t>>, unique_ptr<job_continuation_t, default_delete<job_continuation_t>> &&>	is_constructible<_Tp, _Args...>
_Head_base<0UL, job_continuation_t *, false>	_Head_base<_Idx, _Head, false>
_Head_base<0UL, token_t<background> *, false>	_Head_base<_Idx, _Head, false>
move_iterator<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>> *>	move_iterator<_Iterator>
__is_move_insertable<allocator<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>>>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>>>	is_move_constructible<_Tp>
__is_move_constructible_impl<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>>, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>>, unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>> &&>	is_constructible<_Tp, _Args...>
_Head_base<0UL, job_conjunction_continuation_t *, false>	_Head_base<_Idx, _Head, false>
_Head_base<0UL, token_t<end> *, false>	_Head_base<_Idx, _Head, false>
_Head_base<0UL, keyword_t<kw_command, kw_builtin, kw_exec> *, false>	_Head_base<_Idx, _Head, false>
move_iterator<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>> *>	move_iterator<_Iterator>
__is_move_insertable<allocator<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>>>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>>>	is_move_constructible<_Tp>
__is_move_constructible_impl<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>>, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>>, unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>> &&>	is_constructible<_Tp, _Args...>
_Head_base<0UL, argument_or_redirection_t *, false>	_Head_base<_Idx, _Head, false>
move_iterator<unique_ptr<andor_job_t, default_delete<andor_job_t>> *>	move_iterator<_Iterator>
__is_move_insertable<allocator<unique_ptr<andor_job_t, default_delete<andor_job_t>>>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<unique_ptr<andor_job_t, default_delete<andor_job_t>>>	is_move_constructible<_Tp>
__is_move_constructible_impl<unique_ptr<andor_job_t, default_delete<andor_job_t>>, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<unique_ptr<andor_job_t, default_delete<andor_job_t>>, unique_ptr<andor_job_t, default_delete<andor_job_t>> &&>	is_constructible<_Tp, _Args...>
_Head_base<0UL, andor_job_t *, false>	_Head_base<_Idx, _Head, false>
move_iterator<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>> *>	move_iterator<_Iterator>
__is_move_insertable<allocator<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>>>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>>>	is_move_constructible<_Tp>
__is_move_constructible_impl<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>>, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>>, unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>> &&>	is_constructible<_Tp, _Args...>
_Head_base<0UL, elseif_clause_t *, false>	_Head_base<_Idx, _Head, false>
_Head_base<0UL, else_clause_t *, false>	_Head_base<_Idx, _Head, false>
move_iterator<unique_ptr<case_item_t, default_delete<case_item_t>> *>	move_iterator<_Iterator>
__is_move_insertable<allocator<unique_ptr<case_item_t, default_delete<case_item_t>>>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<unique_ptr<case_item_t, default_delete<case_item_t>>>	is_move_constructible<_Tp>
__is_move_constructible_impl<unique_ptr<case_item_t, default_delete<case_item_t>>, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<unique_ptr<case_item_t, default_delete<case_item_t>>, unique_ptr<case_item_t, default_delete<case_item_t>> &&>	is_constructible<_Tp, _Args...>
_Head_base<0UL, case_item_t *, false>	_Head_base<_Idx, _Head, false>
move_iterator<unique_ptr<argument_t, default_delete<argument_t>> *>	move_iterator<_Iterator>
__is_move_insertable<allocator<unique_ptr<argument_t, default_delete<argument_t>>>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<unique_ptr<argument_t, default_delete<argument_t>>>	is_move_constructible<_Tp>
__is_move_constructible_impl<unique_ptr<argument_t, default_delete<argument_t>>, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<unique_ptr<argument_t, default_delete<argument_t>>, unique_ptr<argument_t, default_delete<argument_t>> &&>	is_constructible<_Tp, _Args...>
move_iterator<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>> *>	move_iterator<_Iterator>
__is_move_insertable<allocator<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>>>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>>>	is_move_constructible<_Tp>
__is_move_constructible_impl<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>>, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>>, unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>> &&>	is_constructible<_Tp, _Args...>
__iterator_traits<move_iterator<source_range_t *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<source_range_t &, source_range_t &&>	is_assignable<_Tp, _Up>
_Head_base<0UL, node_t *, false>	_Head_base<_Idx, _Head, false>
_Head_base<1UL, default_delete<argument_t>, true>	_Head_base<_Idx, _Head, true>
is_move_assignable<source_range_t>	is_move_assignable<_Tp>
is_copy_assignable<source_range_t>	is_copy_assignable<_Tp>
conditional<true, is_move_assignable<source_range_t>, is_copy_assignable<source_range_t>>	conditional<_Cond, _Iftrue, _Iffalse>
__is_referenceable<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>>>	__is_referenceable<_Tp>
conditional<true, unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>> &&, unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>> &>	conditional<_Cond, _Iftrue, _Iffalse>
__is_referenceable<unique_ptr<argument_t, default_delete<argument_t>>>	__is_referenceable<_Tp>
conditional<true, unique_ptr<argument_t, default_delete<argument_t>> &&, unique_ptr<argument_t, default_delete<argument_t>> &>	conditional<_Cond, _Iftrue, _Iffalse>
__is_referenceable<unique_ptr<case_item_t, default_delete<case_item_t>>>	__is_referenceable<_Tp>
conditional<true, unique_ptr<case_item_t, default_delete<case_item_t>> &&, unique_ptr<case_item_t, default_delete<case_item_t>> &>	conditional<_Cond, _Iftrue, _Iffalse>
__is_referenceable<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>>>	__is_referenceable<_Tp>
conditional<true, unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>> &&, unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>> &>	conditional<_Cond, _Iftrue, _Iffalse>
__is_referenceable<unique_ptr<andor_job_t, default_delete<andor_job_t>>>	__is_referenceable<_Tp>
conditional<true, unique_ptr<andor_job_t, default_delete<andor_job_t>> &&, unique_ptr<andor_job_t, default_delete<andor_job_t>> &>	conditional<_Cond, _Iftrue, _Iffalse>
__is_referenceable<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>>>	__is_referenceable<_Tp>
conditional<true, unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>> &&, unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>> &>	conditional<_Cond, _Iftrue, _Iffalse>
__is_referenceable<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>>>	__is_referenceable<_Tp>
conditional<true, unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>> &&, unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>> &>	conditional<_Cond, _Iftrue, _Iffalse>
__is_referenceable<unique_ptr<job_continuation_t, default_delete<job_continuation_t>>>	__is_referenceable<_Tp>
conditional<true, unique_ptr<job_continuation_t, default_delete<job_continuation_t>> &&, unique_ptr<job_continuation_t, default_delete<job_continuation_t>> &>	conditional<_Cond, _Iftrue, _Iffalse>
__is_referenceable<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>>>	__is_referenceable<_Tp>
conditional<true, unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>> &&, unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>> &>	conditional<_Cond, _Iftrue, _Iffalse>
_Head_base<1UL, default_delete<token_t<end>>, true>	_Head_base<_Idx, _Head, true>
_Head_base<1UL, default_delete<token_t<background>>, true>	_Head_base<_Idx, _Head, true>
_Head_base<1UL, default_delete<keyword_t<kw_time>>, true>	_Head_base<_Idx, _Head, true>
_Head_base<1UL, default_delete<keyword_t<kw_and, kw_or>>, true>	_Head_base<_Idx, _Head, true>
_Head_base<1UL, default_delete<else_clause_t>, true>	_Head_base<_Idx, _Head, true>
_Head_base<1UL, default_delete<keyword_t<kw_command, kw_builtin, kw_exec>>, true>	_Head_base<_Idx, _Head, true>
_Head_base<1UL, node_deleter_t, true>	_Head_base<_Idx, _Head, true>
_Head_base<1UL, default_delete<case_item_t>, true>	_Head_base<_Idx, _Head, true>
_Head_base<1UL, default_delete<elseif_clause_t>, true>	_Head_base<_Idx, _Head, true>
_Head_base<1UL, default_delete<andor_job_t>, true>	_Head_base<_Idx, _Head, true>
_Head_base<1UL, default_delete<argument_or_redirection_t>, true>	_Head_base<_Idx, _Head, true>
_Head_base<1UL, default_delete<job_conjunction_continuation_t>, true>	_Head_base<_Idx, _Head, true>
_Head_base<1UL, default_delete<job_continuation_t>, true>	_Head_base<_Idx, _Head, true>
_Head_base<1UL, default_delete<variable_assignment_t>, true>	_Head_base<_Idx, _Head, true>
_Head_base<1UL, default_delete<job_conjunction_t>, true>	_Head_base<_Idx, _Head, true>
is_reference<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>> &>	is_reference<_Tp>
is_reference<unique_ptr<job_continuation_t, default_delete<job_continuation_t>> &>	is_reference<_Tp>
is_reference<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>> &>	is_reference<_Tp>
is_reference<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>> &>	is_reference<_Tp>
is_reference<unique_ptr<andor_job_t, default_delete<andor_job_t>> &>	is_reference<_Tp>
is_reference<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>> &>	is_reference<_Tp>
is_reference<unique_ptr<case_item_t, default_delete<case_item_t>> &>	is_reference<_Tp>
is_reference<unique_ptr<argument_t, default_delete<argument_t>> &>	is_reference<_Tp>
is_reference<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>> &>	is_reference<_Tp>
__is_copy_assignable_impl<source_range_t, true>	__is_copy_assignable_impl<_Tp, true>
__is_move_assignable_impl<source_range_t, true>	__is_move_assignable_impl<_Tp, true>
__iterator_traits<move_iterator<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>> *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>> &, unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>> &&>	is_assignable<_Tp, _Up>
__uninitialized_copy<false>	__uninitialized_copy<_TrivialValueTypes>
__iterator_traits<move_iterator<unique_ptr<job_continuation_t, default_delete<job_continuation_t>> *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<unique_ptr<job_continuation_t, default_delete<job_continuation_t>> &, unique_ptr<job_continuation_t, default_delete<job_continuation_t>> &&>	is_assignable<_Tp, _Up>
__iterator_traits<move_iterator<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>> *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>> &, unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>> &&>	is_assignable<_Tp, _Up>
__iterator_traits<move_iterator<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>> *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>> &, unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>> &&>	is_assignable<_Tp, _Up>
__iterator_traits<move_iterator<unique_ptr<andor_job_t, default_delete<andor_job_t>> *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<unique_ptr<andor_job_t, default_delete<andor_job_t>> &, unique_ptr<andor_job_t, default_delete<andor_job_t>> &&>	is_assignable<_Tp, _Up>
__iterator_traits<move_iterator<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>> *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>> &, unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>> &&>	is_assignable<_Tp, _Up>
__iterator_traits<move_iterator<unique_ptr<case_item_t, default_delete<case_item_t>> *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<unique_ptr<case_item_t, default_delete<case_item_t>> &, unique_ptr<case_item_t, default_delete<case_item_t>> &&>	is_assignable<_Tp, _Up>
__iterator_traits<move_iterator<unique_ptr<argument_t, default_delete<argument_t>> *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<unique_ptr<argument_t, default_delete<argument_t>> &, unique_ptr<argument_t, default_delete<argument_t>> &&>	is_assignable<_Tp, _Up>
__iterator_traits<move_iterator<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>> *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>> &, unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>> &&>	is_assignable<_Tp, _Up>
is_assignable<source_range_t &, const source_range_t &>	is_assignable<_Tp, _Up>
__is_arithmetic<_Tp>	__is_arithmetic<_Tp>
__is_pointer<_Tp>	__is_pointer<_Tp>
__traitor<__is_arithmetic<_Tp>, __is_pointer<_Tp>>	__traitor<_Sp, _Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__is_floating<_Tp>	__is_floating<_Tp>
__traitor<__is_integer<_Tp>, __is_floating<_Tp>>	__traitor<_Sp, _Tp>
__promote<_Wp, __value>	__promote<_Tp, <unnamed>>
__promote<_Vp, __value>	__promote<_Tp, <unnamed>>
__promote<_Up, __value>	__promote<_Tp, <unnamed>>
__promote<_Tp, __value>	__promote<_Tp, <unnamed>>
__promote<_Vp, __value>	__promote<_Tp, <unnamed>>
__promote<_Up, __value>	__promote<_Tp, <unnamed>>
__promote<_Tp, __value>	__promote<_Tp, <unnamed>>
__promote<_Up, __value>	__promote<_Tp, <unnamed>>
__promote<_Tp, __value>	__promote<_Tp, <unnamed>>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<float>	__is_integer<_Tp>
__is_integer<double>	__is_integer<_Tp>
__is_integer<long double>	__is_integer<_Tp>
__enable_if<__value, _Tp>	__enable_if<<unnamed>, <unnamed>>
__enable_if<__value, _Tp>	__enable_if<<unnamed>, <unnamed>>
integral_constant<bool, noexcept(<expression>)>	integral_constant<_Tp, __v>
enable_if<value, void>	enable_if<<unnamed>, _Tp>
__is_swappable<_Tp>	__is_swappable<_Tp>
enable_if<value, void>	enable_if<<unnamed>, _Tp>
__is_tuple_like<_Tp>	__is_tuple_like<_Tp>
__not_<__is_tuple_like<_Tp>>	__not_<_Pp>
is_move_constructible<_Tp>	is_move_constructible<_Tp>
is_move_assignable<_Tp>	is_move_assignable<_Tp>
__and_<__not_<__is_tuple_like<_Tp>>, is_move_constructible<_Tp>, is_move_assignable<_Tp>>	__and_<<unnamed>...>
tuple<_Tps...>	tuple<_Elements...>
__result_of_success<decltype((<expression>)), __invoke_other>	__result_of_success<_Tp, _Tag>
reference_wrapper<_Up>	reference_wrapper<_Tp>
__result_of_success<decltype((<expression>)), __invoke_memobj_deref>	__result_of_success<_Tp, _Tag>
__result_of_success<decltype((<expression>)), __invoke_memobj_ref>	__result_of_success<_Tp, _Tag>
__result_of_success<decltype((<expression>)), __invoke_memfun_deref>	__result_of_success<_Tp, _Tag>
__result_of_success<decltype((<expression>)), __invoke_memfun_ref>	__result_of_success<_Tp, _Tag>
is_enum<_Tp>	is_enum<_Tp>
__success_type<type>	__success_type<_Tp>
__success_type<type>	__success_type<_Tp>
decay<decltype((<expression>))>	decay<_Tp>
reference_wrapper<_Tp>	reference_wrapper<_Tp>
is_function<_Up>	is_function<<unnamed>>
is_array<_Up>	is_array<<unnamed>>
__aligned_storage_msa<_Len>	__aligned_storage_msa<_Len>
__is_referenceable<_Tp>	__is_referenceable<_Tp>
is_void<_Tp>	is_void<_Tp>
__or_<__is_referenceable<_Tp>, is_void<_Tp>>	__or_<<unnamed>...>
__cv_selector<signed int, false, false>	__cv_selector<_Unqualified, false, false>
__match_cv_qualifiers<unsigned int, signed int, false, false>	__match_cv_qualifiers<_Qualified, _Unqualified, _IsConst, _IsVol>
__make_signed_selector<unsigned int, true, false>	__make_signed_selector<_Tp, true, false>
__make_signed_selector<char32_t, false, true>	__make_signed_selector<_Tp, false, true>
__cv_selector<signed short, false, false>	__cv_selector<_Unqualified, false, false>
__match_cv_qualifiers<unsigned short, signed short, false, false>	__match_cv_qualifiers<_Qualified, _Unqualified, _IsConst, _IsVol>
__make_signed_selector<unsigned short, true, false>	__make_signed_selector<_Tp, true, false>
__make_signed_selector<char16_t, false, true>	__make_signed_selector<_Tp, false, true>
__make_signed_selector<wchar_t, false, true>	__make_signed_selector<_Tp, false, true>
is_enum<_Tp>	is_enum<_Tp>
is_integral<_Tp>	is_integral<_Tp>
__cv_selector<unsigned int, false, false>	__cv_selector<_Unqualified, false, false>
__match_cv_qualifiers<char32_t, unsigned int, false, false>	__match_cv_qualifiers<_Qualified, _Unqualified, _IsConst, _IsVol>
__make_unsigned_selector<char32_t, false, true>	__make_unsigned_selector<_Tp, false, true>
__cv_selector<unsigned short, false, false>	__cv_selector<_Unqualified, false, false>
__match_cv_qualifiers<char16_t, unsigned short, false, false>	__match_cv_qualifiers<_Qualified, _Unqualified, _IsConst, _IsVol>
__make_unsigned_selector<char16_t, false, true>	__make_unsigned_selector<_Tp, false, true>
__match_cv_qualifiers<wchar_t, unsigned int, false, false>	__match_cv_qualifiers<_Qualified, _Unqualified, _IsConst, _IsVol>
__make_unsigned_selector<wchar_t, false, true>	__make_unsigned_selector<_Tp, false, true>
_List<_Uint, _UInts...>	_List<<unnamed>...>
_List<_Uint, _UInts...>	_List<<unnamed>...>
is_enum<_Tp>	is_enum<_Tp>
is_integral<_Tp>	is_integral<_Tp>
is_volatile<_Qualified>	is_volatile<<unnamed>>
is_const<_Qualified>	is_const<<unnamed>>
__is_referenceable<_Tp>	__is_referenceable<_Tp>
__is_referenceable<_Tp>	__is_referenceable<_Tp>
is_void<_From>	is_void<_Tp>
is_function<_To>	is_function<<unnamed>>
is_array<_To>	is_array<<unnamed>>
__or_<is_void<_From>, is_function<_To>, is_array<_To>>	__or_<<unnamed>...>
__is_referenceable<_Tp>	__is_referenceable<_Tp>
__is_referenceable<_Tp>	__is_referenceable<_Tp>
__is_referenceable<_Tp>	__is_referenceable<_Tp>
__is_referenceable<_Tp>	__is_referenceable<_Tp>
__is_referenceable<_Tp>	__is_referenceable<_Tp>
__is_referenceable<_Tp>	__is_referenceable<_Tp>
__is_referenceable<_Tp>	__is_referenceable<_Tp>
__is_referenceable<_Tp>	__is_referenceable<_Tp>
__is_referenceable<_Tp>	__is_referenceable<_Tp>
__is_referenceable<_Tp>	__is_referenceable<_Tp>
is_array<_Tp>	is_array<<unnamed>>
__is_referenceable<_Tp>	__is_referenceable<_Tp>
__is_referenceable<_Tp>	__is_referenceable<_Tp>
is_reference<_Tp>	is_reference<_Tp>
is_scalar<_Tp>	is_scalar<_Tp>
__or_<is_reference<_Tp>, is_scalar<_Tp>>	__or_<<unnamed>...>
is_void<_Tp>	is_void<_Tp>
__is_array_unknown_bounds<_Tp>	__is_array_unknown_bounds<_Tp>
is_function<_Tp>	is_function<<unnamed>>
__or_<is_void<_Tp>, __is_array_unknown_bounds<_Tp>, is_function<_Tp>>	__or_<<unnamed>...>
is_reference<_Tp>	is_reference<_Tp>
is_scalar<_Tp>	is_scalar<_Tp>
__or_<is_reference<_Tp>, is_scalar<_Tp>>	__or_<<unnamed>...>
is_void<_Tp>	is_void<_Tp>
__is_array_unknown_bounds<_Tp>	__is_array_unknown_bounds<_Tp>
is_function<_Tp>	is_function<<unnamed>>
__or_<is_void<_Tp>, __is_array_unknown_bounds<_Tp>, is_function<_Tp>>	__or_<<unnamed>...>
is_arithmetic<_Tp>	is_arithmetic<_Tp>
remove_const<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	remove_const<_Tp>
remove_cv<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	remove_cv<_Tp>
remove_const<..(*)(..)>	remove_const<_Tp>
remove_cv<..(*)(..)>	remove_cv<_Tp>
enable_if<true, const node_t **>	enable_if<true, _Tp>
enable_if<true, action_t *>	enable_if<true, _Tp>
__invoke_result<..(*)(..), thread *>	__invoke_result<_Functor, _ArgTypes...>
__call_is_nothrow<__invoke_result<..(*)(..), thread *>, ..(*)(..), thread *>	__call_is_nothrow<_Result, _Fn, _Args...>
remove_const<thread *>	remove_const<_Tp>
remove_cv<thread *>	remove_cv<_Tp>
allocator<_State_baseV2>	allocator<_Tp>
_Sp_counted_ptr_inplace<_State_baseV2, allocator<_State_baseV2>, _S_atomic>	_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>
allocator<_Sp_counted_ptr_inplace<_State_baseV2, allocator<_State_baseV2>, _S_atomic>>	allocator<_Tp>
allocator_traits<allocator<_Sp_counted_ptr_inplace<_State_baseV2, allocator<_State_baseV2>, _S_atomic>>>	allocator_traits<allocator<_Tp>>
__allocated_ptr<allocator<_Sp_counted_ptr_inplace<_State_baseV2, allocator<_State_baseV2>, _S_atomic>>>	__allocated_ptr<_Alloc>
__uniq_ptr_impl<_Result<void>, _Deleter>	__uniq_ptr_impl<_Tp, _Dp>
remove_const<__uniq_ptr_impl<_Result<void>, _Deleter>>	remove_const<_Tp>
remove_cv<__uniq_ptr_impl<_Result<void>, _Deleter>>	remove_cv<_Tp>
unique_ptr<_Result_base, _Deleter>	unique_ptr<_Tp, _Dp>
function<..(..)>	function<..(..)>
__invoke_result<..(*)(..), _State_baseV2 *, function<..(..)> *, bool *>	__invoke_result<_Functor, _ArgTypes...>
__call_is_nothrow<__invoke_result<..(*)(..), _State_baseV2 *, function<..(..)> *, bool *>, ..(*)(..), _State_baseV2 *, function<..(..)> *, bool *>	__call_is_nothrow<_Result, _Fn, _Args...>
remove_const<_State_baseV2 *>	remove_const<_Tp>
remove_cv<_State_baseV2 *>	remove_cv<_Tp>
remove_const<..(*)(..)>	remove_const<_Tp>
remove_cv<..(*)(..)>	remove_cv<_Tp>
__uniq_ptr_impl<_Result_base, _Deleter>	__uniq_ptr_impl<_Tp, _Dp>
remove_const<__uniq_ptr_impl<_Result_base, _Deleter>>	remove_const<_Tp>
remove_cv<__uniq_ptr_impl<_Result_base, _Deleter>>	remove_cv<_Tp>
allocator<mutex>	allocator<_Tp>
_Sp_counted_ptr_inplace<mutex, allocator<mutex>, _S_atomic>	_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>
allocator<_Sp_counted_ptr_inplace<mutex, allocator<mutex>, _S_atomic>>	allocator<_Tp>
allocator_traits<allocator<_Sp_counted_ptr_inplace<mutex, allocator<mutex>, _S_atomic>>>	allocator_traits<allocator<_Tp>>
__allocated_ptr<allocator<_Sp_counted_ptr_inplace<mutex, allocator<mutex>, _S_atomic>>>	__allocated_ptr<_Alloc>
remove_const<autoload_file_cache_t *>	remove_const<_Tp>
remove_cv<autoload_file_cache_t *>	remove_cv<_Tp>
tuple<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &>	tuple<_Elements...>
remove_const<tuple<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &>>	remove_const<_Tp>
remove_cv<tuple<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &>>	remove_cv<_Tp>
remove_const<const tuple<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &>>	remove_const<const _Tp>
remove_cv<const tuple<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &>>	remove_cv<_Tp>
remove_const<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	remove_const<const _Tp>
remove_cv<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	remove_cv<_Tp>
allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	allocator<_Tp>
vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	vector<_Tp, _Alloc>
allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	allocator<_Tp>
_Sp_counted_ptr_inplace<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _S_atomic>	_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>
allocator<_Sp_counted_ptr_inplace<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _S_atomic>>	allocator<_Tp>
allocator_traits<allocator<_Sp_counted_ptr_inplace<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _S_atomic>>>	allocator_traits<allocator<_Tp>>
__allocated_ptr<allocator<_Sp_counted_ptr_inplace<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _S_atomic>>>	__allocated_ptr<_Alloc>
enable_if<true, int *>	enable_if<true, _Tp>
remove_const<..(*)(..)>	remove_const<_Tp>
remove_cv<..(*)(..)>	remove_cv<_Tp>
remove_const<..(*)(..)>	remove_const<_Tp>
remove_cv<..(*)(..)>	remove_cv<_Tp>
remove_const<_Any_data>	remove_const<_Tp>
remove_cv<_Any_data>	remove_cv<_Tp>
pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>	pair<_T1, _T2>
_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, false, true>	_Node_iterator<_Value, __constant_iterators, __cache>
pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, false, true>, bool>	pair<_T1, _T2>
ratio<1L, 1000000000L>	ratio<_Num, _Den>
duration<signed long, ratio<1L, 1000000000L>>	duration<_Rep, _Period>
time_point<steady_clock, duration<signed long, ratio<1L, 1000000000L>>>	time_point<_Clock, _Dur>
lru_cache_t<misses_lru_cache_t, time_point<steady_clock, duration<signed long, ratio<1L, 1000000000L>>>>	lru_cache_t<Derived, Contents>
lru_node_t	lru_node_t
pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>	pair<_T1, _T2>
_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>	_Rb_tree_iterator<_Tp>
pair<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>, bool>	pair<_T1, _T2>
default_delete<parse_execution_context_t>	default_delete<_Tp>
tuple<parse_execution_context_t *, default_delete<parse_execution_context_t>>	tuple<_T1, _T2>
default_delete<process_t>	default_delete<_Tp>
tuple<process_t *, default_delete<process_t>>	tuple<_T1, _T2>
tuple<_Result<void> *, _Deleter>	tuple<_T1, _T2>
default_delete<_Make_ready>	default_delete<_Tp>
is_convertible<pointer, _Make_ready *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, _Make_ready *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
tuple<_Make_ready *, default_delete<_Make_ready>>	tuple<_T1, _T2>
tuple<_Result_base *, _Deleter>	tuple<_T1, _T2>
remove_const<id>	remove_const<_Tp>
remove_cv<id>	remove_cv<_Tp>
pair<iterator, bool>	pair<_T1, _T2>
_Deque_iterator<_Tp, const _Tp &, rebind<const _Tp>>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, _Tp &, rebind<_Tp>>	_Deque_iterator<_Tp, _Ref, _Ptr>
default_delete<autoload_file_cache_t>	default_delete<_Tp>
is_convertible<pointer, autoload_file_cache_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, autoload_file_cache_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
tuple<autoload_file_cache_t *, default_delete<autoload_file_cache_t>>	tuple<_T1, _T2>
pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>	pair<_T1, _T2>
_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, false, true>	_Node_iterator<_Value, __constant_iterators, __cache>
pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, false, true>, bool>	pair<_T1, _T2>
__detector<integral_constant<bool, false>, void, __has_load_factor, _Prime_rehash_policy>	__detector<_Default, __void_t<_Op<_Args...>>, _Op, _Args...>
tuple<env_stack_impl_t *, default_delete<env_stack_impl_t>>	tuple<_T1, _T2>
remove_const<int>	remove_const<_Tp>
remove_cv<int>	remove_cv<_Tp>
ratio<1L, 1L>	ratio<_Num, _Den>
duration<signed long, ratio<1L, 1L>>	duration<_Rep, _Period>
treat_as_floating_point<_Rep2>	treat_as_floating_point<_Rep>
treat_as_floating_point<_Rep2>	treat_as_floating_point<_Rep>
pair<iterator, bool>	pair<_T1, _T2>
__detector<integral_constant<bool, false>, void, __has_load_factor, _RehashPolicy>	__detector<_Default, _AlwaysVoid, _Op, _Args...>
__detector<integral_constant<bool, false>, void, __has_load_factor, _RehashPolicy>	__detector<_Default, _AlwaysVoid, _Op, _Args...>
integral_constant<bool, _Unique_keys>	integral_constant<_Tp, __v>
integral_constant<bool, _Constant_iterators>	integral_constant<_Tp, __v>
integral_constant<bool, _Cache_hash_code>	integral_constant<_Tp, __v>
__detector<type, void, __equal, _Alloc>	__detector<_Default, _AlwaysVoid, _Op, _Args...>
__detector<integral_constant<bool, false>, void, __pocs, _Alloc>	__detector<_Default, _AlwaysVoid, _Op, _Args...>
__detector<integral_constant<bool, false>, void, __pocma, _Alloc>	__detector<_Default, _AlwaysVoid, _Op, _Args...>
__detector<integral_constant<bool, false>, void, __pocca, _Alloc>	__detector<_Default, _AlwaysVoid, _Op, _Args...>
__detector<value_type *, void, __pointer, _Alloc>	__detector<_Default, _AlwaysVoid, _Op, _Args...>
__detector<long, void, __difference_type, _Ptr>	__detector<_Default, _AlwaysVoid, _Op, _Args...>
__detector<type, void, __element_type, _Ptr>	__detector<_Default, _AlwaysVoid, _Op, _Args...>
__invoke_result<_Fn, _Args...>	__invoke_result<_Functor, _ArgTypes...>
__call_is_nothrow<__invoke_result<_Fn, _Args...>, _Fn, _Args...>	__call_is_nothrow<_Result, _Fn, _Args...>
__invoke_result<_Fn, _Args...>	__invoke_result<_Functor, _ArgTypes...>
__call_is_nothrow<__invoke_result<_Fn, _Args...>, _Fn, _Args...>	__call_is_nothrow<_Result, _Fn, _Args...>
__detector<_Default, void, _Op, _Args...>	__detector<_Default, _AlwaysVoid, _Op, _Args...>
__detector<_Default, void, _Op, _Args...>	__detector<_Default, _AlwaysVoid, _Op, _Args...>
__invoke_result<_Functor, _ArgTypes...>	__invoke_result<_Functor, _ArgTypes...>
__success_type<_Tp>	__success_type<_Tp>
__underlying_type_impl<_Tp, value>	__underlying_type_impl<_Tp, <unnamed>>
common_type<_Tp, _Tp>	common_type<_Tp...>
common_type<type, _Args...>	common_type<_Tp...>
__strictest_alignment<_Types...>	__strictest_alignment<_Types...>
__add_pointer_helper<_Tp, value>	__add_pointer_helper<_Tp, <unnamed>>
__remove_pointer_helper<_Tp, type>	__remove_pointer_helper<_Tp, <unnamed>>
_List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>	_List<_Tp, _Up...>
_List<_UInts...>	_List<<unnamed>...>
__select<_Sz, _List<_UInts...>, <expression>>	__select<_Sz, _Tp, <unnamed>>
_List<_Up...>	_List<<unnamed>...>
__cv_selector<_Unqualified, _IsConst, _IsVol>	__cv_selector<_Unqualified, _IsConst, _IsVol>
__add_rvalue_reference_helper<_Tp, value>	__add_rvalue_reference_helper<_Tp, <unnamed>>
__add_lvalue_reference_helper<_Tp, value>	__add_lvalue_reference_helper<_Tp, <unnamed>>
integral_constant<unsigned long, <expression>>	integral_constant<_Tp, __v>
integral_constant<unsigned long, 0UL>	integral_constant<_Tp, __v>
integral_constant<unsigned long, __alignof__(_Tp)>	integral_constant<_Tp, __v>
is_destructible<_Tp>	is_destructible<_Tp>
__and_<is_destructible<_Tp>, integral_constant<bool, <expression>>>	__and_<<unnamed>...>
__is_trivially_move_assignable_impl<_Tp, value>	__is_trivially_move_assignable_impl<_Tp, <unnamed>>
__is_trivially_copy_assignable_impl<_Tp, value>	__is_trivially_copy_assignable_impl<_Tp, <unnamed>>
__is_trivially_move_constructible_impl<_Tp, value>	__is_trivially_move_constructible_impl<_Tp, <unnamed>>
is_move_constructible<_Tp>	is_move_constructible<_Tp>
__and_<is_move_constructible<_Tp>, integral_constant<bool, <expression>>>	__and_<<unnamed>...>
__is_trivially_copy_constructible_impl<_Tp, value>	__is_trivially_copy_constructible_impl<_Tp, <unnamed>>
is_copy_constructible<_Tp>	is_copy_constructible<_Tp>
__and_<is_copy_constructible<_Tp>, integral_constant<bool, <expression>>>	__and_<<unnamed>...>
is_default_constructible<_Tp>	is_default_constructible<_Tp>
__is_implicitly_default_constructible_safe<_Tp>	__is_implicitly_default_constructible_safe<_Tp>
__and_<is_default_constructible<_Tp>, __is_implicitly_default_constructible_safe<_Tp>>	__and_<<unnamed>...>
is_same<type, thread>	is_same<<unnamed>, <unnamed>>
__not_<is_same<type, thread>>	__not_<_Pp>
is_convertible<pointer, env_stack_impl_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, env_stack_impl_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
_Deque_iterator<block_t, block_t &, block_t *>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<block_t, const block_t &, const block_t *>	_Deque_iterator<_Tp, _Ref, _Ptr>
shared_ptr<job_t>	shared_ptr<_Tp>
_Deque_iterator<shared_ptr<job_t>, shared_ptr<job_t> &, shared_ptr<job_t> *>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<shared_ptr<job_t>, const shared_ptr<job_t> &, const shared_ptr<job_t> *>	_Deque_iterator<_Tp, _Ref, _Ptr>
is_convertible<pointer, parse_execution_context_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, parse_execution_context_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
is_convertible<pointer, process_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, process_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
is_convertible<pointer, keyword_t<kw_command, kw_builtin, kw_exec> *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, keyword_t<kw_command, kw_builtin, kw_exec> *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
is_convertible<pointer, case_item_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, case_item_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
is_convertible<pointer, else_clause_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, else_clause_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
is_convertible<pointer, elseif_clause_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, elseif_clause_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
is_convertible<pointer, argument_or_redirection_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, argument_or_redirection_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
is_convertible<pointer, job_conjunction_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, job_conjunction_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
is_convertible<pointer, andor_job_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, andor_job_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
is_convertible<pointer, token_t<end> *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, token_t<end> *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
is_convertible<pointer, job_conjunction_continuation_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, job_conjunction_continuation_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
is_convertible<pointer, token_t<background> *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, token_t<background> *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
is_convertible<pointer, job_continuation_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, job_continuation_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
is_convertible<pointer, keyword_t<kw_and, kw_or> *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, keyword_t<kw_and, kw_or> *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
is_convertible<pointer, argument_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, argument_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
is_convertible<pointer, variable_assignment_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, variable_assignment_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
is_convertible<pointer, keyword_t<kw_time> *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, keyword_t<kw_time> *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
is_convertible<pointer, node_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, node_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
is_convertible<pointer, _Result_base *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, _Result_base *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
is_convertible<pointer, _Result<void> *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, _Result<void> *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__is_nt_move_assignable_impl<_Tp, value>	__is_nt_move_assignable_impl<_Tp, <unnamed>>
is_nothrow_assignable<_Tp &, _Tp &&>	is_nothrow_assignable<_Tp, _Up>
__is_nt_copy_assignable_impl<_Tp, value>	__is_nt_copy_assignable_impl<_Tp, <unnamed>>
is_nothrow_assignable<_Tp &, const _Tp &>	is_nothrow_assignable<_Tp, _Up>
is_assignable<_Tp, _Up>	is_assignable<_Tp, _Up>
__is_nt_assignable_impl<_Tp, _Up>	__is_nt_assignable_impl<_Tp, _Up>
__and_<is_assignable<_Tp, _Up>, __is_nt_assignable_impl<_Tp, _Up>>	__and_<<unnamed>...>
__is_move_assignable_impl<_Tp, value>	__is_move_assignable_impl<_Tp, <unnamed>>
is_assignable<_Tp &, _Tp &&>	is_assignable<_Tp, _Up>
__is_copy_assignable_impl<_Tp, value>	__is_copy_assignable_impl<_Tp, <unnamed>>
is_assignable<_Tp &, const _Tp &>	is_assignable<_Tp, _Up>
__is_nothrow_move_constructible_impl<_Tp, value>	__is_nothrow_move_constructible_impl<_Tp, <unnamed>>
is_nothrow_constructible<_Tp, _Tp &&>	is_nothrow_constructible<_Tp, _Args...>
__is_nothrow_copy_constructible_impl<_Tp, value>	__is_nothrow_copy_constructible_impl<_Tp, <unnamed>>
is_nothrow_constructible<_Tp, const _Tp &>	is_nothrow_constructible<_Tp, _Args...>
is_constructible<_Tp, _Args...>	is_constructible<_Tp, _Args...>
__is_nt_constructible_impl<_Tp, _Args...>	__is_nt_constructible_impl<_Tp, _Args...>
__and_<is_constructible<_Tp, _Args...>, __is_nt_constructible_impl<_Tp, _Args...>>	__and_<<unnamed>...>
is_nothrow_default_constructible<_Tp>	is_nothrow_default_constructible<_Tp>
is_default_constructible<_Tp>	is_default_constructible<_Tp>
__is_nt_default_constructible_impl<_Tp, value>	__is_nt_default_constructible_impl<_Tp, <unnamed>>
__and_<is_default_constructible<_Tp>, __is_nt_default_constructible_impl<_Tp, value>>	__and_<<unnamed>...>
__is_nt_default_constructible_atom<_Tp>	__is_nt_default_constructible_atom<_Tp>
__is_array_known_bounds<_Tp>	__is_array_known_bounds<_Tp>
__is_nt_default_constructible_atom<type>	__is_nt_default_constructible_atom<_Tp>
__and_<__is_array_known_bounds<_Tp>, __is_nt_default_constructible_atom<type>>	__and_<<unnamed>...>
integral_constant<bool, noexcept(_Tp())>	integral_constant<_Tp, __v>
__is_move_constructible_impl<_Tp, value>	__is_move_constructible_impl<_Tp, <unnamed>>
is_constructible<_Tp, _Tp &&>	is_constructible<_Tp, _Args...>
__is_copy_constructible_impl<_Tp, value>	__is_copy_constructible_impl<_Tp, <unnamed>>
is_constructible<_Tp, const _Tp &>	is_constructible<_Tp, _Args...>
is_array<_Tp>	is_array<<unnamed>>
extent<_Tp, 0U>	extent<<unnamed>, _Uint>
__not_<extent<_Tp, 0U>>	__not_<_Pp>
__and_<is_array<_Tp>, __not_<extent<_Tp, 0U>>>	__and_<<unnamed>...>
is_arithmetic<_Tp>	is_arithmetic<_Tp>
is_signed<_Tp>	is_signed<_Tp>
__not_<is_signed<_Tp>>	__not_<_Pp>
__and_<is_arithmetic<_Tp>, __not_<is_signed<_Tp>>>	__and_<<unnamed>...>
is_null_pointer<_Tp>	is_null_pointer<_Tp>
integral_constant<bool, __v>	integral_constant<_Tp, __v>
treat_as_floating_point<_Rep>	treat_as_floating_point<_Rep>
enable_if<true, bool>	enable_if<true, _Tp>
__is_swappable<_Tp>	__is_swappable<_Tp>
__is_tuple_like<_Tp>	__is_tuple_like<_Tp>
__not_<__is_tuple_like<_Tp>>	__not_<_Pp>
is_move_constructible<_Tp>	is_move_constructible<_Tp>
is_move_assignable<_Tp>	is_move_assignable<_Tp>
__and_<__not_<__is_tuple_like<_Tp>>, is_move_constructible<_Tp>, is_move_assignable<_Tp>>	__and_<<unnamed>...>
conditional<value, const _Tp &, _Tp &&>	conditional<_Cond, _Iftrue, _Iffalse>
__move_if_noexcept_cond<_Tp>	__move_if_noexcept_cond<_Tp>
remove_reference<_Tp>	remove_reference<_Tp>
remove_reference<_Tp>	remove_reference<_Tp>
remove_reference<_Tp>	remove_reference<_Tp>
iterator_traits<_Iter>	iterator_traits<_Iterator>
__iterator_traits<_Iterator, void>	__iterator_traits<_Iterator, <unnamed>>
iterator_traits<_BidirectionalIterator>	iterator_traits<_Iterator>
iterator_traits<_InputIterator>	iterator_traits<_Iterator>
iterator_traits<_InputIterator>	iterator_traits<_Iterator>
_List_const_iterator<_Tp>	_List_const_iterator<_Tp>
_List_iterator<_Tp>	_List_iterator<_Tp>
iterator_traits<_RandomAccessIterator>	iterator_traits<_Iterator>
iterator_traits<_InputIterator>	iterator_traits<_Iterator>
_List_const_iterator<_Tp>	_List_const_iterator<_Tp>
_List_iterator<_Tp>	_List_iterator<_Tp>
pointer_traits<_Ptr>	pointer_traits<_Ptr>
conditional<false, __undefined, _Sp_counted_ptr_inplace<_State_baseV2, allocator<_State_baseV2>, _S_atomic>>	conditional<false, _Iftrue, _Iffalse>
conditional<false, __undefined, _Sp_counted_ptr_inplace<mutex, allocator<mutex>, _S_atomic>>	conditional<false, _Iftrue, _Iffalse>
_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, true>	_Hash_node<_Value, true>
conditional<false, __undefined, _Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, true>>	conditional<false, _Iftrue, _Iffalse>
_Hash_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true>	_Hash_node<_Value, true>
conditional<false, __undefined, _Hash_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true>>	conditional<false, _Iftrue, _Iffalse>
conditional<false, __undefined, _Hash_node_base *>	conditional<false, _Iftrue, _Iffalse>
_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, true>	_Hash_node<_Value, true>
conditional<false, __undefined, _Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, true>>	conditional<false, _Iftrue, _Iffalse>
conditional<false, __undefined, _Sp_counted_ptr_inplace<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _S_atomic>>	conditional<false, _Iftrue, _Iffalse>
conditional<false, __undefined, const wchar_t>	conditional<false, _Iftrue, _Iffalse>
conditional<false, __undefined, wchar_t>	conditional<false, _Iftrue, _Iffalse>
conditional<false, __undefined, const char>	conditional<false, _Iftrue, _Iffalse>
conditional<false, __undefined, char>	conditional<false, _Iftrue, _Iffalse>
conditional<false, __undefined, block_t>	conditional<false, _Iftrue, _Iffalse>
conditional<false, __undefined, shared_ptr<job_t>>	conditional<false, _Iftrue, _Iffalse>
__replace_first_arg<_Tp, _Up>	__replace_first_arg<_Tp, _Up>
is_function<_Tp>	is_function<<unnamed>>
is_same<type, __undefined>	is_same<<unnamed>, <unnamed>>
_Iter_pred<_Predicate>	_Iter_pred<_Predicate>
_Iter_negate<_Predicate>	_Iter_negate<_Predicate>
_Iter_comp_iter<_Compare>	_Iter_comp_iter<_Compare>
_Iter_comp_to_iter<_Compare, _Iterator>	_Iter_comp_to_iter<_Compare, _Iterator1>
_Iter_comp_to_val<_Compare, _Value>	_Iter_comp_to_val<_Compare, _Value>
_Iter_pred<_Predicate>	_Iter_pred<_Predicate>
_Iter_equals_iter<_Iterator>	_Iter_equals_iter<_Iterator1>
_Iter_equals_val<_Value>	_Iter_equals_val<_Value>
_Iter_comp_iter<_Compare>	_Iter_comp_iter<_Compare>
_Val_comp_iter<_Compare>	_Val_comp_iter<_Compare>
_Val_comp_iter<_Compare>	_Val_comp_iter<_Compare>
_Iter_comp_iter<_Compare>	_Iter_comp_iter<_Compare>
_Iter_comp_val<_Compare>	_Iter_comp_val<_Compare>
_Iter_comp_val<_Compare>	_Iter_comp_val<_Compare>
_Iter_comp_iter<_Compare>	_Iter_comp_iter<_Compare>
_Iter_comp_iter<_Compare>	_Iter_comp_iter<_Compare>
_Iter_comp_iter<_Compare>	_Iter_comp_iter<_Compare>
__is_integer<value_type>	__is_integer<_Tp>
__is_pointer<value_type>	__is_pointer<_Tp>
__is_pointer<_II1>	__is_pointer<_Tp>
__is_pointer<_II2>	__is_pointer<_Tp>
__are_same<value_type, value_type>	__are_same<<unnamed>, <unnamed>>
__equal<__simple>	__equal<_BoolType>
__is_pointer<_BI1>	__is_pointer<_Tp>
__is_pointer<_BI2>	__is_pointer<_Tp>
__are_same<value_type, value_type>	__are_same<<unnamed>, <unnamed>>
__copy_move_backward<_IsMove, __simple, iterator_category>	__copy_move_backward<<unnamed>, <unnamed>, <unnamed>>
istreambuf_iterator<_CharT, char_traits<_CharT>>	istreambuf_iterator<_CharT, _Traits>
ostreambuf_iterator<_CharT, char_traits<_CharT>>	ostreambuf_iterator<_CharT, _Traits>
ostreambuf_iterator<_CharT, char_traits<_CharT>>	ostreambuf_iterator<_CharT, _Traits>
new_allocator<basic_string<char, char_traits<char>, allocator<char>>>	new_allocator<_Tp>
new_allocator<_Up>	new_allocator<_Tp>
new_allocator<_Up>	new_allocator<_Tp>
new_allocator<_Sp_counted_ptr_inplace<_State_baseV2, allocator<_State_baseV2>, _S_atomic>>	new_allocator<_Tp>
new_allocator<_State_baseV2>	new_allocator<_Tp>
new_allocator<_Sp_counted_ptr_inplace<mutex, allocator<mutex>, _S_atomic>>	new_allocator<_Tp>
new_allocator<mutex>	new_allocator<_Tp>
new_allocator<_Hash_node_base *>	new_allocator<_Tp>
new_allocator<_Sp_counted_ptr_inplace<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _S_atomic>>	new_allocator<_Tp>
new_allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	new_allocator<_Tp>
new_allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, true>>	new_allocator<_Tp>
new_allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>>	new_allocator<_Tp>
_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>	_Rb_tree_node<_Val>
new_allocator<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>>	new_allocator<_Tp>
new_allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>	new_allocator<_Tp>
default_delete<profile_item_t>	default_delete<_Tp>
unique_ptr<profile_item_t, default_delete<profile_item_t>>	unique_ptr<_Tp, _Dp>
new_allocator<unique_ptr<profile_item_t, default_delete<profile_item_t>>>	new_allocator<_Tp>
new_allocator<block_t *>	new_allocator<_Tp>
new_allocator<block_t>	new_allocator<_Tp>
new_allocator<shared_ptr<job_t> *>	new_allocator<_Tp>
new_allocator<shared_ptr<job_t>>	new_allocator<_Tp>
shared_ptr<event_t>	shared_ptr<_Tp>
new_allocator<shared_ptr<event_t>>	new_allocator<_Tp>
_List_node<event_blockage_t>	_List_node<_Tp>
new_allocator<_List_node<event_blockage_t>>	new_allocator<_Tp>
new_allocator<event_blockage_t>	new_allocator<_Tp>
unique_ptr<process_t, default_delete<process_t>>	unique_ptr<_Tp, _Dp>
new_allocator<unique_ptr<process_t, default_delete<process_t>>>	new_allocator<_Tp>
new_allocator<concrete_assignment>	new_allocator<_Tp>
new_allocator<redirection_spec_t>	new_allocator<_Tp>
separated_buffer_t<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	separated_buffer_t<StringType>
element_t	element_t
new_allocator<element_t>	new_allocator<_Tp>
shared_ptr<const io_data_t>	shared_ptr<_Tp>
new_allocator<shared_ptr<const io_data_t>>	new_allocator<_Tp>
separated_buffer_t<basic_string<char, char_traits<char>, allocator<char>>>	separated_buffer_t<StringType>
element_t	element_t
new_allocator<element_t>	new_allocator<_Tp>
new_allocator<unsigned long>	new_allocator<_Tp>
new_allocator<bool>	new_allocator<_Tp>
new_allocator<action_t>	new_allocator<_Tp>
new_allocator<_Hash_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true>>	new_allocator<_Tp>
new_allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, true>>	new_allocator<_Tp>
new_allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>>	new_allocator<_Tp>
new_allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	new_allocator<_Tp>
new_allocator<int>	new_allocator<_Tp>
new_allocator<char32_t>	new_allocator<_Tp>
new_allocator<char16_t>	new_allocator<_Tp>
new_allocator<wchar_t>	new_allocator<_Tp>
new_allocator<char>	new_allocator<_Tp>
new_allocator<_Tp1>	new_allocator<_Tp>
basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	basic_string<_CharT, _Traits, _Alloc>
new_allocator<_Tp>	new_allocator<_Tp>
new_allocator<_Tp>	new_allocator<_Tp>
basic_string<char, char_traits<char>, allocator<char>>	basic_string<_CharT, _Traits, _Alloc>
is_copy_constructible<value_type>	is_copy_constructible<_Tp>
is_nothrow_move_constructible<value_type>	is_nothrow_move_constructible<_Tp>
__or_<is_copy_constructible<value_type>, is_nothrow_move_constructible<value_type>>	__or_<<unnamed>...>
allocator<_T2>	allocator<_Tp>
allocator<_T1>	allocator<_Tp>
allocator<_T2>	allocator<_Tp>
allocator<_T1>	allocator<_Tp>
allocator<basic_string<char, char_traits<char>, allocator<char>>>	allocator<_Tp>
allocator<_Hash_node_base *>	allocator<_Tp>
allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, true>>	allocator<_Tp>
allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>>	allocator<_Tp>
allocator<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>>	allocator<_Tp>
allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>	allocator<_Tp>
allocator<unique_ptr<profile_item_t, default_delete<profile_item_t>>>	allocator<_Tp>
allocator<block_t *>	allocator<_Tp>
allocator<block_t>	allocator<_Tp>
allocator<shared_ptr<job_t> *>	allocator<_Tp>
allocator<shared_ptr<job_t>>	allocator<_Tp>
allocator<shared_ptr<event_t>>	allocator<_Tp>
allocator<_List_node<event_blockage_t>>	allocator<_Tp>
allocator<event_blockage_t>	allocator<_Tp>
allocator<unique_ptr<process_t, default_delete<process_t>>>	allocator<_Tp>
allocator<concrete_assignment>	allocator<_Tp>
allocator<redirection_spec_t>	allocator<_Tp>
allocator<element_t>	allocator<_Tp>
allocator<shared_ptr<const io_data_t>>	allocator<_Tp>
allocator<element_t>	allocator<_Tp>
allocator<unsigned long>	allocator<_Tp>
allocator<bool>	allocator<_Tp>
allocator<_Hash_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true>>	allocator<_Tp>
allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, true>>	allocator<_Tp>
allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>>	allocator<_Tp>
allocator<int>	allocator<_Tp>
allocator<_Up>	allocator<_Tp>
allocator<_Up>	allocator<_Tp>
allocator<_Up>	allocator<_Tp>
allocator<_Tp1>	allocator<_Tp>
allocator<_Tp1>	allocator<_Tp>
allocator_traits<_Alloc>	allocator_traits<_Alloc>
allocator_traits<_Alloc>	allocator_traits<_Alloc>
allocator_traits<_Alloc>	allocator_traits<_Alloc>
rebind<_Hash_node_base *>	rebind<_Tp1>
__rebind<allocator<_Hash_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true>>, _Hash_node_base *, void>	__rebind<_Tp, _Up, __void_t<other>>
rebind<_Hash_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true>>	rebind<_Tp1>
__rebind<allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Hash_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true>, void>	__rebind<_Tp, _Up, __void_t<other>>
rebind<_Hash_node_base *>	rebind<_Tp1>
__rebind<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, true>>, _Hash_node_base *, void>	__rebind<_Tp, _Up, __void_t<other>>
rebind<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, true>>	rebind<_Tp1>
__rebind<allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>>, _Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, true>, void>	__rebind<_Tp, _Up, __void_t<other>>
_Hash_node<_Value, value>	_Hash_node<_Value, _Cache_hash_code>
_Hash_node<_Value, value>	_Hash_node<_Value, _Cache_hash_code>
is_move_constructible<_Tp>	is_move_constructible<_Tp>
is_copy_constructible<_Tp>	is_copy_constructible<_Tp>
allocator_traits<type>	allocator_traits<_Alloc>
make_unsigned<_DiffT>	make_unsigned<_Tp>
__replace_first_arg<_Tp, _Up>	__replace_first_arg<_Tp, _Up>
rebind<_Sp_counted_ptr_inplace<_State_baseV2, allocator<_State_baseV2>, _S_atomic>>	rebind<_Tp1>
__rebind<allocator<_State_baseV2>, _Sp_counted_ptr_inplace<_State_baseV2, allocator<_State_baseV2>, _S_atomic>, void>	__rebind<_Tp, _Up, __void_t<other>>
rebind<_Sp_counted_ptr_inplace<mutex, allocator<mutex>, _S_atomic>>	rebind<_Tp1>
__rebind<allocator<mutex>, _Sp_counted_ptr_inplace<mutex, allocator<mutex>, _S_atomic>, void>	__rebind<_Tp, _Up, __void_t<other>>
rebind<_Sp_counted_ptr_inplace<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _S_atomic>>	rebind<_Tp1>
__rebind<allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _Sp_counted_ptr_inplace<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _S_atomic>, void>	__rebind<_Tp, _Up, __void_t<other>>
rebind<_Hash_node_base *>	rebind<_Tp1>
__rebind<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, true>>, _Hash_node_base *, void>	__rebind<_Tp, _Up, __void_t<other>>
rebind<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, true>>	rebind<_Tp1>
__rebind<allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>>, _Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, true>, void>	__rebind<_Tp, _Up, __void_t<other>>
allocator_traits<_Alloc>	allocator_traits<_Alloc>
is_same<pointer, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<pointer, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<pointer, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<pointer, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<pointer, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<pointer, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
allocator_traits<allocator<basic_string<char, char_traits<char>, allocator<char>>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<basic_string<char, char_traits<char>, allocator<char>>>, basic_string<char, char_traits<char>, allocator<char>>>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<unique_ptr<profile_item_t, default_delete<profile_item_t>>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<unique_ptr<profile_item_t, default_delete<profile_item_t>>>, unique_ptr<profile_item_t, default_delete<profile_item_t>>>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<block_t>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<block_t>, block_t>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<shared_ptr<job_t>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<shared_ptr<job_t>>, shared_ptr<job_t>>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<shared_ptr<event_t>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<shared_ptr<event_t>>, shared_ptr<event_t>>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<_List_node<event_blockage_t>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<_List_node<event_blockage_t>>, _List_node<event_blockage_t>>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<event_blockage_t>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<event_blockage_t>, event_blockage_t>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<unique_ptr<process_t, default_delete<process_t>>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<unique_ptr<process_t, default_delete<process_t>>>, unique_ptr<process_t, default_delete<process_t>>>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<concrete_assignment>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<concrete_assignment>, concrete_assignment>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<redirection_spec_t>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<redirection_spec_t>, redirection_spec_t>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<element_t>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<element_t>, element_t>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<shared_ptr<const io_data_t>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<shared_ptr<const io_data_t>>, shared_ptr<const io_data_t>>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<element_t>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<element_t>, element_t>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<unsigned long>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<unsigned long>, unsigned long>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<bool>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<bool>, bool>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<action_t>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<action_t>, action_t>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<_Hash_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<_Hash_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true>>, _Hash_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true>>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, true>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, true>>, _Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, true>>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<int>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<int>, int>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, true>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, true>>, _Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, true>>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>>, _Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>>	__alloc_traits<_Alloc, <unnamed>>
allocator<_Tp>	allocator<_Tp>
_Destroy_aux<<expression>>	_Destroy_aux<<unnamed>>
is_destructible<value_type>	is_destructible<_Tp>
allocator<_Up>	allocator<_Tp>
__is_bitwise_relocatable<_Tp, void>	__is_bitwise_relocatable<_Tp, <unnamed>>
pair<_InputIterator, _ForwardIterator>	pair<_T1, _T2>
pair<_RandomAccessIterator, _ForwardIterator>	pair<_T1, _T2>
pair<_InputIterator, _ForwardIterator>	pair<_T1, _T2>
allocator<_Tp>	allocator<_Tp>
allocator<_Tp>	allocator<_Tp>
allocator<_Tp2>	allocator<_Tp>
allocator<_Tp2>	allocator<_Tp>
allocator<_Tp>	allocator<_Tp>
allocator_traits<_Allocator>	allocator_traits<_Alloc>
is_assignable<reference, reference>	is_assignable<_Tp, _Up>
__uninitialized_copy<<expression>>	__uninitialized_copy<_TrivialValueTypes>
is_trivial<_Tp>	is_trivial<_Tp>
is_same<value_type, value_type>	is_same<<unnamed>, <unnamed>>
pair<_Tp *, ptrdiff_t>	pair<_T1, _T2>
basic_string<char32_t, char_traits<char32_t>, allocator<char32_t>>	basic_string<_CharT, _Traits, _Alloc>
basic_string<char16_t, char_traits<char16_t>, allocator<char16_t>>	basic_string<_CharT, _Traits, _Alloc>
allocator<_CharT>	allocator<_Tp>
char_traits<_CharT>	char_traits<_CharT>
fpos<_StateT>	fpos<_StateT>
fpos<_StateT>	fpos<_StateT>
basic_fstream<wchar_t, char_traits<wchar_t>>	basic_fstream<_CharT, _Traits>
basic_ofstream<wchar_t, char_traits<wchar_t>>	basic_ofstream<_CharT, _Traits>
basic_ifstream<wchar_t, char_traits<wchar_t>>	basic_ifstream<_CharT, _Traits>
basic_filebuf<wchar_t, char_traits<wchar_t>>	basic_filebuf<_CharT, _Traits>
basic_stringstream<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	basic_stringstream<_CharT, _Traits, _Alloc>
basic_stringstream<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	basic_stringstream<_CharT, _Traits, _Alloc>
basic_ostringstream<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	basic_ostringstream<_CharT, _Traits, _Alloc>
basic_ostringstream<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	basic_ostringstream<_CharT, _Traits, _Alloc>
basic_istringstream<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	basic_istringstream<_CharT, _Traits, _Alloc>
basic_istringstream<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	basic_istringstream<_CharT, _Traits, _Alloc>
basic_stringbuf<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	basic_stringbuf<_CharT, _Traits, _Alloc>
basic_stringbuf<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	basic_stringbuf<_CharT, _Traits, _Alloc>
basic_stringbuf<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	basic_stringbuf<_CharT, _Traits, _Alloc>
basic_stringbuf<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	basic_stringbuf<_CharT, _Traits, _Alloc>
basic_stringbuf<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	basic_stringbuf<_CharT, _Traits, _Alloc>
basic_stringbuf<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	basic_stringbuf<_CharT, _Traits, _Alloc>
basic_stringbuf<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	basic_stringbuf<_CharT, _Traits, _Alloc>
basic_stringbuf<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>	basic_stringbuf<_CharT, _Traits, _Alloc>
basic_iostream<wchar_t, char_traits<wchar_t>>	basic_iostream<_CharT, _Traits>
basic_ostream<wchar_t, char_traits<wchar_t>>	basic_ostream<_CharT, _Traits>
basic_istream<wchar_t, char_traits<wchar_t>>	basic_istream<_CharT, _Traits>
basic_streambuf<wchar_t, char_traits<wchar_t>>	basic_streambuf<_CharT, _Traits>
basic_ios<wchar_t, char_traits<wchar_t>>	basic_ios<_CharT, _Traits>
basic_fstream<char, char_traits<char>>	basic_fstream<_CharT, _Traits>
basic_ofstream<char, char_traits<char>>	basic_ofstream<_CharT, _Traits>
basic_ifstream<char, char_traits<char>>	basic_ifstream<_CharT, _Traits>
basic_filebuf<char, char_traits<char>>	basic_filebuf<_CharT, _Traits>
basic_stringstream<char, char_traits<char>, allocator<char>>	basic_stringstream<_CharT, _Traits, _Alloc>
basic_stringstream<char, char_traits<char>, allocator<char>>	basic_stringstream<_CharT, _Traits, _Alloc>
basic_ostringstream<char, char_traits<char>, allocator<char>>	basic_ostringstream<_CharT, _Traits, _Alloc>
basic_ostringstream<char, char_traits<char>, allocator<char>>	basic_ostringstream<_CharT, _Traits, _Alloc>
basic_istringstream<char, char_traits<char>, allocator<char>>	basic_istringstream<_CharT, _Traits, _Alloc>
basic_istringstream<char, char_traits<char>, allocator<char>>	basic_istringstream<_CharT, _Traits, _Alloc>
basic_stringbuf<char, char_traits<char>, allocator<char>>	basic_stringbuf<_CharT, _Traits, _Alloc>
basic_stringbuf<char, char_traits<char>, allocator<char>>	basic_stringbuf<_CharT, _Traits, _Alloc>
basic_stringbuf<char, char_traits<char>, allocator<char>>	basic_stringbuf<_CharT, _Traits, _Alloc>
basic_stringbuf<char, char_traits<char>, allocator<char>>	basic_stringbuf<_CharT, _Traits, _Alloc>
basic_stringbuf<char, char_traits<char>, allocator<char>>	basic_stringbuf<_CharT, _Traits, _Alloc>
basic_stringbuf<char, char_traits<char>, allocator<char>>	basic_stringbuf<_CharT, _Traits, _Alloc>
basic_stringbuf<char, char_traits<char>, allocator<char>>	basic_stringbuf<_CharT, _Traits, _Alloc>
basic_stringbuf<char, char_traits<char>, allocator<char>>	basic_stringbuf<_CharT, _Traits, _Alloc>
basic_iostream<char, char_traits<char>>	basic_iostream<_CharT, _Traits>
basic_ostream<char, char_traits<char>>	basic_ostream<_CharT, _Traits>
basic_istream<char, char_traits<char>>	basic_istream<_CharT, _Traits>
basic_streambuf<char, char_traits<char>>	basic_streambuf<_CharT, _Traits>
basic_ios<char, char_traits<char>>	basic_ios<_CharT, _Traits>
char_traits<_CharT>	char_traits<_CharT>
char_traits<_CharT>	char_traits<_CharT>
char_traits<_CharT>	char_traits<_CharT>
char_traits<_CharT>	char_traits<_CharT>
char_traits<_CharT>	char_traits<_CharT>
char_traits<_CharT>	char_traits<_CharT>
allocator<_CharT>	allocator<_Tp>
char_traits<_CharT>	char_traits<_CharT>
allocator<_CharT>	allocator<_Tp>
char_traits<_CharT>	char_traits<_CharT>
allocator<_CharT>	allocator<_Tp>
char_traits<_CharT>	char_traits<_CharT>
allocator<_CharT>	allocator<_Tp>
char_traits<_CharT>	char_traits<_CharT>
char_traits<_CharT>	char_traits<_CharT>
char_traits<_CharT>	char_traits<_CharT>
char_traits<_CharT>	char_traits<_CharT>
char_traits<_CharT>	char_traits<_CharT>
char_traits<_CharT>	char_traits<_CharT>
binder2nd<_Operation>	binder2nd<_Operation>
binder1st<_Operation>	binder1st<_Operation>
unary_function<first_argument_type, result_type>	unary_function<_Arg, _Result>
unary_function<second_argument_type, result_type>	unary_function<_Arg, _Result>
const_mem_fun1_ref_t<_Ret, _Tp, _Arg>	const_mem_fun1_ref_t<_Ret, _Tp, _Arg>
mem_fun1_ref_t<_Ret, _Tp, _Arg>	mem_fun1_ref_t<_Ret, _Tp, _Arg>
const_mem_fun1_t<_Ret, _Tp, _Arg>	const_mem_fun1_t<_Ret, _Tp, _Arg>
mem_fun1_t<_Ret, _Tp, _Arg>	mem_fun1_t<_Ret, _Tp, _Arg>
const_mem_fun_ref_t<_Ret, _Tp>	const_mem_fun_ref_t<_Ret, _Tp>
mem_fun_ref_t<_Ret, _Tp>	mem_fun_ref_t<_Ret, _Tp>
const_mem_fun_t<_Ret, _Tp>	const_mem_fun_t<_Ret, _Tp>
mem_fun_t<_Ret, _Tp>	mem_fun_t<_Ret, _Tp>
pointer_to_binary_function<_Arg1, _Arg2, _Result>	pointer_to_binary_function<_Arg1, _Arg2, _Result>
pointer_to_unary_function<_Arg, _Result>	pointer_to_unary_function<_Arg, _Result>
binary_negate<_Predicate>	binary_negate<_Predicate>
unary_negate<_Predicate>	unary_negate<_Predicate>
binary_function<_Tp, _Arg, _Ret>	binary_function<_Arg1, _Arg2, _Result>
binary_function<_Tp, _Arg, _Ret>	binary_function<_Arg1, _Arg2, _Result>
binary_function<const _Tp *, _Arg, _Ret>	binary_function<_Arg1, _Arg2, _Result>
binary_function<_Tp *, _Arg, _Ret>	binary_function<_Arg1, _Arg2, _Result>
unary_function<_Tp, _Ret>	unary_function<_Arg, _Result>
unary_function<_Tp, _Ret>	unary_function<_Arg, _Result>
unary_function<const _Tp *, _Ret>	unary_function<_Arg, _Result>
unary_function<_Tp *, _Ret>	unary_function<_Arg, _Result>
unary_function<_Pair, second_type>	unary_function<_Arg, _Result>
unary_function<_Pair, first_type>	unary_function<_Arg, _Result>
_Identity<_Tp>	_Identity<_Tp>
unary_function<_Tp, _Tp>	unary_function<_Arg, _Result>
binary_function<_Arg1, _Arg2, _Result>	binary_function<_Arg1, _Arg2, _Result>
unary_function<_Arg, _Result>	unary_function<_Arg, _Result>
binary_function<first_argument_type, second_argument_type, bool>	binary_function<_Arg1, _Arg2, _Result>
unary_function<argument_type, bool>	unary_function<_Arg, _Result>
unary_function<_Tp, _Tp>	unary_function<_Arg, _Result>
binary_function<_Tp, _Tp, _Tp>	binary_function<_Arg1, _Arg2, _Result>
binary_function<_Tp, _Tp, _Tp>	binary_function<_Arg1, _Arg2, _Result>
binary_function<_Tp, _Tp, _Tp>	binary_function<_Arg1, _Arg2, _Result>
unary_function<_Tp, bool>	unary_function<_Arg, _Result>
binary_function<_Tp, _Tp, bool>	binary_function<_Arg1, _Arg2, _Result>
binary_function<_Tp, _Tp, bool>	binary_function<_Arg1, _Arg2, _Result>
binary_function<_Tp *, _Tp *, bool>	binary_function<_Arg1, _Arg2, _Result>
binary_function<_Tp *, _Tp *, bool>	binary_function<_Arg1, _Arg2, _Result>
binary_function<_Tp *, _Tp *, bool>	binary_function<_Arg1, _Arg2, _Result>
binary_function<_Tp *, _Tp *, bool>	binary_function<_Arg1, _Arg2, _Result>
binary_function<_Tp, _Tp, bool>	binary_function<_Arg1, _Arg2, _Result>
binary_function<_Tp, _Tp, bool>	binary_function<_Arg1, _Arg2, _Result>
binary_function<_Tp, _Tp, bool>	binary_function<_Arg1, _Arg2, _Result>
binary_function<_Tp, _Tp, bool>	binary_function<_Arg1, _Arg2, _Result>
binary_function<_Tp, _Tp, bool>	binary_function<_Arg1, _Arg2, _Result>
binary_function<_Tp, _Tp, bool>	binary_function<_Arg1, _Arg2, _Result>
unary_function<_Tp, _Tp>	unary_function<_Arg, _Result>
binary_function<_Tp, _Tp, _Tp>	binary_function<_Arg1, _Arg2, _Result>
binary_function<_Tp, _Tp, _Tp>	binary_function<_Arg1, _Arg2, _Result>
binary_function<_Tp, _Tp, _Tp>	binary_function<_Arg1, _Arg2, _Result>
binary_function<_Tp, _Tp, _Tp>	binary_function<_Arg1, _Arg2, _Result>
binary_function<_Tp, _Tp, _Tp>	binary_function<_Arg1, _Arg2, _Result>
__uses_alloc2<_Alloc>	__uses_alloc2<_Alloc>
__uses_alloc1<_Alloc>	__uses_alloc1<_Alloc>
__uses_alloc<value, _Tp, _Alloc, _Args...>	__uses_alloc<<unnamed>, _Tp, _Alloc, _Args...>
__is_uses_allocator_predicate<is_nothrow_constructible, _Tp, _Alloc, _Args...>	__is_uses_allocator_predicate<_Predicate, _Tp, _Alloc, _Args...>
__is_uses_allocator_predicate<is_constructible, _Tp, _Alloc, _Args...>	__is_uses_allocator_predicate<_Predicate, _Tp, _Alloc, _Args...>
__uses_alloc<value, _Tp, _Alloc, _Args...>	__uses_alloc<<unnamed>, _Tp, _Alloc, _Args...>
is_convertible<_Alloc, allocator_type>	is_convertible<_From, _To>
is_same<allocator_type, __erased_type>	is_same<<unnamed>, <unnamed>>
__or_<is_convertible<_Alloc, allocator_type>, is_same<allocator_type, __erased_type>>	__or_<<unnamed>...>
is_convertible<_Alloc, _Tp>	is_convertible<_From, _To>
is_same<_Tp, __erased_type>	is_same<<unnamed>, <unnamed>>
__or_<is_convertible<_Alloc, _Tp>, is_same<_Tp, __erased_type>>	__or_<<unnamed>...>
is_constructible<_Tp, allocator_arg_t, const _Alloc &, _Args...>	is_constructible<_Tp, _Args...>
is_constructible<_Tp, _Args..., const _Alloc &>	is_constructible<_Tp, _Args...>
__or_<is_constructible<_Tp, allocator_arg_t, const _Alloc &, _Args...>, is_constructible<_Tp, _Args..., const _Alloc &>>	__or_<<unnamed>...>
initializer_list<_Tp>	initializer_list<_E>
initializer_list<_Tp>	initializer_list<_E>
tuple_element<_Int, pair<_Tp1, _Tp2>>	tuple_element<__i, _Tp>
tuple_element<_Int, pair<_Tp1, _Tp2>>	tuple_element<__i, _Tp>
tuple_element<_Int, pair<_Tp1, _Tp2>>	tuple_element<__i, _Tp>
tuple_element<_Int, pair<_Tp1, _Tp2>>	tuple_element<__i, _Tp>
tuple_element<_Int, pair<_Tp1, _Tp2>>	tuple_element<__i, _Tp>
tuple_element<_Int, pair<_Tp1, _Tp2>>	tuple_element<__i, _Tp>
tuple_element<_Int, pair<_Tp1, _Tp2>>	tuple_element<__i, _Tp>
tuple_element<_Int, pair<_Tp1, _Tp2>>	tuple_element<__i, _Tp>
tuple_element<_Int, pair<_Tp1, _Tp2>>	tuple_element<__i, _Tp>
tuple_element<_Int, pair<_Tp1, _Tp2>>	tuple_element<__i, _Tp>
tuple_element<_Int, pair<_Tp1, _Tp2>>	tuple_element<__i, _Tp>
tuple_element<_Int, pair<_Tp1, _Tp2>>	tuple_element<__i, _Tp>
tuple_element<_Int, pair<_Tp1, _Tp2>>	tuple_element<__i, _Tp>
tuple_element<_Int, pair<_Tp1, _Tp2>>	tuple_element<__i, _Tp>
tuple_element<_Int, pair<_Tp1, _Tp2>>	tuple_element<__i, _Tp>
tuple_element<_Int, pair<_Tp1, _Tp2>>	tuple_element<__i, _Tp>
pair<_Tp1, _Tp2>	pair<_T1, _T2>
pair<_Tp1, _Tp2>	pair<_T1, _T2>
pair<_Tp1, _Tp2>	pair<_T1, _T2>
pair<_Tp1, _Tp2>	pair<_T1, _T2>
pair<_Tp1, _Tp2>	pair<_T1, _T2>
pair<_Tp1, _Tp2>	pair<_T1, _T2>
pair<_Tp1, _Tp2>	pair<_T1, _T2>
pair<_Tp1, _Tp2>	pair<_T1, _T2>
tuple_size<_Tp>	tuple_size<_Tp>
tuple_size<_Tp>	tuple_size<_Tp>
tuple_size<_Tp>	tuple_size<_Tp>
tuple_size<_Tp>	tuple_size<_Tp>
enable_if<value, void>	enable_if<<unnamed>, _Tp>
is_same<_Tp, _Up>	is_same<<unnamed>, <unnamed>>
remove_cv<_Tp>	remove_cv<_Tp>
__pair_get<_Int>	__pair_get<_Int>
tuple_element<0UL, tuple<process_t *, default_delete<process_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple_element<0UL, tuple<node_t *, node_deleter_t>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<_Deleter>	tuple<_Elements...>
tuple_element<0UL, tuple<_Deleter>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple_element<0UL, tuple<_Result<void> *, _Deleter>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<_Make_ready>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<_Make_ready>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple_element<0UL, tuple<_Make_ready *, default_delete<_Make_ready>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple_element<0UL, tuple<_Result_base *, _Deleter>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<autoload_file_cache_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<autoload_file_cache_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple_element<0UL, tuple<autoload_file_cache_t *, default_delete<autoload_file_cache_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple_element<0UL, tuple<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<_Tp...>	tuple<_Elements...>
tuple<_Tp...>	tuple<_Elements...>
tuple<_Elements...>	tuple<_Elements...>
tuple<_Elements...>	tuple<_Elements...>
tuple<_Elements...>	tuple<_Elements...>
tuple<_Elements...>	tuple<_Elements...>
_Index_tuple<__integer_pack(_Num)...>	_Index_tuple<_Indexes...>
integral_constant<unsigned long, 2UL>	integral_constant<_Tp, __v>
tuple_size<_Tp>	tuple_size<_Tp>
tuple_size<_Tp>	tuple_size<_Tp>
tuple_size<_Tp>	tuple_size<_Tp>
tuple_size<_Tp>	tuple_size<_Tp>
tuple_size<_Tp>	tuple_size<_Tp>
tuple_size<_Tp>	tuple_size<_Tp>
tuple_size<_Tp>	tuple_size<_Tp>
tuple_size<_Tp>	tuple_size<_Tp>
tuple_size<_Tp>	tuple_size<_Tp>
tuple_size<_Tp>	tuple_size<_Tp>
tuple_size<_Tp>	tuple_size<_Tp>
tuple_size<_Tp>	tuple_size<_Tp>
char_traits<_CharT>	char_traits<_CharT>
char_traits<_CharT>	char_traits<_CharT>
ostreambuf_iterator<_CharT, char_traits<_CharT>>	ostreambuf_iterator<_CharT, _Traits>
char_traits<_CharT>	char_traits<_CharT>
istreambuf_iterator<_CharT, char_traits<_CharT>>	istreambuf_iterator<_CharT, _Traits>
char_traits<_CharT>	char_traits<_CharT>
ostreambuf_iterator<_CharT, char_traits<_CharT>>	ostreambuf_iterator<_CharT, _Traits>
char_traits<_CharT>	char_traits<_CharT>
ostreambuf_iterator<_CharT, char_traits<_CharT>>	ostreambuf_iterator<_CharT, _Traits>
char_traits<_CharT>	char_traits<_CharT>
istreambuf_iterator<_CharT, char_traits<_CharT>>	istreambuf_iterator<_CharT, _Traits>
char_traits<_CharT>	char_traits<_CharT>
istreambuf_iterator<_CharT, char_traits<_CharT>>	istreambuf_iterator<_CharT, _Traits>
char_traits<_CharT>	char_traits<_CharT>
ostreambuf_iterator<_CharT, char_traits<_CharT>>	ostreambuf_iterator<_CharT, _Traits>
char_traits<_CharT>	char_traits<_CharT>
istreambuf_iterator<_CharT, char_traits<_CharT>>	istreambuf_iterator<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
__numeric_traits<int>	__numeric_traits<_Value>
__numeric_traits_integer<int>	__numeric_traits_integer<_Value>
is_same<_Ret, int>	is_same<<unnamed>, <unnamed>>
__hash_base<unsigned long, long double>	__hash_base<_Result, _Arg>
__hash_base<unsigned long, double>	__hash_base<_Result, _Arg>
__hash_base<unsigned long, float>	__hash_base<_Result, _Arg>
is_enum<_Tp>	is_enum<_Tp>
hash<_Tp>	hash<_Tp>
__hash_base<unsigned long, __uint128_t>	__hash_base<_Result, _Arg>
__hash_base<unsigned long, __int128_t>	__hash_base<_Result, _Arg>
__hash_base<unsigned long, unsigned long long>	__hash_base<_Result, _Arg>
__hash_base<unsigned long, unsigned long>	__hash_base<_Result, _Arg>
__hash_base<unsigned long, unsigned int>	__hash_base<_Result, _Arg>
__hash_base<unsigned long, unsigned short>	__hash_base<_Result, _Arg>
__hash_base<unsigned long, long long>	__hash_base<_Result, _Arg>
__hash_base<unsigned long, long>	__hash_base<_Result, _Arg>
__hash_base<unsigned long, int>	__hash_base<_Result, _Arg>
__hash_base<unsigned long, short>	__hash_base<_Result, _Arg>
__hash_base<unsigned long, char32_t>	__hash_base<_Result, _Arg>
__hash_base<unsigned long, char16_t>	__hash_base<_Result, _Arg>
__hash_base<unsigned long, wchar_t>	__hash_base<_Result, _Arg>
__hash_base<unsigned long, unsigned char>	__hash_base<_Result, _Arg>
__hash_base<unsigned long, signed char>	__hash_base<_Result, _Arg>
__hash_base<unsigned long, char>	__hash_base<_Result, _Arg>
__hash_base<unsigned long, bool>	__hash_base<_Result, _Arg>
__hash_base<unsigned long, _Tp *>	__hash_base<_Result, _Arg>
__hash_base<unsigned long, _Tp>	__hash_base<_Result, _Arg>
__hash_enum<_Tp, value>	__hash_enum<_Tp, <unnamed>>
__invoke_result<_Callable, _Args...>	__invoke_result<_Functor, _ArgTypes...>
remove_reference<_Tp>	remove_reference<_Tp>
__inv_unwrap<_Tp, __remove_cvref_t<_Tp>>	__inv_unwrap<_Tp, _Up>
tuple<_Types...>	tuple<_Elements...>
tuple<_Elements...>	tuple<_Elements...>
__is_swappable<_Elements>	__is_swappable<_Tp>
__and_<__is_swappable<_Elements>...>	__and_<<unnamed>...>
tuple<_Elements...>	tuple<_Elements...>
enable_if<value, void>	enable_if<<unnamed>, _Tp>
__is_swappable<_Elements>	__is_swappable<_Tp>
__and_<__is_swappable<_Elements>...>	__and_<<unnamed>...>
tuple<_Elements &...>	tuple<_Elements...>
__tuple_cat_result<_Tpls...>	__tuple_cat_result<_Tpls...>
enable_if<value, void>	enable_if<<unnamed>, _Tp>
__is_tuple_like<_Tpls>	__is_tuple_like<_Tp>
__and_<__is_tuple_like<_Tpls>...>	__and_<<unnamed>...>
tuple<_T2s...>	tuple<_Elements...>
tuple<_T1s...>	tuple<_Elements...>
tuple<_Ts...>	tuple<_Elements...>
tuple<_Tp...>	tuple<_Elements...>
tuple<_Tp...>	tuple<_Elements...>
tuple<_Elements &&...>	tuple<_Elements...>
tuple<__type...>	tuple<_Elements...>
__decay_and_strip<_Elements>	__decay_and_strip<_Tp>
tuple<_UElements...>	tuple<_Elements...>
tuple<_TElements...>	tuple<_Elements...>
tuple<_UElements...>	tuple<_Elements...>
tuple<_TElements...>	tuple<_Elements...>
tuple<_UElements...>	tuple<_Elements...>
tuple<_TElements...>	tuple<_Elements...>
tuple<_UElements...>	tuple<_Elements...>
tuple<_TElements...>	tuple<_Elements...>
tuple<_UElements...>	tuple<_Elements...>
tuple<_TElements...>	tuple<_Elements...>
tuple<_UElements...>	tuple<_Elements...>
tuple<_TElements...>	tuple<_Elements...>
_Tuple_impl<__i, _Head, _Tail...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<__i, _Head, _Tail...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<__i, _Head, _Tail...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<__i, _Head, _Tail...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<__i, _Head, _Tail...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<__i, _Head, _Tail...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<__i, _Head, _Tail...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<__i, _Head, _Tail...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<__i, _Head, _Tail...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<__i, _Head, _Tail...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<__i, _Head, _Tail...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<__i, _Head, _Tail...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<__i, _Head, _Tail...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<__i, _Head, _Tail...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<__i, _Head, _Tail...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<__i, _Head, _Tail...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<__i, _Head, _Tail...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<__i, _Head, _Tail...>	_Tuple_impl<_Idx, _Elements...>
tuple<_Head, _Tail...>	tuple<_Elements...>
tuple<_Elements...>	tuple<_Elements...>
_Tuple_impl<0UL, _T1, _T2>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _T1, _T2>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _T1, _T2>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _T1, _T2>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _T1, _T2>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _T1, _T2>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _T1, _T2>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _T1, _T2>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _T1, _T2>	_Tuple_impl<_Idx, _Elements...>
is_nothrow_assignable<_T1 &, _U1>	is_nothrow_assignable<_Tp, _Up>
is_nothrow_assignable<_T2 &, _U2>	is_nothrow_assignable<_Tp, _Up>
__and_<is_nothrow_assignable<_T1 &, _U1>, is_nothrow_assignable<_T2 &, _U2>>	__and_<<unnamed>...>
is_assignable<_T1 &, _U1>	is_assignable<_Tp, _Up>
is_assignable<_T2 &, _U2>	is_assignable<_Tp, _Up>
__and_<is_assignable<_T1 &, _U1>, is_assignable<_T2 &, _U2>>	__and_<<unnamed>...>
tuple<_Elements...>	tuple<_Elements...>
is_same<tuple<_Elements...>, type...>	is_same<<unnamed>, <unnamed>>
__not_<is_same<tuple<_Elements...>, type...>>	__not_<_Pp>
is_convertible<_SrcTuple, _Elements...>	is_convertible<_From, _To>
__not_<is_convertible<_SrcTuple, _Elements...>>	__not_<_Pp>
is_constructible<_Elements..., _SrcTuple>	is_constructible<_Tp, _Args...>
__not_<is_constructible<_Elements..., _SrcTuple>>	__not_<_Pp>
__and_<__not_<is_same<tuple<_Elements...>, type>>, __not_<is_convertible<_SrcTuple, _Elements...>>, __not_<is_constructible<_Elements..., _SrcTuple>>>	__and_<<unnamed>...>
is_convertible<_UElements &&, _Elements>	is_convertible<_From, _To>
__and_<is_convertible<_UElements &&, _Elements>...>	__and_<<unnamed>...>
is_constructible<_Elements, _UElements &&>	is_constructible<_Tp, _Args...>
__and_<is_constructible<_Elements, _UElements &&>...>	__and_<<unnamed>...>
is_convertible<const _UElements &, _Elements>	is_convertible<_From, _To>
__and_<is_convertible<const _UElements &, _Elements>...>	__and_<<unnamed>...>
is_constructible<_Elements, const _UElements &>	is_constructible<_Tp, _Args...>
__and_<is_constructible<_Elements, const _UElements &>...>	__and_<<unnamed>...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Head_base<_Idx, _Head, value>	_Head_base<_Idx, _Head, <unnamed>>
_Tuple_impl<_Idx, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UHead, _UTails...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<_Idx, _UElements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<<expression>, _Tail...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<<expression>, _Tail...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<<expression>, _Tail...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<<expression>, _Tail...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<<expression>, _Tail...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<<expression>, _Tail...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<<expression>, _Tail...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<<expression>, _Tail...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<<expression>, _Tail...>	_Tuple_impl<_Idx, _Elements...>
_Head_base<_Idx, _Head, value>	_Head_base<_Idx, _Head, <unnamed>>
tuple<_UElements...>	tuple<_Elements...>
tuple<_UElements...>	tuple<_Elements...>
tuple<_UElements...>	tuple<_Elements...>
tuple<_UElements...>	tuple<_Elements...>
tuple<_UElements...>	tuple<_Elements...>
tuple<_UElements...>	tuple<_Elements...>
tuple<_UElements...>	tuple<_Elements...>
tuple<_UElements...>	tuple<_Elements...>
tuple<_UElements...>	tuple<_Elements...>
tuple<_UElements...>	tuple<_Elements...>
_Tuple_impl<0UL, _Elements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _Elements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _Elements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _Elements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _Elements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _Elements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _Elements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _Elements...>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _Elements...>	_Tuple_impl<_Idx, _Elements...>
is_assignable<_Elements &, _UElements>	is_assignable<_Tp, _Up>
__and_<is_assignable<_Elements &, _UElements>...>	__and_<<unnamed>...>
__is_empty_non_tuple<_Make_ready *>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<_Make_ready *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<_Make_ready>>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<_Make_ready>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<autoload_file_cache_t *>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<autoload_file_cache_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<autoload_file_cache_t>>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<autoload_file_cache_t>>>	conditional<false, _Iftrue, _Iffalse>
__do_make_tuple<type>	__do_make_tuple<_Tuple>
tuple<_Tp..., type>	tuple<_Elements...>
tuple<_Tail...>	tuple<_Elements...>
tuple_element<<expression>, tuple<_Tail...>>	tuple_element<__i, _Tp>
tuple_element<<expression>, tuple<_Tail...>>	tuple_element<__i, _Tp>
tuple_element<<expression>, tuple<_Tail...>>	tuple_element<__i, _Tp>
tuple_element<<expression>, tuple<_Tail...>>	tuple_element<__i, _Tp>
_TC<value, _T1, _T2>	_TC<<unnamed>, _Elements...>
_TC<true, _T1, _T2>	_TC<<unnamed>, _Elements...>
is_empty<_Tp>	is_empty<_Tp>
_TC<<expression>, _Elements...>	_TC<<unnamed>, _Elements...>
_TC<value, _Elements...>	_TC<<unnamed>, _Elements...>
__is_empty_non_tuple<env_stack_impl_t *>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<env_stack_impl_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<env_stack_impl_t>>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<env_stack_impl_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<parse_execution_context_t *>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<parse_execution_context_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<parse_execution_context_t>>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<parse_execution_context_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<process_t *>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<process_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<process_t>>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<process_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<keyword_t<kw_command, kw_builtin, kw_exec> *>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<keyword_t<kw_command, kw_builtin, kw_exec> *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<keyword_t<kw_command, kw_builtin, kw_exec>>>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<keyword_t<kw_command, kw_builtin, kw_exec>>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<case_item_t *>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<case_item_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<case_item_t>>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<case_item_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<else_clause_t *>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<else_clause_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<else_clause_t>>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<else_clause_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<elseif_clause_t *>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<elseif_clause_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<elseif_clause_t>>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<elseif_clause_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<argument_or_redirection_t *>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<argument_or_redirection_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<argument_or_redirection_t>>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<argument_or_redirection_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<job_conjunction_t *>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<job_conjunction_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<job_conjunction_t>>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<job_conjunction_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<andor_job_t *>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<andor_job_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<andor_job_t>>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<andor_job_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<token_t<end> *>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<token_t<end> *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<token_t<end>>>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<token_t<end>>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<job_conjunction_continuation_t *>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<job_conjunction_continuation_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<job_conjunction_continuation_t>>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<job_conjunction_continuation_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<token_t<background> *>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<token_t<background> *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<token_t<background>>>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<token_t<background>>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<job_continuation_t *>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<job_continuation_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<job_continuation_t>>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<job_continuation_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<keyword_t<kw_and, kw_or> *>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<keyword_t<kw_and, kw_or> *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<keyword_t<kw_and, kw_or>>>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<keyword_t<kw_and, kw_or>>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<argument_t *>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<argument_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<argument_t>>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<argument_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<variable_assignment_t *>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<variable_assignment_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<variable_assignment_t>>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<variable_assignment_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<keyword_t<kw_time> *>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<keyword_t<kw_time> *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<keyword_t<kw_time>>>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<keyword_t<kw_time>>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<node_t *>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<node_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<node_deleter_t>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<node_deleter_t>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<_Result<void> *>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<_Result<void> *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<_Result_base *>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<_Result_base *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<_Deleter>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<_Deleter>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &>>	conditional<false, _Iftrue, _Iffalse>
__allocated_ptr<_Alloc>	__allocated_ptr<_Alloc>
allocator_traits<_Alloc>	allocator_traits<_Alloc>
allocator_traits<_Alloc>	allocator_traits<_Alloc>
reference_wrapper<_Tp>	reference_wrapper<_Tp>
reference_wrapper<const _Tp>	reference_wrapper<_Tp>
reference_wrapper<_Tp>	reference_wrapper<_Tp>
reference_wrapper<const _Tp>	reference_wrapper<_Tp>
reference_wrapper<_Tp>	reference_wrapper<_Tp>
is_member_function_pointer<_Tp>	is_member_function_pointer<_Tp>
is_member_function_pointer<_Functor>	is_member_function_pointer<_Tp>
_Reference_wrapper_base<_Tp>	_Reference_wrapper_base<_Tp>
binary_function<_T1, _T2, _Res>	binary_function<_Arg1, _Arg2, _Result>
unary_function<_T1, _Res>	unary_function<_Arg, _Result>
binary_function<_T1, _T2, _Res>	binary_function<_Arg1, _Arg2, _Result>
binary_function<_T1, _T2, _Res>	binary_function<_Arg1, _Arg2, _Result>
binary_function<_T1, _T2, _Res>	binary_function<_Arg1, _Arg2, _Result>
binary_function<_T1, _T2, _Res>	binary_function<_Arg1, _Arg2, _Result>
unary_function<_T1, _Res>	unary_function<_Arg, _Result>
unary_function<_T1, _Res>	unary_function<_Arg, _Result>
unary_function<_T1, _Res>	unary_function<_Arg, _Result>
unary_function<_T1, _Res>	unary_function<_Arg, _Result>
_Weak_result_type<_Tp>	_Weak_result_type<_Functor>
_Refwrap_base_arg1<_Tp, void>	_Refwrap_base_arg1<_Tp, <unnamed>>
_Refwrap_base_arg2<_Tp, void>	_Refwrap_base_arg2<_Tp, <unnamed>>
_Weak_result_type_memfun<type, value>	_Weak_result_type_memfun<_Functor, <unnamed>>
_Weak_result_type_impl<_Functor>	_Weak_result_type_impl<_Functor>
_Maybe_get_result_type<_Functor, void>	_Maybe_get_result_type<_Functor, <unnamed>>
_Mem_fn_traits_base<_Res, const volatile _Class, _ArgTypes...>	_Mem_fn_traits_base<_Res, _Class, _ArgTypes...>
_Mem_fn_traits_base<_Res, volatile _Class, _ArgTypes...>	_Mem_fn_traits_base<_Res, _Class, _ArgTypes...>
_Mem_fn_traits_base<_Res, const _Class, _ArgTypes...>	_Mem_fn_traits_base<_Res, _Class, _ArgTypes...>
_Mem_fn_traits_base<_Res, _Class, _ArgTypes...>	_Mem_fn_traits_base<_Res, _Class, _ArgTypes...>
_Mem_fn_traits_base<_Res, const volatile _Class, _ArgTypes...>	_Mem_fn_traits_base<_Res, _Class, _ArgTypes...>
_Mem_fn_traits_base<_Res, volatile _Class, _ArgTypes...>	_Mem_fn_traits_base<_Res, _Class, _ArgTypes...>
_Mem_fn_traits_base<_Res, const _Class, _ArgTypes...>	_Mem_fn_traits_base<_Res, _Class, _ArgTypes...>
_Mem_fn_traits_base<_Res, _Class, _ArgTypes...>	_Mem_fn_traits_base<_Res, _Class, _ArgTypes...>
_Mem_fn_traits_base<_Res, const volatile _Class, _ArgTypes...>	_Mem_fn_traits_base<_Res, _Class, _ArgTypes...>
_Mem_fn_traits_base<_Res, volatile _Class, _ArgTypes...>	_Mem_fn_traits_base<_Res, _Class, _ArgTypes...>
_Mem_fn_traits_base<_Res, const _Class, _ArgTypes...>	_Mem_fn_traits_base<_Res, _Class, _ArgTypes...>
_Mem_fn_traits_base<_Res, _Class, _ArgTypes...>	_Mem_fn_traits_base<_Res, _Class, _ArgTypes...>
_Maybe_unary_or_binary_function<_Res, _Class *, _ArgTypes...>	_Maybe_unary_or_binary_function<_Res, _ArgTypes...>
binary_function<_T1, _T2, _Res>	binary_function<_Arg1, _Arg2, _Result>
unary_function<_T1, _Res>	unary_function<_Arg, _Result>
_Reference_wrapper_base_memfun<type, value>	_Reference_wrapper_base_memfun<_Tp, <unnamed>>
aligned_storage<sizeof(_Tp), __alignof__(_Tp)>	aligned_storage<_Len, _Align>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
__weak_ptr<_Tp, _Lp>	__weak_ptr<_Tp, _Lp>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
__weak_ptr<_Tp, _Lp>	__weak_ptr<_Tp, _Lp>
__shared_ptr<_Tp1, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp1, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp1, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp2, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp1, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp2, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp1, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp2, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp1, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Up, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp2, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp1, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp2, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp1, _Lp>	__shared_ptr<_Tp, _Lp>
is_void<_Tp>	is_void<_Tp>
is_array<_Tp>	is_array<<unnamed>>
__weak_count<_Lp>	__weak_count<_Lp>
_Sp_counted_ptr<std::nullptr_t, _S_atomic>	_Sp_counted_ptr<_Ptr, _Lp>
_Sp_counted_ptr<std::nullptr_t, _S_mutex>	_Sp_counted_ptr<_Ptr, _Lp>
_Sp_counted_ptr<std::nullptr_t, _S_single>	_Sp_counted_ptr<_Ptr, _Lp>
_Sp_counted_base<_S_single>	_Sp_counted_base<_Lp>
_Sp_counted_base<_S_atomic>	_Sp_counted_base<_Lp>
_Sp_counted_base<_S_mutex>	_Sp_counted_base<_Lp>
__weak_count<_S_atomic>	__weak_count<_Lp>
__shared_count<_S_atomic>	__shared_count<_Lp>
__shared_count<_Lp>	__shared_count<_Lp>
shared_ptr<_Tp1>	shared_ptr<_Tp>
__shared_ptr<_Tp1, _Lp1>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp1, _Lp1>	__shared_ptr<_Tp, _Lp>
_Sp_counted_base<_Lp>	_Sp_counted_base<_Lp>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
unique_ptr<_Tp, _Del>	unique_ptr<_Tp, _Dp>
_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>	_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>
_Sp_alloc_shared_tag<_Alloc>	_Sp_alloc_shared_tag<_Alloc>
__weak_ptr<const _Tp, _Lp>	__weak_ptr<_Tp, _Lp>
__weak_ptr<_Tp, _Lp>	__weak_ptr<_Tp, _Lp>
__shared_ptr<const _Tp, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
__weak_ptr<_Tp1, _Lp>	__weak_ptr<_Tp, _Lp>
__shared_ptr<_Tp1, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
__weak_ptr<_Yp, _Lp>	__weak_ptr<_Tp, _Lp>
__shared_ptr<_Yp, _Lp>	__shared_ptr<_Tp, _Lp>
__weak_ptr<_Yp, _Lp>	__weak_ptr<_Tp, _Lp>
__weak_ptr<_Yp, _Lp>	__weak_ptr<_Tp, _Lp>
__shared_ptr<_Yp, _Lp>	__shared_ptr<_Tp, _Lp>
__weak_ptr<_Yp, _Lp>	__weak_ptr<_Tp, _Lp>
__weak_ptr<_Tp, _Lp>	__weak_ptr<_Tp, _Lp>
_Sp_alloc_shared_tag<_Alloc>	_Sp_alloc_shared_tag<_Alloc>
__weak_ptr<_Tp1, _Lp>	__weak_ptr<_Tp, _Lp>
__shared_ptr<_Tp1, _Lp>	__shared_ptr<_Tp, _Lp>
unique_ptr<_Yp, _Del>	unique_ptr<_Tp, _Dp>
__shared_ptr<_Yp, _Lp>	__shared_ptr<_Tp, _Lp>
auto_ptr<_Yp>	auto_ptr<_Tp>
__shared_ptr<_Yp, _Lp>	__shared_ptr<_Tp, _Lp>
unique_ptr<_Tp1, _Del>	unique_ptr<_Tp, _Dp>
unique_ptr<_Yp, _Del>	unique_ptr<_Tp, _Dp>
__weak_ptr<_Yp, _Lp>	__weak_ptr<_Tp, _Lp>
__shared_ptr<_Yp, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Yp, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Yp, _Lp>	__shared_ptr<_Tp, _Lp>
_Mutex_base<_Lp>	_Mutex_base<_Lp>
__allocated_ptr<type>	__allocated_ptr<_Alloc>
allocator_traits<_Alloc>	allocator_traits<_Alloc>
_Sp_ebo_helper<0, _Alloc, <expression>>	_Sp_ebo_helper<_Nm, _Tp, __use_ebo>
__hash_base<unsigned long, __shared_ptr<_Tp, _Lp>>	__hash_base<_Result, _Arg>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
_Sp_owner_less<__weak_ptr<_Tp, _Lp>, __shared_ptr<_Tp, _Lp>>	_Sp_owner_less<_Tp, _Tp1>
__weak_ptr<_Tp, _Lp>	__weak_ptr<_Tp, _Lp>
_Sp_owner_less<__shared_ptr<_Tp, _Lp>, __weak_ptr<_Tp, _Lp>>	_Sp_owner_less<_Tp, _Tp1>
binary_function<_Tp, _Tp, bool>	binary_function<_Arg1, _Arg2, _Result>
_Sp_alloc_shared_tag<_Tp>	_Sp_alloc_shared_tag<_Alloc>
__shared_ptr_access<_Tp, _Lp, value, value>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
is_array<_Tp>	is_array<<unnamed>>
__not_<is_array<_Tp>>	__not_<_Pp>
_Sp_ebo_helper<1, _Alloc, <expression>>	_Sp_ebo_helper<_Nm, _Tp, __use_ebo>
_Sp_ebo_helper<0, _Deleter, <expression>>	_Sp_ebo_helper<_Nm, _Tp, __use_ebo>
auto_ptr<_Tp>	auto_ptr<_Tp>
auto_ptr<_Tp>	auto_ptr<_Tp>
auto_ptr<_Yp>	auto_ptr<_Tp>
auto_ptr<_Tp1>	auto_ptr<_Tp>
__aligned_buffer<_Tp>	__aligned_buffer<_Tp>
enable_shared_from_this<_Tp>	enable_shared_from_this<_Tp>
__enable_shared_from_this<_Tp, _Lp>	__enable_shared_from_this<_Tp, _Lp>
shared_ptr<_Tp>	shared_ptr<_Tp>
shared_ptr<_Tp>	shared_ptr<_Tp>
shared_ptr<_Tp>	shared_ptr<_Tp>
weak_ptr<_Tp>	weak_ptr<_Tp>
shared_ptr<_Tp>	shared_ptr<_Tp>
weak_ptr<_Tp>	weak_ptr<_Tp>
shared_ptr<_Up>	shared_ptr<_Tp>
shared_ptr<_Tp>	shared_ptr<_Tp>
shared_ptr<_Up>	shared_ptr<_Tp>
shared_ptr<_Tp>	shared_ptr<_Tp>
shared_ptr<_Up>	shared_ptr<_Tp>
shared_ptr<_Tp>	shared_ptr<_Tp>
shared_ptr<_Tp>	shared_ptr<_Tp>
shared_ptr<_Tp>	shared_ptr<_Tp>
shared_ptr<_Tp>	shared_ptr<_Tp>
shared_ptr<_Up>	shared_ptr<_Tp>
shared_ptr<_Tp>	shared_ptr<_Tp>
shared_ptr<_Tp>	shared_ptr<_Tp>
shared_ptr<_Tp>	shared_ptr<_Tp>
shared_ptr<_Up>	shared_ptr<_Tp>
shared_ptr<_Tp>	shared_ptr<_Tp>
shared_ptr<_Tp>	shared_ptr<_Tp>
shared_ptr<_Tp>	shared_ptr<_Tp>
shared_ptr<_Up>	shared_ptr<_Tp>
shared_ptr<_Tp>	shared_ptr<_Tp>
shared_ptr<_Tp>	shared_ptr<_Tp>
shared_ptr<_Tp>	shared_ptr<_Tp>
shared_ptr<_Up>	shared_ptr<_Tp>
shared_ptr<_Tp>	shared_ptr<_Tp>
shared_ptr<_Tp>	shared_ptr<_Tp>
shared_ptr<_Tp>	shared_ptr<_Tp>
shared_ptr<_Up>	shared_ptr<_Tp>
shared_ptr<_Tp>	shared_ptr<_Tp>
shared_ptr<_Tp>	shared_ptr<_Tp>
shared_ptr<_Tp>	shared_ptr<_Tp>
shared_ptr<_Up>	shared_ptr<_Tp>
shared_ptr<_Tp>	shared_ptr<_Tp>
shared_ptr<_Tp>	shared_ptr<_Tp>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
basic_ostream<_Ch, _Tr>	basic_ostream<_CharT, _Traits>
enable_shared_from_this<parser_t>	enable_shared_from_this<_Tp>
allocator<type>	allocator<_Tp>
_Sp_alloc_shared_tag<_Alloc>	_Sp_alloc_shared_tag<_Alloc>
shared_ptr<_Yp>	shared_ptr<_Tp>
weak_ptr<const _Tp>	weak_ptr<_Tp>
weak_ptr<_Tp>	weak_ptr<_Tp>
shared_ptr<const _Tp>	shared_ptr<_Tp>
shared_ptr<_Tp>	shared_ptr<_Tp>
shared_ptr<_Tp>	shared_ptr<_Tp>
weak_ptr<_Yp>	weak_ptr<_Tp>
shared_ptr<_Yp>	shared_ptr<_Tp>
weak_ptr<_Yp>	weak_ptr<_Tp>
weak_ptr<_Yp>	weak_ptr<_Tp>
weak_ptr<_Yp>	weak_ptr<_Tp>
__weak_ptr<_Tp, _S_atomic>	__weak_ptr<_Tp, _Lp>
shared_ptr<_Yp>	shared_ptr<_Tp>
weak_ptr<_Tp>	weak_ptr<_Tp>
__shared_ptr<_Tp, _S_atomic>	__shared_ptr<_Tp, _Lp>
_Sp_alloc_shared_tag<_Alloc>	_Sp_alloc_shared_tag<_Alloc>
unique_ptr<_Yp, _Del>	unique_ptr<_Tp, _Dp>
shared_ptr<_Yp>	shared_ptr<_Tp>
auto_ptr<_Yp>	auto_ptr<_Tp>
shared_ptr<_Yp>	shared_ptr<_Tp>
unique_ptr<_Yp, _Del>	unique_ptr<_Tp, _Dp>
unique_ptr<_Yp, _Del>	unique_ptr<_Tp, _Dp>
weak_ptr<_Yp>	weak_ptr<_Tp>
shared_ptr<_Yp>	shared_ptr<_Tp>
shared_ptr<_Yp>	shared_ptr<_Tp>
shared_ptr<_Yp>	shared_ptr<_Tp>
__hash_base<unsigned long, shared_ptr<_Tp>>	__hash_base<_Result, _Arg>
shared_ptr<_Tp>	shared_ptr<_Tp>
_Sp_owner_less<weak_ptr<_Tp>, shared_ptr<_Tp>>	_Sp_owner_less<_Tp, _Tp1>
weak_ptr<_Tp>	weak_ptr<_Tp>
_Sp_owner_less<shared_ptr<_Tp>, weak_ptr<_Tp>>	_Sp_owner_less<_Tp, _Tp1>
auto_ptr<_Yp>	auto_ptr<_Tp>
auto_ptr<_Tp1>	auto_ptr<_Tp>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
shared_ptr<_Tp>	shared_ptr<_Tp>
shared_ptr<_Tp>	shared_ptr<_Tp>
shared_ptr<_Tp>	shared_ptr<_Tp>
shared_ptr<_Tp>	shared_ptr<_Tp>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
shared_ptr<_Tp>	shared_ptr<_Tp>
shared_ptr<_Tp>	shared_ptr<_Tp>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
shared_ptr<_Tp>	shared_ptr<_Tp>
shared_ptr<_Tp>	shared_ptr<_Tp>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
shared_ptr<_Tp>	shared_ptr<_Tp>
shared_ptr<_Tp>	shared_ptr<_Tp>
shared_ptr<_Tp>	shared_ptr<_Tp>
__shared_ptr<_Tp, _Lp>	__shared_ptr<_Tp, _Lp>
auto_ptr<_Tp1>	auto_ptr<_Tp>
auto_ptr_ref<_Tp1>	auto_ptr_ref<_Tp1>
auto_ptr_ref<_Tp>	auto_ptr_ref<_Tp1>
auto_ptr<_Tp1>	auto_ptr<_Tp>
auto_ptr<_Tp1>	auto_ptr<_Tp>
numeric_limits<_Tp>	numeric_limits<_Tp>
numeric_limits<_Tp>	numeric_limits<_Tp>
numeric_limits<_Tp>	numeric_limits<_Tp>
_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>	_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>	_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
_Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __cache>	_Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __cache_hash_code>
_Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __cache>	_Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __cache_hash_code>
is_empty<_Tp>	is_empty<_Tp>
pair<bool, unsigned long>	pair<_T1, _T2>
_Node_iterator_base<_Value, _Cache_hash_code>	_Node_iterator_base<_Value, _Cache_hash_code>
_Node_iterator_base<_Value, _Cache_hash_code>	_Node_iterator_base<_Value, _Cache_hash_code>
iterator_traits<_Iterator>	iterator_traits<_Iterator>
iterator_traits<_Iterator>	iterator_traits<_Iterator>
iterator_traits<_Iterator>	iterator_traits<_Iterator>
_Local_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>	_Local_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>
_Hash_node<_Value, __cache>	_Hash_node<_Value, _Cache_hash_code>
_Hash_node<_Value, __cache>	_Hash_node<_Value, _Cache_hash_code>
_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, false>	_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __cache_hash_code>
_Hash_node<_Value, false>	_Hash_node<_Value, _Cache_hash_code>
_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, true>	_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __cache_hash_code>
_Hash_node<_Value, true>	_Hash_node<_Value, _Cache_hash_code>
_Hash_node<_Value, false>	_Hash_node<_Value, _Cache_hash_code>
_Hash_node<_Value, true>	_Hash_node<_Value, _Cache_hash_code>
_Hashtable_ebo_helper<2, _H2, <expression>>	_Hashtable_ebo_helper<_Nm, _Tp, __use_ebo>
_Hashtable_ebo_helper<1, _H1, <expression>>	_Hashtable_ebo_helper<_Nm, _Tp, __use_ebo>
_Hashtable_ebo_helper<0, _ExtractKey, <expression>>	_Hashtable_ebo_helper<_Nm, _Tp, __use_ebo>
_Hash_node<_Value, true>	_Hash_node<_Value, _Cache_hash_code>
_Hash_node<_Value, false>	_Hash_node<_Value, _Cache_hash_code>
_Hash_node<_Value, false>	_Hash_node<_Value, _Cache_hash_code>
initializer_list<value_type>	initializer_list<_E>
_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>	_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
_AllocNode<type>	_AllocNode<_NodeAlloc>
_Hashtable<_Key, _Pair, _Alloc, _Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>	_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
tuple<const key_type &>	tuple<_Elements...>
pair<bool, int>	pair<_T1, _T2>
_Node_iterator<_Value, __constant_iterators, __cache>	_Node_iterator<_Value, __constant_iterators, __cache>
_Node_iterator_base<_Value, __cache>	_Node_iterator_base<_Value, _Cache_hash_code>
_Node_iterator_base<_Value, __cache>	_Node_iterator_base<_Value, _Cache_hash_code>
_Hash_node<_Value, _Cache_hash_code>	_Hash_node<_Value, _Cache_hash_code>
__aligned_buffer<_Value>	__aligned_buffer<_Tp>
_Hashtable_alloc<_NodeAlloc>	_Hashtable_alloc<_NodeAlloc>
_Hashtable_alloc<_NodeAlloc>	_Hashtable_alloc<_NodeAlloc>
pointer_traits<pointer>	pointer_traits<_Ptr>
pointer_traits<pointer>	pointer_traits<_Ptr>
__alloc_traits<_NodeAlloc, value_type>	__alloc_traits<_Alloc, <unnamed>>
_Hashtable_ebo_helper<0, _NodeAlloc, <expression>>	_Hashtable_ebo_helper<_Nm, _Tp, __use_ebo>
_Hashtable_ebo_helper<0, _Equal, <expression>>	_Hashtable_ebo_helper<_Nm, _Tp, __use_ebo>
_Equal_helper<_Key, _Value, _ExtractKey, _Equal, __hash_code, value>	_Equal_helper<_Key, _Value, _ExtractKey, _Equal, _HashCodeType, __cache_hash_code>
_Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __cache>	_Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __cache_hash_code>
_Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __cache>	_Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __cache_hash_code>
_Hash_code_storage<_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, false>, value>	_Hash_code_storage<_Tp, _IsEmpty>
_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, false>	_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __cache_hash_code>
_Hash_code_storage<_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, false>, value>	_Hash_code_storage<_Tp, _IsEmpty>
_Hashtable_ebo_helper<0, _H2, <expression>>	_Hashtable_ebo_helper<_Nm, _Tp, __use_ebo>
_Hashtable_ebo_helper<2, _H2, <expression>>	_Hashtable_ebo_helper<_Nm, _Tp, __use_ebo>
_Hashtable_ebo_helper<1, _H1, <expression>>	_Hashtable_ebo_helper<_Nm, _Tp, __use_ebo>
_Hashtable_ebo_helper<0, _ExtractKey, <expression>>	_Hashtable_ebo_helper<_Nm, _Tp, __use_ebo>
_Hashtable_ebo_helper<1, _Hash, <expression>>	_Hashtable_ebo_helper<_Nm, _Tp, __use_ebo>
_Hashtable_ebo_helper<0, _ExtractKey, <expression>>	_Hashtable_ebo_helper<_Nm, _Tp, __use_ebo>
_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>	_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
enable_if<value, void>	enable_if<<unnamed>, _Tp>
is_constructible<value_type, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<value_type, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<value_type, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<value_type, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<value_type, _Pair &&>	is_constructible<_Tp, _Args...>
_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>	_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>	_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>
_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>	_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>	_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>
_Hashtable_base<_Key, _Pair, _Select1st, _Equal, _H1, _H2, _Hash, _Traits>	_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>
_Hash_node_value_base<_Value>	_Hash_node_value_base<_Value>
_Hash_node_value_base<_Value>	_Hash_node_value_base<_Value>
_Local_const_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, value, value>	_Local_const_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>
_Local_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, value, value>	_Local_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>
_Node_const_iterator<_Value, value, value>	_Node_const_iterator<_Value, __constant_iterators, __cache>
_Node_iterator<_Value, value, value>	_Node_iterator<_Value, __constant_iterators, __cache>
_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, value>	_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __cache_hash_code>
__aligned_buffer<_Tp>	__aligned_buffer<_Tp>
__is_invocable<const _Equal &, const _Key &, const _Key &>	__is_invocable<_Fn, _ArgTypes...>
__is_invocable<const _H1 &, const _Key &>	__is_invocable<_Fn, _ArgTypes...>
is_empty<_Tp>	is_empty<_Tp>
equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	equal_to<_Tp>
_Hashtable_traits<true, true, true>	_Hashtable_traits<_Cache_hash_code, _Constant_iterators, _Unique_keys>
_Insert_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Identity, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, true, true>>	_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
_Insert<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Identity, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, true, true>, true>	_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
_Hashtable_traits<true, false, true>	_Hashtable_traits<_Cache_hash_code, _Constant_iterators, _Unique_keys>
_Insert_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>>	_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
_Insert<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, false>	_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, false>
_Insert_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>>	_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
_Insert<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, false>	_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, false>
_Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2, _Default_ranged_hash, true>	_Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __cache_hash_code>
_Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2, _Default_ranged_hash, false>	_Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __cache_hash_code>
pair<iterator, bool>	pair<_T1, _T2>
pair<const_iterator, const_iterator>	pair<_T1, _T2>
pair<iterator, iterator>	pair<_T1, _T2>
initializer_list<_Value>	initializer_list<_E>
_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>	_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>
_Map_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, value>	_Map_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, _Unique_keys>
_Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, type>	_Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, <unnamed>>
_Hashtable_alloc<type>	_Hashtable_alloc<_NodeAlloc>
__is_nothrow_invocable<const hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> &, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &>	__is_nothrow_invocable<_Fn, _Args...>
__and_<__is_fast_hash<hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, __is_nothrow_invocable<const hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> &, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &>>	__and_<_B1, _B2>
__not_<__and_<__is_fast_hash<hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, __is_nothrow_invocable<const hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> &, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &>>>	__not_<_Pp>
__is_fast_hash<_Hash>	__is_fast_hash<_Hash>
__is_nothrow_invocable<const _Hash &, const _Value &>	__is_nothrow_invocable<_Fn, _Args...>
__and_<__is_fast_hash<_Hash>, __is_nothrow_invocable<const _Hash &, const _Value &>>	__and_<<unnamed>...>
__not_<__and_<__is_fast_hash<_Hash>, __is_nothrow_invocable<const _Hash &, const _Value &>>>	__not_<_Pp>
__is_fast_hash<_Hash>	__is_fast_hash<_Hash>
__is_nothrow_invocable<const _Hash &, const _Value &>	__is_nothrow_invocable<_Fn, _Args...>
__and_<__is_fast_hash<_Hash>, __is_nothrow_invocable<const _Hash &, const _Value &>>	__and_<<unnamed>...>
__not_<__and_<__is_fast_hash<_Hash>, __is_nothrow_invocable<const _Hash &, const _Value &>>>	__not_<_Pp>
__is_fast_hash<_Hash>	__is_fast_hash<_Hash>
__is_nothrow_invocable<const _Hash &, const _Value &>	__is_nothrow_invocable<_Fn, _Args...>
__and_<__is_fast_hash<_Hash>, __is_nothrow_invocable<const _Hash &, const _Value &>>	__and_<<unnamed>...>
__not_<__and_<__is_fast_hash<_Hash>, __is_nothrow_invocable<const _Hash &, const _Value &>>>	__not_<_Pp>
__is_fast_hash<_Hash>	__is_fast_hash<_Hash>
__is_nothrow_invocable<const _Hash &, const _Value &>	__is_nothrow_invocable<_Fn, _Args...>
__and_<__is_fast_hash<_Hash>, __is_nothrow_invocable<const _Hash &, const _Value &>>	__and_<<unnamed>...>
__not_<__and_<__is_fast_hash<_Hash>, __is_nothrow_invocable<const _Hash &, const _Value &>>>	__not_<_Pp>
__is_fast_hash<_Hash>	__is_fast_hash<_Hash>
__is_nothrow_invocable<const _Hash &, const _Key &>	__is_nothrow_invocable<_Fn, _Args...>
__and_<__is_fast_hash<_Hash>, __is_nothrow_invocable<const _Hash &, const _Key &>>	__and_<<unnamed>...>
__not_<__and_<__is_fast_hash<_Hash>, __is_nothrow_invocable<const _Hash &, const _Key &>>>	__not_<_Pp>
__is_fast_hash<_Hash>	__is_fast_hash<_Hash>
__is_nothrow_invocable<const _Hash &, const _Key &>	__is_nothrow_invocable<_Fn, _Args...>
__and_<__is_fast_hash<_Hash>, __is_nothrow_invocable<const _Hash &, const _Key &>>	__and_<<unnamed>...>
__not_<__and_<__is_fast_hash<_Hash>, __is_nothrow_invocable<const _Hash &, const _Key &>>>	__not_<_Pp>
__is_fast_hash<_Hash>	__is_fast_hash<_Hash>
__is_nothrow_invocable<const _Hash &, const _Key &>	__is_nothrow_invocable<_Fn, _Args...>
__and_<__is_fast_hash<_Hash>, __is_nothrow_invocable<const _Hash &, const _Key &>>	__and_<<unnamed>...>
__not_<__and_<__is_fast_hash<_Hash>, __is_nothrow_invocable<const _Hash &, const _Key &>>>	__not_<_Pp>
__is_fast_hash<_Hash>	__is_fast_hash<_Hash>
__is_nothrow_invocable<const _Hash &, const _Key &>	__is_nothrow_invocable<_Fn, _Args...>
__and_<__is_fast_hash<_Hash>, __is_nothrow_invocable<const _Hash &, const _Key &>>	__and_<<unnamed>...>
__not_<__and_<__is_fast_hash<_Hash>, __is_nothrow_invocable<const _Hash &, const _Key &>>>	__not_<_Pp>
__is_fast_hash<_Hash>	__is_fast_hash<_Hash>
__is_nothrow_invocable<const _Hash &, const _Tp &>	__is_nothrow_invocable<_Fn, _Args...>
__and_<__is_fast_hash<_Hash>, __is_nothrow_invocable<const _Hash &, const _Tp &>>	__and_<<unnamed>...>
__not_<__and_<__is_fast_hash<_Hash>, __is_nothrow_invocable<const _Hash &, const _Tp &>>>	__not_<_Pp>
__not_<__hash_cached>	__not_<_Pp>
is_default_constructible<_H2>	is_default_constructible<_Tp>
__or_<__not_<__hash_cached>, is_default_constructible<_H2>>	__or_<<unnamed>...>
__or_<__hash_cached, _Cond>	__or_<<unnamed>...>
__or_<__not_<__hash_cached>, _Cond>	__or_<<unnamed>...>
_ReuseOrAllocNode<type>	_ReuseOrAllocNode<_NodeAlloc>
_Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, value>	_Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, _Unique_keys>
_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, value>	_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, _Constant_iterators>
_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, value>	_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, _Constant_iterators>
_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, value>	_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, _Constant_iterators>
_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, value>	_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, _Constant_iterators>
is_same<type, _Value>	is_same<<unnamed>, <unnamed>>
_Hash_code_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, _Identity, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, true>	_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Default_ranged_hash, true>
_Hashtable<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Identity, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, true, true>>	_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
__hash_code_base_access	__hash_code_base_access
_Hash_code_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, _Select1st, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, true>	_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Default_ranged_hash, true>
_Hashtable<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>>	_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
__hash_code_base_access	__hash_code_base_access
_Hash_code_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, _Select1st, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, true>	_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Default_ranged_hash, true>
_Hashtable<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>>	_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
__hash_code_base_access	__hash_code_base_access
unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>	unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>
unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>	unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>
unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>	unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>	unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>	unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>
unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>	unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
pair<const _Key, _Tp>	pair<_T1, _T2>
allocator<pair<const _Key, _Tp>>	allocator<_Tp>
equal_to<_Key>	equal_to<_Tp>
hash<_Key>	hash<_Tp>
pair<const _Key, _Tp>	pair<_T1, _T2>
allocator<pair<const _Key, _Tp>>	allocator<_Tp>
equal_to<_Key>	equal_to<_Tp>
hash<_Key>	hash<_Tp>
_Hashtable_traits<value, false, false>	_Hashtable_traits<_Cache_hash_code, _Constant_iterators, _Unique_keys>
pair<const _Key, _Tp>	pair<_T1, _T2>
allocator<pair<const _Key, _Tp>>	allocator<_Tp>
equal_to<_Key>	equal_to<_Tp>
hash<_Key>	hash<_Tp>
_Hashtable_traits<value, false, true>	_Hashtable_traits<_Cache_hash_code, _Constant_iterators, _Unique_keys>
pair<const _Key, _Tp>	pair<_T1, _T2>
allocator<pair<const _Key, _Tp>>	allocator<_Tp>
equal_to<_Key>	equal_to<_Tp>
hash<_Key>	hash<_Tp>
unordered_multimap<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>	unordered_multimap<_Key, _Tp, _Hash, _Pred, _Alloc>
unordered_map<_Key1, _Tp1, _Hash1, _Pred1, _Alloc1>	unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
_Hashtable<_Key, pair<const _Key, _Tp>, _Alloc, _Select1st, _Pred, _Hash, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<value, false, true>>	_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
pair<const_iterator, const_iterator>	pair<_T1, _T2>
pair<iterator, iterator>	pair<_T1, _T2>
initializer_list<value_type>	initializer_list<_E>
pair<const_iterator, const_iterator>	pair<_T1, _T2>
pair<iterator, iterator>	pair<_T1, _T2>
initializer_list<value_type>	initializer_list<_E>
_Hashtable<_Key, pair<const _Key, _Tp>, _Alloc, _Select1st, _Pred, _Hash, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<value, false, false>>	_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
_Hashtable<_Key, pair<const _Key, _Tp>, _Alloc, _Select1st, _Pred, _Hash, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Tr>	_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
_Hashtable_traits<_Cache, false, false>	_Hashtable_traits<_Cache_hash_code, _Constant_iterators, _Unique_keys>
_Hashtable<_Key, pair<const _Key, _Tp>, _Alloc, _Select1st, _Pred, _Hash, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Tr>	_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
_Hashtable_traits<_Cache, false, true>	_Hashtable_traits<_Cache_hash_code, _Constant_iterators, _Unique_keys>
unordered_multiset<_Value, _Hash, _Pred, _Alloc>	unordered_multiset<_Value, _Hash, _Pred, _Alloc>
unordered_multiset<_Value, _Hash, _Pred, _Alloc>	unordered_multiset<_Value, _Hash, _Pred, _Alloc>
unordered_set<_Value, _Hash, _Pred, _Alloc>	unordered_set<_Value, _Hash, _Pred, _Alloc>
unordered_set<_Value, _Hash, _Pred, _Alloc>	unordered_set<_Value, _Hash, _Pred, _Alloc>
unordered_multiset<_Value, _Hash, _Pred, _Alloc>	unordered_multiset<_Value, _Hash, _Pred, _Alloc>
unordered_set<_Value, _Hash, _Pred, _Alloc>	unordered_set<_Value, _Hash, _Pred, _Alloc>
allocator<_Value>	allocator<_Tp>
equal_to<_Value>	equal_to<_Tp>
hash<_Value>	hash<_Tp>
allocator<_Value>	allocator<_Tp>
equal_to<_Value>	equal_to<_Tp>
hash<_Value>	hash<_Tp>
_Hashtable_traits<value, true, false>	_Hashtable_traits<_Cache_hash_code, _Constant_iterators, _Unique_keys>
allocator<_Value>	allocator<_Tp>
equal_to<_Value>	equal_to<_Tp>
hash<_Value>	hash<_Tp>
_Hashtable_traits<value, true, true>	_Hashtable_traits<_Cache_hash_code, _Constant_iterators, _Unique_keys>
allocator<_Value>	allocator<_Tp>
equal_to<_Value>	equal_to<_Tp>
hash<_Value>	hash<_Tp>
unordered_multiset<_Value1, _Hash1, _Pred1, _Alloc1>	unordered_multiset<_Value, _Hash, _Pred, _Alloc>
unordered_set<_Value1, _Hash1, _Pred1, _Alloc1>	unordered_set<_Value, _Hash, _Pred, _Alloc>
pair<const_iterator, const_iterator>	pair<_T1, _T2>
pair<iterator, iterator>	pair<_T1, _T2>
_Hashtable<_Value, _Value, _Alloc, _Identity, _Pred, _Hash, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<value, true, true>>	_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
initializer_list<value_type>	initializer_list<_E>
pair<iterator, bool>	pair<_T1, _T2>
pair<const_iterator, const_iterator>	pair<_T1, _T2>
pair<iterator, iterator>	pair<_T1, _T2>
initializer_list<value_type>	initializer_list<_E>
_Hashtable<_Value, _Value, _Alloc, _Identity, _Pred, _Hash, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<value, true, false>>	_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
_Hashtable<_Value, _Value, _Alloc, _Identity, _Pred, _Hash, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Tr>	_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
_Hashtable_traits<_Cache, true, false>	_Hashtable_traits<_Cache_hash_code, _Constant_iterators, _Unique_keys>
_Hashtable<_Value, _Value, _Alloc, _Identity, _Pred, _Hash, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Tr>	_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
_Hashtable_traits<_Cache, true, true>	_Hashtable_traits<_Cache_hash_code, _Constant_iterators, _Unique_keys>
pair<_IIter1, _IIter2>	pair<_T1, _T2>
pair<_IIter1, _IIter2>	pair<_T1, _T2>
iterator_traits<_IIter>	iterator_traits<_Iterator>
iterator_traits<_IIter>	iterator_traits<_Iterator>
pair<_OIter1, _OIter2>	pair<_T1, _T2>
initializer_list<_Tp>	initializer_list<_E>
pair<_Tp, _Tp>	pair<_T1, _T2>
initializer_list<_Tp>	initializer_list<_E>
pair<_Tp, _Tp>	pair<_T1, _T2>
initializer_list<_Tp>	initializer_list<_E>
initializer_list<_Tp>	initializer_list<_E>
initializer_list<_Tp>	initializer_list<_E>
initializer_list<_Tp>	initializer_list<_E>
pair<_FIter, _FIter>	pair<_T1, _T2>
pair<_FIter, _FIter>	pair<_T1, _T2>
pair<const _Tp &, const _Tp &>	pair<_T1, _T2>
pair<const _Tp &, const _Tp &>	pair<_T1, _T2>
pair<_FIter, _FIter>	pair<_T1, _T2>
pair<_FIter, _FIter>	pair<_T1, _T2>
pair<_OutputIterator1, _OutputIterator2>	pair<_T1, _T2>
initializer_list<_Tp>	initializer_list<_E>
pair<_Tp, _Tp>	pair<_T1, _T2>
initializer_list<_Tp>	initializer_list<_E>
pair<_Tp, _Tp>	pair<_T1, _T2>
initializer_list<_Tp>	initializer_list<_E>
initializer_list<_Tp>	initializer_list<_E>
initializer_list<_Tp>	initializer_list<_E>
initializer_list<_Tp>	initializer_list<_E>
pair<_ForwardIterator, _ForwardIterator>	pair<_T1, _T2>
pair<_ForwardIterator, _ForwardIterator>	pair<_T1, _T2>
pair<const _Tp &, const _Tp &>	pair<_T1, _T2>
pair<const _Tp &, const _Tp &>	pair<_T1, _T2>
pair<_ForwardIterator, _ForwardIterator>	pair<_T1, _T2>
pair<_ForwardIterator, _ForwardIterator>	pair<_T1, _T2>
is_integral<_IntType>	is_integral<_Tp>
iterator_traits<_InputIterator>	iterator_traits<_Iterator>
iterator_traits<_InputIterator>	iterator_traits<_Iterator>
pair<_IntType, _IntType>	pair<_T1, _T2>
pair<_ForwardIterator, _ForwardIterator>	pair<_T1, _T2>
iterator_traits<_InputIterator>	iterator_traits<_Iterator>
pair<_ForwardIterator, _ForwardIterator>	pair<_T1, _T2>
__atomic_base<_ITp>	__atomic_base<_ITp>
__atomic_base<_ITp>	__atomic_base<_ITp>
__atomic_base<_ITp>	__atomic_base<_ITp>
__atomic_base<_ITp>	__atomic_base<_ITp>
__atomic_base<_ITp>	__atomic_base<_ITp>
__atomic_base<_ITp>	__atomic_base<_ITp>
atomic<_ITp>	atomic<_Tp>
atomic<_ITp>	atomic<_Tp>
atomic<_ITp>	atomic<_Tp>
atomic<_ITp>	atomic<_Tp>
__atomic_base<_ITp>	__atomic_base<_ITp>
__atomic_base<_ITp>	__atomic_base<_ITp>
__atomic_base<_ITp>	__atomic_base<_ITp>
__atomic_base<_ITp>	__atomic_base<_ITp>
__atomic_base<_ITp>	__atomic_base<_ITp>
__atomic_base<_ITp>	__atomic_base<_ITp>
atomic<_ITp>	atomic<_Tp>
atomic<_ITp>	atomic<_Tp>
atomic<_ITp>	atomic<_Tp>
atomic<_ITp>	atomic<_Tp>
atomic<_ITp>	atomic<_Tp>
atomic<_ITp>	atomic<_Tp>
atomic<_ITp>	atomic<_Tp>
atomic<_ITp>	atomic<_Tp>
atomic<_ITp>	atomic<_Tp>
atomic<_ITp>	atomic<_Tp>
atomic<_ITp>	atomic<_Tp>
atomic<_ITp>	atomic<_Tp>
atomic<_ITp>	atomic<_Tp>
atomic<_ITp>	atomic<_Tp>
atomic<_ITp>	atomic<_Tp>
atomic<_ITp>	atomic<_Tp>
atomic<_ITp>	atomic<_Tp>
atomic<_ITp>	atomic<_Tp>
atomic<_ITp>	atomic<_Tp>
atomic<_ITp>	atomic<_Tp>
atomic<_ITp>	atomic<_Tp>
atomic<_ITp>	atomic<_Tp>
atomic<_ITp>	atomic<_Tp>
atomic<_ITp>	atomic<_Tp>
atomic<_ITp>	atomic<_Tp>
atomic<_ITp>	atomic<_Tp>
atomic<_ITp>	atomic<_Tp>
atomic<_ITp>	atomic<_Tp>
__atomic_base<char32_t>	__atomic_base<_ITp>
__atomic_base<char16_t>	__atomic_base<_ITp>
__atomic_base<wchar_t>	__atomic_base<_ITp>
__atomic_base<unsigned long long>	__atomic_base<_ITp>
__atomic_base<long long>	__atomic_base<_ITp>
__atomic_base<unsigned long>	__atomic_base<_ITp>
__atomic_base<long>	__atomic_base<_ITp>
__atomic_base<unsigned int>	__atomic_base<_ITp>
__atomic_base<unsigned short>	__atomic_base<_ITp>
__atomic_base<short>	__atomic_base<_ITp>
__atomic_base<unsigned char>	__atomic_base<_ITp>
__atomic_base<signed char>	__atomic_base<_ITp>
__atomic_base<char>	__atomic_base<_ITp>
__atomic_base<bool>	__atomic_base<_ITp>
__atomic_base<_Tp *>	__atomic_base<_ITp>
function<..(..)>	function<_Signature>
function<..(..)>	function<_Signature>
function<..(..)>	function<_Signature>
function<..(..)>	function<_Signature>
function<..(..)>	function<_Signature>
_Simple_type_wrapper<_Tp>	_Simple_type_wrapper<_Tp>
reference_wrapper<_Functor>	reference_wrapper<_Tp>
_Callable<type, type>	_Callable<_Func, _Res2>
_Function_handler<..(..), _Functor>	_Function_handler<_Signature, _Functor>
_Base_manager<_Functor>	_Base_manager<_Functor>
function<_Signature>	function<_Signature>
integral_constant<bool, __stored_locally>	integral_constant<_Tp, __v>
_Callable<_Functor, type>	_Callable<_Func, _Res2>
_Maybe_unary_or_binary_function<_Res, _ArgTypes...>	_Maybe_unary_or_binary_function<_Res, _ArgTypes...>
is_void<_Res>	is_void<_Tp>
is_same<_Res2, _Res>	is_same<<unnamed>, <unnamed>>
is_convertible<_Res2, _Res>	is_convertible<_From, _To>
__or_<is_void<_Res>, is_same<_Res2, _Res>, is_convertible<_Res2, _Res>>	__or_<<unnamed>...>
is_void<_To>	is_void<_Tp>
is_same<_From, _To>	is_same<<unnamed>, <unnamed>>
is_convertible<_From, _To>	is_convertible<_From, _To>
__or_<is_void<_To>, is_same<_From, _To>, is_convertible<_From, _To>>	__or_<<unnamed>...>
_Simple_type_wrapper<_Member _Class::*>	_Simple_type_wrapper<_Tp>
_Base_manager<_Simple_type_wrapper<_Member _Class::*>>	_Base_manager<_Functor>
_Function_handler<..(..), _Member _Class::*>	_Function_handler<_Signature, _Functor>
_Base_manager<_Functor>	_Base_manager<_Functor>
__is_location_invariant<_Tp>	__is_location_invariant<_Tp>
is_void<unique_ptr<_Result_base, _Deleter>>	is_void<_Tp>
unique_ptr<_Result<void>, _Deleter>	unique_ptr<_Tp, _Dp>
is_same<unique_ptr<_Result<void>, _Deleter>, unique_ptr<_Result_base, _Deleter>>	is_same<<unnamed>, <unnamed>>
is_convertible<unique_ptr<_Result<void>, _Deleter>, unique_ptr<_Result_base, _Deleter>>	is_convertible<_From, _To>
__or_<is_void<unique_ptr<_Result_base, _Deleter>>, is_same<unique_ptr<_Result<void>, _Deleter>, unique_ptr<_Result_base, _Deleter>>, is_convertible<unique_ptr<_Result<void>, _Deleter>, unique_ptr<_Result_base, _Deleter>>>	__or_<_B1, _B2, _B3, _Bn...>
is_void<bool>	is_void<_Tp>
is_same<bool, bool>	is_same<_Tp, _Tp>
is_convertible<bool, bool>	is_convertible<_From, _To>
__or_<is_void<bool>, is_same<bool, bool>, is_convertible<bool, bool>>	__or_<_B1, _B2, _B3, _Bn...>
_Bindres_helper<_Result, _Func, _BoundArgs...>	_Bindres_helper<_Result, _Func, _BoundArgs...>
_Bind_helper<value, _Func, _BoundArgs...>	_Bind_helper<_SocketLike, _Func, _BoundArgs...>
is_integral<type>	is_integral<_Tp>
is_enum<type>	is_enum<_Tp>
__or_<is_integral<type>, is_enum<type>>	__or_<<unnamed>...>
decay<_Tp>	decay<_Tp>
is_placeholder<_Arg>	is_placeholder<_Tp>
is_bind_expression<_Arg>	is_bind_expression<_Tp>
_Placeholder<_Num>	_Placeholder<_Num>
_Placeholder<29>	_Placeholder<_Num>
_Placeholder<28>	_Placeholder<_Num>
_Placeholder<27>	_Placeholder<_Num>
_Placeholder<26>	_Placeholder<_Num>
_Placeholder<25>	_Placeholder<_Num>
_Placeholder<24>	_Placeholder<_Num>
_Placeholder<23>	_Placeholder<_Num>
_Placeholder<22>	_Placeholder<_Num>
_Placeholder<21>	_Placeholder<_Num>
_Placeholder<20>	_Placeholder<_Num>
_Placeholder<19>	_Placeholder<_Num>
_Placeholder<18>	_Placeholder<_Num>
_Placeholder<17>	_Placeholder<_Num>
_Placeholder<16>	_Placeholder<_Num>
_Placeholder<15>	_Placeholder<_Num>
_Placeholder<14>	_Placeholder<_Num>
_Placeholder<13>	_Placeholder<_Num>
_Placeholder<12>	_Placeholder<_Num>
_Placeholder<11>	_Placeholder<_Num>
_Placeholder<10>	_Placeholder<_Num>
_Placeholder<9>	_Placeholder<_Num>
_Placeholder<8>	_Placeholder<_Num>
_Placeholder<7>	_Placeholder<_Num>
_Placeholder<6>	_Placeholder<_Num>
_Placeholder<5>	_Placeholder<_Num>
_Placeholder<4>	_Placeholder<_Num>
_Placeholder<3>	_Placeholder<_Num>
_Placeholder<2>	_Placeholder<_Num>
_Placeholder<1>	_Placeholder<_Num>
is_member_function_pointer<_MemFunPtr>	is_member_function_pointer<_Tp>
tuple<_Args...>	tuple<_Elements...>
_Index_tuple<_Indexes...>	_Index_tuple<_Indexes...>
tuple<_Args...>	tuple<_Elements...>
tuple<_Args...>	tuple<_Elements...>
tuple<_Args...>	tuple<_Elements...>
tuple<_Args...>	tuple<_Elements...>
tuple<_Args...>	tuple<_Elements...>
tuple<_Args...>	tuple<_Elements...>
tuple<_Args...>	tuple<_Elements...>
tuple<_Args...>	tuple<_Elements...>
tuple<_Args...>	tuple<_Elements...>
tuple<_Args...>	tuple<_Elements...>
tuple<_Args...>	tuple<_Elements...>
tuple<_Args...>	tuple<_Elements...>
tuple<_Args...>	tuple<_Elements...>
_Bind_check_arity<type, _BoundArgs...>	_Bind_check_arity<_Func, _BoundArgs...>
_Bind_check_arity<type, _BoundArgs...>	_Bind_check_arity<_Func, _BoundArgs...>
is_integral<_Tp2>	is_integral<_Tp>
is_enum<_Tp2>	is_enum<_Tp>
__or_<is_integral<_Tp2>, is_enum<_Tp2>>	__or_<<unnamed>...>
_Weak_result_type<_Functor>	_Weak_result_type<_Functor>
_Mu<type, value, <expression>>	_Mu<_Arg, _IsBindExp, _IsPlaceholder>
_Mu<type, value, <expression>>	_Mu<_Arg, _IsBindExp, _IsPlaceholder>
_Mu<type, value, <expression>>	_Mu<_Arg, _IsBindExp, _IsPlaceholder>
_Mu<type, value, <expression>>	_Mu<_Arg, _IsBindExp, _IsPlaceholder>
_Mu<type, value, <expression>>	_Mu<_Arg, _IsBindExp, _IsPlaceholder>
_Mu<type, value, <expression>>	_Mu<_Arg, _IsBindExp, _IsPlaceholder>
_Mu<type, value, <expression>>	_Mu<_Arg, _IsBindExp, _IsPlaceholder>
integral_constant<int, _Num>	integral_constant<_Tp, __v>
integral_constant<int, 0>	integral_constant<_Tp, __v>
_Mem_fn_base<_Res _Class::*, value>	_Mem_fn_base<_MemFunPtr, __is_mem_fn>
_Mem_fn_traits<_MemFunPtr>	_Mem_fn_traits<_Signature>
tuple<_Bound_args...>	tuple<_Elements...>
tuple<_Bound_args...>	tuple<_Elements...>
ratio<1000000000000000000L, 1L>	ratio<_Num, _Den>
ratio<1000000000000000L, 1L>	ratio<_Num, _Den>
ratio<1000000000000L, 1L>	ratio<_Num, _Den>
ratio<1000000000L, 1L>	ratio<_Num, _Den>
ratio<100L, 1L>	ratio<_Num, _Den>
ratio<10L, 1L>	ratio<_Num, _Den>
ratio<1L, 10L>	ratio<_Num, _Den>
ratio<1L, 100L>	ratio<_Num, _Den>
ratio<1L, 1000000000000L>	ratio<_Num, _Den>
ratio<1L, 1000000000000000L>	ratio<_Num, _Den>
ratio<1L, 1000000000000000000L>	ratio<_Num, _Den>
ratio<value, den>	ratio<_Num, _Den>
ratio<value, den>	ratio<_Num, _Den>
ratio_less<ratio<value, den>, ratio<value, den>>	ratio_less<_R1, _R2>
__static_abs<num>	__static_abs<_Pn>
__static_abs<num>	__static_abs<_Pn>
__static_sign<num>	__static_sign<_Pn>
__static_sign<num>	__static_sign<_Pn>
__big_mul<num, den>	__big_mul<__x, __y>
__big_mul<num, den>	__big_mul<__x, __y>
ratio<__quot_lo, __lo>	ratio<_Num, _Den>
__big_mul<<expression>, __d2>	__big_mul<__x, __y>
__big_div<__hi, __lo, __g2>	__big_div<__n1, __n0, __d>
__big_div<__hi, __lo, __g>	__big_div<__n1, __n0, __d>
__big_sub<__hi, __lo, __hi, __lo>	__big_sub<__hi1, __lo1, __hi2, __lo2>
__big_mul<<expression>, <expression>>	__big_mul<__x, __y>
__big_mul<num, <expression>>	__big_mul<__x, __y>
__big_mul<den, __d2>	__big_mul<__x, __y>
__ratio_add_impl<_R2, _R1, <expression>, <expression>, value>	__ratio_add_impl<_R1, _R2, <unnamed>, <unnamed>, <unnamed>>
ratio<__quot_lo, __lo>	ratio<_Num, _Den>
__big_mul<<expression>, __d2>	__big_mul<__x, __y>
__big_div<__hi, __lo, __g2>	__big_div<__n1, __n0, __d>
__big_div<__hi, __lo, __g>	__big_div<__n1, __n0, __d>
__big_add<__hi, __lo, __hi, __lo>	__big_add<__hi1, __lo1, __hi2, __lo2>
__big_mul<num, <expression>>	__big_mul<__x, __y>
__big_mul<den, __d2>	__big_mul<__x, __y>
ratio<<expression>, den>	ratio<_Num, _Den>
integral_constant<bool, value>	integral_constant<_Tp, __v>
integral_constant<bool, value>	integral_constant<_Tp, __v>
ratio<value, value>	ratio<_Num, _Den>
ratio<num, den>	ratio<_Num, _Den>
__big_add<__hi, __lo, __lo, __rem>	__big_add<__hi1, __lo1, __hi2, __lo2>
__big_mul<__quot_hi, __d>	__big_mul<__x, __y>
__big_mul<__quot_lo, __d>	__big_mul<__x, __y>
__big_div_impl<__new_n1, __new_n0, __new_d>	__big_div_impl<__n1, __n0, __d>
__big_add<__hi, __lo, 0UL, __rem>	__big_add<__hi1, __lo1, __hi2, __lo2>
__big_mul<__quot, __d>	__big_mul<__x, __y>
__big_add<__mix_hi, __mix_lo, __x1y1, __x0y0>	__big_add<__hi1, __lo1, __hi2, __lo2>
integral_constant<long, value>	integral_constant<_Tp, __v>
integral_constant<long, value>	integral_constant<_Tp, __v>
__static_gcd<_Qn, <expression>>	__static_gcd<_Pn, _Qn>
integral_constant<long, <expression>>	integral_constant<_Tp, __v>
__ratio_multiply<ratio<1L, 1L>, ratio<1000000000L, 1L>>	__ratio_multiply<_R1, _R2>
__ratio_divide<ratio<1L, 1L>, ratio<1L, 1000000000L>>	__ratio_divide<_R1, _R2>
__ratio_multiply<ratio<1L, 1000000000L>, ratio<1L, 1L>>	__ratio_multiply<_R1, _R2>
__ratio_divide<ratio<1L, 1000000000L>, ratio<1L, 1L>>	__ratio_divide<_R1, _R2>
__big_less<__hi1, __lo1, __hi2, __lo2>	__big_less<__hi1, __lo1, __hi2, __lo2>
time_point<system_clock, duration<signed long, ratio<1L, 1L>>>	time_point<_Clock, _Dur>
time_point<system_clock, duration<signed long, ratio<1L, 1000000000L>>>	time_point<_Clock, _Dur>
time_point<_Clock, _Dur2>	time_point<_Clock, _Dur>
time_point<_Clock, _Dur1>	time_point<_Clock, _Dur>
time_point<_Clock, _Dur2>	time_point<_Clock, _Dur>
time_point<_Clock, _Dur1>	time_point<_Clock, _Dur>
time_point<_Clock, _Dur2>	time_point<_Clock, _Dur>
time_point<_Clock, _Dur1>	time_point<_Clock, _Dur>
time_point<_Clock, _Dur2>	time_point<_Clock, _Dur>
time_point<_Clock, _Dur1>	time_point<_Clock, _Dur>
time_point<_Clock, _Dur2>	time_point<_Clock, _Dur>
time_point<_Clock, _Dur1>	time_point<_Clock, _Dur>
time_point<_Clock, _Dur2>	time_point<_Clock, _Dur>
time_point<_Clock, _Dur1>	time_point<_Clock, _Dur>
time_point<_Clock, _Dur2>	time_point<_Clock, _Dur>
time_point<_Clock, _Dur1>	time_point<_Clock, _Dur>
common_type<_Dur1, _Dur2>	common_type<_Tp...>
duration<_Rep2, _Period2>	duration<_Rep, _Period>
time_point<_Clock, _Dur1>	time_point<_Clock, _Dur>
time_point<_Clock, type>	time_point<_Clock, _Dur>
common_type<_Dur1, duration<_Rep2, _Period2>>	common_type<_Tp...>
time_point<_Clock, _Dur2>	time_point<_Clock, _Dur>
duration<_Rep1, _Period1>	duration<_Rep, _Period>
time_point<_Clock, type>	time_point<_Clock, _Dur>
common_type<duration<_Rep1, _Period1>, _Dur2>	common_type<_Tp...>
duration<_Rep2, _Period2>	duration<_Rep, _Period>
time_point<_Clock, _Dur1>	time_point<_Clock, _Dur>
time_point<_Clock, type>	time_point<_Clock, _Dur>
common_type<_Dur1, duration<_Rep2, _Period2>>	common_type<_Tp...>
time_point<_Clock, _Dur>	time_point<_Clock, _Dur>
time_point<_Clock, _ToDur>	time_point<_Clock, _Dur>
enable_if<value, time_point<_Clock, _ToDur>>	enable_if<<unnamed>, _Tp>
__is_duration<_ToDur>	__is_duration<_Tp>
ratio<3600L, 1L>	ratio<_Num, _Den>
duration<signed long, ratio<3600L, 1L>>	duration<_Rep, _Period>
ratio<60L, 1L>	ratio<_Num, _Den>
duration<signed long, ratio<60L, 1L>>	duration<_Rep, _Period>
duration<signed long, ratio<1L, 1000L>>	duration<_Rep, _Period>
duration<signed long, ratio<1L, 1000000L>>	duration<_Rep, _Period>
duration<_Rep2, _Period2>	duration<_Rep, _Period>
duration<_Rep1, _Period1>	duration<_Rep, _Period>
duration<_Rep2, _Period2>	duration<_Rep, _Period>
duration<_Rep1, _Period1>	duration<_Rep, _Period>
duration<_Rep2, _Period2>	duration<_Rep, _Period>
duration<_Rep1, _Period1>	duration<_Rep, _Period>
duration<_Rep2, _Period2>	duration<_Rep, _Period>
duration<_Rep1, _Period1>	duration<_Rep, _Period>
duration<_Rep2, _Period2>	duration<_Rep, _Period>
duration<_Rep1, _Period1>	duration<_Rep, _Period>
duration<_Rep2, _Period2>	duration<_Rep, _Period>
duration<_Rep1, _Period1>	duration<_Rep, _Period>
duration<_Rep2, _Period2>	duration<_Rep, _Period>
duration<_Rep1, _Period1>	duration<_Rep, _Period>
common_type<duration<_Rep1, _Period1>, duration<_Rep2, _Period2>>	common_type<_Tp...>
duration<_Rep1, _Period>	duration<_Rep, _Period>
duration<__common_rep_t<_Rep1, __disable_if_is_duration<_Rep2>, type>, _Period>	duration<_Rep, _Period>
duration<_Rep2, _Period2>	duration<_Rep, _Period>
duration<_Rep1, _Period1>	duration<_Rep, _Period>
common_type<_Rep1, _Rep2>	common_type<_Tp...>
duration<_Rep1, _Period>	duration<_Rep, _Period>
duration<__common_rep_t<_Rep1, __disable_if_is_duration<_Rep2>, type>, _Period>	duration<_Rep, _Period>
duration<_Rep2, _Period>	duration<_Rep, _Period>
duration<__common_rep_t<_Rep2, _Rep1, type>, _Period>	duration<_Rep, _Period>
duration<_Rep1, _Period>	duration<_Rep, _Period>
duration<__common_rep_t<_Rep1, _Rep2, type>, _Period>	duration<_Rep, _Period>
common_type<_Rep1, _Rep2>	common_type<_Tp...>
duration<_Rep2, _Period2>	duration<_Rep, _Period>
duration<_Rep1, _Period1>	duration<_Rep, _Period>
common_type<duration<_Rep1, _Period1>, duration<_Rep2, _Period2>>	common_type<_Tp...>
duration<_Rep2, _Period2>	duration<_Rep, _Period>
duration<_Rep1, _Period1>	duration<_Rep, _Period>
common_type<duration<_Rep1, _Period1>, duration<_Rep2, _Period2>>	common_type<_Tp...>
duration<_Rep, _Period>	duration<_Rep, _Period>
duration<_Rep, _Period>	duration<_Rep, _Period>
time_point<_Clock, _Duration2>	time_point<_Clock, _Dur>
time_point<_Clock, _Duration1>	time_point<_Clock, _Dur>
duration<_Rep2, _Period2>	duration<_Rep, _Period>
duration<_Rep1, _Period1>	duration<_Rep, _Period>
__duration_cast_impl<_ToDur, type, type, <expression>, <expression>>	__duration_cast_impl<_ToDur, _CF, _CR, _NumIsOne, _DenIsOne>
numeric_limits<_Rep>	numeric_limits<_Tp>
duration<_Rep, _Period>	duration<_Rep, _Period>
duration<_Rep, _Period>	duration<_Rep, _Period>
duration<_Rep, _Period>	duration<_Rep, _Period>
duration<_Rep, _Period>	duration<_Rep, _Period>
time_point<clock, _Dur2>	time_point<_Clock, _Dur>
duration_values<_Rep>	duration_values<_Rep>
duration<_Rep2, _Period2>	duration<_Rep, _Period>
enable_if<true, time_point<system_clock, duration<signed long, ratio<1L, 1000000000L>>>>	enable_if<true, _Tp>
enable_if<true, duration<signed long, ratio<1L, 1L>>>	enable_if<true, _Tp>
time_point<_Clock, type>	time_point<_Clock, _Dur>
__success_type<time_point<_Clock, type>>	__success_type<_Tp>
duration<type, ratio<value, <expression>>>	duration<_Rep, _Period>
__success_type<duration<type, ratio<value, <expression>>>>	__success_type<_Tp>
__static_gcd<den, den>	__static_gcd<_Pn, _Qn>
__static_gcd<num, num>	__static_gcd<_Pn, _Qn>
enable_if<true, duration<signed long, ratio<1L, 1000000000L>>>	enable_if<true, _Tp>
is_floating_point<_Rep>	is_floating_point<_Tp>
treat_as_floating_point<_Rep2>	treat_as_floating_point<_Rep>
__is_ratio<_Period>	__is_ratio<_Tp>
__is_duration<_Rep>	__is_duration<_Tp>
__hash_base<unsigned long, error_code>	__hash_base<_Result, _Arg>
enable_if<value, error_condition &>	enable_if<<unnamed>, _Tp>
is_error_condition_enum<_ErrorConditionEnum>	is_error_condition_enum<_Tp>
enable_if<value, void>	enable_if<<unnamed>, _Tp>
is_error_condition_enum<_ErrorConditionEnum>	is_error_condition_enum<_Tp>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
enable_if<value, error_code &>	enable_if<<unnamed>, _Tp>
is_error_code_enum<_ErrorCodeEnum>	is_error_code_enum<_Tp>
enable_if<value, void>	enable_if<<unnamed>, _Tp>
is_error_code_enum<_ErrorCodeEnum>	is_error_code_enum<_Tp>
less<const error_category *>	less<_Tp *>
unique_lock<_Mutex>	unique_lock<_Mutex>
duration<_Rep, _Period>	duration<_Rep, _Period>
time_point<_Clock, _Duration>	time_point<_Clock, _Dur>
duration<_Rep, _Period>	duration<_Rep, _Period>
time_point<_Clock, _Duration>	time_point<_Clock, _Dur>
unique_lock<_Lock>	unique_lock<_Mutex>
time_point<_Clock, _Duration>	time_point<_Clock, _Dur>
duration<_Rep, _Period>	duration<_Rep, _Period>
__timed_mutex_impl<recursive_timed_mutex>	__timed_mutex_impl<_Derived>
time_point<_Clock, _Duration>	time_point<_Clock, _Dur>
duration<_Rep, _Period>	duration<_Rep, _Period>
__timed_mutex_impl<timed_mutex>	__timed_mutex_impl<_Derived>
tuple<_Lock &...>	tuple<_Elements...>
tuple<_Lock &...>	tuple<_Elements...>
time_point<_Clock, _Duration>	time_point<_Clock, _Dur>
time_point<__clock_t, _Duration>	time_point<_Clock, _Dur>
duration<_Rep, _Period>	duration<_Rep, _Period>
_Vector_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	_Vector_base<_Tp, _Alloc>
_Vector_base<basic_string<char, char_traits<char>, allocator<char>>, allocator<basic_string<char, char_traits<char>, allocator<char>>>>	_Vector_base<_Tp, _Alloc>
vector<basic_string<char, char_traits<char>, allocator<char>>, allocator<basic_string<char, char_traits<char>, allocator<char>>>>	vector<_Tp, _Alloc>
_Vector_base<element_t, allocator<element_t>>	_Vector_base<_Tp, _Alloc>
vector<element_t, allocator<element_t>>	vector<_Tp, _Alloc>
_Vector_base<element_t, allocator<element_t>>	_Vector_base<_Tp, _Alloc>
vector<element_t, allocator<element_t>>	vector<_Tp, _Alloc>
_Vector_base<unique_ptr<profile_item_t, default_delete<profile_item_t>>, allocator<unique_ptr<profile_item_t, default_delete<profile_item_t>>>>	_Vector_base<_Tp, _Alloc>
vector<unique_ptr<profile_item_t, default_delete<profile_item_t>>, allocator<unique_ptr<profile_item_t, default_delete<profile_item_t>>>>	vector<_Tp, _Alloc>
_Vector_base<shared_ptr<event_t>, allocator<shared_ptr<event_t>>>	_Vector_base<_Tp, _Alloc>
vector<shared_ptr<event_t>, allocator<shared_ptr<event_t>>>	vector<_Tp, _Alloc>
_Vector_base<unique_ptr<process_t, default_delete<process_t>>, allocator<unique_ptr<process_t, default_delete<process_t>>>>	_Vector_base<_Tp, _Alloc>
vector<unique_ptr<process_t, default_delete<process_t>>, allocator<unique_ptr<process_t, default_delete<process_t>>>>	vector<_Tp, _Alloc>
_Vector_base<concrete_assignment, allocator<concrete_assignment>>	_Vector_base<_Tp, _Alloc>
vector<concrete_assignment, allocator<concrete_assignment>>	vector<_Tp, _Alloc>
_Vector_base<redirection_spec_t, allocator<redirection_spec_t>>	_Vector_base<_Tp, _Alloc>
vector<redirection_spec_t, allocator<redirection_spec_t>>	vector<_Tp, _Alloc>
_Vector_base<shared_ptr<const io_data_t>, allocator<shared_ptr<const io_data_t>>>	_Vector_base<_Tp, _Alloc>
vector<shared_ptr<const io_data_t>, allocator<shared_ptr<const io_data_t>>>	vector<_Tp, _Alloc>
_Vector_base<int, allocator<int>>	_Vector_base<_Tp, _Alloc>
vector<int, allocator<int>>	vector<_Tp, _Alloc>
iterator<random_access_iterator_tag, bool, long, bool *, bool &>	iterator<_Category, _Tp, _Distance, _Pointer, _Reference>
initializer_list<bool>	initializer_list<_E>
reverse_iterator<_Bit_const_iterator>	reverse_iterator<_Iterator>
reverse_iterator<_Bit_iterator>	reverse_iterator<_Iterator>
__alloc_traits<other, value_type>	__alloc_traits<_Alloc, <unnamed>>
__hash_base<unsigned long, vector<bool, _Alloc>>	__hash_base<_Result, _Arg>
_Bvector_base<_Alloc>	_Bvector_base<_Alloc>
_Bvector_base<allocator<bool>>	_Bvector_base<_Alloc>
vector<bool, allocator<bool>>	vector<bool, _Alloc>
hash<vector<bool, _Alloc>>	hash<_Tp>
vector<bool, _Alloc>	vector<_Tp, _Alloc>
lock_guard<mutex>	lock_guard<_Mutex>
function<..(..)>	function<..(..)>
null_terminated_array_t<char>	null_terminated_array_t<CharT>
null_terminated_array_t<wchar_t>	null_terminated_array_t<CharT>
char_traits<CharT>	char_traits<_CharT>
allocator<CharT>	allocator<_Tp>
basic_string<CharT, char_traits<CharT>, allocator<CharT>>	basic_string<_CharT, _Traits, _Alloc>
allocator<basic_string<CharT, char_traits<CharT>, allocator<CharT>>>	allocator<_Tp>
vector<basic_string<CharT, char_traits<CharT>, allocator<CharT>>, allocator<basic_string<CharT, char_traits<CharT>, allocator<CharT>>>>	vector<_Tp, _Alloc>
shared_ptr<env_stack_t>	shared_ptr<_Tp>
shared_ptr<environment_t>	shared_ptr<_Tp>
shared_ptr<const null_terminated_array_t<char>>	shared_ptr<_Tp>
allocator<event_t>	allocator<_Tp>
vector<event_t, allocator<event_t>>	vector<_Tp, _Alloc>
maybe_t<env_var_t>	maybe_t<T>
unique_ptr<env_stack_impl_t, default_delete<env_stack_impl_t>>	unique_ptr<_Tp, _Dp>
acquired_lock<const env_stack_impl_t>	acquired_lock<Data>
acquired_lock<env_stack_impl_t>	acquired_lock<Data>
pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>	pair<_T1, _T2>
allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>>	allocator<_Tp>
unordered_map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>>>	unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
shared_ptr<const vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	shared_ptr<_Tp>
__shared_ptr_access<env_stack_t, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
__shared_ptr<env_stack_t, _S_atomic>	__shared_ptr<_Tp, _Lp>
remove_extent<env_stack_t>	remove_extent<_Tp>
__shared_ptr<const vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _S_atomic>	__shared_ptr<_Tp, _Lp>
__shared_ptr_access<const vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
remove_reference<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> &>	remove_reference<_Tp &>
remove_reference<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &>	remove_reference<_Tp &>
initializer_list<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	initializer_list<_E>
shared_ptr<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	shared_ptr<_Tp>
remove_reference<shared_ptr<const vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>> &>	remove_reference<_Tp &>
unique_ptr<autoload_file_cache_t, default_delete<autoload_file_cache_t>>	unique_ptr<_Tp, _Dp>
unordered_set<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	unordered_set<_Value, _Hash, _Pred, _Alloc>
unordered_map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>>>	unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
_Hashtable_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, _Identity, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Hashtable_traits<true, true, true>>	_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>
deque<_Tp, allocator<_Tp>>	deque<_Tp, _Alloc>
deque<_Tp, _Alloc>	deque<_Tp, _Alloc>
deque<_Tp, _Alloc>	deque<_Tp, _Alloc>
deque<_Tp, _Alloc>	deque<_Tp, _Alloc>
deque<_Tp, _Alloc>	deque<_Tp, _Alloc>
deque<_Tp, _Alloc>	deque<_Tp, _Alloc>
deque<_Tp, _Alloc>	deque<_Tp, _Alloc>
deque<_Tp, _Alloc>	deque<_Tp, _Alloc>
allocator<_Tp>	allocator<_Tp>
_Deque_iterator<_Tp, _Tp &, _Tp *>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, _Tp &, _Tp *>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, const _Tp &, const _Tp *>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, _Tp &, _Tp *>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, _Tp &, _Tp *>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, const _Tp &, const _Tp *>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, _Tp &, _Tp *>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, _Tp &, _Tp *>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, const _Tp &, const _Tp *>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, _Tp &, _Tp *>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, _Tp &, _Tp *>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, const _Tp &, const _Tp *>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, _Tp &, _Tp *>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, _Ref, _Ptr>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, _RefR, _PtrR>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, _RefL, _PtrL>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, _Ref, _Ptr>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, _RefR, _PtrR>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, _RefL, _PtrL>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, _Ref, _Ptr>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, _RefR, _PtrR>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, _RefL, _PtrL>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, _Ref, _Ptr>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, _RefR, _PtrR>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, _RefL, _PtrL>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, _Ref, _Ptr>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, _RefR, _PtrR>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, _RefL, _PtrL>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, _Ref, _Ptr>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, _RefR, _PtrR>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, _RefL, _PtrL>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, _Ref, _Ptr>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, _RefR, _PtrR>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, _RefL, _PtrL>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, _Ref, _Ptr>	_Deque_iterator<_Tp, _Ref, _Ptr>
initializer_list<_Tp>	initializer_list<_E>
reverse_iterator<const_iterator>	reverse_iterator<_Iterator>
reverse_iterator<iterator>	reverse_iterator<_Iterator>
_Deque_base<_Tp, _Alloc>	_Deque_base<_Tp, _Alloc>
_Deque_iterator<_Tp, const _Tp &, const_pointer>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, _Tp &, pointer>	_Deque_iterator<_Tp, _Ref, _Ptr>
__alloc_traits<other, value_type>	__alloc_traits<_Alloc, <unnamed>>
__alloc_traits<other, value_type>	__alloc_traits<_Alloc, <unnamed>>
_Deque_iterator<_Tp, _CvTp &, rebind<_CvTp>>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, const _Tp &, const _Tp *>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, _Tp &, _Tp *>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, const _Tp &, const _Tp *>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, _Tp &, _Tp *>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, const _Tp &, const _Tp *>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, _Tp &, _Tp *>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, const _Tp &, const _Tp *>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, _Tp &, _Tp *>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, _Tp &, _Tp *>	_Deque_iterator<_Tp, _Ref, _Ptr>
is_same<type, _Tp>	is_same<<unnamed>, <unnamed>>
_Deque_base<block_t, allocator<block_t>>	_Deque_base<_Tp, _Alloc>
deque<block_t, allocator<block_t>>	deque<_Tp, _Alloc>
_Deque_base<shared_ptr<job_t>, allocator<shared_ptr<job_t>>>	_Deque_base<_Tp, _Alloc>
deque<shared_ptr<job_t>, allocator<shared_ptr<job_t>>>	deque<_Tp, _Alloc>
_Rb_tree_const_iterator<_Val>	_Rb_tree_const_iterator<_Tp>
_Rb_tree_iterator<_Val>	_Rb_tree_iterator<_Tp>
pair<iterator, bool>	pair<_T1, _T2>
_Rb_tree_node<_Val>	_Rb_tree_node<_Val>
pair<_Rb_tree_node_base *, _Rb_tree_node_base *>	pair<_T1, _T2>
pair<_Rb_tree_const_iterator<_Val>, _Rb_tree_const_iterator<_Val>>	pair<_T1, _T2>
pair<_Rb_tree_iterator<_Val>, _Rb_tree_iterator<_Val>>	pair<_T1, _T2>
_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>	_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>
allocator<_Val>	allocator<_Tp>
_Rb_tree_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>	_Rb_tree_const_iterator<_Tp>
_Select1st<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>	_Select1st<_Pair>
less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	less<_Tp>
_Rb_tree<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>, _Select1st<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>, less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>>	_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>
_Rb_tree_impl<_Compare, <expression>>	_Rb_tree_impl<_Key_compare, <unnamed>>
reverse_iterator<_Rb_tree_const_iterator<_Val>>	reverse_iterator<_Iterator>
reverse_iterator<_Rb_tree_iterator<_Val>>	reverse_iterator<_Iterator>
__alloc_traits<other, value_type>	__alloc_traits<_Alloc, <unnamed>>
_Rb_tree_iterator<_Tp>	_Rb_tree_iterator<_Tp>
_Rb_tree_node<_Tp>	_Rb_tree_node<_Val>
__aligned_membuf<_Val>	__aligned_membuf<_Tp>
is_same<_Val, value_type>	is_same<<unnamed>, <unnamed>>
_Rb_tree_key_compare<_Key_compare>	_Rb_tree_key_compare<_Key_compare>
_Rb_tree_node<_Tp>	_Rb_tree_node<_Val>
__is_invocable<_Compare &, const _Key &, const _Key &>	__is_invocable<_Fn, _ArgTypes...>
map<_Key, _Tp, _Compare, _Alloc>	map<_Key, _Tp, _Compare, _Alloc>
map<_Key, _Tp, _Compare, _Alloc>	map<_Key, _Tp, _Compare, _Alloc>
map<_Key, _Tp, _Compare, _Alloc>	map<_Key, _Tp, _Compare, _Alloc>
map<_Key, _Tp, _Compare, _Alloc>	map<_Key, _Tp, _Compare, _Alloc>
map<_Key, _Tp, _Compare, _Alloc>	map<_Key, _Tp, _Compare, _Alloc>
map<_Key, _Tp, _Compare, _Alloc>	map<_Key, _Tp, _Compare, _Alloc>
map<_Key, _Tp, _Compare, _Alloc>	map<_Key, _Tp, _Compare, _Alloc>
pair<const _Key, _Tp>	pair<_T1, _T2>
allocator<pair<const _Key, _Tp>>	allocator<_Tp>
less<_Key>	less<_Tp>
map<_K1, _T1, _C1, _A1>	map<_Key, _Tp, _Compare, _Alloc>
map<_K1, _T1, _C1, _A1>	map<_Key, _Tp, _Compare, _Alloc>
pair<const_iterator, const_iterator>	pair<_T1, _T2>
pair<iterator, iterator>	pair<_T1, _T2>
_Select1st<pair<const _Key, _Tp>>	_Select1st<_Pair>
_Rb_tree<_Key, pair<const _Key, _Tp>, _Select1st<pair<const _Key, _Tp>>, _Compare, other>	_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>
initializer_list<pair<const _Key, _Tp>>	initializer_list<_E>
__alloc_traits<other, value_type>	__alloc_traits<_Alloc, <unnamed>>
binary_function<pair<const _Key, _Tp>, pair<const _Key, _Tp>, bool>	binary_function<_Arg1, _Arg2, _Result>
multimap<_Key, _Tp, _Compare, _Alloc>	multimap<_Key, _Tp, _Compare, _Alloc>
multimap<_Key, _Tp, _Compare, _Alloc>	multimap<_Key, _Tp, _Compare, _Alloc>
multimap<_Key, _Tp, _Compare, _Alloc>	multimap<_Key, _Tp, _Compare, _Alloc>
multimap<_Key, _Tp, _Compare, _Alloc>	multimap<_Key, _Tp, _Compare, _Alloc>
multimap<_Key, _Tp, _Compare, _Alloc>	multimap<_Key, _Tp, _Compare, _Alloc>
multimap<_Key, _Tp, _Compare, _Alloc>	multimap<_Key, _Tp, _Compare, _Alloc>
multimap<_Key, _Tp, _Compare, _Alloc>	multimap<_Key, _Tp, _Compare, _Alloc>
pair<const _Key, _Tp>	pair<_T1, _T2>
allocator<pair<const _Key, _Tp>>	allocator<_Tp>
less<_Key>	less<_Tp>
multimap<_K1, _T1, _C1, _A1>	multimap<_Key, _Tp, _Compare, _Alloc>
multimap<_K1, _T1, _C1, _A1>	multimap<_Key, _Tp, _Compare, _Alloc>
pair<const_iterator, const_iterator>	pair<_T1, _T2>
pair<iterator, iterator>	pair<_T1, _T2>
initializer_list<pair<const _Key, _Tp>>	initializer_list<_E>
__alloc_traits<other, value_type>	__alloc_traits<_Alloc, <unnamed>>
_Select1st<pair<const _Key, _Tp>>	_Select1st<_Pair>
_Rb_tree<_Key, pair<const _Key, _Tp>, _Select1st<pair<const _Key, _Tp>>, _Compare, other>	_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>
binary_function<pair<const _Key, _Tp>, pair<const _Key, _Tp>, bool>	binary_function<_Arg1, _Arg2, _Result>
time_point<_Clock, _Duration>	time_point<_Clock, _Dur>
duration<_Rep, _Period>	duration<_Rep, _Period>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
__hash_base<unsigned long, id>	__hash_base<_Result, _Arg>
_Invoker<__decayed_tuple<_Callable, _Args...>>	_Invoker<_Tuple>
default_delete<_State>	default_delete<_Tp>
unique_ptr<_State, default_delete<_State>>	unique_ptr<_Tp, _Dp>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
_Index_tuple<_Ind...>	_Index_tuple<_Indexes...>
tuple<type...>	tuple<_Elements...>
__invoke_result<_Fn, _Args...>	__invoke_result<_Functor, _ArgTypes...>
duration<_Rep, _Period>	duration<_Rep, _Period>
duration<_Rep, _Period>	duration<_Rep, _Period>
time_point<_Clock, _Duration>	time_point<_Clock, _Dur>
time_point<_Clock, _Duration>	time_point<_Clock, _Dur>
shared_ptr<mutex>	shared_ptr<_Tp>
time_point<__clock_t, _Dur>	time_point<_Clock, _Dur>
duration<_Rep, _Period>	duration<_Rep, _Period>
duration<_Rep, _Period>	duration<_Rep, _Period>
time_point<_Clock, _Duration>	time_point<_Clock, _Dur>
time_point<_Clock, _Duration>	time_point<_Clock, _Dur>
time_point<__clock_t, _Duration>	time_point<_Clock, _Dur>
__shared_ptr_access<mutex, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
__shared_ptr<mutex, _S_atomic>	__shared_ptr<_Tp, _Lp>
time_point<__clock_t, _Duration>	time_point<_Clock, _Dur>
time_point<_Clock, _Duration>	time_point<_Clock, _Dur>
duration<_Rep, _Period>	duration<_Rep, _Period>
time_point<__clock_t, _Dur>	time_point<_Clock, _Dur>
future<__async_result_of<_Fn, _Args...>>	future<_Res>
future<__async_result_of<_Fn, _Args...>>	future<_Res>
shared_ptr<_State_baseV2>	shared_ptr<_Tp>
shared_ptr<_Task_state_base<..(..)>>	shared_ptr<_Tp>
shared_ptr<_Task_state_base<_Signature>>	shared_ptr<_Tp>
promise<_Res>	promise<_Res>
promise<_Res>	promise<_Res>
shared_future<_Res &>	shared_future<_Res>
shared_future<_Res>	shared_future<_Res>
future<_Res>	future<_Res>
shared_future<_Res>	shared_future<_Res>
shared_future<_Res>	shared_future<_Res>
__basic_future<void>	__basic_future<_Res>
_Reset	_Reset
future<__async_result_of<_Fn, _Args...>>	future<_Res>
_Task_setter<_Res_ptr, _Fn, _Res>	_Task_setter<_Ptr_type, _Fn, _Res>
_Setter<_Res, _Arg>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg>	_Setter<_Res, _Arg>
unique_ptr<_Make_ready, default_delete<_Make_ready>>	unique_ptr<_Tp, _Dp>
_Task_setter<_Res_ptr, _BoundFn, result_type>	_Task_setter<_Ptr_type, _Fn, _Res>
weak_ptr<_State_baseV2>	weak_ptr<_Tp>
shared_ptr<_Tp>	shared_ptr<_Tp>
promise<_Res>	promise<_Res>
_Setter<_Res, void>	_Setter<_Res, _Arg>
_Setter<_Res, void>	_Setter<_Res, _Arg>
_Setter<_Res, void>	_Setter<_Res, _Arg>
_Setter<_Res, void>	_Setter<_Res, _Arg>
_Setter<_Res, void>	_Setter<_Res, _Arg>
_Setter<_Res, void>	_Setter<_Res, _Arg>
_Setter<_Res, void>	_Setter<_Res, _Arg>
_Setter<_Res, void>	_Setter<_Res, _Arg>
_Setter<_Res, void>	_Setter<_Res, _Arg>
_Setter<_Res, void>	_Setter<_Res, _Arg>
_Setter<_Res, void>	_Setter<_Res, _Arg>
_Setter<_Res, void>	_Setter<_Res, _Arg>
_Setter<_Res, void>	_Setter<_Res, _Arg>
_Setter<_Res, void>	_Setter<_Res, _Arg>
_Setter<_Res, void>	_Setter<_Res, _Arg>
_Setter<_Res, void>	_Setter<_Res, _Arg>
promise<_Res>	promise<_Res>
_Setter<_Res, __exception_ptr_tag>	_Setter<_Res, _Arg>
_Setter<_Res, __exception_ptr_tag>	_Setter<_Res, _Arg>
_Setter<_Res, __exception_ptr_tag>	_Setter<_Res, _Arg>
_Setter<_Res, __exception_ptr_tag>	_Setter<_Res, _Arg>
_Setter<_Res, __exception_ptr_tag>	_Setter<_Res, _Arg>
_Setter<_Res, __exception_ptr_tag>	_Setter<_Res, _Arg>
_Setter<_Res, __exception_ptr_tag>	_Setter<_Res, _Arg>
_Setter<_Res, __exception_ptr_tag>	_Setter<_Res, _Arg>
_Setter<_Res, __exception_ptr_tag>	_Setter<_Res, _Arg>
_Setter<_Res, __exception_ptr_tag>	_Setter<_Res, _Arg>
_Setter<_Res, __exception_ptr_tag>	_Setter<_Res, _Arg>
_Setter<_Res, __exception_ptr_tag>	_Setter<_Res, _Arg>
_Setter<_Res, __exception_ptr_tag>	_Setter<_Res, _Arg>
_Setter<_Res, __exception_ptr_tag>	_Setter<_Res, _Arg>
_Setter<_Res, __exception_ptr_tag>	_Setter<_Res, _Arg>
_Setter<_Res, __exception_ptr_tag>	_Setter<_Res, _Arg>
promise<_Res>	promise<_Res>
_Setter<_Res, _Arg &&>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg &&>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg &&>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg &&>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg &&>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg &&>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg &&>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg &&>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg &&>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg &&>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg &&>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg &&>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg &&>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg &&>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg &&>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg &&>	_Setter<_Res, _Arg>
time_point<_Clock, _Duration>	time_point<_Clock, _Dur>
duration<_Rep, _Period>	duration<_Rep, _Period>
__atomic_futex_unsigned<2147483648U>	__atomic_futex_unsigned<_Waiter_bit>
allocator<_Tp>	allocator<_Tp>
_Result<_Res>	_Result<_Res>
unique_ptr<_Result<_Res>, _Deleter>	unique_ptr<_Tp, _Dp>
_Result_alloc<_Res, _Allocator>	_Result_alloc<_Res, _Alloc>
unique_ptr<_Result_alloc<_Res, _Allocator>, _Deleter>	unique_ptr<_Tp, _Dp>
future<__async_result_of<_Fn, _Args...>>	future<_Res>
future<__async_result_of<_Fn, _Args...>>	future<_Res>
future<__async_result_of<_Fn, _Args...>>	future<_Res>
future<__async_result_of<_Fn, _Args...>>	future<_Res>
future<_Res>	future<_Res>
future<_Res &>	future<_Res>
future<_Res &>	future<_Res>
shared_future<_Res &>	shared_future<_Res>
future<_Res>	future<_Res>
shared_future<_Res>	shared_future<_Res>
__shared_ptr_access<_State_baseV2, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
__shared_ptr<_State_baseV2, _S_atomic>	__shared_ptr<_Tp, _Lp>
_Result<_Res>	_Result<_Res>
time_point<_Clock, _Duration>	time_point<_Clock, _Dur>
duration<_Rep, _Period>	duration<_Rep, _Period>
future<_Res>	future<_Res>
future<_Res>	future<_Res>
shared_future<_Res>	shared_future<_Res>
__weak_ptr<_State_baseV2, _S_atomic>	__weak_ptr<_Tp, _Lp>
_Ptr<_Result_base, _Deleter, void>	_Ptr<_Up, _Ep, <unnamed>>
__uniq_ptr_impl<_Make_ready, default_delete<_Make_ready>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<_Make_ready, default_delete<_Make_ready>, void>	_Ptr<_Up, _Ep, <unnamed>>
remove_reference<weak_ptr<_State_baseV2> &>	remove_reference<_Tp &>
__add_lvalue_reference_helper<_Result_base, true>	__add_lvalue_reference_helper<_Tp, true>
_Setter<void, __exception_ptr_tag>	_Setter<_Res, __exception_ptr_tag>
_Setter<void, void>	_Setter<_Res, void>
remove_reference<future<void> &>	remove_reference<_Tp &>
remove_reference<shared_future<void> &>	remove_reference<_Tp &>
shared_ptr<_Task_state_base<..(..)>>	shared_ptr<_Tp>
shared_ptr<_Task_state_base<..(..)>>	shared_ptr<_Tp>
remove_reference<promise<void> &>	remove_reference<_Tp &>
remove_reference<unique_ptr<_Result<void>, _Deleter> &>	remove_reference<_Tp &>
remove_reference<shared_ptr<_State_baseV2> &>	remove_reference<_Tp &>
promise<_Res>	promise<_Res>
promise<_Res>	promise<_Res>
_Result<_Res &>	_Result<_Res>
unique_ptr<_Result<_Res &>, _Deleter>	unique_ptr<_Tp, _Dp>
__basic_future<_Res &>	__basic_future<_Res>
__basic_future<_Res &>	__basic_future<_Res>
_Result<_Res>	_Result<_Res>
unique_ptr<_Result<_Res>, _Deleter>	unique_ptr<_Tp, _Dp>
__basic_future<_Res>	__basic_future<_Res>
__basic_future<_Res>	__basic_future<_Res>
_Result<_Res>	_Result<_Res>
unique_ptr<_Result<_Res>, _Deleter>	unique_ptr<_Tp, _Dp>
_Result<_Res>	_Result<_Res>
unique_ptr<_Result<_Res>, _Deleter>	unique_ptr<_Tp, _Dp>
_Result<_Res>	_Result<_Res>
unique_ptr<_Result<_Res>, _Deleter>	unique_ptr<_Tp, _Dp>
unique_ptr<_Res, _Deleter>	unique_ptr<_Tp, _Dp>
_Result<_Res>	_Result<_Res>
shared_ptr<_Task_state_base<..(..)>>	shared_ptr<_Tp>
__aligned_buffer<_Res>	__aligned_buffer<_Tp>
promise<_Res>	promise<_Res>
promise<_Res>	promise<_Res>
is_void<_Res>	is_void<_Tp>
is_same<_Res, _Arg &>	is_same<<unnamed>, <unnamed>>
is_same<const _Res, _Arg>	is_same<<unnamed>, <unnamed>>
promise<_Res &>	promise<_Res>
promise<_Res>	promise<_Res>
allocator<const category_t *>	allocator<_Tp>
vector<const category_t *, allocator<const category_t *>>	vector<_Tp, _Alloc>
owning_lock<logger_t>	owning_lock<Data>
enable_if<value, void>	enable_if<<unnamed>, _Tp>
is_integral<T>	is_integral<_Tp>
maybe_t<int>	maybe_t<T>
shared_ptr<job_group_t>	shared_ptr<_Tp>
maybe_t<autoclose_pipes_t>	maybe_t<T>
shared_ptr<io_bufferfill_t>	shared_ptr<_Tp>
shared_ptr<io_buffer_t>	shared_ptr<_Tp>
remove_reference<autoclose_fd_t &>	remove_reference<_Tp &>
remove_reference<shared_ptr<io_buffer_t> &>	remove_reference<_Tp &>
__normal_iterator<const wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	__normal_iterator<_Iterator, _Container>
separated_buffer_t<RHSStringType>	separated_buffer_t<StringType>
allocator<element_t>	allocator<_Tp>
vector<element_t, allocator<element_t>>	vector<_Tp, _Alloc>
initializer_list<shared_ptr<const io_data_t>>	initializer_list<_E>
maybe_t<event_type_t>	maybe_t<T>
shared_ptr<event_handler_t>	shared_ptr<_Tp>
allocator<shared_ptr<event_handler_t>>	allocator<_Tp>
vector<shared_ptr<event_handler_t>, allocator<shared_ptr<event_handler_t>>>	vector<_Tp, _Alloc>
remove_reference<event_description_t &>	remove_reference<_Tp &>
allocator<parse_error_t>	allocator<_Tp>
vector<parse_error_t, allocator<parse_error_t>>	vector<_Tp, _Alloc>
enum_map<parse_token_type_t>	enum_map<T>
maybe_t<pipe_or_redir_t>	maybe_t<T>
maybe_t<tok_t>	maybe_t<T>
shared_ptr<const parsed_source_t>	shared_ptr<_Tp>
__hash_base<unsigned long, bitset<0UL>>	__hash_base<_Result, _Arg>
bitset<_Nb>	bitset<_Nb>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
char_traits<_CharT>	char_traits<_CharT>
allocator<_CharT>	allocator<_Tp>
basic_string<_CharT, char_traits<_CharT>, allocator<_CharT>>	basic_string<_CharT, _Traits, _Alloc>
char_traits<_CharT>	char_traits<_CharT>
allocator<_CharT>	allocator<_Tp>
basic_string<_CharT, char_traits<_CharT>, allocator<_CharT>>	basic_string<_CharT, _Traits, _Alloc>
allocator<_CharT>	allocator<_Tp>
basic_string<_CharT, _Traits, allocator<_CharT>>	basic_string<_CharT, _Traits, _Alloc>
allocator<_CharT>	allocator<_Tp>
basic_string<_CharT, _Traits, allocator<_CharT>>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
__hash_base<unsigned long, bitset<_Nb>>	__hash_base<_Result, _Arg>
_Base_bitset<<expression>>	_Base_bitset<_Nw>
hash<bitset<_Nb>>	hash<_Tp>
collate<wchar_t>	collate<_CharT>
collate_byname<wchar_t>	collate_byname<_CharT>
collate<char>	collate<_CharT>
collate_byname<char>	collate_byname<_CharT>
char_traits<_CharT>	char_traits<_CharT>
allocator<_CharT>	allocator<_Tp>
basic_string<_CharT, char_traits<_CharT>, allocator<_CharT>>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<_Char, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
char_traits<_CharT>	char_traits<_CharT>
allocator<_CharT>	allocator<_Tp>
basic_string<_CharT, char_traits<_CharT>, allocator<_CharT>>	basic_string<_CharT, _Traits, _Alloc>
collate<_CharT>	collate<_CharT>
basic_streambuf<_CharT, _Traits>	basic_streambuf<_CharT, _Traits>
basic_streambuf<_CharT, _Traits>	basic_streambuf<_CharT, _Traits>
basic_streambuf<_CharT, _Traits>	basic_streambuf<_CharT, _Traits>
basic_istream<_CharT2, _Traits2>	basic_istream<_CharT, _Traits>
basic_string<_CharT2, _Traits2, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_istream<_CharT2, _Traits2>	basic_istream<_CharT, _Traits>
basic_string<_CharT2, _Traits2, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_istream<_CharT2, _Traits2>	basic_istream<_CharT, _Traits>
char_traits<_CharT2>	char_traits<_CharT>
istreambuf_iterator<_CharT2, char_traits<_CharT2>>	istreambuf_iterator<_CharT, _Traits>
char_traits<_CharT2>	char_traits<_CharT>
istreambuf_iterator<_CharT2, char_traits<_CharT2>>	istreambuf_iterator<_CharT, _Traits>
char_traits<_CharT2>	char_traits<_CharT>
istreambuf_iterator<_CharT2, char_traits<_CharT2>>	istreambuf_iterator<_CharT, _Traits>
ostreambuf_iterator<_CharT, _Traits>	ostreambuf_iterator<_CharT, _Traits>
istreambuf_iterator<_CharT, _Traits>	istreambuf_iterator<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_ios<_CharT, _Traits>	basic_ios<_CharT, _Traits>
istreambuf_iterator<_CharT, char_traits<_CharT>>	istreambuf_iterator<_CharT, _Traits>
__enable_if<__value, void>	__enable_if<<unnamed>, <unnamed>>
__is_char<_CharT>	__is_char<_Tp>
istreambuf_iterator<_CharT, char_traits<_CharT>>	istreambuf_iterator<_CharT, _Traits>
__enable_if<__value, istreambuf_iterator<_CharT, char_traits<_CharT>>>	__enable_if<<unnamed>, <unnamed>>
__is_char<_CharT>	__is_char<_Tp>
__enable_if<__value, _CharT *>	__enable_if<<unnamed>, <unnamed>>
__is_char<_CharT>	__is_char<_Tp>
__enable_if<__value, ostreambuf_iterator<_CharT, char_traits<_CharT>>>	__enable_if<<unnamed>, <unnamed>>
__is_char<_CharT>	__is_char<_Tp>
__enable_if<__value, ostreambuf_iterator<_CharT, char_traits<_CharT>>>	__enable_if<<unnamed>, <unnamed>>
__is_char<_CharT>	__is_char<_Tp>
ostreambuf_iterator<_CharT, char_traits<_CharT>>	ostreambuf_iterator<_CharT, _Traits>
istreambuf_iterator<_CharT, char_traits<_CharT>>	istreambuf_iterator<_CharT, _Traits>
__enable_if<__value, ostreambuf_iterator<_CharT, char_traits<_CharT>>>	__enable_if<<unnamed>, <unnamed>>
__is_char<_CharT>	__is_char<_Tp>
istreambuf_iterator<_CharT, _Traits>	istreambuf_iterator<_CharT, _Traits>
istreambuf_iterator<_CharT, _Traits>	istreambuf_iterator<_CharT, _Traits>
istreambuf_iterator<_CharT2, char_traits<_CharT2>>	istreambuf_iterator<_CharT, _Traits>
ostreambuf_iterator<_CharT2, char_traits<_CharT2>>	ostreambuf_iterator<_CharT, _Traits>
istreambuf_iterator<_CharT2, char_traits<_CharT2>>	istreambuf_iterator<_CharT, _Traits>
istreambuf_iterator<_CharT2, char_traits<_CharT2>>	istreambuf_iterator<_CharT, _Traits>
istreambuf_iterator<_CharT2, char_traits<_CharT2>>	istreambuf_iterator<_CharT, _Traits>
istreambuf_iterator<_CharT2, char_traits<_CharT2>>	istreambuf_iterator<_CharT, _Traits>
ostreambuf_iterator<_CharT2, char_traits<_CharT2>>	ostreambuf_iterator<_CharT, _Traits>
basic_streambuf<_CharT, _Traits>	basic_streambuf<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_streambuf<_CharT, _Traits>	basic_streambuf<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
iterator<input_iterator_tag, _CharT, off_type, _CharT *, _CharT>	iterator<_Category, _Tp, _Distance, _Pointer, _Reference>
num_get<wchar_t, istreambuf_iterator<wchar_t, char_traits<wchar_t>>>	num_get<_CharT, _InIter>
num_put<wchar_t, ostreambuf_iterator<wchar_t, char_traits<wchar_t>>>	num_put<_CharT, _OutIter>
numpunct<wchar_t>	numpunct<_CharT>
numpunct_byname<wchar_t>	numpunct_byname<_CharT>
num_get<char, istreambuf_iterator<char, char_traits<char>>>	num_get<_CharT, _InIter>
num_put<char, ostreambuf_iterator<char, char_traits<char>>>	num_put<_CharT, _OutIter>
numpunct<char>	numpunct<_CharT>
numpunct_byname<char>	numpunct_byname<_CharT>
__ctype_abstract_base<wchar_t>	__ctype_abstract_base<_CharT>
char_traits<_CharT>	char_traits<_CharT>
ostreambuf_iterator<_CharT, char_traits<_CharT>>	ostreambuf_iterator<_CharT, _Traits>
char_traits<_CharT>	char_traits<_CharT>
allocator<_CharT>	allocator<_Tp>
basic_string<_CharT, char_traits<_CharT>, allocator<_CharT>>	basic_string<_CharT, _Traits, _Alloc>
__numpunct_cache<_CharT>	__numpunct_cache<_CharT>
char_traits<_CharT>	char_traits<_CharT>
allocator<_CharT>	allocator<_Tp>
basic_string<_CharT, char_traits<_CharT>, allocator<_CharT>>	basic_string<_CharT, _Traits, _Alloc>
numpunct<_CharT>	numpunct<_CharT>
ctype<_CharT>	ctype<_CharT>
__ctype_abstract_base<_CharT>	__ctype_abstract_base<_CharT>
basic_streambuf<_CharT, _Traits>	basic_streambuf<_CharT, _Traits>
basic_streambuf<_CharT, _Traits>	basic_streambuf<_CharT, _Traits>
basic_streambuf<_CharT, _Traits>	basic_streambuf<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
istreambuf_iterator<_CharT, _Traits>	istreambuf_iterator<_CharT, _Traits>
num_get<_CharT, istreambuf_iterator<_CharT, _Traits>>	num_get<_CharT, _InIter>
ostreambuf_iterator<_CharT, _Traits>	ostreambuf_iterator<_CharT, _Traits>
num_put<_CharT, ostreambuf_iterator<_CharT, _Traits>>	num_put<_CharT, _OutIter>
ctype<_CharT>	ctype<_CharT>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_streambuf<_CharT, _Traits>	basic_streambuf<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
enable_if<value, __rvalue_ostream_type<_Ostream>>	enable_if<<unnamed>, _Tp>
is_lvalue_reference<_Ostream>	is_lvalue_reference<<unnamed>>
__not_<is_lvalue_reference<_Ostream>>	__not_<_Pp>
__is_convertible_to_basic_ostream<_Ostream>	__is_convertible_to_basic_ostream<_Tp>
__is_insertable<__rvalue_ostream_type<_Ostream>, const _Tp &, void>	__is_insertable<_Ostream, _Tp, <unnamed>>
__and_<__not_<is_lvalue_reference<_Ostream>>, __is_convertible_to_basic_ostream<_Ostream>, __is_insertable<__rvalue_ostream_type<_Ostream>, const _Tp &, void>>	__and_<<unnamed>...>
basic_ostream<_Ch, _Up>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<char, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<char, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<char, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<char, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<char, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<char, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_iostream<_CharT, _Traits>	basic_iostream<_CharT, _Traits>
basic_ios<_CharT, _Traits>	basic_ios<_CharT, _Traits>
is_void<__ostream_type>	is_void<_Tp>
__not_<is_void<__ostream_type>>	__not_<_Pp>
__is_convertible_to_basic_ostream_impl<_Tp, void>	__is_convertible_to_basic_ostream_impl<_Tp, <unnamed>>
ctype<_CharT>	ctype<_CharT>
ostreambuf_iterator<_CharT, _Traits>	ostreambuf_iterator<_CharT, _Traits>
num_put<_CharT, ostreambuf_iterator<_CharT, _Traits>>	num_put<_CharT, _OutIter>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_streambuf<_CharT, _Traits>	basic_streambuf<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
enable_if<value, __rvalue_istream_type<_Istream>>	enable_if<<unnamed>, _Tp>
is_lvalue_reference<_Istream>	is_lvalue_reference<<unnamed>>
__not_<is_lvalue_reference<_Istream>>	__not_<_Pp>
__is_convertible_to_basic_istream<_Istream>	__is_convertible_to_basic_istream<_Tp>
__is_extractable<__rvalue_istream_type<_Istream>, _Tp &&, void>	__is_extractable<_Istream, _Tp, <unnamed>>
__and_<__not_<is_lvalue_reference<_Istream>>, __is_convertible_to_basic_istream<_Istream>, __is_extractable<__rvalue_istream_type<_Istream>, _Tp &&, void>>	__and_<<unnamed>...>
basic_istream<_Ch, _Up>	basic_istream<_CharT, _Traits>
basic_istream<char, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<char, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<char, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<char, _Traits>	basic_istream<_CharT, _Traits>
basic_streambuf<_CharT, _Traits>	basic_streambuf<_CharT, _Traits>
basic_ios<_CharT, _Traits>	basic_ios<_CharT, _Traits>
is_void<__istream_type>	is_void<_Tp>
__not_<is_void<__istream_type>>	__not_<_Pp>
__is_convertible_to_basic_istream_impl<_Tp, void>	__is_convertible_to_basic_istream_impl<_Tp, <unnamed>>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
ctype<_CharT>	ctype<_CharT>
istreambuf_iterator<_CharT, _Traits>	istreambuf_iterator<_CharT, _Traits>
num_get<_CharT, istreambuf_iterator<_CharT, _Traits>>	num_get<_CharT, _InIter>
char_traits<_CharT>	char_traits<_CharT>
istream_iterator<_Tp, _CharT, _Traits, _Dist>	istream_iterator<_Tp, _CharT, _Traits, _Dist>
istream_iterator<_Tp, _CharT, _Traits, _Dist>	istream_iterator<_Tp, _CharT, _Traits, _Dist>
char_traits<_CharT>	char_traits<_CharT>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
iterator<input_iterator_tag, _Tp, _Dist, const _Tp *, const _Tp &>	iterator<_Category, _Tp, _Distance, _Pointer, _Reference>
enum_info_t<T>	enum_info_t<T>
array<Elem, <expression>>	array<_Tp, _Nm>
initializer_list<T>	initializer_list<_E>
bitset<<expression>>	bitset<_Nb>
enum_set_t<topic_t>	enum_set_t<T>
enum_array_t<unsigned long, topic_t>	enum_array_t<Elem, T>
acquired_lock<data_t>	acquired_lock<Data>
owning_lock<data_t>	owning_lock<Data>
enum_iter_t<topic_t>	enum_iter_t<T>
maybe_t<topic_t>	maybe_t<T>
shared_ptr<internal_proc_t>	shared_ptr<_Tp>
maybe_t<termios>	maybe_t<T>
atomic<proc_status_t>	atomic<_Tp>
__shared_ptr_access<job_group_t, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
__shared_ptr<job_group_t, _S_atomic>	__shared_ptr<_Tp, _Lp>
__uniq_ptr_impl<process_t, default_delete<process_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<process_t, default_delete<process_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
__shared_ptr<internal_proc_t, _S_atomic>	__shared_ptr<_Tp, _Lp>
remove_reference<vector<redirection_spec_t, allocator<redirection_spec_t>> &>	remove_reference<_Tp &>
pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>	pair<_T1, _T2>
allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>	allocator<_Tp>
map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t, less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>>	map<_Key, _Tp, _Compare, _Alloc>
pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &, const Contents &>	pair<_T1, _T2>
list<_Tp, _Alloc>	list<_Tp, _Alloc>
list<_Tp, _Alloc>	list<_Tp, _Alloc>
list<_Tp, _Alloc>	list<_Tp, _Alloc>
list<_Tp, _Alloc>	list<_Tp, _Alloc>
list<_Tp, _Alloc>	list<_Tp, _Alloc>
list<_Tp, _Alloc>	list<_Tp, _Alloc>
list<_Tp, _Alloc>	list<_Tp, _Alloc>
allocator<_Tp>	allocator<_Tp>
_List_iterator<_Tp>	_List_iterator<_Tp>
_List_const_iterator<_Tp>	_List_const_iterator<_Tp>
initializer_list<_Tp>	initializer_list<_E>
reverse_iterator<_List_const_iterator<_Tp>>	reverse_iterator<_Iterator>
reverse_iterator<_List_iterator<_Tp>>	reverse_iterator<_Iterator>
_List_node<_Tp>	_List_node<_Tp>
_List_node<_Tp>	_List_node<_Tp>
__alloc_traits<other, value_type>	__alloc_traits<_Alloc, <unnamed>>
_List_iterator<_Tp>	_List_iterator<_Tp>
_List_base<_Tp, _Alloc>	_List_base<_Tp, _Alloc>
__alloc_traits<other, value_type>	__alloc_traits<_Alloc, <unnamed>>
_List_node<_Tp>	_List_node<_Tp>
_List_node<_Tp>	_List_node<_Tp>
__aligned_membuf<_Tp>	__aligned_membuf<_Tp>
is_same<type, _Tp>	is_same<<unnamed>, <unnamed>>
_List_base<event_blockage_t, allocator<event_blockage_t>>	_List_base<_Tp, _Alloc>
list<event_blockage_t, allocator<event_blockage_t>>	list<_Tp, _Alloc>
pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	pair<_T1, _T2>
allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	allocator<_Tp>
map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	map<_Key, _Tp, _Compare, _Alloc>
enum_set_t<expand_flag>	enum_set_t<T>
allocator<completion_t>	allocator<_Tp>
vector<completion_t, allocator<completion_t>>	vector<_Tp, _Alloc>
shared_ptr<parser_t>	shared_ptr<_Tp>
allocator<const argument_t *>	allocator<_Tp>
vector<const argument_t *, allocator<const argument_t *>>	vector<_Tp, _Alloc>
maybe_t<end_execution_reason_t>	maybe_t<T>
__shared_ptr_access<const parsed_source_t, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
__shared_ptr<const parsed_source_t, _S_atomic>	__shared_ptr<_Tp, _Lp>
unique_ptr<parse_execution_context_t, default_delete<parse_execution_context_t>>	unique_ptr<_Tp, _Dp>
shared_ptr<const autoclose_fd_t>	shared_ptr<_Tp>
maybe_t<event_t>	maybe_t<T>
remove_reference<statuses_t &>	remove_reference<_Tp &>
maybe_t<autoloadable_file_t>	maybe_t<T>
unordered_map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>>>	unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
_Hashtable_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Hashtable_traits<true, false, true>>	_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>
_Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, false, true>	_Node_const_iterator<_Value, __constant_iterators, __cache>
_Node_iterator_base<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, true>	_Node_iterator_base<_Value, _Cache_hash_code>
__normal_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	__normal_iterator<_Iterator, _Container>
__uniq_ptr_impl<autoload_file_cache_t, default_delete<autoload_file_cache_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<autoload_file_cache_t, default_delete<autoload_file_cache_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
conditional<false, const pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t> *, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t> *>	conditional<false, _Iftrue, _Iffalse>
_Node_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true, true>	_Node_iterator<_Value, __constant_iterators, __cache>
pair<_Node_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true, true>, bool>	pair<_T1, _T2>
tuple_element<1UL, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>>	tuple_element<1UL, pair<_Tp1, _Tp2>>
_Map_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, true>	_Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
remove_reference<unique_ptr<autoload_file_cache_t, default_delete<autoload_file_cache_t>> &>	remove_reference<_Tp &>
map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t, less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>>	map<_Key, _Tp, _Compare, _Alloc>
_Hashtable_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Hashtable_traits<true, false, true>>	_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>
_Node_iterator_base<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, true>	_Node_iterator_base<_Value, _Cache_hash_code>
conditional<false, const pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t> *, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t> *>	conditional<false, _Iftrue, _Iffalse>
__normal_iterator<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	__normal_iterator<_Iterator, _Container>
iterator_traits<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *>	iterator_traits<const _Tp *>
__success_type<duration<signed long, ratio<1L, 1000000000L>>>	__success_type<_Tp>
_PCC<<expression>, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, false, true>, bool>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, false, true>, bool>	_PCC<<unnamed>, _T1, _T2>
__pair_base<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, false, true>, bool>	__pair_base<_U1, _U2>
_PCC<<expression>, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>	_PCC<<unnamed>, _T1, _T2>
__pair_base<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>	__pair_base<_U1, _U2>
conditional<false, const pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t> &, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t> &>	conditional<false, _Iftrue, _Iffalse>
reverse_iterator<_Rb_tree_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>>	reverse_iterator<_Iterator>
reverse_iterator<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>>	reverse_iterator<_Iterator>
rebind<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>	rebind<_Tp>
_PCC<<expression>, _Node_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true, true>, bool>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, _Node_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true, true>, bool>	_PCC<<unnamed>, _T1, _T2>
__pair_base<_Node_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true, true>, bool>	__pair_base<_U1, _U2>
conditional<false, const pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t> &, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t> &>	conditional<false, _Iftrue, _Iffalse>
iterator_traits<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *>	iterator_traits<_Tp *>
_PCC<<expression>, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>	_PCC<<unnamed>, _T1, _T2>
__pair_base<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>	__pair_base<_U1, _U2>
iterator	iterator
lru_link_t	lru_link_t
_Local_const_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, _Select1st, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, false, true>	_Local_const_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>
_Local_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, _Select1st, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, false, true>	_Local_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>
_Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, false, true>	_Node_const_iterator<_Value, __constant_iterators, __cache>
allocator_traits<allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>>>	allocator_traits<allocator<_Tp>>
tuple_element<1UL, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>>	tuple_element<1UL, pair<_Tp1, _Tp2>>
_Map_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, true>	_Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
maybe_impl_t<autoloadable_file_t>	maybe_impl_t<T>
_List_iterator<event_blockage_t>	_List_iterator<_Tp>
reverse_iterator<_List_iterator<event_blockage_t>>	reverse_iterator<_Iterator>
_List_const_iterator<event_blockage_t>	_List_const_iterator<_Tp>
reverse_iterator<_List_const_iterator<event_blockage_t>>	reverse_iterator<_Iterator>
rebind<_List_node<event_blockage_t>>	rebind<_Tp>
rebind<event_blockage_t>	rebind<_Tp>
maybe_impl_t<event_t>	maybe_impl_t<T>
_Temporary_value	_Temporary_value
__normal_iterator<shared_ptr<event_t> *, vector<shared_ptr<event_t>, allocator<shared_ptr<event_t>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<shared_ptr<event_t> *, vector<shared_ptr<event_t>, allocator<shared_ptr<event_t>>>>>	reverse_iterator<_Iterator>
__normal_iterator<const shared_ptr<event_t> *, vector<shared_ptr<event_t>, allocator<shared_ptr<event_t>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const shared_ptr<event_t> *, vector<shared_ptr<event_t>, allocator<shared_ptr<event_t>>>>>	reverse_iterator<_Iterator>
rebind<shared_ptr<event_t>>	rebind<_Tp>
remove_extent<const autoclose_fd_t>	remove_extent<_Tp>
__shared_ptr<const autoclose_fd_t, _S_atomic>	__shared_ptr<_Tp, _Lp>
weak_ptr<const autoclose_fd_t>	weak_ptr<_Tp>
__and_<is_convertible<pointer, parse_execution_context_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, parse_execution_context_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__uniq_ptr_impl<parse_execution_context_t, default_delete<parse_execution_context_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<parse_execution_context_t, default_delete<parse_execution_context_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
_Temporary_value	_Temporary_value
__normal_iterator<unique_ptr<profile_item_t, default_delete<profile_item_t>> *, vector<unique_ptr<profile_item_t, default_delete<profile_item_t>>, allocator<unique_ptr<profile_item_t, default_delete<profile_item_t>>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<unique_ptr<profile_item_t, default_delete<profile_item_t>> *, vector<unique_ptr<profile_item_t, default_delete<profile_item_t>>, allocator<unique_ptr<profile_item_t, default_delete<profile_item_t>>>>>>	reverse_iterator<_Iterator>
__normal_iterator<const unique_ptr<profile_item_t, default_delete<profile_item_t>> *, vector<unique_ptr<profile_item_t, default_delete<profile_item_t>>, allocator<unique_ptr<profile_item_t, default_delete<profile_item_t>>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const unique_ptr<profile_item_t, default_delete<profile_item_t>> *, vector<unique_ptr<profile_item_t, default_delete<profile_item_t>>, allocator<unique_ptr<profile_item_t, default_delete<profile_item_t>>>>>>	reverse_iterator<_Iterator>
rebind<unique_ptr<profile_item_t, default_delete<profile_item_t>>>	rebind<_Tp>
reverse_iterator<_Deque_iterator<block_t, block_t &, block_t *>>	reverse_iterator<_Iterator>
reverse_iterator<_Deque_iterator<block_t, const block_t &, const block_t *>>	reverse_iterator<_Iterator>
pointer_traits<block_t *>	pointer_traits<_Tp *>
rebind<block_t>	rebind<_Tp>
remove_extent<const parsed_source_t>	remove_extent<_Tp>
__weak_ptr<const autoclose_fd_t, _S_atomic>	__weak_ptr<_Tp, _Lp>
__weak_ptr<parser_t, _S_atomic>	__weak_ptr<_Tp, _Lp>
__shared_ptr<parser_t, _S_atomic>	__shared_ptr<_Tp, _Lp>
__weak_ptr<internal_proc_t, _S_atomic>	__weak_ptr<_Tp, _Lp>
__weak_ptr<const vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _S_atomic>	__weak_ptr<_Tp, _Lp>
__weak_ptr<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _S_atomic>	__weak_ptr<_Tp, _Lp>
__weak_ptr<env_stack_t, _S_atomic>	__weak_ptr<_Tp, _Lp>
__weak_ptr<mutex, _S_atomic>	__weak_ptr<_Tp, _Lp>
__weak_ptr<io_buffer_t, _S_atomic>	__weak_ptr<_Tp, _Lp>
__weak_ptr<job_group_t, _S_atomic>	__weak_ptr<_Tp, _Lp>
__weak_ptr<const parsed_source_t, _S_atomic>	__weak_ptr<_Tp, _Lp>
__shared_ptr<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _S_atomic>	__shared_ptr<_Tp, _Lp>
__shared_ptr<io_buffer_t, _S_atomic>	__shared_ptr<_Tp, _Lp>
__weak_ptr<_Tp1, _S_atomic>	__weak_ptr<_Tp, _Lp>
__shared_ptr<_Tp1, _S_atomic>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Yp, _S_atomic>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Yp, _S_atomic>	__shared_ptr<_Tp, _Lp>
__weak_ptr<_Yp, _S_atomic>	__weak_ptr<_Tp, _Lp>
__shared_ptr<_Yp, _S_atomic>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Yp, _S_atomic>	__shared_ptr<_Tp, _Lp>
__shared_ptr<_Yp, _S_atomic>	__shared_ptr<_Tp, _Lp>
is_array<const parsed_source_t>	is_array<<unnamed>>
is_void<const parsed_source_t>	is_void<_Tp>
remove_extent<parser_t>	remove_extent<_Tp>
weak_ptr<parser_t>	weak_ptr<_Tp>
_List_impl	_List_impl
remove_extent<internal_proc_t>	remove_extent<_Tp>
__shared_ptr_access<internal_proc_t, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
is_same<unique_ptr<process_t, default_delete<process_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unique_ptr<process_t, default_delete<process_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unique_ptr<process_t, default_delete<process_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unique_ptr<process_t, default_delete<process_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unique_ptr<process_t, default_delete<process_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unique_ptr<process_t, default_delete<process_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
remove_extent<job_group_t>	remove_extent<_Tp>
is_array<job_group_t>	is_array<<unnamed>>
is_void<job_group_t>	is_void<_Tp>
maybe_impl_t<termios>	maybe_impl_t<T>
_Temporary_value	_Temporary_value
__normal_iterator<concrete_assignment *, vector<concrete_assignment, allocator<concrete_assignment>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<concrete_assignment *, vector<concrete_assignment, allocator<concrete_assignment>>>>	reverse_iterator<_Iterator>
__normal_iterator<const concrete_assignment *, vector<concrete_assignment, allocator<concrete_assignment>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const concrete_assignment *, vector<concrete_assignment, allocator<concrete_assignment>>>>	reverse_iterator<_Iterator>
rebind<concrete_assignment>	rebind<_Tp>
weak_ptr<internal_proc_t>	weak_ptr<_Tp>
__and_<is_convertible<pointer, process_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, process_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
_Temporary_value	_Temporary_value
__normal_iterator<unique_ptr<process_t, default_delete<process_t>> *, vector<unique_ptr<process_t, default_delete<process_t>>, allocator<unique_ptr<process_t, default_delete<process_t>>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<unique_ptr<process_t, default_delete<process_t>> *, vector<unique_ptr<process_t, default_delete<process_t>>, allocator<unique_ptr<process_t, default_delete<process_t>>>>>>	reverse_iterator<_Iterator>
__normal_iterator<const unique_ptr<process_t, default_delete<process_t>> *, vector<unique_ptr<process_t, default_delete<process_t>>, allocator<unique_ptr<process_t, default_delete<process_t>>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const unique_ptr<process_t, default_delete<process_t>> *, vector<unique_ptr<process_t, default_delete<process_t>>, allocator<unique_ptr<process_t, default_delete<process_t>>>>>>	reverse_iterator<_Iterator>
rebind<unique_ptr<process_t, default_delete<process_t>>>	rebind<_Tp>
maybe_impl_t<topic_t>	maybe_impl_t<T>
reverse_iterator<_Deque_iterator<shared_ptr<job_t>, shared_ptr<job_t> &, shared_ptr<job_t> *>>	reverse_iterator<_Iterator>
reverse_iterator<_Deque_iterator<shared_ptr<job_t>, const shared_ptr<job_t> &, const shared_ptr<job_t> *>>	reverse_iterator<_Iterator>
pointer_traits<shared_ptr<job_t> *>	pointer_traits<_Tp *>
rebind<shared_ptr<job_t>>	rebind<_Tp>
__underlying_type_impl<topic_t, true>	__underlying_type_impl<_Tp, <unnamed>>
array<unsigned long, 3UL>	array<_Tp, _Nm>
weak_ptr<const parsed_source_t>	weak_ptr<_Tp>
is_same<const node_t **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<const node_t **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<const node_t **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<const node_t **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<const node_t **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<const node_t **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, token_t<end> *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, token_t<end> *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, token_t<background> *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, token_t<background> *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, keyword_t<kw_time> *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, keyword_t<kw_time> *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, node_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, node_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
_Temporary_value	_Temporary_value
reverse_iterator<__normal_iterator<const node_t **, vector<const node_t *, allocator<const node_t *>>>>	reverse_iterator<_Iterator>
__normal_iterator<const node_t *const *, vector<const node_t *, allocator<const node_t *>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const node_t *const *, vector<const node_t *, allocator<const node_t *>>>>	reverse_iterator<_Iterator>
_Temporary_value	_Temporary_value
__normal_iterator<source_range_t *, vector<source_range_t, allocator<source_range_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<source_range_t *, vector<source_range_t, allocator<source_range_t>>>>	reverse_iterator<_Iterator>
__normal_iterator<const source_range_t *, vector<source_range_t, allocator<source_range_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const source_range_t *, vector<source_range_t, allocator<source_range_t>>>>	reverse_iterator<_Iterator>
maybe_impl_t<pipe_or_redir_t>	maybe_impl_t<T>
__normal_iterator<const wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	__normal_iterator<_Iterator, _Container>
iterator_traits<const wchar_t *>	iterator_traits<const _Tp *>
hash<vector<bool, allocator<bool>>>	hash<_Tp>
remove_extent<io_buffer_t>	remove_extent<_Tp>
weak_ptr<io_buffer_t>	weak_ptr<_Tp>
_Temporary_value	_Temporary_value
__normal_iterator<shared_ptr<const io_data_t> *, vector<shared_ptr<const io_data_t>, allocator<shared_ptr<const io_data_t>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<shared_ptr<const io_data_t> *, vector<shared_ptr<const io_data_t>, allocator<shared_ptr<const io_data_t>>>>>	reverse_iterator<_Iterator>
__normal_iterator<const shared_ptr<const io_data_t> *, vector<shared_ptr<const io_data_t>, allocator<shared_ptr<const io_data_t>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const shared_ptr<const io_data_t> *, vector<shared_ptr<const io_data_t>, allocator<shared_ptr<const io_data_t>>>>>	reverse_iterator<_Iterator>
rebind<shared_ptr<const io_data_t>>	rebind<_Tp>
weak_ptr<job_group_t>	weak_ptr<_Tp>
maybe_impl_t<int>	maybe_impl_t<T>
_Temporary_value	_Temporary_value
__normal_iterator<redirection_spec_t *, vector<redirection_spec_t, allocator<redirection_spec_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<redirection_spec_t *, vector<redirection_spec_t, allocator<redirection_spec_t>>>>	reverse_iterator<_Iterator>
__normal_iterator<const redirection_spec_t *, vector<redirection_spec_t, allocator<redirection_spec_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const redirection_spec_t *, vector<redirection_spec_t, allocator<redirection_spec_t>>>>	reverse_iterator<_Iterator>
rebind<redirection_spec_t>	rebind<_Tp>
_Temporary_value	_Temporary_value
__normal_iterator<action_t *, vector<action_t, allocator<action_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<action_t *, vector<action_t, allocator<action_t>>>>	reverse_iterator<_Iterator>
__normal_iterator<const action_t *, vector<action_t, allocator<action_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const action_t *, vector<action_t, allocator<action_t>>>>	reverse_iterator<_Iterator>
rebind<action_t>	rebind<_Tp>
__alloc_traits<allocator<char>, char>	__alloc_traits<_Alloc, <unnamed>>
is_same<char *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<char *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<char *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<char *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<char *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<char *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
__alloc_traits<allocator<wchar_t>, wchar_t>	__alloc_traits<_Alloc, <unnamed>>
is_same<wchar_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<wchar_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<wchar_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<wchar_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<wchar_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<wchar_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
_PCC<<expression>, unsigned long, unsigned long>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, unsigned long, unsigned long>	_PCC<<unnamed>, _T1, _T2>
__pair_base<unsigned long, unsigned long>	__pair_base<_U1, _U2>
_Task_setter<_Ptr_type, _Fn, void>	_Task_setter<_Ptr_type, _Fn, _Res>
_Result<_Res &>	_Result<_Res>
_Setter<_Res, __exception_ptr_tag>	_Setter<_Res, _Arg>
_Setter<_Res, __exception_ptr_tag>	_Setter<_Res, _Arg>
_Setter<_Res, __exception_ptr_tag>	_Setter<_Res, _Arg>
_Setter<_Res, __exception_ptr_tag>	_Setter<_Res, _Arg>
_Setter<_Res, __exception_ptr_tag>	_Setter<_Res, _Arg>
_Setter<_Res, __exception_ptr_tag>	_Setter<_Res, _Arg>
_Setter<_Res, __exception_ptr_tag>	_Setter<_Res, _Arg>
_Setter<_Res, __exception_ptr_tag>	_Setter<_Res, _Arg>
_Setter<_Res, __exception_ptr_tag>	_Setter<_Res, _Arg>
_Setter<_Res, __exception_ptr_tag>	_Setter<_Res, _Arg>
_Setter<_Res, __exception_ptr_tag>	_Setter<_Res, _Arg>
_Setter<_Res, __exception_ptr_tag>	_Setter<_Res, _Arg>
_Setter<_Res, __exception_ptr_tag>	_Setter<_Res, _Arg>
_Setter<_Res, __exception_ptr_tag>	_Setter<_Res, _Arg>
_Setter<_Res, __exception_ptr_tag>	_Setter<_Res, _Arg>
_Setter<_Res, __exception_ptr_tag>	_Setter<_Res, _Arg>
_Setter<_Res, void>	_Setter<_Res, _Arg>
_Setter<_Res, void>	_Setter<_Res, _Arg>
_Setter<_Res, void>	_Setter<_Res, _Arg>
_Setter<_Res, void>	_Setter<_Res, _Arg>
_Setter<_Res, void>	_Setter<_Res, _Arg>
_Setter<_Res, void>	_Setter<_Res, _Arg>
_Setter<_Res, void>	_Setter<_Res, _Arg>
_Setter<_Res, void>	_Setter<_Res, _Arg>
_Setter<_Res, void>	_Setter<_Res, _Arg>
_Setter<_Res, void>	_Setter<_Res, _Arg>
_Setter<_Res, void>	_Setter<_Res, _Arg>
_Setter<_Res, void>	_Setter<_Res, _Arg>
_Setter<_Res, void>	_Setter<_Res, _Arg>
_Setter<_Res, void>	_Setter<_Res, _Arg>
_Setter<_Res, void>	_Setter<_Res, _Arg>
_Setter<_Res, void>	_Setter<_Res, _Arg>
_Setter<_Res, _Res &&>	_Setter<_Res, _Arg>
_Setter<_Res, _Res &&>	_Setter<_Res, _Arg>
_Setter<_Res, _Res &&>	_Setter<_Res, _Arg>
_Setter<_Res, _Res &&>	_Setter<_Res, _Arg>
_Setter<_Res, _Res &&>	_Setter<_Res, _Arg>
_Setter<_Res, _Res &&>	_Setter<_Res, _Arg>
_Setter<_Res, _Res &&>	_Setter<_Res, _Arg>
_Setter<_Res, _Res &&>	_Setter<_Res, _Arg>
_Setter<_Res, _Res &&>	_Setter<_Res, _Arg>
_Setter<_Res, _Res &&>	_Setter<_Res, _Arg>
_Setter<_Res, _Res &&>	_Setter<_Res, _Arg>
_Setter<_Res, _Res &&>	_Setter<_Res, _Arg>
_Setter<_Res, _Res &&>	_Setter<_Res, _Arg>
_Setter<_Res, _Res &&>	_Setter<_Res, _Arg>
_Setter<_Res, _Res &&>	_Setter<_Res, _Arg>
_Setter<_Res, _Res &&>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg &>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg &>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg &>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg &>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg &>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg &>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg &>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg &>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg &>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg &>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg &>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg &>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg &>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg &>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg &>	_Setter<_Res, _Arg>
_Setter<_Res, _Arg &>	_Setter<_Res, _Arg>
__and_<is_convertible<pointer, _Result<void> *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, _Result<void> *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
_Ptr<_Result<void>, _Deleter, void>	_Ptr<_Up, _Ep, <unnamed>>
__is_referenceable<_Result_base>	__is_referenceable<_Tp>
remove_extent<_State_baseV2>	remove_extent<_Tp>
enable_shared_from_this<_State_baseV2>	enable_shared_from_this<_Tp>
__enable_shared_from_this<_State_baseV2, _S_atomic>	__enable_shared_from_this<_Tp, _Lp>
__weak_ptr<_Tp1, _S_atomic>	__weak_ptr<_Tp, _Lp>
__shared_ptr<_Tp1, _S_atomic>	__shared_ptr<_Tp, _Lp>
__weak_ptr<_Yp, _S_atomic>	__weak_ptr<_Tp, _Lp>
__shared_ptr<_Yp, _S_atomic>	__shared_ptr<_Tp, _Lp>
__weak_ptr<_Yp, _S_atomic>	__weak_ptr<_Tp, _Lp>
__weak_ptr<_Yp, _S_atomic>	__weak_ptr<_Tp, _Lp>
__shared_ptr<_Yp, _S_atomic>	__shared_ptr<_Tp, _Lp>
__weak_ptr<_Yp, _S_atomic>	__weak_ptr<_Tp, _Lp>
is_array<_State_baseV2>	is_array<<unnamed>>
is_void<_State_baseV2>	is_void<_Tp>
time_point<__clock_t, _Duration>	time_point<_Clock, _Dur>
time_point<__clock_t, _Dur>	time_point<_Clock, _Dur>
_Callable<type, type>	_Callable<_Func, _Res2>
_Callable<_Functor, type>	_Callable<_Func, _Res2>
_Maybe_unary_or_binary_function<unique_ptr<_Result_base, _Deleter>>	_Maybe_unary_or_binary_function<_Res, _ArgTypes...>
__and_<is_convertible<pointer, _Make_ready *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, _Make_ready *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
remove_extent<mutex>	remove_extent<_Tp>
is_array<mutex>	is_array<<unnamed>>
is_void<mutex>	is_void<_Tp>
weak_ptr<mutex>	weak_ptr<_Tp>
is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>, value_type>	is_same<<unnamed>, <unnamed>>
_Alloc_node	_Alloc_node
_Reuse_or_alloc_node	_Reuse_or_alloc_node
rebind<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>>	rebind<_Tp>
_Rb_tree_impl<less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>	_Rb_tree_impl<_Key_compare, <unnamed>>
_PCC<<expression>, _Rb_tree_node_base *, _Rb_tree_node_base *>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, _Rb_tree_node_base *, _Rb_tree_node_base *>	_PCC<<unnamed>, _T1, _T2>
__pair_base<_Rb_tree_node_base *, _Rb_tree_node_base *>	__pair_base<_U1, _U2>
_Deque_impl	_Deque_impl
__alloc_traits<allocator<shared_ptr<job_t> *>, shared_ptr<job_t> *>	__alloc_traits<_Alloc, <unnamed>>
rebind<shared_ptr<job_t> *>	rebind<_Tp>
_Deque_impl	_Deque_impl
__alloc_traits<allocator<block_t *>, block_t *>	__alloc_traits<_Alloc, <unnamed>>
rebind<block_t *>	rebind<_Tp>
_Local_const_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, _Select1st, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, false, true>	_Local_const_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>
_Local_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, _Select1st, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, false, true>	_Local_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>
allocator_traits<allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>>>	allocator_traits<allocator<_Tp>>
_Local_const_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, _Identity, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, true, true>	_Local_const_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>
_Local_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, _Identity, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, true, true>	_Local_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>
_Node_const_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true, true>	_Node_const_iterator<_Value, __constant_iterators, __cache>
__and_<is_convertible<pointer, autoload_file_cache_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, autoload_file_cache_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
maybe_impl_t<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	maybe_impl_t<T>
remove_extent<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	remove_extent<_Tp>
weak_ptr<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	weak_ptr<_Tp>
is_same<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_array<const vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	is_array<<unnamed>>
is_void<const vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	is_void<_Tp>
remove_extent<const vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	remove_extent<_Tp>
is_array<env_stack_t>	is_array<<unnamed>>
is_void<env_stack_t>	is_void<_Tp>
_Temporary_value	_Temporary_value
__normal_iterator<int *, vector<int, allocator<int>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<int *, vector<int, allocator<int>>>>	reverse_iterator<_Iterator>
__normal_iterator<const int *, vector<int, allocator<int>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const int *, vector<int, allocator<int>>>>	reverse_iterator<_Iterator>
rebind<int>	rebind<_Tp>
weak_ptr<const vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	weak_ptr<_Tp>
__and_<is_convertible<pointer, env_stack_impl_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, env_stack_impl_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__uniq_ptr_impl<env_stack_impl_t, default_delete<env_stack_impl_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<env_stack_impl_t, default_delete<env_stack_impl_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
maybe_impl_t<env_var_t>	maybe_impl_t<T>
weak_ptr<env_stack_t>	weak_ptr<_Tp>
_Temporary_value	_Temporary_value
__normal_iterator<basic_string<char, char_traits<char>, allocator<char>> *, vector<basic_string<char, char_traits<char>, allocator<char>>, allocator<basic_string<char, char_traits<char>, allocator<char>>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<basic_string<char, char_traits<char>, allocator<char>> *, vector<basic_string<char, char_traits<char>, allocator<char>>, allocator<basic_string<char, char_traits<char>, allocator<char>>>>>>	reverse_iterator<_Iterator>
__normal_iterator<const basic_string<char, char_traits<char>, allocator<char>> *, vector<basic_string<char, char_traits<char>, allocator<char>>, allocator<basic_string<char, char_traits<char>, allocator<char>>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const basic_string<char, char_traits<char>, allocator<char>> *, vector<basic_string<char, char_traits<char>, allocator<char>>, allocator<basic_string<char, char_traits<char>, allocator<char>>>>>>	reverse_iterator<_Iterator>
rebind<basic_string<char, char_traits<char>, allocator<char>>>	rebind<_Tp>
_Temporary_value	_Temporary_value
reverse_iterator<__normal_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	reverse_iterator<_Iterator>
rebind<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	rebind<_Tp>
_Callable<type, type>	_Callable<_Func, _Res2>
_Callable<_Functor, type>	_Callable<_Func, _Res2>
_Maybe_unary_or_binary_function<bool>	_Maybe_unary_or_binary_function<_Res, _ArgTypes...>
maybe_impl_t<unsigned long>	maybe_impl_t<T>
_Callable<type, type>	_Callable<_Func, _Res2>
_Callable<_Functor, type>	_Callable<_Func, _Res2>
_Maybe_unary_or_binary_function<void>	_Maybe_unary_or_binary_function<_Res, _ArgTypes...>
is_copy_constructible<unsigned long>	is_copy_constructible<_Tp>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
rebind<element_t>	rebind<_Tp>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
rebind<element_t>	rebind<_Tp>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
time_point<__clock_t, _Duration>	time_point<_Clock, _Dur>
time_point<__clock_t, _Duration>	time_point<_Clock, _Dur>
binary_function<const error_category *, const error_category *, bool>	binary_function<_Arg1, _Arg2, _Result>
integral_constant<long, 1L>	integral_constant<_Tp, __v>
time_point<clock, _Dur2>	time_point<_Clock, _Dur>
time_point<clock, _Dur2>	time_point<_Clock, _Dur>
time_point<clock, _Dur2>	time_point<_Clock, _Dur>
__static_abs<_Pn>	__static_abs<_Pn>
__static_abs<_Qn>	__static_abs<_Pn>
__safe_multiply<<expression>, <expression>>	__safe_multiply<_Pn, _Qn>
__big_less<__hi, __lo, __hi, __lo>	__big_less<__hi1, __lo1, __hi2, __lo2>
ratio_less<_R2, _R1>	ratio_less<_R1, _R2>
ratio_less<ratio<value, den>, ratio<value, den>>	ratio_less<_R1, _R2>
integral_constant<long, 1000000000L>	integral_constant<_Tp, __v>
is_member_function_pointer<_Res _Class::*>	is_member_function_pointer<_Tp>
is_bind_expression<type>	is_bind_expression<_Tp>
is_placeholder<type>	is_placeholder<_Tp>
_Base_manager<..(*)(..)>	_Base_manager<_Functor>
_Base_manager<_Setter<void, __exception_ptr_tag>>	_Base_manager<_Functor>
_Base_manager<_Setter<void, void>>	_Base_manager<_Functor>
__or_<is_same<bool, bool>, is_convertible<bool, bool>>	__or_<_B1, _B2>
conditional<false, is_void<bool>, __or_<is_same<bool, bool>, is_convertible<bool, bool>>>	conditional<false, _Iftrue, _Iffalse>
__or_<is_same<unique_ptr<_Result<void>, _Deleter>, unique_ptr<_Result_base, _Deleter>>, is_convertible<unique_ptr<_Result<void>, _Deleter>, unique_ptr<_Result_base, _Deleter>>>	__or_<_B1, _B2>
conditional<false, is_void<unique_ptr<_Result_base, _Deleter>>, __or_<is_same<unique_ptr<_Result<void>, _Deleter>, unique_ptr<_Result_base, _Deleter>>, is_convertible<unique_ptr<_Result<void>, _Deleter>, unique_ptr<_Result_base, _Deleter>>>>	conditional<false, _Iftrue, _Iffalse>
_Callable<function<..(..)>, _Tp>	_Callable<_Func, _Res2>
__not_<integral_constant<bool, true>>	__not_<_Pp>
is_default_constructible<_Mod_range_hashing>	is_default_constructible<_Tp>
__or_<__not_<integral_constant<bool, true>>, is_default_constructible<_Mod_range_hashing>>	__or_<_B1, _B2>
__or_<integral_constant<bool, true>, _Cond>	__or_<<unnamed>...>
__or_<__not_<integral_constant<bool, true>>, _Cond>	__or_<<unnamed>...>
_ReuseOrAllocNode<allocator<_Hash_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true>>>	_ReuseOrAllocNode<_NodeAlloc>
_Equality<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Identity, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, true, true>, true>	_Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
_Rehash_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Identity, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, true, true>, integral_constant<bool, true>>	_Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true_type>
_Map_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Identity, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, true, true>, true>	_Map_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, _Unique_keys>
conditional<true, pair<_Node_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true, true>, bool>, _Node_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true, true>>	conditional<_Cond, _Iftrue, _Iffalse>
conditional<true, _Identity, _Select1st>	conditional<_Cond, _Iftrue, _Iffalse>
_Hashtable_alloc<allocator<_Hash_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true>>>	_Hashtable_alloc<_NodeAlloc>
_ReuseOrAllocNode<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, true>>>	_ReuseOrAllocNode<_NodeAlloc>
_Equality<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, true>	_Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
_Rehash_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, integral_constant<bool, true>>	_Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true_type>
conditional<true, pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, false, true>, bool>, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, false, true>>	conditional<_Cond, _Iftrue, _Iffalse>
conditional<false, _Identity, _Select1st>	conditional<false, _Iftrue, _Iffalse>
_Hashtable_alloc<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, true>>>	_Hashtable_alloc<_NodeAlloc>
_ReuseOrAllocNode<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, true>>>	_ReuseOrAllocNode<_NodeAlloc>
_Equality<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, true>	_Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
_Rehash_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, integral_constant<bool, true>>	_Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true_type>
conditional<true, pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, false, true>, bool>, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, false, true>>	conditional<_Cond, _Iftrue, _Iffalse>
_Hashtable_alloc<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, true>>>	_Hashtable_alloc<_NodeAlloc>
_AllocNode<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, true>>>	_AllocNode<_NodeAlloc>
_AllocNode<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, true>>>	_AllocNode<_NodeAlloc>
_AllocNode<allocator<_Hash_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true>>>	_AllocNode<_NodeAlloc>
is_empty<_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, false>>	is_empty<_Tp>
is_empty<_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, false>>	is_empty<_Tp>
_PCC<<expression>, bool, int>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, bool, int>	_PCC<<unnamed>, _T1, _T2>
__pair_base<bool, int>	__pair_base<_U1, _U2>
_PCC<<expression>, bool, unsigned long>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, bool, unsigned long>	_PCC<<unnamed>, _T1, _T2>
__pair_base<bool, unsigned long>	__pair_base<_U1, _U2>
is_void<_Tp>	is_void<_Tp>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
__not_alloc_shared_tag<_Deleter>	__not_alloc_shared_tag<_Tp>
__not_alloc_shared_tag<_Deleter>	__not_alloc_shared_tag<_Tp>
__not_alloc_shared_tag<_Sp_alloc_shared_tag<_Tp>>	__not_alloc_shared_tag<_Tp>
_Mutex_base<_S_atomic>	_Mutex_base<_Lp>
_Mutex_base<_S_single>	_Mutex_base<_Lp>
is_member_function_pointer<type>	is_member_function_pointer<_Tp>
is_member_function_pointer<type>	is_member_function_pointer<_Tp>
is_pointer<_Dp>	is_pointer<_Tp>
__not_<is_pointer<_Dp>>	__not_<_Pp>
is_default_constructible<_Dp>	is_default_constructible<_Tp>
__and_<__not_<is_pointer<_Dp>>, is_default_constructible<_Dp>>	__and_<<unnamed>...>
_Ptr<_Tp, _Dp, void>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
is_empty<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &>	is_empty<_Tp>
is_empty<_Deleter>	is_empty<_Tp>
is_empty<_Result_base *>	is_empty<_Tp>
is_empty<_Result<void> *>	is_empty<_Tp>
is_empty<node_deleter_t>	is_empty<_Tp>
is_empty<node_t *>	is_empty<_Tp>
is_empty<default_delete<keyword_t<kw_time>>>	is_empty<_Tp>
is_empty<keyword_t<kw_time> *>	is_empty<_Tp>
is_empty<default_delete<variable_assignment_t>>	is_empty<_Tp>
is_empty<variable_assignment_t *>	is_empty<_Tp>
is_empty<default_delete<argument_t>>	is_empty<_Tp>
is_empty<argument_t *>	is_empty<_Tp>
is_empty<default_delete<keyword_t<kw_and, kw_or>>>	is_empty<_Tp>
is_empty<keyword_t<kw_and, kw_or> *>	is_empty<_Tp>
is_empty<default_delete<job_continuation_t>>	is_empty<_Tp>
is_empty<job_continuation_t *>	is_empty<_Tp>
is_empty<default_delete<token_t<background>>>	is_empty<_Tp>
is_empty<token_t<background> *>	is_empty<_Tp>
is_empty<default_delete<job_conjunction_continuation_t>>	is_empty<_Tp>
is_empty<job_conjunction_continuation_t *>	is_empty<_Tp>
is_empty<default_delete<token_t<end>>>	is_empty<_Tp>
is_empty<token_t<end> *>	is_empty<_Tp>
is_empty<default_delete<andor_job_t>>	is_empty<_Tp>
is_empty<andor_job_t *>	is_empty<_Tp>
is_empty<default_delete<job_conjunction_t>>	is_empty<_Tp>
is_empty<job_conjunction_t *>	is_empty<_Tp>
is_empty<default_delete<argument_or_redirection_t>>	is_empty<_Tp>
is_empty<argument_or_redirection_t *>	is_empty<_Tp>
is_empty<default_delete<elseif_clause_t>>	is_empty<_Tp>
is_empty<elseif_clause_t *>	is_empty<_Tp>
is_empty<default_delete<else_clause_t>>	is_empty<_Tp>
is_empty<else_clause_t *>	is_empty<_Tp>
is_empty<default_delete<case_item_t>>	is_empty<_Tp>
is_empty<case_item_t *>	is_empty<_Tp>
is_empty<default_delete<keyword_t<kw_command, kw_builtin, kw_exec>>>	is_empty<_Tp>
is_empty<keyword_t<kw_command, kw_builtin, kw_exec> *>	is_empty<_Tp>
is_empty<default_delete<process_t>>	is_empty<_Tp>
is_empty<process_t *>	is_empty<_Tp>
is_empty<default_delete<parse_execution_context_t>>	is_empty<_Tp>
is_empty<parse_execution_context_t *>	is_empty<_Tp>
is_empty<default_delete<env_stack_impl_t>>	is_empty<_Tp>
is_empty<env_stack_impl_t *>	is_empty<_Tp>
is_same<_Dummy, void>	is_same<<unnamed>, <unnamed>>
_TC2<_Dummy>	_TC2<_Dummy>
_TC2<_Dummy>	_TC2<_Dummy>
tuple_size<_Tuple>	tuple_size<_Tp>
tuple_size<_Tuple>	tuple_size<_Tp>
tuple_size<_Tuple>	tuple_size<_Tp>
tuple_size<_Tuple>	tuple_size<_Tp>
is_empty<default_delete<autoload_file_cache_t>>	is_empty<_Tp>
is_empty<autoload_file_cache_t *>	is_empty<_Tp>
is_empty<default_delete<_Make_ready>>	is_empty<_Tp>
is_empty<_Make_ready *>	is_empty<_Tp>
__are_same<float, float>	__are_same<_Tp, _Tp>
__are_same<float, double>	__are_same<<unnamed>, <unnamed>>
__are_same<double, float>	__are_same<<unnamed>, <unnamed>>
__are_same<double, double>	__are_same<_Tp, _Tp>
__are_same<long double, float>	__are_same<<unnamed>, <unnamed>>
__are_same<long double, double>	__are_same<<unnamed>, <unnamed>>
__numeric_traits_integer<float>	__numeric_traits_integer<_Value>
__conditional_type<false, __numeric_traits_integer<float>, __numeric_traits_floating<float>>	__conditional_type<false, _Iftrue, _Iffalse>
__numeric_traits_integer<double>	__numeric_traits_integer<_Value>
__conditional_type<false, __numeric_traits_integer<double>, __numeric_traits_floating<double>>	__conditional_type<false, _Iftrue, _Iffalse>
__numeric_traits_integer<long double>	__numeric_traits_integer<_Value>
__conditional_type<false, __numeric_traits_integer<long double>, __numeric_traits_floating<long double>>	__conditional_type<false, _Iftrue, _Iffalse>
__hash_base<unsigned long, basic_string<char, char_traits<char>, allocator<char>>>	__hash_base<_Result, _Arg>
__hash_base<unsigned long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	__hash_base<_Result, _Arg>
__hash_base<unsigned long, basic_string<char16_t, char_traits<char16_t>, allocator<char16_t>>>	__hash_base<_Result, _Arg>
__hash_base<unsigned long, basic_string<char32_t, char_traits<char32_t>, allocator<char32_t>>>	__hash_base<_Result, _Arg>
is_enum<_Tp>	is_enum<_Tp>
__numeric_traits_floating<int>	__numeric_traits_floating<_Value>
__conditional_type<true, __numeric_traits_integer<int>, __numeric_traits_floating<int>>	__conditional_type<_Cond, _Iftrue, _Iffalse>
uses_allocator<_Tp, _Alloc>	uses_allocator<_Tp, _Alloc>
uses_allocator<_Tp, _Alloc>	uses_allocator<_Tp, _Alloc>
sentry	sentry
sentry	sentry
sentry	sentry
sentry	sentry
union <unnamed>	union <unnamed>
union <unnamed>	union <unnamed>
_Alloc_hider	_Alloc_hider
_Alloc_hider	_Alloc_hider
__normal_iterator<const char *, basic_string<char, char_traits<char>, allocator<char>>>	__normal_iterator<_Iterator, _Container>
__normal_iterator<const char *, basic_string<char, char_traits<char>, allocator<char>>>	__normal_iterator<_Iterator, _Container>
__normal_iterator<char *, basic_string<char, char_traits<char>, allocator<char>>>	__normal_iterator<_Iterator, _Container>
__normal_iterator<char *, basic_string<char, char_traits<char>, allocator<char>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<char *, basic_string<char, char_traits<char>, allocator<char>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<char *, basic_string<char, char_traits<char>, allocator<char>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<const char *, basic_string<char, char_traits<char>, allocator<char>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<const char *, basic_string<char, char_traits<char>, allocator<char>>>>	reverse_iterator<_Iterator>
rebind<char>	rebind<_Tp>
rebind<char>	rebind<_Tp>
union <unnamed>	union <unnamed>
union <unnamed>	union <unnamed>
_Alloc_hider	_Alloc_hider
_Alloc_hider	_Alloc_hider
__normal_iterator<const char16_t *, basic_string<char16_t, char_traits<char16_t>, allocator<char16_t>>>	__normal_iterator<_Iterator, _Container>
__normal_iterator<const char16_t *, basic_string<char16_t, char_traits<char16_t>, allocator<char16_t>>>	__normal_iterator<_Iterator, _Container>
__alloc_traits<allocator<char16_t>, char16_t>	__alloc_traits<_Alloc, <unnamed>>
__normal_iterator<char16_t *, basic_string<char16_t, char_traits<char16_t>, allocator<char16_t>>>	__normal_iterator<_Iterator, _Container>
__normal_iterator<char16_t *, basic_string<char16_t, char_traits<char16_t>, allocator<char16_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<char16_t *, basic_string<char16_t, char_traits<char16_t>, allocator<char16_t>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<char16_t *, basic_string<char16_t, char_traits<char16_t>, allocator<char16_t>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<const char16_t *, basic_string<char16_t, char_traits<char16_t>, allocator<char16_t>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<const char16_t *, basic_string<char16_t, char_traits<char16_t>, allocator<char16_t>>>>	reverse_iterator<_Iterator>
rebind<char16_t>	rebind<_Tp>
rebind<char16_t>	rebind<_Tp>
union <unnamed>	union <unnamed>
union <unnamed>	union <unnamed>
_Alloc_hider	_Alloc_hider
_Alloc_hider	_Alloc_hider
__normal_iterator<const char32_t *, basic_string<char32_t, char_traits<char32_t>, allocator<char32_t>>>	__normal_iterator<_Iterator, _Container>
__normal_iterator<const char32_t *, basic_string<char32_t, char_traits<char32_t>, allocator<char32_t>>>	__normal_iterator<_Iterator, _Container>
__alloc_traits<allocator<char32_t>, char32_t>	__alloc_traits<_Alloc, <unnamed>>
__normal_iterator<char32_t *, basic_string<char32_t, char_traits<char32_t>, allocator<char32_t>>>	__normal_iterator<_Iterator, _Container>
__normal_iterator<char32_t *, basic_string<char32_t, char_traits<char32_t>, allocator<char32_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<char32_t *, basic_string<char32_t, char_traits<char32_t>, allocator<char32_t>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<char32_t *, basic_string<char32_t, char_traits<char32_t>, allocator<char32_t>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<const char32_t *, basic_string<char32_t, char_traits<char32_t>, allocator<char32_t>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<const char32_t *, basic_string<char32_t, char_traits<char32_t>, allocator<char32_t>>>>	reverse_iterator<_Iterator>
rebind<char32_t>	rebind<_Tp>
rebind<char32_t>	rebind<_Tp>
__rebind<_Alloc, _Result_alloc<_Res, _Alloc>, void>	__rebind<_Tp, _Up, <unnamed>>
__rebind<_Alloc, _Hash_node<_Value, value>, void>	__rebind<_Tp, _Up, <unnamed>>
__rebind<_NodeAlloc, _Hash_node_base *, void>	__rebind<_Tp, _Up, <unnamed>>
__rebind<_Alloc, _Hash_node<_Value, value>, void>	__rebind<_Tp, _Up, <unnamed>>
__rebind<_Alloc, _Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>, void>	__rebind<_Tp, _Up, <unnamed>>
__rebind<_Alloc, _Sp_counted_deleter<_Ptr, _Deleter, _Alloc, _Lp>, void>	__rebind<_Tp, _Up, <unnamed>>
__rebind<_Alloc, _Tp, void>	__rebind<_Tp, _Up, <unnamed>>
__rebind<_Alloc, _Tp, void>	__rebind<_Tp, _Up, <unnamed>>
__rebind<_Alloc, _Up, void>	__rebind<_Tp, _Up, <unnamed>>
__rebind<_Tp, _Up, __void_t<other>>	__rebind<_Tp, _Up, <unnamed>>
__construct_helper<_Tp, _Args...>	__construct_helper<_Tp, _Args...>
__construct_helper<_Tp, _Args...>	__construct_helper<_Tp, _Args...>
__construct_helper<_Tp, _Args...>	__construct_helper<_Tp, _Args...>
_Size<_Alloc, type, void>	_Size<_A2, _DiffT, <unnamed>>
_Diff<_Alloc, type, void>	_Diff<_A2, _PtrT, <unnamed>>
_Ptr<__cv_pointer, const void, void>	_Ptr<_Func, _Tp, <unnamed>>
_Ptr<__v_pointer, void, void>	_Ptr<_Func, _Tp, <unnamed>>
_Ptr<__c_pointer, const value_type, void>	_Ptr<_Func, _Tp, <unnamed>>
_Size<_A2, _DiffT, __void_t<size_type>>	_Size<_A2, _DiffT, <unnamed>>
_Diff<_A2, _PtrT, __void_t<difference_type>>	_Diff<_A2, _PtrT, <unnamed>>
_Ptr<_Func, _Tp, __void_t<_Func<_Alloc>>>	_Ptr<_Func, _Tp, <unnamed>>
__rebind<_Ptr, _Up, void>	__rebind<_Tp, _Up, <unnamed>>
__rebind<_Tp, _Up, __void_t<rebind<_Up>>>	__rebind<_Tp, _Up, <unnamed>>
is_void<shared_ptr<job_t>>	is_void<_Tp>
is_void<block_t>	is_void<_Tp>
is_void<char>	is_void<_Tp>
is_void<const char>	is_void<_Tp>
is_void<wchar_t>	is_void<_Tp>
is_void<const wchar_t>	is_void<_Tp>
_Impl	_Impl
is_void<_Sp_counted_ptr_inplace<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _S_atomic>>	is_void<_Tp>
_Hash_node_value_base<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>>	_Hash_node_value_base<_Value>
is_void<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, true>>	is_void<_Tp>
is_void<_Hash_node_base *>	is_void<_Tp>
_Hash_node_value_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	_Hash_node_value_base<_Value>
is_void<_Hash_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true>>	is_void<_Tp>
_Hash_node_value_base<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>>	_Hash_node_value_base<_Value>
is_void<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, true>>	is_void<_Tp>
_Impl	_Impl
is_void<_Sp_counted_ptr_inplace<mutex, allocator<mutex>, _S_atomic>>	is_void<_Tp>
_Impl	_Impl
is_void<_Sp_counted_ptr_inplace<_State_baseV2, allocator<_State_baseV2>, _S_atomic>>	is_void<_Tp>
is_same<_T1, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_T2, _U2>	is_same<<unnamed>, <unnamed>>
__is_referenceable<_Tp>	__is_referenceable<_Tp>
__is_referenceable<_Tp>	__is_referenceable<_Tp>
__is_referenceable<_Tp>	__is_referenceable<_Tp>
__is_referenceable<_Tp>	__is_referenceable<_Tp>
__is_referenceable<_Tp>	__is_referenceable<_Tp>
__is_referenceable<_Tp>	__is_referenceable<_Tp>
__is_referenceable<_Tp>	__is_referenceable<_Tp>
__is_referenceable<_Tp>	__is_referenceable<_Tp>
__is_referenceable<_Tp>	__is_referenceable<_Tp>
__is_referenceable<_Tp>	__is_referenceable<_Tp>
__is_referenceable<_Tp>	__is_referenceable<_Tp>
__is_referenceable<_Tp>	__is_referenceable<_Tp>
__is_referenceable<_Tp>	__is_referenceable<_Tp>
__is_referenceable<_Tp>	__is_referenceable<_Tp>
_List<unsigned short, unsigned int, unsigned long, unsigned long long>	_List<_Tp, _Up...>
__select<2UL, _List<unsigned short, unsigned int, unsigned long, unsigned long long>, true>	__select<_Sz, _List<_Uint, _UInts...>, true>
__select<2UL, _List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>, false>	__select<_Sz, _List<_Uint, _UInts...>, false>
_List<unsigned int, unsigned long, unsigned long long>	_List<_Tp, _Up...>
__select<4UL, _List<unsigned int, unsigned long, unsigned long long>, true>	__select<_Sz, _List<_Uint, _UInts...>, true>
__select<4UL, _List<unsigned short, unsigned int, unsigned long, unsigned long long>, false>	__select<_Sz, _List<_Uint, _UInts...>, false>
__select<4UL, _List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>, false>	__select<_Sz, _List<_Uint, _UInts...>, false>
__select<sizeof(_Tp), _List<unsigned char, unsigned short, unsigned int, unsigned long, unsigned long long>, <expression>>	__select<_Sz, _Tp, <unnamed>>
_List<>	_List<<unnamed>...>
_List<unsigned long long>	_List<_Tp, _Up...>
_List<unsigned long, unsigned long long>	_List<_Tp, _Up...>
__select<_Sz, _List<_Uint, _UInts...>, false>	__select<_Sz, _Tp, <unnamed>>
__select<_Sz, _List<_Uint, _UInts...>, true>	__select<_Sz, _Tp, <unnamed>>
_List<_Tp, _Up...>	_List<<unnamed>...>
__is_referenceable<_Tp>	__is_referenceable<_Tp>
is_void<_Tp>	is_void<_Tp>
__or_<__is_referenceable<_Tp>, is_void<_Tp>>	__or_<<unnamed>...>
is_enum<_Tp>	is_enum<_Tp>
_TC<<expression>, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &>	_TC<<unnamed>, _Elements...>
_TC<value, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &>	_Tuple_impl<_Idx, _Head>
conditional<true, tuple<_Result_base *, _Deleter> &&, __nonesuch_no_braces &&>	conditional<_Cond, _Iftrue, _Iffalse>
__and_<is_convertible<pointer, _Result_base *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, _Result_base *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
conditional<true, tuple<_Result<void> *, _Deleter> &&, __nonesuch_no_braces &&>	conditional<_Cond, _Iftrue, _Iffalse>
union <unnamed>	union <unnamed>
union <unnamed>	union <unnamed>
_Alloc_hider	_Alloc_hider
_Alloc_hider	_Alloc_hider
__normal_iterator<wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	__normal_iterator<_Iterator, _Container>
__normal_iterator<wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<const wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<const wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	reverse_iterator<_Iterator>
rebind<wchar_t>	rebind<_Tp>
rebind<wchar_t>	rebind<_Tp>
__make_unsigned_selector<wchar_t, true, false>	__make_unsigned_selector<_Tp, true, false>
__make_unsigned_selector<char16_t, true, false>	__make_unsigned_selector<_Tp, true, false>
__make_unsigned_selector<char32_t, true, false>	__make_unsigned_selector<_Tp, true, false>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Up>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Up>	__is_integer<_Tp>
__is_integer<_Vp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Up>	__is_integer<_Tp>
__is_integer<_Vp>	__is_integer<_Tp>
__is_integer<_Wp>	__is_integer<_Tp>
_Tuple_impl<0UL, _Result<void> *, _Deleter>	_Tuple_impl<_Idx, _Head, _Tail...>
remove_reference<tuple<_Result<void> *, _Deleter> &>	remove_reference<_Tp &>
_Tuple_impl<0UL, _Result_base *, _Deleter>	_Tuple_impl<_Idx, _Head, _Tail...>
remove_reference<tuple<_Result_base *, _Deleter> &>	remove_reference<_Tp &>
remove_const<_State_baseV2>	remove_const<_Tp>
remove_cv<_State_baseV2>	remove_cv<_Tp>
allocator_traits<allocator<_State_baseV2>>	allocator_traits<allocator<_Tp>>
_Sp_ebo_helper<0, allocator<_State_baseV2>, true>	_Sp_ebo_helper<_Nm, _Tp, true>
remove_const<mutex>	remove_const<_Tp>
remove_cv<mutex>	remove_cv<_Tp>
allocator_traits<allocator<mutex>>	allocator_traits<allocator<_Tp>>
_Sp_ebo_helper<0, allocator<mutex>, true>	_Sp_ebo_helper<_Nm, _Tp, true>
remove_const<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	remove_const<_Tp>
remove_cv<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	remove_cv<_Tp>
allocator_traits<allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	allocator_traits<allocator<_Tp>>
_Sp_ebo_helper<0, allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, true>	_Sp_ebo_helper<_Nm, _Tp, true>
_Sp_alloc_shared_tag<allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	_Sp_alloc_shared_tag<_Alloc>
remove_reference<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	remove_reference<_Tp>
_Sp_alloc_shared_tag<allocator<mutex>>	_Sp_alloc_shared_tag<_Alloc>
_Sp_alloc_shared_tag<allocator<_State_baseV2>>	_Sp_alloc_shared_tag<_Alloc>
remove_reference<autoloadable_file_t &>	remove_reference<_Tp &>
remove_reference<time_point<steady_clock, duration<signed long, ratio<1L, 1000000000L>>> &>	remove_reference<_Tp &>
remove_reference<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &>	remove_reference<_Tp &>
remove_reference<known_file_t>	remove_reference<_Tp>
_Hashtable_ebo_helper<0, allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, true>>, true>	_Hashtable_ebo_helper<_Nm, _Tp, true>
remove_reference<const vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> &>	remove_reference<_Tp &>
remove_reference<default_delete<autoload_file_cache_t>>	remove_reference<_Tp>
_Hashtable_ebo_helper<0, allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, true>>, true>	_Hashtable_ebo_helper<_Nm, _Tp, true>
_Hashtable_ebo_helper<0, allocator<_Hash_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true>>, true>	_Hashtable_ebo_helper<_Nm, _Tp, true>
remove_reference<autoload_file_cache_t *&>	remove_reference<_Tp &>
move_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *>	move_iterator<_Iterator>
_Function_handler<..(..), ..(*)(..)>	_Function_handler<..(..), _Functor>
remove_reference<..(*&)(..)>	remove_reference<_Tp &>
remove_reference<topic_t &>	remove_reference<_Tp &>
iterator_traits<const unique_ptr<process_t, default_delete<process_t>> *>	iterator_traits<const _Tp *>
_Bvector_impl	_Bvector_impl
_Bvector_impl_data	_Bvector_impl_data
iterator_traits<const char *>	iterator_traits<const _Tp *>
__iterator_traits<__normal_iterator<const wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
__normal_iterator<const element_t *, vector<element_t, allocator<element_t>>>	__normal_iterator<_Iterator, _Container>
iterator_traits<const element_t *>	iterator_traits<const _Tp *>
remove_reference<action_t &>	remove_reference<_Tp &>
remove_reference<int>	remove_reference<_Tp>
remove_reference<_Deleter>	remove_reference<_Tp>
remove_reference<_Result<void> *&>	remove_reference<_Tp &>
__success_type<void>	__success_type<_Tp>
remove_reference<..(*)(..)>	remove_reference<_Tp>
remove_reference<thread *>	remove_reference<_Tp>
_Function_handler<..(..), _Setter<void, void>>	_Function_handler<..(..), _Functor>
remove_reference<_Setter<void, void> &>	remove_reference<_Tp &>
_Function_handler<..(..), _Setter<void, __exception_ptr_tag>>	_Function_handler<..(..), _Functor>
remove_reference<_Setter<void, __exception_ptr_tag> &>	remove_reference<_Tp &>
remove_reference<_Make_ready *&>	remove_reference<_Tp &>
remove_reference<..(*)(..)>	remove_reference<_Tp>
remove_reference<_State_baseV2 *>	remove_reference<_Tp>
remove_reference<function<..(..)> *>	remove_reference<_Tp>
remove_reference<bool *>	remove_reference<_Tp>
remove_reference<_Result_base *&>	remove_reference<_Tp &>
remove_reference<id &>	remove_reference<_Tp &>
remove_reference<shared_ptr<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>> &>	remove_reference<_Tp &>
remove_reference<allocator<wchar_t> &>	remove_reference<_Tp &>
remove_reference<int &>	remove_reference<_Tp &>
rebind<unsigned long>	rebind<_Tp>
remove_reference<basic_string<char, char_traits<char>, allocator<char>> &>	remove_reference<_Tp &>
remove_reference<basic_string<char, char_traits<char>, allocator<char>> &>	remove_reference<_Tp &>
duration_values<signed long>	duration_values<_Rep>
__success_type<signed long>	__success_type<_Tp>
__duration_cast_impl<duration<signed long, ratio<1L, 1L>>, ratio<1L, 1000000000L>, signed long, true, false>	__duration_cast_impl<_ToDur, _CF, _CR, true, false>
remove_reference<..(*&)(..)>	remove_reference<_Tp &>
remove_reference<_Any_data &>	remove_reference<_Tp &>
initializer_list<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>>	initializer_list<_E>
initializer_list<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>>	initializer_list<_E>
tuple_element<0UL, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>>	tuple_element<0UL, pair<_Tp1, _Tp2>>
remove_reference<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t> &>	remove_reference<_Tp &>
tuple_element<0UL, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>>	tuple_element<0UL, pair<_Tp1, _Tp2>>
remove_reference<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t> &>	remove_reference<_Tp &>
__strip_reference_wrapper<bool>	__strip_reference_wrapper<_Tp>
__decay_and_strip<bool>	__decay_and_strip<_Tp>
__strip_reference_wrapper<int>	__strip_reference_wrapper<_Tp>
__decay_and_strip<int>	__decay_and_strip<_Tp>
remove_reference<bool>	remove_reference<_Tp>
__strip_reference_wrapper<unsigned long>	__strip_reference_wrapper<_Tp>
__decay_and_strip<unsigned long>	__decay_and_strip<_Tp>
remove_reference<unsigned long>	remove_reference<_Tp>
is_same<int, int>	is_same<_Tp, _Tp>
is_same<long, int>	is_same<<unnamed>, <unnamed>>
is_same<unsigned long, int>	is_same<<unnamed>, <unnamed>>
is_same<long long, int>	is_same<<unnamed>, <unnamed>>
is_same<unsigned long long, int>	is_same<<unnamed>, <unnamed>>
is_same<float, int>	is_same<<unnamed>, <unnamed>>
is_same<double, int>	is_same<<unnamed>, <unnamed>>
is_same<long double, int>	is_same<<unnamed>, <unnamed>>
move_iterator<int *>	move_iterator<_Iterator>
move_iterator<action_t *>	move_iterator<_Iterator>
move_iterator<const node_t **>	move_iterator<_Iterator>
__iterator_traits<_Bit_const_iterator, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
__iterator_traits<_Bit_iterator, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
common_type<signed long, signed long>	common_type<_Tp, _Up>
__result_of_success<void, __invoke_memfun_deref>	__result_of_success<_Tp, _Tag>
__result_of_success<unique_ptr<_Result<void>, _Deleter>, __invoke_other>	__result_of_success<_Tp, _Tag>
__result_of_success<bool, __invoke_other>	__result_of_success<_Tp, _Tag>
__result_of_success<unsigned long, __invoke_other>	__result_of_success<_Tp, _Tag>
__success_type<unsigned long>	__success_type<_Tp>
__success_type<bool>	__success_type<_Tp>
__success_type<unique_ptr<_Result<void>, _Deleter>>	__success_type<_Tp>
__common_type_impl<signed long, signed long>	__common_type_impl<_Tp, _Up>
conditional<true, const node_t *&&, const node_t *&>	conditional<_Cond, _Iftrue, _Iffalse>
conditional<true, action_t &&, action_t &>	conditional<_Cond, _Iftrue, _Iffalse>
iterator_traits<action_t *>	iterator_traits<_Tp *>
conditional<true, int &&, int &>	conditional<_Cond, _Iftrue, _Iffalse>
iterator_traits<int *>	iterator_traits<_Tp *>
conditional<true, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &&, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &>	conditional<_Cond, _Iftrue, _Iffalse>
_Head_base<0UL, _Result_base *, false>	_Head_base<_Idx, _Head, false>
_Tuple_impl<1UL, _Deleter>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<1UL, default_delete<parse_execution_context_t>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<0UL, parse_execution_context_t *, default_delete<parse_execution_context_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_Tuple_impl<1UL, default_delete<process_t>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<0UL, process_t *, default_delete<process_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_Tuple_impl<1UL, default_delete<_Make_ready>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<0UL, _Make_ready *, default_delete<_Make_ready>>	_Tuple_impl<_Idx, _Head, _Tail...>
_Tuple_impl<0UL, env_stack_impl_t *, default_delete<env_stack_impl_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_Tuple_impl<1UL, default_delete<env_stack_impl_t>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<0UL, autoload_file_cache_t *, default_delete<autoload_file_cache_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_Tuple_impl<1UL, default_delete<autoload_file_cache_t>>	_Tuple_impl<_Idx, _Head>
_Head_base<0UL, _Result<void> *, false>	_Head_base<_Idx, _Head, false>
is_integral<char32_t>	is_integral<_Tp>
is_enum<char32_t>	is_enum<_Tp>
is_integral<char16_t>	is_integral<_Tp>
is_enum<char16_t>	is_enum<_Tp>
is_integral<unsigned short>	is_integral<_Tp>
is_enum<unsigned short>	is_enum<_Tp>
is_integral<wchar_t>	is_integral<_Tp>
is_enum<wchar_t>	is_enum<_Tp>
is_integral<unsigned int>	is_integral<_Tp>
is_enum<unsigned int>	is_enum<_Tp>
is_const<char32_t>	is_const<<unnamed>>
is_volatile<char32_t>	is_volatile<<unnamed>>
is_const<char16_t>	is_const<<unnamed>>
is_volatile<char16_t>	is_volatile<<unnamed>>
is_const<wchar_t>	is_const<<unnamed>>
is_volatile<wchar_t>	is_volatile<<unnamed>>
iterator_traits<wchar_t *>	iterator_traits<_Tp *>
__result_of_memfun_deref<..(*)(..), thread *>	__result_of_memfun_deref<_MemPtr, _Arg, _Args...>
__result_of_memfun<..(*)(..), thread *>	__result_of_memfun<_Res _Class::*, _Arg, _Args...>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
__result_of_memfun_deref<..(*)(..), _State_baseV2 *, function<..(..)> *, bool *>	__result_of_memfun_deref<_MemPtr, _Arg, _Args...>
__result_of_memfun<..(*)(..), _State_baseV2 *, function<..(..)> *, bool *>	__result_of_memfun<_Res _Class::*, _Arg, _Args...>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
is_same<_Dummy, void>	is_same<<unnamed>, <unnamed>>
_Head_base<0UL, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &, false>	_Head_base<_Idx, _Head, false>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_Tuple_impl<0UL, _UHead>	_Tuple_impl<_Idx, _Elements...>
_TC2<_Dummy>	_TC2<_Dummy>
_TC2<_Dummy>	_TC2<_Dummy>
extent<_Tp, <expression>>	extent<<unnamed>, _Uint>
extent<_Tp, <expression>>	extent<<unnamed>, _Uint>
rank<_Tp>	rank<<unnamed>>
rank<_Tp>	rank<<unnamed>>
is_array<_Tp>	is_array<<unnamed>>
extent<_Tp, 0U>	extent<<unnamed>, _Uint>
is_same<_T2, _U2>	is_same<<unnamed>, <unnamed>>
is_same<_T1, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_T2, _U2>	is_same<<unnamed>, <unnamed>>
is_same<_T1, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_T2, _U2>	is_same<<unnamed>, <unnamed>>
is_same<_T1, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_T2, _U2>	is_same<<unnamed>, <unnamed>>
is_same<_T1, _U1>	is_same<<unnamed>, <unnamed>>
__aligned_buffer<_State_baseV2>	__aligned_buffer<_Tp>
__aligned_buffer<mutex>	__aligned_buffer<_Tp>
__aligned_buffer<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>>	__aligned_buffer<_Tp>
__aligned_buffer<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	__aligned_buffer<_Tp>
__aligned_buffer<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>>	__aligned_buffer<_Tp>
__aligned_buffer<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	__aligned_buffer<_Tp>
is_same<char32_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<char32_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<char32_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<char32_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<char32_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<char32_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<char16_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<char16_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<char16_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<char16_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<char16_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<char16_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
iterator_traits<char *>	iterator_traits<_Tp *>
_TC<value, process_t *, default_delete<process_t>>	_TC<<unnamed>, _Elements...>
_TC<true, process_t *, default_delete<process_t>>	_TC<<unnamed>, _Elements...>
_TC<value, keyword_t<kw_command, kw_builtin, kw_exec> *, default_delete<keyword_t<kw_command, kw_builtin, kw_exec>>>	_TC<<unnamed>, _Elements...>
_TC<true, keyword_t<kw_command, kw_builtin, kw_exec> *, default_delete<keyword_t<kw_command, kw_builtin, kw_exec>>>	_TC<<unnamed>, _Elements...>
_TC<value, case_item_t *, default_delete<case_item_t>>	_TC<<unnamed>, _Elements...>
_TC<true, case_item_t *, default_delete<case_item_t>>	_TC<<unnamed>, _Elements...>
_TC<value, elseif_clause_t *, default_delete<elseif_clause_t>>	_TC<<unnamed>, _Elements...>
_TC<true, elseif_clause_t *, default_delete<elseif_clause_t>>	_TC<<unnamed>, _Elements...>
_TC<value, else_clause_t *, default_delete<else_clause_t>>	_TC<<unnamed>, _Elements...>
_TC<true, else_clause_t *, default_delete<else_clause_t>>	_TC<<unnamed>, _Elements...>
_TC<value, andor_job_t *, default_delete<andor_job_t>>	_TC<<unnamed>, _Elements...>
_TC<true, andor_job_t *, default_delete<andor_job_t>>	_TC<<unnamed>, _Elements...>
_TC<value, job_continuation_t *, default_delete<job_continuation_t>>	_TC<<unnamed>, _Elements...>
_TC<true, job_continuation_t *, default_delete<job_continuation_t>>	_TC<<unnamed>, _Elements...>
_TC<value, job_conjunction_continuation_t *, default_delete<job_conjunction_continuation_t>>	_TC<<unnamed>, _Elements...>
_TC<true, job_conjunction_continuation_t *, default_delete<job_conjunction_continuation_t>>	_TC<<unnamed>, _Elements...>
_TC<value, job_conjunction_t *, default_delete<job_conjunction_t>>	_TC<<unnamed>, _Elements...>
_TC<true, job_conjunction_t *, default_delete<job_conjunction_t>>	_TC<<unnamed>, _Elements...>
_TC<value, token_t<end> *, default_delete<token_t<end>>>	_TC<<unnamed>, _Elements...>
_TC<true, token_t<end> *, default_delete<token_t<end>>>	_TC<<unnamed>, _Elements...>
_TC<value, keyword_t<kw_and, kw_or> *, default_delete<keyword_t<kw_and, kw_or>>>	_TC<<unnamed>, _Elements...>
_TC<true, keyword_t<kw_and, kw_or> *, default_delete<keyword_t<kw_and, kw_or>>>	_TC<<unnamed>, _Elements...>
_TC<value, token_t<background> *, default_delete<token_t<background>>>	_TC<<unnamed>, _Elements...>
_TC<true, token_t<background> *, default_delete<token_t<background>>>	_TC<<unnamed>, _Elements...>
_TC<value, keyword_t<kw_time> *, default_delete<keyword_t<kw_time>>>	_TC<<unnamed>, _Elements...>
_TC<true, keyword_t<kw_time> *, default_delete<keyword_t<kw_time>>>	_TC<<unnamed>, _Elements...>
_TC<value, variable_assignment_t *, default_delete<variable_assignment_t>>	_TC<<unnamed>, _Elements...>
_TC<true, variable_assignment_t *, default_delete<variable_assignment_t>>	_TC<<unnamed>, _Elements...>
_TC<value, argument_or_redirection_t *, default_delete<argument_or_redirection_t>>	_TC<<unnamed>, _Elements...>
_TC<true, argument_or_redirection_t *, default_delete<argument_or_redirection_t>>	_TC<<unnamed>, _Elements...>
_TC<value, argument_t *, default_delete<argument_t>>	_TC<<unnamed>, _Elements...>
_TC<true, argument_t *, default_delete<argument_t>>	_TC<<unnamed>, _Elements...>
_TC<value, node_t *, node_deleter_t>	_TC<<unnamed>, _Elements...>
_TC<true, node_t *, node_deleter_t>	_TC<<unnamed>, _Elements...>
_TC<value, _Result<void> *, _Deleter>	_TC<<unnamed>, _Elements...>
_TC<true, _Result<void> *, _Deleter>	_TC<<unnamed>, _Elements...>
_TC<value, _Make_ready *, default_delete<_Make_ready>>	_TC<<unnamed>, _Elements...>
_TC<true, _Make_ready *, default_delete<_Make_ready>>	_TC<<unnamed>, _Elements...>
_TC<value, _Result_base *, _Deleter>	_TC<<unnamed>, _Elements...>
_TC<true, _Result_base *, _Deleter>	_TC<<unnamed>, _Elements...>
_TC<value, autoload_file_cache_t *, default_delete<autoload_file_cache_t>>	_TC<<unnamed>, _Elements...>
_TC<true, autoload_file_cache_t *, default_delete<autoload_file_cache_t>>	_TC<<unnamed>, _Elements...>
is_same<_Dummy, void>	is_same<<unnamed>, <unnamed>>
is_same<_Dummy, void>	is_same<<unnamed>, <unnamed>>
is_same<_Dummy, void>	is_same<<unnamed>, <unnamed>>
is_same<_Dummy, void>	is_same<<unnamed>, <unnamed>>
is_same<_Dummy, void>	is_same<<unnamed>, <unnamed>>
tuple<_Elements...>	tuple<_Elements...>
is_same<tuple<_Elements...>, tuple<_UElements...>>	is_same<<unnamed>, <unnamed>>
is_same<_Dummy, void>	is_same<<unnamed>, <unnamed>>
is_same<tuple<_Elements...>, tuple<_UElements...>>	is_same<<unnamed>, <unnamed>>
is_same<_Dummy, void>	is_same<<unnamed>, <unnamed>>
is_same<tuple<_Elements...>, tuple<_UElements...>>	is_same<<unnamed>, <unnamed>>
is_same<_Dummy, void>	is_same<<unnamed>, <unnamed>>
is_same<tuple<_Elements...>, tuple<_UElements...>>	is_same<<unnamed>, <unnamed>>
is_same<_Dummy, void>	is_same<<unnamed>, <unnamed>>
is_same<_Dummy, void>	is_same<<unnamed>, <unnamed>>
is_same<_Dummy, void>	is_same<<unnamed>, <unnamed>>
is_same<tuple<_Elements...>, tuple<_UElements...>>	is_same<<unnamed>, <unnamed>>
is_same<_Dummy, void>	is_same<<unnamed>, <unnamed>>
is_same<tuple<_Elements...>, tuple<_UElements...>>	is_same<<unnamed>, <unnamed>>
is_same<_Dummy, void>	is_same<<unnamed>, <unnamed>>
is_same<tuple<_Elements...>, tuple<_UElements...>>	is_same<<unnamed>, <unnamed>>
is_same<_Dummy, void>	is_same<<unnamed>, <unnamed>>
is_same<tuple<_Elements...>, tuple<_UElements...>>	is_same<<unnamed>, <unnamed>>
is_same<_Dummy, void>	is_same<<unnamed>, <unnamed>>
tuple<_UElements...>	tuple<_Elements...>
is_same<tuple<_Elements...>, tuple<_UElements...>>	is_same<<unnamed>, <unnamed>>
is_same<_Dummy, void>	is_same<<unnamed>, <unnamed>>
__not_alloc_shared_tag<_Sp_alloc_shared_tag<allocator<_State_baseV2>>>	__not_alloc_shared_tag<_Sp_alloc_shared_tag<_Tp>>
__not_alloc_shared_tag<_Sp_alloc_shared_tag<allocator<mutex>>>	__not_alloc_shared_tag<_Sp_alloc_shared_tag<_Tp>>
__not_alloc_shared_tag<_Sp_alloc_shared_tag<allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	__not_alloc_shared_tag<_Sp_alloc_shared_tag<_Tp>>
__not_alloc_shared_tag<_Deleter>	__not_alloc_shared_tag<_Tp>
__not_alloc_shared_tag<_Deleter>	__not_alloc_shared_tag<_Tp>
__not_alloc_shared_tag<_Sp_alloc_shared_tag<_Tp>>	__not_alloc_shared_tag<_Tp>
is_same<bool, _U1>	is_same<<unnamed>, <unnamed>>
is_same<unsigned long, _U2>	is_same<<unnamed>, <unnamed>>
pair<_Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, false, true>, _Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, false, true>>	pair<_T1, _T2>
pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, false, true>, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, false, true>>	pair<_T1, _T2>
pair<_Rb_tree_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>, _Rb_tree_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>>	pair<_T1, _T2>
pair<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>, _Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>>	pair<_T1, _T2>
pair<_Node_const_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true, true>, _Node_const_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true, true>>	pair<_T1, _T2>
pair<_Node_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true, true>, _Node_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true, true>>	pair<_T1, _T2>
pair<_Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, false, true>, _Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, false, true>>	pair<_T1, _T2>
pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, false, true>, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, false, true>>	pair<_T1, _T2>
is_same<int, _U2>	is_same<<unnamed>, <unnamed>>
conditional<false, __is_nothrow_invocable<const hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> &, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &>, __is_fast_hash<hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	conditional<false, _Iftrue, _Iffalse>
is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, true> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, true> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, true> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, true> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, true> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, true> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
allocator_traits<allocator<_Hash_node_base *>>	allocator_traits<allocator<_Tp>>
_Equal_helper<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, unsigned long, true>	_Equal_helper<_Key, _Value, _ExtractKey, _Equal, _HashCodeType, true>
_Hashtable_ebo_helper<0, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>	_Hashtable_ebo_helper<_Nm, _Tp, true>
is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, true> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, true> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, true> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, true> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, true> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, true> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
_Equal_helper<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, unsigned long, true>	_Equal_helper<_Key, _Value, _ExtractKey, _Equal, _HashCodeType, true>
is_same<_Hash_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Hash_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Hash_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
conditional<false, __not_<integral_constant<bool, true>>, is_default_constructible<_Mod_range_hashing>>	conditional<false, _Iftrue, _Iffalse>
enable_if<value, void>	enable_if<<unnamed>, _Tp>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, _Pair &&>	is_constructible<_Tp, _Args...>
enable_if<value, void>	enable_if<<unnamed>, _Tp>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, _Pair &&>	is_constructible<_Tp, _Args...>
_Equal_helper<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, _Identity, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, unsigned long, true>	_Equal_helper<_Key, _Value, _ExtractKey, _Equal, _HashCodeType, true>
__is_convertible_helper<unique_ptr<_Result<void>, _Deleter>, unique_ptr<_Result_base, _Deleter>, false>	__is_convertible_helper<_From, _To, false>
ratio_less<_R1, _R2>	ratio_less<_R1, _R2>
ratio_less<_R2, _R1>	ratio_less<_R1, _R2>
ratio_equal<_R1, _R2>	ratio_equal<_R1, _R2>
__static_sign<_Pn>	__static_sign<_Pn>
__static_gcd<1000000000L, 1L>	__static_gcd<_Pn, _Qn>
__static_gcd<1L, 1L>	__static_gcd<_Pn, _Qn>
__static_gcd<1L, 1000000000L>	__static_gcd<_Pn, _Qn>
is_floating_point<signed long>	is_floating_point<_Tp>
is_same<element_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<element_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<element_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<element_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<element_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<element_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<element_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<element_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<element_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<element_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<element_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<element_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
__is_copy_constructible_impl<unsigned long, true>	__is_copy_constructible_impl<_Tp, true>
_Callable<function<..(..)>, _Tp>	_Callable<_Func, _Res2>
_Callable<..(*)(..), bool>	_Callable<_Func, _Res2>
_Callable<function<..(..)>, _Tp>	_Callable<_Func, _Res2>
is_same<basic_string<char, char_traits<char>, allocator<char>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<basic_string<char, char_traits<char>, allocator<char>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<basic_string<char, char_traits<char>, allocator<char>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<basic_string<char, char_traits<char>, allocator<char>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<basic_string<char, char_traits<char>, allocator<char>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<basic_string<char, char_traits<char>, allocator<char>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<int *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<int *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<int *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<int *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<int *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<int *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
_Hashtable_ebo_helper<2, _Mod_range_hashing, true>	_Hashtable_ebo_helper<_Nm, _Tp, true>
_Hashtable_ebo_helper<1, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>	_Hashtable_ebo_helper<_Nm, _Tp, true>
_Hashtable_ebo_helper<0, _Identity, true>	_Hashtable_ebo_helper<_Nm, _Tp, true>
_Node_iterator_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true>	_Node_iterator_base<_Value, _Cache_hash_code>
_Hashtable_ebo_helper<0, _Select1st, true>	_Hashtable_ebo_helper<_Nm, _Tp, true>
is_same<_Rb_tree_node_base *, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_node_base *, _U2>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
__aligned_membuf<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>	__aligned_membuf<_Tp>
unary_function<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	unary_function<_Arg, _Result>
_Rb_tree_key_compare<less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	_Rb_tree_key_compare<_Key_compare>
__has_esft_base<mutex, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
_Callable<_Setter<void, __exception_ptr_tag>, unique_ptr<_Result<void>, _Deleter>>	_Callable<_Func, _Res2>
_Callable<_Setter<void, void>, unique_ptr<_Result<void>, _Deleter>>	_Callable<_Func, _Res2>
_Callable<function<..(..)>, _Tp>	_Callable<_Func, _Res2>
__has_esft_base<_State_baseV2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
is_same<unsigned long, _U1>	is_same<<unnamed>, <unnamed>>
is_same<action_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<action_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<action_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<action_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<action_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<action_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<redirection_spec_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<redirection_spec_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<redirection_spec_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<redirection_spec_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<redirection_spec_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<redirection_spec_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
_Temporary_value	_Temporary_value
__normal_iterator<element_t *, vector<element_t, allocator<element_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<element_t *, vector<element_t, allocator<element_t>>>>	reverse_iterator<_Iterator>
__normal_iterator<const element_t *, vector<element_t, allocator<element_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const element_t *, vector<element_t, allocator<element_t>>>>	reverse_iterator<_Iterator>
_Temporary_value	_Temporary_value
__normal_iterator<element_t *, vector<element_t, allocator<element_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<element_t *, vector<element_t, allocator<element_t>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<const element_t *, vector<element_t, allocator<element_t>>>>	reverse_iterator<_Iterator>
is_same<shared_ptr<const io_data_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<shared_ptr<const io_data_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<shared_ptr<const io_data_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<shared_ptr<const io_data_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<shared_ptr<const io_data_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<shared_ptr<const io_data_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unsigned long *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unsigned long *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unsigned long *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unsigned long *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unsigned long *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unsigned long *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<source_range_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<source_range_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<source_range_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<source_range_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<source_range_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<source_range_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
iterator_traits<const node_t *const *>	iterator_traits<const _Tp *>
__and_<is_convertible<pointer, keyword_t<kw_command, kw_builtin, kw_exec> *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, keyword_t<kw_command, kw_builtin, kw_exec> *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, else_clause_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, else_clause_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, keyword_t<kw_and, kw_or> *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, keyword_t<kw_and, kw_or> *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
is_enum<topic_t>	is_enum<_Tp>
__array_traits<unsigned long, 3UL>	__array_traits<_Tp, _Nm>
reverse_iterator<const unsigned long *>	reverse_iterator<_Iterator>
reverse_iterator<unsigned long *>	reverse_iterator<_Iterator>
is_same<shared_ptr<job_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<shared_ptr<job_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<shared_ptr<job_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<shared_ptr<job_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<shared_ptr<job_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<shared_ptr<job_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
_Deque_iterator<shared_ptr<job_t>, _CvTp &, _CvTp *>	_Deque_iterator<_Tp, _Ref, _Ptr>
is_same<concrete_assignment *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<concrete_assignment *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<concrete_assignment *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<concrete_assignment *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<concrete_assignment *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<concrete_assignment *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
is_array<internal_proc_t>	is_array<<unnamed>>
is_void<internal_proc_t>	is_void<_Tp>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
__shared_ptr_access<io_buffer_t, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
__shared_ptr_access<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
enable_shared_from_this<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	enable_shared_from_this<_Tp>
__enable_shared_from_this<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _S_atomic>	__enable_shared_from_this<_Tp, _Lp>
__shared_ptr_access<parser_t, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
__enable_shared_from_this<parser_t, _S_atomic>	__enable_shared_from_this<_Tp, _Lp>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
is_same<block_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<block_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<block_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<block_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<block_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<block_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
_Deque_iterator<block_t, _CvTp &, _CvTp *>	_Deque_iterator<_Tp, _Ref, _Ptr>
is_same<unique_ptr<profile_item_t, default_delete<profile_item_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unique_ptr<profile_item_t, default_delete<profile_item_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unique_ptr<profile_item_t, default_delete<profile_item_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unique_ptr<profile_item_t, default_delete<profile_item_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unique_ptr<profile_item_t, default_delete<profile_item_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unique_ptr<profile_item_t, default_delete<profile_item_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
__shared_ptr_access<const autoclose_fd_t, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
is_same<shared_ptr<event_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<shared_ptr<event_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<shared_ptr<event_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<shared_ptr<event_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<shared_ptr<event_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<shared_ptr<event_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_List_node<event_blockage_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_List_node<event_blockage_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_List_node<event_blockage_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_List_node<event_blockage_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_List_node<event_blockage_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_List_node<event_blockage_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<event_blockage_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<event_blockage_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<event_blockage_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<event_blockage_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<event_blockage_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<event_blockage_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
binary_function<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>	binary_function<_Arg1, _Arg2, _Result>
is_same<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<file_id_t, _U2>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true, true>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<bool, _U2>	is_same<<unnamed>, <unnamed>>
conditional<true, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &>	conditional<_Cond, _Iftrue, _Iffalse>
conditional<true, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *>	conditional<_Cond, _Iftrue, _Iffalse>
_PCC<<expression>, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>	_PCC<<unnamed>, _T1, _T2>
__pair_base<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>	__pair_base<_U1, _U2>
is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
_PCC<<expression>, _Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>, bool>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, _Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>, bool>	_PCC<<unnamed>, _T1, _T2>
__pair_base<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>, bool>	__pair_base<_U1, _U2>
is_same<known_file_t, _U2>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, false, true>, _U1>	is_same<<unnamed>, <unnamed>>
__duration_cast_impl<duration<signed long, ratio<1L, 1000000000L>>, ratio<1000000000L, 1L>, signed long, false, true>	__duration_cast_impl<_ToDur, _CF, _CR, false, true>
remove_reference<allocator<char> &>	remove_reference<_Tp &>
remove_reference<allocator<char> &>	remove_reference<_Tp &>
__is_move_iterator<unsigned long *>	__is_move_iterator<_Tp>
__is_move_iterator<_Bit_const_iterator>	__is_move_iterator<_Tp>
remove_reference<const int &>	remove_reference<_Tp &>
remove_reference<_State_baseV2 *&>	remove_reference<_Tp &>
remove_reference<__uniq_ptr_impl<_Result_base, _Deleter> &>	remove_reference<_Tp &>
remove_reference<__weak_count<_S_atomic> &>	remove_reference<_Tp &>
remove_reference<__uniq_ptr_impl<_Result<void>, _Deleter> &>	remove_reference<_Tp &>
remove_reference<action_t>	remove_reference<_Tp>
remove_reference<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	remove_reference<_Tp>
remove_reference<separation_type_t &>	remove_reference<_Tp &>
iterator_traits<element_t *>	iterator_traits<_Tp *>
remove_reference<basic_string<char, char_traits<char>, allocator<char>>>	remove_reference<_Tp>
iterator_traits<element_t *>	iterator_traits<_Tp *>
__is_integer<const wchar_t *>	__is_integer<_Tp>
remove_reference<const node_t *const &>	remove_reference<_Tp &>
remove_reference<topic_t>	remove_reference<_Tp>
__is_move_insertable<allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	is_move_constructible<_Tp>
__is_move_constructible_impl<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &&>	is_constructible<_Tp, _Args...>
__is_integer<wchar_t *>	__is_integer<_Tp>
remove_reference<_Hashtable_alloc<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, true>>> &>	remove_reference<_Tp &>
remove_reference<_Hashtable_alloc<allocator<_Hash_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true>>> &>	remove_reference<_Tp &>
pointer_traits<wchar_t *>	pointer_traits<_Tp *>
remove_reference<autoloadable_file_t>	remove_reference<_Tp>
remove_reference<_Result_base *>	remove_reference<_Tp>
remove_reference<_Tuple_impl<1UL, _Deleter> &>	remove_reference<_Tp &>
remove_reference<_Result<void> *>	remove_reference<_Tp>
is_same<bool, _U2>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, false, true>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<bool, _U2>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, false, true>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<bool, _U2>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, false, true>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<bool, _U2>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, false, true>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<known_file_t, _U2>	is_same<<unnamed>, <unnamed>>
is_same<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<known_file_t, _U2>	is_same<<unnamed>, <unnamed>>
is_same<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<known_file_t, _U2>	is_same<<unnamed>, <unnamed>>
is_same<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<known_file_t, _U2>	is_same<<unnamed>, <unnamed>>
is_same<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<lru_node_t, _U2>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true, true>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true, true>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true, true>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true, true>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<file_id_t, _U2>	is_same<<unnamed>, <unnamed>>
is_same<file_id_t, _U2>	is_same<<unnamed>, <unnamed>>
is_same<file_id_t, _U2>	is_same<<unnamed>, <unnamed>>
is_same<file_id_t, _U2>	is_same<<unnamed>, <unnamed>>
is_array<const autoclose_fd_t>	is_array<<unnamed>>
is_void<const autoclose_fd_t>	is_void<_Tp>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
_TC<value, parse_execution_context_t *, default_delete<parse_execution_context_t>>	_TC<<unnamed>, _Elements...>
_TC<true, parse_execution_context_t *, default_delete<parse_execution_context_t>>	_TC<<unnamed>, _Elements...>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
is_array<parser_t>	is_array<<unnamed>>
is_void<parser_t>	is_void<_Tp>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
is_array<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	is_array<<unnamed>>
is_void<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	is_void<_Tp>
__has_esft_base<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
is_array<io_buffer_t>	is_array<<unnamed>>
is_void<io_buffer_t>	is_void<_Tp>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
__and_<is_convertible<pointer, argument_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, argument_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, job_conjunction_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, job_conjunction_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, argument_or_redirection_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, argument_or_redirection_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, elseif_clause_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, elseif_clause_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, case_item_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, case_item_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, variable_assignment_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, variable_assignment_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, job_continuation_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, job_continuation_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, job_conjunction_continuation_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, job_conjunction_continuation_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, andor_job_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, andor_job_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
iterator_traits<const element_t *>	iterator_traits<const _Tp *>
is_same<unsigned long, _U2>	is_same<<unnamed>, <unnamed>>
is_same<unsigned long, _U1>	is_same<<unnamed>, <unnamed>>
is_same<unsigned long, _U2>	is_same<<unnamed>, <unnamed>>
is_same<unsigned long, _U1>	is_same<<unnamed>, <unnamed>>
is_same<unsigned long, _U2>	is_same<<unnamed>, <unnamed>>
is_same<unsigned long, _U1>	is_same<<unnamed>, <unnamed>>
is_same<unsigned long, _U2>	is_same<<unnamed>, <unnamed>>
is_same<unsigned long, _U1>	is_same<<unnamed>, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Tp2	_Tp2
is_same<_Rb_tree_node_base *, _U2>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_node_base *, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_node_base *, _U2>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_node_base *, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_node_base *, _U2>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_node_base *, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_node_base *, _U2>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_node_base *, _U1>	is_same<<unnamed>, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_TC<value, env_stack_impl_t *, default_delete<env_stack_impl_t>>	_TC<<unnamed>, _Elements...>
_TC<true, env_stack_impl_t *, default_delete<env_stack_impl_t>>	_TC<<unnamed>, _Elements...>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
is_constructible<unsigned long, const unsigned long &>	is_constructible<_Tp, _Args...>
__static_gcd<1L, 0L>	__static_gcd<_Pn, 0L>
conditional<true, is_same<bool, bool>, is_convertible<bool, bool>>	conditional<_Cond, _Iftrue, _Iffalse>
conditional<false, is_same<unique_ptr<_Result<void>, _Deleter>, unique_ptr<_Result_base, _Deleter>>, is_convertible<unique_ptr<_Result<void>, _Deleter>, unique_ptr<_Result_base, _Deleter>>>	conditional<false, _Iftrue, _Iffalse>
is_void<unique_ptr<_Result<void>, _Deleter>>	is_void<_Tp>
is_function<unique_ptr<_Result_base, _Deleter>>	is_function<<unnamed>>
is_array<unique_ptr<_Result_base, _Deleter>>	is_array<<unnamed>>
__or_<is_void<unique_ptr<_Result<void>, _Deleter>>, is_function<unique_ptr<_Result_base, _Deleter>>, is_array<unique_ptr<_Result_base, _Deleter>>>	__or_<_B1, _B2, _B3, _Bn...>
is_same<int, _U2>	is_same<<unnamed>, <unnamed>>
is_same<bool, _U1>	is_same<<unnamed>, <unnamed>>
is_same<int, _U2>	is_same<<unnamed>, <unnamed>>
is_same<bool, _U1>	is_same<<unnamed>, <unnamed>>
is_same<int, _U2>	is_same<<unnamed>, <unnamed>>
is_same<bool, _U1>	is_same<<unnamed>, <unnamed>>
is_same<int, _U2>	is_same<<unnamed>, <unnamed>>
is_same<bool, _U1>	is_same<<unnamed>, <unnamed>>
aligned_storage<24UL, 8UL>	aligned_storage<_Len, _Align>
type	type
aligned_storage<88UL, 8UL>	aligned_storage<_Len, _Align>
type	type
aligned_storage<32UL, 8UL>	aligned_storage<_Len, _Align>
type	type
aligned_storage<128UL, 8UL>	aligned_storage<_Len, _Align>
type	type
aligned_storage<40UL, 8UL>	aligned_storage<_Len, _Align>
type	type
is_same<tuple<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &>, tuple<_UElements...>>	is_same<<unnamed>, <unnamed>>
is_same<tuple<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &>, tuple<_UElements...>>	is_same<<unnamed>, <unnamed>>
is_same<tuple<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &>, tuple<_UElements...>>	is_same<<unnamed>, <unnamed>>
is_same<tuple<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &>, tuple<_UElements...>>	is_same<<unnamed>, <unnamed>>
is_same<tuple<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &>, tuple<_UElements...>>	is_same<<unnamed>, <unnamed>>
is_same<tuple<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &>, tuple<_UElements...>>	is_same<<unnamed>, <unnamed>>
is_same<tuple<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &>, tuple<_UElements...>>	is_same<<unnamed>, <unnamed>>
is_same<tuple<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &>, tuple<_UElements...>>	is_same<<unnamed>, <unnamed>>
is_same<tuple<_Elements...>, tuple<_UElements...>>	is_same<<unnamed>, <unnamed>>
is_const<unsigned int>	is_const<<unnamed>>
is_volatile<unsigned int>	is_volatile<<unnamed>>
is_const<unsigned short>	is_const<<unnamed>>
is_volatile<unsigned short>	is_volatile<<unnamed>>
_Head_base<1UL, default_delete<autoload_file_cache_t>, true>	_Head_base<_Idx, _Head, true>
_Head_base<0UL, autoload_file_cache_t *, false>	_Head_base<_Idx, _Head, false>
_Head_base<1UL, default_delete<env_stack_impl_t>, true>	_Head_base<_Idx, _Head, true>
_Head_base<0UL, env_stack_impl_t *, false>	_Head_base<_Idx, _Head, false>
_Head_base<0UL, _Make_ready *, false>	_Head_base<_Idx, _Head, false>
_Head_base<1UL, default_delete<_Make_ready>, true>	_Head_base<_Idx, _Head, true>
_Head_base<0UL, process_t *, false>	_Head_base<_Idx, _Head, false>
_Head_base<1UL, default_delete<process_t>, true>	_Head_base<_Idx, _Head, true>
_Head_base<0UL, parse_execution_context_t *, false>	_Head_base<_Idx, _Head, false>
_Head_base<1UL, default_delete<parse_execution_context_t>, true>	_Head_base<_Idx, _Head, true>
_Head_base<1UL, _Deleter, true>	_Head_base<_Idx, _Head, true>
is_reference<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &>	is_reference<_Tp>
is_reference<int &>	is_reference<_Tp>
is_reference<action_t &>	is_reference<_Tp>
is_reference<const node_t *&>	is_reference<_Tp>
pointer_traits<const wchar_t *>	pointer_traits<_Tp *>
remove_reference<lru_node_t>	remove_reference<_Tp>
remove_reference<const piecewise_construct_t &>	remove_reference<_Tp &>
remove_reference<tuple<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &>>	remove_reference<_Tp>
remove_reference<tuple<>>	remove_reference<_Tp>
__iterator_traits<__normal_iterator<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &>	is_assignable<_Tp, _Up>
__is_move_insertable<allocator<const node_t *>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<const node_t *>	is_move_constructible<_Tp>
__is_move_constructible_impl<const node_t *, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<const node_t *, const node_t *&&>	is_constructible<_Tp, _Args...>
remove_reference<_Vector_impl &>	remove_reference<_Tp &>
__is_integer<const char *>	__is_integer<_Tp>
__is_integer<__normal_iterator<const wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	__is_integer<_Tp>
remove_reference<_Vector_impl &>	remove_reference<_Tp &>
__is_integer<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	__is_integer<_Tp>
__is_pointer<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	__is_pointer<_Tp>
__is_pointer<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *>	__is_pointer<_Tp *>
__are_same<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	__are_same<_Tp, _Tp>
__equal<false>	__equal<_BoolType>
__is_move_insertable<allocator<int>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<int>	is_move_constructible<_Tp>
__is_move_constructible_impl<int, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<int, int &&>	is_constructible<_Tp, _Args...>
remove_reference<_Vector_impl &>	remove_reference<_Tp &>
remove_reference<..(*&)(..)>	remove_reference<_Tp &>
__is_pointer<_Bit_const_iterator>	__is_pointer<_Tp>
__is_pointer<_Bit_iterator>	__is_pointer<_Tp>
__are_same<bool, bool>	__are_same<_Tp, _Tp>
iterator_traits<unsigned long *>	iterator_traits<_Tp *>
__is_pointer<unsigned long *>	__is_pointer<_Tp *>
__are_same<unsigned long, unsigned long>	__are_same<_Tp, _Tp>
__copy_move<false, true, random_access_iterator_tag>	__copy_move<_IsMove, true, random_access_iterator_tag>
remove_reference<_Node_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true, true>>	remove_reference<_Tp>
__strip_reference_wrapper<_Node_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true, true>>	__strip_reference_wrapper<_Tp>
__decay_and_strip<_Node_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true, true>>	__decay_and_strip<_Tp>
pointer_traits<char *>	pointer_traits<_Tp *>
__is_integer<char *>	__is_integer<_Tp>
__is_move_iterator<move_iterator<int *>>	__is_move_iterator<move_iterator<_Iterator>>
__is_move_iterator<move_iterator<action_t *>>	__is_move_iterator<move_iterator<_Iterator>>
__is_move_iterator<move_iterator<const node_t **>>	__is_move_iterator<move_iterator<_Iterator>>
__is_referenceable<const node_t *>	__is_referenceable<_Tp>
struct <unnamed>	struct <unnamed>
struct <unnamed>	struct <unnamed>
struct <unnamed>	struct <unnamed>
struct <unnamed>	struct <unnamed>
struct <unnamed>	struct <unnamed>
__or_<is_function<unique_ptr<_Result_base, _Deleter>>, is_array<unique_ptr<_Result_base, _Deleter>>>	__or_<_B1, _B2>
conditional<false, is_void<unique_ptr<_Result<void>, _Deleter>>, __or_<is_function<unique_ptr<_Result_base, _Deleter>>, is_array<unique_ptr<_Result_base, _Deleter>>>>	conditional<false, _Iftrue, _Iffalse>
is_same<bool *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<bool *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<bool *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<bool *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<bool *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<bool *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
is_same<lru_node_t, _U2>	is_same<<unnamed>, <unnamed>>
is_same<lru_node_t, _U2>	is_same<<unnamed>, <unnamed>>
is_same<lru_node_t, _U2>	is_same<<unnamed>, <unnamed>>
is_same<lru_node_t, _U2>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>, _U1>	is_same<<unnamed>, <unnamed>>
__is_pointer<const node_t **>	__is_pointer<_Tp *>
__are_same<const node_t *, const node_t *>	__are_same<_Tp, _Tp>
__is_pointer<action_t *>	__is_pointer<_Tp *>
__are_same<action_t, action_t>	__are_same<_Tp, _Tp>
__is_pointer<int *>	__is_pointer<_Tp *>
__are_same<int, int>	__are_same<_Tp, _Tp>
pointer_traits<const char *>	pointer_traits<_Tp *>
is_move_assignable<unsigned long>	is_move_assignable<_Tp>
is_copy_assignable<unsigned long>	is_copy_assignable<_Tp>
conditional<false, is_move_assignable<unsigned long>, is_copy_assignable<unsigned long>>	conditional<false, _Iftrue, _Iffalse>
__enable_if<true, bool>	__enable_if<true, _Tp>
__is_move_insertable<allocator<action_t>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<action_t>	is_move_constructible<_Tp>
__is_move_constructible_impl<action_t, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<action_t, action_t &&>	is_constructible<_Tp, _Args...>
move_iterator<element_t *>	move_iterator<_Iterator>
__is_move_insertable<allocator<element_t>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<element_t>	is_move_constructible<_Tp>
__is_move_constructible_impl<element_t, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<element_t, element_t &&>	is_constructible<_Tp, _Args...>
move_iterator<element_t *>	move_iterator<_Iterator>
__is_move_insertable<allocator<element_t>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<element_t>	is_move_constructible<_Tp>
__is_move_constructible_impl<element_t, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<element_t, element_t &&>	is_constructible<_Tp, _Args...>
remove_reference<allocator<redirection_spec_t> &>	remove_reference<_Tp &>
__iterator_traits<move_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &&>	is_assignable<_Tp, _Up>
__iterator_traits<__normal_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
pointer_traits<_Hash_node_base **>	pointer_traits<_Tp *>
__strip_reference_wrapper<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, false, true>>	__strip_reference_wrapper<_Tp>
__decay_and_strip<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, false, true>>	__decay_and_strip<_Tp>
remove_reference<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, false, true>>	remove_reference<_Tp>
__is_referenceable<keyword_t<kw_time>>	__is_referenceable<_Tp>
__is_referenceable<keyword_t<kw_and, kw_or>>	__is_referenceable<_Tp>
__is_referenceable<keyword_t<kw_command, kw_builtin, kw_exec>>	__is_referenceable<_Tp>
__is_referenceable<element_t>	__is_referenceable<_Tp>
conditional<true, element_t &&, element_t &>	conditional<_Cond, _Iftrue, _Iffalse>
__is_referenceable<element_t>	__is_referenceable<_Tp>
conditional<true, element_t &&, element_t &>	conditional<_Cond, _Iftrue, _Iffalse>
__is_referenceable<action_t>	__is_referenceable<_Tp>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
remove_reference<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>>	remove_reference<_Tp>
pointer_traits<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, true> *>	pointer_traits<_Tp *>
pointer_traits<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, true> *>	pointer_traits<_Tp *>
pointer_traits<_Hash_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true> *>	pointer_traits<_Tp *>
iterator_traits<redirection_spec_t *>	iterator_traits<_Tp *>
__iterator_traits<move_iterator<const node_t **>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<const node_t *&, const node_t *&&>	is_assignable<_Tp, _Up>
__is_move_iterator<_Bit_iterator>	__is_move_iterator<_Tp>
__iterator_traits<move_iterator<int *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<int &, int &&>	is_assignable<_Tp, _Up>
is_move_assignable<int>	is_move_assignable<_Tp>
is_copy_assignable<int>	is_copy_assignable<_Tp>
conditional<true, is_move_assignable<int>, is_copy_assignable<int>>	conditional<_Cond, _Iftrue, _Iffalse>
is_move_assignable<action_t>	is_move_assignable<_Tp>
is_copy_assignable<action_t>	is_copy_assignable<_Tp>
conditional<true, is_move_assignable<action_t>, is_copy_assignable<action_t>>	conditional<_Cond, _Iftrue, _Iffalse>
is_move_assignable<const node_t *>	is_move_assignable<_Tp>
is_copy_assignable<const node_t *>	is_copy_assignable<_Tp>
conditional<true, is_move_assignable<const node_t *>, is_copy_assignable<const node_t *>>	conditional<_Cond, _Iftrue, _Iffalse>
__is_referenceable<token_t<end>>	__is_referenceable<_Tp>
conditional<false, is_function<unique_ptr<_Result_base, _Deleter>>, is_array<unique_ptr<_Result_base, _Deleter>>>	conditional<false, _Iftrue, _Iffalse>
__is_copy_assignable_impl<unsigned long, true>	__is_copy_assignable_impl<_Tp, true>
__is_move_assignable_impl<unsigned long, true>	__is_move_assignable_impl<_Tp, true>
is_reference<element_t &>	is_reference<_Tp>
is_reference<element_t &>	is_reference<_Tp>
__iterator_traits<move_iterator<action_t *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<action_t &, action_t &&>	is_assignable<_Tp, _Up>
__iterator_traits<move_iterator<element_t *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<element_t &, element_t &&>	is_assignable<_Tp, _Up>
__iterator_traits<move_iterator<element_t *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<element_t &, element_t &&>	is_assignable<_Tp, _Up>
_Index_tuple<0UL>	_Index_tuple<_Indexes...>
_Build_index_tuple<1UL>	_Build_index_tuple<_Num>
_Build_index_tuple<0UL>	_Build_index_tuple<_Num>
remove_reference<_Rb_tree_node_base *&>	remove_reference<_Tp &>
remove_reference<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>> *&>	remove_reference<_Tp &>
__is_referenceable<else_clause_t>	__is_referenceable<_Tp>
is_assignable<unsigned long &, unsigned long &&>	is_assignable<_Tp, _Up>
is_assignable<unsigned long &, const unsigned long &>	is_assignable<_Tp, _Up>
__is_referenceable<unsigned long>	__is_referenceable<_Tp>
__is_copy_assignable_impl<int, true>	__is_copy_assignable_impl<_Tp, true>
__is_move_assignable_impl<int, true>	__is_move_assignable_impl<_Tp, true>
__is_move_assignable_impl<action_t, true>	__is_move_assignable_impl<_Tp, true>
__is_move_assignable_impl<const node_t *, true>	__is_move_assignable_impl<_Tp, true>
__is_pointer<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *>	__is_pointer<_Tp *>
remove_reference<_Iter_less_iter &>	remove_reference<_Tp &>
is_assignable<int &, const int &>	is_assignable<_Tp, _Up>
__is_referenceable<int>	__is_referenceable<_Tp>
remove_reference<element_t>	remove_reference<_Tp>
remove_reference<element_t &>	remove_reference<_Tp &>
remove_reference<element_t>	remove_reference<_Tp>
remove_reference<element_t &>	remove_reference<_Tp &>
__is_referenceable<token_t<background>>	__is_referenceable<_Tp>
allocator<io_fd_t>	allocator<_Tp>
_Sp_counted_ptr_inplace<io_fd_t, allocator<io_fd_t>, _S_atomic>	_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>
allocator<_Sp_counted_ptr_inplace<io_fd_t, allocator<io_fd_t>, _S_atomic>>	allocator<_Tp>
allocator_traits<allocator<_Sp_counted_ptr_inplace<io_fd_t, allocator<io_fd_t>, _S_atomic>>>	allocator_traits<allocator<_Tp>>
__allocated_ptr<allocator<_Sp_counted_ptr_inplace<io_fd_t, allocator<io_fd_t>, _S_atomic>>>	__allocated_ptr<_Alloc>
_Deque_iterator<block_t, const block_t &, const block_t *>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<char_event_t, char_event_t &, char_event_t *>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<char_event_t, const char_event_t &, const char_event_t *>	_Deque_iterator<_Tp, _Ref, _Ptr>
allocator<completion_t>	allocator<_Tp>
_Vector_base<completion_t, allocator<completion_t>>	_Vector_base<_Tp, _Alloc>
vector<completion_t, allocator<completion_t>>	vector<_Tp, _Alloc>
allocator<edit_t>	allocator<_Tp>
_Vector_base<edit_t, allocator<edit_t>>	_Vector_base<_Tp, _Alloc>
vector<edit_t, allocator<edit_t>>	vector<_Tp, _Alloc>
shared_ptr<const io_data_t>	shared_ptr<_Tp>
allocator<shared_ptr<const io_data_t>>	allocator<_Tp>
_Vector_base<shared_ptr<const io_data_t>, allocator<shared_ptr<const io_data_t>>>	_Vector_base<_Tp, _Alloc>
vector<shared_ptr<const io_data_t>, allocator<shared_ptr<const io_data_t>>>	vector<_Tp, _Alloc>
_Vector_base<input_mapping_t, allocator<input_mapping_t>>	_Vector_base<_Tp, _Alloc>
vector<input_mapping_t, allocator<input_mapping_t>>	vector<_Tp, _Alloc>
_Vector_base<wchar_t, allocator<wchar_t>>	_Vector_base<_Tp, _Alloc>
vector<wchar_t, allocator<wchar_t>>	vector<_Tp, _Alloc>
time_point<steady_clock, duration<signed long, ratio<1L, 1000000000L>>>	time_point<_Clock, _Dur>
allocator<char_event_t>	allocator<_Tp>
_Deque_base<char_event_t, allocator<char_event_t>>	_Deque_base<_Tp, _Alloc>
deque<char_event_t, allocator<char_event_t>>	deque<_Tp, _Alloc>
priority_queue<_Tp, _Sequence, _Compare>	priority_queue<_Tp, _Sequence, _Compare>
priority_queue<_Tp, _Sequence, _Compare>	priority_queue<_Tp, _Sequence, _Compare>
enable_if<value, void>	enable_if<<unnamed>, _Tp>
__is_swappable<_Sequence>	__is_swappable<_Tp>
__is_swappable<_Compare>	__is_swappable<_Tp>
__and_<__is_swappable<_Sequence>, __is_swappable<_Compare>>	__and_<<unnamed>...>
less<value_type>	less<_Tp>
allocator<_Tp>	allocator<_Tp>
vector<_Tp, allocator<_Tp>>	vector<_Tp, _Alloc>
queue<_Tp, _Seq>	queue<_Tp, _Sequence>
queue<_Tp, _Seq>	queue<_Tp, _Sequence>
enable_if<value, void>	enable_if<<unnamed>, _Tp>
__is_swappable<_Seq>	__is_swappable<_Tp>
queue<_Tp, _Seq>	queue<_Tp, _Sequence>
queue<_Tp, _Seq>	queue<_Tp, _Sequence>
queue<_Tp, _Seq>	queue<_Tp, _Sequence>
queue<_Tp, _Seq>	queue<_Tp, _Sequence>
queue<_Tp, _Seq>	queue<_Tp, _Sequence>
queue<_Tp, _Seq>	queue<_Tp, _Sequence>
allocator<_Tp>	allocator<_Tp>
deque<_Tp, allocator<_Tp>>	deque<_Tp, _Alloc>
queue<_Tp1, _Seq1>	queue<_Tp, _Sequence>
queue<_Tp1, _Seq1>	queue<_Tp, _Sequence>
maybe_t<char_event_t>	maybe_t<T>
maybe_t<readline_cmd_t>	maybe_t<T>
acquired_lock<input_mapping_set_t>	acquired_lock<Data>
shared_ptr<const vector<input_mapping_t, allocator<input_mapping_t>>>	shared_ptr<_Tp>
allocator<input_mapping_name_t>	allocator<_Tp>
vector<input_mapping_name_t, allocator<input_mapping_name_t>>	vector<_Tp, _Alloc>
maybe_t<input_mapping_t>	maybe_t<T>
enum_set_t<completion_request_t>	enum_set_t<T>
function<..(..)>	function<_Signature>
pair<_Rb_tree_node_base *, _Rb_tree_node_base *>	pair<_T1, _T2>
maybe_t<env_var_t>	maybe_t<T>
equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	equal_to<_Tp>
unordered_map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>>>	unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
initializer_list<shared_ptr<const io_data_t>>	initializer_list<_E>
allocator<tok_t>	allocator<_Tp>
vector<tok_t, allocator<tok_t>>	vector<_Tp, _Alloc>
less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	less<_Tp>
map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	map<_Key, _Tp, _Compare, _Alloc>
allocator<highlight_spec_t>	allocator<_Tp>
vector<highlight_spec_t, allocator<highlight_spec_t>>	vector<_Tp, _Alloc>
maybe_t<edit_t>	maybe_t<T>
shared_ptr<io_fd_t>	shared_ptr<_Tp>
remove_extent<io_fd_t>	remove_extent<_Tp>
__shared_ptr<io_fd_t, _S_atomic>	__shared_ptr<_Tp, _Lp>
weak_ptr<io_fd_t>	weak_ptr<_Tp>
pointer_traits<const block_t *>	pointer_traits<_Tp *>
acquired_lock<const logger_t>	acquired_lock<Data>
acquired_lock<const input_mapping_set_t>	acquired_lock<Data>
_Temporary_value	_Temporary_value
__normal_iterator<edit_t *, vector<edit_t, allocator<edit_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<edit_t *, vector<edit_t, allocator<edit_t>>>>	reverse_iterator<_Iterator>
__normal_iterator<const edit_t *, vector<edit_t, allocator<edit_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const edit_t *, vector<edit_t, allocator<edit_t>>>>	reverse_iterator<_Iterator>
allocator_traits<allocator<edit_t>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<edit_t>, edit_t>	__alloc_traits<_Alloc, <unnamed>>
rebind<edit_t>	rebind<_Tp>
remove_extent<const io_data_t>	remove_extent<_Tp>
__shared_ptr<const io_data_t, _S_atomic>	__shared_ptr<_Tp, _Lp>
weak_ptr<const io_data_t>	weak_ptr<_Tp>
_Temporary_value	_Temporary_value
__normal_iterator<shared_ptr<const io_data_t> *, vector<shared_ptr<const io_data_t>, allocator<shared_ptr<const io_data_t>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<shared_ptr<const io_data_t> *, vector<shared_ptr<const io_data_t>, allocator<shared_ptr<const io_data_t>>>>>	reverse_iterator<_Iterator>
__normal_iterator<const shared_ptr<const io_data_t> *, vector<shared_ptr<const io_data_t>, allocator<shared_ptr<const io_data_t>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const shared_ptr<const io_data_t> *, vector<shared_ptr<const io_data_t>, allocator<shared_ptr<const io_data_t>>>>>	reverse_iterator<_Iterator>
allocator_traits<allocator<shared_ptr<const io_data_t>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<shared_ptr<const io_data_t>>, shared_ptr<const io_data_t>>	__alloc_traits<_Alloc, <unnamed>>
rebind<shared_ptr<const io_data_t>>	rebind<_Tp>
bitset<3UL>	bitset<_Nb>
_Temporary_value	_Temporary_value
__normal_iterator<wchar_t *, vector<wchar_t, allocator<wchar_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<wchar_t *, vector<wchar_t, allocator<wchar_t>>>>	reverse_iterator<_Iterator>
__normal_iterator<const wchar_t *, vector<wchar_t, allocator<wchar_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const wchar_t *, vector<wchar_t, allocator<wchar_t>>>>	reverse_iterator<_Iterator>
_Temporary_value	_Temporary_value
__normal_iterator<input_mapping_t *, vector<input_mapping_t, allocator<input_mapping_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<input_mapping_t *, vector<input_mapping_t, allocator<input_mapping_t>>>>	reverse_iterator<_Iterator>
__normal_iterator<const input_mapping_t *, vector<input_mapping_t, allocator<input_mapping_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const input_mapping_t *, vector<input_mapping_t, allocator<input_mapping_t>>>>	reverse_iterator<_Iterator>
allocator_traits<allocator<input_mapping_t>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<input_mapping_t>, input_mapping_t>	__alloc_traits<_Alloc, <unnamed>>
rebind<input_mapping_t>	rebind<_Tp>
remove_extent<const vector<input_mapping_t, allocator<input_mapping_t>>>	remove_extent<_Tp>
__shared_ptr<const vector<input_mapping_t, allocator<input_mapping_t>>, _S_atomic>	__shared_ptr<_Tp, _Lp>
weak_ptr<const vector<input_mapping_t, allocator<input_mapping_t>>>	weak_ptr<_Tp>
reverse_iterator<_Deque_iterator<char_event_t, char_event_t &, char_event_t *>>	reverse_iterator<_Iterator>
reverse_iterator<_Deque_iterator<char_event_t, const char_event_t &, const char_event_t *>>	reverse_iterator<_Iterator>
allocator_traits<allocator<char_event_t>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<char_event_t>, char_event_t>	__alloc_traits<_Alloc, <unnamed>>
pointer_traits<char_event_t *>	pointer_traits<_Tp *>
rebind<char_event_t>	rebind<_Tp>
_Deque_impl	_Deque_impl
allocator<char_event_t *>	allocator<_Tp>
__alloc_traits<allocator<char_event_t *>, char_event_t *>	__alloc_traits<_Alloc, <unnamed>>
rebind<char_event_t *>	rebind<_Tp>
_Temporary_value	_Temporary_value
__normal_iterator<completion_t *, vector<completion_t, allocator<completion_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<completion_t *, vector<completion_t, allocator<completion_t>>>>	reverse_iterator<_Iterator>
__normal_iterator<const completion_t *, vector<completion_t, allocator<completion_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const completion_t *, vector<completion_t, allocator<completion_t>>>>	reverse_iterator<_Iterator>
allocator_traits<allocator<completion_t>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<completion_t>, completion_t>	__alloc_traits<_Alloc, <unnamed>>
rebind<completion_t>	rebind<_Tp>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
allocator_traits<allocator<char_event_t *>>	allocator_traits<allocator<_Tp>>
__rebind<allocator<io_fd_t>, _Sp_counted_ptr_inplace<io_fd_t, allocator<io_fd_t>, _S_atomic>, void>	__rebind<_Tp, _Up, __void_t<other>>
rebind<_Sp_counted_ptr_inplace<io_fd_t, allocator<io_fd_t>, _S_atomic>>	rebind<_Tp1>
new_allocator<char_event_t>	new_allocator<_Tp>
new_allocator<char_event_t *>	new_allocator<_Tp>
new_allocator<input_mapping_t>	new_allocator<_Tp>
new_allocator<shared_ptr<const io_data_t>>	new_allocator<_Tp>
new_allocator<edit_t>	new_allocator<_Tp>
new_allocator<completion_t>	new_allocator<_Tp>
new_allocator<io_fd_t>	new_allocator<_Tp>
new_allocator<_Sp_counted_ptr_inplace<io_fd_t, allocator<io_fd_t>, _S_atomic>>	new_allocator<_Tp>
conditional<false, __undefined, char_event_t>	conditional<false, _Iftrue, _Iffalse>
is_void<char_event_t>	is_void<_Tp>
conditional<false, __undefined, const block_t>	conditional<false, _Iftrue, _Iffalse>
is_void<const block_t>	is_void<_Tp>
_Impl	_Impl
conditional<false, __undefined, _Sp_counted_ptr_inplace<io_fd_t, allocator<io_fd_t>, _S_atomic>>	conditional<false, _Iftrue, _Iffalse>
is_void<_Sp_counted_ptr_inplace<io_fd_t, allocator<io_fd_t>, _S_atomic>>	is_void<_Tp>
remove_const<io_fd_t>	remove_const<_Tp>
remove_cv<io_fd_t>	remove_cv<_Tp>
allocator_traits<allocator<io_fd_t>>	allocator_traits<allocator<_Tp>>
_Sp_ebo_helper<0, allocator<io_fd_t>, true>	_Sp_ebo_helper<_Nm, _Tp, true>
_Sp_alloc_shared_tag<allocator<io_fd_t>>	_Sp_alloc_shared_tag<_Alloc>
remove_reference<shared_ptr<io_fd_t> &>	remove_reference<_Tp &>
move_iterator<completion_t *>	move_iterator<_Iterator>
conditional<true, completion_t &&, completion_t &>	conditional<_Cond, _Iftrue, _Iffalse>
iterator_traits<completion_t *>	iterator_traits<_Tp *>
__aligned_buffer<io_fd_t>	__aligned_buffer<_Tp>
is_same<completion_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<completion_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<completion_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<completion_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<completion_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<completion_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<char_event_t **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<char_event_t **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<char_event_t **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<char_event_t **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<char_event_t **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<char_event_t **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<char_event_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<char_event_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<char_event_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<char_event_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<char_event_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<char_event_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
_Deque_iterator<char_event_t, _CvTp &, _CvTp *>	_Deque_iterator<_Tp, _Ref, _Ptr>
is_same<input_mapping_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<input_mapping_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<input_mapping_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<input_mapping_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<input_mapping_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<input_mapping_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
reference	reference
hash<bitset<3UL>>	hash<_Tp>
is_same<shared_ptr<const io_data_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<shared_ptr<const io_data_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<shared_ptr<const io_data_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<shared_ptr<const io_data_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<shared_ptr<const io_data_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<shared_ptr<const io_data_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
iterator_traits<const shared_ptr<const io_data_t> *>	iterator_traits<const _Tp *>
__shared_ptr_access<const vector<input_mapping_t, allocator<input_mapping_t>>, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
__weak_ptr<const io_data_t, _S_atomic>	__weak_ptr<_Tp, _Lp>
__weak_ptr<io_fd_t, _S_atomic>	__weak_ptr<_Tp, _Lp>
__weak_ptr<const vector<input_mapping_t, allocator<input_mapping_t>>, _S_atomic>	__weak_ptr<_Tp, _Lp>
__shared_ptr_access<const io_data_t, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
reverse_iterator<_Deque_iterator<block_t, const block_t &, const block_t *>>	reverse_iterator<_Iterator>
is_same<edit_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<edit_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<edit_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<edit_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<edit_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<edit_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
__shared_ptr_access<io_fd_t, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
__is_move_insertable<allocator<completion_t>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<completion_t>	is_move_constructible<_Tp>
__is_move_constructible_impl<completion_t, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<completion_t, completion_t &&>	is_constructible<_Tp, _Args...>
_Iter_equals_val<const wchar_t *const>	_Iter_equals_val<_Value>
iterator_traits<const builtin_data_t *>	iterator_traits<const _Tp *>
__is_referenceable<completion_t>	__is_referenceable<_Tp>
is_array<io_fd_t>	is_array<<unnamed>>
is_void<io_fd_t>	is_void<_Tp>
__has_esft_base<io_fd_t, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
is_array<const io_data_t>	is_array<<unnamed>>
is_void<const io_data_t>	is_void<_Tp>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
is_array<const vector<input_mapping_t, allocator<input_mapping_t>>>	is_array<<unnamed>>
is_void<const vector<input_mapping_t, allocator<input_mapping_t>>>	is_void<_Tp>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
is_reference<completion_t &>	is_reference<_Tp>
iterator_traits<const wchar_t *const *>	iterator_traits<const _Tp *>
__iterator_traits<__normal_iterator<const shared_ptr<const io_data_t> *, vector<shared_ptr<const io_data_t>, allocator<shared_ptr<const io_data_t>>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
iterator_traits<shared_ptr<const io_data_t> *>	iterator_traits<_Tp *>
is_assignable<shared_ptr<const io_data_t> &, const shared_ptr<const io_data_t> &>	is_assignable<_Tp, _Up>
__iterator_traits<move_iterator<completion_t *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<completion_t &, completion_t &&>	is_assignable<_Tp, _Up>
remove_reference<const shared_ptr<const io_data_t> &>	remove_reference<_Tp &>
remove_reference<completion_t>	remove_reference<_Tp>
remove_reference<completion_t &>	remove_reference<_Tp &>
enable_if<true, woption *>	enable_if<true, _Tp>
enable_if<true, wchar_t *>	enable_if<true, _Tp>
remove_const<tuple<const wchar_t &>>	remove_const<_Tp>
remove_cv<tuple<const wchar_t &>>	remove_cv<_Tp>
remove_const<const tuple<const wchar_t &>>	remove_const<const _Tp>
remove_cv<const tuple<const wchar_t &>>	remove_cv<_Tp>
remove_const<const wchar_t>	remove_const<const _Tp>
remove_cv<const wchar_t>	remove_cv<_Tp>
remove_const<option_spec_t *>	remove_const<_Tp>
remove_cv<option_spec_t *>	remove_cv<_Tp>
pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>	pair<_T1, _T2>
_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, false, true>	_Node_iterator<_Value, __constant_iterators, __cache>
pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, false, true>, bool>	pair<_T1, _T2>
default_delete<option_spec_t>	default_delete<_Tp>
unique_ptr<option_spec_t, default_delete<option_spec_t>>	unique_ptr<_Tp, _Dp>
pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>	pair<_T1, _T2>
_Node_iterator<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, false, false>	_Node_iterator<_Value, __constant_iterators, __cache>
pair<_Node_iterator<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, false, false>, bool>	pair<_T1, _T2>
tuple<option_spec_t *, default_delete<option_spec_t>>	tuple<_T1, _T2>
__invoke_result<const hash<wchar_t> &, const wchar_t &>	__invoke_result<_Functor, _ArgTypes...>
__call_is_nothrow<__invoke_result<const hash<wchar_t> &, const wchar_t &>, const hash<wchar_t> &, const wchar_t &>	__call_is_nothrow<_Result, _Fn, _Args...>
is_convertible<pointer, option_spec_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, option_spec_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
tuple_element<0UL, tuple<const wchar_t &>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<option_spec_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<option_spec_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple_element<0UL, tuple<option_spec_t *, default_delete<option_spec_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
__is_invocable<const _H1 &, const _Key &>	__is_invocable<_Fn, _ArgTypes...>
allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>>	allocator<_Tp>
_Insert_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>>	_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
_Insert<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, false>	_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, false>
allocator<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>>	allocator<_Tp>
_Hashtable_traits<false, false, true>	_Hashtable_traits<_Cache_hash_code, _Constant_iterators, _Unique_keys>
_Insert_base<wchar_t, pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, allocator<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>>, _Select1st, equal_to<wchar_t>, hash<wchar_t>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<false, false, true>>	_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
_Insert<wchar_t, pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, allocator<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>>, _Select1st, equal_to<wchar_t>, hash<wchar_t>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<false, false, true>, false>	_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, false>
__is_fast_hash<hash<wchar_t>>	__is_fast_hash<_Hash>
__is_nothrow_invocable<const hash<wchar_t> &, const wchar_t &>	__is_nothrow_invocable<_Fn, _Args...>
__and_<__is_fast_hash<hash<wchar_t>>, __is_nothrow_invocable<const hash<wchar_t> &, const wchar_t &>>	__and_<_B1, _B2>
__not_<__and_<__is_fast_hash<hash<wchar_t>>, __is_nothrow_invocable<const hash<wchar_t> &, const wchar_t &>>>	__not_<_Pp>
_Hash_code_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, _Select1st, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, true>	_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Default_ranged_hash, true>
_Hashtable<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>>	_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
__hash_code_base_access	__hash_code_base_access
_Hash_code_base<wchar_t, pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, _Select1st, hash<wchar_t>, _Mod_range_hashing, _Default_ranged_hash, false>	_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Default_ranged_hash, false>
_Hashtable<wchar_t, pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, allocator<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>>, _Select1st, equal_to<wchar_t>, hash<wchar_t>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<false, false, true>>	_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
__hash_code_base_access	__hash_code_base_access
allocator<woption>	allocator<_Tp>
_Vector_base<woption, allocator<woption>>	_Vector_base<_Tp, _Alloc>
vector<woption, allocator<woption>>	vector<_Tp, _Alloc>
allocator<vector<wchar_t, allocator<wchar_t>>>	allocator<_Tp>
_Vector_base<vector<wchar_t, allocator<wchar_t>>, allocator<vector<wchar_t, allocator<wchar_t>>>>	_Vector_base<_Tp, _Alloc>
vector<vector<wchar_t, allocator<wchar_t>>, allocator<vector<wchar_t, allocator<wchar_t>>>>	vector<_Tp, _Alloc>
unordered_map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>>>	unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
unordered_map<wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>, hash<wchar_t>, equal_to<wchar_t>, allocator<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>>>	unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
_Node_const_iterator<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, false, false>	_Node_const_iterator<_Value, __constant_iterators, __cache>
_Hashtable_base<wchar_t, pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, _Select1st, equal_to<wchar_t>, hash<wchar_t>, _Mod_range_hashing, _Default_ranged_hash, _Hashtable_traits<false, false, true>>	_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>
_Node_iterator_base<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, false>	_Node_iterator_base<_Value, _Cache_hash_code>
__uniq_ptr_impl<option_spec_t, default_delete<option_spec_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<option_spec_t, default_delete<option_spec_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
allocator_traits<allocator<woption>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<woption>, woption>	__alloc_traits<_Alloc, <unnamed>>
conditional<false, const pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>> *, pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>> *>	conditional<false, _Iftrue, _Iffalse>
_Hashtable_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Hashtable_traits<true, false, true>>	_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>
tuple_element<1UL, pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>>	tuple_element<1UL, pair<_Tp1, _Tp2>>
_Map_base<wchar_t, pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, allocator<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>>, _Select1st, equal_to<wchar_t>, hash<wchar_t>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<false, false, true>, true>	_Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
remove_reference<unique_ptr<option_spec_t, default_delete<option_spec_t>> &>	remove_reference<_Tp &>
_Node_iterator_base<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, true>	_Node_iterator_base<_Value, _Cache_hash_code>
conditional<false, const pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t> *, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t> *>	conditional<false, _Iftrue, _Iffalse>
__normal_iterator<const vector<wchar_t, allocator<wchar_t>> *, vector<vector<wchar_t, allocator<wchar_t>>, allocator<vector<wchar_t, allocator<wchar_t>>>>>	__normal_iterator<_Iterator, _Container>
iterator_traits<const vector<wchar_t, allocator<wchar_t>> *>	iterator_traits<const _Tp *>
__normal_iterator<const wchar_t *, vector<wchar_t, allocator<wchar_t>>>	__normal_iterator<_Iterator, _Container>
_PCC<<expression>, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>	_PCC<<unnamed>, _T1, _T2>
__pair_base<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>	__pair_base<_U1, _U2>
conditional<false, const pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t> &, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t> &>	conditional<false, _Iftrue, _Iffalse>
_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, true>	_Hash_node<_Value, true>
_PCC<<expression>, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, false, true>, bool>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, false, true>, bool>	_PCC<<unnamed>, _T1, _T2>
__pair_base<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, false, true>, bool>	__pair_base<_U1, _U2>
conditional<false, const pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>> &, pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>> &>	conditional<false, _Iftrue, _Iffalse>
_Hash_node<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, false>	_Hash_node<_Value, false>
is_same<woption *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<woption *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<woption *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<woption *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<woption *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<woption *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
_PCC<<expression>, const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>	_PCC<<unnamed>, _T1, _T2>
__pair_base<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>	__pair_base<_U1, _U2>
_Local_const_iterator<wchar_t, pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, _Select1st, hash<wchar_t>, _Mod_range_hashing, _Default_ranged_hash, false, false>	_Local_const_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>
_Local_iterator<wchar_t, pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, _Select1st, hash<wchar_t>, _Mod_range_hashing, _Default_ranged_hash, false, false>	_Local_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>
allocator_traits<allocator<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>>>	allocator_traits<allocator<_Tp>>
_Local_const_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, _Select1st, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, false, true>	_Local_const_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>
_Local_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, _Select1st, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, false, true>	_Local_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>
_Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, false, true>	_Node_const_iterator<_Value, __constant_iterators, __cache>
allocator_traits<allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>>>	allocator_traits<allocator<_Tp>>
tuple_element<1UL, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>>	tuple_element<1UL, pair<_Tp1, _Tp2>>
_Map_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, true>	_Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
_Temporary_value	_Temporary_value
__normal_iterator<vector<wchar_t, allocator<wchar_t>> *, vector<vector<wchar_t, allocator<wchar_t>>, allocator<vector<wchar_t, allocator<wchar_t>>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<vector<wchar_t, allocator<wchar_t>> *, vector<vector<wchar_t, allocator<wchar_t>>, allocator<vector<wchar_t, allocator<wchar_t>>>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<const vector<wchar_t, allocator<wchar_t>> *, vector<vector<wchar_t, allocator<wchar_t>>, allocator<vector<wchar_t, allocator<wchar_t>>>>>>	reverse_iterator<_Iterator>
allocator_traits<allocator<vector<wchar_t, allocator<wchar_t>>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<vector<wchar_t, allocator<wchar_t>>>, vector<wchar_t, allocator<wchar_t>>>	__alloc_traits<_Alloc, <unnamed>>
rebind<vector<wchar_t, allocator<wchar_t>>>	rebind<_Tp>
__and_<is_convertible<pointer, option_spec_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, option_spec_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
_Temporary_value	_Temporary_value
__normal_iterator<woption *, vector<woption, allocator<woption>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<woption *, vector<woption, allocator<woption>>>>	reverse_iterator<_Iterator>
__normal_iterator<const woption *, vector<woption, allocator<woption>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const woption *, vector<woption, allocator<woption>>>>	reverse_iterator<_Iterator>
rebind<woption>	rebind<_Tp>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
__not_<integral_constant<bool, false>>	__not_<_Pp>
__or_<__not_<integral_constant<bool, false>>, is_default_constructible<_Mod_range_hashing>>	__or_<_B1, _B2>
__or_<integral_constant<bool, false>, _Cond>	__or_<<unnamed>...>
__or_<__not_<integral_constant<bool, false>>, _Cond>	__or_<<unnamed>...>
allocator<_Hash_node<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, false>>	allocator<_Tp>
_ReuseOrAllocNode<allocator<_Hash_node<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, false>>>	_ReuseOrAllocNode<_NodeAlloc>
_Equality<wchar_t, pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, allocator<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>>, _Select1st, equal_to<wchar_t>, hash<wchar_t>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<false, false, true>, true>	_Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
_Rehash_base<wchar_t, pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, allocator<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>>, _Select1st, equal_to<wchar_t>, hash<wchar_t>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<false, false, true>, integral_constant<bool, true>>	_Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true_type>
conditional<true, pair<_Node_iterator<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, false, false>, bool>, _Node_iterator<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, false, false>>	conditional<_Cond, _Iftrue, _Iffalse>
_Hashtable_alloc<allocator<_Hash_node<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, false>>>	_Hashtable_alloc<_NodeAlloc>
__alloc_traits<allocator<_Hash_node<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, false>>, _Hash_node<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, false>>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<_Hash_node<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, false>>>	allocator_traits<allocator<_Tp>>
rebind<_Hash_node<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, false>>	rebind<_Tp1>
__rebind<allocator<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>>, _Hash_node<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, false>, void>	__rebind<_Tp, _Up, __void_t<other>>
allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, true>>	allocator<_Tp>
_ReuseOrAllocNode<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, true>>>	_ReuseOrAllocNode<_NodeAlloc>
_Equality<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, true>	_Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
_Rehash_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, integral_constant<bool, true>>	_Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true_type>
conditional<true, pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, false, true>, bool>, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, false, true>>	conditional<_Cond, _Iftrue, _Iffalse>
_Hashtable_alloc<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, true>>>	_Hashtable_alloc<_NodeAlloc>
__alloc_traits<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, true>>, _Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, true>>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, true>>>	allocator_traits<allocator<_Tp>>
rebind<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, true>>	rebind<_Tp1>
__rebind<allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>>, _Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, true>, void>	__rebind<_Tp, _Up, __void_t<other>>
_AllocNode<allocator<_Hash_node<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, false>>>	_AllocNode<_NodeAlloc>
_AllocNode<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, true>>>	_AllocNode<_NodeAlloc>
__is_empty_non_tuple<default_delete<option_spec_t>>	__is_empty_non_tuple<_Tp>
is_empty<default_delete<option_spec_t>>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<option_spec_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<option_spec_t *>	__is_empty_non_tuple<_Tp>
is_empty<option_spec_t *>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<option_spec_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<const wchar_t &>	__is_empty_non_tuple<_Tp>
is_empty<const wchar_t &>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<const wchar_t &>>	conditional<false, _Iftrue, _Iffalse>
new_allocator<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>>	new_allocator<_Tp>
new_allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>>	new_allocator<_Tp>
new_allocator<vector<wchar_t, allocator<wchar_t>>>	new_allocator<_Tp>
new_allocator<woption>	new_allocator<_Tp>
new_allocator<_Hash_node<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, false>>	new_allocator<_Tp>
new_allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, true>>	new_allocator<_Tp>
__rebind<allocator<_Hash_node<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, false>>, _Hash_node_base *, void>	__rebind<_Tp, _Up, __void_t<other>>
rebind<_Hash_node_base *>	rebind<_Tp1>
__rebind<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, true>>, _Hash_node_base *, void>	__rebind<_Tp, _Up, __void_t<other>>
rebind<_Hash_node_base *>	rebind<_Tp1>
_Hash_node_value_base<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>>	_Hash_node_value_base<_Value>
conditional<false, __undefined, _Hash_node<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, false>>	conditional<false, _Iftrue, _Iffalse>
is_void<_Hash_node<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, false>>	is_void<_Tp>
_Hash_node_value_base<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>>	_Hash_node_value_base<_Value>
conditional<false, __undefined, _Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, true>>	conditional<false, _Iftrue, _Iffalse>
is_void<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, true>>	is_void<_Tp>
conditional<false, __undefined, woption>	conditional<false, _Iftrue, _Iffalse>
_TC<<expression>, const wchar_t &>	_TC<<unnamed>, _Elements...>
_TC<value, const wchar_t &>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, const wchar_t &>	_Tuple_impl<_Idx, _Head>
__normal_iterator<wchar_t *, vector<wchar_t, allocator<wchar_t>>>	__normal_iterator<_Iterator, _Container>
remove_reference<option_spec_t *&>	remove_reference<_Tp &>
remove_reference<default_delete<option_spec_t>>	remove_reference<_Tp>
remove_reference<const wchar_t &>	remove_reference<_Tp &>
remove_reference<woption &>	remove_reference<_Tp &>
iterator_traits<woption *>	iterator_traits<_Tp *>
_Hashtable_ebo_helper<0, allocator<_Hash_node<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, false>>, true>	_Hashtable_ebo_helper<_Nm, _Tp, true>
_Hashtable_ebo_helper<0, allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, true>>, true>	_Hashtable_ebo_helper<_Nm, _Tp, true>
tuple_element<0UL, pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>>	tuple_element<0UL, pair<_Tp1, _Tp2>>
remove_reference<const pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>> &>	remove_reference<_Tp &>
initializer_list<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>>	initializer_list<_E>
initializer_list<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>>	initializer_list<_E>
remove_reference<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>> &>	remove_reference<_Tp &>
tuple_element<0UL, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>>	tuple_element<0UL, pair<_Tp1, _Tp2>>
remove_reference<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t> &>	remove_reference<_Tp &>
move_iterator<wchar_t *>	move_iterator<_Iterator>
move_iterator<woption *>	move_iterator<_Iterator>
conditional<true, woption &&, woption &>	conditional<_Cond, _Iftrue, _Iffalse>
conditional<true, wchar_t &&, wchar_t &>	conditional<_Cond, _Iftrue, _Iffalse>
_Head_base<0UL, const wchar_t &, false>	_Head_base<_Idx, _Head, false>
_Tuple_impl<0UL, option_spec_t *, default_delete<option_spec_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_Tuple_impl<1UL, default_delete<option_spec_t>>	_Tuple_impl<_Idx, _Head>
_TC2<_Dummy>	_TC2<_Dummy>
_TC2<_Dummy>	_TC2<_Dummy>
__result_of_impl<false, false, const hash<wchar_t> &, const wchar_t &>	__result_of_impl<false, false, _Functor, _ArgTypes...>
_TC<value, option_spec_t *, default_delete<option_spec_t>>	_TC<<unnamed>, _Elements...>
_TC<true, option_spec_t *, default_delete<option_spec_t>>	_TC<<unnamed>, _Elements...>
__aligned_buffer<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>>	__aligned_buffer<_Tp>
__aligned_buffer<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>>	__aligned_buffer<_Tp>
conditional<true, __is_nothrow_invocable<const hash<wchar_t> &, const wchar_t &>, __is_fast_hash<hash<wchar_t>>>	conditional<_Cond, _Iftrue, _Iffalse>
is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, true> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, true> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, true> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, true> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, true> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, true> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
_Equal_helper<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, unsigned long, true>	_Equal_helper<_Key, _Value, _ExtractKey, _Equal, _HashCodeType, true>
is_same<_Hash_node<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, false> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, false> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Hash_node<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, false> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, false> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Hash_node<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, false> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, false> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
conditional<true, __not_<integral_constant<bool, false>>, is_default_constructible<_Mod_range_hashing>>	conditional<_Cond, _Iftrue, _Iffalse>
enable_if<value, void>	enable_if<<unnamed>, _Tp>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, _Pair &&>	is_constructible<_Tp, _Args...>
enable_if<value, void>	enable_if<<unnamed>, _Tp>
is_constructible<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, _Pair &&>	is_constructible<_Tp, _Args...>
_Equal_helper<wchar_t, pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, _Select1st, equal_to<wchar_t>, unsigned long, false>	_Equal_helper<_Key, _Value, _ExtractKey, _Equal, _HashCodeType, false>
_Hashtable_ebo_helper<0, equal_to<wchar_t>, true>	_Hashtable_ebo_helper<_Nm, _Tp, true>
iterator_traits<const woption *>	iterator_traits<const _Tp *>
reverse_iterator<__normal_iterator<const wchar_t *, vector<wchar_t, allocator<wchar_t>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<wchar_t *, vector<wchar_t, allocator<wchar_t>>>>	reverse_iterator<_Iterator>
is_same<vector<wchar_t, allocator<wchar_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<vector<wchar_t, allocator<wchar_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<vector<wchar_t, allocator<wchar_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<vector<wchar_t, allocator<wchar_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<vector<wchar_t, allocator<wchar_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<vector<wchar_t, allocator<wchar_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
iterator_traits<vector<wchar_t, allocator<wchar_t>> *>	iterator_traits<_Tp *>
_Hashtable_ebo_helper<1, hash<wchar_t>, true>	_Hashtable_ebo_helper<_Nm, _Tp, true>
binary_function<wchar_t, wchar_t, bool>	binary_function<_Arg1, _Arg2, _Result>
is_same<const wchar_t, _U1>	is_same<<unnamed>, <unnamed>>
is_same<unique_ptr<option_spec_t, default_delete<option_spec_t>>, _U2>	is_same<<unnamed>, <unnamed>>
pair<_Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, false, true>, _Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, false, true>>	pair<_T1, _T2>
pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, false, true>, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, false, true>>	pair<_T1, _T2>
pair<_Node_const_iterator<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, false, false>, _Node_const_iterator<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, false, false>>	pair<_T1, _T2>
pair<_Node_iterator<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, false, false>, _Node_iterator<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, false, false>>	pair<_T1, _T2>
is_same<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, false, true>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<wchar_t, _U2>	is_same<<unnamed>, <unnamed>>
remove_reference<woption>	remove_reference<_Tp>
remove_reference<const vector<wchar_t, allocator<wchar_t>> &>	remove_reference<_Tp &>
_Iter_equals_val<const wchar_t>	_Iter_equals_val<_Value>
is_same<wchar_t, _U2>	is_same<<unnamed>, <unnamed>>
is_same<wchar_t, _U2>	is_same<<unnamed>, <unnamed>>
is_same<wchar_t, _U2>	is_same<<unnamed>, <unnamed>>
is_same<wchar_t, _U2>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, false, true>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, false, true>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, false, true>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, false, true>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<unique_ptr<option_spec_t, default_delete<option_spec_t>>, _U2>	is_same<<unnamed>, <unnamed>>
is_same<const wchar_t, _U1>	is_same<<unnamed>, <unnamed>>
is_same<unique_ptr<option_spec_t, default_delete<option_spec_t>>, _U2>	is_same<<unnamed>, <unnamed>>
is_same<const wchar_t, _U1>	is_same<<unnamed>, <unnamed>>
is_same<unique_ptr<option_spec_t, default_delete<option_spec_t>>, _U2>	is_same<<unnamed>, <unnamed>>
is_same<const wchar_t, _U1>	is_same<<unnamed>, <unnamed>>
is_same<unique_ptr<option_spec_t, default_delete<option_spec_t>>, _U2>	is_same<<unnamed>, <unnamed>>
is_same<const wchar_t, _U1>	is_same<<unnamed>, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
aligned_storage<16UL, 8UL>	aligned_storage<_Len, _Align>
type	type
is_member_object_pointer<const hash<wchar_t>>	is_member_object_pointer<_Tp>
is_member_function_pointer<const hash<wchar_t>>	is_member_function_pointer<_Tp>
is_same<tuple<const wchar_t &>, tuple<_UElements...>>	is_same<<unnamed>, <unnamed>>
is_same<tuple<const wchar_t &>, tuple<_UElements...>>	is_same<<unnamed>, <unnamed>>
is_same<tuple<const wchar_t &>, tuple<_UElements...>>	is_same<<unnamed>, <unnamed>>
is_same<tuple<const wchar_t &>, tuple<_UElements...>>	is_same<<unnamed>, <unnamed>>
is_same<tuple<const wchar_t &>, tuple<_UElements...>>	is_same<<unnamed>, <unnamed>>
is_same<tuple<const wchar_t &>, tuple<_UElements...>>	is_same<<unnamed>, <unnamed>>
is_same<tuple<const wchar_t &>, tuple<_UElements...>>	is_same<<unnamed>, <unnamed>>
is_same<tuple<const wchar_t &>, tuple<_UElements...>>	is_same<<unnamed>, <unnamed>>
_Head_base<0UL, option_spec_t *, false>	_Head_base<_Idx, _Head, false>
_Head_base<1UL, default_delete<option_spec_t>, true>	_Head_base<_Idx, _Head, true>
is_reference<wchar_t &>	is_reference<_Tp>
is_reference<woption &>	is_reference<_Tp>
__iterator_traits<__normal_iterator<const wchar_t *, vector<wchar_t, allocator<wchar_t>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
move_iterator<vector<wchar_t, allocator<wchar_t>> *>	move_iterator<_Iterator>
__is_move_insertable<allocator<vector<wchar_t, allocator<wchar_t>>>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<vector<wchar_t, allocator<wchar_t>>>	is_move_constructible<_Tp>
__is_move_constructible_impl<vector<wchar_t, allocator<wchar_t>>, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<vector<wchar_t, allocator<wchar_t>>, vector<wchar_t, allocator<wchar_t>> &&>	is_constructible<_Tp, _Args...>
__is_move_insertable<allocator<wchar_t>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<wchar_t>	is_move_constructible<_Tp>
__is_move_constructible_impl<wchar_t, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<wchar_t, wchar_t &&>	is_constructible<_Tp, _Args...>
remove_reference<tuple<const wchar_t &>>	remove_reference<_Tp>
__is_move_iterator<__normal_iterator<const wchar_t *, vector<wchar_t, allocator<wchar_t>>>>	__is_move_iterator<_Tp>
__is_move_iterator<move_iterator<wchar_t *>>	__is_move_iterator<move_iterator<_Iterator>>
__is_move_iterator<move_iterator<woption *>>	__is_move_iterator<move_iterator<_Iterator>>
__is_referenceable<vector<wchar_t, allocator<wchar_t>>>	__is_referenceable<_Tp>
conditional<true, vector<wchar_t, allocator<wchar_t>> &&, vector<wchar_t, allocator<wchar_t>> &>	conditional<_Cond, _Iftrue, _Iffalse>
struct <unnamed>	struct <unnamed>
__is_pointer<woption *>	__is_pointer<_Tp *>
__are_same<woption, woption>	__are_same<_Tp, _Tp>
__is_pointer<wchar_t *>	__is_pointer<_Tp *>
__are_same<wchar_t, wchar_t>	__are_same<_Tp, _Tp>
__is_pointer<const wchar_t *>	__is_pointer<_Tp *>
__is_move_insertable<allocator<woption>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<woption>	is_move_constructible<_Tp>
__is_move_constructible_impl<woption, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<woption, woption &&>	is_constructible<_Tp, _Args...>
__strip_reference_wrapper<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, false, true>>	__strip_reference_wrapper<_Tp>
__decay_and_strip<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, false, true>>	__decay_and_strip<_Tp>
remove_reference<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, false, true>>	remove_reference<_Tp>
__is_referenceable<woption>	__is_referenceable<_Tp>
is_reference<vector<wchar_t, allocator<wchar_t>> &>	is_reference<_Tp>
__iterator_traits<move_iterator<vector<wchar_t, allocator<wchar_t>> *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<vector<wchar_t, allocator<wchar_t>> &, vector<wchar_t, allocator<wchar_t>> &&>	is_assignable<_Tp, _Up>
__iterator_traits<move_iterator<wchar_t *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<wchar_t &, wchar_t &&>	is_assignable<_Tp, _Up>
pointer_traits<_Hash_node<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, false> *>	pointer_traits<_Tp *>
pointer_traits<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, true> *>	pointer_traits<_Tp *>
is_move_assignable<wchar_t>	is_move_assignable<_Tp>
is_copy_assignable<wchar_t>	is_copy_assignable<_Tp>
conditional<false, is_move_assignable<wchar_t>, is_copy_assignable<wchar_t>>	conditional<false, _Iftrue, _Iffalse>
conditional<true, is_move_assignable<wchar_t>, is_copy_assignable<wchar_t>>	conditional<_Cond, _Iftrue, _Iffalse>
is_move_assignable<woption>	is_move_assignable<_Tp>
is_copy_assignable<woption>	is_copy_assignable<_Tp>
conditional<true, is_move_assignable<woption>, is_copy_assignable<woption>>	conditional<_Cond, _Iftrue, _Iffalse>
__iterator_traits<move_iterator<woption *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<woption &, woption &&>	is_assignable<_Tp, _Up>
is_assignable<wchar_t &, const wchar_t &>	is_assignable<_Tp, _Up>
__is_copy_assignable_impl<wchar_t, true>	__is_copy_assignable_impl<_Tp, true>
__is_move_assignable_impl<wchar_t, true>	__is_move_assignable_impl<_Tp, true>
__is_move_assignable_impl<woption, true>	__is_move_assignable_impl<_Tp, true>
remove_reference<vector<wchar_t, allocator<wchar_t>>>	remove_reference<_Tp>
remove_reference<vector<wchar_t, allocator<wchar_t>> &>	remove_reference<_Tp &>
__is_referenceable<wchar_t>	__is_referenceable<_Tp>
remove_reference<_Vector_impl &>	remove_reference<_Tp &>
shared_ptr<job_t>	shared_ptr<_Tp>
allocator<shared_ptr<job_t>>	allocator<_Tp>
allocator_traits<allocator<shared_ptr<job_t>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<shared_ptr<job_t>>, shared_ptr<job_t>>	__alloc_traits<_Alloc, <unnamed>>
_Deque_base<shared_ptr<job_t>, allocator<shared_ptr<job_t>>>	_Deque_base<_Tp, _Alloc>
deque<shared_ptr<job_t>, allocator<shared_ptr<job_t>>>	deque<_Tp, _Alloc>
_Deque_iterator<shared_ptr<job_t>, shared_ptr<job_t> &, shared_ptr<job_t> *>	_Deque_iterator<_Tp, _Ref, _Ptr>
__shared_ptr_access<job_t, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
__shared_ptr<job_t, _S_atomic>	__shared_ptr<_Tp, _Lp>
remove_extent<job_t>	remove_extent<_Tp>
__weak_ptr<job_t, _S_atomic>	__weak_ptr<_Tp, _Lp>
is_array<job_t>	is_array<<unnamed>>
is_void<job_t>	is_void<_Tp>
pointer_traits<shared_ptr<job_t> *>	pointer_traits<_Tp *>
_Deque_iterator<shared_ptr<job_t>, const shared_ptr<job_t> &, const shared_ptr<job_t> *>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<shared_ptr<job_t>, _CvTp &, _CvTp *>	_Deque_iterator<_Tp, _Ref, _Ptr>
reverse_iterator<_Deque_iterator<shared_ptr<job_t>, shared_ptr<job_t> &, shared_ptr<job_t> *>>	reverse_iterator<_Iterator>
reverse_iterator<_Deque_iterator<shared_ptr<job_t>, const shared_ptr<job_t> &, const shared_ptr<job_t> *>>	reverse_iterator<_Iterator>
rebind<shared_ptr<job_t>>	rebind<_Tp>
_Deque_impl	_Deque_impl
allocator<shared_ptr<job_t> *>	allocator<_Tp>
__alloc_traits<allocator<shared_ptr<job_t> *>, shared_ptr<job_t> *>	__alloc_traits<_Alloc, <unnamed>>
rebind<shared_ptr<job_t> *>	rebind<_Tp>
new_allocator<shared_ptr<job_t>>	new_allocator<_Tp>
new_allocator<shared_ptr<job_t> *>	new_allocator<_Tp>
weak_ptr<job_t>	weak_ptr<_Tp>
conditional<false, __undefined, shared_ptr<job_t>>	conditional<false, _Iftrue, _Iffalse>
is_void<shared_ptr<job_t>>	is_void<_Tp>
__normal_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	reverse_iterator<_Iterator>
is_same<shared_ptr<job_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<shared_ptr<job_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<shared_ptr<job_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<shared_ptr<job_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<shared_ptr<job_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<shared_ptr<job_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
_Rb_tree_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	_Rb_tree_node<_Val>
allocator<_Rb_tree_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	allocator<_Tp>
allocator_traits<allocator<_Rb_tree_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<_Rb_tree_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _Rb_tree_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	__alloc_traits<_Alloc, <unnamed>>
allocator<input_mapping_name_t>	allocator<_Tp>
allocator_traits<allocator<input_mapping_name_t>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<input_mapping_name_t>, input_mapping_name_t>	__alloc_traits<_Alloc, <unnamed>>
basic_iostream<wchar_t, char_traits<wchar_t>>	basic_iostream<_CharT, _Traits>
basic_ostream<wchar_t, char_traits<wchar_t>>	basic_ostream<_CharT, _Traits>
basic_streambuf<wchar_t, char_traits<wchar_t>>	basic_streambuf<_CharT, _Traits>
basic_ios<wchar_t, char_traits<wchar_t>>	basic_ios<_CharT, _Traits>
basic_streambuf<char, char_traits<char>>	basic_streambuf<_CharT, _Traits>
basic_ios<char, char_traits<char>>	basic_ios<_CharT, _Traits>
_Vector_base<input_mapping_name_t, allocator<input_mapping_name_t>>	_Vector_base<_Tp, _Alloc>
vector<input_mapping_name_t, allocator<input_mapping_name_t>>	vector<_Tp, _Alloc>
maybe_t<unsigned long>	maybe_t<T>
shared_ptr<parser_t>	shared_ptr<_Tp>
_Rb_tree_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	_Rb_tree_iterator<_Tp>
_Rb_tree_const_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	_Rb_tree_const_iterator<_Tp>
_Identity<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	_Identity<_Tp>
_Rb_tree<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, _Identity<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>
set<_Key, _Compare, _Alloc>	set<_Key, _Compare, _Alloc>
set<_Key, _Compare, _Alloc>	set<_Key, _Compare, _Alloc>
set<_Key, _Compare, _Alloc>	set<_Key, _Compare, _Alloc>
set<_Key, _Compare, _Alloc>	set<_Key, _Compare, _Alloc>
set<_Key, _Compare, _Alloc>	set<_Key, _Compare, _Alloc>
set<_Key, _Compare, _Alloc>	set<_Key, _Compare, _Alloc>
set<_Key, _Compare, _Alloc>	set<_Key, _Compare, _Alloc>
allocator<_Key>	allocator<_Tp>
less<_Key>	less<_Tp>
set<_K1, _C1, _A1>	set<_Key, _Compare, _Alloc>
set<_K1, _C1, _A1>	set<_Key, _Compare, _Alloc>
pair<const_iterator, const_iterator>	pair<_T1, _T2>
initializer_list<_Key>	initializer_list<_E>
pair<iterator, bool>	pair<_T1, _T2>
pair<iterator, bool>	pair<_T1, _T2>
_Identity<_Key>	_Identity<_Tp>
_Rb_tree<_Key, _Key, _Identity<_Key>, _Compare, other>	_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>
__alloc_traits<other, value_type>	__alloc_traits<_Alloc, <unnamed>>
is_same<type, _Key>	is_same<<unnamed>, <unnamed>>
multiset<_Key, _Compare, _Alloc>	multiset<_Key, _Compare, _Alloc>
multiset<_Key, _Compare, _Alloc>	multiset<_Key, _Compare, _Alloc>
multiset<_Key, _Compare, _Alloc>	multiset<_Key, _Compare, _Alloc>
multiset<_Key, _Compare, _Alloc>	multiset<_Key, _Compare, _Alloc>
multiset<_Key, _Compare, _Alloc>	multiset<_Key, _Compare, _Alloc>
multiset<_Key, _Compare, _Alloc>	multiset<_Key, _Compare, _Alloc>
multiset<_Key, _Compare, _Alloc>	multiset<_Key, _Compare, _Alloc>
allocator<_Key>	allocator<_Tp>
less<_Key>	less<_Tp>
multiset<_K1, _C1, _A1>	multiset<_Key, _Compare, _Alloc>
multiset<_K1, _C1, _A1>	multiset<_Key, _Compare, _Alloc>
pair<const_iterator, const_iterator>	pair<_T1, _T2>
initializer_list<_Key>	initializer_list<_E>
__alloc_traits<other, value_type>	__alloc_traits<_Alloc, <unnamed>>
_Identity<_Key>	_Identity<_Tp>
_Rb_tree<_Key, _Key, _Identity<_Key>, _Compare, other>	_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>
is_same<type, _Key>	is_same<<unnamed>, <unnamed>>
null_terminated_array_t<wchar_t>	null_terminated_array_t<CharT>
allocator<basic_string<char, char_traits<char>, allocator<char>>>	allocator<_Tp>
vector<basic_string<char, char_traits<char>, allocator<char>>, allocator<basic_string<char, char_traits<char>, allocator<char>>>>	vector<_Tp, _Alloc>
allocator<event_t>	allocator<_Tp>
vector<event_t, allocator<event_t>>	vector<_Tp, _Alloc>
allocator<redirection_spec_t>	allocator<_Tp>
vector<redirection_spec_t, allocator<redirection_spec_t>>	vector<_Tp, _Alloc>
maybe_t<int>	maybe_t<T>
shared_ptr<job_group_t>	shared_ptr<_Tp>
set<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	set<_Key, _Compare, _Alloc>
__normal_iterator<const input_mapping_name_t *, vector<input_mapping_name_t, allocator<input_mapping_name_t>>>	__normal_iterator<_Iterator, _Container>
iterator_traits<const input_mapping_name_t *>	iterator_traits<const _Tp *>
pair<_Rb_tree_const_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, bool>	pair<_T1, _T2>
_PCC<<expression>, _Rb_tree_const_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, bool>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, _Rb_tree_const_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, bool>	_PCC<<unnamed>, _T1, _T2>
__pair_base<_Rb_tree_const_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, bool>	__pair_base<_U1, _U2>
reverse_iterator<_Rb_tree_const_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	reverse_iterator<_Iterator>
maybe_t<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	maybe_t<T>
remove_extent<job_group_t>	remove_extent<_Tp>
__shared_ptr<job_group_t, _S_atomic>	__shared_ptr<_Tp, _Lp>
weak_ptr<job_group_t>	weak_ptr<_Tp>
is_same<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, value_type>	is_same<<unnamed>, <unnamed>>
reverse_iterator<_Rb_tree_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	reverse_iterator<_Iterator>
_Alloc_node	_Alloc_node
_Reuse_or_alloc_node	_Reuse_or_alloc_node
rebind<_Rb_tree_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	rebind<_Tp>
pair<_Rb_tree_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, bool>	pair<_T1, _T2>
_Rb_tree_impl<less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>	_Rb_tree_impl<_Key_compare, <unnamed>>
remove_extent<parser_t>	remove_extent<_Tp>
__shared_ptr<parser_t, _S_atomic>	__shared_ptr<_Tp, _Lp>
weak_ptr<parser_t>	weak_ptr<_Tp>
_Temporary_value	_Temporary_value
__normal_iterator<input_mapping_name_t *, vector<input_mapping_name_t, allocator<input_mapping_name_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<input_mapping_name_t *, vector<input_mapping_name_t, allocator<input_mapping_name_t>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<const input_mapping_name_t *, vector<input_mapping_name_t, allocator<input_mapping_name_t>>>>	reverse_iterator<_Iterator>
rebind<input_mapping_name_t>	rebind<_Tp>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
new_allocator<input_mapping_name_t>	new_allocator<_Tp>
new_allocator<_Rb_tree_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	new_allocator<_Tp>
is_same<input_mapping_name_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<input_mapping_name_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<input_mapping_name_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<input_mapping_name_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<input_mapping_name_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<input_mapping_name_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Rb_tree_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Rb_tree_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Rb_tree_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Rb_tree_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Rb_tree_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Rb_tree_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
__aligned_membuf<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	__aligned_membuf<_Tp>
_PCC<<expression>, _Rb_tree_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, bool>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, _Rb_tree_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, bool>	_PCC<<unnamed>, _T1, _T2>
__pair_base<_Rb_tree_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, bool>	__pair_base<_U1, _U2>
unary_function<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	unary_function<_Arg, _Result>
__shared_ptr_access<parser_t, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
__weak_ptr<job_group_t, _S_atomic>	__weak_ptr<_Tp, _Lp>
__weak_ptr<parser_t, _S_atomic>	__weak_ptr<_Tp, _Lp>
__shared_ptr_access<job_group_t, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
is_same<_Rb_tree_const_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _U1>	is_same<<unnamed>, <unnamed>>
pair<_Rb_tree_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Rb_tree_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	pair<_T1, _T2>
pair<_Rb_tree_const_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Rb_tree_const_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	pair<_T1, _T2>
remove_reference<_Rb_tree_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> &>	remove_reference<_Tp &>
remove_reference<bool &>	remove_reference<_Tp &>
is_same<_Rb_tree_const_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_const_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_const_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_const_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _U1>	is_same<<unnamed>, <unnamed>>
is_array<job_group_t>	is_array<<unnamed>>
is_void<job_group_t>	is_void<_Tp>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
is_array<parser_t>	is_array<<unnamed>>
is_void<parser_t>	is_void<_Tp>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
is_same<_Rb_tree_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _U1>	is_same<<unnamed>, <unnamed>>
_Tp2	_Tp2
iterator_traits<input_mapping_name_t *>	iterator_traits<_Tp *>
remove_reference<_Rb_tree_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	remove_reference<_Tp>
is_same<_Rb_tree_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _U1>	is_same<<unnamed>, <unnamed>>
remove_reference<_Rb_tree_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> *&>	remove_reference<_Tp &>
__allocated_ptr<_Node_alloc_type>	__allocated_ptr<_Alloc>
_List_iterator<event_blockage_t>	_List_iterator<_Tp>
_List_node<event_blockage_t>	_List_node<_Tp>
allocator<_List_node<event_blockage_t>>	allocator<_Tp>
allocator_traits<allocator<_List_node<event_blockage_t>>>	allocator_traits<allocator<_Tp>>
new_allocator<_List_node<event_blockage_t>>	new_allocator<_Tp>
__alloc_traits<allocator<_List_node<event_blockage_t>>, _List_node<event_blockage_t>>	__alloc_traits<_Alloc, <unnamed>>
rebind<_List_node<event_blockage_t>>	rebind<_Tp>
is_same<_List_node<event_blockage_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_List_node<event_blockage_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_List_node<event_blockage_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_List_node<event_blockage_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_List_node<event_blockage_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_List_node<event_blockage_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
reverse_iterator<_List_iterator<event_blockage_t>>	reverse_iterator<_Iterator>
__aligned_membuf<event_blockage_t>	__aligned_membuf<_Tp>
remove_reference<const event_blockage_t &>	remove_reference<_Tp &>
_Tp2	_Tp2
__allocated_ptr<allocator<_List_node<event_blockage_t>>>	__allocated_ptr<_Alloc>
_Iter_equals_val<wchar_t *const>	_Iter_equals_val<_Value>
allocator<event_t>	allocator<_Tp>
vector<event_t, allocator<event_t>>	vector<_Tp, _Alloc>
__normal_iterator<event_t *, vector<event_t, allocator<event_t>>>	__normal_iterator<_Iterator, _Container>
iterator_traits<event_t *>	iterator_traits<_Tp *>
_Temporary_value	_Temporary_value
reverse_iterator<__normal_iterator<event_t *, vector<event_t, allocator<event_t>>>>	reverse_iterator<_Iterator>
__normal_iterator<const event_t *, vector<event_t, allocator<event_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const event_t *, vector<event_t, allocator<event_t>>>>	reverse_iterator<_Iterator>
allocator_traits<allocator<event_t>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<event_t>, event_t>	__alloc_traits<_Alloc, <unnamed>>
_Vector_base<event_t, allocator<event_t>>	_Vector_base<_Tp, _Alloc>
rebind<event_t>	rebind<_Tp>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
allocator<autoclose_fd_t>	allocator<_Tp>
_Sp_counted_ptr_inplace<const autoclose_fd_t, allocator<autoclose_fd_t>, _S_atomic>	_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>
__rebind<allocator<autoclose_fd_t>, _Sp_counted_ptr_inplace<const autoclose_fd_t, allocator<autoclose_fd_t>, _S_atomic>, void>	__rebind<_Tp, _Up, __void_t<other>>
allocator<_Sp_counted_ptr_inplace<const autoclose_fd_t, allocator<autoclose_fd_t>, _S_atomic>>	allocator<_Tp>
rebind<_Sp_counted_ptr_inplace<const autoclose_fd_t, allocator<autoclose_fd_t>, _S_atomic>>	rebind<_Tp1>
new_allocator<event_t>	new_allocator<_Tp>
new_allocator<autoclose_fd_t>	new_allocator<_Tp>
new_allocator<_Sp_counted_ptr_inplace<const autoclose_fd_t, allocator<autoclose_fd_t>, _S_atomic>>	new_allocator<_Tp>
_Impl	_Impl
conditional<false, __undefined, _Sp_counted_ptr_inplace<const autoclose_fd_t, allocator<autoclose_fd_t>, _S_atomic>>	conditional<false, _Iftrue, _Iffalse>
is_void<_Sp_counted_ptr_inplace<const autoclose_fd_t, allocator<autoclose_fd_t>, _S_atomic>>	is_void<_Tp>
remove_cv<const autoclose_fd_t *>	remove_cv<_Tp>
remove_const<const autoclose_fd_t *>	remove_const<_Tp>
remove_const<const autoclose_fd_t>	remove_const<const _Tp>
remove_cv<const autoclose_fd_t>	remove_cv<_Tp>
__allocated_ptr<allocator<_Sp_counted_ptr_inplace<const autoclose_fd_t, allocator<autoclose_fd_t>, _S_atomic>>>	__allocated_ptr<_Alloc>
allocator_traits<allocator<autoclose_fd_t>>	allocator_traits<allocator<_Tp>>
_Sp_ebo_helper<0, allocator<autoclose_fd_t>, true>	_Sp_ebo_helper<_Nm, _Tp, true>
_Sp_alloc_shared_tag<allocator<autoclose_fd_t>>	_Sp_alloc_shared_tag<_Alloc>
remove_reference<autoclose_fd_t>	remove_reference<_Tp>
remove_reference<shared_ptr<const autoclose_fd_t> &>	remove_reference<_Tp &>
allocator_traits<allocator<_Sp_counted_ptr_inplace<const autoclose_fd_t, allocator<autoclose_fd_t>, _S_atomic>>>	allocator_traits<allocator<_Tp>>
__aligned_buffer<const autoclose_fd_t>	__aligned_buffer<_Tp>
__not_alloc_shared_tag<_Sp_alloc_shared_tag<allocator<autoclose_fd_t>>>	__not_alloc_shared_tag<_Sp_alloc_shared_tag<_Tp>>
is_same<event_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<event_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<event_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<event_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<event_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<event_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
__weak_ptr<const autoclose_fd_t, _S_atomic>	__weak_ptr<_Tp, _Lp>
enable_shared_from_this<const autoclose_fd_t>	enable_shared_from_this<_Tp>
__enable_shared_from_this<const autoclose_fd_t, _S_atomic>	__enable_shared_from_this<_Tp, _Lp>
weak_ptr<const autoclose_fd_t>	weak_ptr<_Tp>
remove_reference<__shared_ptr<const autoclose_fd_t, _S_atomic> &>	remove_reference<_Tp &>
__has_esft_base<autoclose_fd_t, void>	__has_esft_base<_Yp, <unnamed>>
aligned_storage<4UL, 4UL>	aligned_storage<_Len, _Align>
type	type
struct <unnamed>	struct <unnamed>
remove_reference<const autoclose_fd_t *&>	remove_reference<_Tp &>
allocator<completion_t>	allocator<_Tp>
vector<completion_t, allocator<completion_t>>	vector<_Tp, _Alloc>
maybe_t<readline_cmd_t>	maybe_t<T>
maybe_impl_t<tok_t>	maybe_impl_t<T>
acquired_lock<input_mapping_set_t>	acquired_lock<Data>
maybe_impl_t<readline_cmd_t>	maybe_impl_t<T>
is_void<void>	is_void<_Tp>
is_same<void, void>	is_same<_Tp, _Tp>
is_convertible<void, void>	is_convertible<_From, _To>
__or_<is_void<void>, is_same<void, void>, is_convertible<void, void>>	__or_<_B1, _B2, _B3, _Bn...>
allocator<highlight_spec_t>	allocator<_Tp>
vector<highlight_spec_t, allocator<highlight_spec_t>>	vector<_Tp, _Alloc>
__normal_iterator<parse_error_t *, vector<parse_error_t, allocator<parse_error_t>>>	__normal_iterator<_Iterator, _Container>
iterator_traits<parse_error_t *>	iterator_traits<_Tp *>
__normal_iterator<completion_t *, vector<completion_t, allocator<completion_t>>>	__normal_iterator<_Iterator, _Container>
initializer_list<wchar_t>	initializer_list<_E>
_Temporary_value	_Temporary_value
reverse_iterator<__normal_iterator<parse_error_t *, vector<parse_error_t, allocator<parse_error_t>>>>	reverse_iterator<_Iterator>
__normal_iterator<const parse_error_t *, vector<parse_error_t, allocator<parse_error_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const parse_error_t *, vector<parse_error_t, allocator<parse_error_t>>>>	reverse_iterator<_Iterator>
allocator_traits<allocator<parse_error_t>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<parse_error_t>, parse_error_t>	__alloc_traits<_Alloc, <unnamed>>
rebind<parse_error_t>	rebind<_Tp>
_Temporary_value	_Temporary_value
__normal_iterator<highlight_spec_t *, vector<highlight_spec_t, allocator<highlight_spec_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<highlight_spec_t *, vector<highlight_spec_t, allocator<highlight_spec_t>>>>	reverse_iterator<_Iterator>
__normal_iterator<const highlight_spec_t *, vector<highlight_spec_t, allocator<highlight_spec_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const highlight_spec_t *, vector<highlight_spec_t, allocator<highlight_spec_t>>>>	reverse_iterator<_Iterator>
allocator_traits<allocator<highlight_spec_t>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<highlight_spec_t>, highlight_spec_t>	__alloc_traits<_Alloc, <unnamed>>
_Vector_base<highlight_spec_t, allocator<highlight_spec_t>>	_Vector_base<_Tp, _Alloc>
rebind<highlight_spec_t>	rebind<_Tp>
_Base_manager<lambda [] type at line 146522, col. 36>	_Base_manager<_Functor>
__or_<is_same<void, void>, is_convertible<void, void>>	__or_<<unnamed>...>
conditional<true, is_void<void>, __or_<is_same<void, void>, is_convertible<void, void>>>	conditional<_Cond, _Iftrue, _Iffalse>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
new_allocator<parse_error_t>	new_allocator<_Tp>
new_allocator<highlight_spec_t>	new_allocator<_Tp>
_Function_handler<..(..), lambda [] type at line 146522, col. 36>	_Function_handler<..(..), _Functor>
remove_reference<lambda [] type at line 146522, col. 36 &>	remove_reference<_Tp &>
_Callable<lambda [] type at line 146522, col. 36, void>	_Callable<_Func, _Res2>
reverse_iterator<__normal_iterator<completion_t *, vector<completion_t, allocator<completion_t>>>>	reverse_iterator<_Iterator>
is_same<highlight_spec_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<highlight_spec_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<highlight_spec_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<highlight_spec_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<highlight_spec_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<highlight_spec_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<parse_error_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<parse_error_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<parse_error_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<parse_error_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<parse_error_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<parse_error_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
iterator_traits<highlight_spec_t *>	iterator_traits<_Tp *>
less<job_t *>	less<_Tp *>
allocator<job_t *>	allocator<_Tp>
set<job_t *, less<job_t *>, allocator<job_t *>>	set<_Key, _Compare, _Alloc>
_Rb_tree_const_iterator<job_t *>	_Rb_tree_const_iterator<_Tp>
pair<_Rb_tree_const_iterator<job_t *>, bool>	pair<_T1, _T2>
_Identity<job_t *>	_Identity<_Tp>
_Rb_tree<job_t *, job_t *, _Identity<job_t *>, less<job_t *>, allocator<job_t *>>	_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>
_PCC<<expression>, _Rb_tree_const_iterator<job_t *>, bool>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, _Rb_tree_const_iterator<job_t *>, bool>	_PCC<<unnamed>, _T1, _T2>
__pair_base<_Rb_tree_const_iterator<job_t *>, bool>	__pair_base<_U1, _U2>
reverse_iterator<_Rb_tree_const_iterator<job_t *>>	reverse_iterator<_Iterator>
allocator_traits<allocator<job_t *>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<job_t *>, job_t *>	__alloc_traits<_Alloc, <unnamed>>
rebind<job_t *>	rebind<_Tp>
is_same<job_t *, value_type>	is_same<<unnamed>, <unnamed>>
_Rb_tree_iterator<job_t *>	_Rb_tree_iterator<_Tp>
reverse_iterator<_Rb_tree_iterator<job_t *>>	reverse_iterator<_Iterator>
_Alloc_node	_Alloc_node
_Reuse_or_alloc_node	_Reuse_or_alloc_node
_Rb_tree_node<job_t *>	_Rb_tree_node<_Val>
allocator<_Rb_tree_node<job_t *>>	allocator<_Tp>
__alloc_traits<allocator<_Rb_tree_node<job_t *>>, _Rb_tree_node<job_t *>>	__alloc_traits<_Alloc, <unnamed>>
rebind<_Rb_tree_node<job_t *>>	rebind<_Tp>
pair<_Rb_tree_iterator<job_t *>, bool>	pair<_T1, _T2>
_Rb_tree_impl<less<job_t *>, true>	_Rb_tree_impl<_Key_compare, <unnamed>>
allocator_traits<allocator<_Rb_tree_node<job_t *>>>	allocator_traits<allocator<_Tp>>
new_allocator<job_t *>	new_allocator<_Tp>
new_allocator<_Rb_tree_node<job_t *>>	new_allocator<_Tp>
is_same<_Rb_tree_node<job_t *> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Rb_tree_node<job_t *> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Rb_tree_node<job_t *> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Rb_tree_node<job_t *> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Rb_tree_node<job_t *> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Rb_tree_node<job_t *> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
__aligned_membuf<job_t *>	__aligned_membuf<_Tp>
_PCC<<expression>, _Rb_tree_iterator<job_t *>, bool>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, _Rb_tree_iterator<job_t *>, bool>	_PCC<<unnamed>, _T1, _T2>
__pair_base<_Rb_tree_iterator<job_t *>, bool>	__pair_base<_U1, _U2>
unary_function<job_t *, job_t *>	unary_function<_Arg, _Result>
_Rb_tree_key_compare<less<job_t *>>	_Rb_tree_key_compare<_Key_compare>
is_same<job_t **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<job_t **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<job_t **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<job_t **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<job_t **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<job_t **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
binary_function<job_t *, job_t *, bool>	binary_function<_Arg1, _Arg2, _Result>
is_same<_Rb_tree_const_iterator<job_t *>, _U1>	is_same<<unnamed>, <unnamed>>
pair<_Rb_tree_iterator<job_t *>, _Rb_tree_iterator<job_t *>>	pair<_T1, _T2>
pair<_Rb_tree_const_iterator<job_t *>, _Rb_tree_const_iterator<job_t *>>	pair<_T1, _T2>
remove_reference<_Rb_tree_iterator<job_t *> &>	remove_reference<_Tp &>
remove_reference<job_t *const &>	remove_reference<_Tp &>
is_same<_Rb_tree_const_iterator<job_t *>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_const_iterator<job_t *>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_const_iterator<job_t *>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_const_iterator<job_t *>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_iterator<job_t *>, _U1>	is_same<<unnamed>, <unnamed>>
_Tp2	_Tp2
remove_reference<_Rb_tree_iterator<job_t *>>	remove_reference<_Tp>
is_same<_Rb_tree_iterator<job_t *>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_iterator<job_t *>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_iterator<job_t *>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_iterator<job_t *>, _U1>	is_same<<unnamed>, <unnamed>>
remove_reference<_Rb_tree_node<job_t *> *&>	remove_reference<_Tp &>
iterator_traits<wchar_t **>	iterator_traits<_Tp *>
is_assignable<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &, wchar_t *&>	is_assignable<_Tp, _Up>
remove_reference<wchar_t *&>	remove_reference<_Tp &>
shared_ptr<io_bufferfill_t>	shared_ptr<_Tp>
initializer_list<shared_ptr<const io_data_t>>	initializer_list<_E>
__shared_ptr<io_bufferfill_t, _S_atomic>	__shared_ptr<_Tp, _Lp>
remove_reference<shared_ptr<io_bufferfill_t> &>	remove_reference<_Tp &>
remove_extent<io_bufferfill_t>	remove_extent<_Tp>
__shared_ptr_access<io_bufferfill_t, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
__weak_ptr<io_bufferfill_t, _S_atomic>	__weak_ptr<_Tp, _Lp>
weak_ptr<io_bufferfill_t>	weak_ptr<_Tp>
remove_cv<io_bufferfill_t *>	remove_cv<_Tp>
remove_const<io_bufferfill_t *>	remove_const<_Tp>
is_array<io_bufferfill_t>	is_array<<unnamed>>
is_void<io_bufferfill_t>	is_void<_Tp>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
remove_reference<__shared_ptr<io_bufferfill_t, _S_atomic> &>	remove_reference<_Tp &>
remove_reference<io_bufferfill_t *&>	remove_reference<_Tp &>
allocator<event_description_t>	allocator<_Tp>
_Vector_base<event_description_t, allocator<event_description_t>>	_Vector_base<_Tp, _Alloc>
vector<event_description_t, allocator<event_description_t>>	vector<_Tp, _Alloc>
pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	pair<_T1, _T2>
_Rb_tree_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	_Rb_tree_const_iterator<_Tp>
_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	_Rb_tree_iterator<_Tp>
_Select1st<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	_Select1st<_Pair>
allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	allocator<_Tp>
_Rb_tree<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _Select1st<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>, less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>
tuple<const _Key &>	tuple<_Elements...>
shared_ptr<event_handler_t>	shared_ptr<_Tp>
allocator<shared_ptr<event_handler_t>>	allocator<_Tp>
vector<shared_ptr<event_handler_t>, allocator<shared_ptr<event_handler_t>>>	vector<_Tp, _Alloc>
shared_ptr<const function_properties_t>	shared_ptr<_Tp>
map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	map<_Key, _Tp, _Compare, _Alloc>
shared_ptr<function_properties_t>	shared_ptr<_Tp>
__shared_ptr_access<function_properties_t, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
__shared_ptr<function_properties_t, _S_atomic>	__shared_ptr<_Tp, _Lp>
__normal_iterator<event_description_t *, vector<event_description_t, allocator<event_description_t>>>	__normal_iterator<_Iterator, _Container>
iterator_traits<event_description_t *>	iterator_traits<_Tp *>
remove_extent<function_properties_t>	remove_extent<_Tp>
__weak_ptr<event_handler_t, _S_atomic>	__weak_ptr<_Tp, _Lp>
__shared_ptr<event_handler_t, _S_atomic>	__shared_ptr<_Tp, _Lp>
__weak_ptr<const function_properties_t, _S_atomic>	__weak_ptr<_Tp, _Lp>
__shared_ptr<const function_properties_t, _S_atomic>	__shared_ptr<_Tp, _Lp>
__weak_ptr<function_properties_t, _S_atomic>	__weak_ptr<_Tp, _Lp>
is_array<function_properties_t>	is_array<<unnamed>>
is_void<function_properties_t>	is_void<_Tp>
allocator<event_handler_t>	allocator<_Tp>
allocator<function_properties_t>	allocator<_Tp>
weak_ptr<function_properties_t>	weak_ptr<_Tp>
_Temporary_value	_Temporary_value
reverse_iterator<__normal_iterator<event_description_t *, vector<event_description_t, allocator<event_description_t>>>>	reverse_iterator<_Iterator>
__normal_iterator<const event_description_t *, vector<event_description_t, allocator<event_description_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const event_description_t *, vector<event_description_t, allocator<event_description_t>>>>	reverse_iterator<_Iterator>
allocator_traits<allocator<event_description_t>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<event_description_t>, event_description_t>	__alloc_traits<_Alloc, <unnamed>>
rebind<event_description_t>	rebind<_Tp>
reverse_iterator<_Rb_tree_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	reverse_iterator<_Iterator>
reverse_iterator<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	reverse_iterator<_Iterator>
allocator_traits<allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	__alloc_traits<_Alloc, <unnamed>>
rebind<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	rebind<_Tp>
pair<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>, bool>	pair<_T1, _T2>
remove_extent<const function_properties_t>	remove_extent<_Tp>
weak_ptr<const function_properties_t>	weak_ptr<_Tp>
remove_extent<event_handler_t>	remove_extent<_Tp>
weak_ptr<event_handler_t>	weak_ptr<_Tp>
is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, value_type>	is_same<<unnamed>, <unnamed>>
_Alloc_node	_Alloc_node
_Reuse_or_alloc_node	_Reuse_or_alloc_node
_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	_Rb_tree_node<_Val>
allocator<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	allocator<_Tp>
__alloc_traits<allocator<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>, _Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	__alloc_traits<_Alloc, <unnamed>>
rebind<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	rebind<_Tp>
_Rb_tree_impl<less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>	_Rb_tree_impl<_Key_compare, <unnamed>>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
new_allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	new_allocator<_Tp>
new_allocator<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	new_allocator<_Tp>
new_allocator<event_description_t>	new_allocator<_Tp>
new_allocator<function_properties_t>	new_allocator<_Tp>
new_allocator<event_handler_t>	new_allocator<_Tp>
_Sp_counted_ptr_inplace<function_properties_t, allocator<function_properties_t>, _S_atomic>	_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>
new_allocator<_Sp_counted_ptr_inplace<function_properties_t, allocator<function_properties_t>, _S_atomic>>	new_allocator<_Tp>
_Sp_counted_ptr_inplace<event_handler_t, allocator<event_handler_t>, _S_atomic>	_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>
new_allocator<_Sp_counted_ptr_inplace<event_handler_t, allocator<event_handler_t>, _S_atomic>>	new_allocator<_Tp>
allocator_traits<allocator<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>>	allocator_traits<allocator<_Tp>>
allocator<_Sp_counted_ptr_inplace<function_properties_t, allocator<function_properties_t>, _S_atomic>>	allocator<_Tp>
allocator<_Sp_counted_ptr_inplace<event_handler_t, allocator<event_handler_t>, _S_atomic>>	allocator<_Tp>
__rebind<allocator<event_handler_t>, _Sp_counted_ptr_inplace<event_handler_t, allocator<event_handler_t>, _S_atomic>, void>	__rebind<_Tp, _Up, __void_t<other>>
rebind<_Sp_counted_ptr_inplace<event_handler_t, allocator<event_handler_t>, _S_atomic>>	rebind<_Tp1>
__rebind<allocator<function_properties_t>, _Sp_counted_ptr_inplace<function_properties_t, allocator<function_properties_t>, _S_atomic>, void>	__rebind<_Tp, _Up, __void_t<other>>
rebind<_Sp_counted_ptr_inplace<function_properties_t, allocator<function_properties_t>, _S_atomic>>	rebind<_Tp1>
_Impl	_Impl
conditional<false, __undefined, _Sp_counted_ptr_inplace<function_properties_t, allocator<function_properties_t>, _S_atomic>>	conditional<false, _Iftrue, _Iffalse>
is_void<_Sp_counted_ptr_inplace<function_properties_t, allocator<function_properties_t>, _S_atomic>>	is_void<_Tp>
_Impl	_Impl
conditional<false, __undefined, _Sp_counted_ptr_inplace<event_handler_t, allocator<event_handler_t>, _S_atomic>>	conditional<false, _Iftrue, _Iffalse>
is_void<_Sp_counted_ptr_inplace<event_handler_t, allocator<event_handler_t>, _S_atomic>>	is_void<_Tp>
remove_const<event_handler_t>	remove_const<_Tp>
remove_cv<event_handler_t>	remove_cv<_Tp>
__allocated_ptr<allocator<_Sp_counted_ptr_inplace<event_handler_t, allocator<event_handler_t>, _S_atomic>>>	__allocated_ptr<_Alloc>
allocator_traits<allocator<event_handler_t>>	allocator_traits<allocator<_Tp>>
_Sp_ebo_helper<0, allocator<event_handler_t>, true>	_Sp_ebo_helper<_Nm, _Tp, true>
remove_const<function_properties_t>	remove_const<_Tp>
remove_cv<function_properties_t>	remove_cv<_Tp>
__allocated_ptr<allocator<_Sp_counted_ptr_inplace<function_properties_t, allocator<function_properties_t>, _S_atomic>>>	__allocated_ptr<_Alloc>
allocator_traits<allocator<function_properties_t>>	allocator_traits<allocator<_Tp>>
_Sp_ebo_helper<0, allocator<function_properties_t>, true>	_Sp_ebo_helper<_Nm, _Tp, true>
_Sp_alloc_shared_tag<allocator<function_properties_t>>	_Sp_alloc_shared_tag<_Alloc>
_Sp_alloc_shared_tag<allocator<event_handler_t>>	_Sp_alloc_shared_tag<_Alloc>
remove_reference<const event_description_t &>	remove_reference<_Tp &>
allocator_traits<allocator<_Sp_counted_ptr_inplace<function_properties_t, allocator<function_properties_t>, _S_atomic>>>	allocator_traits<allocator<_Tp>>
allocator_traits<allocator<_Sp_counted_ptr_inplace<event_handler_t, allocator<event_handler_t>, _S_atomic>>>	allocator_traits<allocator<_Tp>>
__aligned_buffer<event_handler_t>	__aligned_buffer<_Tp>
__aligned_buffer<function_properties_t>	__aligned_buffer<_Tp>
__not_alloc_shared_tag<_Sp_alloc_shared_tag<allocator<function_properties_t>>>	__not_alloc_shared_tag<_Sp_alloc_shared_tag<_Tp>>
is_same<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
__aligned_membuf<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	__aligned_membuf<_Tp>
unary_function<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	unary_function<_Arg, _Result>
_PCC<<expression>, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	_PCC<<unnamed>, _T1, _T2>
__pair_base<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	__pair_base<_U1, _U2>
is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<event_description_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<event_description_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<event_description_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<event_description_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<event_description_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<event_description_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
__shared_ptr_access<const function_properties_t, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
__shared_ptr_access<event_handler_t, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
__has_esft_base<function_properties_t, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
remove_reference<event_description_t>	remove_reference<_Tp>
is_array<event_handler_t>	is_array<<unnamed>>
is_void<event_handler_t>	is_void<_Tp>
__has_esft_base<event_handler_t, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
is_array<const function_properties_t>	is_array<<unnamed>>
is_void<const function_properties_t>	is_void<_Tp>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
is_same<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _U2>	is_same<<unnamed>, <unnamed>>
pair<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>, _Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	pair<_T1, _T2>
pair<_Rb_tree_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>, _Rb_tree_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	pair<_T1, _T2>
_Tp2	_Tp2
aligned_storage<104UL, 8UL>	aligned_storage<_Len, _Align>
type	type
aligned_storage<80UL, 8UL>	aligned_storage<_Len, _Align>
type	type
move_iterator<event_description_t *>	move_iterator<_Iterator>
__is_move_insertable<allocator<event_description_t>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<event_description_t>	is_move_constructible<_Tp>
__is_move_constructible_impl<event_description_t, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<event_description_t, event_description_t &&>	is_constructible<_Tp, _Args...>
__is_move_iterator<__normal_iterator<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	__is_move_iterator<_Tp>
__is_move_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *>	__is_move_iterator<_Tp>
is_assignable<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &>	is_assignable<_Tp, _Up>
__is_referenceable<event_description_t>	__is_referenceable<_Tp>
conditional<true, event_description_t &&, event_description_t &>	conditional<_Cond, _Iftrue, _Iffalse>
struct <unnamed>	struct <unnamed>
struct <unnamed>	struct <unnamed>
is_same<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _U2>	is_same<<unnamed>, <unnamed>>
is_same<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _U2>	is_same<<unnamed>, <unnamed>>
is_same<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _U2>	is_same<<unnamed>, <unnamed>>
is_same<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _U2>	is_same<<unnamed>, <unnamed>>
remove_reference<allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> &>	remove_reference<_Tp &>
is_reference<event_description_t &>	is_reference<_Tp>
__iterator_traits<move_iterator<event_description_t *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<event_description_t &, event_description_t &&>	is_assignable<_Tp, _Up>
remove_reference<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>> *&>	remove_reference<_Tp &>
_Select1st<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	_Select1st<_Pair>
_Rb_tree<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _Select1st<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>, less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>
maybe_t<event_type_t>	maybe_t<T>
allocator<shared_ptr<event_handler_t>>	allocator<_Tp>
vector<shared_ptr<event_handler_t>, allocator<shared_ptr<event_handler_t>>>	vector<_Tp, _Alloc>
maybe_t<termsize_t>	maybe_t<T>
owning_lock<data_t>	owning_lock<Data>
__normal_iterator<shared_ptr<event_handler_t> *, vector<shared_ptr<event_handler_t>, allocator<shared_ptr<event_handler_t>>>>	__normal_iterator<_Iterator, _Container>
iterator_traits<shared_ptr<event_handler_t> *>	iterator_traits<_Tp *>
maybe_impl_t<termsize_t>	maybe_impl_t<T>
_Temporary_value	_Temporary_value
reverse_iterator<__normal_iterator<shared_ptr<event_handler_t> *, vector<shared_ptr<event_handler_t>, allocator<shared_ptr<event_handler_t>>>>>	reverse_iterator<_Iterator>
__normal_iterator<const shared_ptr<event_handler_t> *, vector<shared_ptr<event_handler_t>, allocator<shared_ptr<event_handler_t>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const shared_ptr<event_handler_t> *, vector<shared_ptr<event_handler_t>, allocator<shared_ptr<event_handler_t>>>>>	reverse_iterator<_Iterator>
allocator_traits<allocator<shared_ptr<event_handler_t>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<shared_ptr<event_handler_t>>, shared_ptr<event_handler_t>>	__alloc_traits<_Alloc, <unnamed>>
_Vector_base<shared_ptr<event_handler_t>, allocator<shared_ptr<event_handler_t>>>	_Vector_base<_Tp, _Alloc>
rebind<shared_ptr<event_handler_t>>	rebind<_Tp>
maybe_impl_t<event_type_t>	maybe_impl_t<T>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
_Alloc_node	_Alloc_node
_Reuse_or_alloc_node	_Reuse_or_alloc_node
__alloc_traits<allocator<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>, _Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	__alloc_traits<_Alloc, <unnamed>>
_Rb_tree_impl<less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>	_Rb_tree_impl<_Key_compare, <unnamed>>
new_allocator<shared_ptr<event_handler_t>>	new_allocator<_Tp>
is_same<shared_ptr<event_handler_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<shared_ptr<event_handler_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<shared_ptr<event_handler_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<shared_ptr<event_handler_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<shared_ptr<event_handler_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<shared_ptr<event_handler_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
remove_reference<event_type_t &>	remove_reference<_Tp &>
maybe_t<history_item_t>	maybe_t<T>
allocator<long>	allocator<_Tp>
vector<long, allocator<long>>	vector<_Tp, _Alloc>
equal_to<long>	equal_to<_Tp>
pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	pair<_T1, _T2>
allocator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	allocator<_Tp>
unordered_map<long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, hash<long>, equal_to<long>, allocator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
acquired_lock<const history_impl_t>	acquired_lock<Data>
acquired_lock<history_impl_t>	acquired_lock<Data>
default_delete<impl_wrapper_t>	default_delete<_Tp>
unique_ptr<impl_wrapper_t, default_delete<impl_wrapper_t>>	unique_ptr<_Tp, _Dp>
allocator<history_item_t>	allocator<_Tp>
deque<history_item_t, allocator<history_item_t>>	deque<_Tp, _Alloc>
enum_map<hist_cmd_t>	enum_map<T>
is_convertible<pointer, impl_wrapper_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, impl_wrapper_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, impl_wrapper_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, impl_wrapper_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__uniq_ptr_impl<impl_wrapper_t, default_delete<impl_wrapper_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<impl_wrapper_t, default_delete<impl_wrapper_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
maybe_impl_t<history_item_t>	maybe_impl_t<T>
__is_empty_non_tuple<impl_wrapper_t *>	__is_empty_non_tuple<_Tp>
is_empty<impl_wrapper_t *>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<impl_wrapper_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<impl_wrapper_t>>	__is_empty_non_tuple<_Tp>
is_empty<default_delete<impl_wrapper_t>>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<impl_wrapper_t>>>	conditional<false, _Iftrue, _Iffalse>
allocator<_Hash_node_base *>	allocator<_Tp>
pair<_Node_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true, true>, bool>	pair<_T1, _T2>
conditional<true, pair<_Node_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true, true>, bool>, _Node_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true, true>>	conditional<_Cond, _Iftrue, _Iffalse>
is_copy_constructible<history_item_t>	is_copy_constructible<_Tp>
__is_copy_constructible_impl<history_item_t, true>	__is_copy_constructible_impl<_Tp, true>
_AllocNode<allocator<_Hash_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true>>>	_AllocNode<_NodeAlloc>
tuple<impl_wrapper_t *, default_delete<impl_wrapper_t>>	tuple<_T1, _T2>
_TC<value, impl_wrapper_t *, default_delete<impl_wrapper_t>>	_TC<<unnamed>, _Elements...>
_TC<true, impl_wrapper_t *, default_delete<impl_wrapper_t>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, impl_wrapper_t *, default_delete<impl_wrapper_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Equal_helper<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, _Identity, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, unsigned long, true>	_Equal_helper<_Key, _Value, _ExtractKey, _Equal, _HashCodeType, __cache_hash_code>
allocator_traits<allocator<_Hash_node_base *>>	allocator_traits<_Alloc>
pair<_Node_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true, true>, _Node_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true, true>>	pair<_T1, _T2>
pair<_Node_const_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true, true>, _Node_const_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true, true>>	pair<_T1, _T2>
is_constructible<history_item_t, const history_item_t &>	is_constructible<_Tp, _Args...>
__is_referenceable<history_item_t>	__is_referenceable<_Tp>
_Tuple_impl<1UL, default_delete<impl_wrapper_t>>	_Tuple_impl<_Idx, _Head>
_Head_base<1UL, default_delete<impl_wrapper_t>, true>	_Head_base<_Idx, _Head, true>
_Head_base<0UL, impl_wrapper_t *, false>	_Head_base<_Idx, _Head, false>
__enable_if<__value, double>	__enable_if<<unnamed>, <unnamed>>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__promote_2<_Tp, _Up, __type, __type>	__promote_2<_Tp, _Up, _Tp2, _Up2>
__promote_2<_Tp, _Up, __type, __type>	__promote_2<_Tp, _Up, _Tp2, _Up2>
__is_integer<_Tp>	__is_integer<_Tp>
__promote_2<_Tp, _Up, __type, __type>	__promote_2<_Tp, _Up, _Tp2, _Up2>
__is_integer<_Tp>	__is_integer<_Tp>
__enable_if<__value, long>	__enable_if<<unnamed>, <unnamed>>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__enable_if<__value, long long>	__enable_if<<unnamed>, <unnamed>>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__enable_if<__value, int>	__enable_if<<unnamed>, <unnamed>>
__is_integer<_Tp>	__is_integer<_Tp>
__promote_2<_Tp, _Up, __type, __type>	__promote_2<_Tp, _Up, _Tp2, _Up2>
__promote_2<_Tp, _Up, __type, __type>	__promote_2<_Tp, _Up, _Tp2, _Up2>
__promote_2<_Tp, _Up, __type, __type>	__promote_2<_Tp, _Up, _Tp2, _Up2>
__promote_3<_Tp, _Up, _Vp, __type, __type, __type>	__promote_3<_Tp, _Up, _Vp, _Tp2, _Up2, _Vp2>
__promote_2<_Tp, _Up, __type, __type>	__promote_2<_Tp, _Up, _Tp2, _Up2>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__promote_2<_Tp, _Up, __type, __type>	__promote_2<_Tp, _Up, _Tp2, _Up2>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__enable_if<<expression>, bool>	__enable_if<<unnamed>, <unnamed>>
__is_arithmetic<_Up>	__is_arithmetic<_Tp>
__is_arithmetic<_Tp>	__is_arithmetic<_Tp>
__is_arithmetic<_Up>	__is_arithmetic<_Tp>
__is_arithmetic<_Tp>	__is_arithmetic<_Tp>
__is_arithmetic<_Up>	__is_arithmetic<_Tp>
__is_arithmetic<_Tp>	__is_arithmetic<_Tp>
__is_arithmetic<_Up>	__is_arithmetic<_Tp>
__is_arithmetic<_Tp>	__is_arithmetic<_Tp>
__is_arithmetic<_Up>	__is_arithmetic<_Tp>
__is_arithmetic<_Tp>	__is_arithmetic<_Tp>
__is_arithmetic<_Up>	__is_arithmetic<_Tp>
__is_arithmetic<_Tp>	__is_arithmetic<_Tp>
__enable_if<__value, bool>	__enable_if<<unnamed>, <unnamed>>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__promote_2<_Tp, _Up, __type, __type>	__promote_2<_Tp, _Up, _Tp2, _Up2>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__promote_2<_Tp, _Up, __type, __type>	__promote_2<_Tp, _Up, _Tp2, _Up2>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__promote_2<_Tp, _Up, __type, __type>	__promote_2<_Tp, _Up, _Tp2, _Up2>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
__is_integer<_Tp>	__is_integer<_Tp>
uniform_int_distribution<long long>	uniform_int_distribution<_IntType>
param_type	param_type
_Vector_base<unsigned int, allocator<unsigned int>>	_Vector_base<_Tp, _Alloc>
vector<unsigned int, allocator<unsigned int>>	vector<_Tp, _Alloc>
_Vector_base<double, allocator<double>>	_Vector_base<_Tp, _Alloc>
vector<double, allocator<double>>	vector<_Tp, _Alloc>
initializer_list<_IntType>	initializer_list<_E>
piecewise_linear_distribution<_RealType>	piecewise_linear_distribution<_RealType>
piecewise_constant_distribution<_RealType>	piecewise_constant_distribution<_RealType>
discrete_distribution<_IntType>	discrete_distribution<_IntType>
extreme_value_distribution<_RealType>	extreme_value_distribution<_RealType>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
extreme_value_distribution<_RealType>	extreme_value_distribution<_RealType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
extreme_value_distribution<_RealType>	extreme_value_distribution<_RealType>
weibull_distribution<_RealType>	weibull_distribution<_RealType>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
weibull_distribution<_RealType>	weibull_distribution<_RealType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
weibull_distribution<_RealType>	weibull_distribution<_RealType>
exponential_distribution<_RealType>	exponential_distribution<_RealType>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
exponential_distribution<_RealType>	exponential_distribution<_RealType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
exponential_distribution<_RealType>	exponential_distribution<_RealType>
poisson_distribution<_IntType>	poisson_distribution<_IntType>
negative_binomial_distribution<_IntType>	negative_binomial_distribution<_IntType>
geometric_distribution<_IntType>	geometric_distribution<_IntType>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
geometric_distribution<_IntType>	geometric_distribution<_IntType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
geometric_distribution<_IntType>	geometric_distribution<_IntType>
binomial_distribution<_IntType>	binomial_distribution<_IntType>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
student_t_distribution<_RealType>	student_t_distribution<_RealType>
fisher_f_distribution<_RealType>	fisher_f_distribution<_RealType>
cauchy_distribution<_RealType>	cauchy_distribution<_RealType>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
cauchy_distribution<_RealType>	cauchy_distribution<_RealType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
cauchy_distribution<_RealType>	cauchy_distribution<_RealType>
chi_squared_distribution<_RealType>	chi_squared_distribution<_RealType>
gamma_distribution<_RealType>	gamma_distribution<_RealType>
lognormal_distribution<_RealType>	lognormal_distribution<_RealType>
normal_distribution<_RealType>	normal_distribution<_RealType>
uniform_real_distribution<_RealType>	uniform_real_distribution<_RealType>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
uniform_real_distribution<_RealType>	uniform_real_distribution<_RealType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
uniform_real_distribution<_IntType>	uniform_real_distribution<_RealType>
uniform_int_distribution<_IntType>	uniform_int_distribution<_IntType>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
uniform_int_distribution<_IntType>	uniform_int_distribution<_IntType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
uniform_int_distribution<_IntType>	uniform_int_distribution<_IntType>
mersenne_twister_engine<unsigned long, 32UL, 624UL, 397UL, 31UL, 2567483615UL, 11UL, 4294967295UL, 7UL, 2636928640UL, 15UL, 4022730752UL, 18UL, 1812433253UL>	mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>
linear_congruential_engine<unsigned long, 16807UL, 0UL, 2147483647UL>	linear_congruential_engine<_UIntType, __a, __c, __m>
shuffle_order_engine<linear_congruential_engine<unsigned long, 16807UL, 0UL, 2147483647UL>, 256UL>	shuffle_order_engine<_RandomNumberEngine, __k>
subtract_with_carry_engine<unsigned long, 48UL, 5UL, 12UL>	subtract_with_carry_engine<_UIntType, __w, __s, __r>
discard_block_engine<subtract_with_carry_engine<unsigned long, 48UL, 5UL, 12UL>, 389UL, 11UL>	discard_block_engine<_RandomNumberEngine, __p, __r>
subtract_with_carry_engine<unsigned long, 24UL, 10UL, 24UL>	subtract_with_carry_engine<_UIntType, __w, __s, __r>
discard_block_engine<subtract_with_carry_engine<unsigned long, 24UL, 10UL, 24UL>, 223UL, 23UL>	discard_block_engine<_RandomNumberEngine, __p, __r>
mersenne_twister_engine<unsigned long, 64UL, 312UL, 156UL, 31UL, 13043109905998158313UL, 29UL, 6148914691236517205UL, 17UL, 8202884508482404352UL, 37UL, 18444473444759240704UL, 43UL, 6364136223846793005UL>	mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>
linear_congruential_engine<unsigned long, 48271UL, 0UL, 2147483647UL>	linear_congruential_engine<_UIntType, __a, __c, __m>
shuffle_order_engine<_RandomNumberEngine, __k>	shuffle_order_engine<_RandomNumberEngine, __k>
independent_bits_engine<_RandomNumberEngine, __w, _UIntType>	independent_bits_engine<_RandomNumberEngine, __w, _UIntType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
independent_bits_engine<_RandomNumberEngine, __w, _UIntType>	independent_bits_engine<_RandomNumberEngine, __w, _UIntType>
discard_block_engine<_RandomNumberEngine, __p, __r>	discard_block_engine<_RandomNumberEngine, __p, __r>
subtract_with_carry_engine<_UIntType, __w, __s, __r>	subtract_with_carry_engine<_UIntType, __w, __s, __r>
mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>	mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>
linear_congruential_engine<_UIntType, __a, __c, __m>	linear_congruential_engine<_UIntType, __a, __c, __m>
numeric_limits<_UIntType>	numeric_limits<_Tp>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
piecewise_linear_distribution<_RealType1>	piecewise_linear_distribution<_RealType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
piecewise_linear_distribution<_RealType1>	piecewise_linear_distribution<_RealType>
allocator<_RealType>	allocator<_Tp>
vector<_RealType, allocator<_RealType>>	vector<_Tp, _Alloc>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
piecewise_constant_distribution<_RealType1>	piecewise_constant_distribution<_RealType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
piecewise_constant_distribution<_RealType1>	piecewise_constant_distribution<_RealType>
allocator<_RealType>	allocator<_Tp>
vector<_RealType, allocator<_RealType>>	vector<_Tp, _Alloc>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
discrete_distribution<_IntType1>	discrete_distribution<_IntType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
discrete_distribution<_IntType1>	discrete_distribution<_IntType>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
poisson_distribution<_IntType1>	poisson_distribution<_IntType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
poisson_distribution<_IntType1>	poisson_distribution<_IntType>
normal_distribution<double>	normal_distribution<_RealType>
gamma_distribution<double>	gamma_distribution<_RealType>
param_type	param_type
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
negative_binomial_distribution<_IntType1>	negative_binomial_distribution<_IntType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
negative_binomial_distribution<_IntType1>	negative_binomial_distribution<_IntType>
param_type	param_type
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
binomial_distribution<_IntType1>	binomial_distribution<_IntType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
binomial_distribution<_IntType1>	binomial_distribution<_IntType>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
student_t_distribution<_RealType1>	student_t_distribution<_RealType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
student_t_distribution<_RealType1>	student_t_distribution<_RealType>
normal_distribution<_RealType>	normal_distribution<_RealType>
gamma_distribution<_RealType>	gamma_distribution<_RealType>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
fisher_f_distribution<_RealType1>	fisher_f_distribution<_RealType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
fisher_f_distribution<_RealType1>	fisher_f_distribution<_RealType>
gamma_distribution<_RealType>	gamma_distribution<_RealType>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
chi_squared_distribution<_RealType1>	chi_squared_distribution<_RealType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
chi_squared_distribution<_RealType1>	chi_squared_distribution<_RealType>
gamma_distribution<result_type>	gamma_distribution<_RealType>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
gamma_distribution<_RealType1>	gamma_distribution<_RealType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
gamma_distribution<_RealType1>	gamma_distribution<_RealType>
normal_distribution<_RealType>	normal_distribution<_RealType>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
lognormal_distribution<_RealType1>	lognormal_distribution<_RealType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
lognormal_distribution<_RealType1>	lognormal_distribution<_RealType>
normal_distribution<_RealType>	normal_distribution<_RealType>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
normal_distribution<_RealType1>	normal_distribution<_RealType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
normal_distribution<_RealType1>	normal_distribution<_RealType>
normal_distribution<_RealType1>	normal_distribution<_RealType>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
shuffle_order_engine<_RandomNumberEngine1, __k1>	shuffle_order_engine<_RandomNumberEngine, __k>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
shuffle_order_engine<_RandomNumberEngine1, __k1>	shuffle_order_engine<_RandomNumberEngine, __k>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
discard_block_engine<_RandomNumberEngine1, __p1, __r1>	discard_block_engine<_RandomNumberEngine, __p, __r>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
discard_block_engine<_RandomNumberEngine1, __p1, __r1>	discard_block_engine<_RandomNumberEngine, __p, __r>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
subtract_with_carry_engine<_UIntType1, __w1, __s1, __r1>	subtract_with_carry_engine<_UIntType, __w, __s, __r>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
subtract_with_carry_engine<_UIntType1, __w1, __s1, __r1>	subtract_with_carry_engine<_UIntType, __w, __s, __r>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
mersenne_twister_engine<_UIntType1, __w1, __n1, __m1, __r1, __a1, __u1, __d1, __s1, __b1, __t1, __c1, __l1, __f1>	mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
mersenne_twister_engine<_UIntType1, __w1, __n1, __m1, __r1, __a1, __u1, __d1, __s1, __b1, __t1, __c1, __l1, __f1>	mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
linear_congruential_engine<_UIntType1, __a1, __c1, __m1>	linear_congruential_engine<_UIntType, __a, __c, __m>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
linear_congruential_engine<_UIntType1, __a1, __c1, __m1>	linear_congruential_engine<_UIntType, __a, __c, __m>
initializer_list<_RealType>	initializer_list<_E>
initializer_list<_RealType>	initializer_list<_E>
initializer_list<double>	initializer_list<_E>
_Mod<_Tp, __m, __a, __c, <expression>, <expression>>	_Mod<_Tp, __m, __a, __c, __big_enough, __schrage_ok>
is_same<seed_seq, linear_congruential_engine<unsigned long, 48271UL, 0UL, 2147483647UL>>	is_same<<unnamed>, <unnamed>>
__not_<is_same<seed_seq, linear_congruential_engine<unsigned long, 48271UL, 0UL, 2147483647UL>>>	__not_<_Pp>
is_unsigned<unsigned int>	is_unsigned<_Tp>
is_convertible<seed_seq, unsigned long>	is_convertible<_From, _To>
__not_<is_convertible<seed_seq, unsigned long>>	__not_<_Pp>
__and_<__not_<is_same<seed_seq, linear_congruential_engine<unsigned long, 48271UL, 0UL, 2147483647UL>>>, is_unsigned<unsigned int>, __not_<is_convertible<seed_seq, unsigned long>>>	__and_<_B1, _B2, _B3, _Bn...>
is_same<type, linear_congruential_engine<unsigned long, 48271UL, 0UL, 2147483647UL>>	is_same<<unnamed>, <unnamed>>
__not_<is_same<type, linear_congruential_engine<unsigned long, 48271UL, 0UL, 2147483647UL>>>	__not_<_Pp>
is_unsigned<result_type>	is_unsigned<_Tp>
is_convertible<_Sseq, unsigned long>	is_convertible<_From, _To>
__not_<is_convertible<_Sseq, unsigned long>>	__not_<_Pp>
__and_<__not_<is_same<type, linear_congruential_engine<unsigned long, 48271UL, 0UL, 2147483647UL>>>, is_unsigned<result_type>, __not_<is_convertible<_Sseq, unsigned long>>>	__and_<<unnamed>...>
is_convertible<_Sseq, unsigned long>	is_convertible<_From, _To>
__not_<is_convertible<_Sseq, unsigned long>>	__not_<_Pp>
__and_<__not_<is_same<type, linear_congruential_engine<unsigned long, 48271UL, 0UL, 2147483647UL>>>, is_unsigned<result_type>, __not_<is_convertible<_Sseq, unsigned long>>>	__and_<<unnamed>...>
is_convertible<_Sseq, unsigned long>	is_convertible<_From, _To>
__not_<is_convertible<_Sseq, unsigned long>>	__not_<_Pp>
__and_<__not_<is_same<type, linear_congruential_engine<unsigned long, 48271UL, 0UL, 2147483647UL>>>, is_unsigned<result_type>, __not_<is_convertible<_Sseq, unsigned long>>>	__and_<<unnamed>...>
is_same<type, subtract_with_carry_engine<_UIntType, __w, __s, __r>>	is_same<<unnamed>, <unnamed>>
__not_<is_same<type, subtract_with_carry_engine<_UIntType, __w, __s, __r>>>	__not_<_Pp>
is_convertible<_Sseq, _UIntType>	is_convertible<_From, _To>
__not_<is_convertible<_Sseq, _UIntType>>	__not_<_Pp>
__and_<__not_<is_same<type, subtract_with_carry_engine<_UIntType, __w, __s, __r>>>, is_unsigned<result_type>, __not_<is_convertible<_Sseq, _UIntType>>>	__and_<<unnamed>...>
is_same<type, mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>>	is_same<<unnamed>, <unnamed>>
__not_<is_same<type, mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>>>	__not_<_Pp>
is_convertible<_Sseq, _UIntType>	is_convertible<_From, _To>
__not_<is_convertible<_Sseq, _UIntType>>	__not_<_Pp>
__and_<__not_<is_same<type, mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>>>, is_unsigned<result_type>, __not_<is_convertible<_Sseq, _UIntType>>>	__and_<<unnamed>...>
is_same<type, linear_congruential_engine<_UIntType, __a, __c, __m>>	is_same<<unnamed>, <unnamed>>
__not_<is_same<type, linear_congruential_engine<_UIntType, __a, __c, __m>>>	__not_<_Pp>
is_convertible<_Sseq, _UIntType>	is_convertible<_From, _To>
__not_<is_convertible<_Sseq, _UIntType>>	__not_<_Pp>
__and_<__not_<is_same<type, linear_congruential_engine<_UIntType, __a, __c, __m>>>, is_unsigned<result_type>, __not_<is_convertible<_Sseq, _UIntType>>>	__and_<<unnamed>...>
is_same<type, mersenne_twister_engine<unsigned long, 32UL, 624UL, 397UL, 31UL, 2567483615UL, 11UL, 4294967295UL, 7UL, 2636928640UL, 15UL, 4022730752UL, 18UL, 1812433253UL>>	is_same<<unnamed>, <unnamed>>
__not_<is_same<type, mersenne_twister_engine<unsigned long, 32UL, 624UL, 397UL, 31UL, 2567483615UL, 11UL, 4294967295UL, 7UL, 2636928640UL, 15UL, 4022730752UL, 18UL, 1812433253UL>>>	__not_<_Pp>
is_convertible<_Sseq, unsigned long>	is_convertible<_From, _To>
__not_<is_convertible<_Sseq, unsigned long>>	__not_<_Pp>
__and_<__not_<is_same<type, mersenne_twister_engine<unsigned long, 32UL, 624UL, 397UL, 31UL, 2567483615UL, 11UL, 4294967295UL, 7UL, 2636928640UL, 15UL, 4022730752UL, 18UL, 1812433253UL>>>, is_unsigned<result_type>, __not_<is_convertible<_Sseq, unsigned long>>>	__and_<<unnamed>...>
is_convertible<_Sseq, unsigned long>	is_convertible<_From, _To>
__not_<is_convertible<_Sseq, unsigned long>>	__not_<_Pp>
__and_<__not_<is_same<type, mersenne_twister_engine<unsigned long, 32UL, 624UL, 397UL, 31UL, 2567483615UL, 11UL, 4294967295UL, 7UL, 2636928640UL, 15UL, 4022730752UL, 18UL, 1812433253UL>>>, is_unsigned<result_type>, __not_<is_convertible<_Sseq, unsigned long>>>	__and_<<unnamed>...>
is_convertible<_Sseq, unsigned long>	is_convertible<_From, _To>
__not_<is_convertible<_Sseq, unsigned long>>	__not_<_Pp>
__and_<__not_<is_same<type, mersenne_twister_engine<unsigned long, 32UL, 624UL, 397UL, 31UL, 2567483615UL, 11UL, 4294967295UL, 7UL, 2636928640UL, 15UL, 4022730752UL, 18UL, 1812433253UL>>>, is_unsigned<result_type>, __not_<is_convertible<_Sseq, unsigned long>>>	__and_<<unnamed>...>
is_same<type, shuffle_order_engine<_RandomNumberEngine, __k>>	is_same<<unnamed>, <unnamed>>
__not_<is_same<type, shuffle_order_engine<_RandomNumberEngine, __k>>>	__not_<_Pp>
is_convertible<_Sseq, result_type>	is_convertible<_From, _To>
__not_<is_convertible<_Sseq, result_type>>	__not_<_Pp>
__and_<__not_<is_same<type, shuffle_order_engine<_RandomNumberEngine, __k>>>, is_unsigned<result_type>, __not_<is_convertible<_Sseq, result_type>>>	__and_<<unnamed>...>
is_convertible<_Sseq, result_type>	is_convertible<_From, _To>
__not_<is_convertible<_Sseq, result_type>>	__not_<_Pp>
__and_<__not_<is_same<type, shuffle_order_engine<_RandomNumberEngine, __k>>>, is_unsigned<result_type>, __not_<is_convertible<_Sseq, result_type>>>	__and_<<unnamed>...>
is_convertible<_Sseq, result_type>	is_convertible<_From, _To>
__not_<is_convertible<_Sseq, result_type>>	__not_<_Pp>
__and_<__not_<is_same<type, shuffle_order_engine<_RandomNumberEngine, __k>>>, is_unsigned<result_type>, __not_<is_convertible<_Sseq, result_type>>>	__and_<<unnamed>...>
is_same<type, independent_bits_engine<_RandomNumberEngine, __w, _UIntType>>	is_same<<unnamed>, <unnamed>>
__not_<is_same<type, independent_bits_engine<_RandomNumberEngine, __w, _UIntType>>>	__not_<_Pp>
is_convertible<_Sseq, _UIntType>	is_convertible<_From, _To>
__not_<is_convertible<_Sseq, _UIntType>>	__not_<_Pp>
__and_<__not_<is_same<type, independent_bits_engine<_RandomNumberEngine, __w, _UIntType>>>, is_unsigned<result_type>, __not_<is_convertible<_Sseq, _UIntType>>>	__and_<<unnamed>...>
is_convertible<_Sseq, _UIntType>	is_convertible<_From, _To>
__not_<is_convertible<_Sseq, _UIntType>>	__not_<_Pp>
__and_<__not_<is_same<type, independent_bits_engine<_RandomNumberEngine, __w, _UIntType>>>, is_unsigned<result_type>, __not_<is_convertible<_Sseq, _UIntType>>>	__and_<<unnamed>...>
is_convertible<_Sseq, _UIntType>	is_convertible<_From, _To>
__not_<is_convertible<_Sseq, _UIntType>>	__not_<_Pp>
__and_<__not_<is_same<type, independent_bits_engine<_RandomNumberEngine, __w, _UIntType>>>, is_unsigned<result_type>, __not_<is_convertible<_Sseq, _UIntType>>>	__and_<<unnamed>...>
is_same<type, discard_block_engine<_RandomNumberEngine, __p, __r>>	is_same<<unnamed>, <unnamed>>
__not_<is_same<type, discard_block_engine<_RandomNumberEngine, __p, __r>>>	__not_<_Pp>
is_convertible<_Sseq, result_type>	is_convertible<_From, _To>
__not_<is_convertible<_Sseq, result_type>>	__not_<_Pp>
__and_<__not_<is_same<type, discard_block_engine<_RandomNumberEngine, __p, __r>>>, is_unsigned<result_type>, __not_<is_convertible<_Sseq, result_type>>>	__and_<<unnamed>...>
is_convertible<_Sseq, result_type>	is_convertible<_From, _To>
__not_<is_convertible<_Sseq, result_type>>	__not_<_Pp>
__and_<__not_<is_same<type, discard_block_engine<_RandomNumberEngine, __p, __r>>>, is_unsigned<result_type>, __not_<is_convertible<_Sseq, result_type>>>	__and_<<unnamed>...>
is_convertible<_Sseq, result_type>	is_convertible<_From, _To>
__not_<is_convertible<_Sseq, result_type>>	__not_<_Pp>
__and_<__not_<is_same<type, discard_block_engine<_RandomNumberEngine, __p, __r>>>, is_unsigned<result_type>, __not_<is_convertible<_Sseq, result_type>>>	__and_<<unnamed>...>
is_convertible<_Sseq, _UIntType>	is_convertible<_From, _To>
__not_<is_convertible<_Sseq, _UIntType>>	__not_<_Pp>
__and_<__not_<is_same<type, subtract_with_carry_engine<_UIntType, __w, __s, __r>>>, is_unsigned<result_type>, __not_<is_convertible<_Sseq, _UIntType>>>	__and_<<unnamed>...>
is_convertible<_Sseq, _UIntType>	is_convertible<_From, _To>
__not_<is_convertible<_Sseq, _UIntType>>	__not_<_Pp>
__and_<__not_<is_same<type, subtract_with_carry_engine<_UIntType, __w, __s, __r>>>, is_unsigned<result_type>, __not_<is_convertible<_Sseq, _UIntType>>>	__and_<<unnamed>...>
is_convertible<_Sseq, _UIntType>	is_convertible<_From, _To>
__not_<is_convertible<_Sseq, _UIntType>>	__not_<_Pp>
__and_<__not_<is_same<type, subtract_with_carry_engine<_UIntType, __w, __s, __r>>>, is_unsigned<result_type>, __not_<is_convertible<_Sseq, _UIntType>>>	__and_<<unnamed>...>
is_convertible<_Sseq, _UIntType>	is_convertible<_From, _To>
__not_<is_convertible<_Sseq, _UIntType>>	__not_<_Pp>
__and_<__not_<is_same<type, mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>>>, is_unsigned<result_type>, __not_<is_convertible<_Sseq, _UIntType>>>	__and_<<unnamed>...>
is_convertible<_Sseq, _UIntType>	is_convertible<_From, _To>
__not_<is_convertible<_Sseq, _UIntType>>	__not_<_Pp>
__and_<__not_<is_same<type, mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>>>, is_unsigned<result_type>, __not_<is_convertible<_Sseq, _UIntType>>>	__and_<<unnamed>...>
is_convertible<_Sseq, _UIntType>	is_convertible<_From, _To>
__not_<is_convertible<_Sseq, _UIntType>>	__not_<_Pp>
__and_<__not_<is_same<type, mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>>>, is_unsigned<result_type>, __not_<is_convertible<_Sseq, _UIntType>>>	__and_<<unnamed>...>
is_convertible<_Sseq, _UIntType>	is_convertible<_From, _To>
__not_<is_convertible<_Sseq, _UIntType>>	__not_<_Pp>
__and_<__not_<is_same<type, linear_congruential_engine<_UIntType, __a, __c, __m>>>, is_unsigned<result_type>, __not_<is_convertible<_Sseq, _UIntType>>>	__and_<<unnamed>...>
is_convertible<_Sseq, _UIntType>	is_convertible<_From, _To>
__not_<is_convertible<_Sseq, _UIntType>>	__not_<_Pp>
__and_<__not_<is_same<type, linear_congruential_engine<_UIntType, __a, __c, __m>>>, is_unsigned<result_type>, __not_<is_convertible<_Sseq, _UIntType>>>	__and_<<unnamed>...>
is_same<type, _Engine>	is_same<<unnamed>, <unnamed>>
__not_<is_same<type, _Engine>>	__not_<_Pp>
is_convertible<_Sseq, _Res>	is_convertible<_From, _To>
__not_<is_convertible<_Sseq, _Res>>	__not_<_Pp>
__and_<__not_<is_same<type, _Engine>>, is_unsigned<result_type>, __not_<is_convertible<_Sseq, _Res>>>	__and_<<unnamed>...>
is_convertible<_Sseq, _UIntType>	is_convertible<_From, _To>
__not_<is_convertible<_Sseq, _UIntType>>	__not_<_Pp>
__and_<__not_<is_same<type, linear_congruential_engine<_UIntType, __a, __c, __m>>>, is_unsigned<result_type>, __not_<is_convertible<_Sseq, _UIntType>>>	__and_<<unnamed>...>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
extreme_value_distribution<_RealType>	extreme_value_distribution<_RealType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
extreme_value_distribution<_RealType>	extreme_value_distribution<_RealType>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
weibull_distribution<_RealType>	weibull_distribution<_RealType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
weibull_distribution<_RealType>	weibull_distribution<_RealType>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
exponential_distribution<_RealType>	exponential_distribution<_RealType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
exponential_distribution<_RealType>	exponential_distribution<_RealType>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
geometric_distribution<_IntType>	geometric_distribution<_IntType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
geometric_distribution<_IntType>	geometric_distribution<_IntType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
cauchy_distribution<_RealType>	cauchy_distribution<_RealType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
cauchy_distribution<_RealType>	cauchy_distribution<_RealType>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
uniform_real_distribution<_RealType>	uniform_real_distribution<_RealType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
uniform_real_distribution<_RealType>	uniform_real_distribution<_RealType>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
uniform_int_distribution<_IntType>	uniform_int_distribution<_IntType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
uniform_int_distribution<_IntType>	uniform_int_distribution<_IntType>
initializer_list<_RealType>	initializer_list<_E>
initializer_list<_RealType>	initializer_list<_E>
initializer_list<_IntType>	initializer_list<_E>
is_floating_point<_RealType>	is_floating_point<_Tp>
is_floating_point<_RealType>	is_floating_point<_Tp>
is_integral<_IntType>	is_integral<_Tp>
is_floating_point<_RealType>	is_floating_point<_Tp>
is_floating_point<_RealType>	is_floating_point<_Tp>
is_floating_point<_RealType>	is_floating_point<_Tp>
is_integral<_IntType>	is_integral<_Tp>
is_integral<_IntType>	is_integral<_Tp>
is_integral<_IntType>	is_integral<_Tp>
is_integral<_IntType>	is_integral<_Tp>
is_floating_point<_RealType>	is_floating_point<_Tp>
is_floating_point<_RealType>	is_floating_point<_Tp>
is_floating_point<_RealType>	is_floating_point<_Tp>
is_floating_point<_RealType>	is_floating_point<_Tp>
is_floating_point<_RealType>	is_floating_point<_Tp>
is_floating_point<_RealType>	is_floating_point<_Tp>
is_floating_point<_RealType>	is_floating_point<_Tp>
is_floating_point<_RealType>	is_floating_point<_Tp>
numeric_limits<_UIntType>	numeric_limits<_Tp>
is_unsigned<_UIntType>	is_unsigned<_Tp>
numeric_limits<_UIntType>	numeric_limits<_Tp>
is_unsigned<_UIntType>	is_unsigned<_Tp>
_Shift<_UIntType, __w, <expression>>	_Shift<_UIntType, __w, <unnamed>>
numeric_limits<_UIntType>	numeric_limits<_Tp>
is_unsigned<_UIntType>	is_unsigned<_Tp>
is_unsigned<_UIntType>	is_unsigned<_Tp>
is_floating_point<_DInputType>	is_floating_point<_Tp>
piecewise_linear_distribution<_RealType>	piecewise_linear_distribution<_RealType>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
piecewise_linear_distribution<_RealType>	piecewise_linear_distribution<_RealType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
piecewise_constant_distribution<_RealType>	piecewise_constant_distribution<_RealType>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
piecewise_constant_distribution<_RealType>	piecewise_constant_distribution<_RealType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
discrete_distribution<_IntType>	discrete_distribution<_IntType>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
discrete_distribution<_IntType>	discrete_distribution<_IntType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
gamma_distribution<_RealType>	gamma_distribution<_RealType>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
gamma_distribution<_RealType>	gamma_distribution<_RealType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
student_t_distribution<_RealType>	student_t_distribution<_RealType>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
student_t_distribution<_RealType>	student_t_distribution<_RealType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
fisher_f_distribution<_RealType>	fisher_f_distribution<_RealType>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
fisher_f_distribution<_RealType>	fisher_f_distribution<_RealType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
chi_squared_distribution<_RealType>	chi_squared_distribution<_RealType>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
chi_squared_distribution<_RealType>	chi_squared_distribution<_RealType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
lognormal_distribution<_RealType>	lognormal_distribution<_RealType>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
lognormal_distribution<_RealType>	lognormal_distribution<_RealType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
normal_distribution<_RealType>	normal_distribution<_RealType>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
normal_distribution<_RealType>	normal_distribution<_RealType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
normal_distribution<_RealType>	normal_distribution<_RealType>
binomial_distribution<_IntType>	binomial_distribution<_IntType>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
binomial_distribution<_IntType>	binomial_distribution<_IntType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
poisson_distribution<_IntType>	poisson_distribution<_IntType>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
poisson_distribution<_IntType>	poisson_distribution<_IntType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
negative_binomial_distribution<_IntType>	negative_binomial_distribution<_IntType>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
negative_binomial_distribution<_IntType>	negative_binomial_distribution<_IntType>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
shuffle_order_engine<_RandomNumberEngine, __k>	shuffle_order_engine<_RandomNumberEngine, __k>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
shuffle_order_engine<_RandomNumberEngine, __k>	shuffle_order_engine<_RandomNumberEngine, __k>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
discard_block_engine<_RandomNumberEngine, __p, __r>	discard_block_engine<_RandomNumberEngine, __p, __r>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
discard_block_engine<_RandomNumberEngine, __p, __r>	discard_block_engine<_RandomNumberEngine, __p, __r>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
subtract_with_carry_engine<_UIntType, __w, __s, __r>	subtract_with_carry_engine<_UIntType, __w, __s, __r>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
subtract_with_carry_engine<_UIntType, __w, __s, __r>	subtract_with_carry_engine<_UIntType, __w, __s, __r>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>	mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>	mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
linear_congruential_engine<_UIntType, __a, __c, __m>	linear_congruential_engine<_UIntType, __a, __c, __m>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
basic_istream<_CharT, _Traits>	basic_istream<_CharT, _Traits>
linear_congruential_engine<_UIntType, __a, __c, __m>	linear_congruential_engine<_UIntType, __a, __c, __m>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
basic_ostream<_CharT, _Traits>	basic_ostream<_CharT, _Traits>
allocator_traits<allocator<unsigned int>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<unsigned int>, unsigned int>	__alloc_traits<_Alloc, <unnamed>>
numeric_limits<_UIntType>	numeric_limits<_Tp>
_Shift<_UIntType, 32UL, <expression>>	_Shift<_UIntType, __w, <unnamed>>
owning_lock<linear_congruential_engine<unsigned long, 48271UL, 0UL, 2147483647UL>>	owning_lock<Data>
acquired_lock<linear_congruential_engine<unsigned long, 48271UL, 0UL, 2147483647UL>>	acquired_lock<Data>
initializer_list<unsigned int>	initializer_list<_E>
acquired_lock<const linear_congruential_engine<unsigned long, 48271UL, 0UL, 2147483647UL>>	acquired_lock<Data>
is_same<unsigned int *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unsigned int *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unsigned int *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unsigned int *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unsigned int *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unsigned int *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
__and_<is_unsigned<unsigned int>, __not_<is_convertible<seed_seq, unsigned long>>>	__and_<_B1, _B2>
conditional<true, __and_<is_unsigned<unsigned int>, __not_<is_convertible<seed_seq, unsigned long>>>, __not_<is_same<seed_seq, linear_congruential_engine<unsigned long, 48271UL, 0UL, 2147483647UL>>>>	conditional<_Cond, _Iftrue, _Iffalse>
_Temporary_value	_Temporary_value
__normal_iterator<double *, vector<double, allocator<double>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<double *, vector<double, allocator<double>>>>	reverse_iterator<_Iterator>
__normal_iterator<const double *, vector<double, allocator<double>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const double *, vector<double, allocator<double>>>>	reverse_iterator<_Iterator>
allocator_traits<allocator<double>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<double>, double>	__alloc_traits<_Alloc, <unnamed>>
rebind<double>	rebind<_Tp>
_Temporary_value	_Temporary_value
__normal_iterator<unsigned int *, vector<unsigned int, allocator<unsigned int>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<unsigned int *, vector<unsigned int, allocator<unsigned int>>>>	reverse_iterator<_Iterator>
__normal_iterator<const unsigned int *, vector<unsigned int, allocator<unsigned int>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const unsigned int *, vector<unsigned int, allocator<unsigned int>>>>	reverse_iterator<_Iterator>
rebind<unsigned int>	rebind<_Tp>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
new_allocator<double>	new_allocator<_Tp>
new_allocator<unsigned int>	new_allocator<_Tp>
remove_cv<seed_seq>	remove_cv<_Tp>
remove_const<seed_seq>	remove_const<_Tp>
enable_if<true, unsigned int *>	enable_if<true, _Tp>
_Shift<unsigned long, 32UL, true>	_Shift<_UIntType, __w, true>
remove_reference<linear_congruential_engine<unsigned long, 48271UL, 0UL, 2147483647UL> &>	remove_reference<_Tp &>
iterator_traits<unsigned int *>	iterator_traits<_Tp *>
move_iterator<unsigned int *>	move_iterator<_Iterator>
__success_type<unsigned long long>	__success_type<_Tp>
conditional<true, unsigned int &&, unsigned int &>	conditional<_Cond, _Iftrue, _Iffalse>
is_same<double *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<double *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<double *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<double *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<double *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<double *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_arithmetic<unsigned int>	is_arithmetic<_Tp>
is_signed<unsigned int>	is_signed<_Tp>
__not_<is_signed<unsigned int>>	__not_<_Pp>
__and_<is_arithmetic<unsigned int>, __not_<is_signed<unsigned int>>>	__and_<_B1, _B2>
__enable_if<true, void>	__enable_if<true, _Tp>
_Mod<unsigned int, 0U, 1U, 0U, true, false>	_Mod<_Tp, __m, __a, __c, true, __s>
remove_reference<unsigned int &>	remove_reference<_Tp &>
_Mod<unsigned long, 2147483647UL, 1UL, 0UL, true, true>	_Mod<_Tp, __m, __a, __c, true, __s>
__cv_selector<unsigned long long, false, false>	__cv_selector<_Unqualified, false, false>
__match_cv_qualifiers<long long, unsigned long long, false, false>	__match_cv_qualifiers<_Qualified, _Unqualified, _IsConst, _IsVol>
__make_unsigned_selector<long long, true, false>	__make_unsigned_selector<_Tp, true, false>
make_unsigned<long long>	make_unsigned<_Tp>
__is_arithmetic<unsigned int>	__is_arithmetic<_Tp>
__is_pointer<unsigned int>	__is_pointer<_Tp>
__traitor<__is_arithmetic<unsigned int>, __is_pointer<unsigned int>>	__traitor<_Sp, _Tp>
conditional<true, __not_<is_convertible<seed_seq, unsigned long>>, is_unsigned<unsigned int>>	conditional<_Cond, _Iftrue, _Iffalse>
conditional<true, __not_<is_signed<unsigned int>>, is_arithmetic<unsigned int>>	conditional<_Cond, _Iftrue, _Iffalse>
__is_convertible_helper<seed_seq, unsigned long, false>	__is_convertible_helper<_From, _To, false>
is_reference<unsigned int &>	is_reference<_Tp>
remove_reference<unsigned int>	remove_reference<_Tp>
__is_move_iterator<move_iterator<unsigned int *>>	__is_move_iterator<move_iterator<_Iterator>>
is_void<seed_seq>	is_void<_Tp>
is_function<unsigned long>	is_function<<unnamed>>
is_array<unsigned long>	is_array<<unnamed>>
__or_<is_void<seed_seq>, is_function<unsigned long>, is_array<unsigned long>>	__or_<_B1, _B2, _B3, _Bn...>
__is_floating<unsigned int>	__is_floating<_Tp>
__traitor<__is_integer<unsigned int>, __is_floating<unsigned int>>	__traitor<_Sp, _Tp>
is_enum<long long>	is_enum<_Tp>
__is_pointer<unsigned int *>	__is_pointer<_Tp *>
__are_same<unsigned int, unsigned int>	__are_same<_Tp, _Tp>
_Mod<unsigned long, 2147483647UL, 48271UL, 0UL, true, true>	_Mod<_Tp, __m, __a, __c, true, __s>
is_const<long long>	is_const<<unnamed>>
is_volatile<long long>	is_volatile<<unnamed>>
__or_<is_function<unsigned long>, is_array<unsigned long>>	__or_<_B1, _B2>
conditional<false, is_void<seed_seq>, __or_<is_function<unsigned long>, is_array<unsigned long>>>	conditional<false, _Iftrue, _Iffalse>
__is_move_insertable<allocator<unsigned int>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<unsigned int>	is_move_constructible<_Tp>
__is_move_constructible_impl<unsigned int, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<unsigned int, unsigned int &&>	is_constructible<_Tp, _Args...>
is_move_assignable<unsigned int>	is_move_assignable<_Tp>
is_copy_assignable<unsigned int>	is_copy_assignable<_Tp>
conditional<true, is_move_assignable<unsigned int>, is_copy_assignable<unsigned int>>	conditional<_Cond, _Iftrue, _Iffalse>
__is_referenceable<unsigned int>	__is_referenceable<_Tp>
conditional<false, is_function<unsigned long>, is_array<unsigned long>>	conditional<false, _Iftrue, _Iffalse>
__is_move_assignable_impl<unsigned int, true>	__is_move_assignable_impl<_Tp, true>
__iterator_traits<move_iterator<unsigned int *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<unsigned int &, unsigned int &&>	is_assignable<_Tp, _Up>
scoped_push<bool>	scoped_push<T>
conditional<true, pair<unsigned long, unsigned long> &&, __nonesuch_no_braces &&>	conditional<_Cond, _Iftrue, _Iffalse>
__and_<is_move_assignable<unsigned long>, is_move_assignable<unsigned long>>	__and_<_B1, _B2>
__iterator_traits<__normal_iterator<wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
remove_reference<__normal_iterator<wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> &>	remove_reference<_Tp &>
remove_reference<__normal_iterator<wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	remove_reference<_Tp>
remove_reference<wchar_t &>	remove_reference<_Tp &>
conditional<true, is_move_assignable<unsigned long>, is_move_assignable<unsigned long>>	conditional<_Cond, _Iftrue, _Iffalse>
remove_reference<tok_t &>	remove_reference<_Tp &>
_Iter_equals_iter<__normal_iterator<wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	_Iter_equals_iter<_Iterator1>
__is_integer<__normal_iterator<wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	__is_integer<_Tp>
is_copy_constructible<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	is_copy_constructible<_Tp>
__is_copy_constructible_impl<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true>	__is_copy_constructible_impl<_Tp, true>
is_constructible<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &>	is_constructible<_Tp, _Args...>
__is_referenceable<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	__is_referenceable<_Tp>
is_copy_assignable<value_type>	is_copy_assignable<_Tp>
__uninitialized_default_n_1<<expression>>	__uninitialized_default_n_1<_TrivialValueType>
_Rb_tree_iterator<long>	_Rb_tree_iterator<_Tp>
_Rb_tree_const_iterator<long>	_Rb_tree_const_iterator<_Tp>
_Rb_tree<long, long, _Identity<long>, less<long>, allocator<long>>	_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>
_Vector_base<long, allocator<long>>	_Vector_base<_Tp, _Alloc>
vector<long, allocator<long>>	vector<_Tp, _Alloc>
reverse_iterator<_Rb_tree_const_iterator<long>>	reverse_iterator<_Iterator>
set<long, less<long>, allocator<long>>	set<_Key, _Compare, _Alloc>
__normal_iterator<long *, vector<long, allocator<long>>>	__normal_iterator<_Iterator, _Container>
iterator_traits<long *>	iterator_traits<_Tp *>
__normal_iterator<const long *, vector<long, allocator<long>>>	__normal_iterator<_Iterator, _Container>
__iterator_traits<_Rb_tree_const_iterator<long>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
allocator_traits<allocator<long>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<long>, long>	__alloc_traits<_Alloc, <unnamed>>
is_same<long *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<long *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<long *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<long *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<long *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<long *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
iterator_traits<_Rb_tree_const_iterator<long>>	iterator_traits<_Iterator>
iterator<bidirectional_iterator_tag, long, long, const long *, const long &>	iterator<_Category, _Tp, _Distance, _Pointer, _Reference>
rebind<long>	rebind<_Tp>
pair<_Rb_tree_const_iterator<long>, bool>	pair<_T1, _T2>
_Temporary_value	_Temporary_value
reverse_iterator<__normal_iterator<long *, vector<long, allocator<long>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<const long *, vector<long, allocator<long>>>>	reverse_iterator<_Iterator>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
is_same<signed long, long>	is_same<_Tp, _Tp>
is_same<long, value_type>	is_same<<unnamed>, <unnamed>>
reverse_iterator<_Rb_tree_iterator<long>>	reverse_iterator<_Iterator>
_Alloc_node	_Alloc_node
_Reuse_or_alloc_node	_Reuse_or_alloc_node
_Rb_tree_node<long>	_Rb_tree_node<_Val>
allocator<_Rb_tree_node<long>>	allocator<_Tp>
__alloc_traits<allocator<_Rb_tree_node<long>>, _Rb_tree_node<long>>	__alloc_traits<_Alloc, <unnamed>>
rebind<_Rb_tree_node<long>>	rebind<_Tp>
pair<_Rb_tree_iterator<long>, bool>	pair<_T1, _T2>
_Rb_tree_impl<less<long>, true>	_Rb_tree_impl<_Key_compare, <unnamed>>
new_allocator<long>	new_allocator<_Tp>
new_allocator<_Rb_tree_node<long>>	new_allocator<_Tp>
allocator_traits<allocator<_Rb_tree_node<long>>>	allocator_traits<allocator<_Tp>>
enable_if<true, long *>	enable_if<true, _Tp>
move_iterator<long *>	move_iterator<_Iterator>
conditional<true, long &&, long &>	conditional<_Cond, _Iftrue, _Iffalse>
is_same<_Rb_tree_node<long> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Rb_tree_node<long> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Rb_tree_node<long> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Rb_tree_node<long> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Rb_tree_node<long> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Rb_tree_node<long> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
__aligned_membuf<long>	__aligned_membuf<_Tp>
unary_function<long, long>	unary_function<_Arg, _Result>
_Rb_tree_key_compare<less<long>>	_Rb_tree_key_compare<_Key_compare>
iterator_traits<const long *>	iterator_traits<const _Tp *>
binary_function<long, long, bool>	binary_function<_Arg1, _Arg2, _Result>
remove_reference<const long &>	remove_reference<_Tp &>
_Iter_equals_val<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	_Iter_equals_val<_Value>
_Tp2	_Tp2
pair<_Rb_tree_const_iterator<long>, _Rb_tree_const_iterator<long>>	pair<_T1, _T2>
pair<_Rb_tree_iterator<long>, _Rb_tree_iterator<long>>	pair<_T1, _T2>
is_reference<long &>	is_reference<_Tp>
__is_move_insertable<allocator<long>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<long>	is_move_constructible<_Tp>
__is_move_constructible_impl<long, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<long, long &&>	is_constructible<_Tp, _Args...>
__is_move_iterator<move_iterator<long *>>	__is_move_iterator<move_iterator<_Iterator>>
__is_referenceable<long>	__is_referenceable<_Tp>
__is_pointer<long *>	__is_pointer<_Tp *>
__are_same<long, long>	__are_same<_Tp, _Tp>
is_copy_assignable<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	is_copy_assignable<_Tp>
__uninitialized_default_n_1<false>	__uninitialized_default_n_1<_TrivialValueType>
__is_copy_assignable_impl<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true>	__is_copy_assignable_impl<_Tp, true>
__iterator_traits<move_iterator<long *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<long &, long &&>	is_assignable<_Tp, _Up>
__is_move_iterator<__normal_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	__is_move_iterator<_Tp>
is_move_assignable<long>	is_move_assignable<_Tp>
is_copy_assignable<long>	is_copy_assignable<_Tp>
conditional<true, is_move_assignable<long>, is_copy_assignable<long>>	conditional<_Cond, _Iftrue, _Iffalse>
remove_reference<_Rb_tree_node<long> *&>	remove_reference<_Tp &>
__is_move_assignable_impl<long, true>	__is_move_assignable_impl<_Tp, true>
allocator<rgb_color_t>	allocator<_Tp>
vector<rgb_color_t, allocator<rgb_color_t>>	vector<_Tp, _Alloc>
_Temporary_value	_Temporary_value
__normal_iterator<rgb_color_t *, vector<rgb_color_t, allocator<rgb_color_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<rgb_color_t *, vector<rgb_color_t, allocator<rgb_color_t>>>>	reverse_iterator<_Iterator>
__normal_iterator<const rgb_color_t *, vector<rgb_color_t, allocator<rgb_color_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const rgb_color_t *, vector<rgb_color_t, allocator<rgb_color_t>>>>	reverse_iterator<_Iterator>
allocator_traits<allocator<rgb_color_t>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<rgb_color_t>, rgb_color_t>	__alloc_traits<_Alloc, <unnamed>>
_Vector_base<rgb_color_t, allocator<rgb_color_t>>	_Vector_base<_Tp, _Alloc>
rebind<rgb_color_t>	rebind<_Tp>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
new_allocator<rgb_color_t>	new_allocator<_Tp>
is_same<rgb_color_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<rgb_color_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<rgb_color_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<rgb_color_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<rgb_color_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<rgb_color_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
iterator_traits<rgb_color_t *>	iterator_traits<_Tp *>
iterator_traits<const rgb_color_t *>	iterator_traits<const _Tp *>
remove_reference<const rgb_color_t &>	remove_reference<_Tp &>
move_iterator<rgb_color_t *>	move_iterator<_Iterator>
__is_move_insertable<allocator<rgb_color_t>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<rgb_color_t>	is_move_constructible<_Tp>
__is_move_constructible_impl<rgb_color_t, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<rgb_color_t, rgb_color_t &&>	is_constructible<_Tp, _Args...>
__is_referenceable<rgb_color_t>	__is_referenceable<_Tp>
conditional<true, rgb_color_t &&, rgb_color_t &>	conditional<_Cond, _Iftrue, _Iffalse>
is_reference<rgb_color_t &>	is_reference<_Tp>
__iterator_traits<move_iterator<rgb_color_t *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<rgb_color_t &, rgb_color_t &&>	is_assignable<_Tp, _Up>
remove_reference<rgb_color_t>	remove_reference<_Tp>
remove_reference<rgb_color_t &>	remove_reference<_Tp &>
scoped_push<const wchar_t *>	scoped_push<T>
remove_reference<const wchar_t *&>	remove_reference<_Tp &>
maybe_t<job_control_t>	maybe_t<T>
enum_map<status_cmd_t>	enum_map<T>
maybe_impl_t<job_control_t>	maybe_impl_t<T>
remove_reference<job_control_t &>	remove_reference<_Tp &>
remove_reference<job_control_t>	remove_reference<_Tp>
pair<const char, ..(..)>	pair<_T1, _T2>
allocator<pair<const char, ..(..)>>	allocator<_Tp>
_Insert_base<char, pair<const char, ..(..)>, allocator<pair<const char, ..(..)>>, _Select1st, equal_to<char>, hash<char>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<false, false, true>>	_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
_Insert<char, pair<const char, ..(..)>, allocator<pair<const char, ..(..)>>, _Select1st, equal_to<char>, hash<char>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<false, false, true>, false>	_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, false>
__is_fast_hash<hash<char>>	__is_fast_hash<_Hash>
__is_nothrow_invocable<const hash<char> &, const char &>	__is_nothrow_invocable<_Fn, _Args...>
__and_<__is_fast_hash<hash<char>>, __is_nothrow_invocable<const hash<char> &, const char &>>	__and_<_B1, _B2>
__not_<__and_<__is_fast_hash<hash<char>>, __is_nothrow_invocable<const hash<char> &, const char &>>>	__not_<_Pp>
_Hash_code_base<char, pair<const char, ..(..)>, _Select1st, hash<char>, _Mod_range_hashing, _Default_ranged_hash, false>	_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Default_ranged_hash, false>
_Hashtable<char, pair<const char, ..(..)>, allocator<pair<const char, ..(..)>>, _Select1st, equal_to<char>, hash<char>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<false, false, true>>	_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
__hash_code_base_access	__hash_code_base_access
_Vector_base<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	_Vector_base<_Tp, _Alloc>
vector<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	vector<_Tp, _Alloc>
shared_ptr<const parsed_source_t>	shared_ptr<_Tp>
default_delete<string_replacer_t>	default_delete<_Tp>
unique_ptr<string_replacer_t, default_delete<string_replacer_t>>	unique_ptr<_Tp, _Dp>
default_delete<string_matcher_t>	default_delete<_Tp>
unique_ptr<string_matcher_t, default_delete<string_matcher_t>>	unique_ptr<_Tp, _Dp>
unordered_map<char, ..(..), hash<char>, equal_to<char>, allocator<pair<const char, ..(..)>>>	unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
reverse_iterator<__normal_iterator<const wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	reverse_iterator<_Iterator>
__normal_iterator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> *, vector<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	__normal_iterator<_Iterator, _Container>
iterator_traits<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> *>	iterator_traits<_Tp *>
default_delete<regex_replacer_t>	default_delete<_Tp>
enable_if<true, unique_ptr<string_replacer_t, default_delete<string_replacer_t>> &>	enable_if<true, _Tp>
unique_ptr<regex_replacer_t, default_delete<regex_replacer_t>>	unique_ptr<_Tp, _Dp>
default_delete<literal_replacer_t>	default_delete<_Tp>
unique_ptr<literal_replacer_t, default_delete<literal_replacer_t>>	unique_ptr<_Tp, _Dp>
__uniq_ptr_impl<string_replacer_t, default_delete<string_replacer_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<string_replacer_t, default_delete<string_replacer_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
default_delete<pcre2_matcher_t>	default_delete<_Tp>
enable_if<true, unique_ptr<string_matcher_t, default_delete<string_matcher_t>> &>	enable_if<true, _Tp>
unique_ptr<pcre2_matcher_t, default_delete<pcre2_matcher_t>>	unique_ptr<_Tp, _Dp>
default_delete<wildcard_matcher_t>	default_delete<_Tp>
unique_ptr<wildcard_matcher_t, default_delete<wildcard_matcher_t>>	unique_ptr<_Tp, _Dp>
__uniq_ptr_impl<string_matcher_t, default_delete<string_matcher_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<string_matcher_t, default_delete<string_matcher_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
_Node_const_iterator<pair<const char, ..(..)>, false, false>	_Node_const_iterator<_Value, __constant_iterators, __cache>
_Hashtable_base<char, pair<const char, ..(..)>, _Select1st, equal_to<char>, hash<char>, _Mod_range_hashing, _Default_ranged_hash, _Hashtable_traits<false, false, true>>	_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>
_Node_iterator_base<pair<const char, ..(..)>, false>	_Node_iterator_base<_Value, _Cache_hash_code>
remove_reference<options_t &>	remove_reference<_Tp &>
_Hash_node<pair<const char, ..(..)>, false>	_Hash_node<_Value, false>
is_convertible<pointer, wildcard_matcher_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, wildcard_matcher_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, wildcard_matcher_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, wildcard_matcher_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__uniq_ptr_impl<wildcard_matcher_t, default_delete<wildcard_matcher_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<wildcard_matcher_t, default_delete<wildcard_matcher_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
is_convertible<pointer, pcre2_matcher_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, pcre2_matcher_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, pcre2_matcher_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, pcre2_matcher_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__uniq_ptr_impl<pcre2_matcher_t, default_delete<pcre2_matcher_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<pcre2_matcher_t, default_delete<pcre2_matcher_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
is_convertible<pointer, literal_replacer_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, literal_replacer_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, literal_replacer_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, literal_replacer_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__uniq_ptr_impl<literal_replacer_t, default_delete<literal_replacer_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<literal_replacer_t, default_delete<literal_replacer_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
is_convertible<pointer, regex_replacer_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, regex_replacer_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, regex_replacer_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, regex_replacer_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__uniq_ptr_impl<regex_replacer_t, default_delete<regex_replacer_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<regex_replacer_t, default_delete<regex_replacer_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
iterator_traits<__normal_iterator<const wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	iterator_traits<_Iterator>
iterator<random_access_iterator_tag, wchar_t, long, const wchar_t *, const wchar_t &>	iterator<_Category, _Tp, _Distance, _Pointer, _Reference>
_Local_const_iterator<char, pair<const char, ..(..)>, _Select1st, hash<char>, _Mod_range_hashing, _Default_ranged_hash, false, false>	_Local_const_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>
_Local_iterator<char, pair<const char, ..(..)>, _Select1st, hash<char>, _Mod_range_hashing, _Default_ranged_hash, false, false>	_Local_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>
_Node_iterator<pair<const char, ..(..)>, false, false>	_Node_iterator<_Value, __constant_iterators, __cache>
allocator_traits<allocator<pair<const char, ..(..)>>>	allocator_traits<allocator<_Tp>>
tuple_element<1UL, pair<const char, ..(..)>>	tuple_element<1UL, pair<_Tp1, _Tp2>>
_Map_base<char, pair<const char, ..(..)>, allocator<pair<const char, ..(..)>>, _Select1st, equal_to<char>, hash<char>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<false, false, true>, true>	_Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
pair<_Node_iterator<pair<const char, ..(..)>, false, false>, bool>	pair<_T1, _T2>
is_convertible<wildcard_matcher_t *, string_matcher_t *>	is_convertible<_From, _To>
is_array<wildcard_matcher_t>	is_array<<unnamed>>
__not_<is_array<wildcard_matcher_t>>	__not_<_Pp>
__and_<is_convertible<wildcard_matcher_t *, string_matcher_t *>, __not_<is_array<wildcard_matcher_t>>>	__and_<_B1, _B2>
is_convertible<pcre2_matcher_t *, string_matcher_t *>	is_convertible<_From, _To>
is_array<pcre2_matcher_t>	is_array<<unnamed>>
__not_<is_array<pcre2_matcher_t>>	__not_<_Pp>
__and_<is_convertible<pcre2_matcher_t *, string_matcher_t *>, __not_<is_array<pcre2_matcher_t>>>	__and_<_B1, _B2>
is_convertible<pointer, string_matcher_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, string_matcher_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, string_matcher_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, string_matcher_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
is_convertible<literal_replacer_t *, string_replacer_t *>	is_convertible<_From, _To>
is_array<literal_replacer_t>	is_array<<unnamed>>
__not_<is_array<literal_replacer_t>>	__not_<_Pp>
__and_<is_convertible<literal_replacer_t *, string_replacer_t *>, __not_<is_array<literal_replacer_t>>>	__and_<_B1, _B2>
is_convertible<regex_replacer_t *, string_replacer_t *>	is_convertible<_From, _To>
is_array<regex_replacer_t>	is_array<<unnamed>>
__not_<is_array<regex_replacer_t>>	__not_<_Pp>
__and_<is_convertible<regex_replacer_t *, string_replacer_t *>, __not_<is_array<regex_replacer_t>>>	__and_<_B1, _B2>
is_convertible<pointer, string_replacer_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, string_replacer_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, string_replacer_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, string_replacer_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
_Temporary_value	_Temporary_value
reverse_iterator<__normal_iterator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> *, vector<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>>	reverse_iterator<_Iterator>
__normal_iterator<const vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> *, vector<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> *, vector<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>>	reverse_iterator<_Iterator>
__alloc_traits<allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	__alloc_traits<_Alloc, <unnamed>>
rebind<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	rebind<_Tp>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
is_default_constructible<_Mod_range_hashing>	is_default_constructible<_Tp>
__or_<__not_<integral_constant<bool, false>>, is_default_constructible<_Mod_range_hashing>>	__or_<_B1, _B2>
allocator<_Hash_node<pair<const char, ..(..)>, false>>	allocator<_Tp>
_ReuseOrAllocNode<allocator<_Hash_node<pair<const char, ..(..)>, false>>>	_ReuseOrAllocNode<_NodeAlloc>
_Equality<char, pair<const char, ..(..)>, allocator<pair<const char, ..(..)>>, _Select1st, equal_to<char>, hash<char>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<false, false, true>, true>	_Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
_Rehash_base<char, pair<const char, ..(..)>, allocator<pair<const char, ..(..)>>, _Select1st, equal_to<char>, hash<char>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<false, false, true>, integral_constant<bool, true>>	_Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true_type>
conditional<true, pair<_Node_iterator<pair<const char, ..(..)>, false, false>, bool>, _Node_iterator<pair<const char, ..(..)>, false, false>>	conditional<_Cond, _Iftrue, _Iffalse>
_Hashtable_alloc<allocator<_Hash_node<pair<const char, ..(..)>, false>>>	_Hashtable_alloc<_NodeAlloc>
__alloc_traits<allocator<_Hash_node<pair<const char, ..(..)>, false>>, _Hash_node<pair<const char, ..(..)>, false>>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<_Hash_node<pair<const char, ..(..)>, false>>>	allocator_traits<allocator<_Tp>>
rebind<_Hash_node<pair<const char, ..(..)>, false>>	rebind<_Tp1>
__rebind<allocator<pair<const char, ..(..)>>, _Hash_node<pair<const char, ..(..)>, false>, void>	__rebind<_Tp, _Up, __void_t<other>>
_AllocNode<allocator<_Hash_node<pair<const char, ..(..)>, false>>>	_AllocNode<_NodeAlloc>
__is_empty_non_tuple<default_delete<string_matcher_t>>	__is_empty_non_tuple<_Tp>
is_empty<default_delete<string_matcher_t>>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<string_matcher_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<string_matcher_t *>	__is_empty_non_tuple<_Tp>
is_empty<string_matcher_t *>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<string_matcher_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<pcre2_matcher_t>>	__is_empty_non_tuple<_Tp>
is_empty<default_delete<pcre2_matcher_t>>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<pcre2_matcher_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<pcre2_matcher_t *>	__is_empty_non_tuple<_Tp>
is_empty<pcre2_matcher_t *>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<pcre2_matcher_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<wildcard_matcher_t>>	__is_empty_non_tuple<_Tp>
is_empty<default_delete<wildcard_matcher_t>>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<wildcard_matcher_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<wildcard_matcher_t *>	__is_empty_non_tuple<_Tp>
is_empty<wildcard_matcher_t *>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<wildcard_matcher_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<string_replacer_t>>	__is_empty_non_tuple<_Tp>
is_empty<default_delete<string_replacer_t>>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<string_replacer_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<string_replacer_t *>	__is_empty_non_tuple<_Tp>
is_empty<string_replacer_t *>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<string_replacer_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<regex_replacer_t>>	__is_empty_non_tuple<_Tp>
is_empty<default_delete<regex_replacer_t>>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<regex_replacer_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<regex_replacer_t *>	__is_empty_non_tuple<_Tp>
is_empty<regex_replacer_t *>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<regex_replacer_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<literal_replacer_t>>	__is_empty_non_tuple<_Tp>
is_empty<default_delete<literal_replacer_t>>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<literal_replacer_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<literal_replacer_t *>	__is_empty_non_tuple<_Tp>
is_empty<literal_replacer_t *>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<literal_replacer_t *>>	conditional<false, _Iftrue, _Iffalse>
new_allocator<pair<const char, ..(..)>>	new_allocator<_Tp>
new_allocator<_Hash_node<pair<const char, ..(..)>, false>>	new_allocator<_Tp>
__rebind<allocator<_Hash_node<pair<const char, ..(..)>, false>>, _Hash_node_base *, void>	__rebind<_Tp, _Up, __void_t<other>>
rebind<_Hash_node_base *>	rebind<_Tp1>
tuple<string_matcher_t *, default_delete<string_matcher_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<string_matcher_t *, default_delete<string_matcher_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<string_matcher_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<string_matcher_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<pcre2_matcher_t *, default_delete<pcre2_matcher_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<pcre2_matcher_t *, default_delete<pcre2_matcher_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<pcre2_matcher_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<pcre2_matcher_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<wildcard_matcher_t *, default_delete<wildcard_matcher_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<wildcard_matcher_t *, default_delete<wildcard_matcher_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<wildcard_matcher_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<wildcard_matcher_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<string_replacer_t *, default_delete<string_replacer_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<string_replacer_t *, default_delete<string_replacer_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<string_replacer_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<string_replacer_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<regex_replacer_t *, default_delete<regex_replacer_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<regex_replacer_t *, default_delete<regex_replacer_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<regex_replacer_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<regex_replacer_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<literal_replacer_t *, default_delete<literal_replacer_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<literal_replacer_t *, default_delete<literal_replacer_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<literal_replacer_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<literal_replacer_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
__invoke_result<const hash<char> &, const char &>	__invoke_result<_Functor, _ArgTypes...>
__call_is_nothrow<__invoke_result<const hash<char> &, const char &>, const hash<char> &, const char &>	__call_is_nothrow<_Result, _Fn, _Args...>
remove_cv<string_matcher_t *>	remove_cv<_Tp>
remove_const<string_matcher_t *>	remove_const<_Tp>
remove_cv<string_replacer_t *>	remove_cv<_Tp>
remove_const<string_replacer_t *>	remove_const<_Tp>
remove_cv<wchar_t>	remove_cv<_Tp>
remove_const<wchar_t>	remove_const<_Tp>
__normal_iterator<const int *, vector<int, allocator<int>>>	__normal_iterator<_Iterator, _Container>
remove_reference<string_matcher_t *&>	remove_reference<_Tp &>
remove_reference<io_streams_t &>	remove_reference<_Tp &>
remove_reference<default_delete<wildcard_matcher_t>>	remove_reference<_Tp>
remove_reference<default_delete<pcre2_matcher_t>>	remove_reference<_Tp>
remove_reference<string_replacer_t *&>	remove_reference<_Tp &>
remove_reference<default_delete<literal_replacer_t>>	remove_reference<_Tp>
remove_reference<default_delete<regex_replacer_t>>	remove_reference<_Tp>
__iterator_traits<reverse_iterator<__normal_iterator<const wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
tuple_element<0UL, pair<const char, ..(..)>>	tuple_element<0UL, pair<_Tp1, _Tp2>>
remove_reference<const pair<const char, ..(..)> &>	remove_reference<_Tp &>
_Hash_node_value_base<pair<const char, ..(..)>>	_Hash_node_value_base<_Value>
initializer_list<pair<const char, ..(..)>>	initializer_list<_E>
remove_reference<pair<const char, ..(..)> &>	remove_reference<_Tp &>
__aligned_buffer<pair<const char, ..(..)>>	__aligned_buffer<_Tp>
__result_of_impl<false, false, const hash<char> &, const char &>	__result_of_impl<false, false, _Functor, _ArgTypes...>
_TC<value, literal_replacer_t *, default_delete<literal_replacer_t>>	_TC<<unnamed>, _Elements...>
_TC<true, literal_replacer_t *, default_delete<literal_replacer_t>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, literal_replacer_t *, default_delete<literal_replacer_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_TC<value, regex_replacer_t *, default_delete<regex_replacer_t>>	_TC<<unnamed>, _Elements...>
_TC<true, regex_replacer_t *, default_delete<regex_replacer_t>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, regex_replacer_t *, default_delete<regex_replacer_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_TC<value, string_replacer_t *, default_delete<string_replacer_t>>	_TC<<unnamed>, _Elements...>
_TC<true, string_replacer_t *, default_delete<string_replacer_t>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, string_replacer_t *, default_delete<string_replacer_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_TC<value, wildcard_matcher_t *, default_delete<wildcard_matcher_t>>	_TC<<unnamed>, _Elements...>
_TC<true, wildcard_matcher_t *, default_delete<wildcard_matcher_t>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, wildcard_matcher_t *, default_delete<wildcard_matcher_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_TC<value, pcre2_matcher_t *, default_delete<pcre2_matcher_t>>	_TC<<unnamed>, _Elements...>
_TC<true, pcre2_matcher_t *, default_delete<pcre2_matcher_t>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, pcre2_matcher_t *, default_delete<pcre2_matcher_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_TC<value, string_matcher_t *, default_delete<string_matcher_t>>	_TC<<unnamed>, _Elements...>
_TC<true, string_matcher_t *, default_delete<string_matcher_t>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, string_matcher_t *, default_delete<string_matcher_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
conditional<true, __is_nothrow_invocable<const hash<char> &, const char &>, __is_fast_hash<hash<char>>>	conditional<_Cond, _Iftrue, _Iffalse>
is_same<_Hash_node<pair<const char, ..(..)>, false> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const char, ..(..)>, false> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Hash_node<pair<const char, ..(..)>, false> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const char, ..(..)>, false> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Hash_node<pair<const char, ..(..)>, false> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const char, ..(..)>, false> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
conditional<true, __not_<integral_constant<bool, false>>, is_default_constructible<_Mod_range_hashing>>	conditional<_Cond, _Iftrue, _Iffalse>
_Hashtable_ebo_helper<0, allocator<_Hash_node<pair<const char, ..(..)>, false>>, true>	_Hashtable_ebo_helper<_Nm, _Tp, true>
enable_if<value, void>	enable_if<<unnamed>, _Tp>
is_constructible<pair<const char, ..(..)>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const char, ..(..)>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const char, ..(..)>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const char, ..(..)>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const char, ..(..)>, _Pair &&>	is_constructible<_Tp, _Args...>
_Equal_helper<char, pair<const char, ..(..)>, _Select1st, equal_to<char>, unsigned long, false>	_Equal_helper<_Key, _Value, _ExtractKey, _Equal, _HashCodeType, false>
_Hashtable_ebo_helper<0, equal_to<char>, true>	_Hashtable_ebo_helper<_Nm, _Tp, true>
iterator_traits<const int *>	iterator_traits<const _Tp *>
reverse_iterator<__normal_iterator<const int *, vector<int, allocator<int>>>>	reverse_iterator<_Iterator>
is_same<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
conditional<true, __not_<is_array<regex_replacer_t>>, is_convertible<regex_replacer_t *, string_replacer_t *>>	conditional<_Cond, _Iftrue, _Iffalse>
conditional<true, __not_<is_array<literal_replacer_t>>, is_convertible<literal_replacer_t *, string_replacer_t *>>	conditional<_Cond, _Iftrue, _Iffalse>
conditional<true, __not_<is_array<pcre2_matcher_t>>, is_convertible<pcre2_matcher_t *, string_matcher_t *>>	conditional<_Cond, _Iftrue, _Iffalse>
conditional<true, __not_<is_array<wildcard_matcher_t>>, is_convertible<wildcard_matcher_t *, string_matcher_t *>>	conditional<_Cond, _Iftrue, _Iffalse>
conditional<false, const pair<const char, ..(..)> &, pair<const char, ..(..)> &>	conditional<false, _Iftrue, _Iffalse>
conditional<false, const pair<const char, ..(..)> *, pair<const char, ..(..)> *>	conditional<false, _Iftrue, _Iffalse>
_Hashtable_ebo_helper<1, hash<char>, true>	_Hashtable_ebo_helper<_Nm, _Tp, true>
binary_function<char, char, bool>	binary_function<_Arg1, _Arg2, _Result>
_PCC<<expression>, const char, ..(..)>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, const char, ..(..)>	_PCC<<unnamed>, _T1, _T2>
__pair_base<const char, ..(..)>	__pair_base<_U1, _U2>
remove_reference<reverse_iterator<__normal_iterator<const wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> &>	remove_reference<_Tp &>
remove_reference<__normal_iterator<const wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> &>	remove_reference<_Tp &>
is_same<const char, _U1>	is_same<<unnamed>, <unnamed>>
is_same<..(..), _U2>	is_same<<unnamed>, <unnamed>>
pair<_Node_const_iterator<pair<const char, ..(..)>, false, false>, _Node_const_iterator<pair<const char, ..(..)>, false, false>>	pair<_T1, _T2>
pair<_Node_iterator<pair<const char, ..(..)>, false, false>, _Node_iterator<pair<const char, ..(..)>, false, false>>	pair<_T1, _T2>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
__is_convertible_helper<wildcard_matcher_t *, string_matcher_t *, false>	__is_convertible_helper<_From, _To, false>
__is_convertible_helper<pcre2_matcher_t *, string_matcher_t *, false>	__is_convertible_helper<_From, _To, false>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
__is_convertible_helper<literal_replacer_t *, string_replacer_t *, false>	__is_convertible_helper<_From, _To, false>
__is_convertible_helper<regex_replacer_t *, string_replacer_t *, false>	__is_convertible_helper<_From, _To, false>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
is_member_object_pointer<const hash<char>>	is_member_object_pointer<_Tp>
is_member_function_pointer<const hash<char>>	is_member_function_pointer<_Tp>
_Head_base<0UL, string_matcher_t *, false>	_Head_base<_Idx, _Head, false>
_Tuple_impl<1UL, default_delete<string_matcher_t>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<1UL, default_delete<literal_replacer_t>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<1UL, default_delete<regex_replacer_t>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<1UL, default_delete<string_replacer_t>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<1UL, default_delete<wildcard_matcher_t>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<1UL, default_delete<pcre2_matcher_t>>	_Tuple_impl<_Idx, _Head>
_Head_base<1UL, default_delete<string_matcher_t>, true>	_Head_base<_Idx, _Head, true>
_Head_base<0UL, pcre2_matcher_t *, false>	_Head_base<_Idx, _Head, false>
_Head_base<1UL, default_delete<pcre2_matcher_t>, true>	_Head_base<_Idx, _Head, true>
_Head_base<0UL, wildcard_matcher_t *, false>	_Head_base<_Idx, _Head, false>
_Head_base<1UL, default_delete<wildcard_matcher_t>, true>	_Head_base<_Idx, _Head, true>
_Head_base<0UL, string_replacer_t *, false>	_Head_base<_Idx, _Head, false>
_Head_base<1UL, default_delete<string_replacer_t>, true>	_Head_base<_Idx, _Head, true>
_Head_base<0UL, regex_replacer_t *, false>	_Head_base<_Idx, _Head, false>
_Head_base<1UL, default_delete<regex_replacer_t>, true>	_Head_base<_Idx, _Head, true>
_Head_base<0UL, literal_replacer_t *, false>	_Head_base<_Idx, _Head, false>
_Head_base<1UL, default_delete<literal_replacer_t>, true>	_Head_base<_Idx, _Head, true>
aligned_storage<1UL, 1UL>	aligned_storage<_Len, _Align>
type	type
__iterator_traits<__normal_iterator<const int *, vector<int, allocator<int>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
move_iterator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> *>	move_iterator<_Iterator>
__is_move_insertable<allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	is_move_constructible<_Tp>
__is_move_constructible_impl<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> &&>	is_constructible<_Tp, _Args...>
_Iter_equals_iter<__normal_iterator<const wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	_Iter_equals_iter<_Iterator1>
_Iter_equals_iter<reverse_iterator<__normal_iterator<const wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	_Iter_equals_iter<_Iterator1>
__is_move_iterator<__normal_iterator<const int *, vector<int, allocator<int>>>>	__is_move_iterator<_Tp>
__is_referenceable<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	__is_referenceable<_Tp>
conditional<true, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> &&, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> &>	conditional<_Cond, _Iftrue, _Iffalse>
struct <unnamed>	struct <unnamed>
is_void<regex_replacer_t *>	is_void<_Tp>
is_function<string_replacer_t *>	is_function<<unnamed>>
is_array<string_replacer_t *>	is_array<<unnamed>>
__or_<is_void<regex_replacer_t *>, is_function<string_replacer_t *>, is_array<string_replacer_t *>>	__or_<_B1, _B2, _B3, _Bn...>
is_void<literal_replacer_t *>	is_void<_Tp>
__or_<is_void<literal_replacer_t *>, is_function<string_replacer_t *>, is_array<string_replacer_t *>>	__or_<_B1, _B2, _B3, _Bn...>
is_void<pcre2_matcher_t *>	is_void<_Tp>
is_function<string_matcher_t *>	is_function<<unnamed>>
is_array<string_matcher_t *>	is_array<<unnamed>>
__or_<is_void<pcre2_matcher_t *>, is_function<string_matcher_t *>, is_array<string_matcher_t *>>	__or_<_B1, _B2, _B3, _Bn...>
is_void<wildcard_matcher_t *>	is_void<_Tp>
__or_<is_void<wildcard_matcher_t *>, is_function<string_matcher_t *>, is_array<string_matcher_t *>>	__or_<_B1, _B2, _B3, _Bn...>
is_same<..(..), _U2>	is_same<<unnamed>, <unnamed>>
is_same<const char, _U1>	is_same<<unnamed>, <unnamed>>
is_same<..(..), _U2>	is_same<<unnamed>, <unnamed>>
is_same<const char, _U1>	is_same<<unnamed>, <unnamed>>
is_same<..(..), _U2>	is_same<<unnamed>, <unnamed>>
is_same<const char, _U1>	is_same<<unnamed>, <unnamed>>
is_same<..(..), _U2>	is_same<<unnamed>, <unnamed>>
is_same<const char, _U1>	is_same<<unnamed>, <unnamed>>
__is_pointer<const int *>	__is_pointer<_Tp *>
__or_<is_function<string_matcher_t *>, is_array<string_matcher_t *>>	__or_<_B1, _B2>
conditional<false, is_void<wildcard_matcher_t *>, __or_<is_function<string_matcher_t *>, is_array<string_matcher_t *>>>	conditional<false, _Iftrue, _Iffalse>
conditional<false, is_void<pcre2_matcher_t *>, __or_<is_function<string_matcher_t *>, is_array<string_matcher_t *>>>	conditional<false, _Iftrue, _Iffalse>
__or_<is_function<string_replacer_t *>, is_array<string_replacer_t *>>	__or_<_B1, _B2>
conditional<false, is_void<literal_replacer_t *>, __or_<is_function<string_replacer_t *>, is_array<string_replacer_t *>>>	conditional<false, _Iftrue, _Iffalse>
conditional<false, is_void<regex_replacer_t *>, __or_<is_function<string_replacer_t *>, is_array<string_replacer_t *>>>	conditional<false, _Iftrue, _Iffalse>
is_reference<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> &>	is_reference<_Tp>
__iterator_traits<move_iterator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> &, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> &&>	is_assignable<_Tp, _Up>
conditional<false, is_move_assignable<int>, is_copy_assignable<int>>	conditional<false, _Iftrue, _Iffalse>
__is_integer<reverse_iterator<__normal_iterator<const wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	__is_integer<_Tp>
conditional<false, is_function<string_matcher_t *>, is_array<string_matcher_t *>>	conditional<false, _Iftrue, _Iffalse>
conditional<false, is_function<string_replacer_t *>, is_array<string_replacer_t *>>	conditional<false, _Iftrue, _Iffalse>
_Vector_base<token_t, allocator<token_t>>	_Vector_base<_Tp, _Alloc>
vector<token_t, allocator<token_t>>	vector<_Tp, _Alloc>
default_delete<expression>	default_delete<_Tp>
unique_ptr<expression, default_delete<expression>>	unique_ptr<_Tp, _Dp>
allocator<unique_ptr<expression, default_delete<expression>>>	allocator<_Tp>
_Vector_base<unique_ptr<expression, default_delete<expression>>, allocator<unique_ptr<expression, default_delete<expression>>>>	_Vector_base<_Tp, _Alloc>
vector<unique_ptr<expression, default_delete<expression>>, allocator<unique_ptr<expression, default_delete<expression>>>>	vector<_Tp, _Alloc>
pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>	pair<_T1, _T2>
_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>>	_Rb_tree_iterator<_Tp>
_Rb_tree_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>>	_Rb_tree_const_iterator<_Tp>
_Select1st<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>>	_Select1st<_Pair>
allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>>	allocator<_Tp>
_Rb_tree<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>, _Select1st<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>>, less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>>>	_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>
map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t, less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>>>	map<_Key, _Tp, _Compare, _Alloc>
__uniq_ptr_impl<expression, default_delete<expression>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<expression, default_delete<expression>, void>	_Ptr<_Up, _Ep, <unnamed>>
initializer_list<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>>	initializer_list<_E>
remove_reference<unique_ptr<expression, default_delete<expression>> &>	remove_reference<_Tp &>
allocator_traits<allocator<unique_ptr<expression, default_delete<expression>>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<unique_ptr<expression, default_delete<expression>>>, unique_ptr<expression, default_delete<expression>>>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<token_t>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<token_t>, token_t>	__alloc_traits<_Alloc, <unnamed>>
remove_reference<vector<unique_ptr<expression, default_delete<expression>>, allocator<unique_ptr<expression, default_delete<expression>>>> &>	remove_reference<_Tp &>
remove_reference<vector<token_t, allocator<token_t>> &>	remove_reference<_Tp &>
default_delete<unary_primary>	default_delete<_Tp>
unique_ptr<unary_primary, default_delete<unary_primary>>	unique_ptr<_Tp, _Dp>
default_delete<binary_primary>	default_delete<_Tp>
unique_ptr<binary_primary, default_delete<binary_primary>>	unique_ptr<_Tp, _Dp>
default_delete<parenthetical_expression>	default_delete<_Tp>
unique_ptr<parenthetical_expression, default_delete<parenthetical_expression>>	unique_ptr<_Tp, _Dp>
default_delete<unary_operator>	default_delete<_Tp>
unique_ptr<unary_operator, default_delete<unary_operator>>	unique_ptr<_Tp, _Dp>
default_delete<combining_expression>	default_delete<_Tp>
unique_ptr<combining_expression, default_delete<combining_expression>>	unique_ptr<_Tp, _Dp>
enable_if<true, unique_ptr<expression, default_delete<expression>> &>	enable_if<true, _Tp>
initializer_list<token_t>	initializer_list<_E>
is_convertible<pointer, combining_expression *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, combining_expression *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, combining_expression *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, combining_expression *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__uniq_ptr_impl<combining_expression, default_delete<combining_expression>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<combining_expression, default_delete<combining_expression>, void>	_Ptr<_Up, _Ep, <unnamed>>
is_convertible<pointer, unary_operator *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, unary_operator *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, unary_operator *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, unary_operator *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__uniq_ptr_impl<unary_operator, default_delete<unary_operator>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<unary_operator, default_delete<unary_operator>, void>	_Ptr<_Up, _Ep, <unnamed>>
is_convertible<pointer, parenthetical_expression *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, parenthetical_expression *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, parenthetical_expression *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, parenthetical_expression *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__uniq_ptr_impl<parenthetical_expression, default_delete<parenthetical_expression>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<parenthetical_expression, default_delete<parenthetical_expression>, void>	_Ptr<_Up, _Ep, <unnamed>>
is_convertible<pointer, binary_primary *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, binary_primary *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, binary_primary *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, binary_primary *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__uniq_ptr_impl<binary_primary, default_delete<binary_primary>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<binary_primary, default_delete<binary_primary>, void>	_Ptr<_Up, _Ep, <unnamed>>
is_convertible<pointer, unary_primary *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, unary_primary *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, unary_primary *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, unary_primary *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__uniq_ptr_impl<unary_primary, default_delete<unary_primary>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<unary_primary, default_delete<unary_primary>, void>	_Ptr<_Up, _Ep, <unnamed>>
is_same<token_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<token_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<token_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<token_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<token_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<token_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unique_ptr<expression, default_delete<expression>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unique_ptr<expression, default_delete<expression>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unique_ptr<expression, default_delete<expression>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unique_ptr<expression, default_delete<expression>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unique_ptr<expression, default_delete<expression>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unique_ptr<expression, default_delete<expression>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
_PCC<<expression>, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>	_PCC<<unnamed>, _T1, _T2>
__pair_base<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>	__pair_base<_U1, _U2>
reverse_iterator<_Rb_tree_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>>>	reverse_iterator<_Iterator>
reverse_iterator<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>>>	reverse_iterator<_Iterator>
allocator_traits<allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>>	__alloc_traits<_Alloc, <unnamed>>
rebind<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>>	rebind<_Tp>
pair<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>>, bool>	pair<_T1, _T2>
_Temporary_value	_Temporary_value
__normal_iterator<token_t *, vector<token_t, allocator<token_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<token_t *, vector<token_t, allocator<token_t>>>>	reverse_iterator<_Iterator>
__normal_iterator<const token_t *, vector<token_t, allocator<token_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const token_t *, vector<token_t, allocator<token_t>>>>	reverse_iterator<_Iterator>
rebind<token_t>	rebind<_Tp>
_Temporary_value	_Temporary_value
__normal_iterator<unique_ptr<expression, default_delete<expression>> *, vector<unique_ptr<expression, default_delete<expression>>, allocator<unique_ptr<expression, default_delete<expression>>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<unique_ptr<expression, default_delete<expression>> *, vector<unique_ptr<expression, default_delete<expression>>, allocator<unique_ptr<expression, default_delete<expression>>>>>>	reverse_iterator<_Iterator>
__normal_iterator<const unique_ptr<expression, default_delete<expression>> *, vector<unique_ptr<expression, default_delete<expression>>, allocator<unique_ptr<expression, default_delete<expression>>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const unique_ptr<expression, default_delete<expression>> *, vector<unique_ptr<expression, default_delete<expression>>, allocator<unique_ptr<expression, default_delete<expression>>>>>>	reverse_iterator<_Iterator>
rebind<unique_ptr<expression, default_delete<expression>>>	rebind<_Tp>
is_convertible<unary_operator *, expression *>	is_convertible<_From, _To>
is_array<unary_operator>	is_array<<unnamed>>
__not_<is_array<unary_operator>>	__not_<_Pp>
__and_<is_convertible<unary_operator *, expression *>, __not_<is_array<unary_operator>>>	__and_<_B1, _B2>
is_convertible<combining_expression *, expression *>	is_convertible<_From, _To>
is_array<combining_expression>	is_array<<unnamed>>
__not_<is_array<combining_expression>>	__not_<_Pp>
__and_<is_convertible<combining_expression *, expression *>, __not_<is_array<combining_expression>>>	__and_<_B1, _B2>
is_convertible<pointer, expression *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, expression *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, expression *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, expression *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>>	is_same<_Tp, _Tp>
is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>, value_type>	is_same<<unnamed>, <unnamed>>
_Alloc_node	_Alloc_node
_Reuse_or_alloc_node	_Reuse_or_alloc_node
_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>>	_Rb_tree_node<_Val>
allocator<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>>>	allocator<_Tp>
__alloc_traits<allocator<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>>>, _Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>>>	__alloc_traits<_Alloc, <unnamed>>
rebind<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>>>	rebind<_Tp>
_Rb_tree_impl<less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>	_Rb_tree_impl<_Key_compare, <unnamed>>
__is_empty_non_tuple<default_delete<expression>>	__is_empty_non_tuple<_Tp>
is_empty<default_delete<expression>>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<expression>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<expression *>	__is_empty_non_tuple<_Tp>
is_empty<expression *>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<expression *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<unary_operator>>	__is_empty_non_tuple<_Tp>
is_empty<default_delete<unary_operator>>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<unary_operator>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<unary_operator *>	__is_empty_non_tuple<_Tp>
is_empty<unary_operator *>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<unary_operator *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<combining_expression>>	__is_empty_non_tuple<_Tp>
is_empty<default_delete<combining_expression>>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<combining_expression>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<combining_expression *>	__is_empty_non_tuple<_Tp>
is_empty<combining_expression *>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<combining_expression *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<unary_primary>>	__is_empty_non_tuple<_Tp>
is_empty<default_delete<unary_primary>>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<unary_primary>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<unary_primary *>	__is_empty_non_tuple<_Tp>
is_empty<unary_primary *>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<unary_primary *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<binary_primary>>	__is_empty_non_tuple<_Tp>
is_empty<default_delete<binary_primary>>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<binary_primary>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<binary_primary *>	__is_empty_non_tuple<_Tp>
is_empty<binary_primary *>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<binary_primary *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<parenthetical_expression>>	__is_empty_non_tuple<_Tp>
is_empty<default_delete<parenthetical_expression>>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<parenthetical_expression>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<parenthetical_expression *>	__is_empty_non_tuple<_Tp>
is_empty<parenthetical_expression *>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<parenthetical_expression *>>	conditional<false, _Iftrue, _Iffalse>
tuple<expression *, default_delete<expression>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<expression *, default_delete<expression>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<expression>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<expression>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<unary_operator *, default_delete<unary_operator>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<unary_operator *, default_delete<unary_operator>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<unary_operator>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<unary_operator>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<combining_expression *, default_delete<combining_expression>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<combining_expression *, default_delete<combining_expression>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<combining_expression>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<combining_expression>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<unary_primary *, default_delete<unary_primary>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<unary_primary *, default_delete<unary_primary>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<unary_primary>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<unary_primary>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<binary_primary *, default_delete<binary_primary>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<binary_primary *, default_delete<binary_primary>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<binary_primary>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<binary_primary>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<parenthetical_expression *, default_delete<parenthetical_expression>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<parenthetical_expression *, default_delete<parenthetical_expression>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<parenthetical_expression>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<parenthetical_expression>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
allocator_traits<allocator<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>>>>	allocator_traits<allocator<_Tp>>
new_allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>>	new_allocator<_Tp>
new_allocator<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>>>	new_allocator<_Tp>
new_allocator<unique_ptr<expression, default_delete<expression>>>	new_allocator<_Tp>
new_allocator<token_t>	new_allocator<_Tp>
remove_cv<expression *>	remove_cv<_Tp>
remove_const<expression *>	remove_const<_Tp>
enable_if<true, token_t *>	enable_if<true, _Tp>
remove_reference<const token_t &>	remove_reference<_Tp &>
remove_reference<range_t>	remove_reference<_Tp>
remove_reference<vector<unique_ptr<expression, default_delete<expression>>, allocator<unique_ptr<expression, default_delete<expression>>>>>	remove_reference<_Tp>
remove_reference<vector<token_t, allocator<token_t>>>	remove_reference<_Tp>
remove_reference<default_delete<combining_expression>>	remove_reference<_Tp>
remove_reference<default_delete<unary_operator>>	remove_reference<_Tp>
remove_reference<token_t>	remove_reference<_Tp>
remove_reference<token_t &>	remove_reference<_Tp &>
remove_reference<unique_ptr<expression, default_delete<expression>>>	remove_reference<_Tp>
remove_reference<default_delete<expression>>	remove_reference<_Tp>
remove_reference<default_delete<parenthetical_expression>>	remove_reference<_Tp>
remove_reference<default_delete<binary_primary>>	remove_reference<_Tp>
remove_reference<default_delete<unary_primary>>	remove_reference<_Tp>
remove_reference<expression *&>	remove_reference<_Tp &>
remove_reference<const wchar_t(&)[4]>	remove_reference<_Tp &>
remove_reference<const wchar_t(&)[3]>	remove_reference<_Tp &>
remove_reference<const wchar_t(&)[2]>	remove_reference<_Tp &>
remove_reference<const wchar_t(&)[1]>	remove_reference<_Tp &>
move_iterator<token_t *>	move_iterator<_Iterator>
conditional<true, token_t &&, token_t &>	conditional<_Cond, _Iftrue, _Iffalse>
iterator_traits<token_t *>	iterator_traits<_Tp *>
_TC<value, parenthetical_expression *, default_delete<parenthetical_expression>>	_TC<<unnamed>, _Elements...>
_TC<true, parenthetical_expression *, default_delete<parenthetical_expression>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, parenthetical_expression *, default_delete<parenthetical_expression>>	_Tuple_impl<_Idx, _Head, _Tail...>
_TC<value, binary_primary *, default_delete<binary_primary>>	_TC<<unnamed>, _Elements...>
_TC<true, binary_primary *, default_delete<binary_primary>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, binary_primary *, default_delete<binary_primary>>	_Tuple_impl<_Idx, _Head, _Tail...>
_TC<value, unary_primary *, default_delete<unary_primary>>	_TC<<unnamed>, _Elements...>
_TC<true, unary_primary *, default_delete<unary_primary>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, unary_primary *, default_delete<unary_primary>>	_Tuple_impl<_Idx, _Head, _Tail...>
_TC<value, combining_expression *, default_delete<combining_expression>>	_TC<<unnamed>, _Elements...>
_TC<true, combining_expression *, default_delete<combining_expression>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, combining_expression *, default_delete<combining_expression>>	_Tuple_impl<_Idx, _Head, _Tail...>
_TC<value, unary_operator *, default_delete<unary_operator>>	_TC<<unnamed>, _Elements...>
_TC<true, unary_operator *, default_delete<unary_operator>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, unary_operator *, default_delete<unary_operator>>	_Tuple_impl<_Idx, _Head, _Tail...>
_TC<value, expression *, default_delete<expression>>	_TC<<unnamed>, _Elements...>
_TC<true, expression *, default_delete<expression>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, expression *, default_delete<expression>>	_Tuple_impl<_Idx, _Head, _Tail...>
is_same<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
__aligned_membuf<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>>	__aligned_membuf<_Tp>
unary_function<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	unary_function<_Arg, _Result>
conditional<true, __not_<is_array<combining_expression>>, is_convertible<combining_expression *, expression *>>	conditional<_Cond, _Iftrue, _Iffalse>
conditional<true, __not_<is_array<unary_operator>>, is_convertible<unary_operator *, expression *>>	conditional<_Cond, _Iftrue, _Iffalse>
iterator_traits<unique_ptr<expression, default_delete<expression>> *>	iterator_traits<_Tp *>
iterator_traits<const unique_ptr<expression, default_delete<expression>> *>	iterator_traits<const _Tp *>
is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<const token_info_t, _U2>	is_same<<unnamed>, <unnamed>>
pair<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>>, _Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>>>	pair<_T1, _T2>
pair<_Rb_tree_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>>, _Rb_tree_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>>>	pair<_T1, _T2>
iterator_traits<const token_t *>	iterator_traits<const _Tp *>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
is_same<const token_info_t, _U2>	is_same<<unnamed>, <unnamed>>
is_same<const token_info_t, _U2>	is_same<<unnamed>, <unnamed>>
is_same<const token_info_t, _U2>	is_same<<unnamed>, <unnamed>>
is_same<const token_info_t, _U2>	is_same<<unnamed>, <unnamed>>
__is_convertible_helper<unary_operator *, expression *, false>	__is_convertible_helper<_From, _To, false>
__is_convertible_helper<combining_expression *, expression *, false>	__is_convertible_helper<_From, _To, false>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Tp2	_Tp2
_Head_base<0UL, expression *, false>	_Head_base<_Idx, _Head, false>
_Tuple_impl<1UL, default_delete<expression>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<1UL, default_delete<parenthetical_expression>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<1UL, default_delete<binary_primary>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<1UL, default_delete<unary_primary>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<1UL, default_delete<combining_expression>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<1UL, default_delete<unary_operator>>	_Tuple_impl<_Idx, _Head>
_Head_base<1UL, default_delete<expression>, true>	_Head_base<_Idx, _Head, true>
_Head_base<0UL, unary_operator *, false>	_Head_base<_Idx, _Head, false>
_Head_base<1UL, default_delete<unary_operator>, true>	_Head_base<_Idx, _Head, true>
_Head_base<0UL, combining_expression *, false>	_Head_base<_Idx, _Head, false>
_Head_base<1UL, default_delete<combining_expression>, true>	_Head_base<_Idx, _Head, true>
_Head_base<0UL, unary_primary *, false>	_Head_base<_Idx, _Head, false>
_Head_base<1UL, default_delete<unary_primary>, true>	_Head_base<_Idx, _Head, true>
_Head_base<0UL, binary_primary *, false>	_Head_base<_Idx, _Head, false>
_Head_base<1UL, default_delete<binary_primary>, true>	_Head_base<_Idx, _Head, true>
_Head_base<0UL, parenthetical_expression *, false>	_Head_base<_Idx, _Head, false>
_Head_base<1UL, default_delete<parenthetical_expression>, true>	_Head_base<_Idx, _Head, true>
is_reference<token_t &>	is_reference<_Tp>
__is_move_insertable<allocator<token_t>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<token_t>	is_move_constructible<_Tp>
__is_move_constructible_impl<token_t, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<token_t, token_t &&>	is_constructible<_Tp, _Args...>
remove_reference<_Vector_impl &>	remove_reference<_Tp &>
remove_reference<_Vector_impl &>	remove_reference<_Tp &>
remove_reference<const pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t> &>	remove_reference<_Tp &>
remove_reference<allocator<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>>> &>	remove_reference<_Tp &>
__is_move_iterator<const token_t *>	__is_move_iterator<_Tp>
__is_move_iterator<move_iterator<token_t *>>	__is_move_iterator<move_iterator<_Iterator>>
is_void<combining_expression *>	is_void<_Tp>
is_function<expression *>	is_function<<unnamed>>
is_array<expression *>	is_array<<unnamed>>
__or_<is_void<combining_expression *>, is_function<expression *>, is_array<expression *>>	__or_<_B1, _B2, _B3, _Bn...>
is_void<unary_operator *>	is_void<_Tp>
__or_<is_void<unary_operator *>, is_function<expression *>, is_array<expression *>>	__or_<_B1, _B2, _B3, _Bn...>
__is_pointer<token_t *>	__is_pointer<_Tp *>
__are_same<token_t, token_t>	__are_same<_Tp, _Tp>
__is_pointer<const token_t *>	__is_pointer<_Tp *>
move_iterator<unique_ptr<expression, default_delete<expression>> *>	move_iterator<_Iterator>
__is_move_insertable<allocator<unique_ptr<expression, default_delete<expression>>>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<unique_ptr<expression, default_delete<expression>>>	is_move_constructible<_Tp>
__is_move_constructible_impl<unique_ptr<expression, default_delete<expression>>, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<unique_ptr<expression, default_delete<expression>>, unique_ptr<expression, default_delete<expression>> &&>	is_constructible<_Tp, _Args...>
is_assignable<token_t &, const token_t &>	is_assignable<_Tp, _Up>
__is_referenceable<unique_ptr<expression, default_delete<expression>>>	__is_referenceable<_Tp>
conditional<true, unique_ptr<expression, default_delete<expression>> &&, unique_ptr<expression, default_delete<expression>> &>	conditional<_Cond, _Iftrue, _Iffalse>
__or_<is_function<expression *>, is_array<expression *>>	__or_<_B1, _B2>
conditional<false, is_void<unary_operator *>, __or_<is_function<expression *>, is_array<expression *>>>	conditional<false, _Iftrue, _Iffalse>
conditional<false, is_void<combining_expression *>, __or_<is_function<expression *>, is_array<expression *>>>	conditional<false, _Iftrue, _Iffalse>
__iterator_traits<move_iterator<token_t *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<token_t &, token_t &&>	is_assignable<_Tp, _Up>
is_move_assignable<token_t>	is_move_assignable<_Tp>
is_copy_assignable<token_t>	is_copy_assignable<_Tp>
conditional<false, is_move_assignable<token_t>, is_copy_assignable<token_t>>	conditional<false, _Iftrue, _Iffalse>
conditional<true, is_move_assignable<token_t>, is_copy_assignable<token_t>>	conditional<_Cond, _Iftrue, _Iffalse>
is_reference<unique_ptr<expression, default_delete<expression>> &>	is_reference<_Tp>
remove_reference<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>> *&>	remove_reference<_Tp &>
__iterator_traits<move_iterator<unique_ptr<expression, default_delete<expression>> *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<unique_ptr<expression, default_delete<expression>> &, unique_ptr<expression, default_delete<expression>> &&>	is_assignable<_Tp, _Up>
conditional<false, is_function<expression *>, is_array<expression *>>	conditional<false, _Iftrue, _Iffalse>
__is_copy_assignable_impl<token_t, true>	__is_copy_assignable_impl<_Tp, true>
__is_move_assignable_impl<token_t, true>	__is_move_assignable_impl<_Tp, true>
__is_referenceable<token_t>	__is_referenceable<_Tp>
_Deque_iterator<shared_ptr<job_t>, const shared_ptr<job_t> &, const shared_ptr<job_t> *>	_Deque_iterator<_Tp, _Ref, _Ptr>
__normal_iterator<unique_ptr<process_t, default_delete<process_t>> *, vector<unique_ptr<process_t, default_delete<process_t>>, allocator<unique_ptr<process_t, default_delete<process_t>>>>>	__normal_iterator<_Iterator, _Container>
iterator_traits<unique_ptr<process_t, default_delete<process_t>> *>	iterator_traits<_Tp *>
pointer_traits<const shared_ptr<job_t> *>	pointer_traits<_Tp *>
conditional<false, __undefined, const shared_ptr<job_t>>	conditional<false, _Iftrue, _Iffalse>
is_void<const shared_ptr<job_t>>	is_void<_Tp>
reverse_iterator<_Deque_iterator<shared_ptr<job_t>, const shared_ptr<job_t> &, const shared_ptr<job_t> *>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<unique_ptr<process_t, default_delete<process_t>> *, vector<unique_ptr<process_t, default_delete<process_t>>, allocator<unique_ptr<process_t, default_delete<process_t>>>>>>	reverse_iterator<_Iterator>
_Iter_equals_val<const int>	_Iter_equals_val<_Value>
allocator<named_color_t>	allocator<_Tp>
_Vector_base<named_color_t, allocator<named_color_t>>	_Vector_base<_Tp, _Alloc>
vector<named_color_t, allocator<named_color_t>>	vector<_Tp, _Alloc>
__normal_iterator<const named_color_t *, vector<named_color_t, allocator<named_color_t>>>	__normal_iterator<_Iterator, _Container>
iterator_traits<const named_color_t *>	iterator_traits<const _Tp *>
initializer_list<named_color_t>	initializer_list<_E>
_Temporary_value	_Temporary_value
__normal_iterator<named_color_t *, vector<named_color_t, allocator<named_color_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<named_color_t *, vector<named_color_t, allocator<named_color_t>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<const named_color_t *, vector<named_color_t, allocator<named_color_t>>>>	reverse_iterator<_Iterator>
allocator_traits<allocator<named_color_t>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<named_color_t>, named_color_t>	__alloc_traits<_Alloc, <unnamed>>
rebind<named_color_t>	rebind<_Tp>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
new_allocator<named_color_t>	new_allocator<_Tp>
_Iter_comp_val<lambda [] type at line 90623, col. 36>	_Iter_comp_val<_Compare>
__normal_iterator<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	reverse_iterator<_Iterator>
is_same<named_color_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<named_color_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<named_color_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<named_color_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<named_color_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<named_color_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
remove_reference<lambda [] type at line 90623, col. 36 &>	remove_reference<_Tp &>
__iterator_traits<__normal_iterator<const named_color_t *, vector<named_color_t, allocator<named_color_t>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
__is_move_iterator<const named_color_t *>	__is_move_iterator<_Tp>
iterator_traits<named_color_t *>	iterator_traits<_Tp *>
__is_pointer<const named_color_t *>	__is_pointer<_Tp *>
__is_pointer<named_color_t *>	__is_pointer<_Tp *>
__are_same<named_color_t, named_color_t>	__are_same<_Tp, _Tp>
is_assignable<named_color_t &, const named_color_t &>	is_assignable<_Tp, _Up>
is_move_assignable<named_color_t>	is_move_assignable<_Tp>
is_copy_assignable<named_color_t>	is_copy_assignable<_Tp>
conditional<false, is_move_assignable<named_color_t>, is_copy_assignable<named_color_t>>	conditional<false, _Iftrue, _Iffalse>
__is_copy_assignable_impl<named_color_t, true>	__is_copy_assignable_impl<_Tp, true>
__is_referenceable<named_color_t>	__is_referenceable<_Tp>
__invoke_result<lambda [] type at line 150586, col. 20>	__invoke_result<_Functor, _ArgTypes...>
__call_is_nothrow<__invoke_result<lambda [] type at line 150586, col. 20>, lambda [] type at line 150586, col. 20>	__call_is_nothrow<_Result, _Fn, _Args...>
enable_if<true, unsigned long *>	enable_if<true, _Tp>
remove_const<char>	remove_const<_Tp>
remove_cv<char>	remove_cv<_Tp>
shared_ptr<impl_t>	shared_ptr<_Tp>
maybe_t<wchar_t>	maybe_t<T>
vector<unsigned long, allocator<unsigned long>>	vector<_Tp, _Alloc>
relaxed_atomic_t<int>	relaxed_atomic_t<T>
relaxed_atomic_t<wchar_t>	relaxed_atomic_t<T>
relaxed_atomic_t<const wchar_t *>	relaxed_atomic_t<T>
atomic<const wchar_t *>	atomic<_Tp *>
_Temporary_value	_Temporary_value
__normal_iterator<unsigned long *, vector<unsigned long, allocator<unsigned long>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<unsigned long *, vector<unsigned long, allocator<unsigned long>>>>	reverse_iterator<_Iterator>
__normal_iterator<const unsigned long *, vector<unsigned long, allocator<unsigned long>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const unsigned long *, vector<unsigned long, allocator<unsigned long>>>>	reverse_iterator<_Iterator>
_Vector_base<unsigned long, allocator<unsigned long>>	_Vector_base<_Tp, _Alloc>
rebind<unsigned long>	rebind<_Tp>
maybe_impl_t<wchar_t>	maybe_impl_t<T>
remove_extent<impl_t>	remove_extent<_Tp>
__shared_ptr<impl_t, _S_atomic>	__shared_ptr<_Tp, _Lp>
weak_ptr<impl_t>	weak_ptr<_Tp>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
remove_reference<unsigned long &>	remove_reference<_Tp &>
remove_reference<lambda [] type at line 150586, col. 20>	remove_reference<_Tp>
_Iter_pred<..(*)(..)>	_Iter_pred<_Predicate>
move_iterator<unsigned long *>	move_iterator<_Iterator>
conditional<true, unsigned long &&, unsigned long &>	conditional<_Cond, _Iftrue, _Iffalse>
__result_of_impl<false, false, lambda [] type at line 150586, col. 20>	__result_of_impl<false, false, _Functor, _ArgTypes...>
__shared_ptr_access<impl_t, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
__weak_ptr<impl_t, _S_atomic>	__weak_ptr<_Tp, _Lp>
iterator_traits<const unsigned long *>	iterator_traits<const _Tp *>
__atomic_base<const wchar_t *>	__atomic_base<_PTp *>
acquired_lock<data_t>	acquired_lock<Data>
remove_reference<..(*&)(..)>	remove_reference<_Tp &>
_Iter_negate<..(*)(..)>	_Iter_negate<_Predicate>
remove_reference<const unsigned long &>	remove_reference<_Tp &>
remove_reference<wchar_t>	remove_reference<_Tp>
is_array<impl_t>	is_array<<unnamed>>
is_void<impl_t>	is_void<_Tp>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
is_member_object_pointer<lambda [] type at line 150586, col. 20>	is_member_object_pointer<_Tp>
is_member_function_pointer<lambda [] type at line 150586, col. 20>	is_member_function_pointer<_Tp>
is_reference<unsigned long &>	is_reference<_Tp>
__is_move_insertable<allocator<unsigned long>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<unsigned long>	is_move_constructible<_Tp>
__is_move_constructible_impl<unsigned long, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<unsigned long, unsigned long &&>	is_constructible<_Tp, _Args...>
__is_move_iterator<move_iterator<unsigned long *>>	__is_move_iterator<move_iterator<_Iterator>>
remove_reference<char &>	remove_reference<_Tp &>
__iterator_traits<move_iterator<unsigned long *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
conditional<true, is_move_assignable<unsigned long>, is_copy_assignable<unsigned long>>	conditional<_Cond, _Iftrue, _Iffalse>
is_move_assignable<_Tp>	is_move_assignable<_Tp>
is_copy_assignable<_Tp>	is_copy_assignable<_Tp>
conditional<_IsMove, is_move_assignable<_Tp>, is_copy_assignable<_Tp>>	conditional<_Cond, _Iftrue, _Iffalse>
is_void<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	is_void<_Tp>
is_same<const wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	is_same<<unnamed>, <unnamed>>
is_convertible<const wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	is_convertible<_From, _To>
__or_<is_void<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, is_same<const wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, is_convertible<const wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	__or_<_B1, _B2, _B3, _Bn...>
is_same<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	is_same<_Tp, _Tp>
is_convertible<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	is_convertible<_From, _To>
__or_<is_void<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, is_same<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, is_convertible<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	__or_<_B1, _B2, _B3, _Bn...>
reference_wrapper<const completion_entry_t>	reference_wrapper<_Tp>
allocator<reference_wrapper<const completion_entry_t>>	allocator<_Tp>
_Vector_base<reference_wrapper<const completion_entry_t>, allocator<reference_wrapper<const completion_entry_t>>>	_Vector_base<_Tp, _Alloc>
vector<reference_wrapper<const completion_entry_t>, allocator<reference_wrapper<const completion_entry_t>>>	vector<_Tp, _Alloc>
allocator<complete_entry_opt>	allocator<_Tp>
list<complete_entry_opt, allocator<complete_entry_opt>>	list<_Tp, _Alloc>
allocator<list<complete_entry_opt, allocator<complete_entry_opt>>>	allocator<_Tp>
_Vector_base<list<complete_entry_opt, allocator<complete_entry_opt>>, allocator<list<complete_entry_opt, allocator<complete_entry_opt>>>>	_Vector_base<_Tp, _Alloc>
vector<list<complete_entry_opt, allocator<complete_entry_opt>>, allocator<list<complete_entry_opt, allocator<complete_entry_opt>>>>	vector<_Tp, _Alloc>
allocator<tok_t>	allocator<_Tp>
_Vector_base<tok_t, allocator<tok_t>>	_Vector_base<_Tp, _Alloc>
vector<tok_t, allocator<tok_t>>	vector<_Tp, _Alloc>
__uninitialized_construct_buf_dispatch<<expression>>	__uninitialized_construct_buf_dispatch<<unnamed>>
pair<_Tp *, long>	pair<_T1, _T2>
_Temporary_buffer<_RandomAccessIterator, value_type>	_Temporary_buffer<_ForwardIterator, _Tp>
_Sanitize_val<_Nb, <expression>>	_Sanitize_val<_Nb, <unnamed>>
function<..(..)>	function<..(..)>
_List_const_iterator<complete_entry_opt>	_List_const_iterator<_Tp>
_List_iterator<complete_entry_opt>	_List_iterator<_Tp>
_List_base<complete_entry_opt, allocator<complete_entry_opt>>	_List_base<_Tp, _Alloc>
pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	pair<_T1, _T2>
_Rb_tree_iterator<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	_Rb_tree_iterator<_Tp>
_Rb_tree_const_iterator<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	_Rb_tree_const_iterator<_Tp>
_Identity<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	_Identity<_Tp>
less<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	less<_Tp>
allocator<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	allocator<_Tp>
_Rb_tree<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Identity<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, less<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, allocator<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>
pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	pair<_T1, _T2>
_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	_Rb_tree_iterator<_Tp>
_Select1st<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	_Select1st<_Pair>
allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	allocator<_Tp>
_Rb_tree<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Select1st<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>
pair<iterator, bool>	pair<_T1, _T2>
_Insert_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>>	_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
_Insert<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, false>	_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, false>
_Insert_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>>	_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
_Insert<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, false>	_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, false>
allocator<completion_entry_t>	allocator<_Tp>
_Hashtable_traits<false, true, true>	_Hashtable_traits<_Cache_hash_code, _Constant_iterators, _Unique_keys>
_Insert_base<completion_entry_t, completion_entry_t, allocator<completion_entry_t>, _Identity, equal_to<completion_entry_t>, hash<completion_entry_t>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<false, true, true>>	_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
_Insert<completion_entry_t, completion_entry_t, allocator<completion_entry_t>, _Identity, equal_to<completion_entry_t>, hash<completion_entry_t>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<false, true, true>, true>	_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>	pair<_T1, _T2>
allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>>	allocator<_Tp>
_Insert_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>>	_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
_Insert<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, false>	_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, false>
__is_fast_hash<hash<completion_entry_t>>	__is_fast_hash<_Hash>
__is_nothrow_invocable<const hash<completion_entry_t> &, const completion_entry_t &>	__is_nothrow_invocable<_Fn, _Args...>
__and_<__is_fast_hash<hash<completion_entry_t>>, __is_nothrow_invocable<const hash<completion_entry_t> &, const completion_entry_t &>>	__and_<_B1, _B2>
__not_<__and_<__is_fast_hash<hash<completion_entry_t>>, __is_nothrow_invocable<const hash<completion_entry_t> &, const completion_entry_t &>>>	__not_<_Pp>
_Hash_code_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Select1st, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, true>	_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Default_ranged_hash, true>
_Hashtable<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>>	_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
__hash_code_base_access	__hash_code_base_access
_Hash_code_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _Select1st, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, true>	_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Default_ranged_hash, true>
_Hashtable<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>>	_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
__hash_code_base_access	__hash_code_base_access
_Hash_code_base<completion_entry_t, completion_entry_t, _Identity, hash<completion_entry_t>, _Mod_range_hashing, _Default_ranged_hash, false>	_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Default_ranged_hash, false>
_Hashtable<completion_entry_t, completion_entry_t, allocator<completion_entry_t>, _Identity, equal_to<completion_entry_t>, hash<completion_entry_t>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<false, true, true>>	_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
__hash_code_base_access	__hash_code_base_access
_Hash_code_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, _Select1st, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, true>	_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Default_ranged_hash, true>
_Hashtable<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>>	_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
__hash_code_base_access	__hash_code_base_access
default_delete<autoload_file_cache_t>	default_delete<_Tp>
unique_ptr<autoload_file_cache_t, default_delete<autoload_file_cache_t>>	unique_ptr<_Tp, _Dp>
map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	map<_Key, _Tp, _Compare, _Alloc>
enum_set_t<expand_flag>	enum_set_t<T>
shared_ptr<const function_properties_t>	shared_ptr<_Tp>
unordered_map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
set<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, less<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, allocator<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	set<_Key, _Compare, _Alloc>
function<..(..)>	function<..(..)>
unordered_map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
unordered_set<completion_entry_t, hash<completion_entry_t>, equal_to<completion_entry_t>, allocator<completion_entry_t>>	unordered_set<_Value, _Hash, _Pred, _Alloc>
owning_lock<autoload_t>	owning_lock<Data>
unordered_map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>>>	unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
owning_lock<unordered_map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>>	owning_lock<Data>
owning_lock<unordered_set<completion_entry_t, hash<completion_entry_t>, equal_to<completion_entry_t>, allocator<completion_entry_t>>>	owning_lock<Data>
acquired_lock<unordered_map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>>	acquired_lock<Data>
_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, false, true>	_Node_iterator<_Value, __constant_iterators, __cache>
_Hashtable_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Hashtable_traits<true, false, true>>	_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>
_Node_iterator_base<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, true>	_Node_iterator_base<_Value, _Cache_hash_code>
conditional<false, const pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>> *, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>> *>	conditional<false, _Iftrue, _Iffalse>
tuple_element<1UL, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	tuple_element<1UL, pair<_Tp1, _Tp2>>
_Map_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, true>	_Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
acquired_lock<autoload_t>	acquired_lock<Data>
acquired_lock<unordered_set<completion_entry_t, hash<completion_entry_t>, equal_to<completion_entry_t>, allocator<completion_entry_t>>>	acquired_lock<Data>
_Node_iterator<completion_entry_t, true, false>	_Node_iterator<_Value, __constant_iterators, __cache>
__normal_iterator<reference_wrapper<const completion_entry_t> *, vector<reference_wrapper<const completion_entry_t>, allocator<reference_wrapper<const completion_entry_t>>>>	__normal_iterator<_Iterator, _Container>
__normal_iterator<const reference_wrapper<const completion_entry_t> *, vector<reference_wrapper<const completion_entry_t>, allocator<reference_wrapper<const completion_entry_t>>>>	__normal_iterator<_Iterator, _Container>
_Hashtable_base<completion_entry_t, completion_entry_t, _Identity, equal_to<completion_entry_t>, hash<completion_entry_t>, _Mod_range_hashing, _Default_ranged_hash, _Hashtable_traits<false, true, true>>	_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>
iterator_traits<reference_wrapper<const completion_entry_t> *>	iterator_traits<_Tp *>
conditional<false, const pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>> &, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>> &>	conditional<false, _Iftrue, _Iffalse>
pair<_Rb_tree_const_iterator<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, bool>	pair<_T1, _T2>
_Node_iterator_base<completion_entry_t, false>	_Node_iterator_base<_Value, _Cache_hash_code>
conditional<true, const completion_entry_t &, completion_entry_t &>	conditional<_Cond, _Iftrue, _Iffalse>
pair<_Node_iterator<completion_entry_t, true, false>, bool>	pair<_T1, _T2>
__normal_iterator<const completion_t *, vector<completion_t, allocator<completion_t>>>	__normal_iterator<_Iterator, _Container>
remove_reference<vector<completion_t, allocator<completion_t>> &>	remove_reference<_Tp &>
allocator_traits<allocator<tok_t>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<tok_t>, tok_t>	__alloc_traits<_Alloc, <unnamed>>
__normal_iterator<tok_t *, vector<tok_t, allocator<tok_t>>>	__normal_iterator<_Iterator, _Container>
__normal_iterator<const tok_t *, vector<tok_t, allocator<tok_t>>>	__normal_iterator<_Iterator, _Container>
iterator_traits<tok_t *>	iterator_traits<_Tp *>
iterator_traits<const tok_t *>	iterator_traits<const _Tp *>
iterator_traits<const completion_t *>	iterator_traits<const _Tp *>
_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, false, true>	_Node_iterator<_Value, __constant_iterators, __cache>
_Hashtable_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Hashtable_traits<true, false, true>>	_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>
_Node_iterator_base<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, true>	_Node_iterator_base<_Value, _Cache_hash_code>
tuple_element<1UL, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>>	tuple_element<1UL, pair<_Tp1, _Tp2>>
_Map_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, true>	_Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
conditional<false, const pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool> *, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool> *>	conditional<false, _Iftrue, _Iffalse>
remove_reference<string_fuzzy_match_t &>	remove_reference<_Tp &>
_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, true>	_Node_iterator<_Value, __constant_iterators, __cache>
pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, true>, bool>	pair<_T1, _T2>
enable_if<true, pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, true>, bool>>	enable_if<true, _Tp>
_Hashtable_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Hashtable_traits<true, false, true>>	_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>
_Node_iterator_base<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>	_Node_iterator_base<_Value, _Cache_hash_code>
conditional<false, const pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> *, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> *>	conditional<false, _Iftrue, _Iffalse>
initializer_list<expand_flag>	initializer_list<_E>
__normal_iterator<list<complete_entry_opt, allocator<complete_entry_opt>> *, vector<list<complete_entry_opt, allocator<complete_entry_opt>>, allocator<list<complete_entry_opt, allocator<complete_entry_opt>>>>>	__normal_iterator<_Iterator, _Container>
iterator_traits<list<complete_entry_opt, allocator<complete_entry_opt>> *>	iterator_traits<_Tp *>
_PCC<<expression>, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	_PCC<<unnamed>, _T1, _T2>
__pair_base<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	__pair_base<_U1, _U2>
conditional<false, const pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> &, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> &>	conditional<false, _Iftrue, _Iffalse>
_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>	_Hash_node<_Value, true>
_PCC<<expression>, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>	_PCC<<unnamed>, _T1, _T2>
__pair_base<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>	__pair_base<_U1, _U2>
conditional<false, const pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool> &, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool> &>	conditional<false, _Iftrue, _Iffalse>
_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, true>	_Hash_node<_Value, true>
is_same<tok_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<tok_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<tok_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<tok_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<tok_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<tok_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
_PCC<<expression>, _Node_iterator<completion_entry_t, true, false>, bool>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, _Node_iterator<completion_entry_t, true, false>, bool>	_PCC<<unnamed>, _T1, _T2>
__pair_base<_Node_iterator<completion_entry_t, true, false>, bool>	__pair_base<_U1, _U2>
_Hash_node<completion_entry_t, false>	_Hash_node<_Value, false>
_PCC<<expression>, _Rb_tree_const_iterator<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, bool>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, _Rb_tree_const_iterator<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, bool>	_PCC<<unnamed>, _T1, _T2>
__pair_base<_Rb_tree_const_iterator<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, bool>	__pair_base<_U1, _U2>
conditional<true, const completion_entry_t *, completion_entry_t *>	conditional<_Cond, _Iftrue, _Iffalse>
acquired_lock<const unordered_map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>>	acquired_lock<Data>
acquired_lock<const autoload_t>	acquired_lock<Data>
acquired_lock<const unordered_set<completion_entry_t, hash<completion_entry_t>, equal_to<completion_entry_t>, allocator<completion_entry_t>>>	acquired_lock<Data>
_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, true>	_Hash_node<_Value, true>
_List_node<complete_entry_opt>	_List_node<_Tp>
reverse_iterator<_List_iterator<complete_entry_opt>>	reverse_iterator<_Iterator>
reverse_iterator<_List_const_iterator<complete_entry_opt>>	reverse_iterator<_Iterator>
allocator_traits<allocator<complete_entry_opt>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<complete_entry_opt>, complete_entry_opt>	__alloc_traits<_Alloc, <unnamed>>
allocator<_List_node<complete_entry_opt>>	allocator<_Tp>
__alloc_traits<allocator<_List_node<complete_entry_opt>>, _List_node<complete_entry_opt>>	__alloc_traits<_Alloc, <unnamed>>
rebind<_List_node<complete_entry_opt>>	rebind<_Tp>
rebind<complete_entry_opt>	rebind<_Tp>
_Local_const_iterator<completion_entry_t, completion_entry_t, _Identity, hash<completion_entry_t>, _Mod_range_hashing, _Default_ranged_hash, true, false>	_Local_const_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>
_Local_iterator<completion_entry_t, completion_entry_t, _Identity, hash<completion_entry_t>, _Mod_range_hashing, _Default_ranged_hash, true, false>	_Local_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>
_Node_const_iterator<completion_entry_t, true, false>	_Node_const_iterator<_Value, __constant_iterators, __cache>
allocator_traits<allocator<completion_entry_t>>	allocator_traits<allocator<_Tp>>
_Local_const_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _Select1st, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, false, true>	_Local_const_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>
_Local_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _Select1st, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, false, true>	_Local_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>
_Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, false, true>	_Node_const_iterator<_Value, __constant_iterators, __cache>
pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, false, true>, bool>	pair<_T1, _T2>
_Local_const_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, _Select1st, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, false, true>	_Local_const_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>
_Local_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, _Select1st, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, false, true>	_Local_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>
_Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, false, true>	_Node_const_iterator<_Value, __constant_iterators, __cache>
allocator_traits<allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>>>	allocator_traits<allocator<_Tp>>
pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, false, true>, bool>	pair<_T1, _T2>
_Local_const_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Select1st, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, false, true>	_Local_const_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>
_Local_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Select1st, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, false, true>	_Local_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>
_Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, true>	_Node_const_iterator<_Value, __constant_iterators, __cache>
allocator_traits<allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	allocator_traits<allocator<_Tp>>
tuple_element<1UL, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	tuple_element<1UL, pair<_Tp1, _Tp2>>
_Map_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, true>	_Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
_Temporary_value	_Temporary_value
reverse_iterator<__normal_iterator<list<complete_entry_opt, allocator<complete_entry_opt>> *, vector<list<complete_entry_opt, allocator<complete_entry_opt>>, allocator<list<complete_entry_opt, allocator<complete_entry_opt>>>>>>	reverse_iterator<_Iterator>
__normal_iterator<const list<complete_entry_opt, allocator<complete_entry_opt>> *, vector<list<complete_entry_opt, allocator<complete_entry_opt>>, allocator<list<complete_entry_opt, allocator<complete_entry_opt>>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const list<complete_entry_opt, allocator<complete_entry_opt>> *, vector<list<complete_entry_opt, allocator<complete_entry_opt>>, allocator<list<complete_entry_opt, allocator<complete_entry_opt>>>>>>	reverse_iterator<_Iterator>
allocator_traits<allocator<list<complete_entry_opt, allocator<complete_entry_opt>>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<list<complete_entry_opt, allocator<complete_entry_opt>>>, list<complete_entry_opt, allocator<complete_entry_opt>>>	__alloc_traits<_Alloc, <unnamed>>
rebind<list<complete_entry_opt, allocator<complete_entry_opt>>>	rebind<_Tp>
_Callable<type, type>	_Callable<_Func, _Res2>
_Callable<_Functor, type>	_Callable<_Func, _Res2>
_Maybe_unary_or_binary_function<void, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &, unsigned long>	_Maybe_unary_or_binary_function<_Res, _ArgTypes...>
_PCC<<expression>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	_PCC<<unnamed>, _T1, _T2>
__pair_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	__pair_base<_U1, _U2>
reverse_iterator<_Rb_tree_const_iterator<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	reverse_iterator<_Iterator>
allocator_traits<allocator<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	__alloc_traits<_Alloc, <unnamed>>
rebind<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	rebind<_Tp>
_Temporary_value	_Temporary_value
reverse_iterator<__normal_iterator<reference_wrapper<const completion_entry_t> *, vector<reference_wrapper<const completion_entry_t>, allocator<reference_wrapper<const completion_entry_t>>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<const reference_wrapper<const completion_entry_t> *, vector<reference_wrapper<const completion_entry_t>, allocator<reference_wrapper<const completion_entry_t>>>>>	reverse_iterator<_Iterator>
allocator_traits<allocator<reference_wrapper<const completion_entry_t>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<reference_wrapper<const completion_entry_t>>, reference_wrapper<const completion_entry_t>>	__alloc_traits<_Alloc, <unnamed>>
rebind<reference_wrapper<const completion_entry_t>>	rebind<_Tp>
_Temporary_value	_Temporary_value
reverse_iterator<__normal_iterator<tok_t *, vector<tok_t, allocator<tok_t>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<const tok_t *, vector<tok_t, allocator<tok_t>>>>	reverse_iterator<_Iterator>
rebind<tok_t>	rebind<_Tp>
bitset<14UL>	bitset<_Nb>
_Rb_tree_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	_Rb_tree_const_iterator<_Tp>
reverse_iterator<_Rb_tree_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	reverse_iterator<_Iterator>
reverse_iterator<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	reverse_iterator<_Iterator>
__alloc_traits<allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	__alloc_traits<_Alloc, <unnamed>>
rebind<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	rebind<_Tp>
pair<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, bool>	pair<_T1, _T2>
is_convertible<pointer, autoload_file_cache_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, autoload_file_cache_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, autoload_file_cache_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, autoload_file_cache_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__uniq_ptr_impl<autoload_file_cache_t, default_delete<autoload_file_cache_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<autoload_file_cache_t, default_delete<autoload_file_cache_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
allocator<_Hash_node<completion_entry_t, false>>	allocator<_Tp>
_ReuseOrAllocNode<allocator<_Hash_node<completion_entry_t, false>>>	_ReuseOrAllocNode<_NodeAlloc>
_Equality<completion_entry_t, completion_entry_t, allocator<completion_entry_t>, _Identity, equal_to<completion_entry_t>, hash<completion_entry_t>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<false, true, true>, true>	_Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
_Rehash_base<completion_entry_t, completion_entry_t, allocator<completion_entry_t>, _Identity, equal_to<completion_entry_t>, hash<completion_entry_t>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<false, true, true>, integral_constant<bool, true>>	_Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true_type>
_Map_base<completion_entry_t, completion_entry_t, allocator<completion_entry_t>, _Identity, equal_to<completion_entry_t>, hash<completion_entry_t>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<false, true, true>, true>	_Map_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, _Unique_keys>
conditional<true, pair<_Node_iterator<completion_entry_t, true, false>, bool>, _Node_iterator<completion_entry_t, true, false>>	conditional<_Cond, _Iftrue, _Iffalse>
_Hashtable_alloc<allocator<_Hash_node<completion_entry_t, false>>>	_Hashtable_alloc<_NodeAlloc>
__alloc_traits<allocator<_Hash_node<completion_entry_t, false>>, _Hash_node<completion_entry_t, false>>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<_Hash_node<completion_entry_t, false>>>	allocator_traits<allocator<_Tp>>
rebind<_Hash_node<completion_entry_t, false>>	rebind<_Tp1>
__rebind<allocator<completion_entry_t>, _Hash_node<completion_entry_t, false>, void>	__rebind<_Tp, _Up, __void_t<other>>
allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, true>>	allocator<_Tp>
_ReuseOrAllocNode<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, true>>>	_ReuseOrAllocNode<_NodeAlloc>
_Equality<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, true>	_Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
_Rehash_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, integral_constant<bool, true>>	_Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true_type>
conditional<true, pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, false, true>, bool>, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, false, true>>	conditional<_Cond, _Iftrue, _Iffalse>
_Hashtable_alloc<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, true>>>	_Hashtable_alloc<_NodeAlloc>
__alloc_traits<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, true>>, _Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, true>>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, true>>>	allocator_traits<allocator<_Tp>>
rebind<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, true>>	rebind<_Tp1>
__rebind<allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>>, _Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, true>, void>	__rebind<_Tp, _Up, __void_t<other>>
allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, true>>	allocator<_Tp>
_ReuseOrAllocNode<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, true>>>	_ReuseOrAllocNode<_NodeAlloc>
_Equality<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, true>	_Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
_Rehash_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, integral_constant<bool, true>>	_Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true_type>
conditional<true, pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, false, true>, bool>, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, false, true>>	conditional<_Cond, _Iftrue, _Iffalse>
_Hashtable_alloc<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, true>>>	_Hashtable_alloc<_NodeAlloc>
__alloc_traits<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, true>>, _Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, true>>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, true>>>	allocator_traits<allocator<_Tp>>
rebind<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, true>>	rebind<_Tp1>
__rebind<allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>, _Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, true>, void>	__rebind<_Tp, _Up, __void_t<other>>
allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>>	allocator<_Tp>
_ReuseOrAllocNode<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>>>	_ReuseOrAllocNode<_NodeAlloc>
_Equality<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, true>	_Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
_Rehash_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, integral_constant<bool, true>>	_Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true_type>
conditional<true, pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, true>, bool>, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, true>>	conditional<_Cond, _Iftrue, _Iffalse>
_Hashtable_alloc<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>>>	_Hashtable_alloc<_NodeAlloc>
__alloc_traits<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>>, _Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>>>	allocator_traits<allocator<_Tp>>
rebind<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>>	rebind<_Tp1>
__rebind<allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>, void>	__rebind<_Tp, _Up, __void_t<other>>
_AllocNode<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, true>>>	_AllocNode<_NodeAlloc>
_AllocNode<allocator<_Hash_node<completion_entry_t, false>>>	_AllocNode<_NodeAlloc>
_AllocNode<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, true>>>	_AllocNode<_NodeAlloc>
_AllocNode<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>>>	_AllocNode<_NodeAlloc>
is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, value_type>	is_same<<unnamed>, <unnamed>>
_Alloc_node	_Alloc_node
_Reuse_or_alloc_node	_Reuse_or_alloc_node
_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	_Rb_tree_node<_Val>
allocator<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	allocator<_Tp>
__alloc_traits<allocator<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	__alloc_traits<_Alloc, <unnamed>>
rebind<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	rebind<_Tp>
_Rb_tree_impl<less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>	_Rb_tree_impl<_Key_compare, <unnamed>>
is_same<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, value_type>	is_same<<unnamed>, <unnamed>>
reverse_iterator<_Rb_tree_iterator<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	reverse_iterator<_Iterator>
_Alloc_node	_Alloc_node
_Reuse_or_alloc_node	_Reuse_or_alloc_node
_Rb_tree_node<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	_Rb_tree_node<_Val>
allocator<_Rb_tree_node<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	allocator<_Tp>
__alloc_traits<allocator<_Rb_tree_node<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _Rb_tree_node<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	__alloc_traits<_Alloc, <unnamed>>
rebind<_Rb_tree_node<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	rebind<_Tp>
pair<_Rb_tree_iterator<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, bool>	pair<_T1, _T2>
_Rb_tree_impl<less<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, true>	_Rb_tree_impl<_Key_compare, <unnamed>>
_List_impl	_List_impl
_Callable<type, type>	_Callable<_Func, _Res2>
_Callable<_Functor, type>	_Callable<_Func, _Res2>
_Maybe_unary_or_binary_function<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &>	_Maybe_unary_or_binary_function<_Res, _T1>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
__or_<is_same<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, is_convertible<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	__or_<_B1, _B2>
conditional<false, is_void<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, __or_<is_same<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, is_convertible<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	conditional<false, _Iftrue, _Iffalse>
__or_<is_same<const wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, is_convertible<const wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	__or_<_B1, _B2>
conditional<false, is_void<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, __or_<is_same<const wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, is_convertible<const wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	conditional<false, _Iftrue, _Iffalse>
_Base_manager<lambda [] type at line 154915, col. 29>	_Base_manager<_Functor>
_Base_manager<lambda [] type at line 154963, col. 25>	_Base_manager<_Functor>
_Base_manager<lambda [] type at line 154944, col. 37>	_Base_manager<_Functor>
_Base_manager<lambda [] type at line 154262, col. 28>	_Base_manager<_Functor>
_Base_manager<lambda [] type at line 154237, col. 38>	_Base_manager<_Functor>
_Base_manager<lambda [] type at line 154067, col. 22>	_Base_manager<_Functor>
_Base_manager<..(*)(..)>	_Base_manager<_Functor>
_Base_manager<..(*)(..)>	_Base_manager<_Functor>
_Base_manager<lambda [] type at line 153532, col. 12>	_Base_manager<_Functor>
__is_empty_non_tuple<default_delete<autoload_file_cache_t>>	__is_empty_non_tuple<_Tp>
is_empty<default_delete<autoload_file_cache_t>>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<autoload_file_cache_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<autoload_file_cache_t *>	__is_empty_non_tuple<_Tp>
is_empty<autoload_file_cache_t *>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<autoload_file_cache_t *>>	conditional<false, _Iftrue, _Iffalse>
allocator_traits<allocator<_List_node<complete_entry_opt>>>	allocator_traits<allocator<_Tp>>
allocator_traits<allocator<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	allocator_traits<allocator<_Tp>>
allocator_traits<allocator<_Rb_tree_node<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	allocator_traits<allocator<_Tp>>
__rebind<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, true>>, _Hash_node_base *, void>	__rebind<_Tp, _Up, __void_t<other>>
rebind<_Hash_node_base *>	rebind<_Tp1>
__rebind<allocator<_Hash_node<completion_entry_t, false>>, _Hash_node_base *, void>	__rebind<_Tp, _Up, __void_t<other>>
rebind<_Hash_node_base *>	rebind<_Tp1>
__rebind<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, true>>, _Hash_node_base *, void>	__rebind<_Tp, _Up, __void_t<other>>
rebind<_Hash_node_base *>	rebind<_Tp1>
__rebind<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>>, _Hash_node_base *, void>	__rebind<_Tp, _Up, __void_t<other>>
rebind<_Hash_node_base *>	rebind<_Tp1>
_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	_Rb_tree_node<_Val>
allocator<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	allocator<_Tp>
new_allocator<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	new_allocator<_Tp>
new_allocator<complete_entry_opt>	new_allocator<_Tp>
new_allocator<_List_node<complete_entry_opt>>	new_allocator<_Tp>
new_allocator<completion_entry_t>	new_allocator<_Tp>
new_allocator<_Hash_node<completion_entry_t, false>>	new_allocator<_Tp>
new_allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, true>>	new_allocator<_Tp>
new_allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>>	new_allocator<_Tp>
new_allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, true>>	new_allocator<_Tp>
new_allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	new_allocator<_Tp>
new_allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>>	new_allocator<_Tp>
new_allocator<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	new_allocator<_Tp>
new_allocator<list<complete_entry_opt, allocator<complete_entry_opt>>>	new_allocator<_Tp>
new_allocator<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	new_allocator<_Tp>
new_allocator<_Rb_tree_node<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	new_allocator<_Tp>
new_allocator<tok_t>	new_allocator<_Tp>
new_allocator<reference_wrapper<const completion_entry_t>>	new_allocator<_Tp>
_Hash_node_value_base<completion_entry_t>	_Hash_node_value_base<_Value>
conditional<false, __undefined, _Hash_node<completion_entry_t, false>>	conditional<false, _Iftrue, _Iffalse>
is_void<_Hash_node<completion_entry_t, false>>	is_void<_Tp>
_Hash_node_value_base<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	_Hash_node_value_base<_Value>
conditional<false, __undefined, _Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, true>>	conditional<false, _Iftrue, _Iffalse>
is_void<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, true>>	is_void<_Tp>
_Hash_node_value_base<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>>	_Hash_node_value_base<_Value>
conditional<false, __undefined, _Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, true>>	conditional<false, _Iftrue, _Iffalse>
is_void<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, true>>	is_void<_Tp>
_Hash_node_value_base<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	_Hash_node_value_base<_Value>
conditional<false, __undefined, _Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>>	conditional<false, _Iftrue, _Iffalse>
is_void<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>>	is_void<_Tp>
__invoke_result<const hash<completion_entry_t> &, const completion_entry_t &>	__invoke_result<_Functor, _ArgTypes...>
__call_is_nothrow<__invoke_result<const hash<completion_entry_t> &, const completion_entry_t &>, const hash<completion_entry_t> &, const completion_entry_t &>	__call_is_nothrow<_Result, _Fn, _Args...>
_PCC<<expression>, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, true>, bool>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, true>, bool>	_PCC<<unnamed>, _T1, _T2>
__pair_base<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, true>, bool>	__pair_base<_U1, _U2>
remove_cv<..(*)(..)>	remove_cv<_Tp>
remove_const<..(*)(..)>	remove_const<_Tp>
remove_cv<completion_t>	remove_cv<_Tp>
remove_const<completion_t>	remove_const<_Tp>
remove_cv<signed long>	remove_cv<_Tp>
remove_const<signed long>	remove_const<_Tp>
_Reference_wrapper_base_memfun<completion_entry_t, false>	_Reference_wrapper_base_memfun<_Tp, <unnamed>>
remove_cv<reference_wrapper<const completion_entry_t>>	remove_cv<_Tp>
remove_const<reference_wrapper<const completion_entry_t>>	remove_const<_Tp>
_Hashtable_ebo_helper<0, allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, true>>, true>	_Hashtable_ebo_helper<_Nm, _Tp, true>
_Hashtable_ebo_helper<0, allocator<_Hash_node<completion_entry_t, false>>, true>	_Hashtable_ebo_helper<_Nm, _Tp, true>
remove_reference<autoload_t &>	remove_reference<_Tp &>
_Function_handler<..(..), lambda [] type at line 154262, col. 28>	_Function_handler<..(..), _Functor>
remove_reference<lambda [] type at line 154262, col. 28 &>	remove_reference<_Tp &>
_Function_handler<..(..), ..(*)(..)>	_Function_handler<..(..), _Functor>
remove_reference<..(*&)(..)>	remove_reference<_Tp &>
_Function_handler<..(..), ..(*)(..)>	_Function_handler<..(..), _Functor>
remove_reference<..(*&)(..)>	remove_reference<_Tp &>
_Function_handler<..(..), lambda [] type at line 154067, col. 22>	_Function_handler<..(..), _Functor>
remove_reference<lambda [] type at line 154067, col. 22 &>	remove_reference<_Tp &>
_Hashtable_ebo_helper<0, allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>>, true>	_Hashtable_ebo_helper<_Nm, _Tp, true>
__strip_reference_wrapper<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	__strip_reference_wrapper<_Tp>
__decay_and_strip<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	__decay_and_strip<_Tp>
remove_reference<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	remove_reference<_Tp>
_Function_handler<..(..), lambda [] type at line 154915, col. 29>	_Function_handler<..(..), _Functor>
remove_reference<lambda [] type at line 154915, col. 29 &>	remove_reference<_Tp &>
move_iterator<__normal_iterator<completion_t *, vector<completion_t, allocator<completion_t>>>>	move_iterator<_Iterator>
_Function_handler<..(..), lambda [] type at line 154963, col. 25>	_Function_handler<..(..), _Functor>
remove_reference<lambda [] type at line 154963, col. 25 &>	remove_reference<_Tp &>
_Function_handler<..(..), lambda [] type at line 154944, col. 37>	_Function_handler<..(..), _Functor>
remove_reference<lambda [] type at line 154944, col. 37 &>	remove_reference<_Tp &>
_Function_handler<..(..), lambda [] type at line 153532, col. 12>	_Function_handler<..(..), _Functor>
remove_reference<lambda [] type at line 153532, col. 12 &>	remove_reference<_Tp &>
_Iter_pred<lambda [] type at line 153606, col. 17>	_Iter_pred<_Predicate>
_Iter_comp_iter<lambda [] type at line 153648, col. 51>	_Iter_comp_iter<_Compare>
_Iter_comp_iter<lambda [] type at line 153640, col. 47>	_Iter_comp_iter<_Compare>
_Iter_pred<lambda [] type at line 153633, col. 24>	_Iter_pred<_Predicate>
remove_reference<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> &>	remove_reference<_Tp &>
_Hashtable_ebo_helper<0, allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, true>>, true>	_Hashtable_ebo_helper<_Nm, _Tp, true>
_Iter_comp_iter<..(*)(..)>	_Iter_comp_iter<_Compare>
iterator_traits<const reference_wrapper<const completion_entry_t> *>	iterator_traits<const _Tp *>
_Function_handler<..(..), lambda [] type at line 154237, col. 38>	_Function_handler<..(..), _Functor>
remove_reference<lambda [] type at line 154237, col. 38 &>	remove_reference<_Tp &>
initializer_list<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>>	initializer_list<_E>
initializer_list<completion_entry_t>	initializer_list<_E>
initializer_list<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	initializer_list<_E>
initializer_list<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	initializer_list<_E>
tuple_element<0UL, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	tuple_element<0UL, pair<_Tp1, _Tp2>>
remove_reference<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>> &>	remove_reference<_Tp &>
tuple_element<0UL, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>>	tuple_element<0UL, pair<_Tp1, _Tp2>>
remove_reference<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool> &>	remove_reference<_Tp &>
tuple_element<0UL, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	tuple_element<0UL, pair<_Tp1, _Tp2>>
remove_reference<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> &>	remove_reference<_Tp &>
remove_reference<const completion_entry_t &>	remove_reference<_Tp &>
remove_reference<completion_entry_t &>	remove_reference<_Tp &>
__result_of_success<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, __invoke_other>	__result_of_success<_Tp, _Tag>
__result_of_success<const wchar_t *, __invoke_other>	__result_of_success<_Tp, _Tag>
__success_type<const wchar_t *>	__success_type<_Tp>
__success_type<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	__success_type<_Tp>
__iterator_traits<__normal_iterator<completion_t *, vector<completion_t, allocator<completion_t>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
iterator_traits<__normal_iterator<completion_t *, vector<completion_t, allocator<completion_t>>>>	iterator_traits<_Iterator>
_Reference_wrapper_base<completion_entry_t>	_Reference_wrapper_base<_Tp>
is_member_function_pointer<completion_entry_t>	is_member_function_pointer<_Tp>
is_same<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, true>, _U1>	is_same<<unnamed>, <unnamed>>
pair<completion_t *, long>	pair<_T1, _T2>
pair<_Rb_tree_const_iterator<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _Rb_tree_const_iterator<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	pair<_T1, _T2>
pair<_Rb_tree_iterator<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _Rb_tree_iterator<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	pair<_T1, _T2>
pair<_Rb_tree_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _Rb_tree_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	pair<_T1, _T2>
pair<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	pair<_T1, _T2>
_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, false, true>	_Node_iterator<_Value, __constant_iterators, __cache>
pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, false, true>, bool>	pair<_T1, _T2>
pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, false, true>, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, false, true>>	pair<_T1, _T2>
_Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, false, true>	_Node_const_iterator<_Value, __constant_iterators, __cache>
pair<_Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, false, true>, _Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, false, true>>	pair<_T1, _T2>
_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	_Rb_tree_iterator<_Tp>
pair<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>, bool>	pair<_T1, _T2>
pair<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>, _Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	pair<_T1, _T2>
_Rb_tree_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	_Rb_tree_const_iterator<_Tp>
pair<_Rb_tree_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>, _Rb_tree_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	pair<_T1, _T2>
pair<_Node_iterator<completion_entry_t, true, false>, _Node_iterator<completion_entry_t, true, false>>	pair<_T1, _T2>
pair<_Node_const_iterator<completion_entry_t, true, false>, _Node_const_iterator<completion_entry_t, true, false>>	pair<_T1, _T2>
pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, false, true>, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, false, true>>	pair<_T1, _T2>
pair<_Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, false, true>, _Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, false, true>>	pair<_T1, _T2>
pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, false, true>, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, false, true>>	pair<_T1, _T2>
pair<_Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, false, true>, _Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, false, true>>	pair<_T1, _T2>
pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, true>, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, true>>	pair<_T1, _T2>
pair<_Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, true>, _Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, true>>	pair<_T1, _T2>
__result_of_impl<false, false, const hash<completion_entry_t> &, const completion_entry_t &>	__result_of_impl<false, false, _Functor, _ArgTypes...>
__aligned_buffer<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	__aligned_buffer<_Tp>
__aligned_buffer<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>>	__aligned_buffer<_Tp>
__aligned_buffer<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	__aligned_buffer<_Tp>
__aligned_buffer<completion_entry_t>	__aligned_buffer<_Tp>
__is_convertible_helper<const wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, false>	__is_convertible_helper<_From, _To, false>
_Callable<lambda [] type at line 154963, col. 25, void>	_Callable<_Func, _Res2>
_Callable<lambda [] type at line 154944, col. 37, void>	_Callable<_Func, _Res2>
_Callable<lambda [] type at line 154262, col. 28, void>	_Callable<_Func, _Res2>
_Callable<lambda [] type at line 154237, col. 38, void>	_Callable<_Func, _Res2>
reverse_iterator<__normal_iterator<const completion_t *, vector<completion_t, allocator<completion_t>>>>	reverse_iterator<_Iterator>
unary_function<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	unary_function<_Arg, _Result>
_Callable<lambda [] type at line 154067, col. 22, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	_Callable<_Func, _Res2>
_Callable<..(*)(..), const wchar_t *>	_Callable<_Func, _Res2>
_Callable<..(*)(..), basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	_Callable<_Func, _Res2>
_Callable<lambda [] type at line 153532, col. 12, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	_Callable<_Func, _Res2>
_Callable<function<..(..)>, _Tp>	_Callable<_Func, _Res2>
is_same<_Rb_tree_node<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Rb_tree_node<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Rb_tree_node<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Rb_tree_node<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Rb_tree_node<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Rb_tree_node<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
__aligned_membuf<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	__aligned_membuf<_Tp>
_PCC<<expression>, _Rb_tree_iterator<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, bool>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, _Rb_tree_iterator<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, bool>	_PCC<<unnamed>, _T1, _T2>
__pair_base<_Rb_tree_iterator<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, bool>	__pair_base<_U1, _U2>
unary_function<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	unary_function<_Arg, _Result>
_Rb_tree_key_compare<less<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	_Rb_tree_key_compare<_Key_compare>
is_same<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
__aligned_membuf<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	__aligned_membuf<_Tp>
unary_function<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	unary_function<_Arg, _Result>
rebind<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	rebind<_Tp>
__alloc_traits<allocator<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>, _Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	__alloc_traits<_Alloc, <unnamed>>
conditional<true, __is_nothrow_invocable<const hash<completion_entry_t> &, const completion_entry_t &>, __is_fast_hash<hash<completion_entry_t>>>	conditional<_Cond, _Iftrue, _Iffalse>
is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
_Equal_helper<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, unsigned long, true>	_Equal_helper<_Key, _Value, _ExtractKey, _Equal, _HashCodeType, true>
is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, true> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, true> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, true> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, true> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, true> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, true> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
_Equal_helper<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, unsigned long, true>	_Equal_helper<_Key, _Value, _ExtractKey, _Equal, _HashCodeType, true>
is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, true> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, true> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, true> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, true> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, true> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, true> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
_Equal_helper<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, unsigned long, true>	_Equal_helper<_Key, _Value, _ExtractKey, _Equal, _HashCodeType, true>
is_same<_Hash_node<completion_entry_t, false> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<completion_entry_t, false> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Hash_node<completion_entry_t, false> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<completion_entry_t, false> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Hash_node<completion_entry_t, false> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<completion_entry_t, false> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
_Equal_helper<completion_entry_t, completion_entry_t, _Identity, equal_to<completion_entry_t>, unsigned long, false>	_Equal_helper<_Key, _Value, _ExtractKey, _Equal, _HashCodeType, false>
_Hashtable_ebo_helper<0, equal_to<completion_entry_t>, true>	_Hashtable_ebo_helper<_Nm, _Tp, true>
enable_if<value, void>	enable_if<<unnamed>, _Tp>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _Pair &&>	is_constructible<_Tp, _Args...>
enable_if<value, void>	enable_if<<unnamed>, _Tp>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, _Pair &&>	is_constructible<_Tp, _Args...>
enable_if<value, void>	enable_if<<unnamed>, _Tp>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Pair &&>	is_constructible<_Tp, _Args...>
tuple<autoload_file_cache_t *, default_delete<autoload_file_cache_t>>	tuple<_T1, _T2>
is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
reference	reference
hash<bitset<14UL>>	hash<_Tp>
reverse_iterator<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	reverse_iterator<_Iterator>
reverse_iterator<_Rb_tree_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	reverse_iterator<_Iterator>
is_same<reference_wrapper<const completion_entry_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<reference_wrapper<const completion_entry_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<reference_wrapper<const completion_entry_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<reference_wrapper<const completion_entry_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<reference_wrapper<const completion_entry_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<reference_wrapper<const completion_entry_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
binary_function<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, bool>	binary_function<_Arg1, _Arg2, _Result>
is_same<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, _U2>	is_same<<unnamed>, <unnamed>>
_Callable<lambda [] type at line 154915, col. 29, void>	_Callable<_Func, _Res2>
_Callable<function<..(..)>, _Tp>	_Callable<_Func, _Res2>
is_same<list<complete_entry_opt, allocator<complete_entry_opt>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<list<complete_entry_opt, allocator<complete_entry_opt>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<list<complete_entry_opt, allocator<complete_entry_opt>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<list<complete_entry_opt, allocator<complete_entry_opt>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<list<complete_entry_opt, allocator<complete_entry_opt>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<list<complete_entry_opt, allocator<complete_entry_opt>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
_Hashtable_ebo_helper<1, hash<completion_entry_t>, true>	_Hashtable_ebo_helper<_Nm, _Tp, true>
is_same<_List_node<complete_entry_opt> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_List_node<complete_entry_opt> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_List_node<complete_entry_opt> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_List_node<complete_entry_opt> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_List_node<complete_entry_opt> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_List_node<complete_entry_opt> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<complete_entry_opt *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<complete_entry_opt *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<complete_entry_opt *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<complete_entry_opt *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<complete_entry_opt *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<complete_entry_opt *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
__aligned_membuf<complete_entry_opt>	__aligned_membuf<_Tp>
is_same<_Rb_tree_const_iterator<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<completion_entry_t, true, false>, _U1>	is_same<<unnamed>, <unnamed>>
__iterator_traits<_Node_iterator<completion_entry_t, true, false>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
remove_reference<..(*&)(..)>	remove_reference<_Tp &>
remove_reference<_Rb_tree_iterator<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> &>	remove_reference<_Tp &>
remove_reference<lambda [] type at line 153633, col. 24 &>	remove_reference<_Tp &>
remove_reference<lambda [] type at line 153640, col. 47 &>	remove_reference<_Tp &>
_Temporary_buffer<__normal_iterator<completion_t *, vector<completion_t, allocator<completion_t>>>, completion_t>	_Temporary_buffer<_ForwardIterator, _Tp>
remove_reference<lambda [] type at line 153648, col. 51 &>	remove_reference<_Tp &>
remove_reference<lambda [] type at line 153606, col. 17 &>	remove_reference<_Tp &>
remove_reference<const list<complete_entry_opt, allocator<complete_entry_opt>> &>	remove_reference<_Tp &>
remove_reference<const complete_entry_opt &>	remove_reference<_Tp &>
is_same<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, _U2>	is_same<<unnamed>, <unnamed>>
is_same<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, _U2>	is_same<<unnamed>, <unnamed>>
is_same<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, _U2>	is_same<<unnamed>, <unnamed>>
is_same<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, _U2>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<completion_entry_t, true, false>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<completion_entry_t, true, false>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<completion_entry_t, true, false>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<completion_entry_t, true, false>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_const_iterator<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_const_iterator<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_const_iterator<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_const_iterator<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _U1>	is_same<<unnamed>, <unnamed>>
_Tp2	_Tp2
is_same<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, _U1>	is_same<<unnamed>, <unnamed>>
_TC<value, autoload_file_cache_t *, default_delete<autoload_file_cache_t>>	_TC<<unnamed>, _Elements...>
_TC<true, autoload_file_cache_t *, default_delete<autoload_file_cache_t>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, autoload_file_cache_t *, default_delete<autoload_file_cache_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
conditional<true, pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, false, true>, bool>, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, false, true>>	conditional<_Cond, _Iftrue, _Iffalse>
_Equal_helper<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, unsigned long, true>	_Equal_helper<_Key, _Value, _ExtractKey, _Equal, _HashCodeType, __cache_hash_code>
_Tp2	_Tp2
is_same<_Rb_tree_iterator<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _U1>	is_same<<unnamed>, <unnamed>>
_Tp2	_Tp2
conditional<true, is_same<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, is_convertible<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	conditional<_Cond, _Iftrue, _Iffalse>
conditional<false, is_same<const wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, is_convertible<const wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	conditional<false, _Iftrue, _Iffalse>
is_void<const wchar_t *>	is_void<_Tp>
is_function<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	is_function<<unnamed>>
is_array<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	is_array<<unnamed>>
__or_<is_void<const wchar_t *>, is_function<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, is_array<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	__or_<_B1, _B2, _B3, _Bn...>
aligned_storage<64UL, 8UL>	aligned_storage<_Len, _Align>
type	type
aligned_storage<56UL, 8UL>	aligned_storage<_Len, _Align>
type	type
is_member_object_pointer<const hash<completion_entry_t>>	is_member_object_pointer<_Tp>
is_member_function_pointer<const hash<completion_entry_t>>	is_member_function_pointer<_Tp>
_PCC<<expression>, completion_t *, long>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, completion_t *, long>	_PCC<<unnamed>, _T1, _T2>
__pair_base<completion_t *, long>	__pair_base<_U1, _U2>
is_same<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, true>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, true>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, true>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, true>, _U1>	is_same<<unnamed>, <unnamed>>
_Weak_result_type<completion_entry_t>	_Weak_result_type<_Functor>
_Refwrap_base_arg1<completion_entry_t, void>	_Refwrap_base_arg1<_Tp, <unnamed>>
_Refwrap_base_arg2<completion_entry_t, void>	_Refwrap_base_arg2<_Tp, <unnamed>>
_Tuple_impl<1UL, default_delete<autoload_file_cache_t>>	_Tuple_impl<_Idx, _Head>
_Head_base<1UL, default_delete<autoload_file_cache_t>, true>	_Head_base<_Idx, _Head, true>
_Head_base<0UL, autoload_file_cache_t *, false>	_Head_base<_Idx, _Head, false>
__allocated_ptr<allocator<_List_node<complete_entry_opt>>>	__allocated_ptr<_Alloc>
move_iterator<list<complete_entry_opt, allocator<complete_entry_opt>> *>	move_iterator<_Iterator>
__is_move_insertable<allocator<list<complete_entry_opt, allocator<complete_entry_opt>>>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<list<complete_entry_opt, allocator<complete_entry_opt>>>	is_move_constructible<_Tp>
__is_move_constructible_impl<list<complete_entry_opt, allocator<complete_entry_opt>>, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<list<complete_entry_opt, allocator<complete_entry_opt>>, list<complete_entry_opt, allocator<complete_entry_opt>> &&>	is_constructible<_Tp, _Args...>
remove_reference<_Vector_impl &>	remove_reference<_Tp &>
__iterator_traits<move_iterator<__normal_iterator<completion_t *, vector<completion_t, allocator<completion_t>>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
remove_reference<_Rb_tree_iterator<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	remove_reference<_Tp>
__is_referenceable<list<complete_entry_opt, allocator<complete_entry_opt>>>	__is_referenceable<_Tp>
conditional<true, list<complete_entry_opt, allocator<complete_entry_opt>> &&, list<complete_entry_opt, allocator<complete_entry_opt>> &>	conditional<_Cond, _Iftrue, _Iffalse>
_Weak_result_type_memfun<completion_entry_t, false>	_Weak_result_type_memfun<_Functor, <unnamed>>
is_same<completion_t *, _U1>	is_same<<unnamed>, <unnamed>>
is_same<long, _U2>	is_same<<unnamed>, <unnamed>>
struct <unnamed>	struct <unnamed>
struct <unnamed>	struct <unnamed>
__or_<is_function<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, is_array<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	__or_<_B1, _B2>
conditional<false, is_void<const wchar_t *>, __or_<is_function<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, is_array<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	conditional<false, _Iftrue, _Iffalse>
is_same<_Rb_tree_iterator<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_iterator<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_iterator<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_iterator<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _U1>	is_same<<unnamed>, <unnamed>>
move_iterator<reference_wrapper<const completion_entry_t> *>	move_iterator<_Iterator>
_Val_comp_iter<..(*)(..)>	_Val_comp_iter<_Compare>
__iterator_traits<__normal_iterator<reference_wrapper<const completion_entry_t> *, vector<reference_wrapper<const completion_entry_t>, allocator<reference_wrapper<const completion_entry_t>>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
remove_reference<reference_wrapper<const completion_entry_t> &>	remove_reference<_Tp &>
remove_reference<_Rb_tree_node<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> *&>	remove_reference<_Tp &>
__strip_reference_wrapper<_Node_iterator<completion_entry_t, true, false>>	__strip_reference_wrapper<_Tp>
__decay_and_strip<_Node_iterator<completion_entry_t, true, false>>	__decay_and_strip<_Tp>
remove_reference<_Node_iterator<completion_entry_t, true, false>>	remove_reference<_Tp>
__uninitialized_construct_buf_dispatch<false>	__uninitialized_construct_buf_dispatch<<unnamed>>
_Iter_comp_val<lambda [] type at line 153640, col. 47>	_Iter_comp_val<_Compare>
_Val_comp_iter<lambda [] type at line 153640, col. 47>	_Val_comp_iter<_Compare>
_Iter_comp_val<lambda [] type at line 153648, col. 51>	_Iter_comp_val<_Compare>
_Val_comp_iter<lambda [] type at line 153648, col. 51>	_Val_comp_iter<_Compare>
__strip_reference_wrapper<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, true>>	__strip_reference_wrapper<_Tp>
__decay_and_strip<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, true>>	__decay_and_strip<_Tp>
remove_reference<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, true>>	remove_reference<_Tp>
conditional<true, reference_wrapper<const completion_entry_t> &&, reference_wrapper<const completion_entry_t> &>	conditional<_Cond, _Iftrue, _Iffalse>
is_same<long, _U2>	is_same<<unnamed>, <unnamed>>
is_same<completion_t *, _U1>	is_same<<unnamed>, <unnamed>>
is_same<long, _U2>	is_same<<unnamed>, <unnamed>>
is_same<completion_t *, _U1>	is_same<<unnamed>, <unnamed>>
is_same<long, _U2>	is_same<<unnamed>, <unnamed>>
is_same<completion_t *, _U1>	is_same<<unnamed>, <unnamed>>
is_same<long, _U2>	is_same<<unnamed>, <unnamed>>
is_same<completion_t *, _U1>	is_same<<unnamed>, <unnamed>>
_Weak_result_type_impl<completion_entry_t>	_Weak_result_type_impl<_Functor>
is_reference<list<complete_entry_opt, allocator<complete_entry_opt>> &>	is_reference<_Tp>
pointer_traits<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, true> *>	pointer_traits<_Tp *>
pointer_traits<_Hash_node<completion_entry_t, false> *>	pointer_traits<_Tp *>
remove_reference<allocator<_List_node<complete_entry_opt>> &>	remove_reference<_Tp &>
__iterator_traits<move_iterator<list<complete_entry_opt, allocator<complete_entry_opt>> *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<list<complete_entry_opt, allocator<complete_entry_opt>> &, list<complete_entry_opt, allocator<complete_entry_opt>> &&>	is_assignable<_Tp, _Up>
__is_move_iterator<__normal_iterator<completion_t *, vector<completion_t, allocator<completion_t>>>>	__is_move_iterator<_Tp>
is_assignable<completion_t &, completion_t &>	is_assignable<_Tp, _Up>
_Sanitize_val<14UL, true>	_Sanitize_val<_Nb, true>
pointer_traits<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true> *>	pointer_traits<_Tp *>
pointer_traits<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, true> *>	pointer_traits<_Tp *>
__is_pointer<tok_t *>	__is_pointer<_Tp *>
__are_same<tok_t, tok_t>	__are_same<_Tp, _Tp>
remove_reference<_Iter_comp_iter<lambda [] type at line 153648, col. 51> &>	remove_reference<_Tp &>
remove_reference<_Iter_comp_iter<lambda [] type at line 153640, col. 47> &>	remove_reference<_Tp &>
remove_reference<completion_t *>	remove_reference<_Tp>
remove_reference<completion_t *&>	remove_reference<_Tp &>
remove_reference<long &>	remove_reference<_Tp &>
__is_pointer<completion_t *>	__is_pointer<_Tp *>
__are_same<completion_t, completion_t>	__are_same<_Tp, _Tp>
remove_reference<_Iter_comp_iter<..(*)(..)> &>	remove_reference<_Tp &>
__is_move_iterator<_Node_iterator<completion_entry_t, true, false>>	__is_move_iterator<_Tp>
is_assignable<reference_wrapper<const completion_entry_t> &, const completion_entry_t &>	is_assignable<_Tp, _Up>
_Maybe_get_result_type<completion_entry_t, void>	_Maybe_get_result_type<_Functor, <unnamed>>
conditional<false, is_function<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, is_array<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	conditional<false, _Iftrue, _Iffalse>
is_reference<reference_wrapper<const completion_entry_t> &>	is_reference<_Tp>
__iterator_traits<move_iterator<reference_wrapper<const completion_entry_t> *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<reference_wrapper<const completion_entry_t> &, reference_wrapper<const completion_entry_t> &&>	is_assignable<_Tp, _Up>
__is_pointer<_Node_iterator<completion_entry_t, true, false>>	__is_pointer<_Tp>
__is_pointer<reference_wrapper<const completion_entry_t> *>	__is_pointer<_Tp *>
__are_same<completion_entry_t, reference_wrapper<const completion_entry_t>>	__are_same<<unnamed>, <unnamed>>
__copy_move<false, false, forward_iterator_tag>	__copy_move<<unnamed>, <unnamed>, <unnamed>>
__are_same<reference_wrapper<const completion_entry_t>, reference_wrapper<const completion_entry_t>>	__are_same<_Tp, _Tp>
__copy_move_backward<true, true, random_access_iterator_tag>	__copy_move_backward<_IsMove, true, random_access_iterator_tag>
is_move_assignable<tok_t>	is_move_assignable<_Tp>
is_copy_assignable<tok_t>	is_copy_assignable<_Tp>
conditional<true, is_move_assignable<tok_t>, is_copy_assignable<tok_t>>	conditional<_Cond, _Iftrue, _Iffalse>
remove_reference<list<complete_entry_opt, allocator<complete_entry_opt>>>	remove_reference<_Tp>
remove_reference<list<complete_entry_opt, allocator<complete_entry_opt>> &>	remove_reference<_Tp &>
_Iter_comp_val<..(*)(..)>	_Iter_comp_val<_Compare>
is_move_assignable<reference_wrapper<const completion_entry_t>>	is_move_assignable<_Tp>
is_copy_assignable<reference_wrapper<const completion_entry_t>>	is_copy_assignable<_Tp>
conditional<true, is_move_assignable<reference_wrapper<const completion_entry_t>>, is_copy_assignable<reference_wrapper<const completion_entry_t>>>	conditional<_Cond, _Iftrue, _Iffalse>
__is_move_assignable_impl<tok_t, true>	__is_move_assignable_impl<_Tp, true>
remove_reference<reference_wrapper<const completion_entry_t>>	remove_reference<_Tp>
is_assignable<tok_t &, tok_t &&>	is_assignable<_Tp, _Up>
__is_move_assignable_impl<reference_wrapper<const completion_entry_t>, true>	__is_move_assignable_impl<_Tp, true>
__is_referenceable<reference_wrapper<const completion_entry_t>>	__is_referenceable<_Tp>
__is_empty_non_tuple<env_universal_t *>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<env_universal_t *>>	conditional<false, _Iftrue, _Iffalse>
default_delete<env_universal_t>	default_delete<_Tp>
__is_empty_non_tuple<default_delete<env_universal_t>>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<env_universal_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<env_stack_impl_t *>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<env_stack_impl_t *>>	conditional<false, _Iftrue, _Iffalse>
default_delete<env_stack_impl_t>	default_delete<_Tp>
__is_empty_non_tuple<default_delete<env_stack_impl_t>>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<env_stack_impl_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &&>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &&>>	conditional<false, _Iftrue, _Iffalse>
_Sp_counted_ptr<_Ptr, _Lp>	_Sp_counted_ptr<_Ptr, _Lp>
is_void<_Yp>	is_void<_Tp>
pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>	pair<_T1, _T2>
allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>>	allocator<_Tp>
_Insert_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>>	_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
_Insert<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, false>	_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, false>
_Hash_code_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, _Select1st, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, true>	_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Default_ranged_hash, true>
_Hashtable<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>>	_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
__hash_code_base_access	__hash_code_base_access
allocator<electric_var_t>	allocator<_Tp>
_Vector_base<electric_var_t, allocator<electric_var_t>>	_Vector_base<_Tp, _Alloc>
vector<electric_var_t, allocator<electric_var_t>>	vector<_Tp, _Alloc>
allocator<callback_data_t>	allocator<_Tp>
_Vector_base<callback_data_t, allocator<callback_data_t>>	_Vector_base<_Tp, _Alloc>
vector<callback_data_t, allocator<callback_data_t>>	vector<_Tp, _Alloc>
shared_ptr<env_node_t>	shared_ptr<_Tp>
allocator<shared_ptr<env_node_t>>	allocator<_Tp>
_Vector_base<shared_ptr<env_node_t>, allocator<shared_ptr<env_node_t>>>	_Vector_base<_Tp, _Alloc>
vector<shared_ptr<env_node_t>, allocator<shared_ptr<env_node_t>>>	vector<_Tp, _Alloc>
shared_ptr<environment_t>	shared_ptr<_Tp>
null_terminated_array_t<char>	null_terminated_array_t<CharT>
shared_ptr<const null_terminated_array_t<char>>	shared_ptr<_Tp>
unique_ptr<env_stack_impl_t, default_delete<env_stack_impl_t>>	unique_ptr<_Tp, _Dp>
acquired_lock<const env_stack_impl_t>	acquired_lock<Data>
acquired_lock<env_stack_impl_t>	acquired_lock<Data>
unordered_map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>>>	unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
default_delete<universal_notifier_t>	default_delete<_Tp>
unique_ptr<universal_notifier_t, default_delete<universal_notifier_t>>	unique_ptr<_Tp, _Dp>
maybe_t<unsigned char>	maybe_t<T>
remove_reference<maybe_t<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> &>	remove_reference<_Tp &>
allocator<shared_ptr<job_t>>	allocator<_Tp>
deque<shared_ptr<job_t>, allocator<shared_ptr<job_t>>>	deque<_Tp, _Alloc>
maybe_t<bool>	maybe_t<T>
owning_lock<unsigned long>	owning_lock<Data>
latch_t<env_universal_t>	latch_t<T>
_Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, false, true>	_Node_const_iterator<_Value, __constant_iterators, __cache>
_Hashtable_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Hashtable_traits<true, false, true>>	_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>
_Node_iterator_base<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, true>	_Node_iterator_base<_Value, _Cache_hash_code>
__shared_ptr_access<env_node_t, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
__shared_ptr<env_node_t, _S_atomic>	__shared_ptr<_Tp, _Lp>
_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, false, true>	_Node_iterator<_Value, __constant_iterators, __cache>
conditional<false, const pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t> &, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t> &>	conditional<false, _Iftrue, _Iffalse>
tuple_element<1UL, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>>	tuple_element<1UL, pair<_Tp1, _Tp2>>
_Map_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, true>	_Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
acquired_lock<unsigned long>	acquired_lock<Data>
__normal_iterator<const electric_var_t *, vector<electric_var_t, allocator<electric_var_t>>>	__normal_iterator<_Iterator, _Container>
iterator_traits<const electric_var_t *>	iterator_traits<const _Tp *>
remove_reference<unique_ptr<env_stack_impl_t, default_delete<env_stack_impl_t>> &>	remove_reference<_Tp &>
__uniq_ptr_impl<env_stack_impl_t, default_delete<env_stack_impl_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<env_stack_impl_t, default_delete<env_stack_impl_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
conditional<false, const pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t> *, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t> *>	conditional<false, _Iftrue, _Iffalse>
remove_reference<shared_ptr<env_node_t> &>	remove_reference<_Tp &>
allocator_traits<allocator<shared_ptr<env_node_t>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<shared_ptr<env_node_t>>, shared_ptr<env_node_t>>	__alloc_traits<_Alloc, <unnamed>>
pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, false, true>, bool>	pair<_T1, _T2>
pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>	pair<_T1, _T2>
enable_if<true, pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, false, true>, bool>>	enable_if<true, _Tp>
remove_reference<env_var_t &>	remove_reference<_Tp &>
shared_ptr<null_terminated_array_t<char>>	shared_ptr<_Tp>
__shared_ptr<const null_terminated_array_t<char>, _S_atomic>	__shared_ptr<_Tp, _Lp>
shared_ptr<env_scoped_impl_t>	shared_ptr<_Tp>
__shared_ptr_access<env_scoped_impl_t, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
__shared_ptr<env_scoped_impl_t, _S_atomic>	__shared_ptr<_Tp, _Lp>
initializer_list<electric_var_t>	initializer_list<_E>
remove_extent<env_scoped_impl_t>	remove_extent<_Tp>
__weak_ptr<env_node_t, _S_atomic>	__weak_ptr<_Tp, _Lp>
__weak_ptr<const null_terminated_array_t<char>, _S_atomic>	__weak_ptr<_Tp, _Lp>
__weak_ptr<null_terminated_array_t<char>, _S_atomic>	__weak_ptr<_Tp, _Lp>
__weak_ptr<environment_t, _S_atomic>	__weak_ptr<_Tp, _Lp>
__weak_ptr<env_scoped_impl_t, _S_atomic>	__weak_ptr<_Tp, _Lp>
__shared_ptr<null_terminated_array_t<char>, _S_atomic>	__shared_ptr<_Tp, _Lp>
__shared_ptr<environment_t, _S_atomic>	__shared_ptr<_Tp, _Lp>
is_array<env_scoped_impl_t>	is_array<<unnamed>>
is_void<env_scoped_impl_t>	is_void<_Tp>
allocator<env_node_t>	allocator<_Tp>
allocator<env_scoped_impl_t>	allocator<_Tp>
allocator<null_terminated_array_t<char>>	allocator<_Tp>
weak_ptr<env_scoped_impl_t>	weak_ptr<_Tp>
remove_extent<const null_terminated_array_t<char>>	remove_extent<_Tp>
__shared_ptr_access<const null_terminated_array_t<char>, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
remove_extent<null_terminated_array_t<char>>	remove_extent<_Tp>
weak_ptr<null_terminated_array_t<char>>	weak_ptr<_Tp>
_PCC<<expression>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>	_PCC<<unnamed>, _T1, _T2>
__pair_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>	__pair_base<_U1, _U2>
is_same<shared_ptr<env_node_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<shared_ptr<env_node_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<shared_ptr<env_node_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<shared_ptr<env_node_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<shared_ptr<env_node_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<shared_ptr<env_node_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
acquired_lock<const unsigned long>	acquired_lock<Data>
_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, true>	_Hash_node<_Value, true>
remove_extent<env_node_t>	remove_extent<_Tp>
is_array<env_node_t>	is_array<<unnamed>>
is_void<env_node_t>	is_void<_Tp>
_PCC<<expression>, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>	_PCC<<unnamed>, _T1, _T2>
__pair_base<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>	__pair_base<_U1, _U2>
_Temporary_value	_Temporary_value
__normal_iterator<electric_var_t *, vector<electric_var_t, allocator<electric_var_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<electric_var_t *, vector<electric_var_t, allocator<electric_var_t>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<const electric_var_t *, vector<electric_var_t, allocator<electric_var_t>>>>	reverse_iterator<_Iterator>
allocator_traits<allocator<electric_var_t>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<electric_var_t>, electric_var_t>	__alloc_traits<_Alloc, <unnamed>>
rebind<electric_var_t>	rebind<_Tp>
weak_ptr<env_node_t>	weak_ptr<_Tp>
_Temporary_value	_Temporary_value
__normal_iterator<shared_ptr<env_node_t> *, vector<shared_ptr<env_node_t>, allocator<shared_ptr<env_node_t>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<shared_ptr<env_node_t> *, vector<shared_ptr<env_node_t>, allocator<shared_ptr<env_node_t>>>>>	reverse_iterator<_Iterator>
__normal_iterator<const shared_ptr<env_node_t> *, vector<shared_ptr<env_node_t>, allocator<shared_ptr<env_node_t>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const shared_ptr<env_node_t> *, vector<shared_ptr<env_node_t>, allocator<shared_ptr<env_node_t>>>>>	reverse_iterator<_Iterator>
rebind<shared_ptr<env_node_t>>	rebind<_Tp>
maybe_impl_t<bool>	maybe_impl_t<T>
_Temporary_value	_Temporary_value
__normal_iterator<callback_data_t *, vector<callback_data_t, allocator<callback_data_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<callback_data_t *, vector<callback_data_t, allocator<callback_data_t>>>>	reverse_iterator<_Iterator>
__normal_iterator<const callback_data_t *, vector<callback_data_t, allocator<callback_data_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const callback_data_t *, vector<callback_data_t, allocator<callback_data_t>>>>	reverse_iterator<_Iterator>
allocator_traits<allocator<callback_data_t>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<callback_data_t>, callback_data_t>	__alloc_traits<_Alloc, <unnamed>>
rebind<callback_data_t>	rebind<_Tp>
_Local_const_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, _Select1st, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, false, true>	_Local_const_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>
_Local_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, _Select1st, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, false, true>	_Local_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>
allocator_traits<allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>>>	allocator_traits<allocator<_Tp>>
is_convertible<pointer, env_stack_impl_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, env_stack_impl_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, env_stack_impl_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, env_stack_impl_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
weak_ptr<const null_terminated_array_t<char>>	weak_ptr<_Tp>
remove_extent<environment_t>	remove_extent<_Tp>
weak_ptr<environment_t>	weak_ptr<_Tp>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, true>>	allocator<_Tp>
_ReuseOrAllocNode<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, true>>>	_ReuseOrAllocNode<_NodeAlloc>
_Equality<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, true>	_Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
_Rehash_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, integral_constant<bool, true>>	_Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true_type>
conditional<true, pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, false, true>, bool>, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, false, true>>	conditional<_Cond, _Iftrue, _Iffalse>
_Hashtable_alloc<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, true>>>	_Hashtable_alloc<_NodeAlloc>
__alloc_traits<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, true>>, _Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, true>>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, true>>>	allocator_traits<allocator<_Tp>>
rebind<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, true>>	rebind<_Tp1>
__rebind<allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>>, _Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, true>, void>	__rebind<_Tp, _Up, __void_t<other>>
_AllocNode<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, true>>>	_AllocNode<_NodeAlloc>
is_empty<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &&>	is_empty<_Tp>
is_empty<default_delete<env_stack_impl_t>>	is_empty<_Tp>
is_empty<env_stack_impl_t *>	is_empty<_Tp>
is_empty<default_delete<env_universal_t>>	is_empty<_Tp>
is_empty<env_universal_t *>	is_empty<_Tp>
tuple<env_stack_impl_t *, default_delete<env_stack_impl_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<env_stack_impl_t *, default_delete<env_stack_impl_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<env_stack_impl_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<env_stack_impl_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &&>	tuple<_Elements...>
tuple_element<0UL, tuple<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &&>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<env_universal_t *, default_delete<env_universal_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<env_universal_t *, default_delete<env_universal_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<env_universal_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<env_universal_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
_Sp_counted_ptr_inplace<env_scoped_impl_t, allocator<env_scoped_impl_t>, _S_atomic>	_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>
__rebind<allocator<env_scoped_impl_t>, _Sp_counted_ptr_inplace<env_scoped_impl_t, allocator<env_scoped_impl_t>, _S_atomic>, void>	__rebind<_Tp, _Up, __void_t<other>>
allocator<_Sp_counted_ptr_inplace<env_scoped_impl_t, allocator<env_scoped_impl_t>, _S_atomic>>	allocator<_Tp>
rebind<_Sp_counted_ptr_inplace<env_scoped_impl_t, allocator<env_scoped_impl_t>, _S_atomic>>	rebind<_Tp1>
_Sp_counted_ptr_inplace<env_node_t, allocator<env_node_t>, _S_atomic>	_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>
__rebind<allocator<env_node_t>, _Sp_counted_ptr_inplace<env_node_t, allocator<env_node_t>, _S_atomic>, void>	__rebind<_Tp, _Up, __void_t<other>>
allocator<_Sp_counted_ptr_inplace<env_node_t, allocator<env_node_t>, _S_atomic>>	allocator<_Tp>
rebind<_Sp_counted_ptr_inplace<env_node_t, allocator<env_node_t>, _S_atomic>>	rebind<_Tp1>
_Sp_counted_ptr_inplace<null_terminated_array_t<char>, allocator<null_terminated_array_t<char>>, _S_atomic>	_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>
__rebind<allocator<null_terminated_array_t<char>>, _Sp_counted_ptr_inplace<null_terminated_array_t<char>, allocator<null_terminated_array_t<char>>, _S_atomic>, void>	__rebind<_Tp, _Up, __void_t<other>>
allocator<_Sp_counted_ptr_inplace<null_terminated_array_t<char>, allocator<null_terminated_array_t<char>>, _S_atomic>>	allocator<_Tp>
rebind<_Sp_counted_ptr_inplace<null_terminated_array_t<char>, allocator<null_terminated_array_t<char>>, _S_atomic>>	rebind<_Tp1>
_Sp_counted_ptr_inplace<const vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _S_atomic>	_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>
__rebind<allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _Sp_counted_ptr_inplace<const vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _S_atomic>, void>	__rebind<_Tp, _Up, __void_t<other>>
allocator<_Sp_counted_ptr_inplace<const vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _S_atomic>>	allocator<_Tp>
rebind<_Sp_counted_ptr_inplace<const vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _S_atomic>>	rebind<_Tp1>
__rebind<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, true>>, _Hash_node_base *, void>	__rebind<_Tp, _Up, __void_t<other>>
rebind<_Hash_node_base *>	rebind<_Tp1>
new_allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>>	new_allocator<_Tp>
new_allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, true>>	new_allocator<_Tp>
new_allocator<electric_var_t>	new_allocator<_Tp>
new_allocator<callback_data_t>	new_allocator<_Tp>
new_allocator<shared_ptr<env_node_t>>	new_allocator<_Tp>
new_allocator<_Sp_counted_ptr_inplace<const vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _S_atomic>>	new_allocator<_Tp>
new_allocator<null_terminated_array_t<char>>	new_allocator<_Tp>
new_allocator<_Sp_counted_ptr_inplace<null_terminated_array_t<char>, allocator<null_terminated_array_t<char>>, _S_atomic>>	new_allocator<_Tp>
new_allocator<env_node_t>	new_allocator<_Tp>
new_allocator<_Sp_counted_ptr_inplace<env_node_t, allocator<env_node_t>, _S_atomic>>	new_allocator<_Tp>
new_allocator<env_scoped_impl_t>	new_allocator<_Tp>
new_allocator<_Sp_counted_ptr_inplace<env_scoped_impl_t, allocator<env_scoped_impl_t>, _S_atomic>>	new_allocator<_Tp>
_Hash_node_value_base<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>>	_Hash_node_value_base<_Value>
conditional<false, __undefined, _Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, true>>	conditional<false, _Iftrue, _Iffalse>
is_void<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, true>>	is_void<_Tp>
_Impl	_Impl
conditional<false, __undefined, _Sp_counted_ptr_inplace<const vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _S_atomic>>	conditional<false, _Iftrue, _Iffalse>
is_void<_Sp_counted_ptr_inplace<const vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _S_atomic>>	is_void<_Tp>
_Impl	_Impl
conditional<false, __undefined, _Sp_counted_ptr_inplace<null_terminated_array_t<char>, allocator<null_terminated_array_t<char>>, _S_atomic>>	conditional<false, _Iftrue, _Iffalse>
is_void<_Sp_counted_ptr_inplace<null_terminated_array_t<char>, allocator<null_terminated_array_t<char>>, _S_atomic>>	is_void<_Tp>
_Impl	_Impl
conditional<false, __undefined, _Sp_counted_ptr_inplace<env_node_t, allocator<env_node_t>, _S_atomic>>	conditional<false, _Iftrue, _Iffalse>
is_void<_Sp_counted_ptr_inplace<env_node_t, allocator<env_node_t>, _S_atomic>>	is_void<_Tp>
_Impl	_Impl
conditional<false, __undefined, _Sp_counted_ptr_inplace<env_scoped_impl_t, allocator<env_scoped_impl_t>, _S_atomic>>	conditional<false, _Iftrue, _Iffalse>
is_void<_Sp_counted_ptr_inplace<env_scoped_impl_t, allocator<env_scoped_impl_t>, _S_atomic>>	is_void<_Tp>
_PCC<<expression>, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, false, true>, bool>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, false, true>, bool>	_PCC<<unnamed>, _T1, _T2>
__pair_base<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, false, true>, bool>	__pair_base<_U1, _U2>
remove_cv<const vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> *>	remove_cv<_Tp>
remove_const<const vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> *>	remove_const<_Tp>
remove_cv<const tuple<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &&>>	remove_cv<_Tp>
remove_const<const tuple<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &&>>	remove_const<const _Tp>
_TC<<expression>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &&>	_TC<<unnamed>, _Elements...>
_TC<value, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &&>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &&>	_Tuple_impl<_Idx, _Head>
remove_cv<tuple<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &&>>	remove_cv<_Tp>
remove_const<tuple<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &&>>	remove_const<_Tp>
remove_cv<env_node_t *>	remove_cv<_Tp>
remove_const<env_node_t *>	remove_const<_Tp>
remove_cv<const null_terminated_array_t<char> *>	remove_cv<_Tp>
remove_const<const null_terminated_array_t<char> *>	remove_const<_Tp>
remove_const<env_scoped_impl_t>	remove_const<_Tp>
remove_cv<env_scoped_impl_t>	remove_cv<_Tp>
__allocated_ptr<allocator<_Sp_counted_ptr_inplace<env_scoped_impl_t, allocator<env_scoped_impl_t>, _S_atomic>>>	__allocated_ptr<_Alloc>
allocator_traits<allocator<env_scoped_impl_t>>	allocator_traits<allocator<_Tp>>
_Sp_ebo_helper<0, allocator<env_scoped_impl_t>, true>	_Sp_ebo_helper<_Nm, _Tp, true>
remove_const<env_node_t>	remove_const<_Tp>
remove_cv<env_node_t>	remove_cv<_Tp>
__allocated_ptr<allocator<_Sp_counted_ptr_inplace<env_node_t, allocator<env_node_t>, _S_atomic>>>	__allocated_ptr<_Alloc>
allocator_traits<allocator<env_node_t>>	allocator_traits<allocator<_Tp>>
_Sp_ebo_helper<0, allocator<env_node_t>, true>	_Sp_ebo_helper<_Nm, _Tp, true>
remove_const<null_terminated_array_t<char>>	remove_const<_Tp>
remove_cv<null_terminated_array_t<char>>	remove_cv<_Tp>
__allocated_ptr<allocator<_Sp_counted_ptr_inplace<null_terminated_array_t<char>, allocator<null_terminated_array_t<char>>, _S_atomic>>>	__allocated_ptr<_Alloc>
allocator_traits<allocator<null_terminated_array_t<char>>>	allocator_traits<allocator<_Tp>>
_Sp_ebo_helper<0, allocator<null_terminated_array_t<char>>, true>	_Sp_ebo_helper<_Nm, _Tp, true>
remove_const<const vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	remove_const<const _Tp>
remove_cv<const vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	remove_cv<_Tp>
__allocated_ptr<allocator<_Sp_counted_ptr_inplace<const vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _S_atomic>>>	__allocated_ptr<_Alloc>
_Sp_alloc_shared_tag<allocator<null_terminated_array_t<char>>>	_Sp_alloc_shared_tag<_Alloc>
remove_reference<vector<basic_string<char, char_traits<char>, allocator<char>>, allocator<basic_string<char, char_traits<char>, allocator<char>>>> &>	remove_reference<_Tp &>
_Sp_alloc_shared_tag<allocator<env_node_t>>	_Sp_alloc_shared_tag<_Alloc>
remove_reference<const bool &>	remove_reference<_Tp &>
_Sp_alloc_shared_tag<allocator<env_scoped_impl_t>>	_Sp_alloc_shared_tag<_Alloc>
remove_reference<shared_ptr<env_node_t>>	remove_reference<_Tp>
remove_reference<const shared_ptr<env_node_t> &>	remove_reference<_Tp &>
__iterator_traits<_Rb_tree_const_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
remove_reference<shared_ptr<env_scoped_impl_t> &>	remove_reference<_Tp &>
remove_reference<shared_ptr<const null_terminated_array_t<char>> &>	remove_reference<_Tp &>
remove_reference<shared_ptr<null_terminated_array_t<char>> &>	remove_reference<_Tp &>
move_iterator<basic_string<char, char_traits<char>, allocator<char>> *>	move_iterator<_Iterator>
__decay_and_strip<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &>	__decay_and_strip<_Tp>
__strip_reference_wrapper<env_var_t>	__strip_reference_wrapper<_Tp>
__decay_and_strip<env_var_t>	__decay_and_strip<_Tp>
remove_reference<env_var_t>	remove_reference<_Tp>
remove_reference<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>>	remove_reference<_Tp>
iterator_traits<shared_ptr<env_node_t> *>	iterator_traits<_Tp *>
remove_reference<default_delete<env_stack_impl_t>>	remove_reference<_Tp>
remove_reference<env_stack_impl_t *&>	remove_reference<_Tp &>
remove_reference<event_t &>	remove_reference<_Tp &>
_Iter_comp_val<lambda [] type at line 148960, col. 39>	_Iter_comp_val<_Compare>
unique_ptr<env_universal_t, default_delete<env_universal_t>>	unique_ptr<_Tp, _Dp>
move_iterator<__normal_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	move_iterator<_Iterator>
_Hashtable_ebo_helper<0, allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, true>>, true>	_Hashtable_ebo_helper<_Nm, _Tp, true>
remove_reference<vector<int, allocator<int>> &>	remove_reference<_Tp &>
initializer_list<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>>	initializer_list<_E>
tuple_element<0UL, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>>	tuple_element<0UL, pair<_Tp1, _Tp2>>
remove_reference<const pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t> &>	remove_reference<_Tp &>
remove_reference<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t> &>	remove_reference<_Tp &>
iterator_traits<__normal_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	iterator_traits<_Iterator>
is_convertible<pointer, env_universal_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, env_universal_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, env_universal_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, env_universal_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__uniq_ptr_impl<env_universal_t, default_delete<env_universal_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<env_universal_t, default_delete<env_universal_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
conditional<true, basic_string<char, char_traits<char>, allocator<char>> &&, basic_string<char, char_traits<char>, allocator<char>> &>	conditional<_Cond, _Iftrue, _Iffalse>
iterator_traits<basic_string<char, char_traits<char>, allocator<char>> *>	iterator_traits<_Tp *>
allocator_traits<allocator<_Sp_counted_ptr_inplace<const vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _S_atomic>>>	allocator_traits<allocator<_Tp>>
allocator_traits<allocator<_Sp_counted_ptr_inplace<null_terminated_array_t<char>, allocator<null_terminated_array_t<char>>, _S_atomic>>>	allocator_traits<allocator<_Tp>>
allocator_traits<allocator<_Sp_counted_ptr_inplace<env_node_t, allocator<env_node_t>, _S_atomic>>>	allocator_traits<allocator<_Tp>>
allocator_traits<allocator<_Sp_counted_ptr_inplace<env_scoped_impl_t, allocator<env_scoped_impl_t>, _S_atomic>>>	allocator_traits<allocator<_Tp>>
_Head_base<0UL, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &&, false>	_Head_base<_Idx, _Head, false>
_Tuple_impl<1UL, default_delete<env_universal_t>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<0UL, env_universal_t *, default_delete<env_universal_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_Tuple_impl<0UL, env_stack_impl_t *, default_delete<env_stack_impl_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_Tuple_impl<1UL, default_delete<env_stack_impl_t>>	_Tuple_impl<_Idx, _Head>
_TC2<_Dummy>	_TC2<_Dummy>
_TC2<_Dummy>	_TC2<_Dummy>
is_same<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, false, true>, _U1>	is_same<<unnamed>, <unnamed>>
pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, false, true>, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, false, true>>	pair<_T1, _T2>
pair<_Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, false, true>, _Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, false, true>>	pair<_T1, _T2>
__aligned_buffer<env_scoped_impl_t>	__aligned_buffer<_Tp>
__aligned_buffer<env_node_t>	__aligned_buffer<_Tp>
__aligned_buffer<null_terminated_array_t<char>>	__aligned_buffer<_Tp>
__aligned_buffer<const vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	__aligned_buffer<_Tp>
__aligned_buffer<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>>	__aligned_buffer<_Tp>
_TC<value, env_universal_t *, default_delete<env_universal_t>>	_TC<<unnamed>, _Elements...>
_TC<true, env_universal_t *, default_delete<env_universal_t>>	_TC<<unnamed>, _Elements...>
_TC<value, env_stack_impl_t *, default_delete<env_stack_impl_t>>	_TC<<unnamed>, _Elements...>
_TC<true, env_stack_impl_t *, default_delete<env_stack_impl_t>>	_TC<<unnamed>, _Elements...>
__not_alloc_shared_tag<integral_constant<bool, false>>	__not_alloc_shared_tag<_Tp>
__not_alloc_shared_tag<_Sp_alloc_shared_tag<allocator<null_terminated_array_t<char>>>>	__not_alloc_shared_tag<_Sp_alloc_shared_tag<_Tp>>
is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, true> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, true> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, true> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, true> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, true> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, true> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
_Equal_helper<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, unsigned long, true>	_Equal_helper<_Key, _Value, _ExtractKey, _Equal, _HashCodeType, true>
__normal_iterator<basic_string<char, char_traits<char>, allocator<char>> *, vector<basic_string<char, char_traits<char>, allocator<char>>, allocator<basic_string<char, char_traits<char>, allocator<char>>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<basic_string<char, char_traits<char>, allocator<char>> *, vector<basic_string<char, char_traits<char>, allocator<char>>, allocator<basic_string<char, char_traits<char>, allocator<char>>>>>>	reverse_iterator<_Iterator>
__has_esft_base<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<env_stack_t, void>	__has_esft_base<_Yp, <unnamed>>
enable_if<value, void>	enable_if<<unnamed>, _Tp>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, _Pair &&>	is_constructible<_Tp, _Args...>
is_same<callback_data_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<callback_data_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<callback_data_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<callback_data_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<callback_data_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<callback_data_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
iterator_traits<const callback_data_t *>	iterator_traits<const _Tp *>
iterator_traits<const shared_ptr<env_node_t> *>	iterator_traits<const _Tp *>
is_same<electric_var_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<electric_var_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<electric_var_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<electric_var_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<electric_var_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<electric_var_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<env_var_t, _U2>	is_same<<unnamed>, <unnamed>>
__has_esft_base<env_node_t, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
is_array<const null_terminated_array_t<char>>	is_array<<unnamed>>
is_void<const null_terminated_array_t<char>>	is_void<_Tp>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
__shared_ptr_access<environment_t, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
__shared_ptr_access<null_terminated_array_t<char>, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
enable_shared_from_this<null_terminated_array_t<char>>	enable_shared_from_this<_Tp>
__enable_shared_from_this<null_terminated_array_t<char>, _S_atomic>	__enable_shared_from_this<_Tp, _Lp>
__has_esft_base<env_scoped_impl_t, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
remove_reference<__shared_ptr<const vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _S_atomic> &>	remove_reference<_Tp &>
remove_reference<lambda [] type at line 148960, col. 39 &>	remove_reference<_Tp &>
__iterator_traits<__normal_iterator<const electric_var_t *, vector<electric_var_t, allocator<electric_var_t>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
remove_reference<event_t>	remove_reference<_Tp>
remove_reference<__shared_ptr<env_node_t, _S_atomic> &>	remove_reference<_Tp &>
__is_move_insertable<allocator<basic_string<char, char_traits<char>, allocator<char>>>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<basic_string<char, char_traits<char>, allocator<char>>>	is_move_constructible<_Tp>
__is_move_constructible_impl<basic_string<char, char_traits<char>, allocator<char>>, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<basic_string<char, char_traits<char>, allocator<char>>, basic_string<char, char_traits<char>, allocator<char>> &&>	is_constructible<_Tp, _Args...>
remove_reference<__shared_ptr<const null_terminated_array_t<char>, _S_atomic> &>	remove_reference<_Tp &>
__is_referenceable<basic_string<char, char_traits<char>, allocator<char>>>	__is_referenceable<_Tp>
is_array<null_terminated_array_t<char>>	is_array<<unnamed>>
is_void<null_terminated_array_t<char>>	is_void<_Tp>
__has_esft_base<null_terminated_array_t<char>, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
is_array<environment_t>	is_array<<unnamed>>
is_void<environment_t>	is_void<_Tp>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
is_same<env_var_t, _U2>	is_same<<unnamed>, <unnamed>>
is_same<env_var_t, _U2>	is_same<<unnamed>, <unnamed>>
is_same<env_var_t, _U2>	is_same<<unnamed>, <unnamed>>
is_same<env_var_t, _U2>	is_same<<unnamed>, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
aligned_storage<8UL, 8UL>	aligned_storage<_Len, _Align>
type	type
aligned_storage<144UL, 8UL>	aligned_storage<_Len, _Align>
type	type
is_same<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, false, true>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, false, true>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, false, true>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, false, true>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<tuple<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &&>, tuple<_UElements...>>	is_same<<unnamed>, <unnamed>>
is_same<tuple<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &&>, tuple<_UElements...>>	is_same<<unnamed>, <unnamed>>
is_same<tuple<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &&>, tuple<_UElements...>>	is_same<<unnamed>, <unnamed>>
is_same<tuple<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &&>, tuple<_UElements...>>	is_same<<unnamed>, <unnamed>>
is_same<tuple<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &&>, tuple<_UElements...>>	is_same<<unnamed>, <unnamed>>
is_same<tuple<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &&>, tuple<_UElements...>>	is_same<<unnamed>, <unnamed>>
is_same<tuple<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &&>, tuple<_UElements...>>	is_same<<unnamed>, <unnamed>>
is_same<tuple<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &&>, tuple<_UElements...>>	is_same<<unnamed>, <unnamed>>
_Head_base<1UL, default_delete<env_stack_impl_t>, true>	_Head_base<_Idx, _Head, true>
_Head_base<0UL, env_stack_impl_t *, false>	_Head_base<_Idx, _Head, false>
_Head_base<0UL, env_universal_t *, false>	_Head_base<_Idx, _Head, false>
_Head_base<1UL, default_delete<env_universal_t>, true>	_Head_base<_Idx, _Head, true>
is_reference<basic_string<char, char_traits<char>, allocator<char>> &>	is_reference<_Tp>
remove_reference<tuple<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &&>>	remove_reference<_Tp>
iterator_traits<callback_data_t *>	iterator_traits<_Tp *>
remove_reference<const _Hashtable<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>> &>	remove_reference<_Tp &>
__iterator_traits<move_iterator<__normal_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
__iterator_traits<__normal_iterator<int *, vector<int, allocator<int>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
__is_move_iterator<int *>	__is_move_iterator<_Tp>
is_assignable<int &, int &>	is_assignable<_Tp, _Up>
remove_reference<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, false, true>>	remove_reference<_Tp>
__strip_reference_wrapper<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, false, true>>	__strip_reference_wrapper<_Tp>
__decay_and_strip<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, false, true>>	__decay_and_strip<_Tp>
__is_move_iterator<const electric_var_t *>	__is_move_iterator<_Tp>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
struct <unnamed>	struct <unnamed>
struct <unnamed>	struct <unnamed>
iterator_traits<electric_var_t *>	iterator_traits<_Tp *>
__is_pointer<const electric_var_t *>	__is_pointer<_Tp *>
__is_pointer<electric_var_t *>	__is_pointer<_Tp *>
__are_same<electric_var_t, electric_var_t>	__are_same<_Tp, _Tp>
remove_reference<const vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> *&>	remove_reference<_Tp &>
remove_reference<allocator<int> &>	remove_reference<_Tp &>
pointer_traits<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, true> *>	pointer_traits<_Tp *>
_Sp_counted_ptr<env_stack_t *, _S_atomic>	_Sp_counted_ptr<_Ptr, _Lp>
move_iterator<event_t *>	move_iterator<_Iterator>
__is_move_insertable<allocator<event_t>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<event_t>	is_move_constructible<_Tp>
__is_move_constructible_impl<event_t, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<event_t, event_t &&>	is_constructible<_Tp, _Args...>
remove_reference<env_node_t *&>	remove_reference<_Tp &>
move_iterator<shared_ptr<env_node_t> *>	move_iterator<_Iterator>
__is_move_insertable<allocator<shared_ptr<env_node_t>>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<shared_ptr<env_node_t>>	is_move_constructible<_Tp>
__is_move_constructible_impl<shared_ptr<env_node_t>, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<shared_ptr<env_node_t>, shared_ptr<env_node_t> &&>	is_constructible<_Tp, _Args...>
__iterator_traits<move_iterator<basic_string<char, char_traits<char>, allocator<char>> *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<basic_string<char, char_traits<char>, allocator<char>> &, basic_string<char, char_traits<char>, allocator<char>> &&>	is_assignable<_Tp, _Up>
remove_reference<const null_terminated_array_t<char> *&>	remove_reference<_Tp &>
is_assignable<electric_var_t &, const electric_var_t &>	is_assignable<_Tp, _Up>
__is_referenceable<shared_ptr<env_node_t>>	__is_referenceable<_Tp>
conditional<true, shared_ptr<env_node_t> &&, shared_ptr<env_node_t> &>	conditional<_Cond, _Iftrue, _Iffalse>
__is_referenceable<event_t>	__is_referenceable<_Tp>
conditional<true, event_t &&, event_t &>	conditional<_Cond, _Iftrue, _Iffalse>
is_move_assignable<electric_var_t>	is_move_assignable<_Tp>
is_copy_assignable<electric_var_t>	is_copy_assignable<_Tp>
conditional<false, is_move_assignable<electric_var_t>, is_copy_assignable<electric_var_t>>	conditional<false, _Iftrue, _Iffalse>
is_reference<event_t &>	is_reference<_Tp>
is_reference<shared_ptr<env_node_t> &>	is_reference<_Tp>
__iterator_traits<move_iterator<event_t *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<event_t &, event_t &&>	is_assignable<_Tp, _Up>
__iterator_traits<move_iterator<shared_ptr<env_node_t> *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<shared_ptr<env_node_t> &, shared_ptr<env_node_t> &&>	is_assignable<_Tp, _Up>
__is_move_iterator<move_iterator<__normal_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	__is_move_iterator<move_iterator<_Iterator>>
__is_copy_assignable_impl<electric_var_t, true>	__is_copy_assignable_impl<_Tp, true>
remove_reference<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &&>	remove_reference<_Tp &&>
__is_referenceable<electric_var_t>	__is_referenceable<_Tp>
function<..(..)>	function<..(..)>
pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>	pair<_T1, _T2>
allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>>	allocator<_Tp>
_Insert_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>>	_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
_Insert<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, false>	_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, false>
function<..(..)>	function<..(..)>
pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>	pair<_T1, _T2>
allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>>	allocator<_Tp>
_Insert_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>>	_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
_Insert<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, false>	_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, false>
_Hash_code_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, _Select1st, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, true>	_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Default_ranged_hash, true>
_Hashtable<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>>	_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
__hash_code_base_access	__hash_code_base_access
_Hash_code_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, _Select1st, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, true>	_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Default_ranged_hash, true>
_Hashtable<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>>	_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
__hash_code_base_access	__hash_code_base_access
allocator<line_t>	allocator<_Tp>
_Vector_base<line_t, allocator<line_t>>	_Vector_base<_Tp, _Alloc>
vector<line_t, allocator<line_t>>	vector<_Tp, _Alloc>
allocator<highlighted_char_t>	allocator<_Tp>
_Vector_base<highlighted_char_t, allocator<highlighted_char_t>>	_Vector_base<_Tp, _Alloc>
vector<highlighted_char_t, allocator<highlighted_char_t>>	vector<_Tp, _Alloc>
allocator<rgb_color_t>	allocator<_Tp>
vector<rgb_color_t, allocator<rgb_color_t>>	vector<_Tp, _Alloc>
allocator<prompt_cache_entry_t>	allocator<_Tp>
_List_base<prompt_cache_entry_t, allocator<prompt_cache_entry_t>>	_List_base<_Tp, _Alloc>
list<prompt_cache_entry_t, allocator<prompt_cache_entry_t>>	list<_Tp, _Alloc>
maybe_t<cursor_t>	maybe_t<T>
__normal_iterator<const line_t *, vector<line_t, allocator<line_t>>>	__normal_iterator<_Iterator, _Container>
__normal_iterator<line_t *, vector<line_t, allocator<line_t>>>	__normal_iterator<_Iterator, _Container>
allocator_traits<allocator<line_t>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<line_t>, line_t>	__alloc_traits<_Alloc, <unnamed>>
iterator_traits<line_t *>	iterator_traits<_Tp *>
__normal_iterator<const highlighted_char_t *, vector<highlighted_char_t, allocator<highlighted_char_t>>>	__normal_iterator<_Iterator, _Container>
__normal_iterator<highlighted_char_t *, vector<highlighted_char_t, allocator<highlighted_char_t>>>	__normal_iterator<_Iterator, _Container>
allocator_traits<allocator<highlighted_char_t>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<highlighted_char_t>, highlighted_char_t>	__alloc_traits<_Alloc, <unnamed>>
default_delete<const var_dispatch_table_t>	default_delete<_Tp>
unique_ptr<const var_dispatch_table_t, default_delete<const var_dispatch_table_t>>	unique_ptr<_Tp, _Dp>
latch_t<const var_dispatch_table_t>	latch_t<T>
unordered_map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>>>	unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
unordered_map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>>>	unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
default_delete<var_dispatch_table_t>	default_delete<_Tp>
unique_ptr<var_dispatch_table_t, default_delete<var_dispatch_table_t>>	unique_ptr<_Tp, _Dp>
__uniq_ptr_impl<var_dispatch_table_t, default_delete<var_dispatch_table_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<var_dispatch_table_t, default_delete<var_dispatch_table_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
remove_reference<unique_ptr<var_dispatch_table_t, default_delete<var_dispatch_table_t>> &>	remove_reference<_Tp &>
_Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>	_Node_const_iterator<_Value, __constant_iterators, __cache>
_Hashtable_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Hashtable_traits<true, false, true>>	_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>
_Node_iterator_base<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true>	_Node_iterator_base<_Value, _Cache_hash_code>
_Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>	_Node_const_iterator<_Value, __constant_iterators, __cache>
_Hashtable_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Hashtable_traits<true, false, true>>	_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>
_Node_iterator_base<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true>	_Node_iterator_base<_Value, _Cache_hash_code>
_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>	_Node_iterator<_Value, __constant_iterators, __cache>
pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>, bool>	pair<_T1, _T2>
remove_reference<function<..(..)> &>	remove_reference<_Tp &>
_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>	_Node_iterator<_Value, __constant_iterators, __cache>
pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>, bool>	pair<_T1, _T2>
remove_reference<function<..(..)> &>	remove_reference<_Tp &>
_PCC<<expression>, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>, bool>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>, bool>	_PCC<<unnamed>, _T1, _T2>
__pair_base<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>, bool>	__pair_base<_U1, _U2>
_PCC<<expression>, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>, bool>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>, bool>	_PCC<<unnamed>, _T1, _T2>
__pair_base<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>, bool>	__pair_base<_U1, _U2>
_PCC<<expression>, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>	_PCC<<unnamed>, _T1, _T2>
__pair_base<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>	__pair_base<_U1, _U2>
_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true>	_Hash_node<_Value, true>
_PCC<<expression>, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>	_PCC<<unnamed>, _T1, _T2>
__pair_base<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>	__pair_base<_U1, _U2>
_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true>	_Hash_node<_Value, true>
is_convertible<pointer, var_dispatch_table_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, var_dispatch_table_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, var_dispatch_table_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, var_dispatch_table_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
_Callable<type, type>	_Callable<_Func, _Res2>
_Callable<_Functor, type>	_Callable<_Func, _Res2>
_Maybe_unary_or_binary_function<void, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &, env_stack_t &>	_Maybe_unary_or_binary_function<_Res, _T1, _T2>
_Local_const_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, _Select1st, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, false, true>	_Local_const_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>
_Local_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, _Select1st, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, false, true>	_Local_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>
allocator_traits<allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>>>	allocator_traits<allocator<_Tp>>
tuple_element<1UL, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>>	tuple_element<1UL, pair<_Tp1, _Tp2>>
_Map_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, true>	_Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
_Callable<type, type>	_Callable<_Func, _Res2>
_Callable<_Functor, type>	_Callable<_Func, _Res2>
_Maybe_unary_or_binary_function<void, env_stack_t &>	_Maybe_unary_or_binary_function<_Res, _T1>
_Local_const_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, _Select1st, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, false, true>	_Local_const_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>
_Local_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, _Select1st, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, false, true>	_Local_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>
allocator_traits<allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>>>	allocator_traits<allocator<_Tp>>
tuple_element<1UL, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>>	tuple_element<1UL, pair<_Tp1, _Tp2>>
_Map_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, true>	_Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
is_convertible<pointer, const var_dispatch_table_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, const var_dispatch_table_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, const var_dispatch_table_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, const var_dispatch_table_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__uniq_ptr_impl<const var_dispatch_table_t, default_delete<const var_dispatch_table_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<const var_dispatch_table_t, default_delete<const var_dispatch_table_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
is_same<highlighted_char_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<highlighted_char_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<highlighted_char_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<highlighted_char_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<highlighted_char_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<highlighted_char_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
iterator_traits<highlighted_char_t *>	iterator_traits<_Tp *>
iterator_traits<const highlighted_char_t *>	iterator_traits<const _Tp *>
is_same<line_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<line_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<line_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<line_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<line_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<line_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
iterator_traits<const line_t *>	iterator_traits<const _Tp *>
_Temporary_value	_Temporary_value
reverse_iterator<__normal_iterator<highlighted_char_t *, vector<highlighted_char_t, allocator<highlighted_char_t>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<const highlighted_char_t *, vector<highlighted_char_t, allocator<highlighted_char_t>>>>	reverse_iterator<_Iterator>
rebind<highlighted_char_t>	rebind<_Tp>
_Temporary_value	_Temporary_value
reverse_iterator<__normal_iterator<line_t *, vector<line_t, allocator<line_t>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<const line_t *, vector<line_t, allocator<line_t>>>>	reverse_iterator<_Iterator>
rebind<line_t>	rebind<_Tp>
maybe_impl_t<cursor_t>	maybe_impl_t<T>
_List_node<prompt_cache_entry_t>	_List_node<_Tp>
_List_iterator<prompt_cache_entry_t>	_List_iterator<_Tp>
reverse_iterator<_List_iterator<prompt_cache_entry_t>>	reverse_iterator<_Iterator>
_List_const_iterator<prompt_cache_entry_t>	_List_const_iterator<_Tp>
reverse_iterator<_List_const_iterator<prompt_cache_entry_t>>	reverse_iterator<_Iterator>
allocator_traits<allocator<prompt_cache_entry_t>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<prompt_cache_entry_t>, prompt_cache_entry_t>	__alloc_traits<_Alloc, <unnamed>>
allocator<_List_node<prompt_cache_entry_t>>	allocator<_Tp>
__alloc_traits<allocator<_List_node<prompt_cache_entry_t>>, _List_node<prompt_cache_entry_t>>	__alloc_traits<_Alloc, <unnamed>>
rebind<_List_node<prompt_cache_entry_t>>	rebind<_Tp>
rebind<prompt_cache_entry_t>	rebind<_Tp>
_List_impl	_List_impl
pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	pair<_T1, _T2>
allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	allocator<_Tp>
map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	map<_Key, _Tp, _Compare, _Alloc>
_Rb_tree_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	_Rb_tree_const_iterator<_Tp>
reverse_iterator<_Rb_tree_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	reverse_iterator<_Iterator>
_Select1st<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	_Select1st<_Pair>
_Rb_tree<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _Select1st<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>, less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>
_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	_Rb_tree_iterator<_Tp>
reverse_iterator<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	reverse_iterator<_Iterator>
allocator_traits<allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	__alloc_traits<_Alloc, <unnamed>>
rebind<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	rebind<_Tp>
pair<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>, bool>	pair<_T1, _T2>
is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, value_type>	is_same<<unnamed>, <unnamed>>
_Alloc_node	_Alloc_node
_Reuse_or_alloc_node	_Reuse_or_alloc_node
_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	_Rb_tree_node<_Val>
allocator<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	allocator<_Tp>
__alloc_traits<allocator<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>, _Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	__alloc_traits<_Alloc, <unnamed>>
rebind<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	rebind<_Tp>
_Rb_tree_impl<less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>	_Rb_tree_impl<_Key_compare, <unnamed>>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true>>	allocator<_Tp>
_ReuseOrAllocNode<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true>>>	_ReuseOrAllocNode<_NodeAlloc>
_Equality<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, true>	_Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
_Rehash_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, integral_constant<bool, true>>	_Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true_type>
conditional<true, pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>, bool>, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>>	conditional<_Cond, _Iftrue, _Iffalse>
_Hashtable_alloc<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true>>>	_Hashtable_alloc<_NodeAlloc>
__alloc_traits<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true>>, _Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true>>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true>>>	allocator_traits<allocator<_Tp>>
rebind<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true>>	rebind<_Tp1>
__rebind<allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>>, _Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true>, void>	__rebind<_Tp, _Up, __void_t<other>>
allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true>>	allocator<_Tp>
_ReuseOrAllocNode<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true>>>	_ReuseOrAllocNode<_NodeAlloc>
_Equality<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, true>	_Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
_Rehash_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, integral_constant<bool, true>>	_Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true_type>
conditional<true, pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>, bool>, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>>	conditional<_Cond, _Iftrue, _Iffalse>
_Hashtable_alloc<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true>>>	_Hashtable_alloc<_NodeAlloc>
__alloc_traits<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true>>, _Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true>>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true>>>	allocator_traits<allocator<_Tp>>
rebind<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true>>	rebind<_Tp1>
__rebind<allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>>, _Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true>, void>	__rebind<_Tp, _Up, __void_t<other>>
_AllocNode<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true>>>	_AllocNode<_NodeAlloc>
_AllocNode<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true>>>	_AllocNode<_NodeAlloc>
_Base_manager<..(*)(..)>	_Base_manager<_Functor>
_Base_manager<..(*)(..)>	_Base_manager<_Functor>
_Base_manager<..(*)(..)>	_Base_manager<_Functor>
__is_empty_non_tuple<default_delete<const var_dispatch_table_t>>	__is_empty_non_tuple<_Tp>
is_empty<default_delete<const var_dispatch_table_t>>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<const var_dispatch_table_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<const var_dispatch_table_t *>	__is_empty_non_tuple<_Tp>
is_empty<const var_dispatch_table_t *>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<const var_dispatch_table_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<var_dispatch_table_t>>	__is_empty_non_tuple<_Tp>
is_empty<default_delete<var_dispatch_table_t>>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<var_dispatch_table_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<var_dispatch_table_t *>	__is_empty_non_tuple<_Tp>
is_empty<var_dispatch_table_t *>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<var_dispatch_table_t *>>	conditional<false, _Iftrue, _Iffalse>
new_allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	new_allocator<_Tp>
new_allocator<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	new_allocator<_Tp>
new_allocator<highlighted_char_t>	new_allocator<_Tp>
new_allocator<line_t>	new_allocator<_Tp>
new_allocator<prompt_cache_entry_t>	new_allocator<_Tp>
new_allocator<_List_node<prompt_cache_entry_t>>	new_allocator<_Tp>
new_allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>>	new_allocator<_Tp>
new_allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>>	new_allocator<_Tp>
new_allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true>>	new_allocator<_Tp>
new_allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true>>	new_allocator<_Tp>
allocator_traits<allocator<_List_node<prompt_cache_entry_t>>>	allocator_traits<allocator<_Tp>>
__rebind<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true>>, _Hash_node_base *, void>	__rebind<_Tp, _Up, __void_t<other>>
rebind<_Hash_node_base *>	rebind<_Tp1>
__rebind<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true>>, _Hash_node_base *, void>	__rebind<_Tp, _Up, __void_t<other>>
rebind<_Hash_node_base *>	rebind<_Tp1>
_Hash_node_value_base<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>>	_Hash_node_value_base<_Value>
conditional<false, __undefined, _Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true>>	conditional<false, _Iftrue, _Iffalse>
is_void<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true>>	is_void<_Tp>
_Hash_node_value_base<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>>	_Hash_node_value_base<_Value>
conditional<false, __undefined, _Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true>>	conditional<false, _Iftrue, _Iffalse>
is_void<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true>>	is_void<_Tp>
tuple<const var_dispatch_table_t *, default_delete<const var_dispatch_table_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<const var_dispatch_table_t *, default_delete<const var_dispatch_table_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<const var_dispatch_table_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<const var_dispatch_table_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<var_dispatch_table_t *, default_delete<var_dispatch_table_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<var_dispatch_table_t *, default_delete<var_dispatch_table_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<var_dispatch_table_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<var_dispatch_table_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
remove_cv<..(*)(..)>	remove_cv<_Tp>
remove_const<..(*)(..)>	remove_const<_Tp>
remove_cv<..(*)(..)>	remove_cv<_Tp>
remove_const<..(*)(..)>	remove_const<_Tp>
remove_reference<function<..(..)>>	remove_reference<_Tp>
remove_reference<function<..(..)>>	remove_reference<_Tp>
remove_reference<env_stack_t &>	remove_reference<_Tp &>
_Hashtable_ebo_helper<0, allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true>>, true>	_Hashtable_ebo_helper<_Nm, _Tp, true>
_Hashtable_ebo_helper<0, allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true>>, true>	_Hashtable_ebo_helper<_Nm, _Tp, true>
remove_reference<var_dispatch_table_t *&>	remove_reference<_Tp &>
remove_reference<default_delete<var_dispatch_table_t>>	remove_reference<_Tp>
_Function_handler<..(..), ..(*)(..)>	_Function_handler<..(..), _Functor>
remove_reference<..(*&)(..)>	remove_reference<_Tp &>
_Function_handler<..(..), ..(*)(..)>	_Function_handler<..(..), _Functor>
remove_reference<..(*&)(..)>	remove_reference<_Tp &>
_Function_handler<..(..), ..(*)(..)>	_Function_handler<..(..), _Functor>
remove_reference<..(*&)(..)>	remove_reference<_Tp &>
remove_reference<highlighted_char_t &>	remove_reference<_Tp &>
remove_reference<vector<highlighted_char_t, allocator<highlighted_char_t>> &>	remove_reference<_Tp &>
remove_reference<line_t &>	remove_reference<_Tp &>
initializer_list<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>>	initializer_list<_E>
initializer_list<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>>	initializer_list<_E>
_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, false, true>	_Node_iterator<_Value, __constant_iterators, __cache>
pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, false, true>, bool>	pair<_T1, _T2>
conditional<true, pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, false, true>, bool>, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, false, true>>	conditional<_Cond, _Iftrue, _Iffalse>
tuple_element<0UL, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>>	tuple_element<0UL, pair<_Tp1, _Tp2>>
remove_reference<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>> &>	remove_reference<_Tp &>
tuple_element<0UL, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>>	tuple_element<0UL, pair<_Tp1, _Tp2>>
remove_reference<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>> &>	remove_reference<_Tp &>
initializer_list<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>>	initializer_list<_E>
_TC<value, var_dispatch_table_t *, default_delete<var_dispatch_table_t>>	_TC<<unnamed>, _Elements...>
_TC<true, var_dispatch_table_t *, default_delete<var_dispatch_table_t>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, var_dispatch_table_t *, default_delete<var_dispatch_table_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_TC<value, const var_dispatch_table_t *, default_delete<const var_dispatch_table_t>>	_TC<<unnamed>, _Elements...>
_TC<true, const var_dispatch_table_t *, default_delete<const var_dispatch_table_t>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, const var_dispatch_table_t *, default_delete<const var_dispatch_table_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
__aligned_buffer<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>>	__aligned_buffer<_Tp>
__aligned_buffer<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>>	__aligned_buffer<_Tp>
_AllocNode<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, true>>>	_AllocNode<_NodeAlloc>
_ReuseOrAllocNode<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, true>>>	_ReuseOrAllocNode<_NodeAlloc>
is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
_Equal_helper<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, unsigned long, true>	_Equal_helper<_Key, _Value, _ExtractKey, _Equal, _HashCodeType, true>
is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
_Equal_helper<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, unsigned long, true>	_Equal_helper<_Key, _Value, _ExtractKey, _Equal, _HashCodeType, true>
_Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, false, true>	_Node_const_iterator<_Value, __constant_iterators, __cache>
enable_if<value, void>	enable_if<<unnamed>, _Tp>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, _Pair &&>	is_constructible<_Tp, _Args...>
enable_if<value, void>	enable_if<<unnamed>, _Tp>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, _Pair &&>	is_constructible<_Tp, _Args...>
__alloc_traits<allocator<char_event_t *>, char_event_t *>	__alloc_traits<_Alloc, <unnamed>>
is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_List_node<prompt_cache_entry_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_List_node<prompt_cache_entry_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_List_node<prompt_cache_entry_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_List_node<prompt_cache_entry_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_List_node<prompt_cache_entry_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_List_node<prompt_cache_entry_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<prompt_cache_entry_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<prompt_cache_entry_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<prompt_cache_entry_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<prompt_cache_entry_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<prompt_cache_entry_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<prompt_cache_entry_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
__aligned_membuf<prompt_cache_entry_t>	__aligned_membuf<_Tp>
unary_function<env_stack_t &, void>	unary_function<_Arg, _Result>
_Callable<..(*)(..), void>	_Callable<_Func, _Res2>
_Callable<..(*)(..), void>	_Callable<_Func, _Res2>
_Callable<function<..(..)>, _Tp>	_Callable<_Func, _Res2>
binary_function<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &, env_stack_t &, void>	binary_function<_Arg1, _Arg2, _Result>
_Callable<..(*)(..), void>	_Callable<_Func, _Res2>
_Callable<function<..(..)>, _Tp>	_Callable<_Func, _Res2>
is_same<function<..(..)>, _U2>	is_same<<unnamed>, <unnamed>>
pair<_Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>, _Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>>	pair<_T1, _T2>
pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>>	pair<_T1, _T2>
pair<_Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>, _Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>>	pair<_T1, _T2>
pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>>	pair<_T1, _T2>
pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, false, true>, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, false, true>>	pair<_T1, _T2>
pair<_Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, false, true>, _Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, false, true>>	pair<_T1, _T2>
pair<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>, _Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	pair<_T1, _T2>
pair<_Rb_tree_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>, _Rb_tree_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>	pair<_T1, _T2>
is_same<function<..(..)>, _U2>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>, _U1>	is_same<<unnamed>, <unnamed>>
conditional<false, const pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>> &, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>> &>	conditional<false, _Iftrue, _Iffalse>
conditional<false, const pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>> *, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>> *>	conditional<false, _Iftrue, _Iffalse>
is_same<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>, _U1>	is_same<<unnamed>, <unnamed>>
conditional<false, const pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>> &, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>> &>	conditional<false, _Iftrue, _Iffalse>
conditional<false, const pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>> *, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>> *>	conditional<false, _Iftrue, _Iffalse>
__iterator_traits<__normal_iterator<const line_t *, vector<line_t, allocator<line_t>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
__iterator_traits<__normal_iterator<const highlighted_char_t *, vector<highlighted_char_t, allocator<highlighted_char_t>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
remove_reference<highlighted_char_t>	remove_reference<_Tp>
is_same<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<function<..(..)>, _U2>	is_same<<unnamed>, <unnamed>>
is_same<function<..(..)>, _U2>	is_same<<unnamed>, <unnamed>>
is_same<function<..(..)>, _U2>	is_same<<unnamed>, <unnamed>>
is_same<function<..(..)>, _U2>	is_same<<unnamed>, <unnamed>>
is_same<function<..(..)>, _U2>	is_same<<unnamed>, <unnamed>>
is_same<function<..(..)>, _U2>	is_same<<unnamed>, <unnamed>>
is_same<function<..(..)>, _U2>	is_same<<unnamed>, <unnamed>>
is_same<function<..(..)>, _U2>	is_same<<unnamed>, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Tp2	_Tp2
_Equal_helper<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, unsigned long, true>	_Equal_helper<_Key, _Value, _ExtractKey, _Equal, _HashCodeType, __cache_hash_code>
_Head_base<0UL, const var_dispatch_table_t *, false>	_Head_base<_Idx, _Head, false>
_Tuple_impl<1UL, default_delete<const var_dispatch_table_t>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<1UL, default_delete<var_dispatch_table_t>>	_Tuple_impl<_Idx, _Head>
_Head_base<1UL, default_delete<const var_dispatch_table_t>, true>	_Head_base<_Idx, _Head, true>
_Head_base<0UL, var_dispatch_table_t *, false>	_Head_base<_Idx, _Head, false>
_Head_base<1UL, default_delete<var_dispatch_table_t>, true>	_Head_base<_Idx, _Head, true>
remove_reference<const var_dispatch_table_t *&>	remove_reference<_Tp &>
remove_reference<_Vector_impl &>	remove_reference<_Tp &>
is_assignable<highlighted_char_t &, const highlighted_char_t &>	is_assignable<_Tp, _Up>
__iterator_traits<__normal_iterator<highlighted_char_t *, vector<highlighted_char_t, allocator<highlighted_char_t>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
__is_move_iterator<__normal_iterator<const highlighted_char_t *, vector<highlighted_char_t, allocator<highlighted_char_t>>>>	__is_move_iterator<_Tp>
__is_move_iterator<highlighted_char_t *>	__is_move_iterator<_Tp>
is_assignable<highlighted_char_t &, highlighted_char_t &>	is_assignable<_Tp, _Up>
move_iterator<line_t *>	move_iterator<_Iterator>
__is_move_insertable<allocator<line_t>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<line_t>	is_move_constructible<_Tp>
__is_move_constructible_impl<line_t, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<line_t, line_t &&>	is_constructible<_Tp, _Args...>
remove_reference<line_t>	remove_reference<_Tp>
conditional<true, line_t &&, line_t &>	conditional<_Cond, _Iftrue, _Iffalse>
is_copy_assignable<line_t>	is_copy_assignable<_Tp>
remove_reference<allocator<highlighted_char_t> &>	remove_reference<_Tp &>
__is_pointer<highlighted_char_t *>	__is_pointer<_Tp *>
__are_same<highlighted_char_t, highlighted_char_t>	__are_same<_Tp, _Tp>
__is_pointer<const highlighted_char_t *>	__is_pointer<_Tp *>
move_iterator<highlighted_char_t *>	move_iterator<_Iterator>
__is_move_insertable<allocator<highlighted_char_t>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<highlighted_char_t>	is_move_constructible<_Tp>
__is_move_constructible_impl<highlighted_char_t, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<highlighted_char_t, highlighted_char_t &&>	is_constructible<_Tp, _Args...>
__strip_reference_wrapper<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>>	__strip_reference_wrapper<_Tp>
__decay_and_strip<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>>	__decay_and_strip<_Tp>
remove_reference<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>>	remove_reference<_Tp>
__strip_reference_wrapper<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>>	__strip_reference_wrapper<_Tp>
__decay_and_strip<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>>	__decay_and_strip<_Tp>
remove_reference<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, false, true>>	remove_reference<_Tp>
__is_referenceable<highlighted_char_t>	__is_referenceable<_Tp>
conditional<true, highlighted_char_t &&, highlighted_char_t &>	conditional<_Cond, _Iftrue, _Iffalse>
__is_copy_assignable_impl<line_t, true>	__is_copy_assignable_impl<_Tp, true>
is_reference<line_t &>	is_reference<_Tp>
pointer_traits<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true> *>	pointer_traits<_Tp *>
pointer_traits<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true> *>	pointer_traits<_Tp *>
remove_reference<const highlighted_char_t &>	remove_reference<_Tp &>
is_move_assignable<highlighted_char_t>	is_move_assignable<_Tp>
is_copy_assignable<highlighted_char_t>	is_copy_assignable<_Tp>
conditional<false, is_move_assignable<highlighted_char_t>, is_copy_assignable<highlighted_char_t>>	conditional<false, _Iftrue, _Iffalse>
__iterator_traits<move_iterator<line_t *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<line_t &, line_t &&>	is_assignable<_Tp, _Up>
__is_move_iterator<__normal_iterator<const line_t *, vector<line_t, allocator<line_t>>>>	__is_move_iterator<_Tp>
is_assignable<line_t &, const line_t &>	is_assignable<_Tp, _Up>
__is_referenceable<line_t>	__is_referenceable<_Tp>
is_reference<highlighted_char_t &>	is_reference<_Tp>
__is_pointer<const line_t *>	__is_pointer<_Tp *>
__is_pointer<line_t *>	__is_pointer<_Tp *>
__are_same<line_t, line_t>	__are_same<_Tp, _Tp>
__iterator_traits<move_iterator<highlighted_char_t *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<highlighted_char_t &, highlighted_char_t &&>	is_assignable<_Tp, _Up>
__is_copy_assignable_impl<highlighted_char_t, true>	__is_copy_assignable_impl<_Tp, true>
__is_move_assignable_impl<highlighted_char_t, true>	__is_move_assignable_impl<_Tp, true>
conditional<true, is_move_assignable<highlighted_char_t>, is_copy_assignable<highlighted_char_t>>	conditional<_Cond, _Iftrue, _Iffalse>
remove_reference<const line_t &>	remove_reference<_Tp &>
remove_reference<..(*&)(..)>	remove_reference<_Tp &>
remove_reference<..(*&)(..)>	remove_reference<_Tp &>
reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	reference_wrapper<_Tp>
reference_wrapper<const env_var_t>	reference_wrapper<_Tp>
pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>>	pair<_T1, _T2>
remove_const<pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>>>	remove_const<_Tp>
remove_cv<pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>>>	remove_cv<_Tp>
remove_const<reference_wrapper<const env_var_t>>	remove_const<_Tp>
remove_cv<reference_wrapper<const env_var_t>>	remove_cv<_Tp>
remove_const<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	remove_const<_Tp>
remove_cv<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	remove_cv<_Tp>
default_delete<universal_notifier_named_pipe_t>	default_delete<_Tp>
tuple<universal_notifier_named_pipe_t *, default_delete<universal_notifier_named_pipe_t>>	tuple<_T1, _T2>
default_delete<universal_notifier_shmem_poller_t>	default_delete<_Tp>
tuple<universal_notifier_shmem_poller_t *, default_delete<universal_notifier_shmem_poller_t>>	tuple<_T1, _T2>
default_delete<universal_notifier_notifyd_t>	default_delete<_Tp>
tuple<universal_notifier_notifyd_t *, default_delete<universal_notifier_notifyd_t>>	tuple<_T1, _T2>
default_delete<universal_notifier_t>	default_delete<_Tp>
tuple<universal_notifier_t *, default_delete<universal_notifier_t>>	tuple<_T1, _T2>
pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, false, true>, bool>	pair<_T1, _T2>
is_convertible<pointer, universal_notifier_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, universal_notifier_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
is_convertible<pointer, universal_notifier_named_pipe_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, universal_notifier_named_pipe_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
is_convertible<pointer, universal_notifier_shmem_poller_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, universal_notifier_shmem_poller_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
is_convertible<pointer, universal_notifier_notifyd_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, universal_notifier_notifyd_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__is_empty_non_tuple<universal_notifier_named_pipe_t *>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<universal_notifier_named_pipe_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<universal_notifier_named_pipe_t>>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<universal_notifier_named_pipe_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<universal_notifier_shmem_poller_t *>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<universal_notifier_shmem_poller_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<universal_notifier_shmem_poller_t>>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<universal_notifier_shmem_poller_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<universal_notifier_notifyd_t *>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<universal_notifier_notifyd_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<universal_notifier_notifyd_t>>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<universal_notifier_notifyd_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<universal_notifier_t *>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<universal_notifier_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<universal_notifier_t>>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<universal_notifier_t>>>	conditional<false, _Iftrue, _Iffalse>
allocator<pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>>>	allocator<_Tp>
_Vector_base<pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>>, allocator<pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>>>>	_Vector_base<_Tp, _Alloc>
vector<pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>>, allocator<pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>>>>	vector<_Tp, _Alloc>
unique_ptr<universal_notifier_t, default_delete<universal_notifier_t>>	unique_ptr<_Tp, _Dp>
line_iterator_t<basic_string<char, char_traits<char>, allocator<char>>>	line_iterator_t<Collection>
maybe_t<unsigned char>	maybe_t<T>
__normal_iterator<pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>> *, vector<pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>>, allocator<pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>>>>>	__normal_iterator<_Iterator, _Container>
iterator_traits<pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>> *>	iterator_traits<_Tp *>
remove_reference<unordered_map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>>> &>	remove_reference<_Tp &>
__add_lvalue_reference_helper<universal_notifier_t, true>	__add_lvalue_reference_helper<_Tp, true>
unique_ptr<universal_notifier_notifyd_t, default_delete<universal_notifier_notifyd_t>>	unique_ptr<_Tp, _Dp>
unique_ptr<universal_notifier_shmem_poller_t, default_delete<universal_notifier_shmem_poller_t>>	unique_ptr<_Tp, _Dp>
unique_ptr<universal_notifier_named_pipe_t, default_delete<universal_notifier_named_pipe_t>>	unique_ptr<_Tp, _Dp>
__and_<is_convertible<pointer, universal_notifier_named_pipe_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, universal_notifier_named_pipe_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__uniq_ptr_impl<universal_notifier_named_pipe_t, default_delete<universal_notifier_named_pipe_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<universal_notifier_named_pipe_t, default_delete<universal_notifier_named_pipe_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
__and_<is_convertible<pointer, universal_notifier_shmem_poller_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, universal_notifier_shmem_poller_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__uniq_ptr_impl<universal_notifier_shmem_poller_t, default_delete<universal_notifier_shmem_poller_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<universal_notifier_shmem_poller_t, default_delete<universal_notifier_shmem_poller_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
__and_<is_convertible<pointer, universal_notifier_notifyd_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, universal_notifier_notifyd_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__uniq_ptr_impl<universal_notifier_notifyd_t, default_delete<universal_notifier_notifyd_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<universal_notifier_notifyd_t, default_delete<universal_notifier_notifyd_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
__is_referenceable<universal_notifier_t>	__is_referenceable<_Tp>
_Temporary_value	_Temporary_value
reverse_iterator<__normal_iterator<pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>> *, vector<pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>>, allocator<pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>>>>>>	reverse_iterator<_Iterator>
__normal_iterator<const pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>> *, vector<pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>>, allocator<pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>> *, vector<pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>>, allocator<pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>>>>>>	reverse_iterator<_Iterator>
allocator_traits<allocator<pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>>>, pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>>>	__alloc_traits<_Alloc, <unnamed>>
rebind<pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>>>	rebind<_Tp>
maybe_impl_t<unsigned char>	maybe_impl_t<T>
__and_<is_convertible<pointer, universal_notifier_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, universal_notifier_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__uniq_ptr_impl<universal_notifier_t, default_delete<universal_notifier_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<universal_notifier_t, default_delete<universal_notifier_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
is_empty<default_delete<universal_notifier_t>>	is_empty<_Tp>
is_empty<universal_notifier_t *>	is_empty<_Tp>
is_empty<default_delete<universal_notifier_notifyd_t>>	is_empty<_Tp>
is_empty<universal_notifier_notifyd_t *>	is_empty<_Tp>
is_empty<default_delete<universal_notifier_shmem_poller_t>>	is_empty<_Tp>
is_empty<universal_notifier_shmem_poller_t *>	is_empty<_Tp>
is_empty<default_delete<universal_notifier_named_pipe_t>>	is_empty<_Tp>
is_empty<universal_notifier_named_pipe_t *>	is_empty<_Tp>
tuple_element<0UL, tuple<universal_notifier_t *, default_delete<universal_notifier_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<universal_notifier_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<universal_notifier_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple_element<0UL, tuple<universal_notifier_notifyd_t *, default_delete<universal_notifier_notifyd_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<universal_notifier_notifyd_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<universal_notifier_notifyd_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple_element<0UL, tuple<universal_notifier_shmem_poller_t *, default_delete<universal_notifier_shmem_poller_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<universal_notifier_shmem_poller_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<universal_notifier_shmem_poller_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple_element<0UL, tuple<universal_notifier_named_pipe_t *, default_delete<universal_notifier_named_pipe_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<universal_notifier_named_pipe_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<universal_notifier_named_pipe_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
new_allocator<pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>>>	new_allocator<_Tp>
_Reference_wrapper_base_memfun<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, false>	_Reference_wrapper_base_memfun<_Tp, <unnamed>>
_Reference_wrapper_base_memfun<env_var_t, false>	_Reference_wrapper_base_memfun<_Tp, <unnamed>>
_PCC<<expression>, reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>>	_PCC<<unnamed>, _T1, _T2>
__pair_base<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>>	__pair_base<_U1, _U2>
remove_reference<default_delete<universal_notifier_named_pipe_t>>	remove_reference<_Tp>
remove_reference<default_delete<universal_notifier_shmem_poller_t>>	remove_reference<_Tp>
remove_reference<default_delete<universal_notifier_notifyd_t>>	remove_reference<_Tp>
remove_reference<universal_notifier_t *&>	remove_reference<_Tp &>
remove_reference<callback_data_t &>	remove_reference<_Tp &>
remove_reference<unsigned char &>	remove_reference<_Tp &>
_Iter_comp_iter<lambda [] type at line 116589, col. 45>	_Iter_comp_iter<_Compare>
__iterator_traits<_Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, false, true>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
conditional<true, pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>> &&, __nonesuch_no_braces &&>	conditional<_Cond, _Iftrue, _Iffalse>
remove_reference<pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>> &>	remove_reference<_Tp &>
is_move_assignable<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	is_move_assignable<_Tp>
is_move_assignable<reference_wrapper<const env_var_t>>	is_move_assignable<_Tp>
__and_<is_move_assignable<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, is_move_assignable<reference_wrapper<const env_var_t>>>	__and_<_B1, _B2>
is_same<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<reference_wrapper<const env_var_t>, _U2>	is_same<<unnamed>, <unnamed>>
_Reference_wrapper_base<env_var_t>	_Reference_wrapper_base<_Tp>
is_member_function_pointer<env_var_t>	is_member_function_pointer<_Tp>
_Reference_wrapper_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	_Reference_wrapper_base<_Tp>
is_member_function_pointer<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	is_member_function_pointer<_Tp>
_TC<value, universal_notifier_named_pipe_t *, default_delete<universal_notifier_named_pipe_t>>	_TC<<unnamed>, _Elements...>
_TC<true, universal_notifier_named_pipe_t *, default_delete<universal_notifier_named_pipe_t>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, universal_notifier_named_pipe_t *, default_delete<universal_notifier_named_pipe_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_TC<value, universal_notifier_shmem_poller_t *, default_delete<universal_notifier_shmem_poller_t>>	_TC<<unnamed>, _Elements...>
_TC<true, universal_notifier_shmem_poller_t *, default_delete<universal_notifier_shmem_poller_t>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, universal_notifier_shmem_poller_t *, default_delete<universal_notifier_shmem_poller_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_TC<value, universal_notifier_notifyd_t *, default_delete<universal_notifier_notifyd_t>>	_TC<<unnamed>, _Elements...>
_TC<true, universal_notifier_notifyd_t *, default_delete<universal_notifier_notifyd_t>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, universal_notifier_notifyd_t *, default_delete<universal_notifier_notifyd_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_TC<value, universal_notifier_t *, default_delete<universal_notifier_t>>	_TC<<unnamed>, _Elements...>
_TC<true, universal_notifier_t *, default_delete<universal_notifier_t>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, universal_notifier_t *, default_delete<universal_notifier_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
__normal_iterator<callback_data_t *, vector<callback_data_t, allocator<callback_data_t>>>	__normal_iterator<_Iterator, _Container>
__normal_iterator<const callback_data_t *, vector<callback_data_t, allocator<callback_data_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const callback_data_t *, vector<callback_data_t, allocator<callback_data_t>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<callback_data_t *, vector<callback_data_t, allocator<callback_data_t>>>>	reverse_iterator<_Iterator>
is_same<pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
remove_reference<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	remove_reference<_Tp>
remove_reference<reference_wrapper<const env_var_t>>	remove_reference<_Tp>
__is_pointer<char>	__is_pointer<_Tp>
__is_pointer<const char *>	__is_pointer<_Tp *>
__are_same<char, wchar_t>	__are_same<<unnamed>, <unnamed>>
remove_reference<lambda [] type at line 116589, col. 45 &>	remove_reference<_Tp &>
_Iter_equals_val<const char>	_Iter_equals_val<_Value>
remove_reference<unsigned char>	remove_reference<_Tp>
remove_reference<_Hashtable<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>> &>	remove_reference<_Tp &>
remove_reference<callback_data_t>	remove_reference<_Tp>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
conditional<true, pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, false, true>, bool>, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, false, true>>	conditional<_Cond, _Iftrue, _Iffalse>
_Tuple_impl<1UL, default_delete<universal_notifier_named_pipe_t>>	_Tuple_impl<_Idx, _Head>
_Head_base<1UL, default_delete<universal_notifier_named_pipe_t>, true>	_Head_base<_Idx, _Head, true>
_Tuple_impl<1UL, default_delete<universal_notifier_t>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<1UL, default_delete<universal_notifier_notifyd_t>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<1UL, default_delete<universal_notifier_shmem_poller_t>>	_Tuple_impl<_Idx, _Head>
_Head_base<0UL, universal_notifier_named_pipe_t *, false>	_Head_base<_Idx, _Head, false>
_Head_base<1UL, default_delete<universal_notifier_shmem_poller_t>, true>	_Head_base<_Idx, _Head, true>
_Head_base<0UL, universal_notifier_shmem_poller_t *, false>	_Head_base<_Idx, _Head, false>
_Head_base<1UL, default_delete<universal_notifier_notifyd_t>, true>	_Head_base<_Idx, _Head, true>
_Head_base<0UL, universal_notifier_notifyd_t *, false>	_Head_base<_Idx, _Head, false>
_Head_base<1UL, default_delete<universal_notifier_t>, true>	_Head_base<_Idx, _Head, true>
_Head_base<0UL, universal_notifier_t *, false>	_Head_base<_Idx, _Head, false>
_Weak_result_type<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	_Weak_result_type<_Functor>
_Refwrap_base_arg1<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, void>	_Refwrap_base_arg1<_Tp, <unnamed>>
_Refwrap_base_arg2<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, void>	_Refwrap_base_arg2<_Tp, <unnamed>>
_Weak_result_type<env_var_t>	_Weak_result_type<_Functor>
_Refwrap_base_arg1<env_var_t, void>	_Refwrap_base_arg1<_Tp, <unnamed>>
_Refwrap_base_arg2<env_var_t, void>	_Refwrap_base_arg2<_Tp, <unnamed>>
is_same<reference_wrapper<const env_var_t>, _U2>	is_same<<unnamed>, <unnamed>>
is_same<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<reference_wrapper<const env_var_t>, _U2>	is_same<<unnamed>, <unnamed>>
is_same<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<reference_wrapper<const env_var_t>, _U2>	is_same<<unnamed>, <unnamed>>
is_same<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<reference_wrapper<const env_var_t>, _U2>	is_same<<unnamed>, <unnamed>>
is_same<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _U1>	is_same<<unnamed>, <unnamed>>
conditional<true, is_move_assignable<reference_wrapper<const env_var_t>>, is_move_assignable<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	conditional<_Cond, _Iftrue, _Iffalse>
__iterator_traits<__normal_iterator<const char *, basic_string<char, char_traits<char>, allocator<char>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
__is_move_assignable_impl<reference_wrapper<const env_var_t>, true>	__is_move_assignable_impl<_Tp, true>
__is_move_assignable_impl<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>	__is_move_assignable_impl<_Tp, true>
_Weak_result_type_memfun<env_var_t, false>	_Weak_result_type_memfun<_Functor, <unnamed>>
_Weak_result_type_memfun<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, false>	_Weak_result_type_memfun<_Functor, <unnamed>>
is_assignable<pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>> &, const pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t> &>	is_assignable<_Tp, _Up>
_Val_comp_iter<lambda [] type at line 116589, col. 45>	_Val_comp_iter<_Compare>
__iterator_traits<__normal_iterator<pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>> *, vector<pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>>, allocator<pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>>>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
move_iterator<callback_data_t *>	move_iterator<_Iterator>
__is_move_insertable<allocator<callback_data_t>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<callback_data_t>	is_move_constructible<_Tp>
__is_move_constructible_impl<callback_data_t, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<callback_data_t, callback_data_t &&>	is_constructible<_Tp, _Args...>
__is_referenceable<callback_data_t>	__is_referenceable<_Tp>
conditional<true, callback_data_t &&, callback_data_t &>	conditional<_Cond, _Iftrue, _Iffalse>
_Weak_result_type_impl<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	_Weak_result_type_impl<_Functor>
_Weak_result_type_impl<env_var_t>	_Weak_result_type_impl<_Functor>
is_assignable<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> &, reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> &&>	is_assignable<_Tp, _Up>
is_assignable<reference_wrapper<const env_var_t> &, reference_wrapper<const env_var_t> &&>	is_assignable<_Tp, _Up>
remove_reference<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, true>> &>	remove_reference<_Tp &>
remove_reference<_Iter_comp_iter<lambda [] type at line 116589, col. 45> &>	remove_reference<_Tp &>
_Maybe_get_result_type<env_var_t, void>	_Maybe_get_result_type<_Functor, <unnamed>>
_Maybe_get_result_type<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, void>	_Maybe_get_result_type<_Functor, <unnamed>>
is_reference<callback_data_t &>	is_reference<_Tp>
__iterator_traits<move_iterator<callback_data_t *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<callback_data_t &, callback_data_t &&>	is_assignable<_Tp, _Up>
__is_pointer<pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>> *>	__is_pointer<_Tp *>
__are_same<pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>>, pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>>>	__are_same<_Tp, _Tp>
_Iter_comp_val<lambda [] type at line 116589, col. 45>	_Iter_comp_val<_Compare>
remove_reference<const env_var_t &>	remove_reference<_Tp &>
remove_reference<reference_wrapper<const env_var_t> &>	remove_reference<_Tp &>
remove_reference<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> &>	remove_reference<_Tp &>
allocator_traits<_Alloc>	allocator_traits<_Alloc>
_Sp_counted_ptr_inplace<event_t, allocator<event_t>, _S_atomic>	_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>
allocator<_Sp_counted_ptr_inplace<event_t, allocator<event_t>, _S_atomic>>	allocator<_Tp>
rebind<_Sp_counted_ptr_inplace<event_t, allocator<event_t>, _S_atomic>>	rebind<_Tp1>
__rebind<allocator<event_t>, _Sp_counted_ptr_inplace<event_t, allocator<event_t>, _S_atomic>, void>	__rebind<_Tp, _Up, __void_t<other>>
shared_ptr<event_t>	shared_ptr<_Tp>
allocator<shared_ptr<event_t>>	allocator<_Tp>
allocator_traits<allocator<shared_ptr<event_t>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<shared_ptr<event_t>>, shared_ptr<event_t>>	__alloc_traits<_Alloc, <unnamed>>
_Vector_base<shared_ptr<event_t>, allocator<shared_ptr<event_t>>>	_Vector_base<_Tp, _Alloc>
vector<shared_ptr<event_t>, allocator<shared_ptr<event_t>>>	vector<_Tp, _Alloc>
vector<event_t, allocator<event_t>>	vector<_Tp, _Alloc>
scoped_push<int>	scoped_push<T>
owning_lock<vector<shared_ptr<event_handler_t>, allocator<shared_ptr<event_handler_t>>>>	owning_lock<Data>
bitset<65UL>	bitset<_Nb>
owning_lock<unsigned int>	owning_lock<Data>
array<atomic<bool>, 65UL>	array<_Tp, _Nm>
acquired_lock<vector<shared_ptr<event_handler_t>, allocator<shared_ptr<event_handler_t>>>>	acquired_lock<Data>
__shared_ptr_access<event_t, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
__shared_ptr<event_t, _S_atomic>	__shared_ptr<_Tp, _Lp>
remove_reference<shared_ptr<event_t> &>	remove_reference<_Tp &>
__normal_iterator<shared_ptr<event_t> *, vector<shared_ptr<event_t>, allocator<shared_ptr<event_t>>>>	__normal_iterator<_Iterator, _Container>
iterator_traits<shared_ptr<event_t> *>	iterator_traits<_Tp *>
__normal_iterator<const shared_ptr<event_handler_t> *, vector<shared_ptr<event_handler_t>, allocator<shared_ptr<event_handler_t>>>>	__normal_iterator<_Iterator, _Container>
remove_reference<shared_ptr<event_handler_t> &>	remove_reference<_Tp &>
acquired_lock<unsigned int>	acquired_lock<Data>
acquired_lock<const vector<shared_ptr<event_handler_t>, allocator<shared_ptr<event_handler_t>>>>	acquired_lock<Data>
acquired_lock<const unsigned int>	acquired_lock<Data>
remove_extent<event_t>	remove_extent<_Tp>
__weak_ptr<event_t, _S_atomic>	__weak_ptr<_Tp, _Lp>
is_array<event_t>	is_array<<unnamed>>
__array_traits<atomic<bool>, 65UL>	__array_traits<_Tp, _Nm>
reverse_iterator<const atomic<bool> *>	reverse_iterator<_Iterator>
reverse_iterator<atomic<bool> *>	reverse_iterator<_Iterator>
reference	reference
_Base_bitset<2UL>	_Base_bitset<_Nw>
hash<bitset<65UL>>	hash<_Tp>
weak_ptr<event_t>	weak_ptr<_Tp>
_Temporary_value	_Temporary_value
reverse_iterator<__normal_iterator<shared_ptr<event_t> *, vector<shared_ptr<event_t>, allocator<shared_ptr<event_t>>>>>	reverse_iterator<_Iterator>
__normal_iterator<const shared_ptr<event_t> *, vector<shared_ptr<event_t>, allocator<shared_ptr<event_t>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const shared_ptr<event_t> *, vector<shared_ptr<event_t>, allocator<shared_ptr<event_t>>>>>	reverse_iterator<_Iterator>
rebind<shared_ptr<event_t>>	rebind<_Tp>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
new_allocator<shared_ptr<event_t>>	new_allocator<_Tp>
new_allocator<_Sp_counted_ptr_inplace<event_t, allocator<event_t>, _S_atomic>>	new_allocator<_Tp>
_Impl	_Impl
conditional<false, __undefined, _Sp_counted_ptr_inplace<event_t, allocator<event_t>, _S_atomic>>	conditional<false, _Iftrue, _Iffalse>
is_void<_Sp_counted_ptr_inplace<event_t, allocator<event_t>, _S_atomic>>	is_void<_Tp>
remove_cv<event_handler_t *>	remove_cv<_Tp>
remove_const<event_handler_t *>	remove_const<_Tp>
remove_cv<shared_ptr<event_handler_t>>	remove_cv<_Tp>
remove_const<shared_ptr<event_handler_t>>	remove_const<_Tp>
remove_const<event_t>	remove_const<_Tp>
remove_cv<event_t>	remove_cv<_Tp>
__allocated_ptr<allocator<_Sp_counted_ptr_inplace<event_t, allocator<event_t>, _S_atomic>>>	__allocated_ptr<_Alloc>
_Sp_ebo_helper<0, allocator<event_t>, true>	_Sp_ebo_helper<_Nm, _Tp, true>
_Sp_alloc_shared_tag<allocator<event_t>>	_Sp_alloc_shared_tag<_Alloc>
remove_reference<event_type_t>	remove_reference<_Tp>
remove_reference<const event_t &>	remove_reference<_Tp &>
_Iter_pred<lambda [] type at line 142058, col. 36>	_Iter_pred<_Predicate>
iterator_traits<const shared_ptr<event_handler_t> *>	iterator_traits<const _Tp *>
_Iter_comp_iter<lambda [] type at line 142220, col. 15>	_Iter_comp_iter<_Compare>
allocator_traits<allocator<_Sp_counted_ptr_inplace<event_t, allocator<event_t>, _S_atomic>>>	allocator_traits<allocator<_Tp>>
__aligned_buffer<event_t>	__aligned_buffer<_Tp>
__not_alloc_shared_tag<_Sp_alloc_shared_tag<allocator<event_t>>>	__not_alloc_shared_tag<_Sp_alloc_shared_tag<_Tp>>
__normal_iterator<const shared_ptr<const io_data_t> *, vector<shared_ptr<const io_data_t>, allocator<shared_ptr<const io_data_t>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const shared_ptr<const io_data_t> *, vector<shared_ptr<const io_data_t>, allocator<shared_ptr<const io_data_t>>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<const shared_ptr<event_handler_t> *, vector<shared_ptr<event_handler_t>, allocator<shared_ptr<event_handler_t>>>>>	reverse_iterator<_Iterator>
is_same<shared_ptr<event_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<shared_ptr<event_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<shared_ptr<event_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<shared_ptr<event_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<shared_ptr<event_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<shared_ptr<event_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
iterator_traits<const shared_ptr<event_t> *>	iterator_traits<const _Tp *>
enable_shared_from_this<event_t>	enable_shared_from_this<_Tp>
__enable_shared_from_this<event_t, _S_atomic>	__enable_shared_from_this<_Tp, _Lp>
__has_esft_base<event_t, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
remove_reference<lambda [] type at line 142220, col. 15 &>	remove_reference<_Tp &>
remove_reference<shared_ptr<event_t>>	remove_reference<_Tp>
remove_reference<const shared_ptr<event_t> &>	remove_reference<_Tp &>
remove_reference<const shared_ptr<event_handler_t> &>	remove_reference<_Tp &>
_Iter_equals_val<const shared_ptr<event_handler_t>>	_Iter_equals_val<_Value>
remove_reference<lambda [] type at line 142058, col. 36 &>	remove_reference<_Tp &>
remove_reference<shared_ptr<event_handler_t>>	remove_reference<_Tp>
aligned_storage<72UL, 8UL>	aligned_storage<_Len, _Align>
type	type
__iterator_traits<__normal_iterator<shared_ptr<event_handler_t> *, vector<shared_ptr<event_handler_t>, allocator<shared_ptr<event_handler_t>>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
remove_reference<_Vector_impl &>	remove_reference<_Tp &>
__iterator_traits<__normal_iterator<const shared_ptr<event_handler_t> *, vector<shared_ptr<event_handler_t>, allocator<shared_ptr<event_handler_t>>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
move_iterator<shared_ptr<event_handler_t> *>	move_iterator<_Iterator>
__is_move_insertable<allocator<shared_ptr<event_handler_t>>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<shared_ptr<event_handler_t>>	is_move_constructible<_Tp>
__is_move_constructible_impl<shared_ptr<event_handler_t>, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<shared_ptr<event_handler_t>, shared_ptr<event_handler_t> &&>	is_constructible<_Tp, _Args...>
move_iterator<shared_ptr<event_t> *>	move_iterator<_Iterator>
__is_move_insertable<allocator<shared_ptr<event_t>>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<shared_ptr<event_t>>	is_move_constructible<_Tp>
__is_move_constructible_impl<shared_ptr<event_t>, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<shared_ptr<event_t>, shared_ptr<event_t> &&>	is_constructible<_Tp, _Args...>
is_assignable<shared_ptr<event_handler_t> &, const shared_ptr<event_handler_t> &>	is_assignable<_Tp, _Up>
remove_reference<__shared_ptr<event_handler_t, _S_atomic> &>	remove_reference<_Tp &>
__is_referenceable<shared_ptr<event_t>>	__is_referenceable<_Tp>
conditional<true, shared_ptr<event_t> &&, shared_ptr<event_t> &>	conditional<_Cond, _Iftrue, _Iffalse>
__is_referenceable<shared_ptr<event_handler_t>>	__is_referenceable<_Tp>
conditional<true, shared_ptr<event_handler_t> &&, shared_ptr<event_handler_t> &>	conditional<_Cond, _Iftrue, _Iffalse>
struct <unnamed>	struct <unnamed>
_Val_comp_iter<lambda [] type at line 142220, col. 15>	_Val_comp_iter<_Compare>
is_reference<shared_ptr<event_handler_t> &>	is_reference<_Tp>
is_reference<shared_ptr<event_t> &>	is_reference<_Tp>
__is_pointer<shared_ptr<event_handler_t> *>	__is_pointer<_Tp *>
__are_same<shared_ptr<event_handler_t>, shared_ptr<event_handler_t>>	__are_same<_Tp, _Tp>
__iterator_traits<move_iterator<shared_ptr<event_handler_t> *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<shared_ptr<event_handler_t> &, shared_ptr<event_handler_t> &&>	is_assignable<_Tp, _Up>
__iterator_traits<move_iterator<shared_ptr<event_t> *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<shared_ptr<event_t> &, shared_ptr<event_t> &&>	is_assignable<_Tp, _Up>
remove_reference<_Iter_comp_iter<lambda [] type at line 142220, col. 15> &>	remove_reference<_Tp &>
remove_reference<event_handler_t *&>	remove_reference<_Tp &>
_Iter_comp_val<lambda [] type at line 142220, col. 15>	_Iter_comp_val<_Compare>
is_void<proc_status_t>	is_void<_Tp>
is_same<proc_status_t, proc_status_t>	is_same<_Tp, _Tp>
is_convertible<proc_status_t, proc_status_t>	is_convertible<_From, _To>
__or_<is_void<proc_status_t>, is_same<proc_status_t, proc_status_t>, is_convertible<proc_status_t, proc_status_t>>	__or_<_B1, _B2, _B3, _Bn...>
stack<_Tp, _Seq>	stack<_Tp, _Sequence>
stack<_Tp, _Seq>	stack<_Tp, _Sequence>
__is_swappable<_Seq>	__is_swappable<_Tp>
stack<_Tp, _Seq>	stack<_Tp, _Sequence>
stack<_Tp, _Seq>	stack<_Tp, _Sequence>
stack<_Tp, _Seq>	stack<_Tp, _Sequence>
stack<_Tp, _Seq>	stack<_Tp, _Sequence>
stack<_Tp, _Seq>	stack<_Tp, _Sequence>
stack<_Tp, _Seq>	stack<_Tp, _Sequence>
allocator<_Tp>	allocator<_Tp>
deque<_Tp, allocator<_Tp>>	deque<_Tp, _Alloc>
stack<_Tp1, _Seq1>	stack<_Tp, _Sequence>
stack<_Tp1, _Seq1>	stack<_Tp, _Sequence>
conditional<false, copyable_t, noncopyable_t>	conditional<false, _Iftrue, _Iffalse>
maybe_t<autoclose_pipes_t>	maybe_t<T>
maybe_t<posix_spawn_file_actions_t>	maybe_t<T>
maybe_t<posix_spawnattr_t>	maybe_t<T>
scoped_push<unsigned long>	scoped_push<T>
shared_ptr<io_pipe_t>	shared_ptr<_Tp>
function<..(..)>	function<..(..)>
maybe_t<dup2_list_t>	maybe_t<T>
__normal_iterator<const redirection_spec_t *, vector<redirection_spec_t, allocator<redirection_spec_t>>>	__normal_iterator<_Iterator, _Container>
iterator_traits<const redirection_spec_t *>	iterator_traits<const _Tp *>
remove_reference<autoclose_pipes_t &>	remove_reference<_Tp &>
reverse_iterator<__normal_iterator<unique_ptr<process_t, default_delete<process_t>> *, vector<unique_ptr<process_t, default_delete<process_t>>, allocator<unique_ptr<process_t, default_delete<process_t>>>>>>	reverse_iterator<_Iterator>
__iterator_traits<__normal_iterator<unique_ptr<process_t, default_delete<process_t>> *, vector<unique_ptr<process_t, default_delete<process_t>>, allocator<unique_ptr<process_t, default_delete<process_t>>>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
initializer_list<const autoclose_fd_t *>	initializer_list<_E>
shared_ptr<io_close_t>	shared_ptr<_Tp>
__normal_iterator<concrete_assignment *, vector<concrete_assignment, allocator<concrete_assignment>>>	__normal_iterator<_Iterator, _Container>
iterator_traits<concrete_assignment *>	iterator_traits<_Tp *>
__shared_ptr<io_pipe_t, _S_atomic>	__shared_ptr<_Tp, _Lp>
remove_extent<io_pipe_t>	remove_extent<_Tp>
shared_ptr<write_fields_t>	shared_ptr<_Tp>
__shared_ptr_access<write_fields_t, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
__shared_ptr<write_fields_t, _S_atomic>	__shared_ptr<_Tp, _Lp>
__normal_iterator<const action_t *, vector<action_t, allocator<action_t>>>	__normal_iterator<_Iterator, _Container>
iterator_traits<const action_t *>	iterator_traits<const _Tp *>
remove_extent<write_fields_t>	remove_extent<_Tp>
__weak_ptr<io_close_t, _S_atomic>	__weak_ptr<_Tp, _Lp>
__shared_ptr<io_close_t, _S_atomic>	__shared_ptr<_Tp, _Lp>
__weak_ptr<io_pipe_t, _S_atomic>	__weak_ptr<_Tp, _Lp>
__weak_ptr<write_fields_t, _S_atomic>	__weak_ptr<_Tp, _Lp>
is_array<write_fields_t>	is_array<<unnamed>>
is_void<write_fields_t>	is_void<_Tp>
allocator<io_close_t>	allocator<_Tp>
allocator<io_pipe_t>	allocator<_Tp>
allocator<internal_proc_t>	allocator<_Tp>
allocator<write_fields_t>	allocator<_Tp>
weak_ptr<write_fields_t>	weak_ptr<_Tp>
__shared_ptr_access<io_pipe_t, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
remove_extent<io_close_t>	remove_extent<_Tp>
weak_ptr<io_close_t>	weak_ptr<_Tp>
iterator_traits<__normal_iterator<unique_ptr<process_t, default_delete<process_t>> *, vector<unique_ptr<process_t, default_delete<process_t>>, allocator<unique_ptr<process_t, default_delete<process_t>>>>>>	iterator_traits<_Iterator>
iterator<random_access_iterator_tag, unique_ptr<process_t, default_delete<process_t>>, long, unique_ptr<process_t, default_delete<process_t>> *, unique_ptr<process_t, default_delete<process_t>> &>	iterator<_Category, _Tp, _Distance, _Pointer, _Reference>
maybe_impl_t<dup2_list_t>	maybe_impl_t<T>
_Callable<type, type>	_Callable<_Func, _Res2>
_Callable<_Functor, type>	_Callable<_Func, _Res2>
_Maybe_unary_or_binary_function<proc_status_t, parser_t &>	_Maybe_unary_or_binary_function<_Res, _T1>
weak_ptr<io_pipe_t>	weak_ptr<_Tp>
maybe_impl_t<posix_spawnattr_t>	maybe_impl_t<T>
maybe_impl_t<posix_spawn_file_actions_t>	maybe_impl_t<T>
maybe_impl_t<autoclose_pipes_t>	maybe_impl_t<T>
is_copy_constructible<dup2_list_t>	is_copy_constructible<_Tp>
_Base_manager<lambda [] type at line 150557, col. 30>	_Base_manager<_Functor>
_Base_manager<lambda [] type at line 150280, col. 25>	_Base_manager<_Functor>
_Base_manager<lambda [] type at line 150130, col. 16>	_Base_manager<_Functor>
_Base_manager<lambda [] type at line 150119, col. 16>	_Base_manager<_Functor>
_Base_manager<lambda [] type at line 150044, col. 37>	_Base_manager<_Functor>
_Base_manager<lambda [] type at line 149742, col. 31>	_Base_manager<_Functor>
__or_<is_same<proc_status_t, proc_status_t>, is_convertible<proc_status_t, proc_status_t>>	__or_<_B1, _B2>
conditional<false, is_void<proc_status_t>, __or_<is_same<proc_status_t, proc_status_t>, is_convertible<proc_status_t, proc_status_t>>>	conditional<false, _Iftrue, _Iffalse>
new_allocator<write_fields_t>	new_allocator<_Tp>
new_allocator<internal_proc_t>	new_allocator<_Tp>
new_allocator<io_pipe_t>	new_allocator<_Tp>
new_allocator<io_close_t>	new_allocator<_Tp>
_Sp_counted_ptr_inplace<write_fields_t, allocator<write_fields_t>, _S_atomic>	_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>
new_allocator<_Sp_counted_ptr_inplace<write_fields_t, allocator<write_fields_t>, _S_atomic>>	new_allocator<_Tp>
_Sp_counted_ptr_inplace<internal_proc_t, allocator<internal_proc_t>, _S_atomic>	_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>
new_allocator<_Sp_counted_ptr_inplace<internal_proc_t, allocator<internal_proc_t>, _S_atomic>>	new_allocator<_Tp>
_Sp_counted_ptr_inplace<io_pipe_t, allocator<io_pipe_t>, _S_atomic>	_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>
new_allocator<_Sp_counted_ptr_inplace<io_pipe_t, allocator<io_pipe_t>, _S_atomic>>	new_allocator<_Tp>
_Sp_counted_ptr_inplace<io_close_t, allocator<io_close_t>, _S_atomic>	_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>
new_allocator<_Sp_counted_ptr_inplace<io_close_t, allocator<io_close_t>, _S_atomic>>	new_allocator<_Tp>
allocator_traits<allocator<shared_ptr<job_t> *>>	allocator_traits<allocator<_Tp>>
allocator<_Sp_counted_ptr_inplace<internal_proc_t, allocator<internal_proc_t>, _S_atomic>>	allocator<_Tp>
allocator<_Sp_counted_ptr_inplace<write_fields_t, allocator<write_fields_t>, _S_atomic>>	allocator<_Tp>
allocator<_Sp_counted_ptr_inplace<io_pipe_t, allocator<io_pipe_t>, _S_atomic>>	allocator<_Tp>
allocator<_Sp_counted_ptr_inplace<io_close_t, allocator<io_close_t>, _S_atomic>>	allocator<_Tp>
__rebind<allocator<io_close_t>, _Sp_counted_ptr_inplace<io_close_t, allocator<io_close_t>, _S_atomic>, void>	__rebind<_Tp, _Up, __void_t<other>>
rebind<_Sp_counted_ptr_inplace<io_close_t, allocator<io_close_t>, _S_atomic>>	rebind<_Tp1>
__rebind<allocator<io_pipe_t>, _Sp_counted_ptr_inplace<io_pipe_t, allocator<io_pipe_t>, _S_atomic>, void>	__rebind<_Tp, _Up, __void_t<other>>
rebind<_Sp_counted_ptr_inplace<io_pipe_t, allocator<io_pipe_t>, _S_atomic>>	rebind<_Tp1>
__rebind<allocator<internal_proc_t>, _Sp_counted_ptr_inplace<internal_proc_t, allocator<internal_proc_t>, _S_atomic>, void>	__rebind<_Tp, _Up, __void_t<other>>
rebind<_Sp_counted_ptr_inplace<internal_proc_t, allocator<internal_proc_t>, _S_atomic>>	rebind<_Tp1>
__rebind<allocator<write_fields_t>, _Sp_counted_ptr_inplace<write_fields_t, allocator<write_fields_t>, _S_atomic>, void>	__rebind<_Tp, _Up, __void_t<other>>
rebind<_Sp_counted_ptr_inplace<write_fields_t, allocator<write_fields_t>, _S_atomic>>	rebind<_Tp1>
_Impl	_Impl
conditional<false, __undefined, _Sp_counted_ptr_inplace<write_fields_t, allocator<write_fields_t>, _S_atomic>>	conditional<false, _Iftrue, _Iffalse>
is_void<_Sp_counted_ptr_inplace<write_fields_t, allocator<write_fields_t>, _S_atomic>>	is_void<_Tp>
_Impl	_Impl
conditional<false, __undefined, _Sp_counted_ptr_inplace<internal_proc_t, allocator<internal_proc_t>, _S_atomic>>	conditional<false, _Iftrue, _Iffalse>
is_void<_Sp_counted_ptr_inplace<internal_proc_t, allocator<internal_proc_t>, _S_atomic>>	is_void<_Tp>
_Impl	_Impl
conditional<false, __undefined, _Sp_counted_ptr_inplace<io_pipe_t, allocator<io_pipe_t>, _S_atomic>>	conditional<false, _Iftrue, _Iffalse>
is_void<_Sp_counted_ptr_inplace<io_pipe_t, allocator<io_pipe_t>, _S_atomic>>	is_void<_Tp>
_Impl	_Impl
conditional<false, __undefined, _Sp_counted_ptr_inplace<io_close_t, allocator<io_close_t>, _S_atomic>>	conditional<false, _Iftrue, _Iffalse>
is_void<_Sp_counted_ptr_inplace<io_close_t, allocator<io_close_t>, _S_atomic>>	is_void<_Tp>
remove_cv<internal_proc_t *>	remove_cv<_Tp>
remove_const<internal_proc_t *>	remove_const<_Tp>
remove_cv<_Deque_iterator<shared_ptr<job_t>, shared_ptr<job_t> &, shared_ptr<job_t> *>>	remove_cv<_Tp>
remove_const<_Deque_iterator<shared_ptr<job_t>, shared_ptr<job_t> &, shared_ptr<job_t> *>>	remove_const<_Tp>
remove_cv<shared_ptr<job_t> **>	remove_cv<_Tp>
remove_const<shared_ptr<job_t> **>	remove_const<_Tp>
remove_cv<unsigned long>	remove_cv<_Tp>
remove_const<unsigned long>	remove_const<_Tp>
remove_cv<..(*)(..)>	remove_cv<_Tp>
remove_const<..(*)(..)>	remove_const<_Tp>
remove_cv<io_pipe_t *>	remove_cv<_Tp>
remove_const<io_pipe_t *>	remove_const<_Tp>
remove_const<io_close_t>	remove_const<_Tp>
remove_cv<io_close_t>	remove_cv<_Tp>
__allocated_ptr<allocator<_Sp_counted_ptr_inplace<io_close_t, allocator<io_close_t>, _S_atomic>>>	__allocated_ptr<_Alloc>
allocator_traits<allocator<io_close_t>>	allocator_traits<allocator<_Tp>>
_Sp_ebo_helper<0, allocator<io_close_t>, true>	_Sp_ebo_helper<_Nm, _Tp, true>
remove_const<io_pipe_t>	remove_const<_Tp>
remove_cv<io_pipe_t>	remove_cv<_Tp>
__allocated_ptr<allocator<_Sp_counted_ptr_inplace<io_pipe_t, allocator<io_pipe_t>, _S_atomic>>>	__allocated_ptr<_Alloc>
allocator_traits<allocator<io_pipe_t>>	allocator_traits<allocator<_Tp>>
_Sp_ebo_helper<0, allocator<io_pipe_t>, true>	_Sp_ebo_helper<_Nm, _Tp, true>
remove_const<internal_proc_t>	remove_const<_Tp>
remove_cv<internal_proc_t>	remove_cv<_Tp>
__allocated_ptr<allocator<_Sp_counted_ptr_inplace<internal_proc_t, allocator<internal_proc_t>, _S_atomic>>>	__allocated_ptr<_Alloc>
allocator_traits<allocator<internal_proc_t>>	allocator_traits<allocator<_Tp>>
_Sp_ebo_helper<0, allocator<internal_proc_t>, true>	_Sp_ebo_helper<_Nm, _Tp, true>
remove_const<write_fields_t>	remove_const<_Tp>
remove_cv<write_fields_t>	remove_cv<_Tp>
__allocated_ptr<allocator<_Sp_counted_ptr_inplace<write_fields_t, allocator<write_fields_t>, _S_atomic>>>	__allocated_ptr<_Alloc>
allocator_traits<allocator<write_fields_t>>	allocator_traits<allocator<_Tp>>
_Sp_ebo_helper<0, allocator<write_fields_t>, true>	_Sp_ebo_helper<_Nm, _Tp, true>
_Sp_alloc_shared_tag<allocator<write_fields_t>>	_Sp_alloc_shared_tag<_Alloc>
_Sp_alloc_shared_tag<allocator<internal_proc_t>>	_Sp_alloc_shared_tag<_Alloc>
_Sp_alloc_shared_tag<allocator<io_pipe_t>>	_Sp_alloc_shared_tag<_Alloc>
_Sp_alloc_shared_tag<allocator<io_close_t>>	_Sp_alloc_shared_tag<_Alloc>
remove_reference<shared_ptr<write_fields_t> &>	remove_reference<_Tp &>
_Function_handler<..(..), lambda [] type at line 149742, col. 31>	_Function_handler<..(..), _Functor>
remove_reference<lambda [] type at line 149742, col. 31 &>	remove_reference<_Tp &>
remove_reference<dup2_list_t &>	remove_reference<_Tp &>
remove_reference<shared_ptr<internal_proc_t> &>	remove_reference<_Tp &>
_Function_handler<..(..), lambda [] type at line 150044, col. 37>	_Function_handler<..(..), _Functor>
remove_reference<lambda [] type at line 150044, col. 37 &>	remove_reference<_Tp &>
remove_reference<shared_ptr<const function_properties_t> &>	remove_reference<_Tp &>
_Function_handler<..(..), lambda [] type at line 150130, col. 16>	_Function_handler<..(..), _Functor>
remove_reference<lambda [] type at line 150130, col. 16 &>	remove_reference<_Tp &>
remove_reference<shared_ptr<job_group_t> &>	remove_reference<_Tp &>
_Function_handler<..(..), lambda [] type at line 150119, col. 16>	_Function_handler<..(..), _Functor>
remove_reference<lambda [] type at line 150119, col. 16 &>	remove_reference<_Tp &>
remove_reference<parser_t &>	remove_reference<_Tp &>
__normal_iterator<const concrete_assignment *, vector<concrete_assignment, allocator<concrete_assignment>>>	__normal_iterator<_Iterator, _Container>
_Function_handler<..(..), lambda [] type at line 150280, col. 25>	_Function_handler<..(..), _Functor>
remove_reference<lambda [] type at line 150280, col. 25 &>	remove_reference<_Tp &>
remove_reference<shared_ptr<io_close_t> &>	remove_reference<_Tp &>
remove_reference<shared_ptr<io_pipe_t> &>	remove_reference<_Tp &>
_Function_handler<..(..), lambda [] type at line 150557, col. 30>	_Function_handler<..(..), _Functor>
remove_reference<lambda [] type at line 150557, col. 30 &>	remove_reference<_Tp &>
__normal_iterator<shared_ptr<const io_data_t> *, vector<shared_ptr<const io_data_t>, allocator<shared_ptr<const io_data_t>>>>	__normal_iterator<_Iterator, _Container>
remove_reference<vector<action_t, allocator<action_t>> &>	remove_reference<_Tp &>
__alloc_traits<allocator<shared_ptr<job_t> *>, shared_ptr<job_t> *>	__alloc_traits<_Alloc, <unnamed>>
__result_of_success<proc_status_t, __invoke_other>	__result_of_success<_Tp, _Tag>
__success_type<proc_status_t>	__success_type<_Tp>
allocator_traits<allocator<_Sp_counted_ptr_inplace<write_fields_t, allocator<write_fields_t>, _S_atomic>>>	allocator_traits<allocator<_Tp>>
allocator_traits<allocator<_Sp_counted_ptr_inplace<internal_proc_t, allocator<internal_proc_t>, _S_atomic>>>	allocator_traits<allocator<_Tp>>
allocator_traits<allocator<_Sp_counted_ptr_inplace<io_pipe_t, allocator<io_pipe_t>, _S_atomic>>>	allocator_traits<allocator<_Tp>>
allocator_traits<allocator<_Sp_counted_ptr_inplace<io_close_t, allocator<io_close_t>, _S_atomic>>>	allocator_traits<allocator<_Tp>>
__aligned_buffer<io_close_t>	__aligned_buffer<_Tp>
__aligned_buffer<io_pipe_t>	__aligned_buffer<_Tp>
__aligned_buffer<internal_proc_t>	__aligned_buffer<_Tp>
__aligned_buffer<write_fields_t>	__aligned_buffer<_Tp>
__not_alloc_shared_tag<_Sp_alloc_shared_tag<allocator<io_close_t>>>	__not_alloc_shared_tag<_Sp_alloc_shared_tag<_Tp>>
__not_alloc_shared_tag<_Sp_alloc_shared_tag<allocator<internal_proc_t>>>	__not_alloc_shared_tag<_Sp_alloc_shared_tag<_Tp>>
__not_alloc_shared_tag<_Sp_alloc_shared_tag<allocator<write_fields_t>>>	__not_alloc_shared_tag<_Sp_alloc_shared_tag<_Tp>>
is_same<shared_ptr<job_t> **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<shared_ptr<job_t> **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<shared_ptr<job_t> **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<shared_ptr<job_t> **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<shared_ptr<job_t> **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<shared_ptr<job_t> **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
__is_copy_constructible_impl<dup2_list_t, true>	__is_copy_constructible_impl<_Tp, true>
_Callable<lambda [] type at line 150557, col. 30, void>	_Callable<_Func, _Res2>
_Callable<lambda [] type at line 150280, col. 25, void>	_Callable<_Func, _Res2>
_Callable<lambda [] type at line 150044, col. 37, void>	_Callable<_Func, _Res2>
_Callable<lambda [] type at line 149742, col. 31, void>	_Callable<_Func, _Res2>
reverse_iterator<__normal_iterator<const action_t *, vector<action_t, allocator<action_t>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<const redirection_spec_t *, vector<redirection_spec_t, allocator<redirection_spec_t>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<shared_ptr<const io_data_t> *, vector<shared_ptr<const io_data_t>, allocator<shared_ptr<const io_data_t>>>>>	reverse_iterator<_Iterator>
iterator_traits<const concrete_assignment *>	iterator_traits<const _Tp *>
reverse_iterator<__normal_iterator<const concrete_assignment *, vector<concrete_assignment, allocator<concrete_assignment>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<concrete_assignment *, vector<concrete_assignment, allocator<concrete_assignment>>>>	reverse_iterator<_Iterator>
__has_esft_base<internal_proc_t, void>	__has_esft_base<_Yp, <unnamed>>
unary_function<parser_t &, proc_status_t>	unary_function<_Arg, _Result>
_Callable<lambda [] type at line 150130, col. 16, proc_status_t>	_Callable<_Func, _Res2>
_Callable<lambda [] type at line 150119, col. 16, proc_status_t>	_Callable<_Func, _Res2>
_Callable<function<..(..)>, _Tp>	_Callable<_Func, _Res2>
is_array<io_pipe_t>	is_array<<unnamed>>
is_void<io_pipe_t>	is_void<_Tp>
__has_esft_base<io_pipe_t, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
__shared_ptr_access<io_close_t, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
enable_shared_from_this<io_close_t>	enable_shared_from_this<_Tp>
__enable_shared_from_this<io_close_t, _S_atomic>	__enable_shared_from_this<_Tp, _Lp>
__has_esft_base<write_fields_t, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
remove_reference<__shared_ptr<io_pipe_t, _S_atomic> &>	remove_reference<_Tp &>
remove_reference<__shared_ptr<internal_proc_t, _S_atomic> &>	remove_reference<_Tp &>
is_array<io_close_t>	is_array<<unnamed>>
is_void<io_close_t>	is_void<_Tp>
__has_esft_base<io_close_t, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
is_constructible<dup2_list_t, const dup2_list_t &>	is_constructible<_Tp, _Args...>
__is_referenceable<dup2_list_t>	__is_referenceable<_Tp>
conditional<true, is_same<proc_status_t, proc_status_t>, is_convertible<proc_status_t, proc_status_t>>	conditional<_Cond, _Iftrue, _Iffalse>
aligned_storage<160UL, 8UL>	aligned_storage<_Len, _Align>
type	type
__iterator_traits<__normal_iterator<shared_ptr<const io_data_t> *, vector<shared_ptr<const io_data_t>, allocator<shared_ptr<const io_data_t>>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
__is_move_iterator<__normal_iterator<const shared_ptr<const io_data_t> *, vector<shared_ptr<const io_data_t>, allocator<shared_ptr<const io_data_t>>>>>	__is_move_iterator<_Tp>
__is_move_iterator<shared_ptr<const io_data_t> *>	__is_move_iterator<_Tp>
is_assignable<shared_ptr<const io_data_t> &, shared_ptr<const io_data_t> &>	is_assignable<_Tp, _Up>
remove_reference<_Vector_impl &>	remove_reference<_Tp &>
struct <unnamed>	struct <unnamed>
remove_reference<allocator<action_t> &>	remove_reference<_Tp &>
__is_pointer<shared_ptr<const io_data_t> *>	__is_pointer<_Tp *>
__are_same<shared_ptr<const io_data_t>, shared_ptr<const io_data_t>>	__are_same<_Tp, _Tp>
__is_pointer<const shared_ptr<const io_data_t> *>	__is_pointer<_Tp *>
remove_reference<io_pipe_t *&>	remove_reference<_Tp &>
remove_reference<internal_proc_t *&>	remove_reference<_Tp &>
iterator_traits<shared_ptr<job_t> *>	iterator_traits<_Tp *>
remove_reference<shared_ptr<const io_data_t> &>	remove_reference<_Tp &>
_Rb_tree_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	_Rb_tree_const_iterator<_Tp>
pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	pair<_T1, _T2>
allocator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	allocator<_Tp>
_Insert_base<long, pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _Select1st, equal_to<long>, hash<long>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<false, false, true>>	_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
_Insert<long, pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _Select1st, equal_to<long>, hash<long>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<false, false, true>, false>	_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, false>
__is_fast_hash<hash<long>>	__is_fast_hash<_Hash>
__is_nothrow_invocable<const hash<long> &, const long &>	__is_nothrow_invocable<_Fn, _Args...>
__and_<__is_fast_hash<hash<long>>, __is_nothrow_invocable<const hash<long> &, const long &>>	__and_<_B1, _B2>
__not_<__and_<__is_fast_hash<hash<long>>, __is_nothrow_invocable<const hash<long> &, const long &>>>	__not_<_Pp>
_Hash_code_base<long, pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Select1st, hash<long>, _Mod_range_hashing, _Default_ranged_hash, false>	_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Default_ranged_hash, false>
_Hashtable<long, pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _Select1st, equal_to<long>, hash<long>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<false, false, true>>	_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
__hash_code_base_access	__hash_code_base_access
back_insert_iterator<vector<completion_t, allocator<completion_t>>>	back_insert_iterator<_Container>
unordered_map<long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, hash<long>, equal_to<long>, allocator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
_Node_iterator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, false>	_Node_iterator<_Value, __constant_iterators, __cache>
_Hashtable_base<long, pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Select1st, equal_to<long>, hash<long>, _Mod_range_hashing, _Default_ranged_hash, _Hashtable_traits<false, false, true>>	_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>
_Node_iterator_base<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false>	_Node_iterator_base<_Value, _Cache_hash_code>
conditional<false, const pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> *, pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> *>	conditional<false, _Iftrue, _Iffalse>
_PCC<<expression>, const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	_PCC<<unnamed>, _T1, _T2>
__pair_base<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	__pair_base<_U1, _U2>
conditional<false, const pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> &, pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> &>	conditional<false, _Iftrue, _Iffalse>
_Hash_node<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false>	_Hash_node<_Value, false>
_Local_const_iterator<long, pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Select1st, hash<long>, _Mod_range_hashing, _Default_ranged_hash, false, false>	_Local_const_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>
_Local_iterator<long, pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Select1st, hash<long>, _Mod_range_hashing, _Default_ranged_hash, false, false>	_Local_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>
_Node_const_iterator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, false>	_Node_const_iterator<_Value, __constant_iterators, __cache>
allocator_traits<allocator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	allocator_traits<allocator<_Tp>>
tuple_element<1UL, pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	tuple_element<1UL, pair<_Tp1, _Tp2>>
_Map_base<long, pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _Select1st, equal_to<long>, hash<long>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<false, false, true>, true>	_Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
pair<_Node_iterator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, false>, bool>	pair<_T1, _T2>
allocator<_Hash_node<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false>>	allocator<_Tp>
_ReuseOrAllocNode<allocator<_Hash_node<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false>>>	_ReuseOrAllocNode<_NodeAlloc>
_Equality<long, pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _Select1st, equal_to<long>, hash<long>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<false, false, true>, true>	_Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
_Rehash_base<long, pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _Select1st, equal_to<long>, hash<long>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<false, false, true>, integral_constant<bool, true>>	_Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true_type>
conditional<true, pair<_Node_iterator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, false>, bool>, _Node_iterator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, false>>	conditional<_Cond, _Iftrue, _Iffalse>
_Hashtable_alloc<allocator<_Hash_node<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false>>>	_Hashtable_alloc<_NodeAlloc>
__alloc_traits<allocator<_Hash_node<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false>>, _Hash_node<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false>>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<_Hash_node<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false>>>	allocator_traits<allocator<_Tp>>
rebind<_Hash_node<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false>>	rebind<_Tp1>
__rebind<allocator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _Hash_node<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false>, void>	__rebind<_Tp, _Up, __void_t<other>>
_AllocNode<allocator<_Hash_node<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false>>>	_AllocNode<_NodeAlloc>
new_allocator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	new_allocator<_Tp>
new_allocator<_Hash_node<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false>>	new_allocator<_Tp>
__rebind<allocator<_Hash_node<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false>>, _Hash_node_base *, void>	__rebind<_Tp, _Up, __void_t<other>>
rebind<_Hash_node_base *>	rebind<_Tp1>
_Hash_node_value_base<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	_Hash_node_value_base<_Value>
conditional<false, __undefined, _Hash_node<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false>>	conditional<false, _Iftrue, _Iffalse>
is_void<_Hash_node<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false>>	is_void<_Tp>
__invoke_result<const hash<long> &, const long &>	__invoke_result<_Functor, _ArgTypes...>
__call_is_nothrow<__invoke_result<const hash<long> &, const long &>, const hash<long> &, const long &>	__call_is_nothrow<_Result, _Fn, _Args...>
_Hashtable_ebo_helper<0, allocator<_Hash_node<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false>>, true>	_Hashtable_ebo_helper<_Nm, _Tp, true>
_Iter_comp_iter<lambda [] type at line 151265, col. 19>	_Iter_comp_iter<_Compare>
remove_reference<const wchar_t *>	remove_reference<_Tp>
tuple_element<0UL, pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	tuple_element<0UL, pair<_Tp1, _Tp2>>
remove_reference<const pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> &>	remove_reference<_Tp &>
initializer_list<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	initializer_list<_E>
remove_reference<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> &>	remove_reference<_Tp &>
__result_of_impl<false, false, const hash<long> &, const long &>	__result_of_impl<false, false, _Functor, _ArgTypes...>
__aligned_buffer<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	__aligned_buffer<_Tp>
conditional<true, __is_nothrow_invocable<const hash<long> &, const long &>, __is_fast_hash<hash<long>>>	conditional<_Cond, _Iftrue, _Iffalse>
is_same<_Hash_node<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Hash_node<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Hash_node<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
_Equal_helper<long, pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Select1st, equal_to<long>, unsigned long, false>	_Equal_helper<_Key, _Value, _ExtractKey, _Equal, _HashCodeType, false>
_Hashtable_ebo_helper<0, equal_to<long>, true>	_Hashtable_ebo_helper<_Nm, _Tp, true>
reverse_iterator<_Rb_tree_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	reverse_iterator<_Iterator>
enable_if<value, void>	enable_if<<unnamed>, _Tp>
is_constructible<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Pair &&>	is_constructible<_Tp, _Args...>
_Hashtable_ebo_helper<1, hash<long>, true>	_Hashtable_ebo_helper<_Nm, _Tp, true>
is_same<const long, _U1>	is_same<<unnamed>, <unnamed>>
pair<_Rb_tree_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _Rb_tree_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	pair<_T1, _T2>
pair<_Node_const_iterator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, false>, _Node_const_iterator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, false>>	pair<_T1, _T2>
pair<_Node_iterator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, false>, _Node_iterator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, false>>	pair<_T1, _T2>
remove_reference<lambda [] type at line 151265, col. 19 &>	remove_reference<_Tp &>
remove_reference<const parse_error_t &>	remove_reference<_Tp &>
is_same<const long, _U1>	is_same<<unnamed>, <unnamed>>
is_same<const long, _U1>	is_same<<unnamed>, <unnamed>>
is_same<const long, _U1>	is_same<<unnamed>, <unnamed>>
is_same<const long, _U1>	is_same<<unnamed>, <unnamed>>
is_member_object_pointer<const hash<long>>	is_member_object_pointer<_Tp>
is_member_function_pointer<const hash<long>>	is_member_function_pointer<_Tp>
move_iterator<parse_error_t *>	move_iterator<_Iterator>
__is_move_insertable<allocator<parse_error_t>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<parse_error_t>	is_move_constructible<_Tp>
__is_move_constructible_impl<parse_error_t, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<parse_error_t, parse_error_t &&>	is_constructible<_Tp, _Args...>
__iterator_traits<back_insert_iterator<vector<completion_t, allocator<completion_t>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
__is_pointer<back_insert_iterator<vector<completion_t, allocator<completion_t>>>>	__is_pointer<_Tp>
__are_same<completion_t, void>	__are_same<<unnamed>, <unnamed>>
__is_referenceable<parse_error_t>	__is_referenceable<_Tp>
conditional<true, parse_error_t &&, parse_error_t &>	conditional<_Cond, _Iftrue, _Iffalse>
_Val_comp_iter<lambda [] type at line 151265, col. 19>	_Val_comp_iter<_Compare>
is_reference<parse_error_t &>	is_reference<_Tp>
__iterator_traits<move_iterator<parse_error_t *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<parse_error_t &, parse_error_t &&>	is_assignable<_Tp, _Up>
pointer_traits<_Hash_node<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false> *>	pointer_traits<_Tp *>
remove_reference<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> *&>	remove_reference<_Tp &>
remove_reference<_Iter_comp_iter<lambda [] type at line 151265, col. 19> &>	remove_reference<_Tp &>
__is_move_iterator<move_iterator<__normal_iterator<completion_t *, vector<completion_t, allocator<completion_t>>>>>	__is_move_iterator<move_iterator<_Iterator>>
remove_reference<parse_error_t>	remove_reference<_Tp>
_Iter_comp_val<lambda [] type at line 151265, col. 19>	_Iter_comp_val<_Compare>
_Iter_comp_val<lambda [] type at line 116396, col. 9>	_Iter_comp_val<_Compare>
_Iter_comp_val<lambda [] type at line 116396, col. 9>	_Iter_comp_val<_Compare>
_Iter_comp_val<lambda [] type at line 116396, col. 9>	_Iter_comp_val<_Compare>
_Iter_comp_val<lambda [] type at line 116396, col. 9>	_Iter_comp_val<_Compare>
_Iter_comp_val<lambda [] type at line 116396, col. 9>	_Iter_comp_val<_Compare>
_Iter_comp_val<lambda [] type at line 116396, col. 9>	_Iter_comp_val<_Compare>
_Iter_comp_val<lambda [] type at line 116396, col. 9>	_Iter_comp_val<_Compare>
_Iter_comp_val<lambda [] type at line 116396, col. 9>	_Iter_comp_val<_Compare>
remove_reference<lambda [] type at line 116396, col. 9 &>	remove_reference<_Tp &>
iterator_traits<const widechar_range *>	iterator_traits<const _Tp *>
remove_reference<lambda [] type at line 116396, col. 9 &>	remove_reference<_Tp &>
remove_reference<lambda [] type at line 116396, col. 9 &>	remove_reference<_Tp &>
remove_reference<lambda [] type at line 116396, col. 9 &>	remove_reference<_Tp &>
remove_reference<lambda [] type at line 116396, col. 9 &>	remove_reference<_Tp &>
remove_reference<lambda [] type at line 116396, col. 9 &>	remove_reference<_Tp &>
remove_reference<lambda [] type at line 116396, col. 9 &>	remove_reference<_Tp &>
remove_reference<lambda [] type at line 116396, col. 9 &>	remove_reference<_Tp &>
ratio<1000000L, 1L>	ratio<_Num, _Den>
ratio<1000L, 1L>	ratio<_Num, _Den>
ratio<1L, 1000L>	ratio<_Num, _Den>
ratio<1L, 1000000L>	ratio<_Num, _Den>
__ratio_multiply<ratio<1L, 1000L>, ratio<1000000000L, 1L>>	__ratio_multiply<_R1, _R2>
__ratio_divide<ratio<1L, 1000L>, ratio<1L, 1000000000L>>	__ratio_divide<_R1, _R2>
__ratio_multiply<ratio<1L, 1L>, ratio<1000L, 1L>>	__ratio_multiply<_R1, _R2>
__ratio_divide<ratio<1L, 1L>, ratio<1L, 1000L>>	__ratio_divide<_R1, _R2>
__ratio_multiply<ratio<1L, 1000L>, ratio<1L, 1L>>	__ratio_multiply<_R1, _R2>
__ratio_divide<ratio<1L, 1000L>, ratio<1L, 1L>>	__ratio_divide<_R1, _R2>
__ratio_multiply<ratio<1L, 1000000000L>, ratio<1000000L, 1L>>	__ratio_multiply<_R1, _R2>
__ratio_divide<ratio<1L, 1000000000L>, ratio<1L, 1000000L>>	__ratio_divide<_R1, _R2>
duration<signed long, ratio<1L, 1000L>>	duration<_Rep, _Period>
duration<signed long, ratio<1L, 1000000L>>	duration<_Rep, _Period>
enable_if<true, duration<signed long, ratio<1L, 1000L>>>	enable_if<true, _Tp>
enable_if<true, duration<signed long, ratio<1L, 1000000L>>>	enable_if<true, _Tp>
allocator<fd_monitor_item_t>	allocator<_Tp>
_Vector_base<fd_monitor_item_t, allocator<fd_monitor_item_t>>	_Vector_base<_Tp, _Alloc>
vector<fd_monitor_item_t, allocator<fd_monitor_item_t>>	vector<_Tp, _Alloc>
owning_lock<data_t>	owning_lock<Data>
maybe_t<time_point<steady_clock, duration<signed long, ratio<1L, 1000000000L>>>>	maybe_t<T>
function<..(..)>	function<..(..)>
remove_reference<function<..(..)> &>	remove_reference<_Tp &>
acquired_lock<data_t>	acquired_lock<Data>
remove_reference<fd_monitor_item_t &>	remove_reference<_Tp &>
__normal_iterator<fd_monitor_item_t *, vector<fd_monitor_item_t, allocator<fd_monitor_item_t>>>	__normal_iterator<_Iterator, _Container>
iterator_traits<fd_monitor_item_t *>	iterator_traits<_Tp *>
__normal_iterator<const fd_monitor_item_t *, vector<fd_monitor_item_t, allocator<fd_monitor_item_t>>>	__normal_iterator<_Iterator, _Container>
move_iterator<__normal_iterator<fd_monitor_item_t *, vector<fd_monitor_item_t, allocator<fd_monitor_item_t>>>>	move_iterator<_Iterator>
remove_reference<lambda [] type at line 101876, col. 21 &>	remove_reference<_Tp &>
conditional<true, fd_monitor_item_t &&, fd_monitor_item_t &>	conditional<_Cond, _Iftrue, _Iffalse>
__iterator_traits<__normal_iterator<fd_monitor_item_t *, vector<fd_monitor_item_t, allocator<fd_monitor_item_t>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
iterator_traits<__normal_iterator<fd_monitor_item_t *, vector<fd_monitor_item_t, allocator<fd_monitor_item_t>>>>	iterator_traits<_Iterator>
acquired_lock<const data_t>	acquired_lock<Data>
_Base_manager<lambda [] type at line 101876, col. 21>	_Base_manager<_Functor>
_Function_handler<..(..), lambda [] type at line 101876, col. 21>	_Function_handler<..(..), _Functor>
__success_type<duration<signed long, ratio<1L, 1000L>>>	__success_type<_Tp>
allocator_traits<allocator<fd_monitor_item_t>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<fd_monitor_item_t>, fd_monitor_item_t>	__alloc_traits<_Alloc, <unnamed>>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
iterator_traits<const fd_monitor_item_t *>	iterator_traits<const _Tp *>
_Iter_pred<lambda [] type at line 102001, col. 25>	_Iter_pred<_Predicate>
maybe_impl_t<time_point<steady_clock, duration<signed long, ratio<1L, 1000000000L>>>>	maybe_impl_t<T>
rebind<fd_monitor_item_t>	rebind<_Tp>
new_allocator<fd_monitor_item_t>	new_allocator<_Tp>
__static_gcd<1000L, 1L>	__static_gcd<_Pn, _Qn>
__static_gcd<1L, 1000L>	__static_gcd<_Pn, _Qn>
is_copy_constructible<time_point<steady_clock, duration<signed long, ratio<1L, 1000000000L>>>>	is_copy_constructible<_Tp>
__is_copy_constructible_impl<time_point<steady_clock, duration<signed long, ratio<1L, 1000000000L>>>, true>	__is_copy_constructible_impl<_Tp, true>
reverse_iterator<__normal_iterator<const fd_monitor_item_t *, vector<fd_monitor_item_t, allocator<fd_monitor_item_t>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<fd_monitor_item_t *, vector<fd_monitor_item_t, allocator<fd_monitor_item_t>>>>	reverse_iterator<_Iterator>
_Callable<lambda [] type at line 101876, col. 21, void>	_Callable<_Func, _Res2>
is_reference<fd_monitor_item_t &>	is_reference<_Tp>
remove_reference<fd_monitor_item_t>	remove_reference<_Tp>
remove_reference<lambda [] type at line 102001, col. 25 &>	remove_reference<_Tp &>
__iterator_traits<move_iterator<__normal_iterator<fd_monitor_item_t *, vector<fd_monitor_item_t, allocator<fd_monitor_item_t>>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
__duration_cast_impl<duration<signed long, ratio<1L, 1L>>, ratio<1L, 1000L>, signed long, true, false>	__duration_cast_impl<_ToDur, _CF, _CR, true, false>
is_constructible<time_point<steady_clock, duration<signed long, ratio<1L, 1000000000L>>>, const time_point<steady_clock, duration<signed long, ratio<1L, 1000000000L>>> &>	is_constructible<_Tp, _Args...>
__is_referenceable<time_point<steady_clock, duration<signed long, ratio<1L, 1000000000L>>>>	__is_referenceable<_Tp>
__is_move_insertable<allocator<fd_monitor_item_t>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<fd_monitor_item_t>	is_move_constructible<_Tp>
__is_move_constructible_impl<fd_monitor_item_t, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<fd_monitor_item_t, fd_monitor_item_t &&>	is_constructible<_Tp, _Args...>
move_iterator<fd_monitor_item_t *>	move_iterator<_Iterator>
__duration_cast_impl<duration<signed long, ratio<1L, 1000L>>, ratio<1000L, 1L>, signed long, false, true>	__duration_cast_impl<_ToDur, _CF, _CR, false, true>
__is_referenceable<fd_monitor_item_t>	__is_referenceable<_Tp>
is_assignable<fd_monitor_item_t &, fd_monitor_item_t &&>	is_assignable<_Tp, _Up>
__is_pointer<fd_monitor_item_t *>	__is_pointer<_Tp *>
__are_same<fd_monitor_item_t, fd_monitor_item_t>	__are_same<_Tp, _Tp>
__iterator_traits<move_iterator<fd_monitor_item_t *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
allocator<const category_t *>	allocator<_Tp>
vector<const category_t *, allocator<const category_t *>>	vector<_Tp, _Alloc>
__normal_iterator<const category_t **, vector<const category_t *, allocator<const category_t *>>>	__normal_iterator<_Iterator, _Container>
iterator_traits<const category_t **>	iterator_traits<_Tp *>
remove_reference<const char(&)[23]>	remove_reference<_Tp &>
remove_reference<char *&>	remove_reference<_Tp &>
__normal_iterator<const basic_string<char, char_traits<char>, allocator<char>> *, vector<basic_string<char, char_traits<char>, allocator<char>>, allocator<basic_string<char, char_traits<char>, allocator<char>>>>>	__normal_iterator<_Iterator, _Container>
_Vector_base<const category_t *, allocator<const category_t *>>	_Vector_base<_Tp, _Alloc>
allocator_traits<allocator<const category_t *>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<const category_t *>, const category_t *>	__alloc_traits<_Alloc, <unnamed>>
iterator_traits<const basic_string<char, char_traits<char>, allocator<char>> *>	iterator_traits<const _Tp *>
reverse_iterator<__normal_iterator<const basic_string<char, char_traits<char>, allocator<char>> *, vector<basic_string<char, char_traits<char>, allocator<char>>, allocator<basic_string<char, char_traits<char>, allocator<char>>>>>>	reverse_iterator<_Iterator>
is_copy_assignable<value_type>	is_copy_assignable<_Tp>
__uninitialized_fill_n<<expression>>	__uninitialized_fill_n<_TrivialValueType>
allocator<token_range_t>	allocator<_Tp>
_Vector_base<token_range_t, allocator<token_range_t>>	_Vector_base<_Tp, _Alloc>
vector<token_range_t, allocator<token_range_t>>	vector<_Tp, _Alloc>
leaf_t<Type>	leaf_t<Type>
allocator_traits<allocator<token_range_t>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<token_range_t>, token_range_t>	__alloc_traits<_Alloc, <unnamed>>
__normal_iterator<token_range_t *, vector<token_range_t, allocator<token_range_t>>>	__normal_iterator<_Iterator, _Container>
iterator_traits<token_range_t *>	iterator_traits<_Tp *>
node_visitation_t<pretty_printer_t>	node_visitation_t<NodeVisitor>
__normal_iterator<const unsigned int *, vector<unsigned int, allocator<unsigned int>>>	__normal_iterator<_Iterator, _Container>
__normal_iterator<const source_range_t *, vector<source_range_t, allocator<source_range_t>>>	__normal_iterator<_Iterator, _Container>
iterator_traits<const source_range_t *>	iterator_traits<const _Tp *>
is_same<token_range_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<token_range_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<token_range_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<token_range_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<token_range_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<token_range_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
_Temporary_value	_Temporary_value
reverse_iterator<__normal_iterator<token_range_t *, vector<token_range_t, allocator<token_range_t>>>>	reverse_iterator<_Iterator>
__normal_iterator<const token_range_t *, vector<token_range_t, allocator<token_range_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const token_range_t *, vector<token_range_t, allocator<token_range_t>>>>	reverse_iterator<_Iterator>
rebind<token_range_t>	rebind<_Tp>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
new_allocator<token_range_t>	new_allocator<_Tp>
enable_if<true, token_range_t *>	enable_if<true, _Tp>
_Iter_comp_val<lambda [] type at line 131036, col. 13>	_Iter_comp_val<_Compare>
_Iter_comp_val<lambda [] type at line 131048, col. 32>	_Iter_comp_val<_Compare>
_Iter_pred<lambda [] type at line 131094, col. 26>	_Iter_pred<_Predicate>
_Iter_pred<lambda [] type at line 131087, col. 22>	_Iter_pred<_Predicate>
iterator_traits<const unsigned int *>	iterator_traits<const _Tp *>
remove_reference<token_range_t &>	remove_reference<_Tp &>
move_iterator<token_range_t *>	move_iterator<_Iterator>
conditional<true, token_range_t &&, token_range_t &>	conditional<_Cond, _Iftrue, _Iffalse>
iterator_traits<const token_range_t *>	iterator_traits<const _Tp *>
remove_reference<token_range_t>	remove_reference<_Tp>
remove_reference<lambda [] type at line 131087, col. 22 &>	remove_reference<_Tp &>
remove_reference<lambda [] type at line 131094, col. 26 &>	remove_reference<_Tp &>
_Iter_negate<lambda [] type at line 131094, col. 26>	_Iter_negate<_Predicate>
_Iter_comp_iter<lambda [] type at line 131048, col. 32>	_Iter_comp_iter<_Compare>
remove_reference<lambda [] type at line 131048, col. 32 &>	remove_reference<_Tp &>
__iterator_traits<__normal_iterator<const source_range_t *, vector<source_range_t, allocator<source_range_t>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
remove_reference<lambda [] type at line 131036, col. 13 &>	remove_reference<_Tp &>
_Iter_comp_iter<lambda [] type at line 130839, col. 30>	_Iter_comp_iter<_Compare>
is_reference<token_range_t &>	is_reference<_Tp>
remove_reference<lambda [] type at line 130839, col. 30 &>	remove_reference<_Tp &>
__is_move_iterator<move_iterator<token_range_t *>>	__is_move_iterator<move_iterator<_Iterator>>
__is_pointer<token_range_t *>	__is_pointer<_Tp *>
__are_same<token_range_t, token_range_t>	__are_same<_Tp, _Tp>
__is_move_insertable<allocator<token_range_t>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<token_range_t>	is_move_constructible<_Tp>
__is_move_constructible_impl<token_range_t, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<token_range_t, token_range_t &&>	is_constructible<_Tp, _Args...>
__is_referenceable<token_range_t>	__is_referenceable<_Tp>
is_move_assignable<token_range_t>	is_move_assignable<_Tp>
is_copy_assignable<token_range_t>	is_copy_assignable<_Tp>
conditional<true, is_move_assignable<token_range_t>, is_copy_assignable<token_range_t>>	conditional<_Cond, _Iftrue, _Iffalse>
is_copy_assignable<source_range_t>	is_copy_assignable<_Tp>
conditional<true, is_move_assignable<source_range_t>, is_copy_assignable<source_range_t>>	conditional<_Cond, _Iftrue, _Iffalse>
__iterator_traits<move_iterator<token_range_t *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<token_range_t &, token_range_t &&>	is_assignable<_Tp, _Up>
__is_move_assignable_impl<token_range_t, true>	__is_move_assignable_impl<_Tp, true>
remove_cv<fth_command_t>	remove_cv<_Tp>
remove_const<fth_command_t>	remove_const<_Tp>
_Iter_comp_iter<lambda [] type at line 80678, col. 15>	_Iter_comp_iter<_Compare>
remove_reference<lambda [] type at line 80678, col. 15 &>	remove_reference<_Tp &>
_Val_comp_iter<lambda [] type at line 80678, col. 15>	_Val_comp_iter<_Compare>
iterator_traits<fth_command_t *>	iterator_traits<_Tp *>
remove_reference<fth_command_t &>	remove_reference<_Tp &>
remove_reference<_Iter_comp_iter<lambda [] type at line 80678, col. 15> &>	remove_reference<_Tp &>
__is_pointer<fth_command_t *>	__is_pointer<_Tp *>
__are_same<fth_command_t, fth_command_t>	__are_same<_Tp, _Tp>
_Iter_comp_val<lambda [] type at line 80678, col. 15>	_Iter_comp_val<_Compare>
is_move_assignable<fth_command_t>	is_move_assignable<_Tp>
is_copy_assignable<fth_command_t>	is_copy_assignable<_Tp>
conditional<true, is_move_assignable<fth_command_t>, is_copy_assignable<fth_command_t>>	conditional<_Cond, _Iftrue, _Iffalse>
__is_move_assignable_impl<fth_command_t, true>	__is_move_assignable_impl<_Tp, true>
is_assignable<fth_command_t &, fth_command_t &&>	is_assignable<_Tp, _Up>
__is_empty_non_tuple<char *>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<char *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<char[]>>	__is_empty_non_tuple<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<char[]>>>	conditional<false, _Iftrue, _Iffalse>
allocator<category_t *>	allocator<_Tp>
_Vector_base<category_t *, allocator<category_t *>>	_Vector_base<_Tp, _Alloc>
vector<category_t *, allocator<category_t *>>	vector<_Tp, _Alloc>
unique_ptr<char[], default_delete<char[]>>	unique_ptr<_Tp[], _Dp>
__normal_iterator<category_t **, vector<category_t *, allocator<category_t *>>>	__normal_iterator<_Iterator, _Container>
iterator_traits<category_t **>	iterator_traits<_Tp *>
__uniq_ptr_impl<char, default_delete<char[]>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<char, default_delete<char[]>, void>	_Ptr<_Up, _Ep, <unnamed>>
_Temporary_value	_Temporary_value
reverse_iterator<__normal_iterator<category_t **, vector<category_t *, allocator<category_t *>>>>	reverse_iterator<_Iterator>
__normal_iterator<category_t *const *, vector<category_t *, allocator<category_t *>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<category_t *const *, vector<category_t *, allocator<category_t *>>>>	reverse_iterator<_Iterator>
allocator_traits<allocator<category_t *>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<category_t *>, category_t *>	__alloc_traits<_Alloc, <unnamed>>
rebind<category_t *>	rebind<_Tp>
is_same<char *, char *>	is_same<_Tp, _Tp>
is_convertible<element_type(*)[], char(*)[]>	is_convertible<_From, _To>
__and_<is_array<_Up>, is_same<char *, char *>, is_same<pointer, element_type *>, is_convertible<element_type(*)[], char(*)[]>>	__and_<<unnamed>...>
__and_<is_array<_Up>, is_same<char *, char *>, is_same<pointer, element_type *>, is_convertible<element_type(*)[], char(*)[]>>	__and_<<unnamed>...>
is_same<_Up, char *>	is_same<<unnamed>, <unnamed>>
__or_<is_same<_Up, char *>, is_same<_Up, std::nullptr_t>>	__or_<<unnamed>...>
is_convertible<type(*)[], char(*)[]>	is_convertible<_From, _To>
__and_<is_pointer<_Up>, is_same<char *, char *>, is_convertible<type(*)[], char(*)[]>>	__and_<<unnamed>...>
__or_<__or_<is_same<_Up, char *>, is_same<_Up, std::nullptr_t>>, __and_<is_pointer<_Up>, is_same<char *, char *>, is_convertible<type(*)[], char(*)[]>>>	__or_<<unnamed>...>
__and_<__or_<__or_<is_same<_Up, char *>, is_same<_Up, std::nullptr_t>>, __and_<is_pointer<_Up>, is_same<char *, char *>, is_convertible<type(*)[], char(*)[]>>>>	__and_<<unnamed>...>
is_same<_Up, char *>	is_same<<unnamed>, <unnamed>>
__or_<is_same<_Up, char *>, is_same<_Up, std::nullptr_t>>	__or_<<unnamed>...>
__and_<is_pointer<_Up>, is_same<char *, char *>, is_convertible<type(*)[], char(*)[]>>	__and_<<unnamed>...>
__or_<__or_<is_same<_Up, char *>, is_same<_Up, std::nullptr_t>>, __and_<is_pointer<_Up>, is_same<char *, char *>, is_convertible<type(*)[], char(*)[]>>>	__or_<<unnamed>...>
__and_<__or_<__or_<is_same<_Up, char *>, is_same<_Up, std::nullptr_t>>, __and_<is_pointer<_Up>, is_same<char *, char *>, is_convertible<type(*)[], char(*)[]>>>>	__and_<<unnamed>...>
is_same<_Up, char *>	is_same<<unnamed>, <unnamed>>
__or_<is_same<_Up, char *>, is_same<_Up, std::nullptr_t>>	__or_<<unnamed>...>
__and_<is_pointer<_Up>, is_same<char *, char *>, is_convertible<type(*)[], char(*)[]>>	__and_<<unnamed>...>
__or_<__or_<is_same<_Up, char *>, is_same<_Up, std::nullptr_t>>, __and_<is_pointer<_Up>, is_same<char *, char *>, is_convertible<type(*)[], char(*)[]>>>	__or_<<unnamed>...>
__and_<__or_<__or_<is_same<_Up, char *>, is_same<_Up, std::nullptr_t>>, __and_<is_pointer<_Up>, is_same<char *, char *>, is_convertible<type(*)[], char(*)[]>>>>	__and_<<unnamed>...>
is_same<_Up, char *>	is_same<<unnamed>, <unnamed>>
__or_<is_same<_Up, char *>, is_same<_Up, std::nullptr_t>>	__or_<<unnamed>...>
__and_<is_pointer<_Up>, is_same<char *, char *>, is_convertible<type(*)[], char(*)[]>>	__and_<<unnamed>...>
__or_<__or_<is_same<_Up, char *>, is_same<_Up, std::nullptr_t>>, __and_<is_pointer<_Up>, is_same<char *, char *>, is_convertible<type(*)[], char(*)[]>>>	__or_<<unnamed>...>
__and_<__or_<__or_<is_same<_Up, char *>, is_same<_Up, std::nullptr_t>>, __and_<is_pointer<_Up>, is_same<char *, char *>, is_convertible<type(*)[], char(*)[]>>>>	__and_<<unnamed>...>
is_same<_Up, char *>	is_same<<unnamed>, <unnamed>>
__or_<is_same<_Up, char *>, is_same<_Up, std::nullptr_t>>	__or_<<unnamed>...>
__and_<is_pointer<_Up>, is_same<char *, char *>, is_convertible<type(*)[], char(*)[]>>	__and_<<unnamed>...>
__or_<__or_<is_same<_Up, char *>, is_same<_Up, std::nullptr_t>>, __and_<is_pointer<_Up>, is_same<char *, char *>, is_convertible<type(*)[], char(*)[]>>>	__or_<<unnamed>...>
__and_<__or_<__or_<is_same<_Up, char *>, is_same<_Up, std::nullptr_t>>, __and_<is_pointer<_Up>, is_same<char *, char *>, is_convertible<type(*)[], char(*)[]>>>>	__and_<<unnamed>...>
is_convertible<_UP_element_type(*)[], char(*)[]>	is_convertible<_From, _To>
__and_<is_array<_Up>, is_same<char *, char *>, is_same<_UP_pointer, _UP_element_type *>, is_convertible<_UP_element_type(*)[], char(*)[]>>	__and_<<unnamed>...>
is_base_of<char, _Up>	is_base_of<_Base, _Derived>
is_same<char, type>	is_same<<unnamed>, <unnamed>>
__not_<is_same<char, type>>	__not_<_Pp>
__and_<is_base_of<char, _Up>, __not_<is_same<char, type>>>	__and_<<unnamed>...>
allocator<int>	allocator<_Tp>
vector<int, allocator<int>>	vector<_Tp, _Alloc>
_Temporary_value	_Temporary_value
reverse_iterator<__normal_iterator<const category_t **, vector<const category_t *, allocator<const category_t *>>>>	reverse_iterator<_Iterator>
__normal_iterator<const category_t *const *, vector<const category_t *, allocator<const category_t *>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const category_t *const *, vector<const category_t *, allocator<const category_t *>>>>	reverse_iterator<_Iterator>
rebind<const category_t *>	rebind<_Tp>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
is_empty<default_delete<char[]>>	is_empty<_Tp>
is_empty<char *>	is_empty<_Tp>
tuple<char *, default_delete<char[]>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<char *, default_delete<char[]>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<char[]>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<char[]>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
new_allocator<category_t *>	new_allocator<_Tp>
new_allocator<const category_t *>	new_allocator<_Tp>
enable_if<true, category_t **>	enable_if<true, _Tp>
remove_cv<const category_t *>	remove_cv<_Tp>
remove_const<const category_t *>	remove_const<_Tp>
remove_reference<category_t *&>	remove_reference<_Tp &>
_Iter_comp_iter<lambda [] type at line 116496, col. 45>	_Iter_comp_iter<_Compare>
__iterator_traits<__normal_iterator<category_t **, vector<category_t *, allocator<category_t *>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
move_iterator<category_t **>	move_iterator<_Iterator>
conditional<true, category_t *&&, category_t *&>	conditional<_Cond, _Iftrue, _Iffalse>
_TC<value, char *, default_delete<char[]>>	_TC<<unnamed>, _Elements...>
_TC<true, char *, default_delete<char[]>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, char *, default_delete<char[]>>	_Tuple_impl<_Idx, _Head, _Tail...>
is_same<const category_t **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<const category_t **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<const category_t **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<const category_t **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<const category_t **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<const category_t **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<category_t **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<category_t **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<category_t **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<category_t **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<category_t **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<category_t **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
remove_reference<lambda [] type at line 116496, col. 45 &>	remove_reference<_Tp &>
remove_reference<category_t *>	remove_reference<_Tp>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Head_base<0UL, char *, false>	_Head_base<_Idx, _Head, false>
_Tuple_impl<1UL, default_delete<char[]>>	_Tuple_impl<_Idx, _Head>
is_reference<category_t *&>	is_reference<_Tp>
remove_reference<_Vector_impl &>	remove_reference<_Tp &>
__is_move_iterator<move_iterator<category_t **>>	__is_move_iterator<move_iterator<_Iterator>>
__is_move_iterator<__normal_iterator<category_t **, vector<category_t *, allocator<category_t *>>>>	__is_move_iterator<_Tp>
_Head_base<1UL, default_delete<char[]>, true>	_Head_base<_Idx, _Head, true>
__is_pointer<category_t **>	__is_pointer<_Tp *>
__is_pointer<const category_t **>	__is_pointer<_Tp *>
__are_same<category_t *, const category_t *>	__are_same<<unnamed>, <unnamed>>
__are_same<category_t *, category_t *>	__are_same<_Tp, _Tp>
is_assignable<const category_t *&, category_t *&>	is_assignable<_Tp, _Up>
_Val_comp_iter<lambda [] type at line 116496, col. 45>	_Val_comp_iter<_Compare>
__iterator_traits<__normal_iterator<const category_t **, vector<const category_t *, allocator<const category_t *>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
remove_reference<const category_t *&>	remove_reference<_Tp &>
__is_move_insertable<allocator<category_t *>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<category_t *>	is_move_constructible<_Tp>
__is_move_constructible_impl<category_t *, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<category_t *, category_t *&&>	is_constructible<_Tp, _Args...>
__is_referenceable<category_t *>	__is_referenceable<_Tp>
remove_reference<_Iter_comp_iter<lambda [] type at line 116496, col. 45> &>	remove_reference<_Tp &>
is_move_assignable<category_t *>	is_move_assignable<_Tp>
is_copy_assignable<category_t *>	is_copy_assignable<_Tp>
conditional<true, is_move_assignable<category_t *>, is_copy_assignable<category_t *>>	conditional<_Cond, _Iftrue, _Iffalse>
__iterator_traits<move_iterator<category_t **>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<category_t *&, category_t *&&>	is_assignable<_Tp, _Up>
__is_move_assignable_impl<category_t *, true>	__is_move_assignable_impl<_Tp, true>
__are_same<const category_t *, const category_t *>	__are_same<_Tp, _Tp>
_Iter_comp_val<lambda [] type at line 116496, col. 45>	_Iter_comp_val<_Compare>
is_move_assignable<const category_t *>	is_move_assignable<_Tp>
is_copy_assignable<const category_t *>	is_copy_assignable<_Tp>
conditional<true, is_move_assignable<const category_t *>, is_copy_assignable<const category_t *>>	conditional<_Cond, _Iftrue, _Iffalse>
__is_move_assignable_impl<const category_t *, true>	__is_move_assignable_impl<_Tp, true>
is_assignable<const category_t *&, const category_t *&&>	is_assignable<_Tp, _Up>
pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>	pair<_T1, _T2>
allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>>	allocator<_Tp>
_Insert_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>>	_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
_Insert<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, false>	_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, false>
_Hash_code_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, _Select1st, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, true>	_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Default_ranged_hash, true>
_Hashtable<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>>	_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
__hash_code_base_access	__hash_code_base_access
owning_lock<function_set_t>	owning_lock<Data>
unordered_map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>>>	unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
acquired_lock<function_set_t>	acquired_lock<Data>
_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, false, true>	_Node_iterator<_Value, __constant_iterators, __cache>
_Hashtable_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Hashtable_traits<true, false, true>>	_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>
conditional<false, const pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t> &, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t> &>	conditional<false, _Iftrue, _Iffalse>
_Node_iterator_base<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, true>	_Node_iterator_base<_Value, _Cache_hash_code>
conditional<false, const pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t> *, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t> *>	conditional<false, _Iftrue, _Iffalse>
pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, false, true>, bool>	pair<_T1, _T2>
_Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, false, true>	_Node_const_iterator<_Value, __constant_iterators, __cache>
_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, true>	_Hash_node<_Value, true>
_PCC<<expression>, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, false, true>, bool>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, false, true>, bool>	_PCC<<unnamed>, _T1, _T2>
__pair_base<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, false, true>, bool>	__pair_base<_U1, _U2>
_PCC<<expression>, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>	_PCC<<unnamed>, _T1, _T2>
__pair_base<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>	__pair_base<_U1, _U2>
acquired_lock<const function_set_t>	acquired_lock<Data>
_Local_const_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, _Select1st, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, false, true>	_Local_const_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>
_Local_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, _Select1st, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, false, true>	_Local_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>
allocator_traits<allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>>>	allocator_traits<allocator<_Tp>>
tuple_element<1UL, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>>	tuple_element<1UL, pair<_Tp1, _Tp2>>
_Map_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, true>	_Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, true>>	allocator<_Tp>
_ReuseOrAllocNode<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, true>>>	_ReuseOrAllocNode<_NodeAlloc>
_Equality<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, true>	_Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
_Rehash_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, integral_constant<bool, true>>	_Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true_type>
conditional<true, pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, false, true>, bool>, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, false, true>>	conditional<_Cond, _Iftrue, _Iffalse>
_Hashtable_alloc<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, true>>>	_Hashtable_alloc<_NodeAlloc>
__alloc_traits<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, true>>, _Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, true>>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, true>>>	allocator_traits<allocator<_Tp>>
rebind<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, true>>	rebind<_Tp1>
__rebind<allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>>, _Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, true>, void>	__rebind<_Tp, _Up, __void_t<other>>
_AllocNode<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, true>>>	_AllocNode<_NodeAlloc>
new_allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>>	new_allocator<_Tp>
new_allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, true>>	new_allocator<_Tp>
__rebind<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, true>>, _Hash_node_base *, void>	__rebind<_Tp, _Up, __void_t<other>>
rebind<_Hash_node_base *>	rebind<_Tp1>
_Hash_node_value_base<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>>	_Hash_node_value_base<_Value>
conditional<false, __undefined, _Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, true>>	conditional<false, _Iftrue, _Iffalse>
is_void<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, true>>	is_void<_Tp>
_Hashtable_ebo_helper<0, allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, true>>, true>	_Hashtable_ebo_helper<_Nm, _Tp, true>
remove_reference<function_info_t>	remove_reference<_Tp>
__iterator_traits<_Node_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true, true>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
initializer_list<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>>	initializer_list<_E>
tuple_element<0UL, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>>	tuple_element<0UL, pair<_Tp1, _Tp2>>
remove_reference<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t> &>	remove_reference<_Tp &>
__aligned_buffer<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>>	__aligned_buffer<_Tp>
is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, true> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, true> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, true> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, true> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, true> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, true> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
_Equal_helper<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, unsigned long, true>	_Equal_helper<_Key, _Value, _ExtractKey, _Equal, _HashCodeType, true>
enable_if<value, void>	enable_if<<unnamed>, _Tp>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, _Pair &&>	is_constructible<_Tp, _Args...>
is_same<function_info_t, _U2>	is_same<<unnamed>, <unnamed>>
pair<_Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, false, true>, _Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, false, true>>	pair<_T1, _T2>
pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, false, true>, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, false, true>>	pair<_T1, _T2>
is_same<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, false, true>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, false, true>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, false, true>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, false, true>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, false, true>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<function_info_t, _U2>	is_same<<unnamed>, <unnamed>>
is_same<function_info_t, _U2>	is_same<<unnamed>, <unnamed>>
is_same<function_info_t, _U2>	is_same<<unnamed>, <unnamed>>
is_same<function_info_t, _U2>	is_same<<unnamed>, <unnamed>>
aligned_storage<96UL, 8UL>	aligned_storage<_Len, _Align>
type	type
struct <unnamed>	struct <unnamed>
__strip_reference_wrapper<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, false, true>>	__strip_reference_wrapper<_Tp>
__decay_and_strip<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, false, true>>	__decay_and_strip<_Tp>
remove_reference<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, false, true>>	remove_reference<_Tp>
pointer_traits<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, true> *>	pointer_traits<_Tp *>
maybe_t<highlight_role_t>	maybe_t<T>
__normal_iterator<highlight_spec_t *, vector<highlight_spec_t, allocator<highlight_spec_t>>>	__normal_iterator<_Iterator, _Container>
remove_reference<vector<highlight_spec_t, allocator<highlight_spec_t>> &>	remove_reference<_Tp &>
node_visitation_t<highlighter_t>	node_visitation_t<NodeVisitor>
__normal_iterator<const highlight_spec_t *, vector<highlight_spec_t, allocator<highlight_spec_t>>>	__normal_iterator<_Iterator, _Container>
iterator_traits<const highlight_spec_t *>	iterator_traits<const _Tp *>
maybe_impl_t<highlight_role_t>	maybe_impl_t<T>
_Base_manager<lambda [] type at line 149720, col. 39>	_Base_manager<_Functor>
tuple<node_deleter_t>	tuple<_Elements...>
tuple_element<0UL, tuple<node_deleter_t>>	tuple_element<0UL, tuple<_Head, _Tail...>>
__enable_if<true, highlight_spec_t *>	__enable_if<true, _Tp>
remove_reference<highlight_role_t &>	remove_reference<_Tp &>
_Function_handler<..(..), lambda [] type at line 149720, col. 39>	_Function_handler<..(..), _Functor>
remove_reference<lambda [] type at line 149720, col. 39 &>	remove_reference<_Tp &>
__is_arithmetic<highlight_role_t>	__is_arithmetic<_Tp>
__is_pointer<highlight_role_t>	__is_pointer<_Tp>
__traitor<__is_arithmetic<highlight_role_t>, __is_pointer<highlight_role_t>>	__traitor<_Sp, _Tp>
_Callable<lambda [] type at line 149720, col. 39, void>	_Callable<_Func, _Res2>
reverse_iterator<__normal_iterator<const source_range_t *, vector<source_range_t, allocator<source_range_t>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<const highlight_spec_t *, vector<highlight_spec_t, allocator<highlight_spec_t>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<highlight_spec_t *, vector<highlight_spec_t, allocator<highlight_spec_t>>>>	reverse_iterator<_Iterator>
__normal_iterator<const unsigned long *, vector<unsigned long, allocator<unsigned long>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const unsigned long *, vector<unsigned long, allocator<unsigned long>>>>	reverse_iterator<_Iterator>
_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, false, true>	_Node_iterator<_Value, __constant_iterators, __cache>
pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, false, true>, bool>	pair<_T1, _T2>
remove_reference<highlight_role_t>	remove_reference<_Tp>
__is_move_iterator<__normal_iterator<const highlight_spec_t *, vector<highlight_spec_t, allocator<highlight_spec_t>>>>	__is_move_iterator<_Tp>
conditional<true, pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, false, true>, bool>, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, false, true>>	conditional<_Cond, _Iftrue, _Iffalse>
_Equal_helper<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, unsigned long, true>	_Equal_helper<_Key, _Value, _ExtractKey, _Equal, _HashCodeType, __cache_hash_code>
pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, false, true>, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, false, true>>	pair<_T1, _T2>
__truth_type<false>	__truth_type<<unnamed>>
__is_integer<highlight_role_t>	__is_integer<_Tp>
__is_floating<highlight_role_t>	__is_floating<_Tp>
__traitor<__is_integer<highlight_role_t>, __is_floating<highlight_role_t>>	__traitor<_Sp, _Tp>
__is_pointer<const highlight_spec_t *>	__is_pointer<_Tp *>
__is_pointer<highlight_spec_t *>	__is_pointer<_Tp *>
__are_same<highlight_spec_t, highlight_spec_t>	__are_same<_Tp, _Tp>
remove_reference<_Vector_impl &>	remove_reference<_Tp &>
move_iterator<highlight_spec_t *>	move_iterator<_Iterator>
__is_move_insertable<allocator<highlight_spec_t>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<highlight_spec_t>	is_move_constructible<_Tp>
__is_move_constructible_impl<highlight_spec_t, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<highlight_spec_t, highlight_spec_t &&>	is_constructible<_Tp, _Args...>
remove_reference<_Vector_impl &>	remove_reference<_Tp &>
conditional<true, highlight_spec_t &&, highlight_spec_t &>	conditional<_Cond, _Iftrue, _Iffalse>
remove_reference<allocator<highlight_spec_t> &>	remove_reference<_Tp &>
__uninitialized_fill_n<false>	__uninitialized_fill_n<_TrivialValueType>
is_copy_assignable<highlight_spec_t>	is_copy_assignable<_Tp>
is_move_assignable<highlight_spec_t>	is_move_assignable<_Tp>
conditional<false, is_move_assignable<highlight_spec_t>, is_copy_assignable<highlight_spec_t>>	conditional<false, _Iftrue, _Iffalse>
__is_copy_assignable_impl<highlight_spec_t, true>	__is_copy_assignable_impl<_Tp, true>
is_reference<highlight_spec_t &>	is_reference<_Tp>
__iterator_traits<move_iterator<highlight_spec_t *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<highlight_spec_t &, highlight_spec_t &&>	is_assignable<_Tp, _Up>
is_assignable<highlight_spec_t &, const highlight_spec_t &>	is_assignable<_Tp, _Up>
__is_referenceable<highlight_spec_t>	__is_referenceable<_Tp>
remove_reference<highlight_spec_t>	remove_reference<_Tp>
remove_reference<highlight_spec_t &>	remove_reference<_Tp &>
default_delete<history_t>	default_delete<_Tp>
unique_ptr<history_t, default_delete<history_t>>	unique_ptr<_Tp, _Dp>
pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>	pair<_T1, _T2>
_Rb_tree_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>>	_Rb_tree_const_iterator<_Tp>
lru_cache_t<history_lru_cache_t, history_item_t>	lru_cache_t<Derived, Contents>
lru_node_t	lru_node_t
pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>	pair<_T1, _T2>
_Rb_tree_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>	_Rb_tree_const_iterator<_Tp>
_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>	_Rb_tree_iterator<_Tp>
_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>>	_Rb_tree_iterator<_Tp>
_Select1st<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>>	_Select1st<_Pair>
allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>>	allocator<_Tp>
_Rb_tree<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>, _Select1st<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>>, less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>>>	_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>
_Select1st<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>	_Select1st<_Pair>
allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>	allocator<_Tp>
_Rb_tree<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>, _Select1st<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>, less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>>	_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>
remove_reference<unique_lock<mutex> &>	remove_reference<_Tp &>
_Deque_iterator<_Tp, const _Tp &, const _Tp *>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<_Tp, const _Tp &, const _Tp *>	_Deque_iterator<_Tp, _Ref, _Ptr>
__numeric_traits<long>	__numeric_traits<_Value>
_Deque_base<unsigned long, allocator<unsigned long>>	_Deque_base<_Tp, _Alloc>
deque<unsigned long, allocator<unsigned long>>	deque<_Tp, _Alloc>
allocator<history_item_t>	allocator<_Tp>
_Deque_base<history_item_t, allocator<history_item_t>>	_Deque_base<_Tp, _Alloc>
deque<history_item_t, allocator<history_item_t>>	deque<_Tp, _Alloc>
acquired_lock<const history_impl_t>	acquired_lock<Data>
acquired_lock<history_impl_t>	acquired_lock<Data>
default_delete<impl_wrapper_t>	default_delete<_Tp>
unique_ptr<impl_wrapper_t, default_delete<impl_wrapper_t>>	unique_ptr<_Tp, _Dp>
default_delete<history_file_contents_t>	default_delete<_Tp>
unique_ptr<history_file_contents_t, default_delete<history_file_contents_t>>	unique_ptr<_Tp, _Dp>
map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>, less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>>>	map<_Key, _Tp, _Compare, _Alloc>
owning_lock<map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>, less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>>>>	owning_lock<Data>
function<..(..)>	function<..(..)>
relaxed_atomic_t<unsigned long>	relaxed_atomic_t<T>
owning_lock<history_impl_t>	owning_lock<Data>
uniform_int_distribution<unsigned int>	uniform_int_distribution<_IntType>
acquired_lock<map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>, less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>>>>	acquired_lock<Data>
__uniq_ptr_impl<history_t, default_delete<history_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<history_t, default_delete<history_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t, less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>>	map<_Key, _Tp, _Compare, _Alloc>
remove_reference<history_item_t &>	remove_reference<_Tp &>
reverse_iterator<__normal_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	reverse_iterator<_Iterator>
__add_lvalue_reference_helper<history_t, true>	__add_lvalue_reference_helper<_Tp, true>
__uniq_ptr_impl<impl_wrapper_t, default_delete<impl_wrapper_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<impl_wrapper_t, default_delete<impl_wrapper_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
allocator_traits<allocator<history_item_t>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<history_item_t>, history_item_t>	__alloc_traits<_Alloc, <unnamed>>
__uniq_ptr_impl<history_file_contents_t, default_delete<history_file_contents_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<history_file_contents_t, default_delete<history_file_contents_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
_Deque_iterator<history_item_t, history_item_t &, history_item_t *>	_Deque_iterator<_Tp, _Ref, _Ptr>
reverse_iterator<_Deque_iterator<history_item_t, history_item_t &, history_item_t *>>	reverse_iterator<_Iterator>
__iterator_traits<_Deque_iterator<history_item_t, history_item_t &, history_item_t *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
pair<_Node_iterator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, false>, bool>	pair<_T1, _T2>
_Deque_iterator<history_item_t, const history_item_t &, const history_item_t *>	_Deque_iterator<_Tp, _Ref, _Ptr>
reverse_iterator<_Deque_iterator<history_item_t, const history_item_t &, const history_item_t *>>	reverse_iterator<_Iterator>
__iterator_traits<_Deque_iterator<history_item_t, const history_item_t &, const history_item_t *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
_Deque_iterator<unsigned long, const unsigned long &, const unsigned long *>	_Deque_iterator<_Tp, _Ref, _Ptr>
reverse_iterator<_Deque_iterator<unsigned long, const unsigned long &, const unsigned long *>>	reverse_iterator<_Iterator>
__iterator_traits<_Deque_iterator<unsigned long, const unsigned long &, const unsigned long *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
iterator	iterator
pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &, const history_item_t &>	pair<_T1, _T2>
_PCC<<expression>, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &, const history_item_t &>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &, const history_item_t &>	_PCC<<unnamed>, _T1, _T2>
__pair_base<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &, const history_item_t &>	__pair_base<_U1, _U2>
lru_link_t	lru_link_t
pointer_traits<const history_item_t *>	pointer_traits<_Tp *>
_Deque_iterator<history_item_t, _CvTp &, _CvTp *>	_Deque_iterator<_Tp, _Ref, _Ptr>
iterator_traits<_Deque_iterator<unsigned long, const unsigned long &, const unsigned long *>>	iterator_traits<_Iterator>
iterator<random_access_iterator_tag, unsigned long, long, const unsigned long *, const unsigned long &>	iterator<_Category, _Tp, _Distance, _Pointer, _Reference>
iterator_traits<_Deque_iterator<history_item_t, const history_item_t &, const history_item_t *>>	iterator_traits<_Iterator>
iterator<random_access_iterator_tag, history_item_t, long, const history_item_t *, const history_item_t &>	iterator<_Category, _Tp, _Distance, _Pointer, _Reference>
_PCC<<expression>, _Node_iterator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, false>, bool>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, _Node_iterator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, false>, bool>	_PCC<<unnamed>, _T1, _T2>
__pair_base<_Node_iterator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, false>, bool>	__pair_base<_U1, _U2>
iterator_traits<_Deque_iterator<history_item_t, history_item_t &, history_item_t *>>	iterator_traits<_Iterator>
iterator<random_access_iterator_tag, history_item_t, long, history_item_t *, history_item_t &>	iterator<_Category, _Tp, _Distance, _Pointer, _Reference>
is_same<history_item_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<history_item_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<history_item_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<history_item_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<history_item_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<history_item_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
__is_referenceable<history_t>	__is_referenceable<_Tp>
iterator<random_access_iterator_tag, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &>	iterator<_Category, _Tp, _Distance, _Pointer, _Reference>
reverse_iterator<_Rb_tree_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>>	reverse_iterator<_Iterator>
reverse_iterator<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>>	reverse_iterator<_Iterator>
allocator_traits<allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>	__alloc_traits<_Alloc, <unnamed>>
rebind<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>	rebind<_Tp>
pair<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>, bool>	pair<_T1, _T2>
_PCC<<expression>, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>	_PCC<<unnamed>, _T1, _T2>
__pair_base<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>	__pair_base<_U1, _U2>
acquired_lock<const map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>, less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>>>>	acquired_lock<Data>
_Deque_iterator<unsigned long, unsigned long &, unsigned long *>	_Deque_iterator<_Tp, _Ref, _Ptr>
reverse_iterator<_Deque_iterator<unsigned long, unsigned long &, unsigned long *>>	reverse_iterator<_Iterator>
pointer_traits<unsigned long *>	pointer_traits<_Tp *>
_Callable<type, type>	_Callable<_Func, _Res2>
_Callable<_Functor, type>	_Callable<_Func, _Res2>
_Maybe_unary_or_binary_function<bool, const history_item_t &>	_Maybe_unary_or_binary_function<_Res, _T1>
reverse_iterator<_Rb_tree_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>>>	reverse_iterator<_Iterator>
reverse_iterator<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>>>	reverse_iterator<_Iterator>
allocator_traits<allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>>	__alloc_traits<_Alloc, <unnamed>>
rebind<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>>	rebind<_Tp>
pair<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>>, bool>	pair<_T1, _T2>
is_convertible<pointer, history_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, history_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, history_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, history_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
is_convertible<pointer, history_file_contents_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, history_file_contents_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, history_file_contents_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, history_file_contents_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
pointer_traits<history_item_t *>	pointer_traits<_Tp *>
rebind<history_item_t>	rebind<_Tp>
is_convertible<pointer, impl_wrapper_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, impl_wrapper_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, impl_wrapper_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, impl_wrapper_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
_Deque_impl	_Deque_impl
allocator<history_item_t *>	allocator<_Tp>
__alloc_traits<allocator<history_item_t *>, history_item_t *>	__alloc_traits<_Alloc, <unnamed>>
rebind<history_item_t *>	rebind<_Tp>
_Deque_impl	_Deque_impl
allocator<unsigned long *>	allocator<_Tp>
__alloc_traits<allocator<unsigned long *>, unsigned long *>	__alloc_traits<_Alloc, <unnamed>>
rebind<unsigned long *>	rebind<_Tp>
__numeric_traits_floating<long>	__numeric_traits_floating<_Value>
__conditional_type<true, __numeric_traits_integer<long>, __numeric_traits_floating<long>>	__conditional_type<_Cond, _Iftrue, _Iffalse>
is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>, value_type>	is_same<<unnamed>, <unnamed>>
_Alloc_node	_Alloc_node
_Reuse_or_alloc_node	_Reuse_or_alloc_node
_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>	_Rb_tree_node<_Val>
allocator<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>>	allocator<_Tp>
__alloc_traits<allocator<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>>, _Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>>	__alloc_traits<_Alloc, <unnamed>>
rebind<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>>	rebind<_Tp>
_Rb_tree_impl<less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>	_Rb_tree_impl<_Key_compare, <unnamed>>
is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>, value_type>	is_same<<unnamed>, <unnamed>>
_Alloc_node	_Alloc_node
_Reuse_or_alloc_node	_Reuse_or_alloc_node
_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>>	_Rb_tree_node<_Val>
allocator<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>>>	allocator<_Tp>
__alloc_traits<allocator<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>>>, _Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>>>	__alloc_traits<_Alloc, <unnamed>>
rebind<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>>>	rebind<_Tp>
_Rb_tree_impl<less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>	_Rb_tree_impl<_Key_compare, <unnamed>>
_Base_manager<lambda [] type at line 172408, col. 60>	_Base_manager<_Functor>
_Base_manager<lambda [] type at line 172363, col. 26>	_Base_manager<_Functor>
__is_empty_non_tuple<default_delete<history_file_contents_t>>	__is_empty_non_tuple<_Tp>
is_empty<default_delete<history_file_contents_t>>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<history_file_contents_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<history_file_contents_t *>	__is_empty_non_tuple<_Tp>
is_empty<history_file_contents_t *>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<history_file_contents_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<impl_wrapper_t>>	__is_empty_non_tuple<_Tp>
is_empty<default_delete<impl_wrapper_t>>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<impl_wrapper_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<impl_wrapper_t *>	__is_empty_non_tuple<_Tp>
is_empty<impl_wrapper_t *>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<impl_wrapper_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<history_t>>	__is_empty_non_tuple<_Tp>
is_empty<default_delete<history_t>>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<history_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<history_t *>	__is_empty_non_tuple<_Tp>
is_empty<history_t *>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<history_t *>>	conditional<false, _Iftrue, _Iffalse>
new_allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>	new_allocator<_Tp>
new_allocator<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>>	new_allocator<_Tp>
new_allocator<history_item_t>	new_allocator<_Tp>
new_allocator<history_item_t *>	new_allocator<_Tp>
new_allocator<unsigned long *>	new_allocator<_Tp>
new_allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>>	new_allocator<_Tp>
new_allocator<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>>>	new_allocator<_Tp>
param_type	param_type
allocator_traits<allocator<history_item_t *>>	allocator_traits<allocator<_Tp>>
allocator_traits<allocator<unsigned long *>>	allocator_traits<allocator<_Tp>>
allocator_traits<allocator<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>>>	allocator_traits<allocator<_Tp>>
allocator_traits<allocator<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>>>>	allocator_traits<allocator<_Tp>>
conditional<false, __undefined, history_item_t>	conditional<false, _Iftrue, _Iffalse>
conditional<false, __undefined, unsigned long>	conditional<false, _Iftrue, _Iffalse>
conditional<false, __undefined, const history_item_t>	conditional<false, _Iftrue, _Iffalse>
is_void<const history_item_t>	is_void<_Tp>
conditional<false, __undefined, const unsigned long>	conditional<false, _Iftrue, _Iffalse>
is_void<const unsigned long>	is_void<_Tp>
tuple<impl_wrapper_t *, default_delete<impl_wrapper_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<impl_wrapper_t *, default_delete<impl_wrapper_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<impl_wrapper_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<impl_wrapper_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<history_file_contents_t *, default_delete<history_file_contents_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<history_file_contents_t *, default_delete<history_file_contents_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<history_file_contents_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<history_file_contents_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<history_t *, default_delete<history_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<history_t *, default_delete<history_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<history_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<history_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
remove_cv<history_file_contents_t *>	remove_cv<_Tp>
remove_const<history_file_contents_t *>	remove_const<_Tp>
remove_cv<_Deque_iterator<history_item_t, history_item_t &, history_item_t *>>	remove_cv<_Tp>
remove_const<_Deque_iterator<history_item_t, history_item_t &, history_item_t *>>	remove_const<_Tp>
remove_cv<history_item_t **>	remove_cv<_Tp>
remove_const<history_item_t **>	remove_const<_Tp>
_Deque_iterator<unsigned long, _CvTp &, _CvTp *>	_Deque_iterator<_Tp, _Ref, _Ptr>
remove_cv<_Deque_iterator<unsigned long, unsigned long &, unsigned long *>>	remove_cv<_Tp>
remove_const<_Deque_iterator<unsigned long, unsigned long &, unsigned long *>>	remove_const<_Tp>
remove_cv<unsigned long **>	remove_cv<_Tp>
remove_const<unsigned long **>	remove_const<_Tp>
remove_cv<..(*)(..)>	remove_cv<_Tp>
remove_const<..(*)(..)>	remove_const<_Tp>
remove_cv<history_t *>	remove_cv<_Tp>
remove_const<history_t *>	remove_const<_Tp>
remove_reference<history_t *&>	remove_reference<_Tp &>
remove_reference<history_file_contents_t *&>	remove_reference<_Tp &>
remove_reference<default_delete<history_file_contents_t>>	remove_reference<_Tp>
remove_reference<deque<unsigned long, allocator<unsigned long>> &>	remove_reference<_Tp &>
remove_reference<deque<history_item_t, allocator<history_item_t>> &>	remove_reference<_Tp &>
conditional<true, pair<_Node_iterator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, false>, bool>, _Node_iterator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, false>>	conditional<_Cond, _Iftrue, _Iffalse>
remove_reference<history_impl_t &>	remove_reference<_Tp &>
remove_reference<impl_wrapper_t *&>	remove_reference<_Tp &>
remove_reference<default_delete<history_t>>	remove_reference<_Tp>
_Function_handler<..(..), lambda [] type at line 172363, col. 26>	_Function_handler<..(..), _Functor>
remove_reference<lambda [] type at line 172363, col. 26 &>	remove_reference<_Tp &>
_Function_handler<..(..), lambda [] type at line 172408, col. 60>	_Function_handler<..(..), _Functor>
remove_reference<lambda [] type at line 172408, col. 60 &>	remove_reference<_Tp &>
__normal_iterator<const parse_error_t *, vector<parse_error_t, allocator<parse_error_t>>>	__normal_iterator<_Iterator, _Container>
remove_reference<const history_item_t &>	remove_reference<_Tp &>
iterator_traits<history_item_t *>	iterator_traits<_Tp *>
_TC<value, history_t *, default_delete<history_t>>	_TC<<unnamed>, _Elements...>
_TC<true, history_t *, default_delete<history_t>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, history_t *, default_delete<history_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_TC<value, history_file_contents_t *, default_delete<history_file_contents_t>>	_TC<<unnamed>, _Elements...>
_TC<true, history_file_contents_t *, default_delete<history_file_contents_t>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, history_file_contents_t *, default_delete<history_file_contents_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_TC<value, impl_wrapper_t *, default_delete<impl_wrapper_t>>	_TC<<unnamed>, _Elements...>
_TC<true, impl_wrapper_t *, default_delete<impl_wrapper_t>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, impl_wrapper_t *, default_delete<impl_wrapper_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
is_same<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
__aligned_membuf<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>>	__aligned_membuf<_Tp>
unary_function<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	unary_function<_Arg, _Result>
is_same<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
__aligned_membuf<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>	__aligned_membuf<_Tp>
unary_function<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	unary_function<_Arg, _Result>
__normal_iterator<unsigned int *, vector<unsigned int, allocator<unsigned int>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<unsigned int *, vector<unsigned int, allocator<unsigned int>>>>	reverse_iterator<_Iterator>
_Callable<lambda [] type at line 172363, col. 26, void>	_Callable<_Func, _Res2>
__normal_iterator<parse_error_t *, vector<parse_error_t, allocator<parse_error_t>>>	__normal_iterator<_Iterator, _Container>
iterator_traits<const parse_error_t *>	iterator_traits<const _Tp *>
reverse_iterator<__normal_iterator<const parse_error_t *, vector<parse_error_t, allocator<parse_error_t>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<parse_error_t *, vector<parse_error_t, allocator<parse_error_t>>>>	reverse_iterator<_Iterator>
is_same<unsigned long **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unsigned long **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unsigned long **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unsigned long **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unsigned long **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unsigned long **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<history_item_t **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<history_item_t **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<history_item_t **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<history_item_t **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<history_item_t **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<history_item_t **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
__normal_iterator<long *, vector<long, allocator<long>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<long *, vector<long, allocator<long>>>>	reverse_iterator<_Iterator>
_Node_const_iterator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, false>	_Node_const_iterator<_Value, __constant_iterators, __cache>
is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
unary_function<const history_item_t &, bool>	unary_function<_Arg, _Result>
_Callable<lambda [] type at line 172408, col. 60, bool>	_Callable<_Func, _Res2>
_Callable<function<..(..)>, _Tp>	_Callable<_Func, _Res2>
is_same<unique_ptr<history_t, default_delete<history_t>>, _U2>	is_same<<unnamed>, <unnamed>>
pair<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>, _Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>>	pair<_T1, _T2>
pair<_Rb_tree_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>, _Rb_tree_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>>	pair<_T1, _T2>
pair<_Node_const_iterator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, false>, _Node_const_iterator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, false>>	pair<_T1, _T2>
pair<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>>, _Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>>>	pair<_T1, _T2>
pair<_Rb_tree_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>>, _Rb_tree_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>>>	pair<_T1, _T2>
_PCC<<expression>, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>	_PCC<<unnamed>, _T1, _T2>
__pair_base<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>	__pair_base<_U1, _U2>
is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
_PCC<<expression>, _Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>, bool>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, _Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>, bool>	_PCC<<unnamed>, _T1, _T2>
__pair_base<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>, bool>	__pair_base<_U1, _U2>
is_same<_Node_iterator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, false>, _U1>	is_same<<unnamed>, <unnamed>>
pointer_traits<const unsigned long *>	pointer_traits<_Tp *>
is_same<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &, _U1>	is_same<<unnamed>, <unnamed>>
is_same<const history_item_t &, _U2>	is_same<<unnamed>, <unnamed>>
remove_reference<_Hashtable_alloc<allocator<_Hash_node<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false>>> &>	remove_reference<_Tp &>
remove_reference<_Deque_base<history_item_t, allocator<history_item_t>> &>	remove_reference<_Tp &>
remove_reference<_Deque_base<unsigned long, allocator<unsigned long>> &>	remove_reference<_Tp &>
__match_cv_qualifiers<unsigned int, unsigned int, false, false>	__match_cv_qualifiers<_Qualified, _Unqualified, _IsConst, _IsVol>
__make_unsigned_selector<unsigned int, true, false>	__make_unsigned_selector<_Tp, true, false>
make_unsigned<unsigned int>	make_unsigned<_Tp>
is_same<const history_item_t &, _U2>	is_same<<unnamed>, <unnamed>>
is_same<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &, _U1>	is_same<<unnamed>, <unnamed>>
is_same<const history_item_t &, _U2>	is_same<<unnamed>, <unnamed>>
is_same<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &, _U1>	is_same<<unnamed>, <unnamed>>
is_same<const history_item_t &, _U2>	is_same<<unnamed>, <unnamed>>
is_same<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &, _U1>	is_same<<unnamed>, <unnamed>>
is_same<const history_item_t &, _U2>	is_same<<unnamed>, <unnamed>>
is_same<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, false>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, false>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, false>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, false>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<lru_node_t, _U2>	is_same<<unnamed>, <unnamed>>
is_same<unique_ptr<history_t, default_delete<history_t>>, _U2>	is_same<<unnamed>, <unnamed>>
is_same<unique_ptr<history_t, default_delete<history_t>>, _U2>	is_same<<unnamed>, <unnamed>>
is_same<unique_ptr<history_t, default_delete<history_t>>, _U2>	is_same<<unnamed>, <unnamed>>
is_same<unique_ptr<history_t, default_delete<history_t>>, _U2>	is_same<<unnamed>, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Tp2	_Tp2
_Tp2	_Tp2
_Tuple_impl<1UL, default_delete<impl_wrapper_t>>	_Tuple_impl<_Idx, _Head>
_Head_base<1UL, default_delete<impl_wrapper_t>, true>	_Head_base<_Idx, _Head, true>
_Tuple_impl<1UL, default_delete<history_t>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<1UL, default_delete<history_file_contents_t>>	_Tuple_impl<_Idx, _Head>
_Head_base<0UL, impl_wrapper_t *, false>	_Head_base<_Idx, _Head, false>
_Head_base<0UL, history_file_contents_t *, false>	_Head_base<_Idx, _Head, false>
_Head_base<1UL, default_delete<history_file_contents_t>, true>	_Head_base<_Idx, _Head, true>
_Head_base<0UL, history_t *, false>	_Head_base<_Idx, _Head, false>
_Head_base<1UL, default_delete<history_t>, true>	_Head_base<_Idx, _Head, true>
remove_reference<allocator<unsigned long> &>	remove_reference<_Tp &>
remove_reference<allocator<history_item_t> &>	remove_reference<_Tp &>
remove_reference<lru_node_t>	remove_reference<_Tp>
is_same<lru_node_t, _U2>	is_same<<unnamed>, <unnamed>>
is_same<lru_node_t, _U2>	is_same<<unnamed>, <unnamed>>
is_same<lru_node_t, _U2>	is_same<<unnamed>, <unnamed>>
is_same<lru_node_t, _U2>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>, _U1>	is_same<<unnamed>, <unnamed>>
__make_unsigned<unsigned int>	__make_unsigned<_Tp>
__strip_reference_wrapper<_Node_iterator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, false>>	__strip_reference_wrapper<_Tp>
__decay_and_strip<_Node_iterator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, false>>	__decay_and_strip<_Tp>
remove_reference<_Node_iterator<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, false>>	remove_reference<_Tp>
remove_reference<unsigned long **&>	remove_reference<_Tp &>
remove_reference<_Deque_iterator<unsigned long, unsigned long &, unsigned long *> &>	remove_reference<_Tp &>
remove_reference<history_item_t **&>	remove_reference<_Tp &>
remove_reference<_Deque_iterator<history_item_t, history_item_t &, history_item_t *> &>	remove_reference<_Tp &>
remove_reference<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>> *&>	remove_reference<_Tp &>
remove_reference<_Rb_tree_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>>	remove_reference<_Tp>
remove_reference<_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>> *&>	remove_reference<_Tp &>
__is_move_iterator<unsigned long **>	__is_move_iterator<_Tp>
__is_move_iterator<history_item_t **>	__is_move_iterator<_Tp>
iterator_traits<history_item_t **>	iterator_traits<_Tp *>
__is_pointer<history_item_t **>	__is_pointer<_Tp *>
__are_same<history_item_t *, history_item_t *>	__are_same<_Tp, _Tp>
__copy_move_backward<false, true, random_access_iterator_tag>	__copy_move_backward<_IsMove, true, random_access_iterator_tag>
iterator_traits<unsigned long **>	iterator_traits<_Tp *>
__is_pointer<unsigned long **>	__is_pointer<_Tp *>
__are_same<unsigned long *, unsigned long *>	__are_same<_Tp, _Tp>
__is_pointer<history_item_t *>	__is_pointer<_Tp *>
__are_same<history_item_t, history_item_t>	__are_same<_Tp, _Tp>
is_move_assignable<unsigned long *>	is_move_assignable<_Tp>
is_copy_assignable<unsigned long *>	is_copy_assignable<_Tp>
conditional<false, is_move_assignable<unsigned long *>, is_copy_assignable<unsigned long *>>	conditional<false, _Iftrue, _Iffalse>
is_move_assignable<history_item_t *>	is_move_assignable<_Tp>
is_copy_assignable<history_item_t *>	is_copy_assignable<_Tp>
conditional<false, is_move_assignable<history_item_t *>, is_copy_assignable<history_item_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_copy_assignable_impl<unsigned long *, true>	__is_copy_assignable_impl<_Tp, true>
__is_copy_assignable_impl<history_item_t *, true>	__is_copy_assignable_impl<_Tp, true>
is_assignable<history_item_t *&, history_item_t *const &>	is_assignable<_Tp, _Up>
__is_referenceable<history_item_t *>	__is_referenceable<_Tp>
is_assignable<unsigned long *&, unsigned long *const &>	is_assignable<_Tp, _Up>
maybe_t<history_file_type_t>	maybe_t<T>
maybe_impl_t<history_file_type_t>	maybe_impl_t<T>
remove_reference<history_file_type_t &>	remove_reference<_Tp &>
allocator<terminfo_mapping_t>	allocator<_Tp>
_Vector_base<terminfo_mapping_t, allocator<terminfo_mapping_t>>	_Vector_base<_Tp, _Alloc>
vector<terminfo_mapping_t, allocator<terminfo_mapping_t>>	vector<_Tp, _Alloc>
_Vector_base<char_event_t, allocator<char_event_t>>	_Vector_base<_Tp, _Alloc>
vector<char_event_t, allocator<char_event_t>>	vector<_Tp, _Alloc>
allocator<input_mapping_t>	allocator<_Tp>
_Vector_base<input_mapping_t, allocator<input_mapping_t>>	_Vector_base<_Tp, _Alloc>
vector<input_mapping_t, allocator<input_mapping_t>>	vector<_Tp, _Alloc>
maybe_t<char_event_t>	maybe_t<T>
shared_ptr<const vector<input_mapping_t, allocator<input_mapping_t>>>	shared_ptr<_Tp>
maybe_t<input_mapping_t>	maybe_t<T>
latch_t<vector<terminfo_mapping_t, allocator<terminfo_mapping_t>>>	latch_t<T>
owning_lock<input_mapping_set_t>	owning_lock<Data>
maybe_t<basic_string<char, char_traits<char>, allocator<char>>>	maybe_t<T>
__normal_iterator<const terminfo_mapping_t *, vector<terminfo_mapping_t, allocator<terminfo_mapping_t>>>	__normal_iterator<_Iterator, _Container>
iterator_traits<const terminfo_mapping_t *>	iterator_traits<const _Tp *>
__normal_iterator<terminfo_mapping_t *, vector<terminfo_mapping_t, allocator<terminfo_mapping_t>>>	__normal_iterator<_Iterator, _Container>
iterator_traits<terminfo_mapping_t *>	iterator_traits<_Tp *>
initializer_list<terminfo_mapping_t>	initializer_list<_E>
__normal_iterator<input_mapping_t *, vector<input_mapping_t, allocator<input_mapping_t>>>	__normal_iterator<_Iterator, _Container>
__normal_iterator<const input_mapping_t *, vector<input_mapping_t, allocator<input_mapping_t>>>	__normal_iterator<_Iterator, _Container>
remove_reference<input_mapping_t &>	remove_reference<_Tp &>
__normal_iterator<char_event_t *, vector<char_event_t, allocator<char_event_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<char_event_t *, vector<char_event_t, allocator<char_event_t>>>>	reverse_iterator<_Iterator>
iterator_traits<char_event_t *>	iterator_traits<_Tp *>
__iterator_traits<__normal_iterator<char_event_t *, vector<char_event_t, allocator<char_event_t>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
__shared_ptr_access<const vector<input_mapping_t, allocator<input_mapping_t>>, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
__shared_ptr<const vector<input_mapping_t, allocator<input_mapping_t>>, _S_atomic>	__shared_ptr<_Tp, _Lp>
iterator_traits<const input_mapping_t *>	iterator_traits<const _Tp *>
reverse_iterator<__normal_iterator<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	reverse_iterator<_Iterator>
remove_reference<vector<input_mapping_t, allocator<input_mapping_t>> &>	remove_reference<_Tp &>
iterator_traits<input_mapping_t *>	iterator_traits<_Tp *>
iterator_traits<__normal_iterator<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	iterator_traits<_Iterator>
iterator<random_access_iterator_tag, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, long, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &>	iterator<_Category, _Tp, _Distance, _Pointer, _Reference>
remove_extent<const vector<input_mapping_t, allocator<input_mapping_t>>>	remove_extent<_Tp>
__weak_ptr<const vector<input_mapping_t, allocator<input_mapping_t>>, _S_atomic>	__weak_ptr<_Tp, _Lp>
is_array<const vector<input_mapping_t, allocator<input_mapping_t>>>	is_array<<unnamed>>
is_void<const vector<input_mapping_t, allocator<input_mapping_t>>>	is_void<_Tp>
iterator_traits<__normal_iterator<char_event_t *, vector<char_event_t, allocator<char_event_t>>>>	iterator_traits<_Iterator>
iterator<random_access_iterator_tag, char_event_t, long, char_event_t *, char_event_t &>	iterator<_Category, _Tp, _Distance, _Pointer, _Reference>
maybe_impl_t<basic_string<char, char_traits<char>, allocator<char>>>	maybe_impl_t<T>
_Temporary_value	_Temporary_value
__normal_iterator<const char_event_t *, vector<char_event_t, allocator<char_event_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const char_event_t *, vector<char_event_t, allocator<char_event_t>>>>	reverse_iterator<_Iterator>
maybe_impl_t<input_mapping_t>	maybe_impl_t<T>
allocator<vector<input_mapping_t, allocator<input_mapping_t>>>	allocator<_Tp>
weak_ptr<const vector<input_mapping_t, allocator<input_mapping_t>>>	weak_ptr<_Tp>
maybe_impl_t<char_event_t>	maybe_impl_t<T>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
allocator_traits<allocator<input_mapping_t>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<input_mapping_t>, input_mapping_t>	__alloc_traits<_Alloc, <unnamed>>
rebind<input_mapping_t>	rebind<_Tp>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
allocator_traits<allocator<terminfo_mapping_t>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<terminfo_mapping_t>, terminfo_mapping_t>	__alloc_traits<_Alloc, <unnamed>>
rebind<terminfo_mapping_t>	rebind<_Tp>
default_delete<vector<terminfo_mapping_t, allocator<terminfo_mapping_t>>>	default_delete<_Tp>
__is_empty_non_tuple<default_delete<vector<terminfo_mapping_t, allocator<terminfo_mapping_t>>>>	__is_empty_non_tuple<_Tp>
is_empty<default_delete<vector<terminfo_mapping_t, allocator<terminfo_mapping_t>>>>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<vector<terminfo_mapping_t, allocator<terminfo_mapping_t>>>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<vector<terminfo_mapping_t, allocator<terminfo_mapping_t>> *>	__is_empty_non_tuple<_Tp>
is_empty<vector<terminfo_mapping_t, allocator<terminfo_mapping_t>> *>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<vector<terminfo_mapping_t, allocator<terminfo_mapping_t>> *>>	conditional<false, _Iftrue, _Iffalse>
new_allocator<input_mapping_t>	new_allocator<_Tp>
new_allocator<terminfo_mapping_t>	new_allocator<_Tp>
new_allocator<vector<input_mapping_t, allocator<input_mapping_t>>>	new_allocator<_Tp>
_Sp_counted_ptr_inplace<const vector<input_mapping_t, allocator<input_mapping_t>>, allocator<vector<input_mapping_t, allocator<input_mapping_t>>>, _S_atomic>	_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>
new_allocator<_Sp_counted_ptr_inplace<const vector<input_mapping_t, allocator<input_mapping_t>>, allocator<vector<input_mapping_t, allocator<input_mapping_t>>>, _S_atomic>>	new_allocator<_Tp>
allocator<_Sp_counted_ptr_inplace<const vector<input_mapping_t, allocator<input_mapping_t>>, allocator<vector<input_mapping_t, allocator<input_mapping_t>>>, _S_atomic>>	allocator<_Tp>
__rebind<allocator<vector<input_mapping_t, allocator<input_mapping_t>>>, _Sp_counted_ptr_inplace<const vector<input_mapping_t, allocator<input_mapping_t>>, allocator<vector<input_mapping_t, allocator<input_mapping_t>>>, _S_atomic>, void>	__rebind<_Tp, _Up, __void_t<other>>
rebind<_Sp_counted_ptr_inplace<const vector<input_mapping_t, allocator<input_mapping_t>>, allocator<vector<input_mapping_t, allocator<input_mapping_t>>>, _S_atomic>>	rebind<_Tp1>
_Impl	_Impl
conditional<false, __undefined, _Sp_counted_ptr_inplace<const vector<input_mapping_t, allocator<input_mapping_t>>, allocator<vector<input_mapping_t, allocator<input_mapping_t>>>, _S_atomic>>	conditional<false, _Iftrue, _Iffalse>
is_void<_Sp_counted_ptr_inplace<const vector<input_mapping_t, allocator<input_mapping_t>>, allocator<vector<input_mapping_t, allocator<input_mapping_t>>>, _S_atomic>>	is_void<_Tp>
_Temporary_value	_Temporary_value
reverse_iterator<__normal_iterator<terminfo_mapping_t *, vector<terminfo_mapping_t, allocator<terminfo_mapping_t>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<const terminfo_mapping_t *, vector<terminfo_mapping_t, allocator<terminfo_mapping_t>>>>	reverse_iterator<_Iterator>
tuple<vector<terminfo_mapping_t, allocator<terminfo_mapping_t>> *, default_delete<vector<terminfo_mapping_t, allocator<terminfo_mapping_t>>>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<vector<terminfo_mapping_t, allocator<terminfo_mapping_t>> *, default_delete<vector<terminfo_mapping_t, allocator<terminfo_mapping_t>>>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<vector<terminfo_mapping_t, allocator<terminfo_mapping_t>>>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<vector<terminfo_mapping_t, allocator<terminfo_mapping_t>>>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
_Temporary_value	_Temporary_value
reverse_iterator<__normal_iterator<input_mapping_t *, vector<input_mapping_t, allocator<input_mapping_t>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<const input_mapping_t *, vector<input_mapping_t, allocator<input_mapping_t>>>>	reverse_iterator<_Iterator>
remove_cv<const vector<input_mapping_t, allocator<input_mapping_t>> *>	remove_cv<_Tp>
remove_const<const vector<input_mapping_t, allocator<input_mapping_t>> *>	remove_const<_Tp>
remove_cv<input_mapping_t>	remove_cv<_Tp>
remove_const<input_mapping_t>	remove_const<_Tp>
remove_const<const vector<input_mapping_t, allocator<input_mapping_t>>>	remove_const<const _Tp>
remove_cv<const vector<input_mapping_t, allocator<input_mapping_t>>>	remove_cv<_Tp>
__allocated_ptr<allocator<_Sp_counted_ptr_inplace<const vector<input_mapping_t, allocator<input_mapping_t>>, allocator<vector<input_mapping_t, allocator<input_mapping_t>>>, _S_atomic>>>	__allocated_ptr<_Alloc>
allocator_traits<allocator<vector<input_mapping_t, allocator<input_mapping_t>>>>	allocator_traits<allocator<_Tp>>
_Sp_ebo_helper<0, allocator<vector<input_mapping_t, allocator<input_mapping_t>>>, true>	_Sp_ebo_helper<_Nm, _Tp, true>
_Sp_alloc_shared_tag<allocator<vector<input_mapping_t, allocator<input_mapping_t>>>>	_Sp_alloc_shared_tag<_Alloc>
remove_reference<vector<input_mapping_t, allocator<input_mapping_t>>>	remove_reference<_Tp>
remove_reference<const char *&>	remove_reference<_Tp &>
_Iter_pred<lambda [] type at line 152141, col. 25>	_Iter_pred<_Predicate>
__normal_iterator<input_mapping_name_t *, vector<input_mapping_name_t, allocator<input_mapping_name_t>>>	__normal_iterator<_Iterator, _Container>
move_iterator<input_mapping_name_t *>	move_iterator<_Iterator>
_Iter_comp_iter<..(*)(..)>	_Iter_comp_iter<_Compare>
remove_reference<shared_ptr<const vector<input_mapping_t, allocator<input_mapping_t>>> &>	remove_reference<_Tp &>
remove_reference<input_mapping_set_t &>	remove_reference<_Tp &>
_Iter_comp_val<..(*)(..)>	_Iter_comp_val<_Compare>
remove_reference<char_event_t &>	remove_reference<_Tp &>
unique_ptr<vector<terminfo_mapping_t, allocator<terminfo_mapping_t>>, default_delete<vector<terminfo_mapping_t, allocator<terminfo_mapping_t>>>>	unique_ptr<_Tp, _Dp>
remove_reference<vector<terminfo_mapping_t, allocator<terminfo_mapping_t>> &>	remove_reference<_Tp &>
is_convertible<pointer, vector<terminfo_mapping_t, allocator<terminfo_mapping_t>> *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, vector<terminfo_mapping_t, allocator<terminfo_mapping_t>> *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, vector<terminfo_mapping_t, allocator<terminfo_mapping_t>> *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, vector<terminfo_mapping_t, allocator<terminfo_mapping_t>> *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__uniq_ptr_impl<vector<terminfo_mapping_t, allocator<terminfo_mapping_t>>, default_delete<vector<terminfo_mapping_t, allocator<terminfo_mapping_t>>>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<vector<terminfo_mapping_t, allocator<terminfo_mapping_t>>, default_delete<vector<terminfo_mapping_t, allocator<terminfo_mapping_t>>>, void>	_Ptr<_Up, _Ep, <unnamed>>
conditional<true, input_mapping_name_t &&, input_mapping_name_t &>	conditional<_Cond, _Iftrue, _Iffalse>
allocator_traits<allocator<_Sp_counted_ptr_inplace<const vector<input_mapping_t, allocator<input_mapping_t>>, allocator<vector<input_mapping_t, allocator<input_mapping_t>>>, _S_atomic>>>	allocator_traits<allocator<_Tp>>
_TC<value, vector<terminfo_mapping_t, allocator<terminfo_mapping_t>> *, default_delete<vector<terminfo_mapping_t, allocator<terminfo_mapping_t>>>>	_TC<<unnamed>, _Elements...>
_TC<true, vector<terminfo_mapping_t, allocator<terminfo_mapping_t>> *, default_delete<vector<terminfo_mapping_t, allocator<terminfo_mapping_t>>>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, vector<terminfo_mapping_t, allocator<terminfo_mapping_t>> *, default_delete<vector<terminfo_mapping_t, allocator<terminfo_mapping_t>>>>	_Tuple_impl<_Idx, _Head, _Tail...>
__aligned_buffer<const vector<input_mapping_t, allocator<input_mapping_t>>>	__aligned_buffer<_Tp>
__not_alloc_shared_tag<_Sp_alloc_shared_tag<allocator<vector<input_mapping_t, allocator<input_mapping_t>>>>>	__not_alloc_shared_tag<_Sp_alloc_shared_tag<_Tp>>
is_same<terminfo_mapping_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<terminfo_mapping_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<terminfo_mapping_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<terminfo_mapping_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<terminfo_mapping_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<terminfo_mapping_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<input_mapping_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<input_mapping_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<input_mapping_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<input_mapping_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<input_mapping_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<input_mapping_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
__normal_iterator<const input_mapping_name_t *, vector<input_mapping_name_t, allocator<input_mapping_name_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const input_mapping_name_t *, vector<input_mapping_name_t, allocator<input_mapping_name_t>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<input_mapping_name_t *, vector<input_mapping_name_t, allocator<input_mapping_name_t>>>>	reverse_iterator<_Iterator>
enable_shared_from_this<const vector<input_mapping_t, allocator<input_mapping_t>>>	enable_shared_from_this<_Tp>
__enable_shared_from_this<const vector<input_mapping_t, allocator<input_mapping_t>>, _S_atomic>	__enable_shared_from_this<_Tp, _Lp>
__has_esft_base<vector<input_mapping_t, allocator<input_mapping_t>>, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
remove_reference<vector<terminfo_mapping_t, allocator<terminfo_mapping_t>>>	remove_reference<_Tp>
remove_reference<char_event_t>	remove_reference<_Tp>
remove_reference<..(*&)(..)>	remove_reference<_Tp &>
__iterator_traits<__normal_iterator<input_mapping_t *, vector<input_mapping_t, allocator<input_mapping_t>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
remove_reference<const char_event_t &>	remove_reference<_Tp &>
remove_reference<__shared_ptr<const vector<input_mapping_t, allocator<input_mapping_t>>, _S_atomic> &>	remove_reference<_Tp &>
__is_move_insertable<allocator<input_mapping_name_t>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<input_mapping_name_t>	is_move_constructible<_Tp>
__is_move_constructible_impl<input_mapping_name_t, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<input_mapping_name_t, input_mapping_name_t &&>	is_constructible<_Tp, _Args...>
remove_reference<const input_mapping_name_t &>	remove_reference<_Tp &>
remove_reference<lambda [] type at line 152141, col. 25 &>	remove_reference<_Tp &>
__is_referenceable<input_mapping_name_t>	__is_referenceable<_Tp>
_Head_base<0UL, vector<terminfo_mapping_t, allocator<terminfo_mapping_t>> *, false>	_Head_base<_Idx, _Head, false>
_Tuple_impl<1UL, default_delete<vector<terminfo_mapping_t, allocator<terminfo_mapping_t>>>>	_Tuple_impl<_Idx, _Head>
_Head_base<1UL, default_delete<vector<terminfo_mapping_t, allocator<terminfo_mapping_t>>>, true>	_Head_base<_Idx, _Head, true>
is_reference<input_mapping_name_t &>	is_reference<_Tp>
remove_reference<_Vector_impl &>	remove_reference<_Tp &>
remove_reference<const vector<input_mapping_t, allocator<input_mapping_t>> *&>	remove_reference<_Tp &>
move_iterator<char_event_t *>	move_iterator<_Iterator>
__is_move_insertable<allocator<char_event_t>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<char_event_t>	is_move_constructible<_Tp>
__is_move_constructible_impl<char_event_t, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<char_event_t, char_event_t &&>	is_constructible<_Tp, _Args...>
remove_reference<input_mapping_t>	remove_reference<_Tp>
__iterator_traits<__normal_iterator<const input_mapping_t *, vector<input_mapping_t, allocator<input_mapping_t>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<input_mapping_t &, const input_mapping_t &>	is_assignable<_Tp, _Up>
conditional<true, char_event_t &&, char_event_t &>	conditional<_Cond, _Iftrue, _Iffalse>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
is_assignable<terminfo_mapping_t &, const terminfo_mapping_t &>	is_assignable<_Tp, _Up>
__is_move_insertable<allocator<input_mapping_t>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<input_mapping_t>	is_move_constructible<_Tp>
__is_move_constructible_impl<input_mapping_t, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<input_mapping_t, input_mapping_t &&>	is_constructible<_Tp, _Args...>
move_iterator<input_mapping_t *>	move_iterator<_Iterator>
is_assignable<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> &, const wchar_t *const &>	is_assignable<_Tp, _Up>
_Val_comp_iter<..(*)(..)>	_Val_comp_iter<_Compare>
__iterator_traits<move_iterator<input_mapping_name_t *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<input_mapping_name_t &, input_mapping_name_t &&>	is_assignable<_Tp, _Up>
conditional<true, input_mapping_t &&, input_mapping_t &>	conditional<_Cond, _Iftrue, _Iffalse>
is_reference<char_event_t &>	is_reference<_Tp>
__is_pointer<input_mapping_t *>	__is_pointer<_Tp *>
__are_same<input_mapping_t, input_mapping_t>	__are_same<_Tp, _Tp>
remove_reference<_Iter_comp_iter<..(*)(..)> &>	remove_reference<_Tp &>
__is_move_iterator<__normal_iterator<input_mapping_t *, vector<input_mapping_t, allocator<input_mapping_t>>>>	__is_move_iterator<_Tp>
is_assignable<input_mapping_t &, input_mapping_t &>	is_assignable<_Tp, _Up>
__iterator_traits<move_iterator<char_event_t *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<char_event_t &, char_event_t &&>	is_assignable<_Tp, _Up>
remove_reference<_Vector_impl &>	remove_reference<_Tp &>
remove_reference<const input_mapping_t &>	remove_reference<_Tp &>
is_copy_assignable<wchar_t>	is_copy_assignable<_Tp>
conditional<true, is_move_assignable<wchar_t>, is_copy_assignable<wchar_t>>	conditional<_Cond, _Iftrue, _Iffalse>
is_reference<input_mapping_t &>	is_reference<_Tp>
remove_reference<const terminfo_mapping_t &>	remove_reference<_Tp &>
__iterator_traits<move_iterator<input_mapping_t *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<input_mapping_t &, input_mapping_t &&>	is_assignable<_Tp, _Up>
remove_reference<const wchar_t *const &>	remove_reference<_Tp &>
remove_reference<input_mapping_name_t>	remove_reference<_Tp>
remove_reference<input_mapping_name_t &>	remove_reference<_Tp &>
remove_reference<_Vector_impl &>	remove_reference<_Tp &>
allocator<callback_data_t>	allocator<_Tp>
vector<callback_data_t, allocator<callback_data_t>>	vector<_Tp, _Alloc>
__is_move_iterator<char_event_t **>	__is_move_iterator<_Tp>
iterator_traits<char_event_t **>	iterator_traits<_Tp *>
__is_pointer<char_event_t **>	__is_pointer<_Tp *>
__are_same<char_event_t *, char_event_t *>	__are_same<_Tp, _Tp>
is_move_assignable<char_event_t *>	is_move_assignable<_Tp>
is_copy_assignable<char_event_t *>	is_copy_assignable<_Tp>
conditional<false, is_move_assignable<char_event_t *>, is_copy_assignable<char_event_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_copy_assignable_impl<char_event_t *, true>	__is_copy_assignable_impl<_Tp, true>
is_assignable<char_event_t *&, char_event_t *const &>	is_assignable<_Tp, _Up>
__is_referenceable<char_event_t *>	__is_referenceable<_Tp>
_Vector_base<const wchar_t *, allocator<const wchar_t *>>	_Vector_base<_Tp, _Alloc>
vector<const wchar_t *, allocator<const wchar_t *>>	vector<_Tp, _Alloc>
owning_lock<vector<const wchar_t *, allocator<const wchar_t *>>>	owning_lock<Data>
acquired_lock<vector<const wchar_t *, allocator<const wchar_t *>>>	acquired_lock<Data>
__normal_iterator<const wchar_t **, vector<const wchar_t *, allocator<const wchar_t *>>>	__normal_iterator<_Iterator, _Container>
iterator_traits<const wchar_t **>	iterator_traits<_Tp *>
__normal_iterator<const wchar_t *const *, vector<const wchar_t *, allocator<const wchar_t *>>>	__normal_iterator<_Iterator, _Container>
acquired_lock<const vector<const wchar_t *, allocator<const wchar_t *>>>	acquired_lock<Data>
_Temporary_value	_Temporary_value
reverse_iterator<__normal_iterator<const wchar_t **, vector<const wchar_t *, allocator<const wchar_t *>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<const wchar_t *const *, vector<const wchar_t *, allocator<const wchar_t *>>>>	reverse_iterator<_Iterator>
allocator_traits<allocator<const wchar_t *>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<const wchar_t *>, const wchar_t *>	__alloc_traits<_Alloc, <unnamed>>
rebind<const wchar_t *>	rebind<_Tp>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
new_allocator<const wchar_t *>	new_allocator<_Tp>
enable_if<true, const wchar_t **>	enable_if<true, _Tp>
_Iter_comp_val<..(*)(..)>	_Iter_comp_val<_Compare>
move_iterator<const wchar_t **>	move_iterator<_Iterator>
conditional<true, const wchar_t *&&, const wchar_t *&>	conditional<_Cond, _Iftrue, _Iffalse>
is_same<const wchar_t **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<const wchar_t **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<const wchar_t **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<const wchar_t **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<const wchar_t **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<const wchar_t **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
remove_reference<..(*&)(..)>	remove_reference<_Tp &>
__iterator_traits<__normal_iterator<const wchar_t **, vector<const wchar_t *, allocator<const wchar_t *>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_reference<const wchar_t *&>	is_reference<_Tp>
__is_move_insertable<allocator<const wchar_t *>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<const wchar_t *>	is_move_constructible<_Tp>
__is_move_constructible_impl<const wchar_t *, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<const wchar_t *, const wchar_t *&&>	is_constructible<_Tp, _Args...>
__is_move_iterator<move_iterator<const wchar_t **>>	__is_move_iterator<move_iterator<_Iterator>>
__is_pointer<const wchar_t **>	__is_pointer<_Tp *>
__are_same<const wchar_t *, const wchar_t *>	__are_same<_Tp, _Tp>
__iterator_traits<move_iterator<const wchar_t **>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<const wchar_t *&, const wchar_t *&&>	is_assignable<_Tp, _Up>
is_move_assignable<const wchar_t *>	is_move_assignable<_Tp>
is_copy_assignable<const wchar_t *>	is_copy_assignable<_Tp>
conditional<true, is_move_assignable<const wchar_t *>, is_copy_assignable<const wchar_t *>>	conditional<_Cond, _Iftrue, _Iffalse>
__is_move_assignable_impl<const wchar_t *, true>	__is_move_assignable_impl<_Tp, true>
__is_referenceable<const wchar_t *>	__is_referenceable<_Tp>
_Sp_counted_deleter<pointer, type, allocator<void>, _Lp>	_Sp_counted_deleter<_Ptr, _Deleter, _Alloc, _Lp>
allocator<_Sp_counted_deleter<pointer, type, allocator<void>, _Lp>>	allocator<_Tp>
allocator_traits<allocator<_Sp_counted_deleter<pointer, type, allocator<void>, _Lp>>>	allocator_traits<_Alloc>
default_delete<io_close_t>	default_delete<_Tp>
unique_ptr<io_close_t, default_delete<io_close_t>>	unique_ptr<_Tp, _Dp>
default_delete<io_fd_t>	default_delete<_Tp>
unique_ptr<io_fd_t, default_delete<io_fd_t>>	unique_ptr<_Tp, _Dp>
shared_ptr<io_file_t>	shared_ptr<_Tp>
reverse_iterator<__normal_iterator<const shared_ptr<const io_data_t> *, vector<shared_ptr<const io_data_t>, allocator<shared_ptr<const io_data_t>>>>>	reverse_iterator<_Iterator>
shared_ptr<promise<void>>	shared_ptr<_Tp>
__shared_ptr<promise<void>, _S_atomic>	__shared_ptr<_Tp, _Lp>
__shared_ptr_access<promise<void>, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
enable_if<true, function<..(..)> &>	enable_if<true, _Tp>
_Callable<lambda [] type at line 140078, col. 21, void>	_Callable<_Func, _Res2>
is_array<promise<void>>	is_array<<unnamed>>
is_void<promise<void>>	is_void<_Tp>
remove_extent<promise<void>>	remove_extent<_Tp>
__weak_ptr<io_file_t, _S_atomic>	__weak_ptr<_Tp, _Lp>
__shared_ptr<io_file_t, _S_atomic>	__shared_ptr<_Tp, _Lp>
__weak_ptr<const io_data_t, _S_atomic>	__weak_ptr<_Tp, _Lp>
__weak_ptr<io_buffer_t, _S_atomic>	__weak_ptr<_Tp, _Lp>
__weak_ptr<promise<void>, _S_atomic>	__weak_ptr<_Tp, _Lp>
allocator<io_file_t>	allocator<_Tp>
allocator<io_bufferfill_t>	allocator<_Tp>
allocator<io_buffer_t>	allocator<_Tp>
allocator<promise<void>>	allocator<_Tp>
weak_ptr<promise<void>>	weak_ptr<_Tp>
iterator_traits<__normal_iterator<const shared_ptr<const io_data_t> *, vector<shared_ptr<const io_data_t>, allocator<shared_ptr<const io_data_t>>>>>	iterator_traits<_Iterator>
iterator<random_access_iterator_tag, shared_ptr<const io_data_t>, long, const shared_ptr<const io_data_t> *, const shared_ptr<const io_data_t> &>	iterator<_Category, _Tp, _Distance, _Pointer, _Reference>
remove_extent<io_file_t>	remove_extent<_Tp>
weak_ptr<io_file_t>	weak_ptr<_Tp>
is_convertible<pointer, io_fd_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, io_fd_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, io_fd_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, io_fd_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__uniq_ptr_impl<io_fd_t, default_delete<io_fd_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<io_fd_t, default_delete<io_fd_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
is_convertible<pointer, io_close_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, io_close_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, io_close_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, io_close_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__uniq_ptr_impl<io_close_t, default_delete<io_close_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<io_close_t, default_delete<io_close_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
_Callable<type, type>	_Callable<_Func, _Res2>
_Callable<_Functor, type>	_Callable<_Func, _Res2>
_Maybe_unary_or_binary_function<void, autoclose_fd_t &, bool>	_Maybe_unary_or_binary_function<_Res, _T1, _T2>
_Temporary_value	_Temporary_value
__normal_iterator<fd_monitor_item_t *, vector<fd_monitor_item_t, allocator<fd_monitor_item_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<fd_monitor_item_t *, vector<fd_monitor_item_t, allocator<fd_monitor_item_t>>>>	reverse_iterator<_Iterator>
__normal_iterator<const fd_monitor_item_t *, vector<fd_monitor_item_t, allocator<fd_monitor_item_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const fd_monitor_item_t *, vector<fd_monitor_item_t, allocator<fd_monitor_item_t>>>>	reverse_iterator<_Iterator>
_Base_manager<lambda [] type at line 140078, col. 21>	_Base_manager<_Functor>
__is_empty_non_tuple<default_delete<io_close_t>>	__is_empty_non_tuple<_Tp>
is_empty<default_delete<io_close_t>>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<io_close_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<io_close_t *>	__is_empty_non_tuple<_Tp>
is_empty<io_close_t *>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<io_close_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<default_delete<io_fd_t>>	__is_empty_non_tuple<_Tp>
is_empty<default_delete<io_fd_t>>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<io_fd_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<io_fd_t *>	__is_empty_non_tuple<_Tp>
is_empty<io_fd_t *>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<io_fd_t *>>	conditional<false, _Iftrue, _Iffalse>
_Sp_counted_ptr_inplace<io_file_t, allocator<io_file_t>, _S_atomic>	_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>
__rebind<allocator<io_file_t>, _Sp_counted_ptr_inplace<io_file_t, allocator<io_file_t>, _S_atomic>, void>	__rebind<_Tp, _Up, __void_t<other>>
allocator<_Sp_counted_ptr_inplace<io_file_t, allocator<io_file_t>, _S_atomic>>	allocator<_Tp>
rebind<_Sp_counted_ptr_inplace<io_file_t, allocator<io_file_t>, _S_atomic>>	rebind<_Tp1>
_Sp_counted_deleter<io_fd_t *, default_delete<io_fd_t>, allocator<void>, _S_atomic>	_Sp_counted_deleter<_Ptr, _Deleter, _Alloc, _Lp>
__rebind<allocator<void>, _Sp_counted_deleter<io_fd_t *, default_delete<io_fd_t>, allocator<void>, _S_atomic>, void>	__rebind<_Tp, _Up, __void_t<other>>
allocator<_Sp_counted_deleter<io_fd_t *, default_delete<io_fd_t>, allocator<void>, _S_atomic>>	allocator<_Tp>
rebind<_Sp_counted_deleter<io_fd_t *, default_delete<io_fd_t>, allocator<void>, _S_atomic>>	rebind<_Tp1>
_Sp_counted_deleter<io_close_t *, default_delete<io_close_t>, allocator<void>, _S_atomic>	_Sp_counted_deleter<_Ptr, _Deleter, _Alloc, _Lp>
__rebind<allocator<void>, _Sp_counted_deleter<io_close_t *, default_delete<io_close_t>, allocator<void>, _S_atomic>, void>	__rebind<_Tp, _Up, __void_t<other>>
allocator<_Sp_counted_deleter<io_close_t *, default_delete<io_close_t>, allocator<void>, _S_atomic>>	allocator<_Tp>
rebind<_Sp_counted_deleter<io_close_t *, default_delete<io_close_t>, allocator<void>, _S_atomic>>	rebind<_Tp1>
_Sp_counted_ptr_inplace<io_bufferfill_t, allocator<io_bufferfill_t>, _S_atomic>	_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>
__rebind<allocator<io_bufferfill_t>, _Sp_counted_ptr_inplace<io_bufferfill_t, allocator<io_bufferfill_t>, _S_atomic>, void>	__rebind<_Tp, _Up, __void_t<other>>
allocator<_Sp_counted_ptr_inplace<io_bufferfill_t, allocator<io_bufferfill_t>, _S_atomic>>	allocator<_Tp>
rebind<_Sp_counted_ptr_inplace<io_bufferfill_t, allocator<io_bufferfill_t>, _S_atomic>>	rebind<_Tp1>
_Sp_counted_ptr_inplace<io_buffer_t, allocator<io_buffer_t>, _S_atomic>	_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>
__rebind<allocator<io_buffer_t>, _Sp_counted_ptr_inplace<io_buffer_t, allocator<io_buffer_t>, _S_atomic>, void>	__rebind<_Tp, _Up, __void_t<other>>
allocator<_Sp_counted_ptr_inplace<io_buffer_t, allocator<io_buffer_t>, _S_atomic>>	allocator<_Tp>
rebind<_Sp_counted_ptr_inplace<io_buffer_t, allocator<io_buffer_t>, _S_atomic>>	rebind<_Tp1>
_Sp_counted_ptr_inplace<promise<void>, allocator<promise<void>>, _S_atomic>	_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>
__rebind<allocator<promise<void>>, _Sp_counted_ptr_inplace<promise<void>, allocator<promise<void>>, _S_atomic>, void>	__rebind<_Tp, _Up, __void_t<other>>
allocator<_Sp_counted_ptr_inplace<promise<void>, allocator<promise<void>>, _S_atomic>>	allocator<_Tp>
rebind<_Sp_counted_ptr_inplace<promise<void>, allocator<promise<void>>, _S_atomic>>	rebind<_Tp1>
new_allocator<promise<void>>	new_allocator<_Tp>
new_allocator<_Sp_counted_ptr_inplace<promise<void>, allocator<promise<void>>, _S_atomic>>	new_allocator<_Tp>
new_allocator<io_buffer_t>	new_allocator<_Tp>
new_allocator<_Sp_counted_ptr_inplace<io_buffer_t, allocator<io_buffer_t>, _S_atomic>>	new_allocator<_Tp>
new_allocator<io_bufferfill_t>	new_allocator<_Tp>
new_allocator<_Sp_counted_ptr_inplace<io_bufferfill_t, allocator<io_bufferfill_t>, _S_atomic>>	new_allocator<_Tp>
new_allocator<_Sp_counted_deleter<io_close_t *, default_delete<io_close_t>, allocator<void>, _S_atomic>>	new_allocator<_Tp>
new_allocator<_Sp_counted_deleter<io_fd_t *, default_delete<io_fd_t>, allocator<void>, _S_atomic>>	new_allocator<_Tp>
new_allocator<io_file_t>	new_allocator<_Tp>
new_allocator<_Sp_counted_ptr_inplace<io_file_t, allocator<io_file_t>, _S_atomic>>	new_allocator<_Tp>
_Impl	_Impl
conditional<false, __undefined, _Sp_counted_ptr_inplace<promise<void>, allocator<promise<void>>, _S_atomic>>	conditional<false, _Iftrue, _Iffalse>
is_void<_Sp_counted_ptr_inplace<promise<void>, allocator<promise<void>>, _S_atomic>>	is_void<_Tp>
_Impl	_Impl
conditional<false, __undefined, _Sp_counted_ptr_inplace<io_buffer_t, allocator<io_buffer_t>, _S_atomic>>	conditional<false, _Iftrue, _Iffalse>
is_void<_Sp_counted_ptr_inplace<io_buffer_t, allocator<io_buffer_t>, _S_atomic>>	is_void<_Tp>
_Impl	_Impl
conditional<false, __undefined, _Sp_counted_ptr_inplace<io_bufferfill_t, allocator<io_bufferfill_t>, _S_atomic>>	conditional<false, _Iftrue, _Iffalse>
is_void<_Sp_counted_ptr_inplace<io_bufferfill_t, allocator<io_bufferfill_t>, _S_atomic>>	is_void<_Tp>
conditional<false, __undefined, io_close_t>	conditional<false, _Iftrue, _Iffalse>
conditional<false, __undefined, io_fd_t>	conditional<false, _Iftrue, _Iffalse>
_Impl	_Impl
conditional<false, __undefined, _Sp_counted_ptr_inplace<io_file_t, allocator<io_file_t>, _S_atomic>>	conditional<false, _Iftrue, _Iffalse>
is_void<_Sp_counted_ptr_inplace<io_file_t, allocator<io_file_t>, _S_atomic>>	is_void<_Tp>
tuple<io_close_t *, default_delete<io_close_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<io_close_t *, default_delete<io_close_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<io_close_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<io_close_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<io_fd_t *, default_delete<io_fd_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<io_fd_t *, default_delete<io_fd_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<io_fd_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<io_fd_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
remove_cv<const io_data_t *>	remove_cv<_Tp>
remove_const<const io_data_t *>	remove_const<_Tp>
remove_cv<..(*)(..)>	remove_cv<_Tp>
remove_const<..(*)(..)>	remove_const<_Tp>
remove_const<io_file_t>	remove_const<_Tp>
remove_cv<io_file_t>	remove_cv<_Tp>
__allocated_ptr<allocator<_Sp_counted_ptr_inplace<io_file_t, allocator<io_file_t>, _S_atomic>>>	__allocated_ptr<_Alloc>
allocator_traits<allocator<io_file_t>>	allocator_traits<allocator<_Tp>>
_Sp_ebo_helper<0, allocator<io_file_t>, true>	_Sp_ebo_helper<_Nm, _Tp, true>
remove_const<io_bufferfill_t>	remove_const<_Tp>
remove_cv<io_bufferfill_t>	remove_cv<_Tp>
__allocated_ptr<allocator<_Sp_counted_ptr_inplace<io_bufferfill_t, allocator<io_bufferfill_t>, _S_atomic>>>	__allocated_ptr<_Alloc>
allocator_traits<allocator<io_bufferfill_t>>	allocator_traits<allocator<_Tp>>
_Sp_ebo_helper<0, allocator<io_bufferfill_t>, true>	_Sp_ebo_helper<_Nm, _Tp, true>
remove_const<io_buffer_t>	remove_const<_Tp>
remove_cv<io_buffer_t>	remove_cv<_Tp>
__allocated_ptr<allocator<_Sp_counted_ptr_inplace<io_buffer_t, allocator<io_buffer_t>, _S_atomic>>>	__allocated_ptr<_Alloc>
allocator_traits<allocator<io_buffer_t>>	allocator_traits<allocator<_Tp>>
_Sp_ebo_helper<0, allocator<io_buffer_t>, true>	_Sp_ebo_helper<_Nm, _Tp, true>
remove_const<promise<void>>	remove_const<_Tp>
remove_cv<promise<void>>	remove_cv<_Tp>
__allocated_ptr<allocator<_Sp_counted_ptr_inplace<promise<void>, allocator<promise<void>>, _S_atomic>>>	__allocated_ptr<_Alloc>
allocator_traits<allocator<promise<void>>>	allocator_traits<allocator<_Tp>>
_Sp_ebo_helper<0, allocator<promise<void>>, true>	_Sp_ebo_helper<_Nm, _Tp, true>
_Sp_alloc_shared_tag<allocator<promise<void>>>	_Sp_alloc_shared_tag<_Alloc>
_Sp_alloc_shared_tag<allocator<io_buffer_t>>	_Sp_alloc_shared_tag<_Alloc>
_Sp_alloc_shared_tag<allocator<io_bufferfill_t>>	_Sp_alloc_shared_tag<_Alloc>
_Sp_alloc_shared_tag<allocator<io_file_t>>	_Sp_alloc_shared_tag<_Alloc>
remove_reference<lambda [] type at line 140078, col. 21>	remove_reference<_Tp>
remove_reference<shared_ptr<promise<void>> &>	remove_reference<_Tp &>
remove_reference<shared_ptr<io_file_t> &>	remove_reference<_Tp &>
remove_reference<unique_ptr<io_fd_t, default_delete<io_fd_t>> &>	remove_reference<_Tp &>
remove_reference<unique_ptr<io_close_t, default_delete<io_close_t>> &>	remove_reference<_Tp &>
allocator_traits<allocator<_Sp_counted_ptr_inplace<promise<void>, allocator<promise<void>>, _S_atomic>>>	allocator_traits<allocator<_Tp>>
allocator_traits<allocator<_Sp_counted_ptr_inplace<io_buffer_t, allocator<io_buffer_t>, _S_atomic>>>	allocator_traits<allocator<_Tp>>
allocator_traits<allocator<_Sp_counted_ptr_inplace<io_bufferfill_t, allocator<io_bufferfill_t>, _S_atomic>>>	allocator_traits<allocator<_Tp>>
allocator_traits<allocator<_Sp_counted_ptr_inplace<io_file_t, allocator<io_file_t>, _S_atomic>>>	allocator_traits<allocator<_Tp>>
_TC<value, io_fd_t *, default_delete<io_fd_t>>	_TC<<unnamed>, _Elements...>
_TC<true, io_fd_t *, default_delete<io_fd_t>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, io_fd_t *, default_delete<io_fd_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_TC<value, io_close_t *, default_delete<io_close_t>>	_TC<<unnamed>, _Elements...>
_TC<true, io_close_t *, default_delete<io_close_t>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, io_close_t *, default_delete<io_close_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
__aligned_buffer<io_file_t>	__aligned_buffer<_Tp>
__aligned_buffer<io_bufferfill_t>	__aligned_buffer<_Tp>
__aligned_buffer<io_buffer_t>	__aligned_buffer<_Tp>
__aligned_buffer<promise<void>>	__aligned_buffer<_Tp>
_Impl	_Impl
_Impl	_Impl
__not_alloc_shared_tag<_Sp_alloc_shared_tag<allocator<io_buffer_t>>>	__not_alloc_shared_tag<_Sp_alloc_shared_tag<_Tp>>
__not_alloc_shared_tag<_Sp_alloc_shared_tag<allocator<promise<void>>>>	__not_alloc_shared_tag<_Sp_alloc_shared_tag<_Tp>>
is_copy_constructible<autoclose_pipes_t>	is_copy_constructible<_Tp>
__is_copy_constructible_impl<autoclose_pipes_t, true>	__is_copy_constructible_impl<_Tp, true>
weak_ptr<io_buffer_t>	weak_ptr<_Tp>
is_same<fd_monitor_item_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<fd_monitor_item_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<fd_monitor_item_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<fd_monitor_item_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<fd_monitor_item_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<fd_monitor_item_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
binary_function<autoclose_fd_t &, bool, void>	binary_function<_Arg1, _Arg2, _Result>
_Callable<function<..(..)>, _Tp>	_Callable<_Func, _Res2>
acquired_lock<data_t>	acquired_lock<Data>
__has_esft_base<io_fd_t, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<io_close_t, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<io_bufferfill_t, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<io_buffer_t, void>	__has_esft_base<_Yp, <unnamed>>
enable_shared_from_this<io_buffer_t>	enable_shared_from_this<_Tp>
__enable_shared_from_this<io_buffer_t, _S_atomic>	__enable_shared_from_this<_Tp, _Lp>
enable_shared_from_this<const io_data_t>	enable_shared_from_this<_Tp>
__enable_shared_from_this<const io_data_t, _S_atomic>	__enable_shared_from_this<_Tp, _Lp>
__shared_ptr_access<io_file_t, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
__has_esft_base<promise<void>, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
__allocated_ptr<allocator<_Sp_counted_deleter<io_fd_t *, default_delete<io_fd_t>, allocator<void>, _S_atomic>>>	__allocated_ptr<_Alloc>
__allocated_ptr<allocator<_Sp_counted_deleter<io_close_t *, default_delete<io_close_t>, allocator<void>, _S_atomic>>>	__allocated_ptr<_Alloc>
remove_reference<autoclose_pipes_t>	remove_reference<_Tp>
remove_reference<shared_ptr<const io_data_t>>	remove_reference<_Tp>
_Function_handler<..(..), lambda [] type at line 140078, col. 21>	_Function_handler<..(..), _Functor>
remove_reference<lambda [] type at line 140078, col. 21 &>	remove_reference<_Tp &>
allocator_traits<allocator<_Sp_counted_deleter<io_close_t *, default_delete<io_close_t>, allocator<void>, _S_atomic>>>	allocator_traits<allocator<_Tp>>
allocator_traits<allocator<_Sp_counted_deleter<io_fd_t *, default_delete<io_fd_t>, allocator<void>, _S_atomic>>>	allocator_traits<allocator<_Tp>>
is_array<io_file_t>	is_array<<unnamed>>
is_void<io_file_t>	is_void<_Tp>
__has_esft_base<io_file_t, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
is_constructible<autoclose_pipes_t, const autoclose_pipes_t &>	is_constructible<_Tp, _Args...>
__is_referenceable<autoclose_pipes_t>	__is_referenceable<_Tp>
_Sp_ebo_helper<1, allocator<void>, true>	_Sp_ebo_helper<_Nm, _Tp, true>
_Sp_ebo_helper<0, default_delete<io_fd_t>, true>	_Sp_ebo_helper<_Nm, _Tp, true>
_Sp_ebo_helper<0, default_delete<io_close_t>, true>	_Sp_ebo_helper<_Nm, _Tp, true>
aligned_storage<112UL, 8UL>	aligned_storage<_Len, _Align>
type	type
_Head_base<0UL, io_close_t *, false>	_Head_base<_Idx, _Head, false>
_Tuple_impl<1UL, default_delete<io_close_t>>	_Tuple_impl<_Idx, _Head>
_Tuple_impl<1UL, default_delete<io_fd_t>>	_Tuple_impl<_Idx, _Head>
_Head_base<1UL, default_delete<io_close_t>, true>	_Head_base<_Idx, _Head, true>
_Head_base<0UL, io_fd_t *, false>	_Head_base<_Idx, _Head, false>
_Head_base<1UL, default_delete<io_fd_t>, true>	_Head_base<_Idx, _Head, true>
remove_reference<..(*&)(..)>	remove_reference<_Tp &>
reference_wrapper<default_delete<io_fd_t>>	reference_wrapper<_Tp>
conditional<false, reference_wrapper<default_delete<io_fd_t>>, default_delete<io_fd_t>>	conditional<false, _Iftrue, _Iffalse>
reference_wrapper<default_delete<io_close_t>>	reference_wrapper<_Tp>
conditional<false, reference_wrapper<default_delete<io_close_t>>, default_delete<io_close_t>>	conditional<false, _Iftrue, _Iffalse>
remove_reference<__shared_ptr<const io_data_t, _S_atomic> &>	remove_reference<_Tp &>
struct <unnamed>	struct <unnamed>
remove_reference<io_close_t *>	remove_reference<_Tp>
remove_reference<default_delete<io_close_t> &>	remove_reference<_Tp &>
remove_reference<io_fd_t *>	remove_reference<_Tp>
remove_reference<default_delete<io_fd_t> &>	remove_reference<_Tp &>
move_iterator<shared_ptr<const io_data_t> *>	move_iterator<_Iterator>
__is_move_insertable<allocator<shared_ptr<const io_data_t>>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<shared_ptr<const io_data_t>>	is_move_constructible<_Tp>
__is_move_constructible_impl<shared_ptr<const io_data_t>, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<shared_ptr<const io_data_t>, shared_ptr<const io_data_t> &&>	is_constructible<_Tp, _Args...>
__is_referenceable<shared_ptr<const io_data_t>>	__is_referenceable<_Tp>
conditional<true, shared_ptr<const io_data_t> &&, shared_ptr<const io_data_t> &>	conditional<_Cond, _Iftrue, _Iffalse>
__is_integer<__normal_iterator<const char *, basic_string<char, char_traits<char>, allocator<char>>>>	__is_integer<_Tp>
remove_reference<const io_data_t *&>	remove_reference<_Tp &>
is_reference<shared_ptr<const io_data_t> &>	is_reference<_Tp>
__iterator_traits<move_iterator<shared_ptr<const io_data_t> *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<shared_ptr<const io_data_t> &, shared_ptr<const io_data_t> &&>	is_assignable<_Tp, _Up>
allocator<impl_t>	allocator<_Tp>
_Sp_counted_ptr_inplace<impl_t, allocator<impl_t>, _S_atomic>	_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>
allocator<_Sp_counted_ptr_inplace<impl_t, allocator<impl_t>, _S_atomic>>	allocator<_Tp>
rebind<_Sp_counted_ptr_inplace<impl_t, allocator<impl_t>, _S_atomic>>	rebind<_Tp1>
__rebind<allocator<impl_t>, _Sp_counted_ptr_inplace<impl_t, allocator<impl_t>, _S_atomic>, void>	__rebind<_Tp, _Up, __void_t<other>>
allocator<work_request_t *>	allocator<_Tp>
allocator_traits<allocator<work_request_t *>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<work_request_t *>, work_request_t *>	__alloc_traits<_Alloc, <unnamed>>
allocator<work_request_t>	allocator<_Tp>
allocator_traits<allocator<work_request_t>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<work_request_t>, work_request_t>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<function<..(..)> *>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<function<..(..)> *>, function<..(..)> *>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<function<..(..)>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<function<..(..)>>, function<..(..)>>	__alloc_traits<_Alloc, <unnamed>>
allocator<main_thread_request_t **>	allocator<_Tp>
allocator_traits<allocator<main_thread_request_t **>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<main_thread_request_t **>, main_thread_request_t **>	__alloc_traits<_Alloc, <unnamed>>
allocator<main_thread_request_t *>	allocator<_Tp>
allocator_traits<allocator<main_thread_request_t *>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<main_thread_request_t *>, main_thread_request_t *>	__alloc_traits<_Alloc, <unnamed>>
is_same<void, void>	is_same<<unnamed>, <unnamed>>
__or_<is_void<void>, is_same<void, void>, is_convertible<void, void>>	__or_<_B1, _B2, _B3, _Bn...>
shared_ptr<impl_t>	shared_ptr<_Tp>
__ratio_multiply<ratio<1L, 1000000000L>, ratio<1000000000L, 1L>>	__ratio_multiply<_R1, _R2>
__ratio_divide<ratio<1L, 1000000000L>, ratio<1L, 1000000000L>>	__ratio_divide<_R1, _R2>
_Deque_base<work_request_t, allocator<work_request_t>>	_Deque_base<_Tp, _Alloc>
deque<work_request_t, allocator<work_request_t>>	deque<_Tp, _Alloc>
_Deque_base<function<..(..)>, allocator<function<..(..)>>>	_Deque_base<_Tp, _Alloc>
deque<function<..(..)>, allocator<function<..(..)>>>	deque<_Tp, _Alloc>
_Deque_base<main_thread_request_t *, allocator<main_thread_request_t *>>	_Deque_base<_Tp, _Alloc>
deque<main_thread_request_t *, allocator<main_thread_request_t *>>	deque<_Tp, _Alloc>
maybe_t<work_request_t>	maybe_t<T>
owning_lock<data_t>	owning_lock<Data>
queue<function<..(..)>, deque<function<..(..)>, allocator<function<..(..)>>>>	queue<_Tp, _Sequence>
queue<main_thread_request_t *, deque<main_thread_request_t *, allocator<main_thread_request_t *>>>	queue<_Tp, _Sequence>
owning_lock<queue<main_thread_request_t *, deque<main_thread_request_t *, allocator<main_thread_request_t *>>>>	owning_lock<Data>
owning_lock<queue<function<..(..)>, deque<function<..(..)>, allocator<function<..(..)>>>>>	owning_lock<Data>
owning_lock<data_t>	owning_lock<Data>
queue<work_request_t, deque<work_request_t, allocator<work_request_t>>>	queue<_Tp, _Sequence>
acquired_lock<queue<main_thread_request_t *, deque<main_thread_request_t *, allocator<main_thread_request_t *>>>>	acquired_lock<Data>
acquired_lock<queue<function<..(..)>, deque<function<..(..)>, allocator<function<..(..)>>>>>	acquired_lock<Data>
acquired_lock<data_t>	acquired_lock<Data>
remove_reference<work_request_t &>	remove_reference<_Tp &>
acquired_lock<data_t>	acquired_lock<Data>
__shared_ptr_access<impl_t, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
__shared_ptr<impl_t, _S_atomic>	__shared_ptr<_Tp, _Lp>
remove_extent<impl_t>	remove_extent<_Tp>
__weak_ptr<impl_t, _S_atomic>	__weak_ptr<_Tp, _Lp>
is_array<impl_t>	is_array<<unnamed>>
is_void<impl_t>	is_void<_Tp>
acquired_lock<const data_t>	acquired_lock<Data>
acquired_lock<const data_t>	acquired_lock<Data>
acquired_lock<const queue<function<..(..)>, deque<function<..(..)>, allocator<function<..(..)>>>>>	acquired_lock<Data>
acquired_lock<const queue<main_thread_request_t *, deque<main_thread_request_t *, allocator<main_thread_request_t *>>>>	acquired_lock<Data>
is_same<work_request_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<work_request_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<work_request_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<work_request_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<work_request_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<work_request_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
_Deque_iterator<work_request_t, work_request_t &, work_request_t *>	_Deque_iterator<_Tp, _Ref, _Ptr>
reverse_iterator<_Deque_iterator<work_request_t, work_request_t &, work_request_t *>>	reverse_iterator<_Iterator>
_Deque_iterator<work_request_t, const work_request_t &, const work_request_t *>	_Deque_iterator<_Tp, _Ref, _Ptr>
reverse_iterator<_Deque_iterator<work_request_t, const work_request_t &, const work_request_t *>>	reverse_iterator<_Iterator>
pointer_traits<work_request_t *>	pointer_traits<_Tp *>
rebind<work_request_t>	rebind<_Tp>
is_same<main_thread_request_t **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<main_thread_request_t **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<main_thread_request_t **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<main_thread_request_t **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<main_thread_request_t **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<main_thread_request_t **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<function<..(..)> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<function<..(..)> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<function<..(..)> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<function<..(..)> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<function<..(..)> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<function<..(..)> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
maybe_impl_t<work_request_t>	maybe_impl_t<T>
_Deque_impl	_Deque_impl
pointer_traits<main_thread_request_t **>	pointer_traits<_Tp *>
_Deque_iterator<main_thread_request_t *, main_thread_request_t *&, main_thread_request_t **>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<main_thread_request_t *, main_thread_request_t *const &, main_thread_request_t *const *>	_Deque_iterator<_Tp, _Ref, _Ptr>
rebind<main_thread_request_t **>	rebind<_Tp>
rebind<main_thread_request_t *>	rebind<_Tp>
_Deque_impl	_Deque_impl
pointer_traits<function<..(..)> *>	pointer_traits<_Tp *>
_Deque_iterator<function<..(..)>, function<..(..)> &, function<..(..)> *>	_Deque_iterator<_Tp, _Ref, _Ptr>
_Deque_iterator<function<..(..)>, const function<..(..)> &, const function<..(..)> *>	_Deque_iterator<_Tp, _Ref, _Ptr>
rebind<function<..(..)> *>	rebind<_Tp>
rebind<function<..(..)>>	rebind<_Tp>
_Deque_impl	_Deque_impl
rebind<work_request_t *>	rebind<_Tp>
integral_constant<long, 1000L>	integral_constant<_Tp, __v>
weak_ptr<impl_t>	weak_ptr<_Tp>
_Base_manager<lambda [] type at line 100272, col. 26>	_Base_manager<_Functor>
__or_<is_same<void, void>, is_convertible<void, void>>	__or_<<unnamed>...>
conditional<true, is_void<void>, __or_<is_same<void, void>, is_convertible<void, void>>>	conditional<_Cond, _Iftrue, _Iffalse>
new_allocator<work_request_t>	new_allocator<_Tp>
new_allocator<work_request_t *>	new_allocator<_Tp>
new_allocator<function<..(..)>>	new_allocator<_Tp>
new_allocator<function<..(..)> *>	new_allocator<_Tp>
new_allocator<main_thread_request_t *>	new_allocator<_Tp>
new_allocator<main_thread_request_t **>	new_allocator<_Tp>
new_allocator<impl_t>	new_allocator<_Tp>
new_allocator<_Sp_counted_ptr_inplace<impl_t, allocator<impl_t>, _S_atomic>>	new_allocator<_Tp>
conditional<false, __undefined, work_request_t>	conditional<false, _Iftrue, _Iffalse>
is_void<work_request_t>	is_void<_Tp>
conditional<false, __undefined, function<..(..)>>	conditional<false, _Iftrue, _Iffalse>
is_void<function<..(..)>>	is_void<_Tp>
conditional<false, __undefined, main_thread_request_t *>	conditional<false, _Iftrue, _Iffalse>
is_void<main_thread_request_t *>	is_void<_Tp>
_Impl	_Impl
conditional<false, __undefined, _Sp_counted_ptr_inplace<impl_t, allocator<impl_t>, _S_atomic>>	conditional<false, _Iftrue, _Iffalse>
is_void<_Sp_counted_ptr_inplace<impl_t, allocator<impl_t>, _S_atomic>>	is_void<_Tp>
reverse_iterator<_Deque_iterator<main_thread_request_t *, main_thread_request_t *&, main_thread_request_t **>>	reverse_iterator<_Iterator>
reverse_iterator<_Deque_iterator<main_thread_request_t *, main_thread_request_t *const &, main_thread_request_t *const *>>	reverse_iterator<_Iterator>
remove_cv<deque<main_thread_request_t *, allocator<main_thread_request_t *>>>	remove_cv<_Tp>
remove_const<deque<main_thread_request_t *, allocator<main_thread_request_t *>>>	remove_const<_Tp>
reverse_iterator<_Deque_iterator<function<..(..)>, function<..(..)> &, function<..(..)> *>>	reverse_iterator<_Iterator>
reverse_iterator<_Deque_iterator<function<..(..)>, const function<..(..)> &, const function<..(..)> *>>	reverse_iterator<_Iterator>
remove_cv<deque<function<..(..)>, allocator<function<..(..)>>>>	remove_cv<_Tp>
remove_const<deque<function<..(..)>, allocator<function<..(..)>>>>	remove_const<_Tp>
_Deque_iterator<function<..(..)>, _CvTp &, _CvTp *>	_Deque_iterator<_Tp, _Ref, _Ptr>
remove_cv<_Deque_iterator<function<..(..)>, function<..(..)> &, function<..(..)> *>>	remove_cv<_Tp>
remove_const<_Deque_iterator<function<..(..)>, function<..(..)> &, function<..(..)> *>>	remove_const<_Tp>
remove_cv<function<..(..)> **>	remove_cv<_Tp>
remove_const<function<..(..)> **>	remove_const<_Tp>
_Deque_iterator<main_thread_request_t *, _CvTp &, _CvTp *>	_Deque_iterator<_Tp, _Ref, _Ptr>
remove_cv<_Deque_iterator<main_thread_request_t *, main_thread_request_t *&, main_thread_request_t **>>	remove_cv<_Tp>
remove_const<_Deque_iterator<main_thread_request_t *, main_thread_request_t *&, main_thread_request_t **>>	remove_const<_Tp>
remove_cv<main_thread_request_t ***>	remove_cv<_Tp>
remove_const<main_thread_request_t ***>	remove_const<_Tp>
remove_const<impl_t>	remove_const<_Tp>
remove_cv<impl_t>	remove_cv<_Tp>
__allocated_ptr<allocator<_Sp_counted_ptr_inplace<impl_t, allocator<impl_t>, _S_atomic>>>	__allocated_ptr<_Alloc>
allocator_traits<allocator<impl_t>>	allocator_traits<allocator<_Tp>>
_Sp_ebo_helper<0, allocator<impl_t>, true>	_Sp_ebo_helper<_Nm, _Tp, true>
_Sp_alloc_shared_tag<allocator<impl_t>>	_Sp_alloc_shared_tag<_Alloc>
remove_reference<shared_ptr<impl_t> &>	remove_reference<_Tp &>
_Function_handler<..(..), lambda [] type at line 100272, col. 26>	_Function_handler<..(..), _Functor>
remove_reference<lambda [] type at line 100272, col. 26 &>	remove_reference<_Tp &>
remove_reference<main_thread_request_t *&>	remove_reference<_Tp &>
enable_if<true, time_point<system_clock, duration<signed long, ratio<1L, 1L>>>>	enable_if<true, _Tp>
allocator_traits<allocator<_Sp_counted_ptr_inplace<impl_t, allocator<impl_t>, _S_atomic>>>	allocator_traits<allocator<_Tp>>
_Callable<lambda [] type at line 100272, col. 26, void>	_Callable<_Func, _Res2>
__aligned_buffer<impl_t>	__aligned_buffer<_Tp>
__not_alloc_shared_tag<_Sp_alloc_shared_tag<allocator<impl_t>>>	__not_alloc_shared_tag<_Sp_alloc_shared_tag<_Tp>>
is_copy_constructible<work_request_t>	is_copy_constructible<_Tp>
__is_copy_constructible_impl<work_request_t, true>	__is_copy_constructible_impl<_Tp, true>
__static_gcd<1000000000L, 1000L>	__static_gcd<_Pn, _Qn>
__static_gcd<1000000000L, 1000000000L>	__static_gcd<_Pn, _Qn>
is_same<work_request_t **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<work_request_t **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<work_request_t **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<work_request_t **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<work_request_t **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<work_request_t **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<function<..(..)> **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<function<..(..)> **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<function<..(..)> **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<function<..(..)> **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<function<..(..)> **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<function<..(..)> **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<main_thread_request_t ***, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<main_thread_request_t ***, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<main_thread_request_t ***, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<main_thread_request_t ***, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<main_thread_request_t ***, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<main_thread_request_t ***, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
_Deque_iterator<work_request_t, _CvTp &, _CvTp *>	_Deque_iterator<_Tp, _Ref, _Ptr>
__has_esft_base<impl_t, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
__duration_cast_impl<duration<signed long, ratio<1L, 1000000000L>>, ratio<1L, 1L>, signed long, true, true>	__duration_cast_impl<_ToDur, _CF, _CR, true, true>
__duration_cast_impl<duration<signed long, ratio<1L, 1000000000L>>, ratio<1000000L, 1L>, signed long, false, true>	__duration_cast_impl<_ToDur, _CF, _CR, false, true>
__static_gcd<1000000000L, 0L>	__static_gcd<_Pn, 0L>
__static_gcd<1000L, 0L>	__static_gcd<_Pn, 0L>
is_constructible<work_request_t, const work_request_t &>	is_constructible<_Tp, _Args...>
__is_referenceable<work_request_t>	__is_referenceable<_Tp>
aligned_storage<136UL, 8UL>	aligned_storage<_Len, _Align>
type	type
remove_reference<work_request_t>	remove_reference<_Tp>
remove_reference<function<..(..)>>	remove_reference<_Tp>
remove_reference<main_thread_request_t *>	remove_reference<_Tp>
struct <unnamed>	struct <unnamed>
iterator_traits<work_request_t *>	iterator_traits<_Tp *>
iterator_traits<main_thread_request_t **>	iterator_traits<_Tp *>
remove_reference<main_thread_request_t ***&>	remove_reference<_Tp &>
remove_reference<_Deque_iterator<main_thread_request_t *, main_thread_request_t *&, main_thread_request_t **> &>	remove_reference<_Tp &>
iterator_traits<function<..(..)> *>	iterator_traits<_Tp *>
remove_reference<function<..(..)> **&>	remove_reference<_Tp &>
remove_reference<_Deque_iterator<function<..(..)>, function<..(..)> &, function<..(..)> *> &>	remove_reference<_Tp &>
__is_move_iterator<main_thread_request_t ***>	__is_move_iterator<_Tp>
__is_move_iterator<function<..(..)> **>	__is_move_iterator<_Tp>
__is_move_iterator<work_request_t **>	__is_move_iterator<_Tp>
iterator_traits<work_request_t **>	iterator_traits<_Tp *>
__is_pointer<work_request_t **>	__is_pointer<_Tp *>
__are_same<work_request_t *, work_request_t *>	__are_same<_Tp, _Tp>
iterator_traits<function<..(..)> **>	iterator_traits<_Tp *>
__is_pointer<function<..(..)> **>	__is_pointer<_Tp *>
__are_same<function<..(..)> *, function<..(..)> *>	__are_same<_Tp, _Tp>
iterator_traits<main_thread_request_t ***>	iterator_traits<_Tp *>
__is_pointer<main_thread_request_t ***>	__is_pointer<_Tp *>
__are_same<main_thread_request_t **, main_thread_request_t **>	__are_same<_Tp, _Tp>
is_move_assignable<main_thread_request_t **>	is_move_assignable<_Tp>
is_copy_assignable<main_thread_request_t **>	is_copy_assignable<_Tp>
conditional<false, is_move_assignable<main_thread_request_t **>, is_copy_assignable<main_thread_request_t **>>	conditional<false, _Iftrue, _Iffalse>
is_move_assignable<function<..(..)> *>	is_move_assignable<_Tp>
is_copy_assignable<function<..(..)> *>	is_copy_assignable<_Tp>
conditional<false, is_move_assignable<function<..(..)> *>, is_copy_assignable<function<..(..)> *>>	conditional<false, _Iftrue, _Iffalse>
is_move_assignable<work_request_t *>	is_move_assignable<_Tp>
is_copy_assignable<work_request_t *>	is_copy_assignable<_Tp>
conditional<false, is_move_assignable<work_request_t *>, is_copy_assignable<work_request_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_copy_assignable_impl<main_thread_request_t **, true>	__is_copy_assignable_impl<_Tp, true>
__is_copy_assignable_impl<function<..(..)> *, true>	__is_copy_assignable_impl<_Tp, true>
__is_copy_assignable_impl<work_request_t *, true>	__is_copy_assignable_impl<_Tp, true>
is_assignable<work_request_t *&, work_request_t *const &>	is_assignable<_Tp, _Up>
__is_referenceable<work_request_t *>	__is_referenceable<_Tp>
is_assignable<function<..(..)> *&, function<..(..)> *const &>	is_assignable<_Tp, _Up>
__is_referenceable<function<..(..)> *>	__is_referenceable<_Tp>
is_assignable<main_thread_request_t **&, main_thread_request_t **const &>	is_assignable<_Tp, _Up>
__is_referenceable<main_thread_request_t **>	__is_referenceable<_Tp>
_List_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	_List_node<_Tp>
allocator<_List_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	allocator<_Tp>
__alloc_neq<_Node_alloc_type, <expression>>	__alloc_neq<_Alloc, <unnamed>>
_List_const_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	_List_const_iterator<_Tp>
_List_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>	_List_iterator<_Tp>
_List_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	_List_base<_Tp, _Alloc>
list<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	list<_Tp, _Alloc>
vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	vector<_Tp, _Alloc>
reverse_iterator<_List_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	reverse_iterator<_Iterator>
reverse_iterator<_List_const_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	reverse_iterator<_Iterator>
__alloc_traits<allocator<_List_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, _List_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	__alloc_traits<_Alloc, <unnamed>>
rebind<_List_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	rebind<_Tp>
_List_impl	_List_impl
new_allocator<_List_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	new_allocator<_Tp>
allocator_traits<allocator<_List_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	allocator_traits<allocator<_Tp>>
remove_reference<list<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>> &>	remove_reference<_Tp &>
is_same<_List_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_List_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_List_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_List_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_List_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_List_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
__iterator_traits<_List_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
__allocated_ptr<allocator<_List_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	__allocated_ptr<_Alloc>
__alloc_neq<allocator<_List_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, true>	__alloc_neq<_Alloc, <unnamed>>
char_traits<CharT>	char_traits<_CharT>
allocator<CharT>	allocator<_Tp>
basic_string<CharT, char_traits<CharT>, allocator<CharT>>	basic_string<_CharT, _Traits, _Alloc>
allocator<basic_string<CharT, char_traits<CharT>, allocator<CharT>>>	allocator<_Tp>
vector<basic_string<CharT, char_traits<CharT>, allocator<CharT>>, allocator<basic_string<CharT, char_traits<CharT>, allocator<CharT>>>>	vector<_Tp, _Alloc>
__is_move_iterator<__normal_iterator<const wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	__is_move_iterator<_Tp>
__is_move_iterator<__normal_iterator<const char *, basic_string<char, char_traits<char>, allocator<char>>>>	__is_move_iterator<_Tp>
__is_pointer<char *>	__is_pointer<_Tp *>
__are_same<char, char>	__are_same<_Tp, _Tp>
is_move_assignable<char>	is_move_assignable<_Tp>
is_copy_assignable<char>	is_copy_assignable<_Tp>
conditional<false, is_move_assignable<char>, is_copy_assignable<char>>	conditional<false, _Iftrue, _Iffalse>
is_move_assignable<wchar_t>	is_move_assignable<_Tp>
conditional<false, is_move_assignable<wchar_t>, is_copy_assignable<wchar_t>>	conditional<false, _Iftrue, _Iffalse>
__is_copy_assignable_impl<char, true>	__is_copy_assignable_impl<_Tp, true>
is_assignable<char &, const char &>	is_assignable<_Tp, _Up>
__is_referenceable<char>	__is_referenceable<_Tp>
remove_reference<shared_ptr<parser_t> &>	remove_reference<_Tp &>
remove_reference<function<..(..)> &>	remove_reference<_Tp &>
scoped_push<outputter_t *>	scoped_push<T>
remove_reference<outputter_t *&>	remove_reference<_Tp &>
is_copy_constructible<env_var_t>	is_copy_constructible<_Tp>
__is_copy_constructible_impl<env_var_t, true>	__is_copy_constructible_impl<_Tp, true>
is_constructible<env_var_t, const env_var_t &>	is_constructible<_Tp, _Args...>
__is_referenceable<env_var_t>	__is_referenceable<_Tp>
pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>	pair<_T1, _T2>
allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>>	allocator<_Tp>
_Insert_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>>	_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
_Insert<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, false>	_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, false>
_Hash_code_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, _Select1st, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, true>	_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Default_ranged_hash, true>
_Hashtable<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>>	_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
__hash_code_base_access	__hash_code_base_access
allocator<comp_t>	allocator<_Tp>
_Vector_base<comp_t, allocator<comp_t>>	_Vector_base<_Tp, _Alloc>
vector<comp_t, allocator<comp_t>>	vector<_Tp, _Alloc>
unordered_map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>>>	unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>
__underlying_type_impl<highlight_role_t, true>	__underlying_type_impl<_Tp, <unnamed>>
underlying_type<highlight_role_t>	underlying_type<_Tp>
allocator_traits<allocator<comp_t>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<comp_t>, comp_t>	__alloc_traits<_Alloc, <unnamed>>
tuple_element<1UL, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>>	tuple_element<1UL, pair<_Tp1, _Tp2>>
_Map_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, true>	_Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
__normal_iterator<comp_t *, vector<comp_t, allocator<comp_t>>>	__normal_iterator<_Iterator, _Container>
__normal_iterator<const comp_t *, vector<comp_t, allocator<comp_t>>>	__normal_iterator<_Iterator, _Container>
iterator_traits<comp_t *>	iterator_traits<_Tp *>
is_same<comp_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<comp_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<comp_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<comp_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<comp_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<comp_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_enum<highlight_role_t>	is_enum<_Tp>
_Hashtable_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Hashtable_traits<true, false, true>>	_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>
_Local_const_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, _Select1st, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, false, true>	_Local_const_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>
_Local_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, _Select1st, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, false, true>	_Local_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>
_Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, false, true>	_Node_const_iterator<_Value, __constant_iterators, __cache>
_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, false, true>	_Node_iterator<_Value, __constant_iterators, __cache>
allocator_traits<allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>>>	allocator_traits<allocator<_Tp>>
pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, false, true>, bool>	pair<_T1, _T2>
_Temporary_value	_Temporary_value
reverse_iterator<__normal_iterator<comp_t *, vector<comp_t, allocator<comp_t>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<const comp_t *, vector<comp_t, allocator<comp_t>>>>	reverse_iterator<_Iterator>
rebind<comp_t>	rebind<_Tp>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, true>	_Hash_node<_Value, true>
allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, true>>	allocator<_Tp>
_ReuseOrAllocNode<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, true>>>	_ReuseOrAllocNode<_NodeAlloc>
_Equality<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, true>	_Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
_Rehash_base<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, false, true>, integral_constant<bool, true>>	_Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true_type>
conditional<true, pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, false, true>, bool>, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, false, true>>	conditional<_Cond, _Iftrue, _Iffalse>
_Hashtable_alloc<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, true>>>	_Hashtable_alloc<_NodeAlloc>
__alloc_traits<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, true>>, _Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, true>>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, true>>>	allocator_traits<allocator<_Tp>>
rebind<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, true>>	rebind<_Tp1>
__rebind<allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>>, _Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, true>, void>	__rebind<_Tp, _Up, __void_t<other>>
_AllocNode<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, true>>>	_AllocNode<_NodeAlloc>
new_allocator<comp_t>	new_allocator<_Tp>
new_allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>>	new_allocator<_Tp>
new_allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, true>>	new_allocator<_Tp>
__rebind<allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, true>>, _Hash_node_base *, void>	__rebind<_Tp, _Up, __void_t<other>>
rebind<_Hash_node_base *>	rebind<_Tp1>
_Hash_node_value_base<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>>	_Hash_node_value_base<_Value>
conditional<false, __undefined, _Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, true>>	conditional<false, _Iftrue, _Iffalse>
is_void<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, true>>	is_void<_Tp>
remove_reference<vector<comp_t, allocator<comp_t>> &>	remove_reference<_Tp &>
_Hashtable_ebo_helper<0, allocator<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, true>>, true>	_Hashtable_ebo_helper<_Nm, _Tp, true>
iterator_traits<const comp_t *>	iterator_traits<const _Tp *>
remove_reference<vector<line_t, allocator<line_t>> &>	remove_reference<_Tp &>
__normal_iterator<const edit_t *, vector<edit_t, allocator<edit_t>>>	__normal_iterator<_Iterator, _Container>
__normal_iterator<edit_t *, vector<edit_t, allocator<edit_t>>>	__normal_iterator<_Iterator, _Container>
remove_reference<vector<edit_t, allocator<edit_t>> &>	remove_reference<_Tp &>
initializer_list<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>>	initializer_list<_E>
tuple_element<0UL, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>>	tuple_element<0UL, pair<_Tp1, _Tp2>>
remove_reference<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long> &>	remove_reference<_Tp &>
iterator_traits<const edit_t *>	iterator_traits<const _Tp *>
iterator_traits<edit_t *>	iterator_traits<_Tp *>
remove_reference<comp_t &>	remove_reference<_Tp &>
__aligned_buffer<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>>	__aligned_buffer<_Tp>
is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, true> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, true> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, true> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, true> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, true> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, true> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
enable_if<value, void>	enable_if<<unnamed>, _Tp>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, _Pair &&>	is_constructible<_Tp, _Args...>
is_constructible<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, _Pair &&>	is_constructible<_Tp, _Args...>
_Equal_helper<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, _Select1st, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, unsigned long, true>	_Equal_helper<_Key, _Value, _ExtractKey, _Equal, _HashCodeType, true>
is_copy_constructible<cursor_t>	is_copy_constructible<_Tp>
__is_copy_constructible_impl<cursor_t, true>	__is_copy_constructible_impl<_Tp, true>
reverse_iterator<__normal_iterator<const edit_t *, vector<edit_t, allocator<edit_t>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<edit_t *, vector<edit_t, allocator<edit_t>>>>	reverse_iterator<_Iterator>
conditional<false, const pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long> &, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long> &>	conditional<false, _Iftrue, _Iffalse>
conditional<false, const pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long> *, pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long> *>	conditional<false, _Iftrue, _Iffalse>
_Node_iterator_base<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, true>	_Node_iterator_base<_Value, _Cache_hash_code>
_PCC<<expression>, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>	_PCC<<unnamed>, _T1, _T2>
__pair_base<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>	__pair_base<_U1, _U2>
remove_reference<const comp_t &>	remove_reference<_Tp &>
pair<_Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, false, true>, _Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, false, true>>	pair<_T1, _T2>
pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, false, true>, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, false, true>>	pair<_T1, _T2>
is_constructible<cursor_t, const cursor_t &>	is_constructible<_Tp, _Args...>
__is_referenceable<cursor_t>	__is_referenceable<_Tp>
move_iterator<comp_t *>	move_iterator<_Iterator>
__is_move_insertable<allocator<comp_t>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<comp_t>	is_move_constructible<_Tp>
__is_move_constructible_impl<comp_t, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<comp_t, comp_t &&>	is_constructible<_Tp, _Args...>
remove_reference<_Vector_impl &>	remove_reference<_Tp &>
remove_reference<_Vector_impl &>	remove_reference<_Tp &>
remove_reference<_Vector_impl &>	remove_reference<_Tp &>
__iterator_traits<__normal_iterator<edit_t *, vector<edit_t, allocator<edit_t>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
__is_move_iterator<__normal_iterator<const edit_t *, vector<edit_t, allocator<edit_t>>>>	__is_move_iterator<_Tp>
__is_move_iterator<edit_t *>	__is_move_iterator<_Tp>
is_assignable<edit_t &, edit_t &>	is_assignable<_Tp, _Up>
conditional<true, comp_t &&, comp_t &>	conditional<_Cond, _Iftrue, _Iffalse>
remove_reference<allocator<edit_t> &>	remove_reference<_Tp &>
__is_pointer<edit_t *>	__is_pointer<_Tp *>
__are_same<edit_t, edit_t>	__are_same<_Tp, _Tp>
__is_pointer<const edit_t *>	__is_pointer<_Tp *>
__iterator_traits<__normal_iterator<const edit_t *, vector<edit_t, allocator<edit_t>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<edit_t &, const edit_t &>	is_assignable<_Tp, _Up>
remove_reference<allocator<line_t> &>	remove_reference<_Tp &>
is_copy_assignable<comp_t>	is_copy_assignable<_Tp>
remove_reference<allocator<comp_t> &>	remove_reference<_Tp &>
__is_copy_assignable_impl<comp_t, true>	__is_copy_assignable_impl<_Tp, true>
is_reference<comp_t &>	is_reference<_Tp>
__iterator_traits<move_iterator<comp_t *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<comp_t &, comp_t &&>	is_assignable<_Tp, _Up>
pointer_traits<_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, true> *>	pointer_traits<_Tp *>
__is_pointer<comp_t *>	__is_pointer<_Tp *>
__are_same<comp_t, comp_t>	__are_same<_Tp, _Tp>
remove_reference<edit_t &>	remove_reference<_Tp &>
is_assignable<comp_t &, const comp_t &>	is_assignable<_Tp, _Up>
__is_referenceable<comp_t>	__is_referenceable<_Tp>
remove_reference<const edit_t &>	remove_reference<_Tp &>
remove_reference<comp_t>	remove_reference<_Tp>
allocator<const argument_t *>	allocator<_Tp>
_Vector_base<const argument_t *, allocator<const argument_t *>>	_Vector_base<_Tp, _Alloc>
vector<const argument_t *, allocator<const argument_t *>>	vector<_Tp, _Alloc>
initializer_list<shared_ptr<const io_data_t>>	initializer_list<_E>
maybe_t<end_execution_reason_t>	maybe_t<T>
scoped_push<const job_t *>	scoped_push<T>
remove_reference<shared_ptr<const parsed_source_t> &>	remove_reference<_Tp &>
remove_reference<io_chain_t &>	remove_reference<_Tp &>
remove_reference<vector<unique_ptr<process_t, default_delete<process_t>>, allocator<unique_ptr<process_t, default_delete<process_t>>>> &>	remove_reference<_Tp &>
remove_reference<redirection_spec_t &>	remove_reference<_Tp &>
__normal_iterator<const argument_t *const *, vector<const argument_t *, allocator<const argument_t *>>>	__normal_iterator<_Iterator, _Container>
iterator_traits<const argument_t *const *>	iterator_traits<const _Tp *>
__normal_iterator<const argument_t **, vector<const argument_t *, allocator<const argument_t *>>>	__normal_iterator<_Iterator, _Container>
__add_lvalue_reference_helper<node_t, true>	__add_lvalue_reference_helper<_Tp, true>
__is_referenceable<node_t>	__is_referenceable<_Tp>
iterator_traits<const argument_t **>	iterator_traits<_Tp *>
maybe_impl_t<end_execution_reason_t>	maybe_impl_t<T>
_Temporary_value	_Temporary_value
reverse_iterator<__normal_iterator<const argument_t **, vector<const argument_t *, allocator<const argument_t *>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<const argument_t *const *, vector<const argument_t *, allocator<const argument_t *>>>>	reverse_iterator<_Iterator>
allocator_traits<allocator<const argument_t *>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<const argument_t *>, const argument_t *>	__alloc_traits<_Alloc, <unnamed>>
rebind<const argument_t *>	rebind<_Tp>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
_Base_manager<lambda [] type at line 148145, col. 25>	_Base_manager<_Functor>
_Base_manager<lambda [] type at line 147997, col. 21>	_Base_manager<_Functor>
allocator<job_t>	allocator<_Tp>
_Sp_counted_ptr_inplace<job_t, allocator<job_t>, _S_atomic>	_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>
__rebind<allocator<job_t>, _Sp_counted_ptr_inplace<job_t, allocator<job_t>, _S_atomic>, void>	__rebind<_Tp, _Up, __void_t<other>>
allocator<_Sp_counted_ptr_inplace<job_t, allocator<job_t>, _S_atomic>>	allocator<_Tp>
rebind<_Sp_counted_ptr_inplace<job_t, allocator<job_t>, _S_atomic>>	rebind<_Tp1>
new_allocator<const argument_t *>	new_allocator<_Tp>
new_allocator<job_t>	new_allocator<_Tp>
new_allocator<_Sp_counted_ptr_inplace<job_t, allocator<job_t>, _S_atomic>>	new_allocator<_Tp>
_Impl	_Impl
conditional<false, __undefined, _Sp_counted_ptr_inplace<job_t, allocator<job_t>, _S_atomic>>	conditional<false, _Iftrue, _Iffalse>
is_void<_Sp_counted_ptr_inplace<job_t, allocator<job_t>, _S_atomic>>	is_void<_Tp>
tuple<default_delete<process_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<process_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
remove_cv<job_t *>	remove_cv<_Tp>
remove_const<job_t *>	remove_const<_Tp>
enable_if<true, const argument_t **>	enable_if<true, _Tp>
remove_const<job_t>	remove_const<_Tp>
remove_cv<job_t>	remove_cv<_Tp>
__allocated_ptr<allocator<_Sp_counted_ptr_inplace<job_t, allocator<job_t>, _S_atomic>>>	__allocated_ptr<_Alloc>
allocator_traits<allocator<job_t>>	allocator_traits<allocator<_Tp>>
_Sp_ebo_helper<0, allocator<job_t>, true>	_Sp_ebo_helper<_Nm, _Tp, true>
_Sp_alloc_shared_tag<allocator<job_t>>	_Sp_alloc_shared_tag<_Alloc>
remove_reference<properties_t &>	remove_reference<_Tp &>
remove_reference<end_execution_reason_t &>	remove_reference<_Tp &>
_Temporary_value	_Temporary_value
remove_reference<concrete_assignment &>	remove_reference<_Tp &>
_Function_handler<..(..), lambda [] type at line 147997, col. 21>	_Function_handler<..(..), _Functor>
remove_reference<lambda [] type at line 147997, col. 21 &>	remove_reference<_Tp &>
remove_reference<const argument_t *&>	remove_reference<_Tp &>
_Function_handler<..(..), lambda [] type at line 148145, col. 25>	_Function_handler<..(..), _Functor>
remove_reference<lambda [] type at line 148145, col. 25 &>	remove_reference<_Tp &>
remove_reference<const job_t *&>	remove_reference<_Tp &>
remove_reference<process_t *>	remove_reference<_Tp>
move_iterator<const argument_t **>	move_iterator<_Iterator>
remove_reference<shared_ptr<job_t> &>	remove_reference<_Tp &>
conditional<true, const argument_t *&&, const argument_t *&>	conditional<_Cond, _Iftrue, _Iffalse>
allocator_traits<allocator<_Sp_counted_ptr_inplace<job_t, allocator<job_t>, _S_atomic>>>	allocator_traits<allocator<_Tp>>
__aligned_buffer<job_t>	__aligned_buffer<_Tp>
_Callable<lambda [] type at line 148145, col. 25, void>	_Callable<_Func, _Res2>
_Callable<lambda [] type at line 147997, col. 21, void>	_Callable<_Func, _Res2>
__normal_iterator<redirection_spec_t *, vector<redirection_spec_t, allocator<redirection_spec_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<redirection_spec_t *, vector<redirection_spec_t, allocator<redirection_spec_t>>>>	reverse_iterator<_Iterator>
is_same<const argument_t **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<const argument_t **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<const argument_t **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<const argument_t **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<const argument_t **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<const argument_t **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
__has_esft_base<job_t, void>	__has_esft_base<_Yp, <unnamed>>
remove_reference<redirection_spec_t>	remove_reference<_Tp>
remove_reference<const argument_t *>	remove_reference<_Tp>
remove_reference<concrete_assignment>	remove_reference<_Tp>
remove_reference<end_execution_reason_t>	remove_reference<_Tp>
is_reference<const argument_t *&>	is_reference<_Tp>
remove_reference<_Vector_impl &>	remove_reference<_Tp &>
remove_reference<_Vector_impl &>	remove_reference<_Tp &>
__iterator_traits<__normal_iterator<const redirection_spec_t *, vector<redirection_spec_t, allocator<redirection_spec_t>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<redirection_spec_t &, const redirection_spec_t &>	is_assignable<_Tp, _Up>
move_iterator<unique_ptr<process_t, default_delete<process_t>> *>	move_iterator<_Iterator>
__is_move_insertable<allocator<unique_ptr<process_t, default_delete<process_t>>>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<unique_ptr<process_t, default_delete<process_t>>>	is_move_constructible<_Tp>
__is_move_constructible_impl<unique_ptr<process_t, default_delete<process_t>>, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<unique_ptr<process_t, default_delete<process_t>>, unique_ptr<process_t, default_delete<process_t>> &&>	is_constructible<_Tp, _Args...>
remove_reference<_Vector_impl &>	remove_reference<_Tp &>
__is_move_iterator<move_iterator<const argument_t **>>	__is_move_iterator<move_iterator<_Iterator>>
remove_reference<__shared_ptr<job_t, _S_atomic> &>	remove_reference<_Tp &>
__is_referenceable<unique_ptr<process_t, default_delete<process_t>>>	__is_referenceable<_Tp>
conditional<true, unique_ptr<process_t, default_delete<process_t>> &&, unique_ptr<process_t, default_delete<process_t>> &>	conditional<_Cond, _Iftrue, _Iffalse>
__is_pointer<const argument_t **>	__is_pointer<_Tp *>
__are_same<const argument_t *, const argument_t *>	__are_same<_Tp, _Tp>
move_iterator<redirection_spec_t *>	move_iterator<_Iterator>
__is_move_insertable<allocator<redirection_spec_t>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<redirection_spec_t>	is_move_constructible<_Tp>
__is_move_constructible_impl<redirection_spec_t, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<redirection_spec_t, redirection_spec_t &&>	is_constructible<_Tp, _Args...>
remove_reference<allocator<unique_ptr<process_t, default_delete<process_t>>> &>	remove_reference<_Tp &>
__is_move_insertable<allocator<const argument_t *>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<const argument_t *>	is_move_constructible<_Tp>
__is_move_constructible_impl<const argument_t *, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<const argument_t *, const argument_t *&&>	is_constructible<_Tp, _Args...>
__is_move_iterator<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>> *>	__is_move_iterator<_Tp>
move_iterator<concrete_assignment *>	move_iterator<_Iterator>
__is_move_insertable<allocator<concrete_assignment>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<concrete_assignment>	is_move_constructible<_Tp>
__is_move_constructible_impl<concrete_assignment, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<concrete_assignment, concrete_assignment &&>	is_constructible<_Tp, _Args...>
is_copy_assignable<parse_error_t>	is_copy_assignable<_Tp>
__is_copy_assignable_impl<parse_error_t, true>	__is_copy_assignable_impl<_Tp, true>
__is_referenceable<concrete_assignment>	__is_referenceable<_Tp>
conditional<true, concrete_assignment &&, concrete_assignment &>	conditional<_Cond, _Iftrue, _Iffalse>
__is_referenceable<const argument_t *>	__is_referenceable<_Tp>
__is_referenceable<redirection_spec_t>	__is_referenceable<_Tp>
conditional<true, redirection_spec_t &&, redirection_spec_t &>	conditional<_Cond, _Iftrue, _Iffalse>
is_reference<unique_ptr<process_t, default_delete<process_t>> &>	is_reference<_Tp>
remove_reference<const redirection_spec_t &>	remove_reference<_Tp &>
remove_reference<process_t *&>	remove_reference<_Tp &>
__iterator_traits<move_iterator<unique_ptr<process_t, default_delete<process_t>> *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<unique_ptr<process_t, default_delete<process_t>> &, unique_ptr<process_t, default_delete<process_t>> &&>	is_assignable<_Tp, _Up>
is_move_assignable<const argument_t *>	is_move_assignable<_Tp>
is_copy_assignable<const argument_t *>	is_copy_assignable<_Tp>
conditional<true, is_move_assignable<const argument_t *>, is_copy_assignable<const argument_t *>>	conditional<_Cond, _Iftrue, _Iffalse>
remove_reference<job_t *&>	remove_reference<_Tp &>
is_reference<redirection_spec_t &>	is_reference<_Tp>
is_reference<concrete_assignment &>	is_reference<_Tp>
is_assignable<parse_error_t &, const parse_error_t &>	is_assignable<_Tp, _Up>
__iterator_traits<move_iterator<redirection_spec_t *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<redirection_spec_t &, redirection_spec_t &&>	is_assignable<_Tp, _Up>
__iterator_traits<move_iterator<const argument_t **>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<const argument_t *&, const argument_t *&&>	is_assignable<_Tp, _Up>
__iterator_traits<move_iterator<concrete_assignment *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<concrete_assignment &, concrete_assignment &&>	is_assignable<_Tp, _Up>
__is_move_assignable_impl<const argument_t *, true>	__is_move_assignable_impl<_Tp, true>
remove_reference<unique_ptr<process_t, default_delete<process_t>>>	remove_reference<_Tp>
remove_reference<unique_ptr<process_t, default_delete<process_t>> &>	remove_reference<_Tp &>
__is_pointer<shared_ptr<job_t> *>	__is_pointer<_Tp *>
__are_same<shared_ptr<job_t>, shared_ptr<job_t>>	__are_same<_Tp, _Tp>
remove_reference<default_delete<process_t>>	remove_reference<_Tp>
shared_ptr<parsed_source_t>	shared_ptr<_Tp>
remove_reference<ast_t &>	remove_reference<_Tp &>
remove_extent<parsed_source_t>	remove_extent<_Tp>
__shared_ptr<parsed_source_t, _S_atomic>	__shared_ptr<_Tp, _Lp>
allocator<parsed_source_t>	allocator<_Tp>
weak_ptr<parsed_source_t>	weak_ptr<_Tp>
_Sp_counted_ptr_inplace<parsed_source_t, allocator<parsed_source_t>, _S_atomic>	_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>
__rebind<allocator<parsed_source_t>, _Sp_counted_ptr_inplace<parsed_source_t, allocator<parsed_source_t>, _S_atomic>, void>	__rebind<_Tp, _Up, __void_t<other>>
allocator<_Sp_counted_ptr_inplace<parsed_source_t, allocator<parsed_source_t>, _S_atomic>>	allocator<_Tp>
rebind<_Sp_counted_ptr_inplace<parsed_source_t, allocator<parsed_source_t>, _S_atomic>>	rebind<_Tp1>
new_allocator<parsed_source_t>	new_allocator<_Tp>
new_allocator<_Sp_counted_ptr_inplace<parsed_source_t, allocator<parsed_source_t>, _S_atomic>>	new_allocator<_Tp>
_Impl	_Impl
conditional<false, __undefined, _Sp_counted_ptr_inplace<parsed_source_t, allocator<parsed_source_t>, _S_atomic>>	conditional<false, _Iftrue, _Iffalse>
is_void<_Sp_counted_ptr_inplace<parsed_source_t, allocator<parsed_source_t>, _S_atomic>>	is_void<_Tp>
remove_const<parsed_source_t>	remove_const<_Tp>
remove_cv<parsed_source_t>	remove_cv<_Tp>
__allocated_ptr<allocator<_Sp_counted_ptr_inplace<parsed_source_t, allocator<parsed_source_t>, _S_atomic>>>	__allocated_ptr<_Alloc>
allocator_traits<allocator<parsed_source_t>>	allocator_traits<allocator<_Tp>>
_Sp_ebo_helper<0, allocator<parsed_source_t>, true>	_Sp_ebo_helper<_Nm, _Tp, true>
_Sp_alloc_shared_tag<allocator<parsed_source_t>>	_Sp_alloc_shared_tag<_Alloc>
remove_reference<ast_t>	remove_reference<_Tp>
remove_reference<shared_ptr<parsed_source_t> &>	remove_reference<_Tp &>
allocator_traits<allocator<_Sp_counted_ptr_inplace<parsed_source_t, allocator<parsed_source_t>, _S_atomic>>>	allocator_traits<allocator<_Tp>>
__aligned_buffer<parsed_source_t>	__aligned_buffer<_Tp>
__weak_ptr<parsed_source_t, _S_atomic>	__weak_ptr<_Tp, _Lp>
__shared_ptr_access<parsed_source_t, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
is_array<parsed_source_t>	is_array<<unnamed>>
is_void<parsed_source_t>	is_void<_Tp>
__has_esft_base<parsed_source_t, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
aligned_storage<120UL, 8UL>	aligned_storage<_Len, _Align>
type	type
struct <unnamed>	struct <unnamed>
remove_reference<vector<parse_error_t, allocator<parse_error_t>> &>	remove_reference<_Tp &>
node_visitation_t<indent_visitor_t>	node_visitation_t<NodeVisitor>
move_iterator<__normal_iterator<parse_error_t *, vector<parse_error_t, allocator<parse_error_t>>>>	move_iterator<_Iterator>
__iterator_traits<__normal_iterator<parse_error_t *, vector<parse_error_t, allocator<parse_error_t>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
iterator_traits<__normal_iterator<parse_error_t *, vector<parse_error_t, allocator<parse_error_t>>>>	iterator_traits<_Iterator>
__normal_iterator<const tok_t *, vector<tok_t, allocator<tok_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const tok_t *, vector<tok_t, allocator<tok_t>>>>	reverse_iterator<_Iterator>
__enable_if<true, int *>	__enable_if<true, _Tp>
remove_reference<const tok_t &>	remove_reference<_Tp &>
__is_arithmetic<int>	__is_arithmetic<_Tp>
__is_pointer<int>	__is_pointer<_Tp>
__traitor<__is_arithmetic<int>, __is_pointer<int>>	__traitor<_Sp, _Tp>
__is_floating<int>	__is_floating<_Tp>
__traitor<__is_integer<int>, __is_floating<int>>	__traitor<_Sp, _Tp>
move_iterator<tok_t *>	move_iterator<_Iterator>
__is_move_insertable<allocator<tok_t>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<tok_t>	is_move_constructible<_Tp>
__is_move_constructible_impl<tok_t, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<tok_t, tok_t &&>	is_constructible<_Tp, _Args...>
__iterator_traits<move_iterator<__normal_iterator<parse_error_t *, vector<parse_error_t, allocator<parse_error_t>>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
conditional<true, tok_t &&, tok_t &>	conditional<_Cond, _Iftrue, _Iffalse>
is_reference<tok_t &>	is_reference<_Tp>
__iterator_traits<move_iterator<tok_t *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
__is_move_iterator<__normal_iterator<parse_error_t *, vector<parse_error_t, allocator<parse_error_t>>>>	__is_move_iterator<_Tp>
is_assignable<parse_error_t &, parse_error_t &>	is_assignable<_Tp, _Up>
__is_pointer<parse_error_t *>	__is_pointer<_Tp *>
__are_same<parse_error_t, parse_error_t>	__are_same<_Tp, _Tp>
remove_reference<tok_t>	remove_reference<_Tp>
_List_const_iterator<event_blockage_t>	_List_const_iterator<_Tp>
default_delete<profile_item_t>	default_delete<_Tp>
unique_ptr<profile_item_t, default_delete<profile_item_t>>	unique_ptr<_Tp, _Dp>
allocator<unique_ptr<profile_item_t, default_delete<profile_item_t>>>	allocator<_Tp>
_Vector_base<unique_ptr<profile_item_t, default_delete<profile_item_t>>, allocator<unique_ptr<profile_item_t, default_delete<profile_item_t>>>>	_Vector_base<_Tp, _Alloc>
vector<unique_ptr<profile_item_t, default_delete<profile_item_t>>, allocator<unique_ptr<profile_item_t, default_delete<profile_item_t>>>>	vector<_Tp, _Alloc>
__uniq_ptr_impl<profile_item_t, default_delete<profile_item_t>>	__uniq_ptr_impl<_Tp, _Dp>
_Ptr<profile_item_t, default_delete<profile_item_t>, void>	_Ptr<_Up, _Ep, <unnamed>>
allocator_traits<allocator<unique_ptr<profile_item_t, default_delete<profile_item_t>>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<unique_ptr<profile_item_t, default_delete<profile_item_t>>>, unique_ptr<profile_item_t, default_delete<profile_item_t>>>	__alloc_traits<_Alloc, <unnamed>>
__iterator_traits<_Deque_iterator<shared_ptr<job_t>, shared_ptr<job_t> &, shared_ptr<job_t> *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
remove_reference<block_t &>	remove_reference<_Tp &>
scoped_push<unique_ptr<parse_execution_context_t, default_delete<parse_execution_context_t>>>	scoped_push<T>
remove_reference<shared_ptr<env_stack_t> &>	remove_reference<_Tp &>
is_same<T, statement_t>	is_same<<unnamed>, <unnamed>>
is_same<T, job_list_t>	is_same<<unnamed>, <unnamed>>
is_same<unique_ptr<profile_item_t, default_delete<profile_item_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unique_ptr<profile_item_t, default_delete<profile_item_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unique_ptr<profile_item_t, default_delete<profile_item_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unique_ptr<profile_item_t, default_delete<profile_item_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<unique_ptr<profile_item_t, default_delete<profile_item_t>> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<unique_ptr<profile_item_t, default_delete<profile_item_t>> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_convertible<pointer, profile_item_t *>	is_convertible<_From, _To>
__and_<is_convertible<pointer, profile_item_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, profile_item_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
__and_<is_convertible<pointer, profile_item_t *>, __not_<is_array<_Up>>>	__and_<<unnamed>...>
_Temporary_value	_Temporary_value
__normal_iterator<unique_ptr<profile_item_t, default_delete<profile_item_t>> *, vector<unique_ptr<profile_item_t, default_delete<profile_item_t>>, allocator<unique_ptr<profile_item_t, default_delete<profile_item_t>>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<unique_ptr<profile_item_t, default_delete<profile_item_t>> *, vector<unique_ptr<profile_item_t, default_delete<profile_item_t>>, allocator<unique_ptr<profile_item_t, default_delete<profile_item_t>>>>>>	reverse_iterator<_Iterator>
__normal_iterator<const unique_ptr<profile_item_t, default_delete<profile_item_t>> *, vector<unique_ptr<profile_item_t, default_delete<profile_item_t>>, allocator<unique_ptr<profile_item_t, default_delete<profile_item_t>>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const unique_ptr<profile_item_t, default_delete<profile_item_t>> *, vector<unique_ptr<profile_item_t, default_delete<profile_item_t>>, allocator<unique_ptr<profile_item_t, default_delete<profile_item_t>>>>>>	reverse_iterator<_Iterator>
rebind<unique_ptr<profile_item_t, default_delete<profile_item_t>>>	rebind<_Tp>
_Base_manager<lambda [] type at line 147262, col. 29>	_Base_manager<_Functor>
_Base_manager<lambda [] type at line 147262, col. 29>	_Base_manager<_Functor>
_Base_manager<lambda [] type at line 146894, col. 12>	_Base_manager<_Functor>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
__is_empty_non_tuple<default_delete<profile_item_t>>	__is_empty_non_tuple<_Tp>
is_empty<default_delete<profile_item_t>>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<default_delete<profile_item_t>>>	conditional<false, _Iftrue, _Iffalse>
__is_empty_non_tuple<profile_item_t *>	__is_empty_non_tuple<_Tp>
is_empty<profile_item_t *>	is_empty<_Tp>
conditional<false, integral_constant<bool, false>, __is_empty_non_tuple<profile_item_t *>>	conditional<false, _Iftrue, _Iffalse>
tuple_element<0UL, tuple<parse_execution_context_t *, default_delete<parse_execution_context_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<parse_execution_context_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<parse_execution_context_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<profile_item_t *, default_delete<profile_item_t>>	tuple<_T1, _T2>
tuple_element<0UL, tuple<profile_item_t *, default_delete<profile_item_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
tuple<default_delete<profile_item_t>>	tuple<_Elements...>
tuple_element<0UL, tuple<default_delete<profile_item_t>>>	tuple_element<0UL, tuple<_Head, _Tail...>>
allocator_traits<allocator<block_t *>>	allocator_traits<allocator<_Tp>>
new_allocator<unique_ptr<profile_item_t, default_delete<profile_item_t>>>	new_allocator<_Tp>
remove_cv<shared_ptr<job_t>>	remove_cv<_Tp>
remove_const<shared_ptr<job_t>>	remove_const<_Tp>
remove_cv<parse_execution_context_t *>	remove_cv<_Tp>
remove_const<parse_execution_context_t *>	remove_const<_Tp>
remove_reference<unique_ptr<parse_execution_context_t, default_delete<parse_execution_context_t>> &>	remove_reference<_Tp &>
remove_reference<const shared_ptr<const parsed_source_t> &>	remove_reference<_Tp &>
remove_reference<operation_context_t &>	remove_reference<_Tp &>
remove_reference<const io_chain_t &>	remove_reference<_Tp &>
iterator_traits<unique_ptr<profile_item_t, default_delete<profile_item_t>> *>	iterator_traits<_Tp *>
remove_reference<unique_ptr<profile_item_t, default_delete<profile_item_t>> &>	remove_reference<_Tp &>
_Function_handler<..(..), lambda [] type at line 146894, col. 12>	_Function_handler<..(..), _Functor>
remove_reference<lambda [] type at line 146894, col. 12 &>	remove_reference<_Tp &>
remove_reference<parse_execution_context_t *&>	remove_reference<_Tp &>
enable_if<true, function<..(..)> &>	enable_if<true, _Tp>
_Callable<lambda [] type at line 147262, col. 29, bool>	_Callable<_Func, _Res2>
_Callable<lambda [] type at line 147262, col. 29, bool>	_Callable<_Func, _Res2>
__alloc_traits<allocator<block_t *>, block_t *>	__alloc_traits<_Alloc, <unnamed>>
_TC<value, profile_item_t *, default_delete<profile_item_t>>	_TC<<unnamed>, _Elements...>
_TC<true, profile_item_t *, default_delete<profile_item_t>>	_TC<<unnamed>, _Elements...>
_Tuple_impl<0UL, profile_item_t *, default_delete<profile_item_t>>	_Tuple_impl<_Idx, _Head, _Tail...>
_Callable<lambda [] type at line 146894, col. 12, bool>	_Callable<_Func, _Res2>
is_same<block_t **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<block_t **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<block_t **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<block_t **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<block_t **, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<block_t **, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
__normal_iterator<shared_ptr<event_t> *, vector<shared_ptr<event_t>, allocator<shared_ptr<event_t>>>>	__normal_iterator<_Iterator, _Container>
__normal_iterator<const shared_ptr<event_t> *, vector<shared_ptr<event_t>, allocator<shared_ptr<event_t>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const shared_ptr<event_t> *, vector<shared_ptr<event_t>, allocator<shared_ptr<event_t>>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<shared_ptr<event_t> *, vector<shared_ptr<event_t>, allocator<shared_ptr<event_t>>>>>	reverse_iterator<_Iterator>
weak_ptr<event_t>	weak_ptr<_Tp>
reverse_iterator<_List_const_iterator<event_blockage_t>>	reverse_iterator<_Iterator>
__weak_ptr<event_t, _S_atomic>	__weak_ptr<_Tp, _Lp>
__has_esft_base<parser_t, void>	__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>
__not_<is_array<parser_t>>	__not_<_Pp>
remove_reference<allocator<_List_node<event_blockage_t>> &>	remove_reference<_Tp &>
remove_reference<lambda [] type at line 147262, col. 29>	remove_reference<_Tp>
remove_reference<lambda [] type at line 147262, col. 29>	remove_reference<_Tp>
remove_reference<unique_ptr<profile_item_t, default_delete<profile_item_t>>>	remove_reference<_Tp>
remove_reference<block_t>	remove_reference<_Tp>
remove_reference<default_delete<parse_execution_context_t>>	remove_reference<_Tp>
remove_reference<shared_ptr<job_t>>	remove_reference<_Tp>
_Ptr<_Up, _Ep, __void_t<pointer>>	_Ptr<_Up, _Ep, <unnamed>>
_Head_base<0UL, profile_item_t *, false>	_Head_base<_Idx, _Head, false>
_Tuple_impl<1UL, default_delete<profile_item_t>>	_Tuple_impl<_Idx, _Head>
_Head_base<1UL, default_delete<profile_item_t>, true>	_Head_base<_Idx, _Head, true>
_Function_handler<..(..), lambda [] type at line 147262, col. 29>	_Function_handler<..(..), _Functor>
remove_reference<lambda [] type at line 147262, col. 29 &>	remove_reference<_Tp &>
_Function_handler<..(..), lambda [] type at line 147262, col. 29>	_Function_handler<..(..), _Functor>
remove_reference<lambda [] type at line 147262, col. 29 &>	remove_reference<_Tp &>
remove_reference<..(*&)(..)>	remove_reference<_Tp &>
move_iterator<unique_ptr<profile_item_t, default_delete<profile_item_t>> *>	move_iterator<_Iterator>
__is_move_insertable<allocator<unique_ptr<profile_item_t, default_delete<profile_item_t>>>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<unique_ptr<profile_item_t, default_delete<profile_item_t>>>	is_move_constructible<_Tp>
__is_move_constructible_impl<unique_ptr<profile_item_t, default_delete<profile_item_t>>, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<unique_ptr<profile_item_t, default_delete<profile_item_t>>, unique_ptr<profile_item_t, default_delete<profile_item_t>> &&>	is_constructible<_Tp, _Args...>
_Sp_counted_ptr<parser_t *, _S_atomic>	_Sp_counted_ptr<_Ptr, _Lp>
__is_referenceable<unique_ptr<profile_item_t, default_delete<profile_item_t>>>	__is_referenceable<_Tp>
conditional<true, unique_ptr<profile_item_t, default_delete<profile_item_t>> &&, unique_ptr<profile_item_t, default_delete<profile_item_t>> &>	conditional<_Cond, _Iftrue, _Iffalse>
__is_pointer<_Deque_iterator<shared_ptr<job_t>, shared_ptr<job_t> &, shared_ptr<job_t> *>>	__is_pointer<_Tp>
remove_reference<default_delete<profile_item_t>>	remove_reference<_Tp>
iterator_traits<block_t *>	iterator_traits<_Tp *>
is_reference<unique_ptr<profile_item_t, default_delete<profile_item_t>> &>	is_reference<_Tp>
remove_reference<profile_item_t *&>	remove_reference<_Tp &>
__iterator_traits<move_iterator<unique_ptr<profile_item_t, default_delete<profile_item_t>> *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<unique_ptr<profile_item_t, default_delete<profile_item_t>> &, unique_ptr<profile_item_t, default_delete<profile_item_t>> &&>	is_assignable<_Tp, _Up>
__is_move_iterator<shared_ptr<job_t> **>	__is_move_iterator<_Tp>
__is_move_iterator<block_t **>	__is_move_iterator<_Tp>
iterator_traits<block_t **>	iterator_traits<_Tp *>
__is_pointer<block_t **>	__is_pointer<_Tp *>
__are_same<block_t *, block_t *>	__are_same<_Tp, _Tp>
iterator_traits<shared_ptr<job_t> **>	iterator_traits<_Tp *>
__is_pointer<shared_ptr<job_t> **>	__is_pointer<_Tp *>
__are_same<shared_ptr<job_t> *, shared_ptr<job_t> *>	__are_same<_Tp, _Tp>
is_move_assignable<shared_ptr<job_t> *>	is_move_assignable<_Tp>
is_copy_assignable<shared_ptr<job_t> *>	is_copy_assignable<_Tp>
conditional<false, is_move_assignable<shared_ptr<job_t> *>, is_copy_assignable<shared_ptr<job_t> *>>	conditional<false, _Iftrue, _Iffalse>
is_move_assignable<block_t *>	is_move_assignable<_Tp>
is_copy_assignable<block_t *>	is_copy_assignable<_Tp>
conditional<false, is_move_assignable<block_t *>, is_copy_assignable<block_t *>>	conditional<false, _Iftrue, _Iffalse>
__is_copy_assignable_impl<shared_ptr<job_t> *, true>	__is_copy_assignable_impl<_Tp, true>
__is_copy_assignable_impl<block_t *, true>	__is_copy_assignable_impl<_Tp, true>
is_assignable<block_t *&, block_t *const &>	is_assignable<_Tp, _Up>
__is_referenceable<block_t *>	__is_referenceable<_Tp>
is_assignable<shared_ptr<job_t> *&, shared_ptr<job_t> *const &>	is_assignable<_Tp, _Up>
__is_referenceable<shared_ptr<job_t> *>	__is_referenceable<_Tp>
__iterator_traits<_Node_const_iterator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true, true>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
remove_reference<allocator<_Hash_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true>>>	remove_reference<_Tp>
remove_reference<posix_spawnattr_t &>	remove_reference<_Tp &>
remove_reference<posix_spawn_file_actions_t &>	remove_reference<_Tp &>
enum_set_t<topic_t>	enum_set_t<T>
owning_lock<vector<int, allocator<int>>>	owning_lock<Data>
relaxed_atomic_t<job_control_t>	relaxed_atomic_t<T>
relaxed_atomic_t<session_interactivity_t>	relaxed_atomic_t<T>
acquired_lock<vector<int, allocator<int>>>	acquired_lock<Data>
acquired_lock<const vector<int, allocator<int>>>	acquired_lock<Data>
atomic<session_interactivity_t>	atomic<_Tp>
atomic<job_control_t>	atomic<_Tp>
_Base_manager<lambda [] type at line 153223, col. 30>	_Base_manager<_Functor>
_Base_manager<lambda [] type at line 152907, col. 29>	_Base_manager<_Functor>
remove_cv<job_group_t *>	remove_cv<_Tp>
remove_const<job_group_t *>	remove_const<_Tp>
_Function_handler<..(..), lambda [] type at line 153223, col. 30>	_Function_handler<..(..), _Functor>
remove_reference<lambda [] type at line 153223, col. 30 &>	remove_reference<_Tp &>
remove_reference<deque<shared_ptr<job_t>, allocator<shared_ptr<job_t>>> &>	remove_reference<_Tp &>
_Iter_pred<lambda [] type at line 152674, col. 22>	_Iter_pred<_Predicate>
_Iter_pred<lambda [] type at line 152964, col. 26>	_Iter_pred<_Predicate>
_Function_handler<..(..), lambda [] type at line 152907, col. 29>	_Function_handler<..(..), _Functor>
remove_reference<lambda [] type at line 152907, col. 29 &>	remove_reference<_Tp &>
_Callable<lambda [] type at line 153223, col. 30, void>	_Callable<_Func, _Res2>
_Callable<lambda [] type at line 152907, col. 29, void>	_Callable<_Func, _Res2>
__has_esft_base<job_group_t, void>	__has_esft_base<_Yp, <unnamed>>
remove_reference<termios &>	remove_reference<_Tp &>
remove_reference<lambda [] type at line 152964, col. 26 &>	remove_reference<_Tp &>
__enable_if<true, unsigned long *>	__enable_if<true, _Tp>
remove_reference<lambda [] type at line 152674, col. 22 &>	remove_reference<_Tp &>
remove_reference<const shared_ptr<job_t> &>	remove_reference<_Tp &>
remove_reference<_Deque_base<shared_ptr<job_t>, allocator<shared_ptr<job_t>>> &>	remove_reference<_Tp &>
__is_arithmetic<unsigned long>	__is_arithmetic<_Tp>
__is_pointer<unsigned long>	__is_pointer<_Tp>
__traitor<__is_arithmetic<unsigned long>, __is_pointer<unsigned long>>	__traitor<_Sp, _Tp>
remove_reference<job_group_t *&>	remove_reference<_Tp &>
remove_reference<allocator<shared_ptr<job_t>> &>	remove_reference<_Tp &>
__is_floating<unsigned long>	__is_floating<_Tp>
__traitor<__is_integer<unsigned long>, __is_floating<unsigned long>>	__traitor<_Sp, _Tp>
_Sp_counted_ptr<job_group_t *, _S_atomic>	_Sp_counted_ptr<_Ptr, _Lp>
remove_reference<shared_ptr<job_t> **&>	remove_reference<_Tp &>
remove_reference<_Deque_iterator<shared_ptr<job_t>, shared_ptr<job_t> &, shared_ptr<job_t> *> &>	remove_reference<_Tp &>
is_void<highlight_result_t>	is_void<_Tp>
is_same<highlight_result_t, highlight_result_t>	is_same<_Tp, _Tp>
is_convertible<highlight_result_t, highlight_result_t>	is_convertible<_From, _To>
__or_<is_void<highlight_result_t>, is_same<highlight_result_t, highlight_result_t>, is_convertible<highlight_result_t, highlight_result_t>>	__or_<_B1, _B2, _B3, _Bn...>
is_void<autosuggestion_result_t>	is_void<_Tp>
is_same<autosuggestion_result_t, autosuggestion_result_t>	is_same<_Tp, _Tp>
is_convertible<autosuggestion_result_t, autosuggestion_result_t>	is_convertible<_From, _To>
__or_<is_void<autosuggestion_result_t>, is_same<autosuggestion_result_t, autosuggestion_result_t>, is_convertible<autosuggestion_result_t, autosuggestion_result_t>>	__or_<_B1, _B2, _B3, _Bn...>
enable_shared_from_this<reader_data_t>	enable_shared_from_this<_Tp>
shared_ptr<reader_data_t>	shared_ptr<_Tp>
allocator<shared_ptr<reader_data_t>>	allocator<_Tp>
_Vector_base<shared_ptr<reader_data_t>, allocator<shared_ptr<reader_data_t>>>	_Vector_base<_Tp, _Alloc>
vector<shared_ptr<reader_data_t>, allocator<shared_ptr<reader_data_t>>>	vector<_Tp, _Alloc>
iothread_trampoline_t<Handler, Completion, type>	iothread_trampoline_t<Handler, Completion, Result>
maybe_t<edit_t>	maybe_t<T>
function<..(..)>	function<..(..)>
function<..(..)>	function<..(..)>
__shared_ptr<reader_data_t, _S_atomic>	__shared_ptr<_Tp, _Lp>
remove_extent<reader_data_t>	remove_extent<_Tp>
allocator_traits<allocator<shared_ptr<reader_data_t>>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<shared_ptr<reader_data_t>>, shared_ptr<reader_data_t>>	__alloc_traits<_Alloc, <unnamed>>
__shared_ptr_access<reader_data_t, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
remove_reference<highlight_result_t &>	remove_reference<_Tp &>
remove_reference<autosuggestion_result_t &>	remove_reference<_Tp &>
initializer_list<completion_request_t>	initializer_list<_E>
remove_reference<shared_ptr<parser_t> &>	remove_reference<_Tp &>
is_array<reader_data_t>	is_array<<unnamed>>
is_void<reader_data_t>	is_void<_Tp>
is_same<shared_ptr<reader_data_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<shared_ptr<reader_data_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<shared_ptr<reader_data_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<shared_ptr<reader_data_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<shared_ptr<reader_data_t> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<shared_ptr<reader_data_t> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
maybe_t<highlight_result_t>	maybe_t<T>
__weak_ptr<maybe_t<highlight_result_t>, _S_atomic>	__weak_ptr<_Tp, _Lp>
__shared_ptr<maybe_t<highlight_result_t>, _S_atomic>	__shared_ptr<_Tp, _Lp>
maybe_t<autosuggestion_result_t>	maybe_t<T>
__weak_ptr<maybe_t<autosuggestion_result_t>, _S_atomic>	__weak_ptr<_Tp, _Lp>
__shared_ptr<maybe_t<autosuggestion_result_t>, _S_atomic>	__shared_ptr<_Tp, _Lp>
__weak_ptr<reader_data_t, _S_atomic>	__weak_ptr<_Tp, _Lp>
_Callable<type, type>	_Callable<_Func, _Res2>
_Callable<_Functor, type>	_Callable<_Func, _Res2>
_Maybe_unary_or_binary_function<autosuggestion_result_t>	_Maybe_unary_or_binary_function<_Res, _ArgTypes...>
_Callable<type, type>	_Callable<_Func, _Res2>
_Callable<_Functor, type>	_Callable<_Func, _Res2>
_Maybe_unary_or_binary_function<highlight_result_t>	_Maybe_unary_or_binary_function<_Res, _ArgTypes...>
allocator<reader_data_t>	allocator<_Tp>
allocator<maybe_t<highlight_result_t>>	allocator<_Tp>
allocator<maybe_t<autosuggestion_result_t>>	allocator<_Tp>
weak_ptr<reader_data_t>	weak_ptr<_Tp>
_Temporary_value	_Temporary_value
__normal_iterator<shared_ptr<reader_data_t> *, vector<shared_ptr<reader_data_t>, allocator<shared_ptr<reader_data_t>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<shared_ptr<reader_data_t> *, vector<shared_ptr<reader_data_t>, allocator<shared_ptr<reader_data_t>>>>>	reverse_iterator<_Iterator>
__normal_iterator<const shared_ptr<reader_data_t> *, vector<shared_ptr<reader_data_t>, allocator<shared_ptr<reader_data_t>>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const shared_ptr<reader_data_t> *, vector<shared_ptr<reader_data_t>, allocator<shared_ptr<reader_data_t>>>>>	reverse_iterator<_Iterator>
rebind<shared_ptr<reader_data_t>>	rebind<_Tp>
maybe_impl_t<edit_t>	maybe_impl_t<T>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
__or_<is_same<autosuggestion_result_t, autosuggestion_result_t>, is_convertible<autosuggestion_result_t, autosuggestion_result_t>>	__or_<_B1, _B2>
conditional<false, is_void<autosuggestion_result_t>, __or_<is_same<autosuggestion_result_t, autosuggestion_result_t>, is_convertible<autosuggestion_result_t, autosuggestion_result_t>>>	conditional<false, _Iftrue, _Iffalse>
__or_<is_same<highlight_result_t, highlight_result_t>, is_convertible<highlight_result_t, highlight_result_t>>	__or_<_B1, _B2>
conditional<false, is_void<highlight_result_t>, __or_<is_same<highlight_result_t, highlight_result_t>, is_convertible<highlight_result_t, highlight_result_t>>>	conditional<false, _Iftrue, _Iffalse>
iothread_trampoline_t<function<..(..)>, lambda [] type at line 161861, col. 41, highlight_result_t>	iothread_trampoline_t<Handler, Completion, Result>
_Base_manager<lambda [] type at line 148893, col. 28>	_Base_manager<_Functor>
shared_ptr<maybe_t<highlight_result_t>>	shared_ptr<_Tp>
_Base_manager<lambda [] type at line 148892, col. 25>	_Base_manager<_Functor>
_Base_manager<lambda [] type at line 161827, col. 12>	_Base_manager<_Functor>
_Base_manager<lambda [] type at line 161456, col. 28>	_Base_manager<_Functor>
iothread_trampoline_t<function<..(..)>, lambda [] type at line 161116, col. 24, autosuggestion_result_t>	iothread_trampoline_t<Handler, Completion, Result>
_Base_manager<lambda [] type at line 148893, col. 28>	_Base_manager<_Functor>
shared_ptr<maybe_t<autosuggestion_result_t>>	shared_ptr<_Tp>
_Base_manager<lambda [] type at line 148892, col. 25>	_Base_manager<_Functor>
_Base_manager<lambda [] type at line 161027, col. 12>	_Base_manager<_Functor>
_Base_manager<lambda [] type at line 159687, col. 39>	_Base_manager<_Functor>
new_allocator<shared_ptr<reader_data_t>>	new_allocator<_Tp>
new_allocator<maybe_t<autosuggestion_result_t>>	new_allocator<_Tp>
new_allocator<maybe_t<highlight_result_t>>	new_allocator<_Tp>
new_allocator<reader_data_t>	new_allocator<_Tp>
_Sp_counted_ptr_inplace<maybe_t<autosuggestion_result_t>, allocator<maybe_t<autosuggestion_result_t>>, _S_atomic>	_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>
new_allocator<_Sp_counted_ptr_inplace<maybe_t<autosuggestion_result_t>, allocator<maybe_t<autosuggestion_result_t>>, _S_atomic>>	new_allocator<_Tp>
_Sp_counted_ptr_inplace<maybe_t<highlight_result_t>, allocator<maybe_t<highlight_result_t>>, _S_atomic>	_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>
new_allocator<_Sp_counted_ptr_inplace<maybe_t<highlight_result_t>, allocator<maybe_t<highlight_result_t>>, _S_atomic>>	new_allocator<_Tp>
_Sp_counted_ptr_inplace<reader_data_t, allocator<reader_data_t>, _S_atomic>	_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>
new_allocator<_Sp_counted_ptr_inplace<reader_data_t, allocator<reader_data_t>, _S_atomic>>	new_allocator<_Tp>
allocator<_Sp_counted_ptr_inplace<maybe_t<autosuggestion_result_t>, allocator<maybe_t<autosuggestion_result_t>>, _S_atomic>>	allocator<_Tp>
allocator<_Sp_counted_ptr_inplace<reader_data_t, allocator<reader_data_t>, _S_atomic>>	allocator<_Tp>
allocator<_Sp_counted_ptr_inplace<maybe_t<highlight_result_t>, allocator<maybe_t<highlight_result_t>>, _S_atomic>>	allocator<_Tp>
__rebind<allocator<reader_data_t>, _Sp_counted_ptr_inplace<reader_data_t, allocator<reader_data_t>, _S_atomic>, void>	__rebind<_Tp, _Up, __void_t<other>>
rebind<_Sp_counted_ptr_inplace<reader_data_t, allocator<reader_data_t>, _S_atomic>>	rebind<_Tp1>
__rebind<allocator<maybe_t<highlight_result_t>>, _Sp_counted_ptr_inplace<maybe_t<highlight_result_t>, allocator<maybe_t<highlight_result_t>>, _S_atomic>, void>	__rebind<_Tp, _Up, __void_t<other>>
rebind<_Sp_counted_ptr_inplace<maybe_t<highlight_result_t>, allocator<maybe_t<highlight_result_t>>, _S_atomic>>	rebind<_Tp1>
__rebind<allocator<maybe_t<autosuggestion_result_t>>, _Sp_counted_ptr_inplace<maybe_t<autosuggestion_result_t>, allocator<maybe_t<autosuggestion_result_t>>, _S_atomic>, void>	__rebind<_Tp, _Up, __void_t<other>>
rebind<_Sp_counted_ptr_inplace<maybe_t<autosuggestion_result_t>, allocator<maybe_t<autosuggestion_result_t>>, _S_atomic>>	rebind<_Tp1>
_Impl	_Impl
conditional<false, __undefined, _Sp_counted_ptr_inplace<maybe_t<autosuggestion_result_t>, allocator<maybe_t<autosuggestion_result_t>>, _S_atomic>>	conditional<false, _Iftrue, _Iffalse>
is_void<_Sp_counted_ptr_inplace<maybe_t<autosuggestion_result_t>, allocator<maybe_t<autosuggestion_result_t>>, _S_atomic>>	is_void<_Tp>
_Impl	_Impl
conditional<false, __undefined, _Sp_counted_ptr_inplace<maybe_t<highlight_result_t>, allocator<maybe_t<highlight_result_t>>, _S_atomic>>	conditional<false, _Iftrue, _Iffalse>
is_void<_Sp_counted_ptr_inplace<maybe_t<highlight_result_t>, allocator<maybe_t<highlight_result_t>>, _S_atomic>>	is_void<_Tp>
_Impl	_Impl
conditional<false, __undefined, _Sp_counted_ptr_inplace<reader_data_t, allocator<reader_data_t>, _S_atomic>>	conditional<false, _Iftrue, _Iffalse>
is_void<_Sp_counted_ptr_inplace<reader_data_t, allocator<reader_data_t>, _S_atomic>>	is_void<_Tp>
remove_cv<..(*)(..)>	remove_cv<_Tp>
remove_const<..(*)(..)>	remove_const<_Tp>
remove_cv<..(*)(..)>	remove_cv<_Tp>
remove_const<..(*)(..)>	remove_const<_Tp>
remove_const<reader_data_t>	remove_const<_Tp>
remove_cv<reader_data_t>	remove_cv<_Tp>
__allocated_ptr<allocator<_Sp_counted_ptr_inplace<reader_data_t, allocator<reader_data_t>, _S_atomic>>>	__allocated_ptr<_Alloc>
allocator_traits<allocator<reader_data_t>>	allocator_traits<allocator<_Tp>>
_Sp_ebo_helper<0, allocator<reader_data_t>, true>	_Sp_ebo_helper<_Nm, _Tp, true>
remove_const<maybe_t<highlight_result_t>>	remove_const<_Tp>
remove_cv<maybe_t<highlight_result_t>>	remove_cv<_Tp>
__allocated_ptr<allocator<_Sp_counted_ptr_inplace<maybe_t<highlight_result_t>, allocator<maybe_t<highlight_result_t>>, _S_atomic>>>	__allocated_ptr<_Alloc>
allocator_traits<allocator<maybe_t<highlight_result_t>>>	allocator_traits<allocator<_Tp>>
_Sp_ebo_helper<0, allocator<maybe_t<highlight_result_t>>, true>	_Sp_ebo_helper<_Nm, _Tp, true>
remove_const<maybe_t<autosuggestion_result_t>>	remove_const<_Tp>
remove_cv<maybe_t<autosuggestion_result_t>>	remove_cv<_Tp>
__allocated_ptr<allocator<_Sp_counted_ptr_inplace<maybe_t<autosuggestion_result_t>, allocator<maybe_t<autosuggestion_result_t>>, _S_atomic>>>	__allocated_ptr<_Alloc>
allocator_traits<allocator<maybe_t<autosuggestion_result_t>>>	allocator_traits<allocator<_Tp>>
_Sp_ebo_helper<0, allocator<maybe_t<autosuggestion_result_t>>, true>	_Sp_ebo_helper<_Nm, _Tp, true>
remove_reference<shared_ptr<maybe_t<autosuggestion_result_t>> &>	remove_reference<_Tp &>
remove_reference<shared_ptr<maybe_t<highlight_result_t>> &>	remove_reference<_Tp &>
enable_if<true, function<..(..)> &>	enable_if<true, _Tp>
_Callable<lambda [] type at line 148892, col. 25, void>	_Callable<_Func, _Res2>
_Callable<lambda [] type at line 148893, col. 28, void>	_Callable<_Func, _Res2>
__shared_ptr_access<maybe_t<autosuggestion_result_t>, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
_Callable<lambda [] type at line 148892, col. 25, void>	_Callable<_Func, _Res2>
_Callable<lambda [] type at line 148893, col. 28, void>	_Callable<_Func, _Res2>
__shared_ptr_access<maybe_t<highlight_result_t>, _S_atomic, false, false>	__shared_ptr_access<_Tp, _Lp, <unnamed>, <unnamed>>
_Sp_alloc_shared_tag<allocator<maybe_t<autosuggestion_result_t>>>	_Sp_alloc_shared_tag<_Alloc>
_Sp_alloc_shared_tag<allocator<maybe_t<highlight_result_t>>>	_Sp_alloc_shared_tag<_Alloc>
_Sp_alloc_shared_tag<allocator<reader_data_t>>	_Sp_alloc_shared_tag<_Alloc>
remove_reference<shared_ptr<parser_t>>	remove_reference<_Tp>
remove_reference<shared_ptr<reader_data_t> &>	remove_reference<_Tp &>
_Function_handler<..(..), lambda [] type at line 159687, col. 39>	_Function_handler<..(..), _Functor>
remove_reference<lambda [] type at line 159687, col. 39 &>	remove_reference<_Tp &>
_Iter_pred<..(*)(..)>	_Iter_pred<_Predicate>
_Function_handler<..(..), lambda [] type at line 161027, col. 12>	_Function_handler<..(..), _Functor>
remove_reference<lambda [] type at line 161027, col. 12 &>	remove_reference<_Tp &>
_Function_handler<..(..), lambda [] type at line 161456, col. 28>	_Function_handler<..(..), _Functor>
remove_reference<lambda [] type at line 161456, col. 28 &>	remove_reference<_Tp &>
remove_reference<shared_ptr<environment_t> &>	remove_reference<_Tp &>
_Function_handler<..(..), lambda [] type at line 161827, col. 12>	_Function_handler<..(..), _Functor>
remove_reference<lambda [] type at line 161827, col. 12 &>	remove_reference<_Tp &>
iterator_traits<shared_ptr<reader_data_t> *>	iterator_traits<_Tp *>
__result_of_success<autosuggestion_result_t, __invoke_other>	__result_of_success<_Tp, _Tag>
__result_of_success<highlight_result_t, __invoke_other>	__result_of_success<_Tp, _Tag>
__success_type<highlight_result_t>	__success_type<_Tp>
__success_type<autosuggestion_result_t>	__success_type<_Tp>
is_array<maybe_t<highlight_result_t>>	is_array<<unnamed>>
is_void<maybe_t<highlight_result_t>>	is_void<_Tp>
is_array<maybe_t<autosuggestion_result_t>>	is_array<<unnamed>>
is_void<maybe_t<autosuggestion_result_t>>	is_void<_Tp>
allocator_traits<allocator<_Sp_counted_ptr_inplace<maybe_t<autosuggestion_result_t>, allocator<maybe_t<autosuggestion_result_t>>, _S_atomic>>>	allocator_traits<allocator<_Tp>>
allocator_traits<allocator<_Sp_counted_ptr_inplace<maybe_t<highlight_result_t>, allocator<maybe_t<highlight_result_t>>, _S_atomic>>>	allocator_traits<allocator<_Tp>>
allocator_traits<allocator<_Sp_counted_ptr_inplace<reader_data_t, allocator<reader_data_t>, _S_atomic>>>	allocator_traits<allocator<_Tp>>
__aligned_buffer<reader_data_t>	__aligned_buffer<_Tp>
__aligned_buffer<maybe_t<highlight_result_t>>	__aligned_buffer<_Tp>
__aligned_buffer<maybe_t<autosuggestion_result_t>>	__aligned_buffer<_Tp>
maybe_impl_t<highlight_result_t>	maybe_impl_t<T>
maybe_impl_t<autosuggestion_result_t>	maybe_impl_t<T>
remove_extent<maybe_t<autosuggestion_result_t>>	remove_extent<_Tp>
weak_ptr<maybe_t<autosuggestion_result_t>>	weak_ptr<_Tp>
remove_extent<maybe_t<highlight_result_t>>	remove_extent<_Tp>
weak_ptr<maybe_t<highlight_result_t>>	weak_ptr<_Tp>
__not_alloc_shared_tag<_Sp_alloc_shared_tag<allocator<maybe_t<highlight_result_t>>>>	__not_alloc_shared_tag<_Sp_alloc_shared_tag<_Tp>>
__not_alloc_shared_tag<_Sp_alloc_shared_tag<allocator<maybe_t<autosuggestion_result_t>>>>	__not_alloc_shared_tag<_Sp_alloc_shared_tag<_Tp>>
_Reuse_or_alloc_node	_Reuse_or_alloc_node
_Callable<lambda [] type at line 161456, col. 28, void>	_Callable<_Func, _Res2>
_Callable<lambda [] type at line 159687, col. 39, bool>	_Callable<_Func, _Res2>
_Temporary_value	_Temporary_value
aligned_storage<4UL, 1UL>	aligned_storage<_Len, _Align>
type	type
__normal_iterator<comp_t *, vector<comp_t, allocator<comp_t>>>	__normal_iterator<_Iterator, _Container>
__normal_iterator<const comp_t *, vector<comp_t, allocator<comp_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const comp_t *, vector<comp_t, allocator<comp_t>>>>	reverse_iterator<_Iterator>
reverse_iterator<__normal_iterator<comp_t *, vector<comp_t, allocator<comp_t>>>>	reverse_iterator<_Iterator>
iterator_traits<const shared_ptr<reader_data_t> *>	iterator_traits<const _Tp *>
_Callable<lambda [] type at line 161827, col. 12, highlight_result_t>	_Callable<_Func, _Res2>
_Callable<function<..(..)>, _Tp>	_Callable<_Func, _Res2>
_Callable<lambda [] type at line 161027, col. 12, autosuggestion_result_t>	_Callable<_Func, _Res2>
_Callable<function<..(..)>, _Tp>	_Callable<_Func, _Res2>
__has_esft_base<reader_data_t, void>	__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>
__not_<is_array<reader_data_t>>	__not_<_Pp>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
__enable_shared_from_this<reader_data_t, _S_atomic>	__enable_shared_from_this<_Tp, _Lp>
remove_reference<_Hashtable<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Identity, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<true, true, true>> &>	remove_reference<_Tp &>
remove_reference<shared_ptr<reader_data_t>>	remove_reference<_Tp>
remove_reference<..(*&)(..)>	remove_reference<_Tp &>
remove_reference<const completion_t &>	remove_reference<_Tp &>
remove_reference<readline_cmd_t &>	remove_reference<_Tp &>
remove_reference<lambda [] type at line 148893, col. 28>	remove_reference<_Tp>
remove_reference<lambda [] type at line 148892, col. 25>	remove_reference<_Tp>
remove_reference<lambda [] type at line 148893, col. 28>	remove_reference<_Tp>
remove_reference<lambda [] type at line 148892, col. 25>	remove_reference<_Tp>
__has_esft_base<maybe_t<highlight_result_t>, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<maybe_t<autosuggestion_result_t>, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp2, void>	__has_esft_base<_Yp, <unnamed>>
__has_esft_base<_Yp, __void_t<__esft_base_t<_Yp>>>	__has_esft_base<_Yp, <unnamed>>
struct <unnamed>	struct <unnamed>
conditional<true, is_same<autosuggestion_result_t, autosuggestion_result_t>, is_convertible<autosuggestion_result_t, autosuggestion_result_t>>	conditional<_Cond, _Iftrue, _Iffalse>
conditional<true, is_same<highlight_result_t, highlight_result_t>, is_convertible<highlight_result_t, highlight_result_t>>	conditional<_Cond, _Iftrue, _Iffalse>
aligned_storage<1800UL, 8UL>	aligned_storage<_Len, _Align>
type	type
_Function_handler<..(..), lambda [] type at line 148892, col. 25>	_Function_handler<..(..), _Functor>
remove_reference<lambda [] type at line 148892, col. 25 &>	remove_reference<_Tp &>
_Function_handler<..(..), lambda [] type at line 148893, col. 28>	_Function_handler<..(..), _Functor>
remove_reference<lambda [] type at line 148893, col. 28 &>	remove_reference<_Tp &>
_Function_handler<..(..), lambda [] type at line 148892, col. 25>	_Function_handler<..(..), _Functor>
remove_reference<lambda [] type at line 148892, col. 25 &>	remove_reference<_Tp &>
_Function_handler<..(..), lambda [] type at line 148893, col. 28>	_Function_handler<..(..), _Functor>
remove_reference<lambda [] type at line 148893, col. 28 &>	remove_reference<_Tp &>
move_iterator<edit_t *>	move_iterator<_Iterator>
__is_move_insertable<allocator<edit_t>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<edit_t>	is_move_constructible<_Tp>
__is_move_constructible_impl<edit_t, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<edit_t, edit_t &&>	is_constructible<_Tp, _Args...>
remove_reference<const highlight_spec_t &>	remove_reference<_Tp &>
__iterator_traits<__normal_iterator<const highlight_spec_t *, vector<highlight_spec_t, allocator<highlight_spec_t>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
conditional<true, edit_t &&, edit_t &>	conditional<_Cond, _Iftrue, _Iffalse>
struct <unnamed>	struct <unnamed>
move_iterator<shared_ptr<reader_data_t> *>	move_iterator<_Iterator>
__is_move_insertable<allocator<shared_ptr<reader_data_t>>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<shared_ptr<reader_data_t>>	is_move_constructible<_Tp>
__is_move_constructible_impl<shared_ptr<reader_data_t>, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<shared_ptr<reader_data_t>, shared_ptr<reader_data_t> &&>	is_constructible<_Tp, _Args...>
__is_integer<highlight_spec_t>	__is_integer<_Tp>
__is_pointer<highlight_spec_t>	__is_pointer<_Tp>
remove_reference<allocator<completion_t> &>	remove_reference<_Tp &>
__is_referenceable<shared_ptr<reader_data_t>>	__is_referenceable<_Tp>
conditional<true, shared_ptr<reader_data_t> &&, shared_ptr<reader_data_t> &>	conditional<_Cond, _Iftrue, _Iffalse>
is_reference<edit_t &>	is_reference<_Tp>
__is_arithmetic<highlight_spec_t>	__is_arithmetic<_Tp>
__traitor<__is_arithmetic<highlight_spec_t>, __is_pointer<highlight_spec_t>>	__traitor<_Sp, _Tp>
__is_floating<highlight_spec_t>	__is_floating<_Tp>
__traitor<__is_integer<highlight_spec_t>, __is_floating<highlight_spec_t>>	__traitor<_Sp, _Tp>
__iterator_traits<move_iterator<edit_t *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<edit_t &, edit_t &&>	is_assignable<_Tp, _Up>
remove_reference<allocator<_Hash_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true>> &>	remove_reference<_Tp &>
is_reference<shared_ptr<reader_data_t> &>	is_reference<_Tp>
__iterator_traits<move_iterator<shared_ptr<reader_data_t> *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<shared_ptr<reader_data_t> &, shared_ptr<reader_data_t> &&>	is_assignable<_Tp, _Up>
is_move_assignable<highlight_spec_t>	is_move_assignable<_Tp>
conditional<true, is_move_assignable<highlight_spec_t>, is_copy_assignable<highlight_spec_t>>	conditional<_Cond, _Iftrue, _Iffalse>
remove_reference<edit_t>	remove_reference<_Tp>
__is_move_assignable_impl<highlight_spec_t, true>	__is_move_assignable_impl<_Tp, true>
reverse_iterator<__normal_iterator<const action_t *, vector<action_t, allocator<action_t>>>>	reverse_iterator<_Iterator>
__iterator_traits<__normal_iterator<const action_t *, vector<action_t, allocator<action_t>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
iterator_traits<__normal_iterator<const action_t *, vector<action_t, allocator<action_t>>>>	iterator_traits<_Iterator>
iterator<random_access_iterator_tag, action_t, long, const action_t *, const action_t &>	iterator<_Category, _Tp, _Distance, _Pointer, _Reference>
is_copy_constructible<int>	is_copy_constructible<_Tp>
__is_copy_constructible_impl<int, true>	__is_copy_constructible_impl<_Tp, true>
is_constructible<int, const int &>	is_constructible<_Tp, _Args...>
_List_const_iterator<prompt_cache_entry_t>	_List_const_iterator<_Tp>
_List_iterator<prompt_cache_entry_t>	_List_iterator<_Tp>
relaxed_atomic_t<unsigned int>	relaxed_atomic_t<T>
remove_reference<prompt_cache_entry_t &>	remove_reference<_Tp &>
remove_reference<prompt_cache_entry_t>	remove_reference<_Tp>
remove_reference<list<prompt_cache_entry_t, allocator<prompt_cache_entry_t>> &>	remove_reference<_Tp &>
remove_reference<cursor_t &>	remove_reference<_Tp &>
reverse_iterator<_List_const_iterator<prompt_cache_entry_t>>	reverse_iterator<_Iterator>
reverse_iterator<_List_iterator<prompt_cache_entry_t>>	reverse_iterator<_Iterator>
__allocated_ptr<allocator<_List_node<prompt_cache_entry_t>>>	__allocated_ptr<_Alloc>
__alloc_neq<allocator<_List_node<prompt_cache_entry_t>>, true>	__alloc_neq<_Alloc, <unnamed>>
__iterator_traits<__normal_iterator<line_t *, vector<line_t, allocator<line_t>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
__is_move_iterator<line_t *>	__is_move_iterator<_Tp>
is_assignable<line_t &, line_t &>	is_assignable<_Tp, _Up>
initializer_list<topic_t>	initializer_list<_E>
__invoke_result<..(&)(..), bool>	__invoke_result<_Functor, _ArgTypes...>
__call_is_nothrow<__invoke_result<..(&)(..), bool>, ..(&)(..), bool>	__call_is_nothrow<_Result, _Fn, _Args...>
__invoke_result<..(&)(..)>	__invoke_result<_Functor, _ArgTypes...>
__call_is_nothrow<__invoke_result<..(&)(..)>, ..(&)(..)>	__call_is_nothrow<_Result, _Fn, _Args...>
remove_reference<..(&)(..)>	remove_reference<_Tp &>
remove_reference<..(&)(..)>	remove_reference<_Tp &>
__result_of_impl<false, false, ..(&)(..)>	__result_of_impl<false, false, _Functor, _ArgTypes...>
__result_of_impl<false, false, ..(&)(..), bool>	__result_of_impl<false, false, _Functor, _ArgTypes...>
is_member_object_pointer<..(..)>	is_member_object_pointer<_Tp>
is_member_function_pointer<..(..)>	is_member_function_pointer<_Tp>
is_member_object_pointer<..(..)>	is_member_object_pointer<_Tp>
is_member_function_pointer<..(..)>	is_member_function_pointer<_Tp>
acquired_lock<data_t>	acquired_lock<Data>
acquired_lock<const data_t>	acquired_lock<Data>
remove_reference<termsize_t &>	remove_reference<_Tp &>
is_copy_constructible<termsize_t>	is_copy_constructible<_Tp>
__is_copy_constructible_impl<termsize_t, true>	__is_copy_constructible_impl<_Tp, true>
is_constructible<termsize_t, const termsize_t &>	is_constructible<_Tp, _Args...>
__is_referenceable<termsize_t>	__is_referenceable<_Tp>
duration<signed long, ratio<1L, 1000L>>	duration<_Rep, _Period>
allocator<timer_snapshot_t>	allocator<_Tp>
vector<timer_snapshot_t, allocator<timer_snapshot_t>>	vector<_Tp, _Alloc>
duration<D1, D2>	duration<_Rep, _Period>
allocator_traits<allocator<timer_snapshot_t>>	allocator_traits<allocator<_Tp>>
__alloc_traits<allocator<timer_snapshot_t>, timer_snapshot_t>	__alloc_traits<_Alloc, <unnamed>>
is_same<timer_snapshot_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<timer_snapshot_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<timer_snapshot_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<timer_snapshot_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<timer_snapshot_t *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<timer_snapshot_t *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
_Temporary_value	_Temporary_value
__normal_iterator<timer_snapshot_t *, vector<timer_snapshot_t, allocator<timer_snapshot_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<timer_snapshot_t *, vector<timer_snapshot_t, allocator<timer_snapshot_t>>>>	reverse_iterator<_Iterator>
__normal_iterator<const timer_snapshot_t *, vector<timer_snapshot_t, allocator<timer_snapshot_t>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const timer_snapshot_t *, vector<timer_snapshot_t, allocator<timer_snapshot_t>>>>	reverse_iterator<_Iterator>
_Vector_base<timer_snapshot_t, allocator<timer_snapshot_t>>	_Vector_base<_Tp, _Alloc>
rebind<timer_snapshot_t>	rebind<_Tp>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
_Base_manager<lambda [] type at line 144531, col. 13>	_Base_manager<_Functor>
_Base_manager<lambda [] type at line 144529, col. 27>	_Base_manager<_Functor>
new_allocator<timer_snapshot_t>	new_allocator<_Tp>
integral_constant<long, 1000000L>	integral_constant<_Tp, __v>
iterator_traits<timer_snapshot_t *>	iterator_traits<_Tp *>
_Function_handler<..(..), lambda [] type at line 144531, col. 13>	_Function_handler<..(..), _Functor>
remove_reference<lambda [] type at line 144531, col. 13 &>	remove_reference<_Tp &>
remove_reference<timer_snapshot_t>	remove_reference<_Tp>
_Function_handler<..(..), lambda [] type at line 144529, col. 27>	_Function_handler<..(..), _Functor>
remove_reference<lambda [] type at line 144529, col. 27 &>	remove_reference<_Tp &>
__static_gcd<1000000L, 1000000000L>	__static_gcd<_Pn, _Qn>
_Callable<lambda [] type at line 144531, col. 13, void>	_Callable<_Func, _Res2>
_Callable<lambda [] type at line 144529, col. 27, void>	_Callable<_Func, _Res2>
__duration_cast_impl<duration<signed long, ratio<1L, 1000000L>>, ratio<1L, 1000L>, signed long, true, false>	__duration_cast_impl<_ToDur, _CF, _CR, true, false>
__static_gcd<1000000000L, 1000000L>	__static_gcd<_Pn, _Qn>
move_iterator<timer_snapshot_t *>	move_iterator<_Iterator>
__is_move_insertable<allocator<timer_snapshot_t>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<timer_snapshot_t>	is_move_constructible<_Tp>
__is_move_constructible_impl<timer_snapshot_t, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<timer_snapshot_t, timer_snapshot_t &&>	is_constructible<_Tp, _Args...>
__is_referenceable<timer_snapshot_t>	__is_referenceable<_Tp>
conditional<true, timer_snapshot_t &&, timer_snapshot_t &>	conditional<_Cond, _Iftrue, _Iffalse>
__static_gcd<1000000L, 0L>	__static_gcd<_Pn, 0L>
is_reference<timer_snapshot_t &>	is_reference<_Tp>
__iterator_traits<move_iterator<timer_snapshot_t *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<timer_snapshot_t &, timer_snapshot_t &&>	is_assignable<_Tp, _Up>
remove_reference<timer_snapshot_t &>	remove_reference<_Tp &>
remove_reference<const te_expr *(&)[2]>	remove_reference<_Tp &>
remove_reference<const te_expr *(&)[1]>	remove_reference<_Tp &>
__promote_2<int, double, double, double>	__promote_2<_Tp, _Up, _Tp2, _Up2>
_Iter_comp_val<lambda [] type at line 82061, col. 48>	_Iter_comp_val<_Compare>
remove_reference<lambda [] type at line 82061, col. 48 &>	remove_reference<_Tp &>
iterator_traits<const te_builtin *>	iterator_traits<const _Tp *>
_Vector_base<char, allocator<char>>	_Vector_base<_Tp, _Alloc>
vector<char, allocator<char>>	vector<_Tp, _Alloc>
_Temporary_value	_Temporary_value
__normal_iterator<char *, vector<char, allocator<char>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<char *, vector<char, allocator<char>>>>	reverse_iterator<_Iterator>
__normal_iterator<const char *, vector<char, allocator<char>>>	__normal_iterator<_Iterator, _Container>
reverse_iterator<__normal_iterator<const char *, vector<char, allocator<char>>>>	reverse_iterator<_Iterator>
_Vector_impl	_Vector_impl
_Vector_impl_data	_Vector_impl_data
enable_if<true, char *>	enable_if<true, _Tp>
remove_reference<pipe_or_redir_t &>	remove_reference<_Tp &>
remove_reference<token_type_t>	remove_reference<_Tp>
move_iterator<char *>	move_iterator<_Iterator>
conditional<true, char &&, char &>	conditional<_Cond, _Iftrue, _Iffalse>
remove_reference<char>	remove_reference<_Tp>
remove_reference<pipe_or_redir_t>	remove_reference<_Tp>
is_reference<char &>	is_reference<_Tp>
__is_move_iterator<move_iterator<char *>>	__is_move_iterator<move_iterator<_Iterator>>
__is_move_insertable<allocator<char>>	__is_move_insertable<allocator<_Tp>>
is_move_constructible<char>	is_move_constructible<_Tp>
__is_move_constructible_impl<char, true>	__is_move_constructible_impl<_Tp, true>
is_constructible<char, char &&>	is_constructible<_Tp, _Args...>
is_move_assignable<char>	is_move_assignable<_Tp>
is_copy_assignable<char>	is_copy_assignable<_Tp>
conditional<true, is_move_assignable<char>, is_copy_assignable<char>>	conditional<_Cond, _Iftrue, _Iffalse>
__iterator_traits<move_iterator<char *>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_assignable<char &, char &&>	is_assignable<_Tp, _Up>
__is_move_assignable_impl<char, true>	__is_move_assignable_impl<_Tp, true>
acquired_lock<data_t>	acquired_lock<Data>
enum_iter_t<topic_t>	enum_iter_t<T>
iterator_t	iterator_t
acquired_lock<const data_t>	acquired_lock<Data>
_Sanitize_val<3UL, true>	_Sanitize_val<_Nb, true>
__is_pointer<const unsigned long *>	__is_pointer<_Tp *>
__timepunct_cache<_CharT>	__timepunct_cache<_CharT>
messages<wchar_t>	messages<_CharT>
messages<char>	messages<_CharT>
codecvt_byname<wchar_t, char, __mbstate_t>	codecvt_byname<_InternT, _ExternT, _StateT>
codecvt_byname<char, char, __mbstate_t>	codecvt_byname<_InternT, _ExternT, _StateT>
__codecvt_abstract_base<char32_t, char, __mbstate_t>	__codecvt_abstract_base<_InternT, _ExternT, _StateT>
__codecvt_abstract_base<char16_t, char, __mbstate_t>	__codecvt_abstract_base<_InternT, _ExternT, _StateT>
__codecvt_abstract_base<wchar_t, char, __mbstate_t>	__codecvt_abstract_base<_InternT, _ExternT, _StateT>
__codecvt_abstract_base<char, char, __mbstate_t>	__codecvt_abstract_base<_InternT, _ExternT, _StateT>
codecvt<_InternT, _ExternT, _StateT>	codecvt<_InternT, _ExternT, _StateT>
__codecvt_abstract_base<_InternT, _ExternT, _StateT>	__codecvt_abstract_base<_InternT, _ExternT, _StateT>
time_get<wchar_t, istreambuf_iterator<wchar_t, char_traits<wchar_t>>>	time_get<_CharT, _InIter>
time_put<wchar_t, ostreambuf_iterator<wchar_t, char_traits<wchar_t>>>	time_put<_CharT, _OutIter>
__timepunct<wchar_t>	__timepunct<_CharT>
money_get<wchar_t, istreambuf_iterator<wchar_t, char_traits<wchar_t>>>	money_get<_CharT, _InIter>
money_put<wchar_t, ostreambuf_iterator<wchar_t, char_traits<wchar_t>>>	money_put<_CharT, _OutIter>
moneypunct<wchar_t, false>	moneypunct<_CharT, _Intl>
moneypunct<wchar_t, true>	moneypunct<_CharT, _Intl>
messages_byname<wchar_t>	messages_byname<_CharT>
time_get_byname<wchar_t, istreambuf_iterator<wchar_t, char_traits<wchar_t>>>	time_get_byname<_CharT, _InIter>
time_put_byname<wchar_t, ostreambuf_iterator<wchar_t, char_traits<wchar_t>>>	time_put_byname<_CharT, _OutIter>
moneypunct_byname<wchar_t, true>	moneypunct_byname<_CharT, _Intl>
moneypunct_byname<wchar_t, false>	moneypunct_byname<_CharT, _Intl>
time_get<char, istreambuf_iterator<char, char_traits<char>>>	time_get<_CharT, _InIter>
time_put<char, ostreambuf_iterator<char, char_traits<char>>>	time_put<_CharT, _OutIter>
__timepunct<char>	__timepunct<_CharT>
money_get<char, istreambuf_iterator<char, char_traits<char>>>	money_get<_CharT, _InIter>
money_put<char, ostreambuf_iterator<char, char_traits<char>>>	money_put<_CharT, _OutIter>
moneypunct<char, false>	moneypunct<_CharT, _Intl>
moneypunct<char, true>	moneypunct<_CharT, _Intl>
messages_byname<char>	messages_byname<_CharT>
time_get_byname<char, istreambuf_iterator<char, char_traits<char>>>	time_get_byname<_CharT, _InIter>
time_put_byname<char, ostreambuf_iterator<char, char_traits<char>>>	time_put_byname<_CharT, _OutIter>
moneypunct_byname<char, true>	moneypunct_byname<_CharT, _Intl>
moneypunct_byname<char, false>	moneypunct_byname<_CharT, _Intl>
char_traits<_CharT>	char_traits<_CharT>
allocator<_CharT>	allocator<_Tp>
basic_string<_CharT, char_traits<_CharT>, allocator<_CharT>>	basic_string<_CharT, _Traits, _Alloc>
char_traits<_CharT>	char_traits<_CharT>
allocator<_CharT>	allocator<_Tp>
basic_string<_CharT, char_traits<_CharT>, allocator<_CharT>>	basic_string<_CharT, _Traits, _Alloc>
__timepunct_cache<wchar_t>	__timepunct_cache<_CharT>
__timepunct_cache<char>	__timepunct_cache<_CharT>
char_traits<_CharT>	char_traits<_CharT>
allocator<_CharT>	allocator<_Tp>
basic_string<_CharT, char_traits<_CharT>, allocator<_CharT>>	basic_string<_CharT, _Traits, _Alloc>
char_traits<_CharT>	char_traits<_CharT>
allocator<_CharT>	allocator<_Tp>
basic_string<_CharT, char_traits<_CharT>, allocator<_CharT>>	basic_string<_CharT, _Traits, _Alloc>
__moneypunct_cache<_CharT, _Intl>	__moneypunct_cache<_CharT, _Intl>
char_traits<_CharT>	char_traits<_CharT>
allocator<_CharT>	allocator<_Tp>
basic_string<_CharT, char_traits<_CharT>, allocator<_CharT>>	basic_string<_CharT, _Traits, _Alloc>
messages<_CharT>	messages<_CharT>
char_traits<_CharT>	char_traits<_CharT>
allocator<_CharT>	allocator<_Tp>
basic_string<_CharT, char_traits<_CharT>, allocator<_CharT>>	basic_string<_CharT, _Traits, _Alloc>
moneypunct<_CharT, _Intl>	moneypunct<_CharT, _Intl>
time_get<_CharT, _InIter>	time_get<_CharT, _InIter>
time_put<_CharT, _OutIter>	time_put<_CharT, _OutIter>
char_traits<_Elem>	char_traits<_CharT>
allocator<_Elem>	allocator<_Tp>
codecvt<_CharT, char, _State>	codecvt<_InternT, _ExternT, _StateT>
basic_string<char, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
codecvt<_CharT, char, _State>	codecvt<_InternT, _ExternT, _StateT>
basic_string<char, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
codecvt<_CharT, char, _State>	codecvt<_InternT, _ExternT, _StateT>
basic_string<char, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
codecvt<_CharT, char, _State>	codecvt<_InternT, _ExternT, _StateT>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
codecvt<_CharT, char, _State>	codecvt<_InternT, _ExternT, _StateT>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
codecvt<_CharT, char, _State>	codecvt<_InternT, _ExternT, _StateT>
basic_string<_CharT, _Traits, _Alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_string<char, char_traits<char>, _Byte_alloc>	basic_string<_CharT, _Traits, _Alloc>
char_traits<_Elem>	char_traits<_CharT>
basic_string<_Elem, char_traits<_Elem>, _Wide_alloc>	basic_string<_CharT, _Traits, _Alloc>
basic_streambuf<_Elem, _Tr>	basic_streambuf<_CharT, _Traits>
default_delete<_Codecvt>	default_delete<_Tp>
unique_ptr<_Codecvt, default_delete<_Codecvt>>	unique_ptr<_Tp, _Dp>
default_delete<_Codecvt>	default_delete<_Tp>
unique_ptr<_Codecvt, default_delete<_Codecvt>>	unique_ptr<_Tp, _Dp>
__moneypunct_cache<char, true>	__moneypunct_cache<_CharT, _Intl>
__moneypunct_cache<char, false>	__moneypunct_cache<_CharT, _Intl>
__moneypunct_cache<wchar_t, true>	__moneypunct_cache<_CharT, _Intl>
__moneypunct_cache<wchar_t, false>	__moneypunct_cache<_CharT, _Intl>
__decay_and_strip<unsigned long &>	__decay_and_strip<_Tp>
__decay_and_strip<const unsigned long &>	__decay_and_strip<_Tp>
_Iter_comp_iter<lambda [] type at line 100717, col. 16>	_Iter_comp_iter<_Compare>
_Iter_comp_iter<lambda [] type at line 100717, col. 16>	_Iter_comp_iter<_Compare>
_Iter_comp_iter<lambda [] type at line 100717, col. 16>	_Iter_comp_iter<_Compare>
_Iter_comp_iter<lambda [] type at line 100717, col. 16>	_Iter_comp_iter<_Compare>
remove_reference<lambda [] type at line 100717, col. 16 &>	remove_reference<_Tp &>
_Iter_comp_to_iter<lambda [] type at line 100717, col. 16, __normal_iterator<const wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	_Iter_comp_to_iter<_Compare, _Iterator1>
remove_reference<lambda [] type at line 100717, col. 16 &>	remove_reference<_Tp &>
_Iter_comp_to_iter<lambda [] type at line 100717, col. 16, __normal_iterator<const wchar_t *, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	_Iter_comp_to_iter<_Compare, _Iterator1>
remove_reference<lambda [] type at line 100717, col. 16 &>	remove_reference<_Tp &>
_Iter_comp_to_iter<lambda [] type at line 100717, col. 16, __normal_iterator<const char *, basic_string<char, char_traits<char>, allocator<char>>>>	_Iter_comp_to_iter<_Compare, _Iterator1>
remove_reference<lambda [] type at line 100717, col. 16 &>	remove_reference<_Tp &>
_Iter_comp_to_iter<lambda [] type at line 100717, col. 16, __normal_iterator<const char *, basic_string<char, char_traits<char>, allocator<char>>>>	_Iter_comp_to_iter<_Compare, _Iterator1>
remove_const<unsigned int>	remove_const<_Tp>
remove_cv<unsigned int>	remove_cv<_Tp>
__invoke_result<const hash<file_id_t> &, const file_id_t &>	__invoke_result<_Functor, _ArgTypes...>
__call_is_nothrow<__invoke_result<const hash<file_id_t> &, const file_id_t &>, const hash<file_id_t> &, const file_id_t &>	__call_is_nothrow<_Result, _Fn, _Args...>
allocator<file_id_t>	allocator<_Tp>
equal_to<file_id_t>	equal_to<_Tp>
_Insert_base<file_id_t, file_id_t, allocator<file_id_t>, _Identity, equal_to<file_id_t>, hash<file_id_t>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<false, true, true>>	_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
_Insert<file_id_t, file_id_t, allocator<file_id_t>, _Identity, equal_to<file_id_t>, hash<file_id_t>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<false, true, true>, true>	_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
__is_fast_hash<hash<file_id_t>>	__is_fast_hash<_Hash>
__is_nothrow_invocable<const hash<file_id_t> &, const file_id_t &>	__is_nothrow_invocable<_Fn, _Args...>
__and_<__is_fast_hash<hash<file_id_t>>, __is_nothrow_invocable<const hash<file_id_t> &, const file_id_t &>>	__and_<_B1, _B2>
__not_<__and_<__is_fast_hash<hash<file_id_t>>, __is_nothrow_invocable<const hash<file_id_t> &, const file_id_t &>>>	__not_<_Pp>
_Hash_code_base<file_id_t, file_id_t, _Identity, hash<file_id_t>, _Mod_range_hashing, _Default_ranged_hash, false>	_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Default_ranged_hash, false>
_Hashtable<file_id_t, file_id_t, allocator<file_id_t>, _Identity, equal_to<file_id_t>, hash<file_id_t>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<false, true, true>>	_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>
__hash_code_base_access	__hash_code_base_access
unordered_set<file_id_t, hash<file_id_t>, equal_to<file_id_t>, allocator<file_id_t>>	unordered_set<_Value, _Hash, _Pred, _Alloc>
_Node_iterator<file_id_t, true, false>	_Node_iterator<_Value, __constant_iterators, __cache>
pair<_Node_iterator<file_id_t, true, false>, bool>	pair<_T1, _T2>
_Hashtable_base<file_id_t, file_id_t, _Identity, equal_to<file_id_t>, hash<file_id_t>, _Mod_range_hashing, _Default_ranged_hash, _Hashtable_traits<false, true, true>>	_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>
_PCC<<expression>, _Node_iterator<file_id_t, true, false>, bool>	_PCC<<unnamed>, _T1, _T2>
_PCC<true, _Node_iterator<file_id_t, true, false>, bool>	_PCC<<unnamed>, _T1, _T2>
__pair_base<_Node_iterator<file_id_t, true, false>, bool>	__pair_base<_U1, _U2>
_Local_const_iterator<file_id_t, file_id_t, _Identity, hash<file_id_t>, _Mod_range_hashing, _Default_ranged_hash, true, false>	_Local_const_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>
_Local_iterator<file_id_t, file_id_t, _Identity, hash<file_id_t>, _Mod_range_hashing, _Default_ranged_hash, true, false>	_Local_iterator<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, __constant_iterators, __cache>
_Node_const_iterator<file_id_t, true, false>	_Node_const_iterator<_Value, __constant_iterators, __cache>
allocator_traits<allocator<file_id_t>>	allocator_traits<allocator<_Tp>>
_Hash_node<file_id_t, false>	_Hash_node<_Value, false>
allocator<_Hash_node<file_id_t, false>>	allocator<_Tp>
_ReuseOrAllocNode<allocator<_Hash_node<file_id_t, false>>>	_ReuseOrAllocNode<_NodeAlloc>
_Equality<file_id_t, file_id_t, allocator<file_id_t>, _Identity, equal_to<file_id_t>, hash<file_id_t>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<false, true, true>, true>	_Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
_Rehash_base<file_id_t, file_id_t, allocator<file_id_t>, _Identity, equal_to<file_id_t>, hash<file_id_t>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<false, true, true>, integral_constant<bool, true>>	_Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, true_type>
_Map_base<file_id_t, file_id_t, allocator<file_id_t>, _Identity, equal_to<file_id_t>, hash<file_id_t>, _Mod_range_hashing, _Default_ranged_hash, _Prime_rehash_policy, _Hashtable_traits<false, true, true>, true>	_Map_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits, _Unique_keys>
conditional<true, pair<_Node_iterator<file_id_t, true, false>, bool>, _Node_iterator<file_id_t, true, false>>	conditional<_Cond, _Iftrue, _Iffalse>
_Hashtable_alloc<allocator<_Hash_node<file_id_t, false>>>	_Hashtable_alloc<_NodeAlloc>
__alloc_traits<allocator<_Hash_node<file_id_t, false>>, _Hash_node<file_id_t, false>>	__alloc_traits<_Alloc, <unnamed>>
allocator_traits<allocator<_Hash_node<file_id_t, false>>>	allocator_traits<allocator<_Tp>>
rebind<_Hash_node<file_id_t, false>>	rebind<_Tp1>
__rebind<allocator<file_id_t>, _Hash_node<file_id_t, false>, void>	__rebind<_Tp, _Up, __void_t<other>>
_AllocNode<allocator<_Hash_node<file_id_t, false>>>	_AllocNode<_NodeAlloc>
__rebind<allocator<_Hash_node<file_id_t, false>>, _Hash_node_base *, void>	__rebind<_Tp, _Up, __void_t<other>>
rebind<_Hash_node_base *>	rebind<_Tp1>
new_allocator<file_id_t>	new_allocator<_Tp>
new_allocator<_Hash_node<file_id_t, false>>	new_allocator<_Tp>
conditional<false, __undefined, unsigned int>	conditional<false, _Iftrue, _Iffalse>
_Hash_node_value_base<file_id_t>	_Hash_node_value_base<_Value>
conditional<false, __undefined, _Hash_node<file_id_t, false>>	conditional<false, _Iftrue, _Iffalse>
is_void<_Hash_node<file_id_t, false>>	is_void<_Tp>
_Hashtable_ebo_helper<0, allocator<_Hash_node<file_id_t, false>>, true>	_Hashtable_ebo_helper<_Nm, _Tp, true>
initializer_list<file_id_t>	initializer_list<_E>
remove_reference<const file_id_t &>	remove_reference<_Tp &>
remove_reference<file_id_t &>	remove_reference<_Tp &>
__result_of_impl<false, false, const hash<file_id_t> &, const file_id_t &>	__result_of_impl<false, false, _Functor, _ArgTypes...>
__aligned_buffer<file_id_t>	__aligned_buffer<_Tp>
conditional<true, __is_nothrow_invocable<const hash<file_id_t> &, const file_id_t &>, __is_fast_hash<hash<file_id_t>>>	conditional<_Cond, _Iftrue, _Iffalse>
is_same<_Hash_node<file_id_t, false> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<file_id_t, false> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Hash_node<file_id_t, false> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<file_id_t, false> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
is_same<_Hash_node<file_id_t, false> *, _Ptr>	is_same<<unnamed>, <unnamed>>
__and_<is_same<_Hash_node<file_id_t, false> *, _Ptr>, __not_<is_pointer<_Ptr>>>	__and_<<unnamed>...>
_Equal_helper<file_id_t, file_id_t, _Identity, equal_to<file_id_t>, unsigned long, false>	_Equal_helper<_Key, _Value, _ExtractKey, _Equal, _HashCodeType, false>
_Hashtable_ebo_helper<0, equal_to<file_id_t>, true>	_Hashtable_ebo_helper<_Nm, _Tp, true>
_Hashtable_ebo_helper<1, hash<file_id_t>, true>	_Hashtable_ebo_helper<_Nm, _Tp, true>
_Node_iterator_base<file_id_t, false>	_Node_iterator_base<_Value, _Cache_hash_code>
binary_function<file_id_t, file_id_t, bool>	binary_function<_Arg1, _Arg2, _Result>
reverse_iterator<__normal_iterator<const unsigned int *, vector<unsigned int, allocator<unsigned int>>>>	reverse_iterator<_Iterator>
_Temporary_value	_Temporary_value
is_same<_Node_iterator<file_id_t, true, false>, _U1>	is_same<<unnamed>, <unnamed>>
conditional<true, const file_id_t &, file_id_t &>	conditional<_Cond, _Iftrue, _Iffalse>
conditional<true, const file_id_t *, file_id_t *>	conditional<_Cond, _Iftrue, _Iffalse>
pair<_Node_iterator<file_id_t, true, false>, _Node_iterator<file_id_t, true, false>>	pair<_T1, _T2>
pair<_Node_const_iterator<file_id_t, true, false>, _Node_const_iterator<file_id_t, true, false>>	pair<_T1, _T2>
__enable_if<true, unsigned int *>	__enable_if<true, _Tp>
remove_reference<const unsigned int &>	remove_reference<_Tp &>
__iterator_traits<__normal_iterator<const unsigned int *, vector<unsigned int, allocator<unsigned int>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
is_same<_Node_iterator<file_id_t, true, false>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<file_id_t, true, false>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<file_id_t, true, false>, _U1>	is_same<<unnamed>, <unnamed>>
is_same<_Node_iterator<file_id_t, true, false>, _U1>	is_same<<unnamed>, <unnamed>>
is_member_object_pointer<const hash<file_id_t>>	is_member_object_pointer<_Tp>
is_member_function_pointer<const hash<file_id_t>>	is_member_function_pointer<_Tp>
remove_reference<_Vector_impl &>	remove_reference<_Tp &>
remove_reference<_Node_iterator<file_id_t, true, false>>	remove_reference<_Tp>
__strip_reference_wrapper<_Node_iterator<file_id_t, true, false>>	__strip_reference_wrapper<_Tp>
__decay_and_strip<_Node_iterator<file_id_t, true, false>>	__decay_and_strip<_Tp>
is_copy_assignable<unsigned int>	is_copy_assignable<_Tp>
__iterator_traits<__normal_iterator<unsigned int *, vector<unsigned int, allocator<unsigned int>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
__is_copy_assignable_impl<unsigned int, true>	__is_copy_assignable_impl<_Tp, true>
pointer_traits<_Hash_node<file_id_t, false> *>	pointer_traits<_Tp *>
conditional<true, is_move_assignable<unsigned int>, is_copy_assignable<unsigned int>>	conditional<_Cond, _Iftrue, _Iffalse>
is_assignable<unsigned int &, const unsigned int &>	is_assignable<_Tp, _Up>
owning_lock<unordered_map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	owning_lock<Data>
acquired_lock<unordered_map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	acquired_lock<Data>
back_insert_iterator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>	back_insert_iterator<_Container>
acquired_lock<const unordered_map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	acquired_lock<Data>
_Iter_equals_val<const wchar_t[1]>	_Iter_equals_val<_Value>
initializer_list<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>	initializer_list<_E>
_Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, true>	_Node_const_iterator<_Value, __constant_iterators, __cache>
pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, true>, bool>	pair<_T1, _T2>
_Iter_pred<lambda [] type at line 103031, col. 21>	_Iter_pred<_Predicate>
__is_move_iterator<const wchar_t *>	__is_move_iterator<_Tp>
conditional<true, pair<_Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, true>, bool>, _Node_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, true>>	conditional<_Cond, _Iftrue, _Iffalse>
pair<_Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, true>, _Node_const_iterator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false, true>>	pair<_T1, _T2>
__iterator_traits<back_insert_iterator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, void>	__iterator_traits<_Iterator, __void_t<iterator_category, value_type, difference_type, pointer, reference>>
__is_pointer<back_insert_iterator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	__is_pointer<_Tp>
__are_same<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, void>	__are_same<<unnamed>, <unnamed>>
__are_same<wchar_t, char>	__are_same<<unnamed>, <unnamed>>
remove_reference<lambda [] type at line 103031, col. 21 &>	remove_reference<_Tp &>
_Iter_negate<lambda [] type at line 103031, col. 21>	_Iter_negate<_Predicate>
