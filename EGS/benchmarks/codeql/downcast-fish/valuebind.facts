""
type
swap
operator=
(null)
first
second
0
false
value
__implicit
_Indexes1
_Indexes2
1
default
9
/
__p
__x
__y
__a
__b
base
__value
__n
__i
__t
equal
8
64
63
4
32
31
lower_bound
_IsMove
copy
__copy_m
max
min
__copy_move_b
_Num
true
_BoolType
__c
4932
20
leaf
%Lf
308
328
%f
38
58
sizeof(unsigned long long)
%llu
sizeof(long long)
%lld
sizeof(unsigned long)
%lu
sizeof(long)
%ld
16
%u
sizeof(int)
%d
stold
stod
stof
stoull
10
stoll
stoul
stol
stoi
compare
insert
__size
size
capacity
append
operator()
__s
sizeof(char32_t)
2
sizeof(char16_t)
sizeof(wchar_t)
basic_string::substr
find
get_allocator
data
c_str
replace
basic_string::replace
erase
length
assign
basic_string::assign
push_back
basic_string::append
back
front
at
basic_string::at: __n (which is %zu) >= this->size() (which is %zu)
empty
clear
15
max_size
cend
cbegin
rend
rbegin
end
begin
_S_propagate_on_move_assign
_S_always_equal
__l
__k1
__n1
basic_string::basic_string
_S_select_on_copy
%s: __pos (which is %zu) > this->size() (which is %zu)
deallocate
pointer_to
_M_p
_S_local_capacity
npos
reserve
_M_assign
__d
array
_S_ptr
_S_ref
get
_Int
_Nm
array::at: __n (which is %zu) >= _Nm (which is %zu)
__u
reset
release
get_deleter
_M_ptr
_M_deleter
_M_deallocate
_M_allocate
allocate
_M_start
_M_end_of_storage
_M_get_Tp_allocator
_M_swap_data
_M_impl
9223372036854775807
emplace
_M_finish
destroy
construct
_M_val
emplace_back
__v
__m
...
/opt/src/src/maybe.h
acquire
"filled && ""maybe_t does not have a value"""
maybe_t does not have a value
33
none
filled
storage
/opt/src
v
n
/opt/src/src/common.h
left
right
str
val
save_term_foreground_process_group
STRING_STYLE_SCRIPT
write_loop
128
7
fuzzy_match_none
fuzzy_match_exact
fuzzy_match_prefix
fuzzy_match_case_insensitive
3
fuzzy_match_prefix_case_insensitive
fuzzy_match_substring
5
fuzzy_match_substring_case_insensitive
6
fuzzy_match_subsequence_insertions_only
Unreachabe
361
Unreachable
339
100
contains
-1
fd
close
STATUS_CMD_OK
STATUS_CMD_ERROR
STATUS_INVALID_ARGS
STATUS_CMD_UNKNOWN
127
STATUS_NOT_EXECUTABLE
126
STATUS_EXEC_FAIL
125
STATUS_UNMATCHED_WILDCARD
124
STATUS_ILLEGAL_CMD
123
STATUS_READ_TOO_MUCH
122
STATUS_EXPAND_ERROR
121
ESCAPE_ALL
ESCAPE_NO_QUOTED
ESCAPE_NO_TILDE
UNESCAPE_DEFAULT
UNESCAPE_SPECIAL
UNESCAPE_INCOMPLETE
UNESCAPE_NO_BACKSLASHES
STRING_STYLE_URL
STRING_STYLE_VAR
STRING_STYLE_REGEX
lock
printf
level
r
w
name
c
input
output
style
result
in
count
s
caller
string
file
line
error
/opt/src/src/global_safety.h
load
"value != nullptr && ""Latch variable initialized with null"""
"value_ == nullptr && ""Latch variable initialized multiple times"""
/opt/src/src/ast.h
Type
visit_union_field
visit_optional_field
visit_list_field
visit_node_field
did_visit_fields_of
will_visit_fields_of
"ptr && ""Should not have null ptr"""
Should not have null ptr
885
contents
visit
accept
"n && ""Node should not be null"""
Node should not be null
845
keyword_base
token_base
maybe_newlines
argument
argument_list
redirection
argument_or_redirection
argument_or_redirection_list
variable_assignment
variable_assignment_list
job
job_conjunction
job_list
job_conjunction_continuation
job_conjunction_continuation_list
job_continuation
job_continuation_list
andor_job
andor_job_list
statement
not_statement
block_statement
for_header
while_header
function_header
begin_header
if_statement
if_clause
elseif_clause
elseif_clause_list
else_clause
switch_statement
case_item
case_item_list
decorated_statement
freestanding_argument_list
11
12
13
14
17
18
19
21
22
23
24
25
26
27
28
29
30
34
35
allows_token
Toks
allows_keyword
KWs
"contents && ""Null pointer"""
Null pointer
149
reverse
kw
ListType
i
"ptr && ""Null pointer"""
366
top
arguments
"is_redirection() && ""Is not a redirection"""
Is not a redirection
488
"is_argument() && ""Is not an argument"""
Is not an argument
482
"n && ""Should not push null node"""
Should not push null node
949
next
"n && ""Should not have null node"""
Should not have null node
922
source
start
AstType
"this->type == To::AstType && ""Invalid type conversion"""
Invalid type conversion
247
241
branch
list
range
unsourced
bg
kw_switch
jobs
kw_begin
kw_function
condition
kw_while
kw_in
kw_for
command
kw_else
kw_case
kw_if
pipe
time
Category
parse_flag_none
36
37
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
59
60
61
62
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
203
204
205
207
208
209
211
213
215
220
221
222
223
224
225
227
229
234
236
237
238
239
240
242
243
244
245
246
248
249
250
251
253
254
255
256
261
263
264
265
266
267
269
/opt/src/src/parse_constants.h
270
271
273
/opt/src/src/redirection.h
274
275
276
277
279
280
285
290
291
292
293
/opt/src/src/ast.cpp
! 
"unwinding_ && ""Should have produced an error"""
Should have produced an error
954
parse_token_type_from_tokenizer_token
parse_token_type_t::string
parse_token_type_t::pipe
parse_token_type_t::andand
parse_token_type_t::oror
parse_token_type_t::end
parse_token_type_t::background
parse_token_type_t::redirection
parse_token_type_t::tokenizer_error
parse_token_type_t::comment
Bad token type %d passed to %s
bad token type
parse_token_type_t::invalid
304
parse_flag_include_comments
parse_flag_accept_incomplete_tokens
parse_flag_continue_after_error
cursor
"types.size() > 0 && ""Should not be empty list"""
Should not be empty list
377
 or 
%ls%ls
"kws.size() > 0 && ""Should not be empty list"""
360
keyword '%ls'
keywords 
%ls'%ls'
token
"0 && ""unreachable"""
unreachable
(unknown)
for loop
while loop
function definition
if statement
switch statement
"!visit_stack_.empty() && visit_stack_.back() == &node && ""Node was not at the top of the visit stack"""
Node was not at the top of the visit stack
1222
%*sdid_visit %ls %p
%*swill_visit %ls %p
"ptr && ""Header pointer must never be null"""
Header pointer must never be null
1211
Unable to parse argument or redirection
"contents && ""Statement contents must never be null"""
Statement contents must never be null
1206
"ptr && ""Statement contents must never be null"""
1195
ListNodeType
"!visit_stack_.empty() && ""Visit stack should not be empty"""
Visit stack should not be empty
1138
parse_error_generic
Missing end to balance this %ls
Expected %ls, but found %ls
TokTypes
and
or
parse_error_andor_in_pipeline
The '%ls' command can not be used in a pipeline
Should not have created variable_assignment_t from this token
allocate_populate_block_header
should not have descended into block_header
1047
parse_token_type_t::terminate
Expected a command, but found %ls
parse_error_bare_variable_assignment
"list.contents == nullptr && ""List is not initially empty"""
List is not initially empty
874
"!exhaust_stream && ""exhaust_stream should only be set at top level, and so we should not be "" ""unwinding"""
"list.empty() && ""Should be an empty list"""
exhaust_stream should only be set at top level, and so we should not be unwinding
880
%*sunwinding %ls
Should be an empty list
884
%*schomping range %u-%u
%*sdone unwinding
"contents.size() <= UINT32_MAX && ""Contents size out of bounds"""
"list.contents == nullptr && ""List should still be empty"""
4294967295
Contents size out of bounds
932
List should still be empty
933
%*s%ls size: %lu
Tok
consume_excess_token_generating_error
this->top_type_ == type_t::job_list
711
parse_error_unbalancing_end
'end' outside of a block
parse_error_unbalancing_else
'else' builtin not inside of if block
parse_error_unbalancing_case
'case' builtin not inside of switch block
Token %ls should not have prevented parsing a job list
Expected a string, but found %ls
%ls
End token should never be excess
Terminate token should never be excess
Unexpected excess token type: %ls
"type != parse_token_type_t::terminate && ""Should not attempt to consume terminate token"""
Should not attempt to consume terminate token
681
"tok.type != parse_token_type_t::comment && ""Should not be a comment"""
Should not be a comment
672
"tok.type != parse_token_type_t::terminate && ""Cannot consume terminate token, caller should check status first"""
Cannot consume terminate token, caller should check status first
674
%*sparse error - begin unwinding
SOURCE_OFFSET_INVALID
parse_flag_show_extra_semis
list_type_chomps_semis
Type %ls not handled
list_type_chomps_newlines
debug
Internal parse error from
- this indicates a bug in fish.
parse_flag_leave_unterminated
status
%*smake %ls %p
"(top_type == type_t::job_list || top_type == type_t::freestanding_argument_list) && ""Invalid top type"""
Invalid top type
404
"this->ast_->top_ && ""Should have parsed a node"""
Should have parsed a node
421
-h
--help
token.offset < SOURCE_OFFSET_INVALID
token.length <= SOURCE_OFFSET_INVALID
kMaxLookahead
"idx < kMaxLookahead && ""Trying to look too far ahead"""
Trying to look too far ahead
%s
: '%ls'
keyword: %ls
<;>
<error>
"0 && ""Unexpected keyword in statement decoration"""
Unexpected keyword in statement decoration
 '%ls'
ok
unsourcing
unwinding
: 
__uninit_copy
__a1
forward
vector::_M_realloc_insert
__destroy
_M_head
__r
unknown
long
private
config
/opt/src/_lgtm_build_dir
features
""""""
_Cond
__max_exponent10
__max
__min
_IsArray
_IsFunction
_Len
_Align
_IsInt
_IsEnum
_Sz
_Uint
_IsConst
_IsVol
_S_alignment
prev
_M_pred
_M_comp
dest
3339675911
_M_release
terminate
_S_do_it
select_on_container_copy_construction
_S_propagate_on_copy_assign
_S_on_swap
__uninit_default_n
__uninit_fill_n
_TrivialValueType
_TrivialValueTypes
__ucr
mode
18446744073709551615
__s1
fwprintf
fgetwc
_M_state
1024
__bits
__rem
pthread_create
PTHREAD_RWLOCK_PREFER_READER_NP
PTHREAD_MUTEX_STALLED
PTHREAD_MUTEX_ROBUST
PTHREAD_MUTEX_TIMED_NP
PTHREAD_MUTEX_RECURSIVE_NP
PTHREAD_MUTEX_ERRORCHECK_NP
PTHREAD_MUTEX_NORMAL
__t1
wait
unlock
__gnu_cxx::__concurrence_wait_error
__gnu_cxx::__concurrence_broadcast_error
__gnu_cxx::__concurrence_unlock_error
__gnu_cxx::__concurrence_lock_error
_S_atomic
backward
__f
_M_a
__get
__const_get
_Indexes
eof
sizeof(char_type)
65535
65533
__c1
LC_IDENTIFICATION
LC_MEASUREMENT
LC_TELEPHONE
LC_ADDRESS
LC_NAME
LC_PAPER
LC_ALL
LC_MESSAGES
LC_MONETARY
LC_COLLATE
LC_TIME
LC_NUMERIC
LC_CTYPE
ctype
toupper
_ISupper
_ISlower
512
_ISalpha
_ISdigit
2048
_ISxdigit
4096
_ISspace
8192
_ISprint
16384
_ISgraph
32768
_ISblank
65536
_IScntrl
131072
_ISpunct
262144
_ISalnum
524288
_Intl
select
realpath
random
exit
abs
2147483647
0.0
write
read
stdin
vsnprintf
ctermid
fopen
fclose
__w
linux
2166136261
basic_string::_M_construct null not valid
_M_swap
_M_tail
_Idx
_M_alloc
_M_storage
_Lp
_Lp1
owner_before
sizeof(type_info)
_S_get
_M_unique
_M_get_use_count
_M_add_ref_copy
_M_weak_release
_M_weak_add_ref
_M_pi
_M_weak_assign
_M_refcount
_M_add_ref_lock
_S_need_barriers
~_Sp_counted_ptr_inplace
~_Sp_counted_deleter
_M_del
__use_ebo
__memory_order_mask
4294901760
__memory_order_modifier_mask
memory_order_acq_rel
memory_order_acquire
memory_order_release
memory_order_relaxed
fetch_add
store
__b1
memory_order_seq_cst
__p1
__m1
relaxed
3.6451995318824746025e-4951
0.5
1.084202172485504434e-19
lowest
1.189731495357231765e+4932
3.3621031431120935063e-4932
4.9406564584124654418e-324
2.2204460492503130808e-16
1.7976931348623157081e+308
2.2250738585072013831e-308
1.401298464e-45
1.192092896e-07
3.402823466e+38
1.175494351e-38
32767
2147483648
1073741824
denorm_absent
denorm_present
round_toward_zero
round_to_nearest
has_infinity
has_quiet_NaN
has_denorm
4931
16381
is_signed
643
2136
digits
307
1021
__cache
sizeof(size_t)
_M_cur
_Cache_hash_code
_M_init
_M_incr
_S_equals
_M_hash_code
_M_v
_S_cget
_M_extract
_M_copy_code
_M_store_code
_M_bucket_index
max_load_factor
_M_insert
_M_find_node
_M_allocate_node
_M_insert_unique_node
_M_reset
_M_need_rehash
1.0
_S_growth_factor
_M_bkt_for_elements
_M_next_bkt
__k
_M_valptr
_M_next
_M_nxt
_M_deallocate_buckets
_M_allocate_buckets
sizeof(__bucket_type)
_M_deallocate_nodes
_M_deallocate_node_ptr
_M_deallocate_node
_M_node_allocator
_M_equals
_Unique_keys
__constant_iterators
_IsEmpty
__cache_hash_code
_Constant_iterators
_M_bucket_count
rehash
__rehash_policy
_M_rehash_policy
_M_element_count
1000
search
merge
generate
param
b
a
_M_param
__d1
_S_threshold
_S_chunk_size
;
_S_min_alignment
_M_not_empty_function
_M_init_functor
_M_invoke
_M_manager
function
_M_get_pointer
__destroy_functor
__get_type_info
__get_functor_ptr
__clone_functor
sizeof(_Nocopy_types)
_M_max_align
_M_max_size
__stored_locally
bind
_Ind
_SocketLike
_IsBindExp
_IsPlaceholder
__is_mem_fn
_Den
__n0
__hi1
__lo1
__hi2
__lo2
_Pn
_Qn
den
num
__quot_lo
__quot_hi
__r1
sizeof(intmax_t)
__lo
__hi
now
time_since_epoch
__cast
zero
minutes
seconds
milliseconds
microseconds
_NumIsOne
_DenIsOne
operation_not_permitted
resource_deadlock_would_occur
_Continue
__l1
cannot create std::vector larger than max_size()
_S_word_bit
sizeof(_Bit_type)
_M_end_addr
__isize
_M_get_Bit_allocator
_S_nword
_M_const_cast
vector<bool>::_M_fill_insert
vector::reserve
_CS_PATH
1001
1002
1003
1004
1005
1006
1007
1100
1101
1102
1103
1104
1105
1106
1107
1108
1109
1110
1111
1112
1113
1114
1115
1116
1117
1118
1119
1120
1121
1122
1123
1124
1125
1126
1127
1128
1129
1130
1131
1132
1133
1134
1135
1136
1137
1139
1140
1141
1142
1143
1144
1145
1146
1147
1148
1149
_SC_ARG_MAX
_SC_UIO_MAXIOV
_SC_LEVEL1_ICACHE_SIZE
getgroups
tcsetpgrp
tcgetpgrp
fork
setpgid
lseek
access
dirname
set
argv
ENV_DEFAULT
universal_barrier
flag_read_only
-3
flag_pathvar
-5
flag_export
-2
ENV_OK
ENV_PERM
ENV_SCOPE
ENV_INVALID
ENV_NOT_FOUND
ENV_LOCAL
ENV_GLOBAL
ENV_UNIVERSAL
ENV_EXPORT
ENV_UNEXPORT
ENV_PATHVAR
ENV_UNPATHVAR
ENV_USER
pipestatus
curses_initialized
var
overwrite
key
out
paths
DT_UNKNOWN
DT_DIR
DT_LNK
__ISwupper
__ISwlower
__ISwalpha
__ISwdigit
__ISwxdigit
__ISwspace
__ISwprint
__ISwgraph
__ISwblank
__ISwcntrl
__ISwpunct
__ISwalnum
67108864
268435456
536870912
stat
f
path
/opt/src/src/autoload.h
"amt > 0 && ""cmd was not being autoloaded"""
cmd was not being autoloaded
SIGCHLD
SIGIOT
SIGABRT
SIGIO
SIGWINCH
SIGUSR2
SIGUSR1
SIGPROF
SIGVTALRM
SIGXFSZ
SIGXCPU
SIGTTOU
SIGTTIN
SIGCONT
SIGTSTP
SIGSTOP
SIGURG
SIGALRM
SIGPIPE
SIGSYS
SIGBUS
SIGKILL
SIGTRAP
SIGQUIT
SIGHUP
SIGTERM
SIGSEGV
SIGFPE
SIGILL
SIGINT
SIGPWR
-6
-4
sigaction
cs
signal
sigprocmask
__which
tcsetattr
tcgetattr
pop_front
_S_buffer_size
_M_destroy_nodes
_M_deallocate_map
_M_allocate_map
_M_set_node
_S_initial_map_size
_M_map_size
_M_map
_M_node
_M_last
_M_first
_M_assign_unique
_M_key_compare
_M_header
_M_node_count
_M_insert_range_unique
_M_emplace_hint_unique
_M_emplace_unique
_M_insert_unique
_M_left
key_comp
_S_right
_S_left
_M_parent
~_Rb_tree_node
_M_put_node
_M_get_node
_M_get_Node_allocator
_S_red
_M_right
join
no_timeout
timeout
_Waiter_bit
future
std::future_error: 
_M_future
_M_error
future_already_retrieved
promise_already_satisfied
no_state
broken_promise
__not_ready
__ready
trim
YTyt1
None
Prettiest
max_len
last
sep
screen
complete
history
enabled
description
resolve_chain
"fd >= 0 && ""Invalid fd in add_close"""
Invalid fd in add_close
void dup2_list_t::add_close(int)
"src >= 0 && target >= 0 && ""Invalid fd in add_dup2"""
Invalid fd in add_dup2
void dup2_list_t::add_dup2(int, int)
-
noclob
/opt/src/src/io.h
"pipe_fd_.valid() && ""Pipe is not valid"""
Pipe is not valid
io_pipe_t::io_pipe_t(int, bool, autoclose_fd_t)
"write_fd_.valid() && ""fd is not valid"""
fd is not valid
io_bufferfill_t::io_bufferfill_t(int, autoclose_fd_t, std::shared_ptr<io_buffer_t>)
"!fillthread_running() && ""Cannot access buffer during background fill"""
Cannot access buffer during background fill
337
const separated_buffer_t<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>> &io_buffer_t::buffer() const
complete_background_fillthread
begin_filling
read_once
is_explicitly_separated
elements
limit
"fd >= 0 && ""Invalid fd"""
Invalid fd
bool fd_set_t::contains(int) const
void fd_set_t::add(int)
bufferfill
inferred
explicitly
append_lock_
separation
pwd
stream
event
variable
generic
any
caller_exit
pid
e
sig
"start + length >= start && ""Overflow"""
Overflow
unsigned int source_range_t::end() const
subsequent
PARSER_TEST_ERROR
PARSER_TEST_INCOMPLETE
parse_error_none
parse_error_syntax
parse_error_cmdsubst
parse_error_tokenizer_unterminated_quote
parse_error_tokenizer_unterminated_subshell
parse_error_tokenizer_unterminated_slice
parse_error_tokenizer_unterminated_escape
parse_error_tokenizer_other
parse_flag_show_blank_lines
builtin
exec
kw_and
kw_builtin
kw_command
kw_end
kw_exclam
kw_exec
kw_not
kw_or
kw_time
invalid
background
andand
oror
tokenizer_error
comment
!
case
else
for
if
not
switch
while
parse_token_type_t::error
prefix
move_word_style_punctuation
move_word_style_path_components
move_word_style_whitespace
unterminated_quote
unterminated_subshell
unterminated_slice
unterminated_escape
invalid_redirect
invalid_pipe
invalid_pipe_ampersand
closing_unopened_subshell
illegal_slice
closing_unopened_brace
unterminated_brace
expected_pclose_found_bclose
expected_bclose_found_pclose
redirect
const ast::redirection_t &ast::argument_or_redirection_t::redirection() const
const ast::argument_t &ast::argument_or_redirection_t::argument() const
void ast::traversal_t::push(const ast::node_t *)
ast::traversal_t::traversal_t(const ast::node_t *)
_Nb
all
test
to_ulong
_S_do_sanitize_val
_M_do_to_ulong
_M_is_any
_M_getword
_Base_bitset::_M_getword
_S_maskbit
_Extrabits
_Nw
numeric
collate
global
_S_categories_size
_Cache
monetary
messages
scientific
fixed
oct
hex
dec
internal
unitbuf
uppercase
skipws
showpos
showpoint
showbase
boolalpha
_S_local_word_size
_S_beg
_S_cur
_S_end
_S_app
_S_ate
_S_bin
_S_in
_S_out
_S_trunc
_S_goodbit
_S_badbit
_S_eofbit
_S_failbit
_S_boolalpha
_S_dec
_S_fixed
_S_hex
_S_internal
_S_oct
_S_scientific
_S_showbase
_S_showpoint
_S_showpos
_S_skipws
_S_unitbuf
_S_uppercase
_S_adjustfield
_S_basefield
_S_floatfield
floatfield
basefield
adjustfield
lower
upper
_S_izero
_S_iend
_S_odigits
_S_odigits_end
_S_oudigits
_S_oudigits_end
_S_oend
init
sigchld
sighupint
internal_exit
COUNT
sizeof(topic_set_raw_t)
/opt/src/src/proc.h
proc_wait_any
job_reap
null
 ...
argv != nullptr
340
const wchar_t *process_t::argv(unsigned long) const
"exited() && ""Process is not exited"""
Process is not exited
proc_status_t internal_proc_t::get_status() const
"normal_exited() && ""Process is not normal exited"""
Process is not normal exited
int proc_status_t::exit_code() const
65280
"signal_exited() && ""Process is not signal exited"""
Process is not signal exited
int proc_status_t::signal_code() const
continued
stopped
zerocode
not_interactive
implied
explicit_
INVALID_PID
interactive
external
block_node
group
exec_subshell_for_expand
apply_exit_status
/opt/src/src/lru.h
entry_was_evicted
mouth.prev != &mouth
node != &mouth && node != nullptr && node->key != nullptr
iter != this->node_map.end()
node != &mouth
left_len > 0 && right_len > 0
_M_transfer
_M_dec_size
_M_inc_size
_M_get_size
_M_unhook
_M_hook
_M_prev
_M_size
_M_clear
/opt/src/src/expand.h
"status != 0 && ""status cannot be 0 for an error result"""
status cannot be 0 for an error result
static expand_result_t expand_result_t::make_error(int)
cancel
wildcard_no_match
HOME_DIRECTORY
64976
PROCESS_EXPAND_SELF
64977
VARIABLE_EXPAND
64978
VARIABLE_EXPAND_SINGLE
64979
BRACE_BEGIN
64980
BRACE_END
64981
BRACE_SEP
64982
BRACE_SPACE
64983
INTERNAL_SEPARATOR
64984
VARIABLE_EXPAND_EMPTY
64985
EXPAND_SENTINEL
64986
skip_cmdsubst
skip_variables
skip_wildcards
for_completions
executables_only
directories_only
no_descriptions
skip_jobs
skip_home_directories
fuzzy_match
no_fuzzy_directories
special_for_cd
special_for_cd_autosuggestion
special_for_command
eval_node
control_flow
cancelled
failglob
nullglob
block
current_filename
eval
principal_parser
is_function
switch_block
while_block
for_block
if_block
normals
breaks
continues
function_call
function_call_no_shadow
subst
breakpoint
296
297
299
302
303
305
310
311
312
314
316
317
319
321
324
327
329
334
336
338
341
342
344
346
347
350
351
353
354
356
358
359
370
372
376
378
379
382
384
386
389
394
397
400
403
406
407
/opt/src/src/autoload.cpp
source 
"ins.second && ""Known files cache should not have contained this cmd"""
"ins && ""Misses cache should not have contained this cmd"""
Known files cache should not have contained this cmd
maybe_t<autoloadable_file_t> autoload_file_cache_t::check(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, bool)
Misses cache should not have contained this cmd
.fish
kAutoloadStalenessInterval
3600
1000000000000000000
1000000000000000
1000000000000
1000000000
1000000
_Is
To *ast::node_t::as() [with To = ast::freestanding_argument_list_t]
To *ast::node_t::as() [with To = ast::decorated_statement_t]
To *ast::node_t::as() [with To = ast::case_item_list_t]
To *ast::node_t::as() [with To = ast::case_item_t]
To *ast::node_t::as() [with To = ast::switch_statement_t]
To *ast::node_t::as() [with To = ast::else_clause_t]
To *ast::node_t::as() [with To = ast::elseif_clause_list_t]
To *ast::node_t::as() [with To = ast::elseif_clause_t]
To *ast::node_t::as() [with To = ast::if_clause_t]
To *ast::node_t::as() [with To = ast::if_statement_t]
To *ast::node_t::as() [with To = ast::begin_header_t]
To *ast::node_t::as() [with To = ast::function_header_t]
To *ast::node_t::as() [with To = ast::while_header_t]
To *ast::node_t::as() [with To = ast::for_header_t]
To *ast::node_t::as() [with To = ast::block_statement_t]
To *ast::node_t::as() [with To = ast::not_statement_t]
To *ast::node_t::as() [with To = ast::statement_t]
To *ast::node_t::as() [with To = ast::andor_job_list_t]
To *ast::node_t::as() [with To = ast::andor_job_t]
To *ast::node_t::as() [with To = ast::job_continuation_list_t]
To *ast::node_t::as() [with To = ast::job_continuation_t]
To *ast::node_t::as() [with To = ast::job_conjunction_continuation_list_t]
To *ast::node_t::as() [with To = ast::job_conjunction_continuation_t]
To *ast::node_t::as() [with To = ast::job_list_t]
To *ast::node_t::as() [with To = ast::job_conjunction_t]
To *ast::node_t::as() [with To = ast::job_t]
To *ast::node_t::as() [with To = ast::variable_assignment_list_t]
To *ast::node_t::as() [with To = ast::variable_assignment_t]
To *ast::node_t::as() [with To = ast::argument_or_redirection_list_t]
To *ast::node_t::as() [with To = ast::argument_or_redirection_t]
To *ast::node_t::as() [with To = ast::argument_list_t]
To *ast::node_t::as() [with To = ast::maybe_newlines_t]
To *ast::node_t::as() [with To = ast::token_base_t]
To *ast::node_t::as() [with To = ast::keyword_base_t]
To *ast::node_t::as() [with To = ast::argument_t]
To *ast::node_t::as() [with To = ast::redirection_t]
const To *ast::node_t::as() const [with To = ast::freestanding_argument_list_t]
const To *ast::node_t::as() const [with To = ast::decorated_statement_t]
const To *ast::node_t::as() const [with To = ast::case_item_list_t]
const To *ast::node_t::as() const [with To = ast::case_item_t]
const To *ast::node_t::as() const [with To = ast::switch_statement_t]
const To *ast::node_t::as() const [with To = ast::else_clause_t]
const To *ast::node_t::as() const [with To = ast::elseif_clause_list_t]
const To *ast::node_t::as() const [with To = ast::elseif_clause_t]
const To *ast::node_t::as() const [with To = ast::if_clause_t]
const To *ast::node_t::as() const [with To = ast::if_statement_t]
const To *ast::node_t::as() const [with To = ast::begin_header_t]
const To *ast::node_t::as() const [with To = ast::function_header_t]
const To *ast::node_t::as() const [with To = ast::while_header_t]
const To *ast::node_t::as() const [with To = ast::for_header_t]
const To *ast::node_t::as() const [with To = ast::block_statement_t]
const To *ast::node_t::as() const [with To = ast::not_statement_t]
const To *ast::node_t::as() const [with To = ast::statement_t]
const To *ast::node_t::as() const [with To = ast::andor_job_list_t]
const To *ast::node_t::as() const [with To = ast::andor_job_t]
const To *ast::node_t::as() const [with To = ast::job_continuation_list_t]
const To *ast::node_t::as() const [with To = ast::job_continuation_t]
const To *ast::node_t::as() const [with To = ast::job_conjunction_continuation_list_t]
const To *ast::node_t::as() const [with To = ast::job_conjunction_continuation_t]
const To *ast::node_t::as() const [with To = ast::job_list_t]
const To *ast::node_t::as() const [with To = ast::job_conjunction_t]
const To *ast::node_t::as() const [with To = ast::job_t]
const To *ast::node_t::as() const [with To = ast::variable_assignment_list_t]
const To *ast::node_t::as() const [with To = ast::variable_assignment_t]
const To *ast::node_t::as() const [with To = ast::argument_or_redirection_list_t]
const To *ast::node_t::as() const [with To = ast::argument_or_redirection_t]
const To *ast::node_t::as() const [with To = ast::redirection_t]
const To *ast::node_t::as() const [with To = ast::argument_list_t]
const To *ast::node_t::as() const [with To = ast::argument_t]
const To *ast::node_t::as() const [with To = ast::maybe_newlines_t]
const To *ast::node_t::as() const [with To = ast::token_base_t]
const To *ast::node_t::as() const [with To = ast::keyword_base_t]
const ast::node_t *ast::union_ptr_t<Nodes...>::get() const [with Nodes = ast::argument_t; Nodes = ast::redirection_t]
T maybe_detail::maybe_impl_t<T>::acquire() [with T = std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>]
void lru_cache_t<Derived, Contents>::promote_node(lru_cache_t<Derived, Contents>::lru_node_t *) [with Derived = autoload_file_cache_t::misses_lru_cache_t; Contents = std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<signed long, std::ratio<1L, 1000000000L>>>]
void lru_cache_t<Derived, Contents>::evict_node(lru_cache_t<Derived, Contents>::lru_node_t *) [with Derived = autoload_file_cache_t::misses_lru_cache_t; Contents = std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<signed long, std::ratio<1L, 1000000000L>>>]
void lru_cache_t<Derived, Contents>::evict_last_node() [with Derived = autoload_file_cache_t::misses_lru_cache_t; Contents = std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<signed long, std::ratio<1L, 1000000000L>>>]
T &maybe_detail::maybe_impl_t<T>::value() [with T = autoloadable_file_t]
T &maybe_detail::maybe_impl_t<T>::value() [with T = env_var_t]
const T &maybe_detail::maybe_impl_t<T>::value() const [with T = int]
T &maybe_detail::maybe_impl_t<T>::value() [with T = source_range_t]
T &maybe_detail::maybe_impl_t<T>::value() [with T = std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>]
const ContentsNode *ast::list_t<ListType, ContentsNode>::contents_ptr_t::get() const [with ast::type_t ListType = ast::type_t::case_item_list; ContentsNode = ast::case_item_t]
const ContentsNode *ast::list_t<ListType, ContentsNode>::contents_ptr_t::get() const [with ast::type_t ListType = ast::type_t::elseif_clause_list; ContentsNode = ast::elseif_clause_t]
const ContentsNode *ast::list_t<ListType, ContentsNode>::contents_ptr_t::get() const [with ast::type_t ListType = ast::type_t::andor_job_list; ContentsNode = ast::andor_job_t]
const ContentsNode *ast::list_t<ListType, ContentsNode>::contents_ptr_t::get() const [with ast::type_t ListType = ast::type_t::job_continuation_list; ContentsNode = ast::job_continuation_t]
const ContentsNode *ast::list_t<ListType, ContentsNode>::contents_ptr_t::get() const [with ast::type_t ListType = ast::type_t::job_conjunction_continuation_list; ContentsNode = ast::job_conjunction_continuation_t]
const ContentsNode *ast::list_t<ListType, ContentsNode>::contents_ptr_t::get() const [with ast::type_t ListType = ast::type_t::job_list; ContentsNode = ast::job_conjunction_t]
const ContentsNode *ast::list_t<ListType, ContentsNode>::contents_ptr_t::get() const [with ast::type_t ListType = ast::type_t::variable_assignment_list; ContentsNode = ast::variable_assignment_t]
const ContentsNode *ast::list_t<ListType, ContentsNode>::contents_ptr_t::get() const [with ast::type_t ListType = ast::type_t::argument_or_redirection_list; ContentsNode = ast::argument_or_redirection_t]
const ContentsNode *ast::list_t<ListType, ContentsNode>::contents_ptr_t::get() const [with ast::type_t ListType = ast::type_t::argument_list; ContentsNode = ast::argument_t]
void ast::node_visitation_t<NodeVisitor>::visit_union_field(ast::union_ptr_t<Types...> &) [with Types = ast::not_statement_t; Types = ast::block_statement_t; Types = ast::if_statement_t; Types = ast::switch_statement_t; Types = ast::decorated_statement_t; NodeVisitor = ast::traversal_t]
void ast::node_visitation_t<NodeVisitor>::visit_union_field(ast::union_ptr_t<Types...> &) [with Types = ast::for_header_t; Types = ast::while_header_t; Types = ast::function_header_t; Types = ast::begin_header_t; NodeVisitor = ast::traversal_t]
void ast::node_visitation_t<NodeVisitor>::visit_union_field(ast::union_ptr_t<Types...> &) [with Types = ast::argument_t; Types = ast::redirection_t; NodeVisitor = ast::traversal_t]
void ast::node_visitation_t<NodeVisitor>::accept(const ast::node_t *) [with NodeVisitor = ast::traversal_t]
index
basename
/opt/src/src/input_common.h
readch
"type != char_event_type_t::charc && type != char_event_type_t::readline && ""Cannot create a char event with this constructor"""
Cannot create a char event with this constructor
"type == char_event_type_t::readline && ""Not a readline type"""
Not a readline type
"type == char_event_type_t::charc && ""Not a char type"""
Not a char type
R_END_INPUT_FUNCTIONS
normal
notfirst
charc
readline
check_exit
beginning_of_line
end_of_line
forward_char
backward_char
forward_word
backward_word
forward_bigword
backward_bigword
history_search_backward
history_search_forward
history_prefix_search_backward
history_prefix_search_forward
delete_char
backward_delete_char
kill_line
yank
yank_pop
complete_and_search
pager_toggle_search
beginning_of_history
end_of_history
backward_kill_line
kill_whole_line
kill_word
kill_bigword
backward_kill_word
backward_kill_path_component
backward_kill_bigword
history_token_search_backward
history_token_search_forward
self_insert
self_insert_notfirst
transpose_chars
transpose_words
upcase_word
downcase_word
capitalize_word
togglecase_char
togglecase_selection
execute
beginning_of_buffer
end_of_buffer
repaint_mode
repaint
force_repaint
up_line
down_line
suppress_autosuggestion
accept_autosuggestion
begin_selection
swap_selection_start_stop
end_selection
kill_selection
forward_jump
backward_jump
forward_jump_till
backward_jump_till
func_and
expand_abbr
delete_or_exit
cancel_commandline
undo
redo
repeat_jump
reverse_repeat_jump
input_terminfo_get_sequence
init_input
user
preset
builtin_complete
builtin_source
builtin_wait
option_type_args_only
option_type_short
option_type_single_long
option_type_double_long
COMPLETE_NO_SPACE
COMPLETE_REPLACES_TOKEN
COMPLETE_AUTO_SPACE
COMPLETE_DONT_ESCAPE
COMPLETE_DONT_ESCAPE_TILDES
COMPLETE_DONT_SORT
COMPLETE_DUPLICATES_ARGUMENT
autosuggestion
descriptions
match
completion
quote
flag_reverse
flag_dim
flag_italics
flag_underline
flag_bold
type_named
type_rgb
type_none
type_reset
type_normal
black
white
sizeof(rgb_color_t)
highlight
is_potential_path
autosuggest_validate_from_history
PATH_REQUIRE_DIR
PATH_EXPAND_TILDE
PATH_FOR_CD
statement_terminator
search_match
operat
escape
selection
pager_progress
pager_background
pager_prefix
pager_completion
pager_description
pager_secondary_background
pager_secondary_prefix
pager_secondary_completion
pager_secondary_description
pager_selected_background
pager_selected_prefix
pager_selected_completion
pager_selected_description
fg
reader_get_history
reader_get_buffer
prompt
nchars
REQUIRE_ORDER
PERMUTE
RETURN_IN_ORDER
woptarg
long_options
exact
411
415
420
422
423
425
429
434
436
438
440
442
445
447
448
450
451
452
454
455
458
460
466
467
469
472
475
476
477
479
/opt/src/src/builtin.cpp
list != nullptr
void builtin_get_names(std::vector<completion_t, std::allocator<completion_t>> *)
)
Unknown builtin '%ls'
"(i == 0 || std::wcscmp(builtin_datas[i - 1].name, name) < 0) && ""builtins are not sorted alphabetically"""
builtins are not sorted alphabetically
void builtin_init()
break
__fish_print_help %ls 
unexpected retval from wgetopt_long
argv[argc] == nullptr
int builtin_count_args(const wchar_t *const *)
.
Evaluate contents of file
:
Return a successful result
[
Test a condition
_
Translate a string
Execute command if previous command succeeded
argparse
Parse options in fish script
Create a block of code
Send job to background
Handle fish key bindings
Temporarily block delivery of events
Stop the innermost loop
Temporarily halt execution of a script and launch an interactive debug prompt
Run a builtin command instead of a function
Conditionally execute a block of commands
cd
Change working directory
Run a program instead of a function or builtin
commandline
Set or get the commandline
Edit command specific completions
Search for a specified string in a list
continue
Skip the rest of the current lap of the innermost loop
Count the number of arguments
disown
Remove job from job list
echo
Print arguments
Evaluate block if condition is false
emit
Emit an event
End a block of commands
Evaluate a string as a statement
Run command in current process
Exit the shell
Return an unsuccessful result
Send job to foreground
Perform a set of commands multiple times
Define a new function
functions
List or remove functions
History of commands executed by user
Evaluate block if condition is true
Print currently running jobs
math
Evaluate math expressions
Negate exit status of job
Execute command if previous command failed
Prints formatted text
Print the working directory
Generate random number
Read a line of input into variables
Convert path to absolute path without symlinks
return
Stop the currently evaluated function
Handle environment variables
set_color
Set the terminal color
Return status information about fish
Manipulate strings
Measure how long a command or block takes
ulimit
Set or get the shells resource usage limits
Wait for background processes completed
Perform a command multiple times
help
+:h
/opt/src/src/builtin_argparse.cpp
+:
-:
!long_options.empty() && long_options.back().name == nullptr
615
int argparse_parse_args(argparse_cmd_opts_t &, const std::vector<std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>, std::allocator<std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>>> &, parser_t &, io_streams_t &)
found != opts.options.end()
590
int argparse_parse_flags(parser_t &, argparse_cmd_opts_t &, const wchar_t *, const woption *, const wchar_t *, int, wchar_t **, int *, io_streams_t &)
!woptarg
515
int handle_flag(parser_t &, const argparse_cmd_opts_t &, option_spec_t *, int, const wchar_t *, io_streams_t &)
--
538
496
int validate_and_store_implicit_int(parser_t &, const argparse_cmd_opts_t &, const wchar_t *, wgetopter_t &, int, io_streams_t &)
_argparse_cmd
::
"ins.second && ""Should have inserted long flag"""
Should have inserted long flag
bool parse_option_spec(argparse_cmd_opts_t &, const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, io_streams_t &)
_validate_int
stop-nonopt
ignore-unknown
exclusive
min-args
max-args
+:hn:six:N:X:
_flag_
/opt/src/src/builtin_bg.cpp
j != nullptr
int send_to_bg(parser_t &, io_streams_t &, job_t *)
/opt/src/src/builtin_bind.cpp
BIND_ERASE
BIND_FUNCTION_NAMES
BIND_KEY_NAMES
function-names
key-names
list-modes
sets-mode
silent
:aehkKfM:Lm:s
 --preset
 -M 
 -m 
 -k %ls
 %ls
--preset and --user can not be used together when inserting bindings.
names
BIND_INSERT
/opt/src/src/builtin_block.cpp
UNSET
LOCAL
GLOBAL
unexpected scope
local
:eghl
/opt/src/src/builtin_builtin.cpp
--query and --names are mutually exclusive
query
:hnq
F_OWNER_PGRP
1036
1031
fcntl
4194304
open
umask
HOME
success
61440
PWD
const T &maybe_detail::maybe_impl_t<T>::value() const [with T = env_var_t]
/opt/src/src/builtin_command.cpp
quiet
:ahqsv
/opt/src/src/builtin_commandline.cpp
tokenize
APPEND_MODE
STRING_MODE
INSERT_MODE
REPLACE_MODE
TOKEN_MODE
JOB_MODE
PROCESS_MODE
%ls: Unknown input function '%ls'
--cut-at-cursor and --tokenize can not be used when setting the commandline
unexpected buffer_part
current-buffer
current-job
current-process
current-selection
current-token
cut-at-cursor
search-mode
paging-mode
:abijpctforhI:CLSsP
unexpected append_mode
T &maybe_detail::maybe_impl_t<T>::value() [with T = tok_t]
T &maybe_detail::maybe_impl_t<T>::value() [with T = readline_cmd_t]
bitset::set
%s: __position (which is %zu) >= _Nb (which is %zu)
/opt/src/src/builtin_complete.cpp
'--no-files' and '--force-files'
%ls: Condition '%ls' contained a syntax error
!parser.libdata().builtin_complete_current_commandline
int builtin_complete(parser_t &, io_streams_t &, wchar_t **)
 
no-files
force-files
require-parameter
short-option
long-option
old-option
unauthoritative
authoritative
wraps
do-complete
keep-order
:a:c:p:s:l:o:d:fFrxeuAn:C::w:hk
/opt/src/src/builtin_contains.cpp
+:hi
T &maybe_detail::maybe_impl_t<T>::value() [with T = int]
/opt/src/src/builtin_echo.cpp
62976
base == 8 || base == 16
unsigned int builtin_echo_digit(wchar_t, unsigned int)
+:Eens
/opt/src/src/builtin_exit.cpp
:h
vector::_M_range_insert
function_load
function_exists
function_set_desc
function_add
filename
/opt/src/src/builtin_function.cpp
"source && ""Missing source in builtin_function"""
Missing source in builtin_function
int builtin_function(parser_t &, io_streams_t &, const std::vector<std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>, std::allocator<std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>>> &, const std::shared_ptr<const parsed_source_t> &, const ast::block_statement_t &)
%ls: Unexpected positional argument '%ls'
%ls: Expected function name
%ls: Illegal function name '%ls'
%ls: The name '%ls' is reserved, and cannot be used as a function name
%ls: Unknown signal '%ls'
%ls: Cannot find calling job for event handler
%self
%ls: Invalid process id '%ls'
on-signal
on-job-exit
on-process-exit
on-variable
on-event
argument-names
no-scope-shadowing
inherit-variable
-:a:d:e:hj:p:s:v:w:SV:
DEFAULT_WIDTH
DEFAULT_HEIGHT
/opt/src/src/builtin_functions.cpp
, 
n/a
autoloaded
not-autoloaded
scope-shadowing
verbose
"!name.empty() && ""Empty name"""
Empty name
std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> functions_def(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &)
function 
 --wraps=
 --description 
"props && ""Should have function properties"""
Should have function properties
 --no-scope-shadowing
 --on-signal %ls
 --on-variable %ls
 --on-process-exit %d
 --on-job-exit %d
 --on-job-exit caller
 --on-event %ls
unexpected next->type
 --argument
 -- 
handlers
details
handlers-type
:Ht:Dacd:ehnqv
const T &maybe_detail::maybe_impl_t<T>::value() const [with T = event_type_t]
T &maybe_detail::maybe_impl_t<T>::value() [with T = event_type_t]
all_paths_are_valid
valid_paths
history_search_no_dedup
history_search_ignore_case
save
contains_glob
prefix_glob
match_everything
when
/opt/src/src/builtin_history.cpp
hist_enum_map_len
HIST_UNDEF
HIST_SEARCH
HIST_DELETE
HIST_CLEAR
HIST_MERGE
HIST_SAVE
Unexpected HIST_UNDEF seen
# %c%n
you cannot do both '%ls' and '%ls' in the same invocation
show-time
case-sensitive
delete
:CRcehmn:pt::z
/opt/src/src/builtin_jobs.cpp
JOBS_DEFAULT
JOBS_PRINT_PID
JOBS_PRINT_NOTHING
JOBS_PRINT_COMMAND
JOBS_PRINT_GROUP
%ls: '%ls' is not a valid job id
:cghlpq
running
unexpected mode
1000000.0
round
tanh
tan
sqrt
sinh
sin
pow
log10
log
floor
exp
cosh
cos
ceil
atan2
atan
asin
acos
__
sub
TE_ERROR_NONE
TE_ERROR_UNKNOWN_FUNCTION
TE_ERROR_MISSING_CLOSING_PAREN
TE_ERROR_MISSING_OPENING_PAREN
TE_ERROR_TOO_FEW_ARGS
TE_ERROR_TOO_MANY_ARGS
TE_ERROR_MISSING_OPERATOR
TE_ERROR_UNEXPECTED_TOKEN
TE_ERROR_LOGICAL_OPERATOR
TE_ERROR_UNKNOWN
/opt/src/src/builtin_math.cpp
C
Result is infinite
Result is not a number
kMaximumContiguousInteger
Result magnitude is too large
^
%.*f
0123456789
NO ERROR?!?
Error has no position
Unknown function
Missing closing parenthesis
Missing opening parenthesis
Too few arguments
Too many arguments
Missing operator
Unexpected token
Logical operations are not supported, use `test` instead
Expression is bogus
Unknown error
scale
+:hs:
/opt/src/src/builtin_printf.cpp
missing hexadecimal number in escape
"""\abcefnrtv"
Missing hexadecimal number in Unicode escape
1114111
Unicode character out of range: \%c%0*x
aAcdeEfFgGiosuxX
aAceEosxX
cdisu
invalid field width: %ls
invalid precision: %ls
%.*ls: invalid conversion specification
ll
L
l
unexpected opt
572
%ls: %ls
Number out of range
%ls: %s
%ls: expected a numeric value
%ls: value not completely converted
/opt/src/src/builtin_pwd.cpp
%ls: realpath failed:
logical
physical
LPh
__urngmin
__urngmax
__urngrange
__uerngrange
__w1
__u1
__f1
__calc
__big_enough
__schrage_ok
_M_saved
_M_saved_available
default_seed
state_size
2341178251
623
1664525
1566083941
__k0
choice
16807
48271
624
2567483615
2636928640
4022730752
1812433253
13043109905998158313
6148914691236517205
8202884508482404352
18444473444759240704
6364136223846793005
/opt/src/src/builtin_read.cpp
splits.size() <= static_cast<size_t>(vars_left())
IFS
chars
620
int builtin_read(parser_t &, io_streams_t &, wchar_t **)
split
-p
-P
--delimiter
--line
-z
echo 
"set_color green; echo -n read; set_color normal; echo -n ""> """
--delimiter and --tokenize can not be used together
--line and --tokenize can not be used together
bytes_consumed <= bytes_read
int read_in_chunks(int, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, bool)
fish_read
shell
delimiter
export
prompt-str
right-prompt
unexport
universal
:ac:d:ghiLlm:n:p:sStuxzP:UR:LB
/opt/src/src/builtin_return.cpp
vector::_M_default_append
/opt/src/src/builtin_set.cpp
%ls: Cannot use --append or --prepend when assigning to a slice
--erase
invalid scope
exported
unexported
 a path variable
⋯
527
int builtin_set_query(const wchar_t *, set_cmd_opts_t &, int, wchar_t **, parser_t &, io_streams_t &)
unexpected vars.set() ret val
opt_path
opt_unpath
prepend
show
PATH
CDPATH
unpath
+:LSUaeghlnpqux
filter
LINES
exit_italics_mode
enter_italics_mode
exit_underline_mode
exit_attribute_mode
enter_underline_mode
enter_standout_mode
enter_reverse_mode
enter_dim_mode
enter_bold_mode
clr_eos
/opt/src/src/output.h
stdoutput
"bufferCount_ > 0 && ""bufferCount_ underflow"""
bufferCount_ underflow
void outputter_t::endBuffering()
"bufferCount_ > 0 && ""bufferCount_ overflow"""
bufferCount_ overflow
void outputter_t::beginBuffering()
color_support_term256
color_support_term24bit
/opt/src/src/builtin_set_color.cpp
int builtin_set_color(parser_t &, io_streams_t &, wchar_t **)
bold
underline
italics
dim
fgcolors.empty() || !fg.is_none()
tparm(const_cast<char *>(enter_bold_mode))
tparm(const_cast<char *>(exit_attribute_mode))
version
print-colors
:b:hvoidrcu
/opt/src/src/builtin_source.cpp
"fd >= 0 && ""Should have a valid fd"""
Should have a valid fd
int builtin_source(parser_t &, io_streams_t &, wchar_t **)
<stdin>
/opt/src/src/future_feature_flags.h
fish_features
"f >= 0 && f < flag_count && ""Invalid flag"""
Invalid flag
void features_t::set(features_t::flag_t, bool)
flag_count
bool features_t::test(features_t::flag_t) const
stderr_nocaret
qmark_noglob
string_replace_backslash
/opt/src/src/builtin_status.cpp
STATUS_UNDEF
"opts.new_job_control_mode && ""Should have a new mode"""
Only on interactive jobs
Never
Always
STATUS_SET_JOB_CONTROL
Should have a new mode
int builtin_status(parser_t &, io_streams_t &, wchar_t **)
STATUS_FEATURES
STATUS_TEST_FEATURE
TEST_FEATURE_NOT_RECOGNIZED
TEST_FEATURE_ON
TEST_FEATURE_OFF
STATUS_BASENAME
STATUS_DIRNAME
STATUS_FILENAME
Standard input
STATUS_FUNCTION
Not a function
STATUS_LINE_NUMBER
STATUS_IS_INTERACTIVE
STATUS_IS_COMMAND_SUB
STATUS_IS_BLOCK
STATUS_IS_BREAKPOINT
STATUS_IS_LOGIN
STATUS_IS_FULL_JOB_CTRL
STATUS_IS_INTERACTIVE_JOB_CTRL
STATUS_IS_NO_JOB_CTRL
STATUS_STACK_TRACE
STATUS_CURRENT_CMD
STATUS_FISH_PATH
fish
on
off
full
current-filename
current-line-number
fish-path
is-block
is-command-substitution
is-full-job-control
is-interactive
is-interactive-job-control
is-login
is-no-job-control
job-control
line-number
print-stack-trace
:L:cbilfnhj:t
current-basename
current-command
current-dirname
current-function
is-breakpoint
stack-trace
test-feature
T &maybe_detail::maybe_impl_t<T>::value() [with T = job_control_t]
const T &maybe_detail::maybe_impl_t<T>::value() const [with T = job_control_t]
basic_string::erase
basic_string::insert
vector::_M_range_check: __n (which is %zu) >= this->size() (which is %zu)
no_match
ANY_CHAR
ANY_STRING
64993
ANY_STRING_RECURSIVE
64994
ANY_SENTINEL
64995
/opt/src/src/builtin_string.cpp
"string_args_from_stdin(streams_) && ""should not be reading from stdin"""
should not be reading from stdin
bool <unnamed>::arg_iterator_t::get_arg_stdin()
begin <= end && end <= arg->size()
1393
int string_trim(parser_t &, io_streams_t &, int, wchar_t **)
--end and --length are mutually exclusive
opts.start != LONG_MIN
opts.end != LONG_MIN
1329
int string_sub(parser_t &, io_streams_t &, int, wchar_t **)
1345
--allow-empty is only valid with --fields
--entire and --index are mutually exclusive
should never reach this statement
622
597
string 
540
c:
n:
l:
m:
N
q
s:
e:
f:
script
url
regex
1064
bool regex_replacer_t::replace_matches(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &)
%lu %lu
783
compiled_regex_t::compiled_regex_t(const wchar_t *, const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, bool, io_streams_t &)
handler
fields
entire
join0
split0
repeat
unescape
collect
ignore-case
invert
no-empty
no-newline
no-quoted
no-trim-newlines
allow-empty
T &maybe_detail::maybe_impl_t<T>::value() [with T = unsigned long]
/opt/src/src/builtin_test.cpp
]
evaluate
unary_primary_evaluate
test_filetype_b
24576
test_filetype_c
test_filetype_d
test_filetype_e
test_filetype_f
test_filetype_G
test_filetype_g
test_filetype_h
test_filetype_L
40960
test_filetype_k
test_filetype_O
test_filetype_p
test_filetype_S
49152
test_filesize_s
test_filedesc_t
test_fileperm_r
test_fileperm_u
test_fileperm_w
test_fileperm_x
test_string_n
test_string_z
Unknown token type in %s
binary_primary_evaluate
ln
test_string_equal
test_string_not_equal
test_number_equal
test_number_not_equal
test_number_greater
test_number_greater_equal
test_number_lesser
test_number_lesser_equal
Integer %lld in '%ls' followed by non-digit
Not a number
Number is infinite
%s: '%ls'
test_unknown
test_bang
-b
UNARY_PRIMARY
-c
-d
-e
-f
-G
-g
-k
-L
-O
-S
-s
-t
-r
-u
-w
-x
-n
=
BINARY_PRIMARY
!=
-eq
-ne
-gt
-ge
-lt
-le
-a
test_combine_and
-o
test_combine_or
(
test_paren_open
test_paren_close
!subjects.empty()
combiners.size() + 1 == subjects.size()
618
bool <unnamed>::test_expressions::combining_expression::evaluate(std::vector<std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>, std::allocator<std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>>> &)
619
subjects.size() == combiners.size() + 1
<unnamed>::test_expressions::combining_expression::combining_expression(<unnamed>::test_expressions::token_t, <unnamed>::test_expressions::range_t, std::vector<std::unique_ptr<<unnamed>::test_expressions::expression, std::default_delete<<unnamed>::test_expressions::expression>>, std::allocator<std::unique_ptr<<unnamed>::test_expressions::expression, std::default_delete<<unnamed>::test_expressions::expression>>>>, std::vector<<unnamed>::test_expressions::token_t, std::allocator<<unnamed>::test_expressions::token_t>>)
subject.get()
608
bool <unnamed>::test_expressions::unary_operator::evaluate(std::vector<std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>, std::allocator<std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>>> &)
args.size() > 1
550
static std::unique_ptr<<unnamed>::test_expressions::expression, std::default_delete<<unnamed>::test_expressions::expression>> <unnamed>::test_expressions::test_parser::parse_args(const std::vector<std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>, std::allocator<std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>>> &, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, wchar_t *)
result->range.end <= args.size()
584
Missing argument at index %u
Unexpected argument type at index %u
close_index <= end
std::unique_ptr<<unnamed>::test_expressions::expression, std::default_delete<<unnamed>::test_expressions::expression>> <unnamed>::test_expressions::test_parser::parse_parenthentical(unsigned int, unsigned int)
Missing close paren at index %u
Expected close paren at index %u
Expected a combining operator like '-a' at index %u
end - start == 4
501
std::unique_ptr<<unnamed>::test_expressions::expression, std::default_delete<<unnamed>::test_expressions::expression>> <unnamed>::test_expressions::test_parser::parse_4_arg_expression(unsigned int, unsigned int)
end - start == 3
std::unique_ptr<<unnamed>::test_expressions::expression, std::default_delete<<unnamed>::test_expressions::expression>> <unnamed>::test_expressions::test_parser::parse_3_arg_expression(unsigned int, unsigned int)
argc should not be zero
fmt != nullptr
void <unnamed>::test_expressions::test_parser::add_error(unsigned int, const wchar_t *, ...)
std::unique_ptr<<unnamed>::test_expressions::expression, std::default_delete<<unnamed>::test_expressions::expression>> <unnamed>::test_expressions::test_parser::error(unsigned int, const wchar_t *, ...)
"0.0 <= delta && delta < 1.0 && ""Invalid delta"""
Invalid delta
<unnamed>::test_expressions::number_t::number_t(long long, double)
RUSAGE_SELF
RUSAGE_CHILDREN
RLIMIT_CPU
RLIMIT_FSIZE
RLIMIT_DATA
RLIMIT_STACK
RLIMIT_CORE
__RLIMIT_RSS
RLIMIT_NOFILE
RLIMIT_AS
__RLIMIT_NPROC
__RLIMIT_MEMLOCK
__RLIMIT_NLIMITS
getrusage
/opt/src/src/builtin_ulimit.cpp
hard
soft
unlimited
core-size
data-size
file-size
lock-size
resident-set-size
file-descriptor-count
stack-size
cpu-time
process-count
virtual-memory-size
:HSacdflmnstuvh
Not a resource
(seconds, 
(kB, 
%-*ls %10ls-%lc) 
Maximum size of core files created
Maximum size of a processâs data segment
Maximum size of files created by the shell
Maximum size that may be locked into memory
Maximum resident set size
Maximum number of open file descriptors
Maximum stack size
Maximum amount of cpu time in seconds
Maximum number of processes available to a single user
Maximum amount of virtual memory available to the shell
/opt/src/src/builtin_wait.cpp
:nh
/opt/src/src/color.cpp
8388608
8421376
8388736
32896
12632256
8421504
16711680
16776960
16711935
16777215
type == type_rgb
type == type_named || type == type_rgb
named(%d: %ls)
rgb(0x%02x%02x%02x)
unknown color type
lo
blue
brblack
brblue
brbrown
brcyan
brgreen
brgrey
brmagenta
brown
brpurple
brred
brwhite
bryellow
cyan
green
grey
magenta
purple
red
yellow
__offset_shift
__public_mask
__virtual_mask
__contained_public_mask
__contained_mask
__hwm_bit
iothread_perform_impl
iothread_drain_all
iothread_service_completion
/opt/src/src/common.cpp
/dev/tty
TERM
/dev/dcons
/dev/console
sun-color
Microsoft
17763
FISH_NO_WSL_CHECK
This version of WSL has known bugs that prevent fish from working.Please upgrade to Windows 10 1809 (17763) or higher to use fish!
TMPDIR
/tmp
/proc/self/exe
/proc/curproc/file
/proc/self/path/a.out
%s:%zu: failed assertion: %s: errno %d (%s)
%s:%zu: failed assertion: %s
/dev/null
Could not open /dev/null!
2053
65008
%s is not locked when it should be in '%s'
Break on debug_thread_error to debug.
%s called on the main thread (may block!).
%s called in a forked child.
%s called off of main thread.
"tid == 1 && ""main thread should have thread ID 1"""
main thread should have thread ID 1
1964
void set_main_thread()
1943
void exec_close(int)
gettimeofday(&tv, nullptr) != -1
1929
9.999999999999999547e-07
buff_size
kB
MB
GB
TB
PB
EB
ZB
YB
B
1048576
%lldB
%d%ls
%.1f%ls
This is a bug. Break on 'bugreport' to debug.
If you can reproduce it, please report: 
https://github.com/fish-shell/fish-shell/issues
match_against.size() >= string.size()
1779
string_fuzzy_match_t string_fuzzy_match_string(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, fuzzy_match_type_t)
1787
1793
1800
1806
seq_idx <= seq.size()
1761
bool subsequence_in_string(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &)
str != nullptr
1676
bool unescape_string_in_place(std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> *, unsigned int)
mode_unquoted
mode_single_quotes
mode_double_quotes
*escape_chars > 0
!result.empty()
1454
bool unescape_string_internal(const wchar_t *, unsigned long, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> *, unsigned int)
1484
"input[0] == L'\\' && ""Not an escape"""
Not an escape
1244
maybe_t<unsigned long> read_unquoted_escape(const wchar_t *, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> *, bool, bool)
in_pos > 0
1258
1313
<%s>
<\x%02x>
1.300000000000000044
''
**
_%02X
%%%02X
"idx <= size && ""Buffer overflowed"""
Buffer overflowed
728
param_idx < sizeof params / sizeof *params
687
void debug_safe(int, const char *, const char *, const char *, const char *, const char *, const char *, const char *, const char *, const char *, const char *, const char *, const char *, const char *)
(ignore)
8230
…
¶
8226
^J
9166
⏎
9679
buff != nullptr
void append_formatv(std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, const wchar_t *, __va_list_tag *)
"in && out && ""in and out must not be null"""
in and out must not be null
char *wcs2str_internal(const wchar_t *, char *)
Wide character U+%4X has no narrow representation
char *wcs2str(const wchar_t *, unsigned long)
in != nullptr
std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> str2wcs_internal(const char *, unsigned long)
55296
57343
n_max_frames
%-3d %s + %td
%-3d %s
0123456789ABCDEF
void format_safe_impl(CharT *, unsigned long, unsigned long long) [with CharT = char]
void format_safe_impl(CharT *, unsigned long, unsigned long long) [with CharT = wchar_t]
const T &maybe_detail::maybe_impl_t<T>::value() const [with T = wchar_t]
T &maybe_detail::maybe_impl_t<T>::value() [with T = wchar_t]
bitset::test
bitset::reset
void autoload_t::mark_autoload_finished(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &)
/opt/src/src/complete.cpp
"false && ""this->type() is unknown!"""
COMPLETE_DEFAULT
COMPLETE_AUTOSUGGEST
this->type() is unknown!
893
lambda [](std::function<void ()> &&)->auto::operator()(std::function<void ()> &&)->auto
requires-param
 --%ls
 -%lc
 --%ls %ls
 -%lc %ls
cmdsubst_begin != nullptr && cmdsubst_end != nullptr && cmdsubst_end >= cmdsubst_begin
1662
std::vector<completion_t, std::allocator<completion_t>> complete(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, enum_set_t<completion_request_t>, const operation_context_t &)
e->type != option_type_short
808
const wchar_t *param_match2(const complete_entry_opt *, const wchar_t *)
"cmd && ""Null command"""
Null command
void complete_add(const wchar_t *, bool, const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, complete_option_type_t, completion_mode_t, const wchar_t *, const wchar_t *, const wchar_t *, int)
option.empty() == (option_type == option_type_args_only)
/=@:.,
equals_pos
cmd_tok
1612
lambda [](const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, unsigned long)->auto::operator()(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, unsigned long)->auto
tok.type == token_type_t::string || tok.type == token_type_t::redirect
1500
void completer_t::perform()
cmd_tok.offset < std::numeric_limits<uint32_t>::max()
cmd_tok.length < std::numeric_limits<uint32_t>::max()
1630
1631
condition_test
Variable: %ls
complete_cmd_desc
__fish_describe_command 
"!val.empty() && ""tab index should not have been at the end."""
tab index should not have been at the end.
634
void completer_t::complete_cmd_desc(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &)
"iter != abbrs.end() && ""Abbreviation not found"""
=:
Error while expanding string '%ls'
Skipping completions for non-existent head
%ls=
Home for %ls
~%ls
0.2000000000000000111
e_unquoted
e_single_quoted
e_double_quoted
Abbreviation not found
723
lambda [](const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &)->auto::operator()(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &)->auto
Abbreviation: %ls
fish_complete_path
write_to_fd
remove_internal
set_internal
load_from_fd
load_from_path
strategy_shmem_polling
strategy_notifyd
strategy_named_pipe
fish_2_x
fish_3_0
env_dispatch_var_change
Latch variable initialized multiple times
Latch variable initialized with null
/opt/src/src/env.cpp
XDG_RUNTIME_DIR
/fish.
Runtime path not available.
Try deleting the directory %s and restarting fish.
PATH_ARRAY_SEP
511
__fish_data_dir
__fish_sysconf_dir
__fish_help_dir
__fish_bin_dir
__fish_config_dir
__fish_user_data_dir
FISH_VERSION
fish_pid
hostname
SHLVL
USER
COLUMNS
fish_bind_mode
fish_history
NONPATH_ARRAY_SEP
VARIABLE
ERASE
Could not determine current working directory. Is your locale set correctly?
SET
"iter != node->env.end() && ""Node should contain key"""
Node should contain key
946
const env_var_t *env_stack_impl_t::find_variable(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &) const
set_universal
"val.size() == 1 && ""Should have exactly one element in PWD"""
Should have exactly one element in PWD
1051
maybe_t<int> env_stack_impl_t::try_set_electric(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, const <unnamed>::query_t &, std::vector<std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>, std::allocator<std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>>> &)
"!shadowed_locals_.empty() && ""Attempt to pop last local scope"""
Attempt to pop last local scope
979
std::shared_ptr<<unnamed>::env_node_t> env_stack_impl_t::pop()
"locals_ && ""Attempt to pop first local scope"""
Attempt to pop first local scope
983
Unknown scope
1196
"locals_ != globals_ && ""Locals should not be globals"""
"node && ""Should always resolve some scope"""
Locals should not be globals
mod_result_t env_stack_impl_t::set(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, unsigned int, std::vector<std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>, std::allocator<std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>>>)
1150
Should always resolve some scope
1166
create_export_array() recalc
"var && ""Variable should be present in uvars"""
Variable should be present in uvars
635
std::shared_ptr<const null_terminated_array_t<char>> env_scoped_impl_t::create_export_array() const
fish_kill_signal
0%0.3o
unrecognized computed var name
717
export_array
"locals_ && globals_ && ""Nodes cannot be null"""
Nodes cannot be null
env_scoped_impl_t::env_scoped_impl_t(std::shared_ptr<<unnamed>::env_node_t>, std::shared_ptr<<unnamed>::env_node_t>)
fexports
fcomputed
freadonly
fish_private_mode
void latch_t<T>::operator=(std::unique_ptr<T, std::default_delete<T>>) [with T = env_universal_t]
T &maybe_detail::maybe_impl_t<T>::value() [with T = bool]
const T &maybe_detail::maybe_impl_t<T>::value() const [with T = bool]
char_event_t::char_event_t(char_event_type_t)
readline_cmd_t char_event_t::get_readline() const
wchar_t char_event_t::get_char() const
/opt/src/src/screen.h
idx <= line_datas.size()
line_t &screen_data_t::insert_line_at_index(unsigned long)
prompt_cache_max_size
/opt/src/src/env_dispatch.cpp
locale var %s missing or empty
locale var %s='%s'
init_locale() setlocale(): '%s'
old LC_MESSAGES locale: '%s'
new LC_MESSAGES locale: '%s'
curses var %s missing or empty
curses var %s='%s'
Could not set up terminal.
TERM environment variable not set.
TERM environment variable set to '%ls'.
Check that this terminal type is supported on this system.
ansi
dumb
xenl
xterm-
screen-
tmux-
vt100
wsvt25
tty
/vc/
Using fallback terminal type '%s'.
Could not set up terminal using the fallback terminal type '%s'.
fish_term256
256 color support determined by '$fish_term256'
256color
256 color support enabled for TERM=%ls
xterm
TERM_PROGRAM
Apple_Terminal
TERM_PROGRAM_VERSION
256 color support enabled for TERM=%ls on Terminal.app
256 color support: %d colors per terminfo entry for %ls
fish_term24bit
'fish_term24bit' preference: 24-bit color %ls
disabled
fish_escape_delay_ms
fish_emoji_width
fish_ambiguous_width
fish_function_path
fish_read_limit
TZ
fish_use_posix_spawn
Ignoring fish_read_limit since it is not valid
fish_color_
'fish_emoji_width' preference: %d, overwriting default
default emoji width: 2 for %ls
iTerm.app
default emoji width: 1
default emoji width: %d
handle_timezone() current timezone var: |%ls| => |%ls|
MISSING
"!observes_var(name) && ""Already observing that variable"""
Already observing that variable
void var_dispatch_table_t::add(std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>, std::function<void (env_stack_t &)>)
void var_dispatch_table_t::add(std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>, std::function<void (const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, env_stack_t &)>)
tmux
nxterm
rxvt
alacritty
TERMINFO
TERMINFO_DIRS
LANG
LANGUAGE
LOCPATH
void latch_t<T>::operator=(std::unique_ptr<T, std::default_delete<T>>) [with T = const var_dispatch_table_t]
SOCK_STREAM
MSG_DONTROUTE
513
514
520
5000
/opt/src/src/env_universal_common.cpp
/fish_universal_variables
%02x
nohost
eth0
35111
0.25
Locking the universal var file took too long (%.3f seconds).
UVAR_ARRAY_SEP
storage != nullptr
bool append_file_entry(unsigned char, const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> *, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> *)
result != nullptr
Illegal variable name: '%ls'
Could not convert %ls to narrow character string
\x%.2x
\u%.4x
\U%.8x
/_
/fish_variables
/fishd.
# VERSION: %64s
3.0
universal log sync
No universal variable path available
universal log no modifications
universal log performing full sync
universal log open_and_acquire_lock() failed
vars_fd.valid()
bool env_universal_t::sync(std::vector<callback_data_t, std::allocator<callback_data_t>> &)
"ok_to_save && ""It's not OK to save"""
It's not OK to save
724
bool env_universal_t::save(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &)
universal log open_temporary_file() failed
private_fd.valid()
736
universal log write_to_fd() failed
universal log fchown() failed
universal log fchmod() failed
universal log move_new_vars_file_into_place() failed
k_max_read_size
Unable to parse universal variable message: '%ls'
Unable to rename file from '%ls' to '%ls': %s
fd >= 0
bool env_universal_t::write_to_fd(int, const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &)
Unable to write to universal variables file '%ls': %s
"!string_suffixes_string(L""/"", directory)"
535
autoclose_fd_t env_universal_t::open_temporary_file(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> *)
/fishd.tmp.XXXXXX
Unable to open temporary file '%ls': %s
"fd.valid() && ""Should have a valid fd here"""
Unable to open universal variable file '%s': %s
Should have a valid fd here
bool env_universal_t::open_and_acquire_lock(const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> &, autoclose_fd_t *)
void env_universal_t::load_from_fd(int, std::vector<callback_data_t, std::allocator<callback_data_t>> &)
universal log sync elided based on fstat()
universal log sync elided based on fast stat()
universal log reading from file
1475
this->readback_amount == 0
1408
bool universal_notifier_named_pipe_t::poll()
100000.0
.notifier
Unable to make a pipe for universal variables using '%ls': %s
Unable to open a pipe for universal variables using '%ls': %s
universal_notifier_shmem_poller_t cannot be used on this system
1191
universal_notifier_notifyd_t cannot be used on this system
1270
--path
--export
SETUVAR
SET_EXPORT

/opt/src/src/event.cpp
"name && ""Null name"""
Null name
void event_fire_generic(parser_t &, const wchar_t *, const std::vector<std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>, std::allocator<std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>>> *)
ld.blocked_events.empty()
void event_fire_delayed(parser_t &)
"ld.is_event >= 0 && ""is_event should not be negative"""
is_event should not be negative
void event_fire_internal(parser_t &, const event_t &)
signal handler for %ls (%ls)
handler for variable '%ls'
exit handler for process %d
exit handler for job %d, '%ls'
exit handler for job with process group %d
exit handler for command substitution caller
handler for generic event '%ls'
Unknown event type
unexpected classv.type
caller-exit
execute_fork
/opt/src/src/exec.cpp
exec_subshell_internal
"!elem.is_explicitly_separated() && ""should not be explicitly separated"""
should not be explicitly separated
1020
void populate_subshell_output(std::vector<std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>, std::allocator<std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>>> *, const io_buffer_t &, bool)
"j && ""null job_t passed to exec_job!"""
null job_t passed to exec_job!
bool exec_job(parser_t &, const std::shared_ptr<job_t> &, const io_chain_t &)
An error occurred while setting up pipe
"deferred_pipes.write.valid() && ""Deferred process should always have a write pipe"""
Deferred process should always have a write pipe
984
Executed job %d from command '%ls' with pgrp %d
"pgid.has_value() && ""Background jobs should always have a pgroup"""
Background jobs should always have a pgroup
997
last_pid
process_type_t::exec process found in pipeline, where it should never be. Aborting.
838
"(p->type == process_type_t::function || p->type == process_type_t::block_node) && ""Unexpected process type"""
Unexpected process type
621
std::function<proc_status_t (parser_t &)> get_performer_for_process(process_t *, job_t *, const io_chain_t &)
"source && node && ""Process is missing node info"""
p->type == process_type_t::function
Process is missing node info
628
633
Unknown function '%ls'
"p->type == process_type_t::external && ""Process is not external"""
Process is not external
494
bool exec_external_command(parser_t &, const std::shared_ptr<job_t> &, process_t *, const io_chain_t &)
"pid.has_value() && *pid > 0 && ""Should have either a valid pid, or an error"""
Should have either a valid pid, or an error
531
Fork #%d, pid %d: spawn external command '%s' from '%ls'
<no file>
external command
"p->type == process_type_t::builtin && ""Process is not a builtin"""
Process is not a builtin
bool handle_builtin_output(parser_t &, const std::shared_ptr<job_t> &, process_t *, io_chain_t *, const io_streams_t &)
Error while writing to stdout
Error while writing to stderr
!builtin_io_done and errno != EPIPE
"p->type == process_type_t::builtin && ""Process must be a builtin"""
Process must be a builtin
bool exec_internal_builtin_proc(parser_t &, process_t *, const io_pipe_t *, const io_chain_t &, io_streams_t &)
"!job->group->is_internal() && ""Internal groups should never need to fork"""
Internal groups should never need to fork
bool fork_child_for_process(const std::shared_ptr<job_t> &, process_t *, const dup2_list_t &, const char *, const std::function<void ()> &)
Child process returned control to fork_child lambda!
Fork #%d, pid %d: %s for '%ls'
Set status of job %d (%ls) to %d using short circuit
Created internal proc %llu to write output for proc '%ls'
launch_process_nofork
/bin/sh
T &maybe_detail::maybe_impl_t<T>::value() [with T = dup2_list_t]
T &maybe_detail::maybe_impl_t<T>::value() [with T = autoclose_pipes_t]
T &maybe_detail::maybe_impl_t<T>::value() [with T = posix_spawnattr_t]
T &maybe_detail::maybe_impl_t<T>::value() [with T = posix_spawn_file_actions_t]
/opt/src/src/expand.cpp
"((flags & expand_flag::skip_cmdsubst) || ctx.parser) && ""Must have a parser if not skipping command substitutions"""
Must have a parser if not skipping command substitutions
1046
static expand_result_t <unnamed>::expander_t::expand_string(std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>, std::vector<completion_t, std::allocator<completion_t>> *, enum_set_t<expand_flag>, const operation_context_t &, std::vector<parse_error_t, std::allocator<parse_error_t>> *)
./
../
"ctx.parser && ""Must have a parser to expand command substitutions"""
Command substitutions not allowed
Must have a parser to expand command substitutions
905
expand_result_t <unnamed>::expander_t::stage_cmdsubst(std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>, std::vector<completion_t, std::allocator<completion_t>> *)
_fish_abbr_
"exec ""${@}"""
"exec ""$@"""
~
~/
input[0] == HOME_DIRECTORY || input[0] == L'~'
702
std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> get_home_directory_name(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, unsigned long *)
"ctx.parser && ""Cannot expand without a parser"""
Cannot expand without a parser
598
expand_result_t expand_cmdsubst(std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>, const operation_context_t &, std::vector<completion_t, std::allocator<completion_t>> *, std::vector<parse_error_t, std::allocator<parse_error_t>> *)
Mismatched parenthesis
unhandled parse_ret value
Too much data emitted by command substitution so it was discarded
Too many active file descriptors
Unknown error while evaluating command substitution
array indices start at 1, not 0.
Invalid index value
Mismatched braces
pos >= item_begin
562
expand_result_t expand_braces(std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &&, enum_set_t<expand_flag>, std::vector<completion_t, std::allocator<completion_t>> *, std::vector<parse_error_t, std::allocator<parse_error_t>> *)
"last_idx <= insize && ""Invalid last_idx"""
Invalid last_idx
bool expand_variables(std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>, std::vector<completion_t, std::allocator<completion_t>> *, unsigned long, const environment_t &, std::vector<parse_error_t, std::allocator<parse_error_t>> *)
"var_name_stop >= var_name_start && ""Bogus variable name indexes"""
Bogus variable name indexes
"(var || history) && ""Should have variable or history here"""
Should have variable or history here
'
  
~%
"$*?\""'({})"
widechar_private_use
widechar_nonprint
widechar_combining
widechar_ambiguous
widechar_unassigned
widechar_widened_in_9
1536
1541
1564
1757
1807
2274
6158
8203
8207
8232
8238
8288
8292
8294
8303
65279
65529
65531
69821
69837
78896
78904
113824
113827
119155
119162
917505
917536
917631
57344
63743
983040
1048573
1114109
/opt/src/src/fallback.cpp
variation_selector_16
65039
variation_selector_15
65038
4448
4607
"width > 0 && ""Unexpectedly nonpositive width"""
Unexpectedly nonpositive width
675
/opt/src/src/fd_monitor.h
kNoTimeout
"timeout_usec > 0 && ""Invalid timeout"""
Invalid timeout
run_in_background
/opt/src/src/fd_monitor.cpp
kUsecPerSec
"last_time.has_value() && ""Should always have a last_time"""
Should always have a last_time
unsigned long fd_monitor_item_t::usec_remaining(const std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<signed long, std::ratio<1L, 1000000000L>>> &) const
"now >= *last_time && ""steady clock went backwards!"""
steady clock went backwards!
"!timed_out && ""Should not time out with kNoTimeout"""
Should not time out with kNoTimeout
lambda [](const autoclose_fd_t &, bool)->auto::operator()(const autoclose_fd_t &, bool)->auto
Thread starting
"timeout_usec == fd_monitor_item_t::kNoTimeout && ""Should not have a timeout on wait-lap"""
"data->running && ""Thread should be running because we're that thread"""
Should not have a timeout on wait-lap
void fd_monitor_t::run_in_background()
kUsecPerMsec
Thread should be running because we're that thread
Thread exiting
"item.fd.valid() && ""Invalid fd"""
void fd_monitor_t::add(fd_monitor_item_t &&)
"item.timeout_usec != 0 && ""Invalid timeout"""
Unable to create a new pthread
Unable to create pipes
Removing fd
const T &maybe_detail::maybe_impl_t<T>::value() const [with T = std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<signed long, std::ratio<1L, 1000000000L>>>]
Can not use the no-execute mode when running an interactive session
PROCESS_EXIT
fish_exit
__fish_print_help fish
Invalid value '%s' for debug-stack-frames flag
init-command
debug-output
debug-stack-frames
login
no-execute
print-rusage-self
print-debug-categories
profile
+hPilnvc:C:p:d:f:D:
/config.fish
not sourcing %ls (not readable or does not exist)
sourcing %ls
builtin source 
exec_path: '%s', argv[0]: '%s'
/share
/etc
/user_doc/html
/bin/fish
/fish
'fish' not in a 'bin/', trying paths relative to source tree
/share/fish
/etc/fish
/share/doc/fish
/bin
/usr/local/share/doc/fish
Using compiled in paths:
/usr/local/share/fish
/usr/local/etc/fish
/usr/local/bin
/opt/src/src/fish_indent.cpp
fish_indent
"idx <= text.size() && ""Out of bounds"""
Out of bounds
unsigned long <unnamed>::count_preceding_backslashes(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, unsigned long)
output_type_plain_text
output_type_file
output_type_ansi
output_type_pygments_csv
output_type_html
+d:hvwiD:
debug-level
dump-parse-tree
no-indent
html
pygments
Invalid value '%s' for debug-level flag
pygments_csv should have been handled above
colors.size() == text.size()
775
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> html_colorize(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, const std::vector<highlight_spec_t, std::allocator<highlight_spec_t>> &)
<pre><code>
</span>
"<span class=""%ls"">"
&amp;
&apos;
&quot;
&lt;
&gt;
</span></code></pre>
fish_color_normal
fish_color_error
fish_color_command
fish_color_statement_terminator
fish_color_param
fish_color_comment
fish_color_match
fish_color_search_match
fish_color_operator
fish_color_escape
fish_color_quote
fish_color_redirection
fish_color_autosuggestion
fish_color_selection
fish_color_other
"colors.size() == len && ""Colors and src should have same size"""
Colors and src should have same size
667
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> make_pygments_csv(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &)
UNKNOWN ROLE
652
%s (byte=%X)
default_flags
skip_space
"r.start <= source.size() && ""source out of bounds"""
source out of bounds
void <unnamed>::pretty_printer_t::emit_gap_text_before(source_range_t, unsigned int)
"std::is_sorted(errs.begin(), errs.end(), range_is_before) && ""Error ranges should be sorted"""
Error ranges should be sorted
bool <unnamed>::pretty_printer_t::range_contained_error(source_range_t) const
allow_escaped_newlines
Gap text should only have comments and newlines
"prev->range.start <= job.decorator->range.start && ""Ranges out of order"""
Ranges out of order
std::vector<unsigned int, std::allocator<unsigned int>> <unnamed>::pretty_printer_t::compute_preferred_semi_locations() const
std::is_sorted(tok_ranges.begin(), tok_ranges.end(), range_compare)
std::vector<source_range_t, std::allocator<source_range_t>> <unnamed>::pretty_printer_t::compute_gaps() const
"tok_range.start >= prev_end && ""Token range should not overlap or be out of order"""
Token range should not overlap or be out of order
"indents.size() == source.size() && ""indents and source should be same length"""
indents and source should be same length
<unnamed>::pretty_printer_t::pretty_printer_t(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, bool)
fish_key_reader
+chv
continuous
200000
              
(%3lld.%03lld ms)  
bind 
\u%04X
\U%06X
\%c
%c
\x%X
"\x%X  (aka ""del"")"
"\x%X  (aka ""space"")"
\c%c  (or %ls)
\c%c
"[]()<>{}*\?$#;&|'"""
quit
\a
\b
\t
\n
\v
\f
\r
\e
print_blocked_signals
: %d
print_fds
%s%d
print_pgrp
print_pid_then_sleep
print_stdout_stderr
sigint_parent
report_foreground
become_foreground_then_print_stderr
tcsetgrp
Claim the terminal (tcsetpgrp) and then print to stderr
Continually report to stderr whether we own the terminal
Wait .25 seconds, then SIGINT the parent process
Print 'stdout' to stdout and 'stderr' to stderr
Print our pid, then sleep for .5 seconds
Print our pgroup to stdout
Print the list of active FDs to stdout
Print to stdout the name(s) of blocked signals
Print list of fish_test_helper commands
3.1.2-1073-g31e19db64
/opt/src/src/function.cpp
"source_range && ""Function has no source range"""
Function has no source range
int function_get_definition_lineno(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &)
"func_start <= source.size() && ""function start out of bounds"""
function start out of bounds
"body_start <= body_end && ""end keyword should come after header"""
end keyword should come after header
bool function_get_definition(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &)
"ins.second && ""Function should not already be present in the table"""
Function should not already be present in the table
void function_add(std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>, std::shared_ptr<const function_properties_t>, const wchar_t *)
try_autoload
const ast::node_t *ast::union_ptr_t<Nodes...>::get() const [with Nodes = ast::for_header_t; Nodes = ast::while_header_t; Nodes = ast::function_header_t; Nodes = ast::begin_header_t]
/opt/src/src/future_feature_flags.cpp
"name && ""null flag name"""
null flag name
no-
stderr-nocaret
^ no longer redirects stderr
qmark-noglob
? no longer globs
regex-easyesc
3.1
string replace -r needs fewer \'s
/opt/src/src/highlight.cpp
buff.size() == color.size()
1416
void highlight_universal(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, std::vector<highlight_spec_t, std::allocator<highlight_spec_t>> &, unsigned long, const operation_context_t &)
buffstr.size() == color.size()
1331
void highlight_universal_internal(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, std::vector<highlight_spec_t, std::allocator<highlight_spec_t>> &, unsigned long)
()[]{}
({[
1298
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> colorize(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, const std::vector<highlight_spec_t, std::allocator<highlight_spec_t>> &)
"(base_color == highlight_role_t::param || base_color == highlight_role_t::command) && ""Unexpected base color"""
Unexpected base color
532
void color_string_internal(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, highlight_spec_t, __gnu_cxx::__normal_iterator<highlight_spec_t *, std::vector<highlight_spec_t, std::allocator<highlight_spec_t>>>)
in_pos >= backslash_pos && in_pos <= buff_len
fill_end >= backslash_pos
in_pos < buff_len
"abefnrtv*?$(){}[]'""<>^ \#;|&"
uUxX01234567
629
641
in_len > 0
unsigned long color_variable(const wchar_t *, unsigned long, __gnu_cxx::__normal_iterator<highlight_spec_t *, std::vector<highlight_spec_t, std::allocator<highlight_spec_t>>>)
in[0] == L'$'
slice_end_idx > slice_begin_idx
located < 0
506
fish_color_valid_path
invalid highlight role
fish_color_end
fish_pager_color_progress
fish_pager_color_background
fish_pager_color_prefix
fish_pager_color_completion
fish_pager_color_description
fish_pager_color_secondary_background
fish_pager_color_secondary_prefix
fish_pager_color_secondary_completion
fish_pager_color_secondary_description
fish_pager_color_selected_background
fish_pager_color_selected_prefix
fish_pager_color_selected_completion
fish_pager_color_selected_description
ast_flags
"oper.has_value() && ""Should have successfully parsed a pipe_or_redir_t since it was in our ast"""
Should have successfully parsed a pipe_or_redir_t since it was in our ast
1093
void highlighter_t::visit(const ast::redirection_t &)
"r.start + r.length >= r.start && ""Overflow"""
839
std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> highlighter_t::get_source(source_range_t) const
"r.start + r.length <= this->buff.size() && ""Out of range"""
Out of range
840
"range.start + range.length <= this->color_array.size() && ""Range out of bounds"""
Range out of bounds
849
void highlighter_t::color_range(source_range_t, highlight_spec_t)
cmdsub_end > cmdsub_start
cmdsub_end - cmdsub_start - 1 == cmdsub_contents.size()
cmdsub_start < arg_str.size()
subcolors.size() == cmdsub_contents.size()
883
void highlighter_t::color_as_argument(const ast::node_t &)
913
T &maybe_detail::maybe_impl_t<T>::value() [with T = highlight_role_t]
T &maybe_detail::maybe_impl_t<T>::value() [with T = pipe_or_redir_t]
deque::_M_range_check: __n (which is %zu)>= this->size() (which is %zu)
cannot create std::deque larger than max_size()
/opt/src/src/history_file.h
"offset <= length_ && ""Invalid offset"""
Invalid offset
const char *history_file_contents_t::address_at(unsigned long) const
history_type_fish_2_0
history_type_fish_1_x
483
484
491
/opt/src/src/history.cpp
Locking the history file took too long (%.3f seconds).
_history
%s: %.0f ms
1000.0
History session ID '%ls' is not a valid variable name. Falling back to `%ls`.
[[
]]
((
))
max_tstamp_length
"current_item_ && ""No current item"""
No current item
637
const history_item_t &history_search_t::current_item() const
max_index
Searching for the empty string isn't allowed
reboot
restart
idx > 0
history_item_t history_impl_t::item_at_index(unsigned long)
history_file_mode
Error when writing history file
disable_automatic_save_counter > 0
1014
void history_impl_t::enable_automatic_saving()
disable_automatic_save_counter != 0
1010
void history_impl_t::disable_automatic_saving()
first_unwritten_new_item_index <= new_items.size()
void history_impl_t::remove(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &)
kVacuumFrequency
save vacuum
save no vacuum
countdown_to_vacuum > 0
void history_impl_t::save_unless_disabled()
Appending failed
Saving %lu items via appending
deleted_items.empty()
851
bool history_impl_t::save_internal_via_appending()
max_save_tries
Saving %lu items via rewrite
.XXXXXX
Error %d when truncating temporary history file
Error %d when changing ownership of history file
Error %d when changing mode of history file
Error %d when renaming history file
dst_fd >= 0
677
bool history_impl_t::rewrite_to_temporary_file(int, int) const
Error %d when writing to temporary history file
load_old
populate_from_file_contents
Loaded %lu old items
unexpected history_search_type_t value
void lru_cache_t<Derived, Contents>::promote_node(lru_cache_t<Derived, Contents>::lru_node_t *) [with Derived = history_lru_cache_t; Contents = history_item_t]
void lru_cache_t<Derived, Contents>::evict_last_node() [with Derived = history_lru_cache_t; Contents = history_item_t]
static lru_cache_t<Derived, Contents>::lru_link_t *lru_cache_t<Derived, Contents>::merge(lru_cache_t<Derived, Contents>::lru_link_t *, unsigned long, lru_cache_t<Derived, Contents>::lru_link_t *, unsigned long, const F &) [with F = lambda [](const history_item_t &, const history_item_t &)->bool; Derived = history_lru_cache_t; Contents = history_item_t]
const T &maybe_detail::maybe_impl_t<T>::value() const [with T = std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>]
const T &maybe_detail::maybe_impl_t<T>::value() const [with T = history_item_t]
void lru_cache_t<Derived, Contents>::evict_node(lru_cache_t<Derived, Contents>::lru_node_t *) [with Derived = history_lru_cache_t; Contents = history_item_t]
T &maybe_detail::maybe_impl_t<T>::value() [with T = history_item_t]
/opt/src/src/history_file.cpp
- cmd: 
  when: 
    - 
- cmd: - cmd: 
- cmd:    when:
%
---
when:
- cmd
- 
cursor <= len
\
\\
"mmap_start != MAP_FAILED && ""Invalid mmap address"""
Invalid mmap address
T &maybe_detail::maybe_impl_t<T>::value() [with T = history_file_type_t]
/opt/src/src/input.cpp
input_function_count
s_input_initialized
751
std::vector<std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>, std::allocator<std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>>> input_terminfo_get_names(bool)
738
bool input_terminfo_get_name(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> *)
720
bool input_terminfo_get_sequence(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> *)
std::vector<terminfo_mapping_t, std::allocator<terminfo_mapping_t>> create_input_terminfo()
self-insert

commandline ''



backward-delete-char
[A
up-line
[B
down-line
[C
forward-char
[D
backward-char
!bm.empty()
void input_set_bind_mode(parser_t &, const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &)
%02x (%ls)
"!input_function_args_.empty() && ""function_pop_arg underflow"""
function_pop_arg underflow
wchar_t inputter_t::function_pop_arg()
"!str.empty() && ""zero-length input string passed to mapping_is_match!"""
zero-length input string passed to mapping_is_match!
bool inputter_t::mapping_is_match(const input_mapping_t &)
no generic found, ignoring char...
"commands && mode && sets_mode && ""Null parameter"""
Null parameter
void input_mapping_set_t::add(std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>, const wchar_t *const *, unsigned long, const wchar_t *, const wchar_t *, bool)
beginning-of-line
end-of-line
forward-word
backward-word
forward-bigword
backward-bigword
history-prefix-search-backward
history-prefix-search-forward
history-search-backward
history-search-forward
delete-char
kill-line
yank-pop
complete-and-search
pager-toggle-search
beginning-of-history
end-of-history
backward-kill-line
kill-whole-line
kill-word
kill-bigword
backward-kill-word
backward-kill-path-component
backward-kill-bigword
history-token-search-backward
history-token-search-forward
self-insert-notfirst
transpose-chars
transpose-words
upcase-word
downcase-word
capitalize-word
togglecase-char
togglecase-selection
beginning-of-buffer
end-of-buffer
repaint-mode
force-repaint
suppress-autosuggestion
accept-autosuggestion
begin-selection
swap-selection-start-stop
end-selection
kill-selection
forward-jump
backward-jump
forward-jump-till
backward-jump-till
repeat-jump
repeat-jump-reverse
expand-abbr
delete-or-exit
cancel-commandline
nul
void latch_t<T>::operator=(std::unique_ptr<T, std::default_delete<T>>) [with T = std::vector<terminfo_mapping_t, std::allocator<terminfo_mapping_t>>]
T &maybe_detail::maybe_impl_t<T>::value() [with T = std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>]
T &maybe_detail::maybe_impl_t<T>::value() [with T = input_mapping_t]
const T &maybe_detail::maybe_impl_t<T>::value() const [with T = std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>]
Illegal input
T &maybe_detail::maybe_impl_t<T>::value() [with T = char_event_t]
fd_monitor_item_t::fd_monitor_item_t(autoclose_fd_t, std::function<void (autoclose_fd_t &, bool)>, unsigned long)
/opt/src/src/io.cpp
tmp_fd != fd.fd()
autoclose_fd_t move_fd_to_unused(autoclose_fd_t, const fd_set_t &)
yes
no
"target_fd.has_value() && ""fd redirection should have been validated already"""
fd redirection should have been validated already
bool io_chain_t::append_from_specs(const std::vector<redirection_spec_t, std::allocator<redirection_spec_t>> &, const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &)
The file '%ls' already exists
An error occurred while redirecting file '%ls'
"&chain != this && ""Cannot append self to self"""
Cannot append self to self
void io_chain_t::append(const io_chain_t &)
element.get() != nullptr
void io_chain_t::push_back(std::shared_ptr<const io_data_t>)
"filler && ""Null pointer in finish"""
Null pointer in finish
static std::shared_ptr<io_buffer_t> io_bufferfill_t::finish(std::shared_ptr<io_bufferfill_t> &&)
"target >= 0 && ""Invalid target fd"""
Invalid target fd
static std::shared_ptr<io_bufferfill_t> io_bufferfill_t::create(const fd_set_t &, unsigned long, int)
"!fillthread_running() && ""io_buffer_t destroyed with outstanding fillthread"""
io_buffer_t destroyed with outstanding fillthread
io_buffer_t::~io_buffer_t()
"fillthread_running() && ""Should have a fillthread"""
Should have a fillthread
void io_buffer_t::complete_background_fillthread()
"!fillthread_running() && ""Already have a fillthread"""
Already have a fillthread
void io_buffer_t::begin_filling(autoclose_fd_t)
usec_per_msec
long io_buffer_t::read_once(int)
T &maybe_detail::maybe_impl_t<T>::value() [with T = std::chrono::time_point<std::chrono::_V2::steady_clock, std::chrono::duration<signed long, std::ratio<1L, 1000000000L>>>]
/opt/src/src/iothread.cpp
pipe(pipes) != -1
pthread_sigmask(SIG_BLOCK, &new_set, &saved_set)
pthread_detach(thread)
pthread %p spawned
pthread_sigmask(SIG_SETMASK, &saved_set, nullptr)
write_loop(notify_fd, &wakeup_byte, sizeof wakeup_byte) != -1
req.done
void iothread_perform_on_main(std::function<void ()> &&)
iothread_service_main_thread_requests
"!data->drain && ""Should not be draining already"""
Should not be draining already
int iothread_drain_all()
"data->total_threads == 0 && ""Should be no threads"""
Should be no threads
"data->drain && ""Should be draining"""
Should be draining
Drained %d thread(s) in %.02f msec
usec_per_sec
"pool && ""No thread pool given"""
No thread pool given
static void *thread_pool_t::run_trampoline(void *)
500
pthread %p got work
pthread %p exiting
"func && ""Missing function"""
Missing function
int thread_pool_t::perform(std::function<void ()> &&, std::function<void ()> &&, bool)
enqueuing work item (count is %lu)
notifying a thread
pthread spawned
"active_token && ""Something should be active"""
Something should be active
574
unsigned long debounce_t::perform_impl(std::function<void ()>, std::function<void ()>)
"token > 0 && ""Invalid token"""
Invalid token
526
bool debounce_t::impl_t::run_next(unsigned long)
"req && req->handler && ""Request should have value"""
Request should have value
544
T maybe_detail::maybe_impl_t<T>::acquire() [with T = work_request_t]
T &maybe_detail::maybe_impl_t<T>::value() [with T = work_request_t]
kill_yank_rotate
kill_remove
kill_add
/opt/src/src/null_terminated_array.cpp
reinterpret_cast<unsigned char *>(pointers) - base == static_cast<std::ptrdiff_t>(pointers_allocation_len)
reinterpret_cast<unsigned char *>(strings) - reinterpret_cast<unsigned char *>(pointers) == static_cast<std::ptrdiff_t>(strings_allocation_len)
reinterpret_cast<unsigned char *>(strings) - base == static_cast<std::ptrdiff_t>(pointers_allocation_len + strings_allocation_len)
/opt/src/src/output.cpp
"Tried to use terminfo string %s on line %ld of %s, which is undefined in terminal of type ""%ls"". Please report this error to %s"
--background=
--reverse
--bold
--underline
--italics
-i
--dim
tputs_writer
s_tputs_receiver_lock
"s_tputs_receiver && ""null s_tputs_receiver"""
null s_tputs_receiver
int tputs_writer(int)
tparm(const_cast<char *>(todo), idx)
[%dm
[%d;5;%dm
"str && ""Empty input string"""
Empty input string
void outputter_t::writestr(const wchar_t *)
Tried to print invalid wide character string
[%d;2;%u;%u;%um
north
east
south
west
page_north
page_south
deselect
/opt/src/src/pager.cpp
remaining >= width_c
unsigned long print_max(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, highlight_spec_t, unsigned long, bool, line_t *)
remaining <= max
denom > 0
unsigned long divide_round_up(unsigned long, unsigned long)
search: 
min_cols_required_for_rows <= cols
560
page_rendering_t pager_t::render() const
unknown non-cardinal direction
653
unknown cardinal direction
734
comp_width <= width
line_t pager_t::completion_print_item(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, const pager_t::comp_t *, unsigned long, unsigned long, unsigned long, bool, bool, page_rendering_t *) const
desc_remaining >= 2
row_stop >= row_start
void pager_t::completion_print(unsigned long, const unsigned long *, unsigned long, unsigned long, const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, const std::vector<pager_t::comp_t, std::allocator<pager_t::comp_t>> &, page_rendering_t *) const
cols > 0
bool pager_t::completion_try_print(unsigned long, const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, const std::vector<pager_t::comp_t, std::allocator<pager_t::comp_t>> &, page_rendering_t *, unsigned long) const
row_count > term_height
start_row <= last_starting_row
stop_row >= start_row
stop_row <= row_count
stop_row - start_row <= term_height
rendering->remaining_to_disclose != 1
%lsand %lu more rows
rows %lu to %lu of %lu
(no matches)
result == PAGER_SELECTION_NONE || result < completion_infos.size()
795
unsigned long pager_t::visual_selected_completion_index(unsigned long, unsigned long) const
/opt/src/src/parse_execution.cpp
specific_statement_type_is_redirectable_block(node)
std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> profiling_cmd_name_for_redirectable_block(const ast::node_t &, const parsed_source_t &)
"source_range.has_value() && ""No source range for block"""
No source range for block
Unexpected block header type
Not a redirectable block type
"src_end >= source_range->start && ""Invalid source end"""
Invalid source end
"associated_block && ""Null block"""
Null block
1474
end_execution_reason_t parse_execution_context_t::eval_node(const ast::job_list_t &, const block_t *)
The function '%ls' calls itself immediately, which would result in an infinite loop.
The function call stack limit has been exceeded. Do you have an accidental infinite loop?
Unexpected node %ls found in %s
offset <= pstree->src.size()
1509
int parse_execution_context_t::line_offset_of_character_at_offset(unsigned long)
'time' is not supported for background jobs. Consider using 'command time'.
"parsed_pipe.has_value() && parsed_pipe->is_pipe && ""Failed to parse valid pipe"""
Failed to parse valid pipe
1159
end_execution_reason_t parse_execution_context_t::populate_job_from_job_node(job_t *, const ast::job_t &, const block_t *)
Illegal file descriptor in redirection '%ls'
!processes.empty()
1186
Unexpected job conjunction type
Unexpected keyword
1422
specific_statement_type_is_redirectable_block(*specific_statement)
1249
end_execution_reason_t parse_execution_context_t::run_1_job(const ast::job_t &, const block_t *)
Parser dying!
"job->group && ""Should have a job group"""
Should have a job group
1328
"oper && oper->is_valid() && ""expected to have a valid redirection"""
Invalid redirection: %ls
Invalid redirection target: %ls
expected to have a valid redirection
966
end_execution_reason_t parse_execution_context_t::determine_redirections(const ast::argument_or_redirection_list_t &, std::vector<redirection_spec_t, std::allocator<redirection_spec_t>> *)
Requested redirection to '%ls', which is not a valid file descriptor
arg_node->has_source()
890
end_execution_reason_t parse_execution_context_t::expand_arguments_from_nodes(const std::vector<const ast::argument_t *, std::allocator<const ast::argument_t *>> &, std::vector<std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>, std::allocator<std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>>> *, parse_execution_context_t::globspec_t)
No matches for wildcard '%ls'. See `help expand`.
unexpected expand_string() return value
921
end begin
end while
"switch_values_expanded.size() <= 1 && ""Should have at most one expansion"""
Should have at most one expansion
524
end_execution_reason_t parse_execution_context_t::run_switch_statement(const ast::switch_statement_t &)
"result == end_execution_reason_t::ok && ""Expected success"""
Expected success
566
else if
end if
Unable to expand variable name '%ls'
You cannot use read-only variable '%ls' in a for loop
retval == ENV_OK
end_execution_reason_t parse_execution_context_t::run_for_statement(const ast::for_header_t &, const ast::job_list_t &)
"retval == ENV_OK && ""for loop variable should have been successfully set"""
for loop variable should have been successfully set
end for
Unexpected block node type
1029
"args_or_redirs && ""Should have args_or_redirs"""
Should have args_or_redirs
job != nullptr
786
end_execution_reason_t parse_execution_context_t::populate_plain_process(job_t *, process_t *, const ast::decorated_statement_t &)
proc != nullptr
787
"!cmd.empty() && ""expand_command should not produce an empty command"""
expand_command should not produce an empty command
801
'%ls' not handled by new parser yet.
1052
end_execution_reason_t parse_execution_context_t::apply_variable_assignments(process_t *, const ast::variable_assignment_list_t &, const block_t **)
1073
"0 && ""Unexpected child block type"""
Unexpected child block type
bool parse_execution_context_t::job_is_simple_block(const ast::job_t &) const
expand_err == expand_result_t::ok
772
end_execution_reason_t parse_execution_context_t::expand_command(const ast::decorated_statement_t &, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> *, std::vector<std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>, std::allocator<std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>>> *) const
The expanded command was empty.
The file '%ls' is not executable by this user
fish_command_not_found
Error reported but no error text found.
end_execution_reason_t parse_execution_context_t::populate_block_process(job_t *, process_t *, const ast::statement_t &, const Type &) [with Type = ast::block_statement_t]
end_execution_reason_t parse_execution_context_t::populate_block_process(job_t *, process_t *, const ast::statement_t &, const Type &) [with Type = ast::if_statement_t]
end_execution_reason_t parse_execution_context_t::populate_block_process(job_t *, process_t *, const ast::statement_t &, const Type &) [with Type = ast::switch_statement_t]
const T &maybe_detail::maybe_impl_t<T>::value() const [with T = end_execution_reason_t]
T &maybe_detail::maybe_impl_t<T>::value() [with T = end_execution_reason_t]
/opt/src/src/parse_tree.cpp
a string
a pipe
a redirection
a '&'
'&&'
'||'
end of the statement
end of the input
a %ls
unknown_keyword
unknown_token_type
errors != nullptr
void parse_error_offset_source_start(std::vector<parse_error_t, std::allocator<parse_error_t>> *, unsigned long)
 <%ls>
std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> parse_error_t::describe_with_prefix(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, bool, bool) const
Unsupported use of '='. In fish, please use 'set %ls %ls'.
line_end >= line_start
source_start >= line_start
/opt/src/src/parse_util.cpp
"!errors.empty() && ""Expected an error"""
Expected an error
1323
lambda [](const std::vector<parse_error_t, std::allocator<parse_error_t>> &)->auto::operator()(const std::vector<parse_error_t, std::allocator<parse_error_t>> &)->auto
!has_unclosed_quote_or_subshell || allow_incomplete
1303
unsigned int parse_util_detect_errors(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, std::vector<parse_error_t, std::allocator<parse_error_t>> *, bool)
Backgrounded commands can not be used as conditionals
"cursor && ""Reached root without finding a job"""
Reached root without finding a job
1077
bool detect_errors_in_decorated_statement(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, const ast::decorated_statement_t &, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> *, std::vector<parse_error_t, std::allocator<parse_error_t>> *)
"job && ""Should have found the job"""
Should have found the job
1080
'return' outside of function definition
'break' while not inside of loop
'continue' while not inside of loop
"index < jlist->count() && ""Should have found the job in the list"""
"(deco->kw == parse_keyword_t::kw_and || deco->kw == parse_keyword_t::kw_or) && ""Unexpected decorator keyword"""
Should have found the job in the list
bool detect_errors_in_backgrounded_job(const ast::job_t &, std::vector<parse_error_t, std::allocator<parse_error_t>> *)
Unexpected decorator keyword
1043
The '%ls' command can not be used immediately after a backgrounded job
"paren_begin < paren_end && ""Parens out of order?"""
Parens out of order?
943
unsigned int parse_util_detect_errors_in_argument(const ast::argument_t &, const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, std::vector<parse_error_t, std::allocator<parse_error_t>> *)
unexpected parse_util_locate_cmdsubst() return value
968
Invalid token '%ls'
$(...) is not supported. In fish, please use '(%ls)'.
var_err_len
792
void parse_util_expand_variable_error(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, unsigned long, unsigned long, std::vector<parse_error_t, std::allocator<parse_error_t>> *)
dollar_pos < token.size()
793
"Variables cannot be bracketed. In fish, please use ""$%ls""."
Variables cannot be bracketed. In fish, please use {$%ls}.
$%lc is not a valid variable in fish.
Expected a variable name after this $.
errors->size() == start_error_count + 1
$? is not the exit status. In fish, please use $status.
$# is not supported. In fish, please use 'count $argv'.
$@ is not supported. In fish, please use $argv.
$* is not supported. In fish, please use $argv.
$$ is not the pid. In fish, please use $fish_pid.
;|
"buff && ""Null buffer"""
Null buffer
void parse_util_token_extent(const wchar_t *, unsigned long, const wchar_t **, const wchar_t **, const wchar_t **, const wchar_t **)
cmdsubst_begin >= buff
cmdsubst_begin <= (buff + bufflen)
cmdsubst_end >= cmdsubst_begin
cmdsubst_end <= (buff + bufflen)
pa >= buff
pa <= (buff + bufflen)
pb >= pa
pb <= (buff + bufflen)
void job_or_process_extent(bool, const wchar_t *, unsigned long, const wchar_t **, const wchar_t **, std::vector<tok_t, std::allocator<tok_t>> *)
cursor_pos >= static_cast<size_t>(begin - buff)
void parse_util_cmdsubst_extent(const wchar_t *, unsigned long, const wchar_t **, const wchar_t **)
cursor_pos <= bufflen
end < cursor
pos <= buff + bufflen
bracket_range_begin != nullptr && bracket_range_begin >= valid_range_start && bracket_range_begin <= valid_range_end
int parse_util_locate_brackets_range(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, unsigned long *, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> *, unsigned long *, unsigned long *, bool, wchar_t, wchar_t)
bracket_range_end != nullptr && bracket_range_end > bracket_range_begin && bracket_range_end >= valid_range_start && bracket_range_end <= valid_range_end
"in && ""null parameter"""
null parameter
int parse_util_locate_brackets_of_type(const wchar_t *, wchar_t **, wchar_t **, bool, wchar_t, wchar_t)
"'"""
void ast::node_visitation_t<NodeVisitor>::accept(const ast::node_t *) [with NodeVisitor = indent_visitor_t]
void ast::node_visitation_t<NodeVisitor>::visit_union_field(ast::union_ptr_t<Types...> &) [with Types = ast::not_statement_t; Types = ast::block_statement_t; Types = ast::if_statement_t; Types = ast::switch_statement_t; Types = ast::decorated_statement_t; NodeVisitor = indent_visitor_t]
void ast::node_visitation_t<NodeVisitor>::visit_union_field(ast::union_ptr_t<Types...> &) [with Types = ast::for_header_t; Types = ast::while_header_t; Types = ast::function_header_t; Types = ast::begin_header_t; NodeVisitor = indent_visitor_t]
void ast::node_visitation_t<NodeVisitor>::visit_union_field(ast::union_ptr_t<Types...> &) [with Types = ast::argument_t; Types = ast::redirection_t; NodeVisitor = indent_visitor_t]
/opt/src/src/parser.cpp
"b.event && ""Should have an event"""
in function '%ls'
 with arguments '%ls'
Should have an event
void append_block_description_to_stack_trace(const parser_t &, const block_t &, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &)
Could not write profiling information to file '%s'
%ls (line %lu): 
%ls: 
fish: 
loc != job_list.end()
void parser_t::job_promote(job_t *)
'while' block
'for' block
'if' conditional block
function invocation block
function invocation block with no variable shadowing
'switch' block
command substitution block
global root block
'begin' unconditional block
block created by the . builtin
event handler block
block created by breakpoint
block created by variable assignment prefixing a command
unknown/invalid block
expected == this->current_block()
void parser_t::pop_block(const block_t *)
"!block_list.empty() && ""empty block list"""
empty block list
%ls (line %d): 
Startup
source_offset >= 0
563
std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> parser_t::current_line()
"(block_type == block_type_t::top || block_type == block_type_t::subst) && ""Invalid block type"""
Invalid block type
676
block_type == block_type_t::top || block_type == block_type_t::subst
eval_res_t parser_t::eval(const std::shared_ptr<const parsed_source_t> &, const io_chain_t &, const std::shared_ptr<job_group_t> &, block_type_t)
"variables.get() && ""Null variables in parser initializer"""
Null variables in parser initializer
parser_t::parser_t(std::shared_ptr<env_stack_t>)
Unable to open the current working directory
578
void parser_t::job_add(std::shared_ptr<job_t>)
!job->processes.empty()
579
"(type == block_type_t::begin || type == block_type_t::top || type == block_type_t::subst) && ""Invalid scope type"""
Invalid scope type
static block_t block_t::scope_block(block_type_t)
substitution
 (line %d)
 (file %ls)
eval_res_t parser_t::eval_node(const std::shared_ptr<const parsed_source_t> &, const T &, const io_chain_t &, const std::shared_ptr<job_group_t> &, block_type_t) [with T = ast::job_list_t]
eval_res_t parser_t::eval_node(const std::shared_ptr<const parsed_source_t> &, const T &, const io_chain_t &, const std::shared_ptr<job_group_t> &, block_type_t) [with T = ast::statement_t]
T &maybe_detail::maybe_impl_t<T>::value() [with T = event_t]
const T &maybe_detail::maybe_impl_t<T>::value() const [with T = event_t]
/opt/src/src/path.cpp
..
trailing <= len
void path_make_canonical(std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &)
Your history will not be saved.
XDG_DATA_HOME
Your personal settings will not be saved.
XDG_CONFIG_HOME
/.config/fish
/.local/share/fish
_FISH_WARNED_
Unable to locate the %ls directory.
Please set the %ls or HOME environment variable before starting fish.
Unable to locate %ls directory derived from $%ls: '%ls'.
The error was '%s'.
Please set $%ls to a directory where you have write access.
!wd.empty() && wd.back() == L'/'
maybe_t<std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>> path_get_cdpath(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, const environment_t &)
path_get_paths('%ls')
Error while searching for command '%ls'
/usr/bin
/opt/src/src/postfork.cpp
#! /
#!/
Failed to execute process '%s'. Reason:
The total size of the argument and environment lists %s exceeds the operating system limit of %s.
One of your arguments exceeds the operating system's argument length limit.
The total size of the argument and environment lists (%s) exceeds the operating system limit.
Try running the command again with fewer arguments.
exec: %s
The file '%s' is marked as an executable but could not be run by the operating system.
The file '%s' specified the interpreter '%s', which is not an executable command.
The file '%s' does not exist or could not be executed.
Out of memory
waiting for threads to drain.
Could not create child process - exiting
redirect_in_child_after_fork failed in child_setup_process
setpgid(2) returned EPERM. Retrying
Could not send own process %s, '%s' in job %s, '%s' from group %s to group %s
Please update to Windows 10 1809/17763 or higher to address known issues with process groups and zombie processes.
"j->group->needs_pgid_assignment() && ""We should be expecting a pgid"""
We should be expecting a pgid
posix_spawner_t::posix_spawner_t(const job_t *, const dup2_list_t &)
fish -c '__fish_print_help %s >&%d'
/opt/src/src/proc.cpp
More than one job in foreground: job 1: '%ls' job 2: '%ls'
Process argument list
Process name
Job '%ls', process '%ls' has inconsistent state 'stopped'=%d
Job '%ls', process '%ls' has inconsistent state 'completed'=%d
terminal_return_from_job() returning early due to no process group
fish reclaiming terminal after job pgid
Could not return shell to foreground
notneeded
terminal_give_to_job() returning early due to no process group
tcsetpgrp failed: %d
Process group %d already has control of terminal
Could not send job %d ('%ls') with pgid %d to foreground
FN_SIZE
/proc/%d/stat
%9d %1023s %c %9d %9d %9d %9d %9d %9lu %9lu %9lu %9lu %9lu %9lu %9lu %9ld %9ld %9ld %9ld %9ld %9ld %9lu %9lu %9ld %9lu %9lu %9lu %9lu %9lu %9lu %9lu %9lu %9lu %9lu %9lu %9lu %9lu %9d %9d 
process_clean_after_marking
JOB_ENDED
JOB_STOPPED
JOB_EXIT
STOPPED
ENDED
fish_job_summary
process_mark_finished_children
"pid == proc->pid && ""Unexpcted waitpid() return"""
proc->status.stopped() || proc->status.continued()
"0 && ""Don't know how to reap this process"""
Reaped internal process '%ls' (id %llu, status %d)
Unexpcted waitpid() return
void process_mark_finished_children(parser_t &, bool)
Reaped external process '%ls' (pid %d, status %d)
External process '%ls' (pid %d, %s)
Don't know how to reap this process
521
jid > 0
void release_job_id(int)
"where != consumed_job_ids->end() && ""JobID was not in use"""
JobID was not in use
/proc/self/stat
"!job->group && ""Job already has a group"""
Job already has a group
static void job_group_t::populate_group_for_job(job_t *, const std::shared_ptr<job_group_t> &)
"needs_pgid_assignment() && ""We should not be setting a pgid"""
We should not be setting a pgid
void job_group_t::set_pgid(int)
"pgid >= 0 && ""Invalid pgid"""
Invalid pgid
killpg(%d, %s)
%ls job %d, gid %d (%ls), %ls, %ls
Continue
Start
COMPLETED
UNCOMPLETED
INTERACTIVE
NON-INTERACTIVE
Failed to send SIGCONT to any processes in pgroup %d!
bool job_t::is_completed() const
"!is_constructed() && ""Job was already constructed"""
Job was already constructed
void job_t::mark_constructed()
"false && ""The fish developers forgot to include a process_t. Please report a bug"""
The fish developers forgot to include a process_t. Please report a bug
bool process_t::is_internal() const
"false && ""process_t::is_internal: Total logic failure, universe is broken. Please replace "" ""universe and retry."""
process_t::is_internal: Total logic failure, universe is broken. Please replace universe and retry.
"!exited() && ""Process is already exited"""
Process is already exited
void internal_proc_t::mark_exited(proc_status_t)
Internal proc
exited with status
const T &maybe_detail::maybe_impl_t<T>::value() const [with T = termios]
T &maybe_detail::maybe_impl_t<T>::value() [with T = topic_t]
T &maybe_detail::maybe_impl_t<T>::value() [with T = termios]
vector::_M_fill_insert
/opt/src/src/reader.cpp
amt == -1
3863
int read_ni(parser_t &, int, const io_chain_t &)
Unable to read input file: %s
fish_breakpoint_prompt
fish_prompt
"echo -n ""$USER@$hostname $PWD ""'> '"
fish_right_prompt
fish_preexec
fish_postexec
HISTFILE
~/.bash_history
"!reader_data_stack.empty() && ""empty stack in reader_data_stack"""
empty stack in reader_data_stack
2369
void reader_pop()
current_data
"!reader_data_stack.empty() && ""no current reader"""
no current reader
2343
reader_data_t *current_data()
current_data_or_null
secs
CMD_DURATION
reader_interactive_init
Failed to assign shell to its own process group
Failed to take control of the terminal
Failed to set startup terminal mode!
acquire_tty_or_exit
No TTY for interactive shell (tcgetpgrp failed)
I appear to be an orphaned process, so I am quitting politely. My pid is %d.
killpg(shell_pgid, SIGTTIN)
$*?({})
insertion_point > 0
1424
std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> completion_apply_to_command_line(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, int, const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, unsigned long *, bool)
"echo (status current-command) "" "" $PWD"
fish_title
]0;

cmdsub_begin != nullptr && cmdsub_begin >= buff
945
maybe_t<edit_t> reader_expand_abbreviation_in_command(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, unsigned long, const environment_t &)
cmdsub_end != nullptr && cmdsub_end >= cmdsub_begin
"!matching_cmd_node->unsourced && ""Should not be unsourced"""
Should not be unsourced
985
Could not set terminal mode for shell
Could not set terminal mode for new job
!el.undo_history.edits.empty()
bool want_to_coalesce_insertion_of(const editable_line_t &, const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &)
kHighlightTimeoutMs
kAutosuggetTimeoutMs
history_search.by_line() || history_search.by_prefix()
2088
void reader_data_t::update_command_line_from_history_search()
el == &command_line
2092
!use_prefix || !common_prefix.empty()
1801
bool reader_data_t::handle_completions(const std::vector<completion_t, std::allocator<completion_t>> &, unsigned long, unsigned long)
fish_mode_prompt
highlight_complete
result.colors.size() == command_line.size()
2263
void reader_data_t::highlight_complete(<unnamed>::highlight_result_t)
el != nullptr
2299
void reader_data_t::super_highlight_me_plenty(int, bool)
match_highlight_pos >= 0
2301
end >= begin
base_pos_new != static_cast<size_t>(-1) && base_pos_old != static_cast<size_t>(-1)
fish_color_cancel
^C
2881
void reader_data_t::handle_readline_command(readline_cmd_t, readline_loop_state_t &)
2910
fish_posterror
MOVE_DIR_LEFT
MOVE_DIR_RIGHT
3231
should have been handled by inputter_t::readch
3535
"(event_needing_handling->is_char() || event_needing_handling->is_readline()) && ""Should have a char or readline"""
Should have a char or readline
3615
maybe_t<std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>> reader_data_t::readline(int)
Unknown key binding 0x%X
el->position() > 0
bool reader_data_t::insert_string(editable_line_t *, const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &)
pager_selection_changed
command_line_changed
inactive
"mode != inactive && ""mode cannot be inactive in this setter"""
mode cannot be inactive in this setter
void <unnamed>::reader_history_search_t::reset_to_mode(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, history_t *, <unnamed>::reader_history_search_t::mode_t)
"match_index_ < matches_.size() && ""Invalid match index"""
Invalid match index
const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &<unnamed>::reader_history_search_t::current_result() const
"match_index_ < matches_.size() && ""Should have found more matches"""
Should have found more matches
bool <unnamed>::reader_history_search_t::move_backwards()
undo_history.edits_applied == undo_history.edits.size()
void editable_line_t::push_edit(edit_t &&)
till
to
T maybe_detail::maybe_impl_t<T>::acquire() [with T = <unnamed>::autosuggestion_result_t]
T maybe_detail::maybe_impl_t<T>::acquire() [with T = <unnamed>::highlight_result_t]
const T &maybe_detail::maybe_impl_t<T>::value() const [with T = readline_cmd_t]
T &maybe_detail::maybe_impl_t<T>::value() [with T = edit_t]
T &maybe_detail::maybe_impl_t<T>::value() [with T = screen_data_t::cursor_t]
T &maybe_detail::maybe_impl_t<T>::value() [with T = <unnamed>::highlight_result_t]
T &maybe_detail::maybe_impl_t<T>::value() [with T = <unnamed>::autosuggestion_result_t]
/opt/src/src/redirection.cpp
Not a file redirection
The pointer '%ls' is invalid
The pointer '%ls' is null
Errors detected, shutting down. Break on sanity_lose() to debug.
/opt/src/src/screen.cpp
"s && ""Null screen"""
Null screen
1231
void s_reset_abandoning_line(screen_t *, int)
1202
void s_reset_line(screen_t *, bool)
prompt_line_count >= 1
1215
Repaint %u
left_prompt_width + right_prompt_width <= screen_width
screen_layout_t compute_layout(screen_t *, unsigned long, const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &)
!width_by_offset.empty() && width_by_offset.at(0) == 0
930
unsigned long truncation_offset_for_width(const std::vector<unsigned long, std::allocator<unsigned long>> &, unsigned long)
631
571
multi_param
596
599
"!is_run_terminator(c) && ""Should not have run terminator inside run"""
Should not have run terminator inside run
void truncate_run(std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> *, unsigned long, unsigned long *, layout_cache_t &)
\
unexpectedly fell off end of try_sequence()
code != nullptr
unsigned long layout_cache_t::escape_code_length(const wchar_t *)
Unknown
Terminal hung up
Quit request from job control (^C)
Quit request from job control with core dump (^\)
Illegal instruction
Trace or breakpoint trap
Abort
Misaligned address error
Floating point exception
Forced quit
User defined signal 1
User defined signal 2
Address boundary error
Broken pipe
Timer expired
Polite quit request
Child process status changed
Continue previously stopped process
Forced stop
Stop request from job control (^Z)
Stop from terminal input
Stop from terminal output
Urgent socket condition
CPU time limit exceeded
File size limit exceeded
Virtual timer expired
Profiling timer expired
Window size change
I/O on asynchronous file descriptor is possible
Power failure
Bad system call
SISTKFLT
Stack fault
Abort (Alias for SIGABRT)
21523
const T &maybe_detail::maybe_impl_t<T>::value() const [with T = termsize_t]
T &maybe_detail::maybe_impl_t<T>::value() [with T = termsize_t]
60.0
mins
millis
micros
900
999995
TOK_END
TE_CONSTANT
TE_FUNCTION0
TE_FUNCTION1
TE_FUNCTION2
TE_FUNCTION3
TOK_INFIX
TOK_NUMBER
TOK_OPEN
TOK_CLOSE
TOK_ERROR
TOK_SEP
TOK_NULL
npr
ncr
fac
2.718281828459045091
pi
3.141592653589793116
sizeof(te_expr *)
sizeof(te_expr)
/opt/src/src/tokenizer.cpp
"*cursor == c && ""Failed to consume char"""
Failed to consume char
lambda [](wchar_t)->auto::operator()(wchar_t)->auto
has_some_variable_identifier
"start < end && ""String cannot be empty"""
String cannot be empty
int parse_fd(const wchar_t *, const wchar_t *)
"L'0' <= *cursor && *cursor <= L'9' && ""Not a digit"""
Not a digit
"big_fd <= INT_MAX && ""big_fd should be in range"""
big_fd should be in range
Unexpected end of string, quotes are not balanced
Unexpected end of string, expecting ')'
Unexpected end of string, square brackets do not match
Unexpected end of string, incomplete escape sequence
Invalid input/output redirection
Cannot use stdin (fd 0) as pipe output
|& is not valid. In fish, use &| to pipe both stdout and stderr.
Unexpected ')' for unopened parenthesis
Unexpected '[' at this location
Unexpected '}' for unopened brace expansion
Unexpected end of string, incomplete parameter expansion
Unexpected '}' found, expecting ')'
Unexpected ')' found, expecting '}'
"0 && ""Unexpected tokenizer error"""
Unexpected tokenizer error
const wchar_t *tokenizer_get_error_message(tokenizer_error_t)
should not reach this statement
858
s_always_one
s_blank
s_graph
s_end
"/={,}'"":@"
s_initial_punctuation
s_whitespace
s_separator
s_slash
s_path_component_characters
s_rest
s_whitespace_rest
s_alphanumeric
"redir.has_value() && ""Should always succeed to parse a &> or &| redirection"""
"pipe.has_value() && pipe->is_pipe && ""Should always succeed to parse a | pipe"""
Should always succeed to parse a &> or &| redirection
maybe_t<tok_t> tokenizer_t::next()
Should always succeed to parse a | pipe
"result.has_value() && ""Should have a token"""
Should have a token
650
"start != nullptr && ""Invalid start"""
Invalid start
tokenizer_t::tokenizer_t(const wchar_t *, unsigned int)
!paran_offsets.empty()
!brace_offsets.empty()
tok_t tokenizer_t::read_string()
Unknown non-regular-text mode
"error_type != tokenizer_error_t::none && ""tokenizer_error_t::none passed to call_error"""
tokenizer_error_t::none passed to call_error
tok_t tokenizer_t::call_error(tokenizer_error_t, const wchar_t *, const wchar_t *, maybe_t<unsigned long>)
"error_loc >= token_start && ""Invalid error location"""
Invalid error location
"this->token_cursor >= token_start && ""Invalid buff location"""
Invalid buff location
"this->token_cursor < error_loc + *token_length && ""Unable to continue past error"""
Unable to continue past error
"*cursor != L'|' && ""|| passed as redirection, this should have been handled as 'or' by the caller"""
|| passed as redirection, this should have been handled as 'or' by the caller
static maybe_t<pipe_or_redir_t> pipe_or_redir_t::from_string(const wchar_t *)
"result.consumed > 0 && ""Should have consumed at least one character on success"""
Should have consumed at least one character on success
regular_text
subshell
array_brackets
curly_braces
char_escape
/opt/src/src/topic_monitor.cpp
"gens->at(topic) <= current.at(topic) && ""Incoming gen count exceeded published count"""
Incoming gen count exceeded published count
enum_set_t<topic_t> topic_monitor_t::check(enum_array_t<unsigned long, topic_t> *, enum_set_t<topic_t>, bool)
"pipes.has_value() && ""Failed to make pubsub pipes"""
Failed to make pubsub pipes
topic_monitor_t::topic_monitor_t()
make_fd_nonblocking(pipes_.write.fd())
"gens == input_gens && ""Generations should not have changed if we are the reader."""
"data->has_reader && ""We should be the reader"""
Generations should not have changed if we are the reader.
enum_array_t<unsigned long, topic_t> topic_monitor_t::await_gens(const enum_array_t<unsigned long, topic_t> &)
TID
local mgen
read() complete, current mgen is
We should be the reader
: current
Updating topic
T maybe_detail::maybe_impl_t<T>::acquire() [with T = autoclose_pipes_t]
fish_trace
/opt/src/src/utf8.cpp
2047
2097151
invalid wide char
unexpected utff8 len
sizeof(utf8_wchar_t)
/opt/src/src/util.cpp
"a && b && ""Null parameter"""
*b == 0
_S_buffer_length
_S_putback_length
/opt/src/src/wcstringutil.cpp
Fuzzy
"prefix != wcstring::npos && ""Should have one non-trimmed character"""
Should have one non-trimmed character
/opt/src/src/wildcard.cpp
output != nullptr
986
wildcard_expand_result_t wildcard_expand_string(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, enum_set_t<expand_flag>, const std::function<bool ()> &, std::vector<completion_t, std::allocator<completion_t>> *)
flags.get(expand_flag::for_completions) || !flags.get(expand_flag::fuzzy_match)
988
!(flags.get(expand_flag::special_for_cd)) || ((flags.get(expand_flag::directories_only)) && (flags.get(expand_flag::for_completions)) && (flags.get(expand_flag::no_descriptions)))
995
.dll
File
Symbolic link to directory
Executable link
Symbolic link
Rotten symbolic link
Symbolic link loop
Character device
Block device
Fifo
Socket
Directory
Executable
wc != nullptr
bool wildcard_complete(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, const wchar_t *, const std::function<std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> (const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &)> &, std::vector<completion_t, std::allocator<completion_t>> *, enum_set_t<expand_flag>, int)
bool wildcard_complete_internal(const wchar_t *, unsigned long, const wchar_t *, unsigned long, const wc_complete_pack_t &, int, std::vector<completion_t, std::allocator<completion_t>> *, bool)
!full_replacement || wc_len <= str_len
next_wc_char_pos == 0
unreachable code reached
bool wildcard_has(const wchar_t *, bool)
bool wildcard_has_impl(const wchar_t *, unsigned long, bool)
895
void wildcard_expander_t::expand(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, const wchar_t *, const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &)
!segment_has_wildcards
next_slash != nullptr
this->flags & expand_flag::for_completions
!wc_segment.empty() && (segment_has_wildcards || is_last_segment)
head_any.at(head_any.size() - 1) == ANY_STRING_RECURSIVE
any_tail[0] == ANY_STRING_RECURSIVE
923
939
948
956
969
970
resolved_completions != nullptr
wildcard_expander_t::wildcard_expander_t(std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>, enum_set_t<expand_flag>, std::function<bool ()>, std::vector<completion_t, std::allocator<completion_t>> *)
651
void wildcard_expander_t::try_add_completion_result(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &)
!start_point.empty() && start_point.at(0) == L'/'
603
std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> wildcard_expander_t::descend_unique_hierarchy(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &)
!(this->flags & expand_flag::for_completions)
void wildcard_expander_t::add_expansion_result(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &)
before <= after
843
void wildcard_expander_t::expand_literal_intermediate_segment_with_fuzz(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, __dirstream *, const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, const wchar_t *, const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &)
/opt/src/src/wutil.cpp
"narrow_endptr && ""narrow_endptr should not be null"""
narrow_endptr should not be null
740
double fish_wcstod(const wchar_t *, wchar_t **)
63744
1048574
1114110
/usr/local/share/locale
"!wd.empty() && wd.front() == sep && wd.back() == sep && ""Invalid working directory, it must start and end with /"""
Invalid working directory, it must start and end with /
std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> path_normalize_for_cd(const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &, const std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> &)
unknown error (errno was 
26985
20859
4266872130
4283649346
getcwd() failed with errno %d/%s
variable access
call to size
call to min
call to none
call to max
call to _S_propagate_on_move_assign
call to _S_always_equal
call to _S_use_relocate
call to _S_nothrow_relocate
call to eof
call to operator|
call to __atomic_is_lock_free
call to __builtin_nansl
call to __builtin_nanl
call to __builtin_huge_vall
call to __builtin_nans
call to __builtin_nan
call to __builtin_huge_val
call to __builtin_nansf
call to __builtin_nanf
call to __builtin_huge_valf
call to operator<
call to zero
call to enum_count
call to w_exitcode
call to _MoveConstructiblePair
call to _ImplicitlyMoveConvertiblePair
call to _S_propagate_on_copy_assign
call to __assignable
call to lowest
call to __lg
call to __deque_buf_size
call to strlen
call to __builtin_inff
alignof(_Nocopy_types)
alignof(proc_status_t)
alignof(..(*)(..))
alignof(_Setter<void, __exception_ptr_tag>)
alignof(_Setter<void, void>)
alignof(bool)
alignof(char)
alignof(signed char)
alignof(unsigned char)
alignof(short)
alignof(unsigned short)
alignof(int)
alignof(unsigned int)
alignof(long)
alignof(unsigned long)
alignof(long long)
alignof(unsigned long long)
alignof(wchar_t)
alignof(char16_t)
alignof(char32_t)
alignof(lambda [] type at line 146522, col. 36)
alignof(lambda [] type at line 154915, col. 29)
alignof(lambda [] type at line 154963, col. 25)
alignof(lambda [] type at line 154944, col. 37)
alignof(lambda [] type at line 154262, col. 28)
alignof(lambda [] type at line 154237, col. 38)
alignof(lambda [] type at line 154067, col. 22)
alignof(lambda [] type at line 153532, col. 12)
alignof(lambda [] type at line 150557, col. 30)
alignof(lambda [] type at line 150280, col. 25)
alignof(lambda [] type at line 150130, col. 16)
alignof(lambda [] type at line 150119, col. 16)
alignof(lambda [] type at line 150044, col. 37)
alignof(lambda [] type at line 149742, col. 31)
alignof(lambda [] type at line 101876, col. 21)
alignof(lambda [] type at line 149720, col. 39)
alignof(lambda [] type at line 172408, col. 60)
alignof(lambda [] type at line 172363, col. 26)
alignof(lambda [] type at line 140078, col. 21)
alignof(lambda [] type at line 100272, col. 26)
alignof(lambda [] type at line 148145, col. 25)
alignof(lambda [] type at line 147997, col. 21)
alignof(lambda [] type at line 147262, col. 29)
alignof(lambda [] type at line 146894, col. 12)
alignof(lambda [] type at line 153223, col. 30)
alignof(lambda [] type at line 152907, col. 29)
alignof(job_control_t)
alignof(session_interactivity_t)
alignof(lambda [] type at line 148893, col. 28)
alignof(lambda [] type at line 148892, col. 25)
alignof(lambda [] type at line 161827, col. 12)
alignof(lambda [] type at line 161456, col. 28)
alignof(lambda [] type at line 161027, col. 12)
alignof(lambda [] type at line 159687, col. 39)
alignof(lambda [] type at line 144531, col. 13)
alignof(lambda [] type at line 144529, col. 27)
array to pointer conversion
... - ...
... == ...
... * ...
... && ...
... < ...
... + ...
... > ...
... <= ...
... >= ...
... / ...
... != ...
... || ...
... << ...
... & ...
... % ...
... >> ...
... | ...
__has_trivial_destructor
__is_empty
__is_final
__is_pod
__is_trivially_copyable
(int)...
(unsigned long long)...
(long long)...
(unsigned long)...
(long)...
(unsigned int)...
(bool)...
(void *)...
(const void *)...
(_Distance)...
(size_t)...
(double)...
(size_t *)...
(size_type)...
(pointer)...
(..(*)(..))...
(const wchar_t *)...
(const char *)...
(const node_t *)...
(uint32_t)...
(parse_tree_flags_t)...
(parse_error_list_t *)...
(unescape_flags_t)...
(tok_flags_t)...
(argument_t *)...
(redirection_t *)...
(job_conjunction_t *)...
(keyword_t<kw_and, kw_or> *)...
(keyword_t<kw_time> *)...
(const contents_ptr_t *)...
(variable_assignment_t *)...
(job_continuation_t *)...
(token_t<background> *)...
(job_conjunction_continuation_t *)...
(token_t<end> *)...
(keyword_t<kw_command, kw_builtin, kw_exec> *)...
(argument_or_redirection_t *)...
(andor_job_t *)...
(elseif_clause_t *)...
(else_clause_t *)...
(case_item_t *)...
(const token_base_t *)...
(const keyword_base_t *)...
(ptrdiff_t)...
(mbstate_t *)...
(wchar_t *)...
(wint_t)...
(const pthread_mutexattr_t *)...
(const pthread_attr_t *)...
(int_type)...
(const char_type *)...
(char **)...
(__float128)...
(__int128)...
(unsigned char)...
(char)...
(char *)...
(difference_type)...
(element_type *)...
(const volatile void *)...
(unsigned __int128)...
(unsigned short)...
(short)...
(char32_t)...
(char16_t)...
(wchar_t)...
(signed char)...
(__node_type *)...
(long double)...
(float)...
(__bucket_type *)...
(__node_base *)...
(iterator)...
(_DistanceType)...
(value_type)...
(_Manager_type)...
(intmax_t)...
(uintmax_t)...
(time_t)...
(_Bit_type *)...
(_Bit_type)...
(const config_paths_t *)...
(env_mode_flags_t)...
(vector<event_t, allocator<event_t>> *)...
(const wchar_t **)...
(mode_t)...
(_Link_type)...
(_Base_ptr)...
(native_handle_type)...
(nullptr_t)...
(const wcstring_list_t *)...
(_WordT)...
(__c_locale)...
(category)...
(mask)...
(const mask *)...
(const wchar_t *const *)...
(lru_node_t *)...
(escape_flags_t)...
(const env_var_t *)...
(time_point<steady_clock, duration<signed long, ratio<1L, 1000000000L>>> *)...
(signed long)...
(_Hash_node_base *)...
(_Sp_counted_base<_S_atomic> *)...
(wchar_t **)...
(const wcstring *)...
(_Rb_tree_node_base *)...
(__bucket_type)...
(const argument_t *)...
(const argument_or_redirection_t *)...
(const variable_assignment_t *)...
(const job_conjunction_t *)...
(const job_conjunction_continuation_t *)...
(const job_continuation_t *)...
(const andor_job_t *)...
(const elseif_clause_t *)...
(const case_item_t *)...
(_Const_Link_type)...
(mutex_type *)...
(wcstring *)...
(const editable_line_t *)...
(completion_list_t *)...
(const builtin_data_t *)...
(const block_t *)...
(int *)...
(__size_type)...
(const woption *)...
(job_t *)...
(const job_t *)...
(block_t *)...
(vector<tok_t, allocator<tok_t>> *)...
(history_search_flags_t)...
(history_identifier_t)...
(timezone *)...
(__uctype)...
(_Type)...
(result_type)...
(__off_t)...
(TERMINAL *)...
(pcre2_match_context_32 *)...
(pcre2_code_32 *)...
(pcre2_compile_context_32 *)...
(pcre2_general_context_32 *)...
(pcre2_match_data_32 *)...
(__rlim_t)...
(uint8_t)...
(__sighandler_t)...
(ssize_t)...
(const complete_entry_opt_t *)...
(complete_flags_t)...
(__integral_type)...
(const completion_t *)...
(completion_t *)...
(__mode_t)...
(const electric_var_t *)...
(env_var_flags_t)...
(env_universal_t *)...
(color_support_t)...
(const var_dispatch_table_t *)...
(const line_t *)...
(cmsghdr *)...
(string *)...
(__fd_mask)...
(fd_set *)...
(sig_atomic_t)...
(wcstring_list_t *)...
(process_t *)...
(pid_t)...
(history_t *)...
(timeval *)...
(__time_t)...
(__suseconds_t)...
(uint64_t)...
(FILE *)...
(__rusage_who_t)...
(gap_flags_t)...
(const optional_t<token_t<end>> *)...
(const andor_job_list_t *)...
(const semi_nl_t *)...
(const fth_command_t *)...
(const sigset_t *)...
(__useconds_t)...
(const function_info_t *)...
(const metadata_t *)...
(path_flags_t)...
(const decorated_statement_t *)...
(DIR *)...
(bool *)...
(history_item_t *)...
(time_t *)...
(history_impl_t *)...
(__int_type)...
(const input_mapping_t *)...
(vector<terminfo_mapping_t, allocator<terminfo_mapping_t>> *)...
(default_delete<io_fd_t> *)...
(default_delete<io_close_t> *)...
(pthread_t)...
(__sigset_t *)...
(outputter_t *)...
(profile_item_t *)...
(const job_list_t *)...
(const argument_or_redirection_list_t *)...
(parser_t *)...
(decorated_statement_t *)...
(const for_header_t *)...
(const while_header_t *)...
(const function_header_t *)...
(const begin_header_t *)...
(const block_statement_t *)...
(const if_statement_t *)...
(const switch_statement_t *)...
(parser_test_error_bits_t)...
(token_type_t *)...
(const if_clause_t *)...
(value_type *)...
(const value_type *)...
(__syscall_slong_t)...
(timespec *)...
(sigset_t *)...
(const sigaction *)...
(sigaction *)...
(int64_t)...
(reader_data_t *)...
(const string_t *)...
(cc_t)...
(const prompt_cache_entry_t *)...
(te_expr *)...
(const te_expr **)...
(const te_builtin *)...
(generation_t)...
(base_type_t)...
(const utf8_wchar_t *)...
(utf8_wstring_t *)...
(wstring *)...
(streamsize)...
(__gid_t *)...
(const completion_list_t *)...
(locale_t)...
(dirent *)...
... ? ... : ...
noexcept(...)
(...)
reinterpret_cast<void *>...
sizeof(<expr>)
sizeof(unsigned int)
sizeof(char)
sizeof(unsigned long *)
sizeof(const char *)
sizeof(bool)
sizeof(const wchar_t *)
sizeof(unsigned char)
sizeof(signed char)
sizeof(unsigned short)
sizeof(short)
sizeof(void *)
sizeof(wchar_t *)
sizeof(char *)
sizeof(..(*)(..))
sizeof(event_type_t)
sizeof(topic_t)
sizeof(readline_cmd_t)
sizeof(highlight_role_t)
sizeof(token_t)
sizeof(history_file_type_t)
sizeof(function<..(..)>)
sizeof(function<..(..)> *)
sizeof(job_control_t)
sizeof(session_interactivity_t)
sizeof(basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>)
sizeof(basic_string<char, char_traits<char>, allocator<char>>)
sizeof(parse_error_t)
sizeof(unique_ptr<case_item_t, default_delete<case_item_t>>)
sizeof(unique_ptr<elseif_clause_t, default_delete<elseif_clause_t>>)
sizeof(unique_ptr<andor_job_t, default_delete<andor_job_t>>)
sizeof(unique_ptr<argument_or_redirection_t, default_delete<argument_or_redirection_t>>)
sizeof(unique_ptr<argument_t, default_delete<argument_t>>)
sizeof(unique_ptr<job_conjunction_t, default_delete<job_conjunction_t>>)
sizeof(unique_ptr<job_conjunction_continuation_t, default_delete<job_conjunction_continuation_t>>)
sizeof(unique_ptr<job_continuation_t, default_delete<job_continuation_t>>)
sizeof(unique_ptr<variable_assignment_t, default_delete<variable_assignment_t>>)
sizeof(dup2_list_t)
sizeof(action_t)
sizeof(source_range_t)
sizeof(const node_t *)
sizeof(tok_t)
sizeof(pipe_or_redir_t)
sizeof(vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>)
sizeof(const argument_t *)
sizeof(job_t *)
sizeof(_Sp_counted_ptr_inplace<_State_baseV2, allocator<_State_baseV2>, _S_atomic>)
sizeof(_Sp_counted_ptr_inplace<mutex, allocator<mutex>, _S_atomic>)
sizeof(_Sp_counted_ptr_inplace<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _S_atomic>)
sizeof(pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>)
sizeof(time_point<steady_clock, duration<signed long, ratio<1L, 1000000000L>>>)
sizeof(pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>)
sizeof(pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>)
sizeof(block_t)
sizeof(block_t *)
sizeof(shared_ptr<job_t>)
sizeof(shared_ptr<job_t> *)
sizeof(_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, known_file_t>, true>)
sizeof(_Hash_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, true>)
sizeof(_Hash_node_base *)
sizeof(_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, file_id_t>, true>)
sizeof(_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, lru_node_t>>)
sizeof(unique_ptr<profile_item_t, default_delete<profile_item_t>>)
sizeof(event_t)
sizeof(shared_ptr<event_t>)
sizeof(event_blockage_t)
sizeof(_List_node<event_blockage_t>)
sizeof(unique_ptr<process_t, default_delete<process_t>>)
sizeof(concrete_assignment)
sizeof(redirection_spec_t)
sizeof(element_t)
sizeof(shared_ptr<const io_data_t>)
sizeof(__gid_t)
sizeof(__cpu_mask)
sizeof(uintmax_t)
sizeof(fd_set)
sizeof(__fd_mask)
sizeof(env_var_t)
sizeof(autoloadable_file_t)
sizeof(termios)
sizeof(_Setter<void, __exception_ptr_tag>)
sizeof(_Setter<void, void>)
sizeof(const category_t *)
sizeof(autoclose_pipes_t)
sizeof(shared_ptr<event_handler_t>)
sizeof(event_description_t)
sizeof(proc_status_t)
sizeof(pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>)
sizeof(end_execution_reason_t)
sizeof(category_t *)
sizeof(_Sp_counted_ptr_inplace<io_fd_t, allocator<io_fd_t>, _S_atomic>)
sizeof(char_event_t)
sizeof(char_event_t *)
sizeof(completion_t)
sizeof(edit_t)
sizeof(vector<wchar_t, allocator<wchar_t>>)
sizeof(input_mapping_name_t)
sizeof(highlight_spec_t)
sizeof(woption)
sizeof(pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>)
sizeof(_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, wchar_t>, true>)
sizeof(_Hash_node<pair<const wchar_t, unique_ptr<option_spec_t, default_delete<option_spec_t>>>, false>)
sizeof(_Rb_tree_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>)
sizeof(_Sp_counted_ptr_inplace<const autoclose_fd_t, allocator<autoclose_fd_t>, _S_atomic>)
sizeof(lambda [] type at line 146522, col. 36)
sizeof(_Rb_tree_node<job_t *>)
sizeof(pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>)
sizeof(_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>)
sizeof(_Sp_counted_ptr_inplace<function_properties_t, allocator<function_properties_t>, _S_atomic>)
sizeof(_Sp_counted_ptr_inplace<event_handler_t, allocator<event_handler_t>, _S_atomic>)
sizeof(termsize_t)
sizeof(history_item_t)
sizeof(history_item_t *)
sizeof(_Rb_tree_node<long>)
sizeof(pair<const char, ..(..)>)
sizeof(unique_ptr<expression, default_delete<expression>>)
sizeof(pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>)
sizeof(_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, const token_info_t>>)
sizeof(named_color_t)
sizeof(reference_wrapper<const completion_entry_t>)
sizeof(complete_entry_opt)
sizeof(list<complete_entry_opt, allocator<complete_entry_opt>>)
sizeof(pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>)
sizeof(lambda [] type at line 154237, col. 38)
sizeof(lambda [] type at line 153532, col. 12)
sizeof(lambda [] type at line 154915, col. 29)
sizeof(lambda [] type at line 154944, col. 37)
sizeof(lambda [] type at line 154963, col. 25)
sizeof(lambda [] type at line 154067, col. 22)
sizeof(lambda [] type at line 154262, col. 28)
sizeof(_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, true>)
sizeof(_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, bool>, true>)
sizeof(_Hash_node<completion_entry_t, false>)
sizeof(_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, true>)
sizeof(_List_node<complete_entry_opt>)
sizeof(_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>)
sizeof(_Rb_tree_node<pair<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>)
sizeof(electric_var_t)
sizeof(callback_data_t)
sizeof(shared_ptr<env_node_t>)
sizeof(_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, env_var_t>, true>)
sizeof(_Sp_counted_ptr_inplace<env_scoped_impl_t, allocator<env_scoped_impl_t>, _S_atomic>)
sizeof(_Sp_counted_ptr_inplace<env_node_t, allocator<env_node_t>, _S_atomic>)
sizeof(_Sp_counted_ptr_inplace<null_terminated_array_t<char>, allocator<null_terminated_array_t<char>>, _S_atomic>)
sizeof(_Sp_counted_ptr_inplace<const vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, allocator<vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>, _S_atomic>)
sizeof(line_t)
sizeof(highlighted_char_t)
sizeof(prompt_cache_entry_t)
sizeof(cursor_t)
sizeof(_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function<..(..)>>, true>)
sizeof(_List_node<prompt_cache_entry_t>)
sizeof(cmsghdr)
sizeof(sockaddr)
sizeof(in_addr)
sizeof(in_port_t)
sizeof(pair<reference_wrapper<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, reference_wrapper<const env_var_t>>)
sizeof(_Sp_counted_ptr_inplace<event_t, allocator<event_t>, _S_atomic>)
sizeof(posix_spawn_file_actions_t)
sizeof(posix_spawnattr_t)
sizeof(timer_snapshot_t)
sizeof(lambda [] type at line 150557, col. 30)
sizeof(lambda [] type at line 150280, col. 25)
sizeof(lambda [] type at line 150119, col. 16)
sizeof(lambda [] type at line 150130, col. 16)
sizeof(lambda [] type at line 150044, col. 37)
sizeof(lambda [] type at line 149742, col. 31)
sizeof(_Sp_counted_ptr_inplace<write_fields_t, allocator<write_fields_t>, _S_atomic>)
sizeof(_Sp_counted_ptr_inplace<internal_proc_t, allocator<internal_proc_t>, _S_atomic>)
sizeof(_Sp_counted_ptr_inplace<io_pipe_t, allocator<io_pipe_t>, _S_atomic>)
sizeof(_Sp_counted_ptr_inplace<io_close_t, allocator<io_close_t>, _S_atomic>)
sizeof(_Hash_node<pair<const long, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, false>)
sizeof(fd_monitor_item_t)
sizeof(lambda [] type at line 101876, col. 21)
sizeof(token_range_t)
sizeof(fth_command_t)
sizeof(pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>)
sizeof(_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, function_info_t>, true>)
sizeof(lambda [] type at line 149720, col. 39)
sizeof(pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>)
sizeof(lambda [] type at line 172408, col. 60)
sizeof(lambda [] type at line 172363, col. 26)
sizeof(_Rb_tree_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>>)
sizeof(terminfo_mapping_t)
sizeof(input_mapping_t)
sizeof(_Sp_counted_ptr_inplace<const vector<input_mapping_t, allocator<input_mapping_t>>, allocator<vector<input_mapping_t, allocator<input_mapping_t>>>, _S_atomic>)
sizeof(lambda [] type at line 140078, col. 21)
sizeof(_Sp_counted_ptr_inplace<io_file_t, allocator<io_file_t>, _S_atomic>)
sizeof(_Sp_counted_deleter<io_fd_t *, default_delete<io_fd_t>, allocator<void>, _S_atomic>)
sizeof(_Sp_counted_deleter<io_close_t *, default_delete<io_close_t>, allocator<void>, _S_atomic>)
sizeof(_Sp_counted_ptr_inplace<io_bufferfill_t, allocator<io_bufferfill_t>, _S_atomic>)
sizeof(_Sp_counted_ptr_inplace<io_buffer_t, allocator<io_buffer_t>, _S_atomic>)
sizeof(_Sp_counted_ptr_inplace<promise<void>, allocator<promise<void>>, _S_atomic>)
sizeof(_Sp_counted_ptr_inplace<impl_t, allocator<impl_t>, _S_atomic>)
sizeof(work_request_t)
sizeof(work_request_t *)
sizeof(main_thread_request_t *)
sizeof(main_thread_request_t **)
sizeof(lambda [] type at line 100272, col. 26)
sizeof(_List_node<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>)
sizeof(comp_t)
sizeof(_Hash_node<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unsigned long>, true>)
sizeof(lambda [] type at line 148145, col. 25)
sizeof(lambda [] type at line 147997, col. 21)
sizeof(_Sp_counted_ptr_inplace<job_t, allocator<job_t>, _S_atomic>)
sizeof(_Sp_counted_ptr_inplace<parsed_source_t, allocator<parsed_source_t>, _S_atomic>)
sizeof(lambda [] type at line 147262, col. 29)
sizeof(lambda [] type at line 146894, col. 12)
sizeof(lambda [] type at line 152907, col. 29)
sizeof(lambda [] type at line 153223, col. 30)
sizeof(highlight_result_t)
sizeof(autosuggestion_result_t)
sizeof(shared_ptr<reader_data_t>)
sizeof(lambda [] type at line 148893, col. 28)
sizeof(lambda [] type at line 148892, col. 25)
sizeof(lambda [] type at line 161827, col. 12)
sizeof(lambda [] type at line 161456, col. 28)
sizeof(lambda [] type at line 161027, col. 12)
sizeof(lambda [] type at line 159687, col. 39)
sizeof(_Sp_counted_ptr_inplace<maybe_t<autosuggestion_result_t>, allocator<maybe_t<autosuggestion_result_t>>, _S_atomic>)
sizeof(_Sp_counted_ptr_inplace<maybe_t<highlight_result_t>, allocator<maybe_t<highlight_result_t>>, _S_atomic>)
sizeof(_Sp_counted_ptr_inplace<reader_data_t, allocator<reader_data_t>, _S_atomic>)
sizeof(lambda [] type at line 144529, col. 27)
sizeof(lambda [] type at line 144531, col. 13)
sizeof(_Hash_node<file_id_t, false>)
static_cast<bool>...
static_cast<int>...
static_cast<uint32_t>...
static_cast<source_offset_t>...
static_cast<const void *>...
static_cast<size_t>...
static_cast<int_type>...
static_cast<unsigned char>...
static_cast<size_type>...
static_cast<unsigned __int128>...
static_cast<__int128>...
static_cast<unsigned long long>...
static_cast<long long>...
static_cast<unsigned long>...
static_cast<long>...
static_cast<unsigned int>...
static_cast<unsigned short>...
static_cast<signed char>...
static_cast<char>...
static_cast<_WordT>...
static_cast<base_type_t>...
static_cast<wchar_t>...
static_cast<signed long>...
static_cast<completion_t *>...
static_cast<uint64_t>...
static_cast<uint_t>...
static_cast<dev_t>...
static_cast<ino_t>...
! ...
- ...
~ ...
Encountered while parsing:<<<\n%ls\n>>>
%ls: Expected %d args, got %d\n
%ls: Command not valid at an interactive prompt\n
%ls: Unknown option '%ls'\n
%ls: Not inside of loop\n
%d\n
(Type 'help %ls' for related documentation)\n
%ls: Expected argument for option %ls\n
%ls: Expected at least %d args, got %d\n
%ls: Expected at most %d args, got %d\n
%ls: Invalid --min-args value '%ls'\n
%ls: Invalid --max-args value '%ls'\n
%ls: No option specs were provided\n
%ls: Missing -- separator\n
%ls: An option spec must have a short flag letter\n
%ls: Short flag '%lc' invalid, must be alphanum or '#'\n
%ls: Long flag '%ls' already defined\n
%ls: Short flag '#' must be followed by '-' and a long name\n
%ls: Implicit int flag '%lc' already defined\n
%ls: Invalid option spec '%ls' at char '%lc'\n
%ls: Implicit int short flag '%lc' does not allow modifiers like '%lc'\n
%ls: Short flag '%lc' already defined\n
%ls: exclusive flag string '%ls' is not valid\n
%ls: exclusive flag '%ls' is not valid\n
%ls: Mutually exclusive flags '%ls' and `%ls` seen\n
%ls: There are no suitable jobs\n
%ls: '%ls' is not a valid job specifier\n
%ls: Could not find job '%d'\n
%ls: Can't put job %d, '%ls' to background because it is not under job control\n
Send job %d '%ls' to background\n
%ls: mode name '%ls' is not valid. See `help identifiers`.\n
%ls\n
%ls: Invalid combination of options,\n%ls\n
%ls: No binding found for key '%ls'\n
%ls: No binding found for sequence '%ls'\n
%ls: No key with name '%ls' found\n
%ls: Key with name '%ls' does not have any mapping\n
%ls: Unknown error trying to bind to key named '%ls'\n
%ls: Invalid state\n
%ls: Can not specify scope when removing block\n
%ls: No blocks defined\n
%ls: Could not find home directory\n
%ls: '%ls' is not a directory\n
%ls: The directory '%ls' does not exist\n
%ls: '%ls' is a rotten symlink\n
%ls: Unknown error trying to locate directory '%ls'\n
%ls: Permission denied: '%ls'\n
: Can not set commandline in non-interactive mode\n
%ls: Invalid combination of options\n
%ls: Too many arguments\n
%ls: Argument '%ls' is not a valid integer\n
%lu\n
%ls: Invalid token '%ls'\n
%ls: -s requires a non-empty string\n
%ls: -l requires a non-empty string\n
%ls: -o requires a non-empty string\n
\n%ls: 
%ls: Completion '%ls' contained a syntax error\n
%ls: maximum recursion depth reached\n
%ls: Key not specified\n
%ls: Unknown job '%ls'\n
%ls: job %d ('%ls') was stopped and has been signalled to continue.\n
%ls: expected event name\n
%ls: Ambiguous job\n
%ls: '%ls' is not a job\n
%ls: No suitable job: %d\n
%ls: Can't put job %d, '%ls' to foreground because it is not under job control\n
Send job %d, '%ls' to foreground\n
%ls: Variable name '%ls' is not valid. See `help identifiers`.\n
%ls: Expected exactly one function name\n
%ls: Function '%ls' does not exist\n
%ls %ls: Expected %d args, got %d\n
%ls: Expected generic | variable | signal | exit | job-id for --handlers-type\n
%ls: Expected exactly two names (current function name, and new function name)\n
%ls: Illegal function name '%ls'\n
%ls: Function '%ls' already exists. Cannot create copy '%ls'\n
# Defined in %ls @ line %d\n
\n    set -l %ls
end\n
builtin history delete only supports --exact\n
builtin history delete --exact requires --case-sensitive\n
%ls: you cannot use any options with the %ls command\n
%ls: '%ls' is not a valid process id\n
%ls: No suitable job: %ls\n
%ls: There are no jobs\n
Job\tGroup\t
CPU\t
State\tCommand\n
%d\t%d\t
%d%%\t
Group\n
Process\n
Command\n
%ls: Error: %s\n
'%ls'\n
%ls: Error: %ls\n
%*ls%ls\n
%ls: '%ls' is not a valid scale value\n
%ls: nothing to choose from\n
%ls: END must be greater than START\n
%ls: STEP must be a positive integer\n
%ls: range contains only one possible value\n
%lld\n
%ls: Options %ls and %ls cannot be used together\n
%ls: Variable can't be both exported and unexported\n
%ls: Variable scope can only be one of universal, global and local\n
%ls: usage of -i for --silent is deprecated. Please use -s or --silent instead.\n
%ls: Argument '%ls' is out of range\n
builtin %ls: %ls: %s\n
builtin %ls: Invalid path: %ls\n
%ls: Not inside of function\n
%ls: You provided %d indexes but %d values\n
%ls: Array index out of bounds\n
$%ls: invalid var name\n
%ls: `set --show` does not allow slices with the var names\n
$%ls: set in %ls scope, %ls,%ls with %d elements\n
$%ls[%d]: |%ls|\n
%ls: Invalid index starting at '%ls'\n
%ls: Tried to change the read-only variable '%ls'\n
%ls: Tried to modify the special variable '%ls' with the wrong scope\n
%ls: Tried to modify the special variable '%ls' to an invalid value\n
%ls: The variable '%ls' does not exist\n
"%ls: Warning: $%ls entry ""%ls"" is not valid (%s)\n"
%ls: Did you mean 'set %ls $%ls %ls'?\n
%ls: Universal variable '%ls' is shadowed by the global variable of the same name.\n
%ls: Erase needs a variable name\n
%ls: Unknown color '%ls'\n
%ls: Error encountered while sourcing file '%ls':\n
%ls: '%ls' is not a file\n
%ls: Error while reading file '%ls'\n
%ls: Subcommand '%ls' is not valid\n
This is a login shell\n
This is not a login shell\n
Job control: %ls\n
%ls: Invalid level value '%ls'\n
%ls\t%s\t%ls\t%ls\n
%ls: Invalid job control mode '%ls'\n
%ls: Expected a subcommand to follow the command\n
%ls: Expected an argument\n
%ls: Invalid start value '%ls'\n
%ls: Invalid count value '%ls'\n
%ls: Invalid max value '%ls'\n
%ls: Invalid length value '%ls'\n
%ls: Invalid range value for field '%ls'\n
%ls: Invalid fields value '%ls'\n
%ls: Invalid end value '%ls'\n
%ls: Invalid escape style '%ls'\n
%ls: Regular expression substitute error: %ls\n
1 %lu\n
%ls: Regular expression match error: %ls\n
%ls: Regular expression internal error\n
%ls: Regular expression compile error: %ls\n
%ls: %ls\n
%ls: %*ls\n
[: the last argument must be ']'\n
%ls: unexpected argument at index %lu: '%ls'\n
%ls: New limit cannot be an empty string\n
%ls: Invalid limit '%ls'\n
ulimit: Permission denied when changing resource of type '%ls'\n
unlimited\n
%ls: Could not find a job with process id '%d'\n
%ls: Could not find child processes with the name '%ls'\n
 \n\r\t
%ls-\n
<%lc> %ls: %ls\n
<%lc> %ls: %d: %ls\n
Backtrace:\n
\n \t
# This file contains fish universal variable definitions.\n
# VERSION: 3.0\n
Event %ls\n
%ls %ls\n
caller-exit %ls\n
Failed to fork %s!\n
\n\t\r
Could not open file %s\n
Error while reading file %ls\n
Debug enabled for category: %ls\n
%*ls %ls\n
%s, version %s\n
Running out of build directory, using paths relative to CMAKE_SOURCE_DIR:\n %s
determine_config_directory_paths() results:\npaths.data: %ls\npaths.sysconf: %ls\npaths.doc: %ls\npaths.bin: %ls
  rusage self:\n
      user time: %lld ms\n
       sys time: %lld ms\n
     total time: %lld ms\n
        max rss: %ld kb\n
        signals: %ld\n
%ls, version %s\n
Expected file path to read/write for -w:\n\n $ %ls -w foo.fish\n
"Opening ""%s"" failed: %s\n"
%lu,%lu,%s\n
\\n
Gap text should only have comments and newlines - instead found token type %d with text: %ls\n
Stdin must be attached to a tty.\n
Expected no arguments, got %d\n
"To terminate this program type ""exit"" or ""quit"" in this window,\n"
or press [ctrl-%c] or [ctrl-%c] twice in a row.\n
Press a key:\n
\nExiting at your request.\n
bind -k %ls 'do something'\n
hex: %4X  char: %ls\n
 'do something'\n
Press [ctrl-%c] again to exit\n
No commands given.\n
%s: Unknown command: %s\n
fish_test_helper: helper utility for fish\n\n
Commands\n
--------\n
  %s:\n    %s\n\n
%ld\n
stdout\n
stderr\n
Sent SIGINT to %d\n
foreground\n
background\n
become_foreground_then_print_stderr done\n
Failed to match debug category: %ls\n
\t\n\r 
"\""\n$"
  paths:\n
ignoring fish_escape_delay_ms: value '%ls' is not an integer or is < 10 or >= 5000 ms\n
pipe {%d} (input: %s) -> %d\n
Empty chain %p\n
Chain %p (%ld items):\n
\t(null)\n
\t%lu: fd:%d, 
file %d -> %d\n
FD map %d -> %d\n
close %d\n
bufferfill %d -> %d\n
switch: Expected at most one argument, got %lu\n
Unexpected block header: %ls\n
 \t\n\r
in command substitution\n
from sourcing file %ls\n
in event handler: %ls\n
\tcalled on line %d of file %ls\n
\tcalled during startup\n
> %ls\n
Time\tSum\tCommand\n
Could not show help message\n
terminal_give_to_job(): EPERM.\n
tcsetpgrp called but process group %d has terminated.\n
There are still jobs active:\n
\n   PID  Command\n
%6d  %ls\n
A second attempt to exit will terminate them.\n
Use 'disown PID' to remove jobs from the list without terminating them.\n
\n%ls
 \t\r\n
\n
%S\n
\n_______________________________\nExecuted in  %6.2F %s\n   usr time  %6.2F %s\n   sys time  %6.2F %s\n
\n________________________________________________________\nExecuted in  %6.2F %-*s    %-*s  %s\n   usr time  %6.2F %-*s  %6.2F %s  %6.2F %s\n   sys time  %6.2F %-*s  %6.2F %s  %6.2F %s\n
\t \r\n
%ls: Option '--%ls' doesn't allow an argument\n
%ls: Option '%lc%ls' doesn't allow an argument\n
%ls: Option '%ls' requires an argument\n
%ls: Option '%ls' is ambiguous\n
%ls: Unrecognized option '--%ls'\n
%ls: Unrecognized option '%lc%ls'\n
%ls: Invalid option -- %lc\n
%ls: Option requires an argument -- %lc\n
%s\n
