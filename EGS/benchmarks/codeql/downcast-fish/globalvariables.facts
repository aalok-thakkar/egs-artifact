piecewise_construct	piecewise_construct_t	piecewise_construct
debug_level	atomic<int>	debug_level
has_working_tty_timestamps	const bool	has_working_tty_timestamps
program_name	const wchar_t *	program_name
g_profiling_active	bool	g_profiling_active
shell_modes	termios	shell_modes
g_logger	owning_lock<logger_t>	g_logger
g_logger	owning_lock<logger_t>	g_logger
keyword_enum_map	const enum_map<parse_keyword_t>[]	keyword_enum_map
SOURCE_OFFSET_INVALID	source_offset_t	SOURCE_OFFSET_INVALID
nothrow	const nothrow_t	nothrow
getdate_err	int	getdate_err
timezone	long	timezone
daylight	int	daylight
tzname	char *[2]	tzname
__timezone	long	__timezone
__daylight	int	__daylight
__tzname	char *[2]	__tzname
__default_lock_policy	const _Lock_policy	__default_lock_policy
allocator_arg	allocator_arg_t	allocator_arg
_sys_errlist	const char *const[]	_sys_errlist
_sys_nerr	int	_sys_nerr
sys_errlist	const char *const[]	sys_errlist
sys_nerr	int	sys_nerr
stdout	FILE *	stdout
stdin	FILE *	stdin
stderr	FILE *	stderr
program_invocation_short_name	char *	program_invocation_short_name
program_invocation_name	char *	program_invocation_name
ignore	_Swallow_assign	ignore
_29	const _Placeholder<29>	_29
_28	const _Placeholder<28>	_28
_27	const _Placeholder<27>	_27
_26	const _Placeholder<26>	_26
_25	const _Placeholder<25>	_25
_24	const _Placeholder<24>	_24
_23	const _Placeholder<23>	_23
_22	const _Placeholder<22>	_22
_21	const _Placeholder<21>	_21
_20	const _Placeholder<20>	_20
_19	const _Placeholder<19>	_19
_18	const _Placeholder<18>	_18
_17	const _Placeholder<17>	_17
_16	const _Placeholder<16>	_16
_15	const _Placeholder<15>	_15
_14	const _Placeholder<14>	_14
_13	const _Placeholder<13>	_13
_12	const _Placeholder<12>	_12
_11	const _Placeholder<11>	_11
_10	const _Placeholder<10>	_10
_9	const _Placeholder<9>	_9
_8	const _Placeholder<8>	_8
_7	const _Placeholder<7>	_7
_6	const _Placeholder<6>	_6
_5	const _Placeholder<5>	_5
_4	const _Placeholder<4>	_4
_3	const _Placeholder<3>	_3
_2	const _Placeholder<2>	_2
_1	const _Placeholder<1>	_1
adopt_lock	adopt_lock_t	adopt_lock
try_to_lock	try_to_lock_t	try_to_lock
defer_lock	defer_lock_t	defer_lock
__once_callable	void *	__once_callable
__once_call	..(*)(..)	__once_call
optopt	int	optopt
opterr	int	opterr
optind	int	optind
optarg	char *	optarg
environ	char **	environ
environ	char **	environ
__environ	char **	__environ
g_guessed_fish_emoji_width	int	g_guessed_fish_emoji_width
g_fish_emoji_width	int	g_fish_emoji_width
g_fish_ambiguous_width	int	g_fish_ambiguous_width
term_has_xn	bool	term_has_xn
g_use_posix_spawn	bool	g_use_posix_spawn
curses_initialized	bool	curses_initialized
read_byte_limit	size_t	read_byte_limit
kInvalidFileID	const file_id_t	kInvalidFileID
sys_siglist	const char *const[65]	sys_siglist
_sys_siglist	const char *const[65]	_sys_siglist
token_enum_map	const enum_map<parse_token_type_t>[]	token_enum_map
invalid_generation	generation_t	invalid_generation
kAutoloadStalenessInterval	const int	kAutoloadStalenessInterval
builtin_datas	const builtin_data_t[]	builtin_datas
help_builtins	const wchar_t *const[]	help_builtins
short_options	const wchar_t *const	short_options
long_options	const woption[]	long_options
var_name_prefix	const wcstring	var_name_prefix
short_options	const wchar_t *const	short_options
long_options	const woption[]	long_options
short_options	const wchar_t *const	short_options
long_options	const woption[]	long_options
short_options	const wchar_t *const	short_options
long_options	const woption[]	long_options
short_options	const wchar_t *const	short_options
long_options	const woption[]	long_options
short_options	const wchar_t *const	short_options
long_options	const woption *const	long_options
short_options	const wchar_t *const	short_options
long_options	const woption[]	long_options
short_options	const wchar_t *const	short_options
long_options	const woption[]	long_options
short_options	const wchar_t *const	short_options
long_options	const woption[]	long_options
hist_enum_map	const enum_map<hist_cmd_t>[]	hist_enum_map
short_options	const wchar_t *const	short_options
long_options	const woption[]	long_options
signgam	int	signgam
kMaximumContiguousInteger	double	kMaximumContiguousInteger
short_options	const wchar_t *const	short_options
long_options	const woption[]	long_options
kDefaultScale	int	kDefaultScale
short_options	const wchar_t *const	short_options
long_options	const woption[]	long_options
short_options	const wchar_t *const	short_options
long_options	const woption[]	long_options
short_options	const wchar_t *const	short_options
long_options	const woption[]	long_options
short_options	const wchar_t *const	short_options
long_options	const woption[]	long_options
path_variables	const wchar_t *const[]	path_variables
_nc_wacs	cchar_t *	_nc_wacs
TABSIZE	int	TABSIZE
LINES	int	LINES
ESCDELAY	int	ESCDELAY
COLS	int	COLS
COLOR_PAIRS	int	COLOR_PAIRS
COLORS	int	COLORS
ttytype	char[]	ttytype
stdscr	WINDOW *	stdscr
newscr	WINDOW *	newscr
curscr	WINDOW *	curscr
acs_map	chtype[]	acs_map
strfnames	const char *const[]	strfnames
strcodes	const char *const[]	strcodes
strnames	const char *const[]	strnames
numfnames	const char *const[]	numfnames
numcodes	const char *const[]	numcodes
numnames	const char *const[]	numnames
boolfnames	const char *const[]	boolfnames
boolcodes	const char *const[]	boolcodes
boolnames	const char *const[]	boolnames
cur_term	TERMINAL *	cur_term
short_options	const wchar_t *const	short_options
long_options	const woption[]	long_options
status_enum_map	const enum_map<status_cmd_t>[]	status_enum_map
short_options	const wchar_t *const	short_options
long_options	const woption[]	long_options
string_subcommands	const string_subcommand[]	string_subcommands
long_options	const woption[]	long_options
flag_to_function	const unordered_map<char, ..(..), hash<char>, equal_to<char>, allocator<pair<const char, ..(..)>>>	flag_to_function
resource_arr	const resource_t[]	resource_arr
named_colors	const vector<named_color_t, allocator<named_color_t>>	named_colors
is_forked_proc	relaxed_atomic_bool_t	is_forked_proc
thread_asserts_cfg_for_testing	relaxed_atomic_bool_t	thread_asserts_cfg_for_testing
initial_fg_process_group	relaxed_atomic_t<int>	initial_fg_process_group
level_char	const wchar_t[]	level_char
debug_stack_frames	relaxed_atomic_t<int>	debug_stack_frames
ellipsis_char	relaxed_atomic_t<wchar_t>	ellipsis_char
ellipsis_str	relaxed_atomic_t<const wchar_t *>	ellipsis_str
omitted_newline_str	relaxed_atomic_t<const wchar_t *>	omitted_newline_str
omitted_newline_width	relaxed_atomic_t<int>	omitted_newline_width
obfuscation_read_char	relaxed_atomic_t<wchar_t>	obfuscation_read_char
wrapper_map	owning_lock<unordered_map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, vector<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, allocator<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>>>	wrapper_map
completion_autoloader	owning_lock<autoload_t>	completion_autoloader
s_completion_set	owning_lock<unordered_set<completion_entry_t, hash<completion_entry_t>, equal_to<completion_entry_t>, allocator<completion_entry_t>>>	s_completion_set
k_complete_order	atomic<unsigned int>	k_complete_order
s_setenv_lock	mutex	s_setenv_lock
PATH_ARRAY_SEP	wchar_t	PATH_ARRAY_SEP
s_universal_variables	latch_t<env_universal_t>	s_universal_variables
electric_variables	const vector<electric_var_t, allocator<electric_var_t>>	electric_variables
NONPATH_ARRAY_SEP	wchar_t	NONPATH_ARRAY_SEP
env_lock	mutex	env_lock
can_set_term_title	relaxed_atomic_bool_t	can_set_term_title
locale_variables	const wcstring_list_t	locale_variables
_nl_msg_cat_cntr	int	_nl_msg_cat_cntr
curses_variables	const wcstring_list_t	curses_variables
title_terms	const wchar_t *const[]	title_terms
s_var_dispatch_table	latch_t<const var_dispatch_table_t>	s_var_dispatch_table
in6addr_loopback	const in6_addr	in6addr_loopback
in6addr_any	const in6_addr	in6addr_any
ENV_NULL	const wchar_t *const	ENV_NULL
UVAR_ARRAY_SEP	const wchar_t	UVAR_ARRAY_SEP
SETUVAR	const char *	SETUVAR
EXPORT	const char *	EXPORT
PATH	const char *	PATH
k_max_read_size	size_t	k_max_read_size
SET_EXPORT	const char *	SET_EXPORT
SET	const char *	SET
s_event_handlers	owning_lock<vector<shared_ptr<event_handler_t>, allocator<shared_ptr<event_handler_t>>>>	s_event_handlers
events_mapping	const event_type_name_t[]	events_mapping
s_pending_signals	pending_signals_t	s_pending_signals
s_observed_signals	volatile sig_atomic_t[65]	s_observed_signals
s_fork_count	relaxed_atomic_t<int>	s_fork_count
widechar_ascii_table	const widechar_range[]	widechar_ascii_table
widechar_private_table	const widechar_range[]	widechar_private_table
widechar_nonprint_table	const widechar_range[]	widechar_nonprint_table
widechar_combining_table	const widechar_range[]	widechar_combining_table
widechar_doublewide_table	const widechar_range[]	widechar_doublewide_table
widechar_ambiguous_table	const widechar_range[]	widechar_ambiguous_table
widechar_unassigned_table	const widechar_range[]	widechar_unassigned_table
widechar_widened_table	const widechar_range[]	widechar_widened_table
kUsecPerSec	uint64_t	kUsecPerSec
kUsecPerMsec	uint64_t	kUsecPerMsec
s_profiling_output_filename	const char *	s_profiling_output_filename
dump_parse_tree	bool	dump_parse_tree
ret	int	ret
ctrl_symbolic_names	const wchar_t *[]	ctrl_symbolic_names
s_commands	fth_command_t[]	s_commands
FISH_BUILD_VERSION	const char *const	FISH_BUILD_VERSION
s_all_categories	vector<category_t *, allocator<category_t *>>	s_all_categories
function_set	owning_lock<function_set_t>	function_set
global_features	features_t	global_features
private_mode	relaxed_atomic_bool_t	private_mode
s_histories	owning_lock<map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>, less<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, unique_ptr<history_t, default_delete<history_t>>>>>>	s_histories
history_file_mode	int	history_file_mode
max_save_tries	int	max_save_tries
input_function_metadata	const input_function_metadata_t[]	input_function_metadata
input_function_count	size_t	input_function_count
s_input_initialized	relaxed_atomic_bool_t	s_input_initialized
s_terminfo_mappings	latch_t<vector<terminfo_mapping_t, allocator<terminfo_mapping_t>>>	s_terminfo_mappings
k_nul_mapping_name	const wchar_t *	k_nul_mapping_name
wait_on_escape_ms	int	wait_on_escape_ms
interrupt_handler	interrupt_func_t	interrupt_handler
string_table	owning_lock<vector<const wchar_t *, allocator<const wchar_t *>>>	string_table
s_main_thread_request_queue	owning_lock<queue<main_thread_request_t *, deque<main_thread_request_t *, allocator<main_thread_request_t *>>>>	s_main_thread_request_queue
s_main_thread_performer_lock	mutex	s_main_thread_performer_lock
s_main_thread_performer_cond	condition_variable	s_main_thread_performer_cond
s_result_queue	owning_lock<queue<function<..(..)>, deque<function<..(..)>, allocator<function<..(..)>>>>>	s_result_queue
s_io_thread_pool	thread_pool_t	s_io_thread_pool
kill_list	kill_list_t	kill_list
s_tputs_receiver_lock	mutex	s_tputs_receiver_lock
s_tputs_receiver	outputter_t *	s_tputs_receiver
color_support	color_support_t	color_support
var_err_len	int	var_err_len
forbidden_pipe_commands	const wchar_t *const[]	forbidden_pipe_commands
subcommand_keywords	const wcstring[]	subcommand_keywords
skip_keywords	const wcstring[]	skip_keywords
block_keywords	const string_set_t	block_keywords
reserved_keywords	const wcstring[]	reserved_keywords
dflt_pathsv	const wcstring_list_t	dflt_pathsv
s_is_within_fish_initialization	atomic<bool>	s_is_within_fish_initialization
crashsignals	const int[]	crashsignals
s_disowned_pids	owning_lock<vector<int, allocator<int>>>	s_disowned_pids
locked_consumed_job_ids	owning_lock<vector<int, allocator<int>>> *const	locked_consumed_job_ids
job_control_mode	relaxed_atomic_t<job_control_t>	job_control_mode
s_no_exec	relaxed_atomic_bool_t	s_no_exec
s_is_login	relaxed_atomic_bool_t	s_is_login
s_is_interactive_session	relaxed_atomic_t<session_interactivity_t>	s_is_interactive_session
run_count	relaxed_atomic_t<unsigned long>	run_count
reader_data_stack	vector<shared_ptr<reader_data_t>, allocator<shared_ptr<reader_data_t>>>	reader_data_stack
s_end_current_loop	relaxed_atomic_bool_t	s_end_current_loop
s_pending_exit_forced	volatile sig_atomic_t	s_pending_exit_forced
terminal_mode_on_startup	termios	terminal_mode_on_startup
tty_modes_for_external_cmds	termios	tty_modes_for_external_cmds
interrupted	volatile sig_atomic_t	interrupted
s_exit_forced	volatile sig_atomic_t	s_exit_forced
s_generation	atomic<unsigned int>	s_generation
READAHEAD_MAX	size_t	READAHEAD_MAX
insane	relaxed_atomic_bool_t	insane
signal_table	const lookup_entry[]	signal_table
s_cancellation_signal	volatile sig_atomic_t	s_cancellation_signal
s_main_pid	const pid_t	s_main_pid
s_tty_termsize_gen_count	volatile uint32_t	s_tty_termsize_gen_count
active_timers	vector<timer_snapshot_t, allocator<timer_snapshot_t>>	active_timers
functions	const te_builtin[]	functions
s_principal	topic_monitor_t *const	s_principal
VAR_fish_trace	const wcstring	VAR_fish_trace
wgettext_map	owning_lock<unordered_map<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, hash<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, equal_to<basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>, allocator<pair<const basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>, basic_string<wchar_t, char_traits<wchar_t>, allocator<wchar_t>>>>>>	wgettext_map
