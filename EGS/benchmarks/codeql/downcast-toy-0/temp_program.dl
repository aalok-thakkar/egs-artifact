.type EXPR
.type STR
.type LOC
.type TYPE
.type KIND
.type PATH
.type NUM
.type COMMENT

.decl Rule(v0: number)
.input Rule

.decl affectedbymacroexpansion(v0: EXPR, v1: EXPR)
.input affectedbymacroexpansion

.decl arraysizes(v0: EXPR, v1: NUM, v2: NUM, v3: NUM)
.input arraysizes

.decl attribute_args(v0: EXPR, v1: NUM, v2: STR, v3: NUM, v4: LOC)
.input attribute_args

.decl attribute_arg_value(v0: EXPR, v1: STR)
.input attribute_arg_value

.decl attributes(v0: EXPR, v1: NUM, v2: STR, v3: STR, v4: LOC)
.input attributes

.decl blockscope(v0: EXPR, v1: LOC, v2: EXPR)
.input blockscope

.decl builtintypes(v0: EXPR, v1: STR, v2: NUM, v3: NUM, v4: NUM, v5: NUM)
.input builtintypes

.decl commentbinding(v0: COMMENT, v1: EXPR)
.input commentbinding

.decl comments(v0: COMMENT, v1: STR, v2: LOC)
.input comments

.decl compgenerated(v0: TYPE)
.input compgenerated

.decl containerparent(v0: EXPR, v1: EXPR)
.input containerparent

.decl derivedtypes(v0: EXPR, v1: STR, v2: NUM, v3: TYPE)
.input derivedtypes

.decl enumconstants(v0: EXPR, v1: EXPR, v2: NUM, v3: TYPE, v4: STR, v5: LOC)
.input enumconstants

.decl expr_isload(v0: EXPR, v1: LOC)
.input expr_isload

.decl exprparents(v0: EXPR, v1: LOC, v2: NUM, v3: EXPR)
.input exprparents

.decl falsecond(v0: EXPR, v1: LOC, v2: EXPR, v3: LOC)
.input falsecond

.decl fieldoffsets(v0: EXPR, v1: NUM, v2: NUM)
.input fieldoffsets

.decl fileannotations(v0: PATH, v1: NUM, v2: STR, v3: STR)
.input fileannotations

.decl files(v0: PATH, v1: STR, v2: STR, v3: STR, v4: NUM)
.input files

.decl folders(v0: PATH, v1: STR, v2: STR)
.input folders

.decl for_body(v0: EXPR, v1: LOC, v2: EXPR, v3: LOC)
.input for_body

.decl for_condition(v0: EXPR, v1: LOC, v2: EXPR, v3: LOC)
.input for_condition

.decl for_initialization(v0: EXPR, v1: LOC, v2: EXPR, v3: LOC)
.input for_initialization

.decl for_update(v0: EXPR, v1: LOC, v2: EXPR, v3: LOC)
.input for_update

.decl funbind(v0: EXPR, v1: LOC, v2: EXPR)
.input funbind

.decl funcattributes(v0: EXPR, v1: STR)
.input funcattributes

.decl function_entry_point(v0: EXPR, v1: EXPR, v2: LOC)
.input function_entry_point

.decl function_return_type(v0: EXPR, v1: LOC, v2: TYPE)
.input function_return_type

.decl functions(v0: EXPR, v1: LOC, v2: STR, v3: NUM)
.input functions

.decl fun_decls(v0: EXPR, v1: LOC, v2: EXPR, v3: TYPE, v4: STR, v5: LOC)
.input fun_decls

.decl fun_decl_specifiers(v0: EXPR, v1: LOC, v2: STR)
.input fun_decl_specifiers

.decl fun_def(v0: EXPR)
.input fun_def

.decl funspecifiers(v0: EXPR, v1: EXPR)
.input funspecifiers

.decl globalvariables(v0: EXPR, v1: TYPE, v2: STR)
.input globalvariables

.decl if_then(v0: EXPR, v1: LOC, v2: EXPR, v3: LOC)
.input if_then

.decl includes(v0: EXPR, v1: PATH)
.input includes

.decl initialisers(v0: EXPR, v1: EXPR, v2: EXPR, v3: LOC)
.input initialisers

.decl inmacroexpansion(v0: EXPR, v1: EXPR)
.input inmacroexpansion

.decl iscall(v0: EXPR, v1: LOC, v2: NUM)
.input iscall

.decl is_complete(v0: EXPR)
.input is_complete

.decl is_pod_class(v0: EXPR)
.input is_pod_class

.decl is_standard_layout_class(v0: EXPR)
.input is_standard_layout_class

.decl link_parent(v0: EXPR, v1: STR)
.input link_parent

.decl link_targets(v0: STR, v1: STR)
.input link_targets

.decl localvariables(v0: EXPR, v1: LOC, v2: TYPE, v3: STR)
.input localvariables

.decl locations_default(v0: LOC, v1: PATH, v2: NUM, v3: NUM, v4: NUM, v5: NUM)
.input locations_default

.decl locations_expr(v0: LOC, v1: PATH, v2: NUM, v3: NUM, v4: NUM, v5: NUM)
.input locations_expr

.decl locations_stmt(v0: LOC, v1: PATH, v2: NUM, v3: NUM, v4: NUM, v5: NUM)
.input locations_stmt

.decl macro_argument_expanded(v0: EXPR, v1: NUM, v2: STR)
.input macro_argument_expanded

.decl macro_argument_unexpanded(v0: EXPR, v1: NUM, v2: STR)
.input macro_argument_unexpanded

.decl macroinvocations(v0: EXPR, v1: EXPR, v2: LOC, v3: NUM)
.input macroinvocations

.decl macrolocationbind(v0: EXPR, v1: LOC)
.input macrolocationbind

.decl macroparent(v0: EXPR, v1: EXPR)
.input macroparent

.decl mangled_name(v0: TYPE)
.input mangled_name

.decl membervariables(v0: EXPR, v1: TYPE, v2: STR)
.input membervariables

.decl namespaces(v0: EXPR, v1: EXPR)
.input namespaces

.decl numlines(v0: EXPR, v1: NUM, v2: NUM, v3: NUM)
.input numlines

.decl param_decl_bind(v0: EXPR, v1: LOC, v2: NUM, v3: EXPR, v4: LOC)
.input param_decl_bind

.decl params(v0: EXPR, v1: LOC, v2: EXPR, v3: NUM, v4: TYPE)
.input params

.decl pointerishsize(v0: EXPR, v1: NUM, v2: NUM)
.input pointerishsize

.decl preprocdirects(v0: EXPR, v1: NUM, v2: LOC)
.input preprocdirects

.decl preprocfalse(v0: EXPR)
.input preprocfalse

.decl preprocpair(v0: EXPR, v1: EXPR)
.input preprocpair

.decl preproctext(v0: EXPR, v1: EXPR, v2: EXPR)
.input preproctext

.decl preproctrue(v0: EXPR)
.input preproctrue

.decl routinetypeargs(v0: EXPR, v1: LOC, v2: NUM, v3: TYPE)
.input routinetypeargs

.decl routinetypes(v0: EXPR, v1: LOC, v2: TYPE)
.input routinetypes

.decl sizeof_bind(v0: EXPR, v1: TYPE)
.input sizeof_bind

.decl specialnamequalifyingelements(v0: EXPR, v1: STR)
.input specialnamequalifyingelements

.decl specifiers(v0: EXPR, v1: STR)
.input specifiers

.decl stmt_decl_bind(v0: EXPR, v1: LOC, v2: NUM, v3: EXPR)
.input stmt_decl_bind

.decl stmt_decl_entry_bind(v0: EXPR, v1: LOC, v2: NUM, v3: EXPR)
.input stmt_decl_entry_bind

.decl stmtparents(v0: EXPR, v1: LOC, v2: NUM, v3: EXPR, v4: LOC)
.input stmtparents

.decl stmts(v0: EXPR, v1: NUM, v2: LOC)
.input stmts

.decl successors(v0: EXPR, v1: LOC, v2: EXPR, v3: LOC)
.input successors

.decl truecond(v0: EXPR, v1: LOC, v2: EXPR, v3: LOC)
.input truecond

.decl typeattributes(v0: TYPE, v1: EXPR)
.input typeattributes

.decl type_decls(v0: EXPR, v1: TYPE, v2: LOC)
.input type_decls

.decl type_decl_top(v0: EXPR)
.input type_decl_top

.decl typedefbase(v0: TYPE, v1: TYPE)
.input typedefbase

.decl type_def(v0: EXPR, v1: STR, v2: LOC)
.input type_def

.decl type_mentions(v0: EXPR, v1: TYPE, v2: LOC, v3: KIND)
.input type_mentions

.decl typespecifiers(v0: TYPE, v1: STR)
.input typespecifiers

.decl unspecifiedtype(v0: TYPE, v1: TYPE)
.input unspecifiedtype

.decl usertypes(v0: TYPE, v1: STR, v2: NUM)
.input usertypes

.decl usertypesize(v0: TYPE, v1: NUM, v2: NUM)
.input usertypesize

.decl valuebind(v0: EXPR)
.input valuebind

.decl values(v0: EXPR, v1: LOC, v2: STR, v3: STR)
.input values

.decl valuetext(v0: EXPR)
.input valuetext

.decl varbind(v0: EXPR, v1: EXPR)
.input varbind

.decl var_decls(v0: EXPR, v1: EXPR, v2: TYPE, v3: STR, v4: LOC)
.input var_decls

.decl var_decl_specifiers(v0: EXPR, v1: LOC, v2: STR)
.input var_decl_specifiers

.decl var_def(v0: EXPR)
.input var_def

.decl varspecifiers(v0: EXPR, v1: STR)
.input varspecifiers

.decl exprconv(v0: EXPR, v1: LOC, v2: EXPR, v3: LOC)
.input exprconv

.decl expr_types(v0: EXPR, v1: LOC, v2: TYPE, v3: NUM)
.input expr_types

.decl exprs(v0: EXPR, v1: NUM, v2: LOC)
.input exprs

.decl conversionkinds(v0: EXPR, v1: LOC, v2: NUM)
.input conversionkinds

.decl float_types(v0: TYPE)
.input float_types

.decl integral_types(v0: TYPE)
.input integral_types

.decl dangerous_downcasts(v0: LOC, v1: TYPE, v2: TYPE)
.output dangerous_downcasts

.decl inv0(v0: EXPR, v1: LOC, v2: EXPR, v3: TYPE, v4: STR, v5: LOC)
.output inv0

.decl inv1(v0: EXPR, v1: LOC, v2: EXPR, v3: LOC)
.output inv1

.decl inv2(v0: EXPR, v1: LOC, v2: EXPR, v3: LOC)
.output inv2

dangerous_downcasts(x0, x1, x2) :- expr_types(x5, x0, x2, x4), float_types(x1), expr_types(x3, x14, x2, x4), exprconv(x8, x16, x3, x0), integral_types(x2), Rule(633886).
